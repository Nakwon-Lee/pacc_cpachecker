scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-4.2-rc1/linux-4.2-rc1.tar.xz-08_1a-drivers--net--wireless--b43--b43.ko-entry_point_true-unreach-call.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_ireow_9m/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 28193: Dead code detected: assert_sizes(); (CFACreationUtils.addEdgeToCFA, INFO)

line 30003: Dead code detected: i = 0; (CFACreationUtils.addEdgeToCFA, INFO)

line 34348: Dead code detected: assert_sizes(); (CFACreationUtils.addEdgeToCFA, INFO)

line 45116: Dead code detected: __ms = 2UL; (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 66715: Function pointer *(dev->dev->block_read) with type void (*)(struct b43_bus_dev *, void *, size_t , u16 , u8 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 66725: Function pointer *(dev->dev->block_write) with type void (*)(struct b43_bus_dev *, const void *, size_t , u16 , u8 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 10554: Function pointer *(wldev->dev->bus_powerup) with type int (*)(struct b43_bus_dev *, bool ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 43245: Function pointer *(dev->phy.ops->phy_maskset) with type void (*)(struct b43_wldev *, u16 , u16 , u16 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 43281: Function pointer *(dev->phy.ops->phy_maskset) with type void (*)(struct b43_wldev *, u16 , u16 , u16 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 43185: Function pointer *(dev->phy.ops->phy_read) with type u16 (*)(struct b43_wldev *, u16 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 43263: Function pointer *(dev->phy.ops->phy_maskset) with type void (*)(struct b43_wldev *, u16 , u16 , u16 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 43470: Function pointer *(phy->ops->recalc_txpower) with type enum b43_txpwr_result (*)(struct b43_wldev *, bool ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 43091: Function pointer *(dev->phy.ops->radio_read) with type u16 (*)(struct b43_wldev *, u16 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 43113: Function pointer *(dev->phy.ops->radio_write) with type void (*)(struct b43_wldev *, u16 , u16 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 10590: Function pointer *(dev->dev->read16) with type u16 (*)(struct b43_bus_dev *, u16 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 10628: Function pointer *(dev->dev->read32) with type u32 (*)(struct b43_bus_dev *, u16 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 10599: Function pointer *(dev->dev->write16) with type void (*)(struct b43_bus_dev *, u16 , u16 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 10637: Function pointer *(dev->dev->write32) with type void (*)(struct b43_bus_dev *, u16 , u32 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 10325: Function pointer *(core->bus->ops->aread32) with type u32 (*)(struct bcma_device *, u16 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 10334: Function pointer *(core->bus->ops->awrite32) with type void (*)(struct bcma_device *, u16 , u32 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 21862: Function pointer *(core->bus->ops->block_read) with type void (*)(struct bcma_device *, void *, size_t , u16 , u8 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 21872: Function pointer *(core->bus->ops->block_write) with type void (*)(struct bcma_device *, const void *, size_t , u16 , u8 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 21843: Function pointer *(core->bus->ops->read16) with type u16 (*)(struct bcma_device *, u16 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 10307: Function pointer *(core->bus->ops->read32) with type u32 (*)(struct bcma_device *, u16 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 21852: Function pointer *(core->bus->ops->write16) with type void (*)(struct bcma_device *, u16 , u16 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 10316: Function pointer *(core->bus->ops->write32) with type void (*)(struct bcma_device *, u16 , u32 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 63666-63667: Function pointer *(ops->map_page) with type dma_addr_t (*)(struct device *, struct page *, unsigned long, size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 63786: Function pointer *(ops->mapping_error) with type int (*)(struct device *, dma_addr_t ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 63733: Function pointer *(ops->sync_single_for_cpu) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 63766: Function pointer *(ops->sync_single_for_device) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 65638-65639: Function pointer *(ops->fill_descriptor) with type void (*)(struct b43_dmaring *, struct b43_dmadesc_generic *, dma_addr_t , u16 , int, int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 65675-65676: Function pointer *(ops->fill_descriptor) with type void (*)(struct b43_dmaring *, struct b43_dmadesc_generic *, dma_addr_t , u16 , int, int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 63700: Function pointer *(ops->unmap_page) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 64749-64750: Function pointer *(ring->ops->fill_descriptor) with type void (*)(struct b43_dmaring *, struct b43_dmadesc_generic *, dma_addr_t , u16 , int, int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 21813: Function pointer *(dev->ops->block_read) with type void (*)(struct ssb_device *, void *, size_t , u16 , u8 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 21823: Function pointer *(dev->ops->block_write) with type void (*)(struct ssb_device *, const void *, size_t , u16 , u8 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 21794: Function pointer *(dev->ops->read16) with type u16 (*)(struct ssb_device *, u16 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 10278: Function pointer *(dev->ops->read32) with type u32 (*)(struct ssb_device *, u16 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 21803: Function pointer *(dev->ops->write16) with type void (*)(struct ssb_device *, u16 , u16 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 10287: Function pointer *(dev->ops->write32) with type void (*)(struct ssb_device *, u16 , u32 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

line 20688: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp = ldv_init_zalloc(6UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 20692: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___1 = ldv_init_zalloc(16UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 20696: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___3 = ldv_init_zalloc(296UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 20698: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___4 = ldv_init_zalloc(296UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 20700: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___5 = ldv_init_zalloc(296UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 20706: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___8 = ldv_init_zalloc(10UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 20718: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___14 = ldv_init_zalloc(296UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 20722: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___16 = ldv_init_zalloc(8UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 20724: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___17 = ldv_init_zalloc(296UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 20728: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___19 = ldv_init_zalloc(216UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 20732: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___21 = ldv_init_zalloc(296UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 20736: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___23 = ldv_init_zalloc(216UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 20738: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___24 = ldv_init_zalloc(64UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 20740: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___25 = ldv_init_zalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ieee80211_alloc_hw_nm to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 18530: Ignoring parameters passed as varargs to function b43err: b43err((struct b43_wl *)0, "Could not allocate ieee80211 device\n") (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

Assuming external function __init_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function lockdep_init_map to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ieee80211_free_hw to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 10554: Ignoring function call through function pointer *(wldev->dev->bus_powerup): tmp = (*(wldev->dev->bus_powerup))(wldev->dev, (int)dynamic_pctl); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 18310: Ignoring parameters passed as varargs to function b43err: b43err(wl, "Bus powerup failed\n") (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 71416: Ignoring parameters passed as varargs to function b43err: b43err(dev->wl, "debugfs: add device OOM\n") (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

Assuming external function ldv__builtin_va_start to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv__builtin_va_end to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function net_ratelimit to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 71426: Ignoring parameters passed as varargs to function b43err: b43err(dev->wl, "debugfs: add device txstatus OOM\n") (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

Assuming external function snprintf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function debugfs_create_dir to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 71447: Ignoring parameters passed as varargs to function b43err: b43err(dev->wl, "debugfs: cannot create %s directory\n", (char *)(&devdir)) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

line 71445: Ignoring parameters passed as varargs to function b43dbg: b43dbg(dev->wl, "DebugFS (CONFIG_DEBUG_FS) not enabled in kernel config\n") (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

Assuming external function debugfs_create_file to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function debugfs_create_bool to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 12599: Ignoring function call through function pointer *(dev->phy.ops->switch_analog): (*(dev->phy.ops->switch_analog))(dev, 1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 10628: Ignoring function call through function pointer *(dev->dev->read32): tmp = (*(dev->dev->read32))(dev->dev, (int)offset); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 10637: Ignoring function call through function pointer *(dev->dev->write32): (*(dev->dev->write32))(dev->dev, (int)offset, value); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 10590: Ignoring function call through function pointer *(dev->dev->read16): tmp = (*(dev->dev->read16))(dev->dev, (int)offset); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

lines 17196-17197: Ignoring parameters passed as varargs to function b43err: b43err(dev->wl, "FOUND UNSUPPORTED PHY (Analog %u, Type %d (%s), Revision %u)\n", (int)analog_type, (int)phy_type, tmp___1, (int)phy_rev) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

Assuming external function ssb_device_is_enabled to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ssb_bus_may_powerdown to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function bcma_core_is_enabled to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 18356: Ignoring parameters passed as varargs to function b43warn: b43warn(wl, "5 GHz band is unsupported on this PHY\n") (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

line 18363: Ignoring parameters passed as varargs to function b43err: b43err(wl, "b43 can\'t support any band on this device\n") (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

line 42847: Ignoring function call through function pointer *(phy->ops->allocate): err = (*(phy->ops->allocate))(dev); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 15778: Ignoring parameters passed as varargs to function b43err: b43err(dev->wl, "Failed to validate the chipaccess\n") (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

line 42861: Ignoring function call through function pointer *(dev->phy.ops->free): (*(dev->phy.ops->free))(dev); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function __might_sleep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 10599: Ignoring function call through function pointer *(dev->dev->write16): (*(dev->dev->write16))(dev->dev, (int)offset, (int)value); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 43076: Ignoring parameters passed as varargs to function b43dbg: b43dbg(dev->wl, "PHY/RADIO register access with enabled MAC.\n") (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

line 43185: Ignoring function call through function pointer *(dev->phy.ops->phy_read): tmp = (*(dev->phy.ops->phy_read))(dev, (int)reg); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

lines 15030-15031: Ignoring parameters passed as varargs to function b43err: b43err(dev->wl, "b43_mac_enable(): The firmware should be suspended, but current state is %u\n", (int)fwstate) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

line 43281: Ignoring function call through function pointer *(dev->phy.ops->phy_maskset): (*(dev->phy.ops->phy_maskset))(dev, (int)offset, (int)mask, (int)set); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 43263: Ignoring function call through function pointer *(dev->phy.ops->phy_maskset): (*(dev->phy.ops->phy_maskset))(dev, (int)offset, 65535, (int)set); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 43245: Ignoring function call through function pointer *(dev->phy.ops->phy_maskset): (*(dev->phy.ops->phy_maskset))(dev, (int)offset, (int)mask, 0); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function dump_stack to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function msleep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 54826: Ignoring parameters passed as varargs to function b43err: b43err(dev->wl, "PR41573 failed. Out of memory!\n") (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

line 43113: Ignoring function call through function pointer *(dev->phy.ops->radio_write): (*(dev->phy.ops->radio_write))(dev, (int)reg, (int)value); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function ssb_pmu_set_ldo_paref to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ssb_pmu_set_ldo_voltage to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 15117: Ignoring parameters passed as varargs to function b43err: b43err(dev->wl, "MAC suspend failed\n") (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

Assuming external function mutex_lock_nested to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 13523: Ignoring parameters passed as varargs to function b43err: b43err(dev->wl, "MAC transmission error\n") (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

line 13529: Ignoring parameters passed as varargs to function b43err: b43err(dev->wl, "PHY transmission error\n") (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

lines 13545-13547: Ignoring parameters passed as varargs to function b43err: b43err(dev->wl, "Fatal DMA error: 0x%08X, 0x%08X, 0x%08X, 0x%08X, 0x%08X, 0x%08X\n", dma_reason[0], dma_reason[1], dma_reason[2], dma_reason[3], dma_reason[4], dma_reason[5]) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

line 13548: Ignoring parameters passed as varargs to function b43err: b43err(dev->wl, "This device does not support DMA on your system. It will now be switched to PIO.\n") (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

line 18826: Ignoring parameters passed as varargs to function b43info: b43info(dev->wl, "Controller RESET (%s) ...\n", reason) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

Assuming external function ieee80211_queue_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 13587: Ignoring parameters passed as varargs to function b43warn: b43warn(dev->wl, "RX descriptor underrun\n") (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

Assuming external function memcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 65573: Ignoring parameters passed as varargs to function b43dbg: b43dbg(dev->wl, "TX-status contains invalid cookie: 0x%04X\n", (int)cookie) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

Assuming external function round_jiffies to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 43470: Ignoring function call through function pointer *(phy->ops->recalc_txpower): result = (*(phy->ops->recalc_txpower))(dev, (flags & 2U) != 0U); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 65976: Ignoring function call through function pointer *(ops->idx2desc): (*(ops->idx2desc))(ring, slot, &meta); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

lines 65981-65982: Ignoring parameters passed as varargs to function b43dbg: b43dbg(dev->wl, "Poisoned TX slot %d (first=%d) on ring %d\n", slot, firstused, ring->index) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

Assuming external function ieee80211_wake_queue to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 66071: Ignoring parameters passed as varargs to function b43dbg: b43dbg(dev->wl, "Woke up TX ring %d\n", ring->index) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

line 63700: Ignoring function call through function pointer *(ops->unmap_page): (*(ops->unmap_page))(dev, addr, size, dir, attrs); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function debug_dma_unmap_page to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

lines 66029-66030: Ignoring parameters passed as varargs to function b43dbg: b43dbg(dev->wl, "TX status unexpected non-NULL skb at slot %d (first=%d) on ring %d\n", slot, firstused, ring->index) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

lines 66002-66003: Ignoring parameters passed as varargs to function b43dbg: b43dbg(dev->wl, "TX status unexpected NULL skb at slot %d (first=%d) on ring %d\n", slot, firstused, ring->index) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

Assuming external function ieee80211_tx_status to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

lines 65954-65955: Ignoring parameters passed as varargs to function b43dbg: b43dbg(dev->wl, "Out of order TX status report on DMA ring %d. Expected %d, but got %d\n", ring->index, firstused, slot) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

line 65947: Ignoring parameters passed as varargs to function b43dbg: b43dbg(dev->wl, "Skip on DMA ring %d slot %d.\n", ring->index, slot) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

Assuming external function __list_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 66236: Ignoring function call through function pointer *(ops->get_current_rxslot): current_slot = (*(ops->get_current_rxslot))(ring); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 66260: Ignoring function call through function pointer *(ops->set_current_rxslot): (*(ops->set_current_rxslot))(ring, slot); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 63733: Ignoring function call through function pointer *(ops->sync_single_for_cpu): (*(ops->sync_single_for_cpu))(dev, addr, size, dir); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function debug_dma_sync_single_for_cpu to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 66138: Ignoring parameters passed as varargs to function b43dbg: b43dbg(ring->dev->wl, "DMA RX: Dropping poisoned buffer.\n") (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

line 63766: Ignoring function call through function pointer *(ops->sync_single_for_device): (*(ops->sync_single_for_device))(dev, addr, size, dir); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function debug_dma_sync_single_for_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

lines 64268-64269: Ignoring parameters passed as varargs to function b43dbg: b43dbg(ring->dev->wl, "max_used_slots increased to %d on %s ring %d\n", ring->max_used_slots, __CPAchecker_TMP_1, ring->index) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

lines 66163-66164: Ignoring parameters passed as varargs to function b43err: b43err(ring->dev->wl, "DMA RX buffer too small (len: %u, buffer: %u, nr-dropped: %d)\n", (int)len, __CPAchecker_TMP_5, cnt) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

Assuming external function __netdev_alloc_skb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 66173: Ignoring parameters passed as varargs to function b43dbg: b43dbg(ring->dev->wl, "DMA RX: setup_rx_descbuffer() failed\n") (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

Assuming external function skb_put to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function skb_pull to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dev_kfree_skb_any to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 63230: Ignoring parameters passed as varargs to function b43dbg: b43dbg(dev->wl, "RX: Packet size underrun (1)\n") (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

line 63239: Ignoring parameters passed as varargs to function b43dbg: b43dbg(dev->wl, "RX: Packet size underrun (2)\n") (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

Assuming external function __local_bh_disable_ip to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ieee80211_rx to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __local_bh_enable_ip to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ieee80211_hdrlen to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 63264: Ignoring parameters passed as varargs to function b43dbg: b43dbg(dev->wl, "RX: Packet size underrun (3)\n") (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

Assuming external function __phys_addr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

lines 63666-63667: Ignoring function call through function pointer *(ops->map_page): addr = (*(ops->map_page))(dev, ((struct page *)0L) + (tmp___2 >> 12), ((unsigned long)ptr) & 4095UL, size, dir, attrs); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function debug_dma_map_page to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function debug_dma_mapping_error to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 63786: Ignoring function call through function pointer *(ops->mapping_error): tmp___0 = (*(ops->mapping_error))(dev, dma_addr); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

lines 64749-64750: Ignoring function call through function pointer *(ring->ops->fill_descriptor): (*(ring->ops->fill_descriptor))(ring, desc, dmaaddr, __CPAchecker_TMP_7, 0, 0, 0); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 64738: Ignoring parameters passed as varargs to function b43err: b43err(ring->dev->wl, "RX DMA buffer allocation failed\n") (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

Assuming external function ___might_sleep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _cond_resched to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 67676: Ignoring parameters passed as varargs to function b43dbg: b43dbg(q->dev->wl, "PIO RX timed out\n") (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

line 66715: Ignoring function call through function pointer *(dev->dev->block_read): (*(dev->dev->block_read))(dev->dev, buffer, count, (int)offset, (int)reg_width); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 67774: Ignoring parameters passed as varargs to function b43dbg: b43dbg(q->dev->wl, "PIO RX error: %s\n", err_msg) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

line 66207: Ignoring function call through function pointer *(ring->ops->get_current_rxslot): current_slot = (*(ring->ops->get_current_rxslot))(ring); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 66209: Ignoring function call through function pointer *(ring->ops->set_current_rxslot): (*(ring->ops->set_current_rxslot))(ring, previous_slot); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function skb_clone to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 13057: Ignoring parameters passed as varargs to function b43dbg: b43dbg(dev->wl, "Could not upload beacon. Failed to clone beacon skb.") (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

line 13126: Ignoring parameters passed as varargs to function b43dbg: b43dbg(dev->wl, "Updated beacon template at 0x%x\n", (int)ram_offset) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

line 13464: Ignoring parameters passed as varargs to function b43dbg: b43dbg(dev->wl, "Debug-IRQ triggered for unknown reason: %u\n", (int)reason) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

line 13428: Ignoring parameters passed as varargs to function b43info: b43info(dev->wl, "Microcode register dump:\n") (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

line 13362: Ignoring parameters passed as varargs to function b43err: b43err(dev->wl, "Whoopsy, firmware panic! Reason: %u\n", (int)reason) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

line 13365: Ignoring parameters passed as varargs to function b43dbg: b43dbg(dev->wl, "The panic reason is unknown.\n") (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

line 13405: Ignoring parameters passed as varargs to function b43dbg: b43dbg(dev->wl, "SHM-dump: Failed to allocate memory\n") (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

line 13423: Ignoring parameters passed as varargs to function b43info: b43info(dev->wl, "Shared memory dump:\n") (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

Assuming external function print_hex_dump to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

lines 13460-13461: Ignoring parameters passed as varargs to function b43info: b43info(dev->wl, "The firmware just executed the MARKER(%u) at line number %u\n", (int)marker_id, (int)marker_line) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

line 13535: Ignoring parameters passed as varargs to function b43err: b43err(dev->wl, "Too many PHY TX errors, restarting the controller\n") (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

line 42942: Ignoring function call through function pointer *(dev->phy.ops->supports_hwpctl): tmp = (*(dev->phy.ops->supports_hwpctl))(dev); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

lines 29682-29683: Ignoring parameters passed as varargs to function b43dbg: b43dbg(dev->wl, "LO: Item BB(%u), RF(%u,%u), I=%d, Q=%d expired\n", (int)(cal->bbatt.att), (int)(cal->rfatt.att), (int)(cal->rfatt.with_padmix), (int)(cal->ctl.i), (int)(cal->ctl.q)) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

Assuming external function list_del to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 29709: Ignoring parameters passed as varargs to function b43dbg: b43dbg(dev->wl, "LO: Recalibrating current LO setting\n") (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

line 43091: Ignoring function call through function pointer *(dev->phy.ops->radio_read): tmp = (*(dev->phy.ops->radio_read))(dev, (int)reg); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

lines 28498-28499: Ignoring parameters passed as varargs to function b43dbg: b43dbg(dev->wl, "Invalid LO control pair (I: %d, Q: %d)\n", __CPAchecker_TMP_4, __CPAchecker_TMP_5) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

lines 29394-29395: Ignoring parameters passed as varargs to function b43dbg: b43dbg(dev->wl, "LO: Calibrated for BB(%u), RF(%u,%u) => I=%d Q=%d\n", __CPAchecker_TMP_15, __CPAchecker_TMP_16, __CPAchecker_TMP_17, (int)(loctl.i), (int)(loctl.q)) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

line 29402: Ignoring parameters passed as varargs to function b43warn: b43warn(dev->wl, "LO calib: out of memory\n") (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

line 29719: Ignoring parameters passed as varargs to function b43warn: b43warn(dev->wl, "Failed to recalibrate current LO setting\n") (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

line 29492: Ignoring parameters passed as varargs to function b43warn: b43warn(dev->wl, "LO: Could not calibrate DC table entry\n") (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

line 43382: Ignoring function call through function pointer *(phy->ops->switch_channel): err = (*(phy->ops->switch_channel))(dev, new_channel); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function bcma_core_pll_ctl to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function bcma_pmu_spuravoid_pllupdate to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 58922: Ignoring parameters passed as varargs to function b43err: b43err(dev->wl, "Forcing RF sequence timeout\n") (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

line 10325: Ignoring function call through function pointer *(core->bus->ops->aread32): tmp = (*(core->bus->ops->aread32))(core, (int)offset); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 10334: Ignoring function call through function pointer *(core->bus->ops->awrite32): (*(core->bus->ops->awrite32))(core, (int)offset, value); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 10278: Ignoring function call through function pointer *(dev->ops->read32): tmp = (*(dev->ops->read32))(dev, (int)offset); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 10287: Ignoring function call through function pointer *(dev->ops->write32): (*(dev->ops->write32))(dev, (int)offset, value); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 10316: Ignoring function call through function pointer *(core->bus->ops->write32): (*(core->bus->ops->write32))(core, (int)offset, value); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function usleep_range to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 43937: Ignoring parameters passed as varargs to function b43err: b43err(dev->wl, "RF sequence status timeout\n") (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            211332 (22% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  210116 (99%)
  Because of loop head:            1216 (1%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         0 (0%)
  Times precision was empty:       211332 (100%)
  Times precision was {false}:     0 (0%)
  Times result was cached:         0 (0%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      0 (0%)
  Times result was 'false':        0 (0%)
Number of strengthen sat checks:   0
Number of coverage checks:         113145
  BDD entailment checks:           37201
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       495
Number of predicates discovered:          0

Time for post operator:                615.938s
  Time for path formula creation:      615.369s
Time for strengthen operator:            1.159s
Time for prec operator:                 16.752s
  Time for abstraction:                  0.625s (Max:     0.009s, Count: 211332)
    Solving time:                        0.000s (Max:     0.000s)
    Model enumeration time:              0.000s
    Time for BDD construction:           0.000s (Max:     0.000s)
Time for merge operator:                99.703s
Time for coverage check:                 0.090s
  Time for BDD entailment checks:        0.061s
Total time for SMT solver (w/o itp):     0.000s

Number of path formula cache hits:   368214 (36%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:   576.502s

Total number of created targets for pointer analysis: 10003923
   Number of created targets for uf: *signed_char is 21
   Number of created targets for uf: *enum_b43_bus_type is 2
   Number of created targets for uf: *(unsigned_char)* is 9
   Number of created targets for uf: *(struct_b43_phy_ht)* is 2
   Number of created targets for uf: *(Return_type:_[unsigned_int],_Parameters:_2,_Parameter_1_type:_[(struct_b43_bus_dev)*],_Parameter_2_type:_[unsigned_short_int],_VarArgs:_false)* is 2
   Number of created targets for uf: *signed_short_int is 967
   Number of created targets for uf: *unsigned_long_int is 4
   Number of created targets for uf: *(Return_type:_[unsigned_short_int],_Parameters:_2,_Parameter_1_type:_[(struct_b43_bus_dev)*],_Parameter_2_type:_[unsigned_short_int],_VarArgs:_false)* is 2
   Number of created targets for uf: *(struct_b43_wl)* is 2
   Number of created targets for uf: *(struct_b43_phy_lp)* is 2
   Number of created targets for uf: *signed_int is 223
   Number of created targets for uf: *(struct_b43_nphy_chantabent_rev7_2g)* is 2
   Number of created targets for uf: *unsigned_char is 1419
   Number of created targets for uf: *(struct_b43_nphy_chantabent_rev7)* is 2
   Number of created targets for uf: *(struct_list_head)* is 21
   Number of created targets for uf: *(struct_b43_dfsentry)* is 3
   Number of created targets for uf: *(struct_b43_dmadesc_meta)* is 4
   Number of created targets for uf: *unsigned_long_long_int is 5
   Number of created targets for uf: *unsigned_int is 1461
   Number of created targets for uf: *(struct_device)* is 2
   Number of created targets for uf: *(struct_dentry)* is 2
   Number of created targets for uf: *(Return_type:_[signed_int],_Parameters:_1,_Parameter_1_type:_[(struct_b43_bus_dev)*],_VarArgs:_false)* is 3
   Number of created targets for uf: *(Return_type:_[signed_int],_Parameters:_2,_Parameter_1_type:_[(struct_b43_bus_dev)*],_Parameter_2_type:_[_Bool],_VarArgs:_false)* is 2
   Number of created targets for uf: *unsigned_short_int is 5606
   Number of created targets for uf: *(struct_b43_txstatus)* is 2
   Number of created targets for uf: *(struct_b43_pio_txpacket)* is 2
   Number of created targets for uf: *(struct_b43_bus_dev)* is 2
   Number of created targets for uf: *(struct_b43_phy_operations)* is 2
   Number of created targets for uf: *(Return_type:_[void],_Parameters:_2,_Parameter_1_type:_[(struct_b43_bus_dev)*],_Parameter_2_type:_[unsigned_int],_VarArgs:_false)* is 2
   Number of created targets for uf: *(struct_ssb_sprom)* is 2
   Number of created targets for uf: *(struct_bcma_device)* is 2
   Number of created targets for uf: *_Bool is 52
   Number of created targets for uf: *char is 21


Number of BDD nodes:                               202
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                           0 (count: 248534, min: 0, max: 0, avg: 0.00)
Time for BDD node cleanup:                             0.079s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  1.963s
  Time for transition matches:                         1.308s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.000s
Automaton transfers with branching:                0
Automaton transfer successors:                       949196 (count: 949196, min: 1, max: 1, avg: 1.00) [1 x 949196]

CPA algorithm statistics
------------------------
Number of iterations:            719916
Max size of waitlist:            499
Average size of waitlist:        226
Number of computed successors:   795338
Max successors for one state:    2
Number of times merged:          37972
Number of times stopped:         75173
Number of times breaked:         0

Total time for CPA algorithm:       878.086s (Max:   878.086s)
  Time for choose from waitlist:      0.587s
  Time for precision adjustment:     23.612s
  Time for transfer relation:       745.958s
  Time for merge operator:          101.050s
  Time for stop operator:             1.448s
  Time for adding to reached set:     2.227s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   0

CEGAR algorithm statistics
--------------------------
Number of refinements:                0

Code Coverage
-----------------------------
  Function coverage:      0.330
  Visited lines:          9091
  Total lines:            31840
  Line coverage:          0.286
  Visited conditions:     2666
  Total conditions:       11178
  Condition coverage:     0.239

CPAchecker general statistics
-----------------------------
Number of program locations:     46263
Number of CFA edges:             58437
Number of relevant variables:    7858
Number of functions:             1291
Number of loops:                 353
Size of reached set:             720166
  Number of reached locations:   7783 (17%)
    Avg states per location:     92
    Max states per location:     13677 (at node N489)
  Number of reached functions:   426 (33%)
  Number of partitions:          720166
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0
  Size of final wait list        251

Time for analysis setup:         22.145s
  Time for loading CPAs:          1.668s
  Time for loading parser:        0.712s
  Time for CFA construction:     19.576s
    Time for parsing file(s):     2.699s
    Time for AST to CFA:          7.133s
    Time for CFA sanity check:    1.797s
    Time for post-processing:     7.510s
      Time for var class.:        4.311s
Time for Analysis:              878.086s
CPU time for analysis:          878.030s
Total time for CPAchecker:      900.243s
Total CPU time for CPAchecker:  900.110s
Time for statistics:              7.265s

Time for Garbage Collector:      28.456s (in 404 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:               1234MB (  1177 MiB) max;    602MB (   574 MiB) avg;   1255MB (  1197 MiB) peak
Used non-heap memory:             50MB (    48 MiB) max;     41MB (    39 MiB) avg;     50MB (    48 MiB) peak
Allocated heap memory:          1299MB (  1238 MiB) max;    856MB (   817 MiB) avg
Allocated non-heap memory:        52MB (    50 MiB) max;     51MB (    49 MiB) avg
Total process virtual memory:   8217MB (  7837 MiB) max;   8119MB (  7743 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
