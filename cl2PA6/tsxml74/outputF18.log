scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-4.2-rc1/linux-4.2-rc1.tar.xz-08_1a-drivers--net--wireless--b43--b43.ko-entry_point_true-unreach-call.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_7ntk1jw7/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 28193: Dead code detected: assert_sizes(); (CFACreationUtils.addEdgeToCFA, INFO)

line 30003: Dead code detected: i = 0; (CFACreationUtils.addEdgeToCFA, INFO)

line 34348: Dead code detected: assert_sizes(); (CFACreationUtils.addEdgeToCFA, INFO)

line 45116: Dead code detected: __ms = 2UL; (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 66715: Function pointer *(dev->dev->block_read) with type void (*)(struct b43_bus_dev *, void *, size_t , u16 , u8 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 66725: Function pointer *(dev->dev->block_write) with type void (*)(struct b43_bus_dev *, const void *, size_t , u16 , u8 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 10554: Function pointer *(wldev->dev->bus_powerup) with type int (*)(struct b43_bus_dev *, bool ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 43245: Function pointer *(dev->phy.ops->phy_maskset) with type void (*)(struct b43_wldev *, u16 , u16 , u16 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 43281: Function pointer *(dev->phy.ops->phy_maskset) with type void (*)(struct b43_wldev *, u16 , u16 , u16 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 43185: Function pointer *(dev->phy.ops->phy_read) with type u16 (*)(struct b43_wldev *, u16 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 43263: Function pointer *(dev->phy.ops->phy_maskset) with type void (*)(struct b43_wldev *, u16 , u16 , u16 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 43470: Function pointer *(phy->ops->recalc_txpower) with type enum b43_txpwr_result (*)(struct b43_wldev *, bool ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 43091: Function pointer *(dev->phy.ops->radio_read) with type u16 (*)(struct b43_wldev *, u16 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 43113: Function pointer *(dev->phy.ops->radio_write) with type void (*)(struct b43_wldev *, u16 , u16 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 10590: Function pointer *(dev->dev->read16) with type u16 (*)(struct b43_bus_dev *, u16 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 10628: Function pointer *(dev->dev->read32) with type u32 (*)(struct b43_bus_dev *, u16 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 10599: Function pointer *(dev->dev->write16) with type void (*)(struct b43_bus_dev *, u16 , u16 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 10637: Function pointer *(dev->dev->write32) with type void (*)(struct b43_bus_dev *, u16 , u32 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 10325: Function pointer *(core->bus->ops->aread32) with type u32 (*)(struct bcma_device *, u16 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 10334: Function pointer *(core->bus->ops->awrite32) with type void (*)(struct bcma_device *, u16 , u32 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 21862: Function pointer *(core->bus->ops->block_read) with type void (*)(struct bcma_device *, void *, size_t , u16 , u8 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 21872: Function pointer *(core->bus->ops->block_write) with type void (*)(struct bcma_device *, const void *, size_t , u16 , u8 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 21843: Function pointer *(core->bus->ops->read16) with type u16 (*)(struct bcma_device *, u16 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 10307: Function pointer *(core->bus->ops->read32) with type u32 (*)(struct bcma_device *, u16 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 21852: Function pointer *(core->bus->ops->write16) with type void (*)(struct bcma_device *, u16 , u16 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 10316: Function pointer *(core->bus->ops->write32) with type void (*)(struct bcma_device *, u16 , u32 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 63666-63667: Function pointer *(ops->map_page) with type dma_addr_t (*)(struct device *, struct page *, unsigned long, size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 63786: Function pointer *(ops->mapping_error) with type int (*)(struct device *, dma_addr_t ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 63733: Function pointer *(ops->sync_single_for_cpu) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 63766: Function pointer *(ops->sync_single_for_device) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 65638-65639: Function pointer *(ops->fill_descriptor) with type void (*)(struct b43_dmaring *, struct b43_dmadesc_generic *, dma_addr_t , u16 , int, int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 65675-65676: Function pointer *(ops->fill_descriptor) with type void (*)(struct b43_dmaring *, struct b43_dmadesc_generic *, dma_addr_t , u16 , int, int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 63700: Function pointer *(ops->unmap_page) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 64749-64750: Function pointer *(ring->ops->fill_descriptor) with type void (*)(struct b43_dmaring *, struct b43_dmadesc_generic *, dma_addr_t , u16 , int, int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 21813: Function pointer *(dev->ops->block_read) with type void (*)(struct ssb_device *, void *, size_t , u16 , u8 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 21823: Function pointer *(dev->ops->block_write) with type void (*)(struct ssb_device *, const void *, size_t , u16 , u8 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 21794: Function pointer *(dev->ops->read16) with type u16 (*)(struct ssb_device *, u16 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 10278: Function pointer *(dev->ops->read32) with type u32 (*)(struct ssb_device *, u16 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 21803: Function pointer *(dev->ops->write16) with type void (*)(struct ssb_device *, u16 , u16 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 10287: Function pointer *(dev->ops->write32) with type void (*)(struct ssb_device *, u16 , u32 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

line 20688: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp = ldv_init_zalloc(6UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 20692: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___1 = ldv_init_zalloc(16UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 20696: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___3 = ldv_init_zalloc(296UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 20698: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___4 = ldv_init_zalloc(296UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 20700: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___5 = ldv_init_zalloc(296UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 20706: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___8 = ldv_init_zalloc(10UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 20718: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___14 = ldv_init_zalloc(296UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 20722: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___16 = ldv_init_zalloc(8UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 20724: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___17 = ldv_init_zalloc(296UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 20728: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___19 = ldv_init_zalloc(216UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 20732: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___21 = ldv_init_zalloc(296UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 20736: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___23 = ldv_init_zalloc(216UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 20738: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___24 = ldv_init_zalloc(64UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 20740: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___25 = ldv_init_zalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ssb_driver_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function bcma_driver_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock_nested to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ssb_bus_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pcmcia_disable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ssb_bus_resume to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ssb_bus_suspend to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function debugfs_create_dir to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sdio_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 70053: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp = ldv_init_zalloc(16UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 62105: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp = ldv_init_zalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 17828: Ignoring parameters passed as varargs to function b43dbg: b43dbg(wl, "Removing Interface type %d\n", __CPAchecker_TMP_0) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

line 17793: Ignoring parameters passed as varargs to function b43dbg: b43dbg(wl, "Adding Interface type %d\n", __CPAchecker_TMP_6) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

lines 16868-16869: Ignoring parameters passed as varargs to function b43dbg: b43dbg(wl, "%s hardware based encryption for keyidx: %d, mac: %pM\n", __CPAchecker_TMP_11, __CPAchecker_TMP_12, __CPAchecker_TMP_13) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

line 72605: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___0 = ldv_init_zalloc(8UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function ldv__builtin_va_start to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv__builtin_va_end to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __might_sleep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 18145: Ignoring parameters passed as varargs to function b43err: b43err(wl, "Controller restart FAILED\n") (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

line 72320: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___0 = ldv_init_zalloc(8UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 43434: Ignoring function call through function pointer *(dev->phy.ops->adjust_txpower): (*(dev->phy.ops->adjust_txpower))(dev); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function pcmcia_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 72794: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___0 = ldv_init_zalloc(8UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 62107: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___0 = ldv_init_zalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ieee80211_free_txskb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ieee80211_beacon_get_tim to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sdio_claim_host to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sdio_set_block_size to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sdio_enable_func to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sdio_release_host to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _dev_info to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function skb_dequeue to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 67465: Ignoring parameters passed as varargs to function b43dbg: b43dbg(dev->wl, "PIO: TX packet longer than queue.\n") (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

line 67473: Ignoring parameters passed as varargs to function b43warn: b43warn(dev->wl, "PIO: TX packet overflow.\n") (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

Assuming external function ieee80211_stop_queue to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function skb_queue_head to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function net_ratelimit to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 65806: Ignoring parameters passed as varargs to function b43err: b43err(dev->wl, "Packet after queue stopped\n") (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

line 65827: Ignoring parameters passed as varargs to function b43err: b43err(dev->wl, "DMA queue overflow\n") (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

lines 64268-64269: Ignoring parameters passed as varargs to function b43dbg: b43dbg(ring->dev->wl, "max_used_slots increased to %d on %s ring %d\n", ring->max_used_slots, __CPAchecker_TMP_1, ring->index) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

line 10637: Ignoring function call through function pointer *(dev->dev->write32): (*(dev->dev->write32))(dev->dev, (int)offset, value); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 10590: Ignoring function call through function pointer *(dev->dev->read16): tmp = (*(dev->dev->read16))(dev->dev, (int)offset); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 10628: Ignoring function call through function pointer *(dev->dev->read32): tmp = (*(dev->dev->read32))(dev->dev, (int)offset); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 67509: Ignoring parameters passed as varargs to function b43err: b43err(dev->wl, "PIO transmission failure\n") (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

line 10599: Ignoring function call through function pointer *(dev->dev->write16): (*(dev->dev->write16))(dev->dev, (int)offset, (int)value); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function ieee80211_get_tkip_p1k_iv to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 66725: Ignoring function call through function pointer *(dev->dev->block_write): (*(dev->dev->block_write))(dev->dev, buffer, count, (int)offset, (int)reg_width); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function ieee80211_rts_get to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ieee80211_ctstoself_get to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function list_del to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 65846: Ignoring parameters passed as varargs to function b43err: b43err(dev->wl, "DMA tx mapping failure\n") (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

Assuming external function __phys_addr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

lines 63666-63667: Ignoring function call through function pointer *(ops->map_page): addr = (*(ops->map_page))(dev, ((struct page *)0L) + (tmp___2 >> 12), ((unsigned long)ptr) & 4095UL, size, dir, attrs); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function debug_dma_map_page to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 65865: Ignoring parameters passed as varargs to function b43dbg: b43dbg(dev->wl, "Stopped TX ring %d\n", ring->index) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

lines 65704-65705: Ignoring parameters passed as varargs to function b43dbg: b43dbg(ring->dev->wl, "Injecting TX ring overflow on DMA controller %d\n", ring->index) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

Assuming external function debug_dma_mapping_error to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 63786: Ignoring function call through function pointer *(ops->mapping_error): tmp___0 = (*(ops->mapping_error))(dev, dma_addr); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

lines 65638-65639: Ignoring function call through function pointer *(ops->fill_descriptor): (*(ops->fill_descriptor))(ring, desc, meta_hdr->dmaaddr, (int)((u16 )hdrsize), 1, 0, 0); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 63700: Ignoring function call through function pointer *(ops->unmap_page): (*(ops->unmap_page))(dev, addr, size, dir, attrs); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function debug_dma_unmap_page to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function kmemdup to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

lines 65675-65676: Ignoring function call through function pointer *(ops->fill_descriptor): (*(ops->fill_descriptor))(ring, desc, meta->dmaaddr, (int)__CPAchecker_TMP_9, 0, 1, 1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 65684: Ignoring function call through function pointer *(ops->poke_tx): (*(ops->poke_tx))(ring, tmp___6); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function pcmcia_request_window to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pcmcia_map_mem_page to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pcmcia_enable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ssb_bus_pcmciabus_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function debugfs_remove to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sdio_disable_func to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 72417: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___1 = ldv_init_zalloc(8UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 72227: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___1 = ldv_init_zalloc(8UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 71944: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___1 = ldv_init_zalloc(8UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function _raw_spin_lock_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

lines 14494-14495: Ignoring parameters passed as varargs to function b43err: b43err(dev->wl, "The driver does not know which firmware (ucode) is required for your device (wl-core rev %u)\n", (int)rev) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

line 10554: Ignoring function call through function pointer *(wldev->dev->bus_powerup): tmp = (*(wldev->dev->bus_powerup))(wldev->dev, (int)dynamic_pctl); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function snprintf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function request_firmware to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function release_firmware to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 72135: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___2 = ldv_init_zalloc(8UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 72704: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___2 = ldv_init_zalloc(8UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function pcmcia_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 72514: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___2 = ldv_init_zalloc(8UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function _raw_spin_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __init_waitqueue_head to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

lines 14501-14502: Ignoring parameters passed as varargs to function b43err: b43err(dev->wl, "The driver does not know which firmware (PCM) is required for your device (wl-core rev %u)\n", (int)rev) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

line 18718: Ignoring parameters passed as varargs to function b43err: b43err((struct b43_wl *)0, "Dual-core devices are not supported\n") (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

line 10572: Ignoring function call through function pointer *(wldev->dev->device_enable): (*(wldev->dev->device_enable))(wldev->dev, core_specific_flags); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 12165: Ignoring parameters passed as varargs to function b43warn: b43warn(dev->wl, "Out of hardware key memory\n") (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

line 11895: Ignoring parameters passed as varargs to function b43dbg: b43dbg(dev->wl, "rx_tkip_phase1_write : idx 0x%x, iv32 0x%x\n", (int)index, iv32) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

Assuming external function round_jiffies to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 43470: Ignoring function call through function pointer *(phy->ops->recalc_txpower): result = (*(phy->ops->recalc_txpower))(dev, (flags & 2U) != 0U); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function request_firmware_nowait to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function wait_for_completion to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function complete to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sdio_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 71854: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___3 = ldv_init_zalloc(8UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 72042: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___3 = ldv_init_zalloc(8UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function ieee80211_alloc_hw_nm to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ssb_device_disable to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function bcma_core_enable to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ssb_device_enable to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function bcma_core_disable to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function skb_queue_tail to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ieee80211_queue_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

lines 14508-14509: Ignoring parameters passed as varargs to function b43err: b43err(dev->wl, "The driver does not know which firmware (initvals) is required for your device (wl-core rev %u)\n", (int)rev) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

Assuming external function __bcma_driver_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __ssb_driver_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ssb_bus_sdiobus_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 13523: Ignoring parameters passed as varargs to function b43err: b43err(dev->wl, "MAC transmission error\n") (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

line 16357: Ignoring parameters passed as varargs to function b43dbg: b43dbg(dev->wl, "Switching to %s GHz band\n", tmp___2) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

line 16346: Ignoring parameters passed as varargs to function b43err: b43err(dev->wl, "This device doesn\'t support %s-GHz band\n", tmp___1) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

line 15519: Ignoring function call through function pointer *(ops->pwork_60sec): (*(ops->pwork_60sec))(dev); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 15560: Ignoring function call through function pointer *(phy->ops->pwork_15sec): (*(phy->ops->pwork_15sec))(dev); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 18530: Ignoring parameters passed as varargs to function b43err: b43err((struct b43_wl *)0, "Could not allocate ieee80211 device\n") (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

line 68056: Ignoring parameters passed as varargs to function b43info: b43info(wl, "Radio hardware status changed to %s\n", __CPAchecker_TMP_1) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

Assuming external function __dev_kfree_skb_any to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            174512 (17% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  168133 (96%)
  Because of loop head:            6374 (4%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         5 (0%)
  Times precision was empty:       172578 (99%)
  Times precision was {false}:     115 (0%)
  Times result was cached:         1725 (1%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      94 (0%)
  Times result was 'false':        9 (0%)
Number of strengthen sat checks:   0
Number of coverage checks:         197332
  BDD entailment checks:           24404
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       495
Number of predicates discovered:          2
Number of abstraction locations:          75
Max number of predicates per location:    1
Avg number of predicates per location:    1
Total predicates per abstraction:         1934
Max number of predicates per abstraction: 1
Avg number of predicates per abstraction: 9.25
Number of irrelevant predicates:          1389 (72%)
Number of preds handled by boolean abs:   94 (5%)
  Total number of models for allsat:      94
  Max number of models for allsat:        1
  Avg number of models for allsat:        1.00

Time for post operator:                634.795s
  Time for path formula creation:      634.210s
Time for strengthen operator:            1.026s
Time for prec operator:                 25.579s
  Time for abstraction:                 15.547s (Max:    13.118s, Count: 174512)
    Boolean abstraction:                12.545s
    Solving time:                       12.329s (Max:    12.101s)
    Model enumeration time:              0.274s
    Time for BDD construction:           0.016s (Max:     0.011s)
Time for merge operator:                21.348s
Time for coverage check:                 0.095s
  Time for BDD entailment checks:        0.067s
Total time for SMT solver (w/o itp):    12.603s

Number of path formula cache hits:   707726 (61%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:   601.334s

Total number of created targets for pointer analysis: 12305964
   Number of created targets for uf: *signed_char is 21
   Number of created targets for uf: *enum_b43_bus_type is 7
   Number of created targets for uf: *(Return_type:_[signed_int],_Parameters:_1,_Parameter_1_type:_[(struct_b43_bus_dev)*],_VarArgs:_false)* is 13
   Number of created targets for uf: *(struct_firmware)* is 65
   Number of created targets for uf: *(Return_type:_[unsigned_int],_Parameters:_2,_Parameter_1_type:_[(struct_b43_bus_dev)*],_Parameter_2_type:_[unsigned_short_int],_VarArgs:_false)* is 7
   Number of created targets for uf: *(Return_type:_[signed_int],_Parameters:_2,_Parameter_1_type:_[(struct_b43_bus_dev)*],_Parameter_2_type:_[_Bool],_VarArgs:_false)* is 7
   Number of created targets for uf: *signed_short_int is 3865
   Number of created targets for uf: *unsigned_short_int is 1864
   Number of created targets for uf: *(Return_type:_[unsigned_short_int],_Parameters:_2,_Parameter_1_type:_[(struct_b43_bus_dev)*],_Parameter_2_type:_[unsigned_short_int],_VarArgs:_false)* is 7
   Number of created targets for uf: *(struct_b43_wldev)* is 49
   Number of created targets for uf: *signed_int is 2801
   Number of created targets for uf: *(Return_type:_[void],_Parameters:_2,_Parameter_1_type:_[(struct_b43_bus_dev)*],_Parameter_2_type:_[unsigned_int],_VarArgs:_false)* is 13
   Number of created targets for uf: *unsigned_char is 18461
   Number of created targets for uf: *(struct_list_head)* is 41
   Number of created targets for uf: *(struct_ssb_sprom)* is 7
   Number of created targets for uf: *(struct_ssb_device)* is 7
   Number of created targets for uf: *(struct_bcma_device)* is 7
   Number of created targets for uf: *_Bool is 31
   Number of created targets for uf: *(struct_b43_dmadesc_meta)* is 49
   Number of created targets for uf: *enum_b43_firmware_file_type is 193
   Number of created targets for uf: *unsigned_int is 5809
   Number of created targets for uf: *(struct_device)* is 7


Number of BDD nodes:                               202
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         191 (count: 198126, min: 0, max: 173, avg: 0.00)
Time for BDD node cleanup:                             0.047s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  1.929s
  Time for transition matches:                         1.212s
  Time for transition assertions:                      0.001s
  Time for transition actions:                         0.000s
Automaton transfers with branching:                0
Automaton transfer successors:                      1018491 (count: 1018491, min: 1, max: 1, avg: 1.00) [1 x 1018491]

CPA algorithm statistics
------------------------
Number of iterations:            698591
Max size of waitlist:            1198
Average size of waitlist:        526
Number of computed successors:   814955
Max successors for one state:    2
Number of times merged:          86464
Number of times stopped:         110547
Number of times breaked:         5

Total time for CPA algorithm:       809.534s (Max:   159.135s)
  Time for choose from waitlist:      0.587s
  Time for precision adjustment:     32.178s
  Time for transfer relation:       745.966s
  Time for merge operator:           23.004s
  Time for stop operator:             1.382s
  Time for adding to reached set:     3.254s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   5
Avg. length of target path (in blocks):                 532 (count: 5, min: 104, max: 107, avg: 106.40)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  69.681s
  Counterexample analysis:                            67.209s (Max:    13.747s, Calls: 5)
    Refinement sat check:                             66.246s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.001s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.021s
  Precision update:                                    0.017s
  ARG update:                                          2.417s

Length of refined path (in blocks):                     527 (count: 5, min: 103, max: 106, avg: 105.40)
Number of affected states:                              522 (count: 5, min: 102, max: 105, avg: 104.40)
Length (states) of path with itp 'true':                  0 (count: 5, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:       522 (count: 5, min: 102, max: 105, avg: 104.40)
Length (states) of path with itp 'false':                 5 (count: 5, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 5, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:             517 (count: 5, min: 101, max: 104, avg: 103.40)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                5
Number of successful refinements:     5
Number of failed refinements:         0
Max. size of reached set before ref.: 136220
Max. size of reached set after ref.:  3
Avg. size of reached set before ref.: 120901.20
Avg. size of reached set after ref.:  3.00

Total time for CEGAR algorithm:     879.897s
Time for refinements:                70.363s
Average time for refinement:         14.072s
Max time for refinement:             14.500s

Code Coverage
-----------------------------
  Function coverage:      0.213
  Visited lines:          6377
  Total lines:            31840
  Line coverage:          0.200
  Visited conditions:     1622
  Total conditions:       11178
  Condition coverage:     0.145

CPAchecker general statistics
-----------------------------
Number of program locations:     46263
Number of CFA edges:             58437
Number of relevant variables:    7858
Number of functions:             1291
Number of loops:                 353
Size of reached set:             99908
  Number of reached locations:   4270 (9%)
    Avg states per location:     23
    Max states per location:     3939 (at node N196)
  Number of reached functions:   275 (21%)
  Number of partitions:          99903
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N9694 (before line 20799), Function main called from node N9512, stack depth 1 [653b50ab], stack [main]])
  Number of target states:       0
  Size of final wait list        622

Time for analysis setup:         20.365s
  Time for loading CPAs:          1.492s
  Time for loading parser:        0.701s
  Time for CFA construction:     18.032s
    Time for parsing file(s):     2.693s
    Time for AST to CFA:          6.801s
    Time for CFA sanity check:    1.673s
    Time for post-processing:     6.518s
      Time for var class.:        3.562s
Time for Analysis:              879.898s
CPU time for analysis:          879.850s
Total time for CPAchecker:      900.270s
Total CPU time for CPAchecker:  900.150s
Time for statistics:              1.801s

Time for Garbage Collector:      25.056s (in 596 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                670MB (   639 MiB) max;    388MB (   370 MiB) avg;    693MB (   661 MiB) peak
Used non-heap memory:             48MB (    46 MiB) max;     41MB (    39 MiB) avg;     48MB (    46 MiB) peak
Allocated heap memory:           743MB (   708 MiB) max;    559MB (   533 MiB) avg
Allocated non-heap memory:        50MB (    48 MiB) max;     50MB (    47 MiB) avg
Total process virtual memory:   8298MB (  7913 MiB) max;   8258MB (  7875 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
