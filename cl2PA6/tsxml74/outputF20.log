scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-4.2-rc1/linux-4.2-rc1.tar.xz-08_1a-drivers--net--wireless--b43--b43.ko-entry_point_true-unreach-call.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_sqtdqfs6/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 28193: Dead code detected: assert_sizes(); (CFACreationUtils.addEdgeToCFA, INFO)

line 30003: Dead code detected: i = 0; (CFACreationUtils.addEdgeToCFA, INFO)

line 34348: Dead code detected: assert_sizes(); (CFACreationUtils.addEdgeToCFA, INFO)

line 45116: Dead code detected: __ms = 2UL; (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 66715: Function pointer *(dev->dev->block_read) with type void (*)(struct b43_bus_dev *, void *, size_t , u16 , u8 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 66725: Function pointer *(dev->dev->block_write) with type void (*)(struct b43_bus_dev *, const void *, size_t , u16 , u8 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 10554: Function pointer *(wldev->dev->bus_powerup) with type int (*)(struct b43_bus_dev *, bool ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 43245: Function pointer *(dev->phy.ops->phy_maskset) with type void (*)(struct b43_wldev *, u16 , u16 , u16 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 43281: Function pointer *(dev->phy.ops->phy_maskset) with type void (*)(struct b43_wldev *, u16 , u16 , u16 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 43185: Function pointer *(dev->phy.ops->phy_read) with type u16 (*)(struct b43_wldev *, u16 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 43263: Function pointer *(dev->phy.ops->phy_maskset) with type void (*)(struct b43_wldev *, u16 , u16 , u16 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 43470: Function pointer *(phy->ops->recalc_txpower) with type enum b43_txpwr_result (*)(struct b43_wldev *, bool ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 43091: Function pointer *(dev->phy.ops->radio_read) with type u16 (*)(struct b43_wldev *, u16 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 43113: Function pointer *(dev->phy.ops->radio_write) with type void (*)(struct b43_wldev *, u16 , u16 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 10590: Function pointer *(dev->dev->read16) with type u16 (*)(struct b43_bus_dev *, u16 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 10628: Function pointer *(dev->dev->read32) with type u32 (*)(struct b43_bus_dev *, u16 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 10599: Function pointer *(dev->dev->write16) with type void (*)(struct b43_bus_dev *, u16 , u16 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 10637: Function pointer *(dev->dev->write32) with type void (*)(struct b43_bus_dev *, u16 , u32 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 10325: Function pointer *(core->bus->ops->aread32) with type u32 (*)(struct bcma_device *, u16 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 10334: Function pointer *(core->bus->ops->awrite32) with type void (*)(struct bcma_device *, u16 , u32 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 21862: Function pointer *(core->bus->ops->block_read) with type void (*)(struct bcma_device *, void *, size_t , u16 , u8 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 21872: Function pointer *(core->bus->ops->block_write) with type void (*)(struct bcma_device *, const void *, size_t , u16 , u8 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 21843: Function pointer *(core->bus->ops->read16) with type u16 (*)(struct bcma_device *, u16 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 10307: Function pointer *(core->bus->ops->read32) with type u32 (*)(struct bcma_device *, u16 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 21852: Function pointer *(core->bus->ops->write16) with type void (*)(struct bcma_device *, u16 , u16 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 10316: Function pointer *(core->bus->ops->write32) with type void (*)(struct bcma_device *, u16 , u32 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 63666-63667: Function pointer *(ops->map_page) with type dma_addr_t (*)(struct device *, struct page *, unsigned long, size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 63786: Function pointer *(ops->mapping_error) with type int (*)(struct device *, dma_addr_t ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 63733: Function pointer *(ops->sync_single_for_cpu) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 63766: Function pointer *(ops->sync_single_for_device) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 65638-65639: Function pointer *(ops->fill_descriptor) with type void (*)(struct b43_dmaring *, struct b43_dmadesc_generic *, dma_addr_t , u16 , int, int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 65675-65676: Function pointer *(ops->fill_descriptor) with type void (*)(struct b43_dmaring *, struct b43_dmadesc_generic *, dma_addr_t , u16 , int, int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 63700: Function pointer *(ops->unmap_page) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 64749-64750: Function pointer *(ring->ops->fill_descriptor) with type void (*)(struct b43_dmaring *, struct b43_dmadesc_generic *, dma_addr_t , u16 , int, int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 21813: Function pointer *(dev->ops->block_read) with type void (*)(struct ssb_device *, void *, size_t , u16 , u8 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 21823: Function pointer *(dev->ops->block_write) with type void (*)(struct ssb_device *, const void *, size_t , u16 , u8 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 21794: Function pointer *(dev->ops->read16) with type u16 (*)(struct ssb_device *, u16 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 10278: Function pointer *(dev->ops->read32) with type u32 (*)(struct ssb_device *, u16 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 21803: Function pointer *(dev->ops->write16) with type void (*)(struct ssb_device *, u16 , u16 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 10287: Function pointer *(dev->ops->write32) with type void (*)(struct ssb_device *, u16 , u32 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

line 20688: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp = ldv_init_zalloc(6UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 20692: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___1 = ldv_init_zalloc(16UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 20696: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___3 = ldv_init_zalloc(296UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 20698: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___4 = ldv_init_zalloc(296UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 20700: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___5 = ldv_init_zalloc(296UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 20706: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___8 = ldv_init_zalloc(10UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 20718: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___14 = ldv_init_zalloc(296UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 20722: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___16 = ldv_init_zalloc(8UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 20724: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___17 = ldv_init_zalloc(296UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 20728: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___19 = ldv_init_zalloc(216UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 20732: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___21 = ldv_init_zalloc(296UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 20736: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___23 = ldv_init_zalloc(216UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 20738: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___24 = ldv_init_zalloc(64UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 20740: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___25 = ldv_init_zalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock_nested to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ssb_bus_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pcmcia_disable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function debugfs_create_dir to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ssb_driver_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function bcma_driver_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ssb_bus_resume to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ssb_bus_suspend to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 62105: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp = ldv_init_zalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 70053: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp = ldv_init_zalloc(16UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function sdio_claim_host to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sdio_set_block_size to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sdio_enable_func to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sdio_release_host to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _dev_info to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 72605: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___0 = ldv_init_zalloc(8UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 72320: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___0 = ldv_init_zalloc(8UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 72794: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___0 = ldv_init_zalloc(8UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 62107: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___0 = ldv_init_zalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 72417: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___1 = ldv_init_zalloc(8UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 72227: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___1 = ldv_init_zalloc(8UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 71944: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___1 = ldv_init_zalloc(8UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 72135: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___2 = ldv_init_zalloc(8UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 72704: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___2 = ldv_init_zalloc(8UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 72514: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___2 = ldv_init_zalloc(8UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 71854: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___3 = ldv_init_zalloc(8UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 72042: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___3 = ldv_init_zalloc(8UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 18145: Ignoring parameters passed as varargs to function b43err: b43err(wl, "Controller restart FAILED\n") (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

Assuming external function ldv__builtin_va_start to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv__builtin_va_end to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function net_ratelimit to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_release_19 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function generic_file_llseek to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function simple_open to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_release_15 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_release_12 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_release_13 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_release_11 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_release_14 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_release_20 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_release_16 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_release_18 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_release_17 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_release_21 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function get_zeroed_page to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 70227: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((const void *)to, 0); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function __builtin_object_size to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function __might_fault to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 10628: Ignoring function call through function pointer *(dev->dev->read32): tmp = (*(dev->dev->read32))(dev->dev, (int)offset); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 59930: Ignoring parameters passed as varargs to function b43err: b43err(dev->wl, "HT-PHY is supported only on BCMA bus!\n") (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 52306: Ignoring parameters passed as varargs to function b43err: b43err(dev->wl, "Invalid OFDM PHY access at 0x%04X on N-PHY\n", (int)offset) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

line 52312: Ignoring parameters passed as varargs to function b43err: b43err(dev->wl, "Invalid EXT-G PHY access at 0x%04X on N-PHY\n", (int)offset) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

Assuming external function dump_stack to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 22815: Ignoring parameters passed as varargs to function b43err: b43err(dev->wl, "Invalid EXT-G PHY access at 0x%04X on A-PHY\n", (int)offset) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

line 22821: Ignoring parameters passed as varargs to function b43err: b43err(dev->wl, "Invalid N-BMODE PHY access at 0x%04X on A-PHY\n", (int)offset) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

Assuming external function __might_sleep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 55910: Ignoring parameters passed as varargs to function b43err: b43err(dev->wl, "LP-PHY is supported only on SSB!\n") (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

line 60054: Ignoring parameters passed as varargs to function b43err: b43err(dev->wl, "MAC not suspended\n") (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

line 43076: Ignoring parameters passed as varargs to function b43dbg: b43dbg(dev->wl, "PHY/RADIO register access with enabled MAC.\n") (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

line 52387: Ignoring parameters passed as varargs to function b43err: b43err(dev->wl, "MAC not suspended\n") (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

line 43113: Ignoring function call through function pointer *(dev->phy.ops->radio_write): (*(dev->phy.ops->radio_write))(dev, (int)reg, (int)value); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 43185: Ignoring function call through function pointer *(dev->phy.ops->phy_read): tmp = (*(dev->phy.ops->phy_read))(dev, (int)reg); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 10590: Ignoring function call through function pointer *(dev->dev->read16): tmp = (*(dev->dev->read16))(dev->dev, (int)offset); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

lines 16868-16869: Ignoring parameters passed as varargs to function b43dbg: b43dbg(wl, "%s hardware based encryption for keyidx: %d, mac: %pM\n", __CPAchecker_TMP_11, __CPAchecker_TMP_12, __CPAchecker_TMP_13) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

line 17793: Ignoring parameters passed as varargs to function b43dbg: b43dbg(wl, "Adding Interface type %d\n", __CPAchecker_TMP_6) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

Assuming external function memcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 17828: Ignoring parameters passed as varargs to function b43dbg: b43dbg(wl, "Removing Interface type %d\n", __CPAchecker_TMP_0) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

Assuming external function sdio_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sdio_disable_func to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 10599: Ignoring function call through function pointer *(dev->dev->write16): (*(dev->dev->write16))(dev->dev, (int)offset, (int)value); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 10637: Ignoring function call through function pointer *(dev->dev->write32): (*(dev->dev->write32))(dev->dev, (int)offset, value); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function list_del to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 43245: Ignoring function call through function pointer *(dev->phy.ops->phy_maskset): (*(dev->phy.ops->phy_maskset))(dev, (int)offset, (int)mask, 0); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 43263: Ignoring function call through function pointer *(dev->phy.ops->phy_maskset): (*(dev->phy.ops->phy_maskset))(dev, (int)offset, 65535, (int)set); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 43091: Ignoring function call through function pointer *(dev->phy.ops->radio_read): tmp = (*(dev->phy.ops->radio_read))(dev, (int)reg); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function ieee80211_beacon_get_tim to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 43281: Ignoring function call through function pointer *(dev->phy.ops->phy_maskset): (*(dev->phy.ops->phy_maskset))(dev, (int)offset, (int)mask, (int)set); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function wiphy_rfkill_start_polling to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pcmcia_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 43434: Ignoring function call through function pointer *(dev->phy.ops->adjust_txpower): (*(dev->phy.ops->adjust_txpower))(dev); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function skb_dequeue to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __copy_from_user_overflow to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _copy_from_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 71120: Ignoring function call through function pointer *(dfops->write): err = (*(dfops->write))(dev, (const char *)buf, count); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function free_pages to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snprintf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 18826: Ignoring parameters passed as varargs to function b43info: b43info(dev->wl, "Controller RESET (%s) ...\n", reason) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

Assuming external function ieee80211_queue_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 10278: Ignoring function call through function pointer *(dev->ops->read32): tmp = (*(dev->ops->read32))(dev, (int)offset); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 10287: Ignoring function call through function pointer *(dev->ops->write32): (*(dev->ops->write32))(dev, (int)offset, value); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 10316: Ignoring function call through function pointer *(core->bus->ops->write32): (*(core->bus->ops->write32))(core, (int)offset, value); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 12165: Ignoring parameters passed as varargs to function b43warn: b43warn(dev->wl, "Out of hardware key memory\n") (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

line 10554: Ignoring function call through function pointer *(wldev->dev->bus_powerup): tmp = (*(wldev->dev->bus_powerup))(wldev->dev, (int)dynamic_pctl); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 10572: Ignoring function call through function pointer *(wldev->dev->device_enable): (*(wldev->dev->device_enable))(wldev->dev, core_specific_flags); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function ssb_device_disable to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function bcma_core_enable to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ssb_device_enable to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function bcma_core_disable to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ieee80211_free_txskb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 51570: Ignoring parameters passed as varargs to function b43dbg: b43dbg(dev->wl, "Calculated TX power: %u.%u\n", ((int)tmp___0) >> 2, ((((int)tmp) & 3) * 100) / 4) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

Assuming external function debugfs_remove to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 15560: Ignoring function call through function pointer *(phy->ops->pwork_15sec): (*(phy->ops->pwork_15sec))(dev); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 15519: Ignoring function call through function pointer *(ops->pwork_60sec): (*(ops->pwork_60sec))(dev); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function round_jiffies to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 43470: Ignoring function call through function pointer *(phy->ops->recalc_txpower): result = (*(phy->ops->recalc_txpower))(dev, (flags & 2U) != 0U); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 13523: Ignoring parameters passed as varargs to function b43err: b43err(dev->wl, "MAC transmission error\n") (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

line 10563: Ignoring function call through function pointer *(wldev->dev->device_is_enabled): tmp = (*(wldev->dev->device_is_enabled))(wldev->dev); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 12599: Ignoring function call through function pointer *(dev->phy.ops->switch_analog): (*(dev->phy.ops->switch_analog))(dev, 1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function bcma_core_set_clockmode to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function bcma_core_is_enabled to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ssb_bus_may_powerdown to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ssb_device_is_enabled to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 10325: Ignoring function call through function pointer *(core->bus->ops->aread32): tmp = (*(core->bus->ops->aread32))(core, (int)offset); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function msleep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 10334: Ignoring function call through function pointer *(core->bus->ops->awrite32): (*(core->bus->ops->awrite32))(core, (int)offset, value); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function usleep_range to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 17623: Ignoring function call through function pointer *(phy->ops->prepare_structs): (*(phy->ops->prepare_structs))(dev); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function ssb_pcicore_dev_irqvecs_enable to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function bcma_host_pci_irq_ctl to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function bcma_host_pci_up to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 17639: Ignoring function call through function pointer *(phy->ops->prepare_hardware): err = (*(phy->ops->prepare_hardware))(dev); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function ssb_commit_settings to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function request_threaded_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ieee80211_wake_queues to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 17074: Ignoring parameters passed as varargs to function b43err: b43err(dev->wl, "Cannot request IRQ-%d\n", dev->dev->irq) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

Assuming external function sdio_claim_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 17065: Ignoring parameters passed as varargs to function b43err: b43err(dev->wl, "Cannot request SDIO IRQ\n") (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

line 34522: Ignoring parameters passed as varargs to function b43err: b43err(dev->wl, "Unsupported antswlut: %d\n", (int)antswlut) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

line 42942: Ignoring function call through function pointer *(dev->phy.ops->supports_hwpctl): tmp = (*(dev->phy.ops->supports_hwpctl))(dev); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 16357: Ignoring parameters passed as varargs to function b43dbg: b43dbg(dev->wl, "Switching to %s GHz band\n", tmp___2) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

line 42881: Ignoring function call through function pointer *(phy->ops->switch_analog): (*(phy->ops->switch_analog))(dev, 1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dev_kfree_skb_any to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ieee80211_queue_delayed_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

lines 15568-15569: Ignoring parameters passed as varargs to function b43dbg: b43dbg(dev->wl, "Stats: %7u IRQs/sec, %7u TX/sec, %7u RX/sec\n", (dev->irq_count) / 15U, (dev->tx_count) / 15U, (dev->rx_count) / 15U) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

lines 15577-15578: Ignoring parameters passed as varargs to function b43dbg: b43dbg(dev->wl, "Stats: %7u IRQ-%02u/sec (0x%08X)\n", ((dev->irq_bit_count)[i]) / 15U, i, 1 << ((int)i)) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

line 13529: Ignoring parameters passed as varargs to function b43err: b43err(dev->wl, "PHY transmission error\n") (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

line 27367: Ignoring parameters passed as varargs to function b43dbg: b43dbg(dev->wl, "Adjusting TX power\n") (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

line 29709: Ignoring parameters passed as varargs to function b43dbg: b43dbg(dev->wl, "LO: Recalibrating current LO setting\n") (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

lines 29682-29683: Ignoring parameters passed as varargs to function b43dbg: b43dbg(dev->wl, "LO: Item BB(%u), RF(%u,%u), I=%d, Q=%d expired\n", (int)(cal->bbatt.att), (int)(cal->rfatt.att), (int)(cal->rfatt.with_padmix), (int)(cal->ctl.i), (int)(cal->ctl.q)) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

line 16346: Ignoring parameters passed as varargs to function b43err: b43err(dev->wl, "This device doesn\'t support %s-GHz band\n", tmp___1) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

Assuming external function skb_queue_tail to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ieee80211_stop_queue to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 67465: Ignoring parameters passed as varargs to function b43dbg: b43dbg(dev->wl, "PIO: TX packet longer than queue.\n") (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

lines 13545-13547: Ignoring parameters passed as varargs to function b43err: b43err(dev->wl, "Fatal DMA error: 0x%08X, 0x%08X, 0x%08X, 0x%08X, 0x%08X, 0x%08X\n", dma_reason[0], dma_reason[1], dma_reason[2], dma_reason[3], dma_reason[4], dma_reason[5]) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

line 13548: Ignoring parameters passed as varargs to function b43err: b43err(dev->wl, "This device does not support DMA on your system. It will now be switched to PIO.\n") (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

line 13535: Ignoring parameters passed as varargs to function b43err: b43err(dev->wl, "Too many PHY TX errors, restarting the controller\n") (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

line 43402: Ignoring function call through function pointer *(phy->ops->software_rfkill): (*(phy->ops->software_rfkill))(dev, (int)blocked); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 67473: Ignoring parameters passed as varargs to function b43warn: b43warn(dev->wl, "PIO: TX packet overflow.\n") (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

Assuming external function skb_queue_head to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 13587: Ignoring parameters passed as varargs to function b43warn: b43warn(dev->wl, "RX descriptor underrun\n") (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

Assuming external function __init_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function lockdep_init_map to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function init_timer_key to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 17087: Ignoring parameters passed as varargs to function b43dbg: b43dbg(dev->wl, "Wireless interface started\n") (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

Assuming external function ieee80211_get_response_rate to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            135166 (19% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  133157 (99%)
  Because of loop head:            2009 (1%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         0 (0%)
  Times precision was empty:       135166 (100%)
  Times precision was {false}:     0 (0%)
  Times result was cached:         0 (0%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      0 (0%)
  Times result was 'false':        0 (0%)
Number of strengthen sat checks:   0
Number of coverage checks:         86860
  BDD entailment checks:           17228
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       495
Number of predicates discovered:          0

Time for post operator:                736.541s
  Time for path formula creation:      736.022s
Time for strengthen operator:            0.790s
Time for prec operator:                  8.476s
  Time for abstraction:                  0.499s (Max:     0.008s, Count: 135166)
    Solving time:                        0.000s (Max:     0.000s)
    Model enumeration time:              0.000s
    Time for BDD construction:           0.000s (Max:     0.000s)
Time for merge operator:                59.229s
Time for coverage check:                 0.084s
  Time for BDD entailment checks:        0.060s
Total time for SMT solver (w/o itp):     0.000s

Number of path formula cache hits:   141910 (19%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:   716.258s

Total number of created targets for pointer analysis: 10363999
   Number of created targets for uf: *unsigned_short_int is 7437
   Number of created targets for uf: *signed_char is 129
   Number of created targets for uf: *signed_int is 1989
   Number of created targets for uf: *(struct_b43_nphy_chantabent_rev7_2g)* is 2
   Number of created targets for uf: *unsigned_char is 14511
   Number of created targets for uf: *(struct_b43_nphy_chantabent_rev7)* is 2
   Number of created targets for uf: *(struct_list_head)* is 71
   Number of created targets for uf: *_Bool is 7
   Number of created targets for uf: *enum_b43_led_behaviour is 10
   Number of created targets for uf: *unsigned_long_long_int is 3
   Number of created targets for uf: *unsigned_int is 39205
   Number of created targets for uf: *signed_short_int is 167


Number of BDD nodes:                               202
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                           0 (count: 152395, min: 0, max: 0, avg: 0.00)
Time for BDD node cleanup:                             0.040s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  1.708s
  Time for transition matches:                         1.120s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.000s
Automaton transfers with branching:                0
Automaton transfer successors:                       713497 (count: 713497, min: 1, max: 1, avg: 1.00) [1 x 713497]

CPA algorithm statistics
------------------------
Number of iterations:            496735
Max size of waitlist:            13307
Average size of waitlist:        6390
Number of computed successors:   562083
Max successors for one state:    2
Number of times merged:          34816
Number of times stopped:         52044
Number of times breaked:         0

Total time for CPA algorithm:       877.679s (Max:   877.679s)
  Time for choose from waitlist:      0.467s
  Time for precision adjustment:     13.304s
  Time for transfer relation:       797.706s
  Time for merge operator:           60.300s
  Time for stop operator:             1.116s
  Time for adding to reached set:     2.101s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   0

CEGAR algorithm statistics
--------------------------
Number of refinements:                0

Code Coverage
-----------------------------
  Function coverage:      0.391
  Visited lines:          11293
  Total lines:            31840
  Line coverage:          0.355
  Visited conditions:     3814
  Total conditions:       11178
  Condition coverage:     0.341

CPAchecker general statistics
-----------------------------
Number of program locations:     46263
Number of CFA edges:             58437
Number of relevant variables:    7858
Number of functions:             1291
Number of loops:                 353
Size of reached set:             510040
  Number of reached locations:   9676 (21%)
    Avg states per location:     52
    Max states per location:     9035 (at node N199)
  Number of reached functions:   505 (39%)
  Number of partitions:          510040
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0
  Size of final wait list        13306

Time for analysis setup:         22.678s
  Time for loading CPAs:          1.454s
  Time for loading parser:        0.691s
  Time for CFA construction:     20.356s
    Time for parsing file(s):     2.879s
    Time for AST to CFA:          7.895s
    Time for CFA sanity check:    1.940s
    Time for post-processing:     7.393s
      Time for var class.:        3.968s
Time for Analysis:              877.679s
CPU time for analysis:          877.620s
Total time for CPAchecker:      900.366s
Total CPU time for CPAchecker:  900.210s
Time for statistics:              5.731s

Time for Garbage Collector:      33.477s (in 504 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:               1244MB (  1187 MiB) max;    588MB (   561 MiB) avg;   1259MB (  1201 MiB) peak
Used non-heap memory:             49MB (    47 MiB) max;     47MB (    45 MiB) avg;     50MB (    47 MiB) peak
Allocated heap memory:          1649MB (  1572 MiB) max;    880MB (   839 MiB) avg
Allocated non-heap memory:        51MB (    49 MiB) max;     50MB (    48 MiB) avg
Total process virtual memory:   8096MB (  7721 MiB) max;   8094MB (  7719 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
