scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-32_7a-drivers--net--arcnet--com90xx.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_tnt64lb2/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 5948: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_handler_precall to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iounmap to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __release_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function probe_irq_on to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function probe_irq_off to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function alloc_arcdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __request_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ioremap_nocache to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function request_threaded_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function register_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function unregister_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            1210 (3% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            1139 (94%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         71 (6%)
  Times precision was empty:       341 (28%)
  Times precision was {false}:     69 (6%)
  Times result was cached:         544 (45%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      256 (21%)
  Times result was 'false':        71 (6%)
Number of strengthen sat checks:   0
Number of coverage checks:         8178
  BDD entailment checks:           1170
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       83
Number of predicates discovered:          5
Number of abstraction locations:          18
Max number of predicates per location:    4
Avg number of predicates per location:    3
Total predicates per abstraction:         2192
Max number of predicates per abstraction: 4
Avg number of predicates per abstraction: 6.74
Number of irrelevant predicates:          366 (17%)
Number of preds handled by boolean abs:   535 (24%)
  Total number of models for allsat:      274
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.07

Time for post operator:                  1.887s
  Time for path formula creation:        1.818s
Time for strengthen operator:            0.144s
Time for prec operator:                  2.968s
  Time for abstraction:                  2.774s (Max:     0.042s, Count: 1210)
    Boolean abstraction:                 1.138s
    Solving time:                        1.045s (Max:     0.036s)
    Model enumeration time:              0.092s
    Time for BDD construction:           0.062s (Max:     0.009s)
Time for merge operator:                 0.255s
Time for coverage check:                 0.035s
  Time for BDD entailment checks:        0.032s
Total time for SMT solver (w/o itp):     1.137s

Number of path formula cache hits:   32987 (85%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     1.565s

Total number of created targets for pointer analysis: 753
   Number of created targets for uf: *(struct_net_device)* is 49
   Number of created targets for uf: *signed_int is 81
   Number of created targets for uf: *unsigned_long_int is 7


Number of BDD nodes:                               223
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         546 (count: 3448, min: 0, max: 174, avg: 0.16)
Time for BDD node cleanup:                             0.004s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.320s
Automaton transfers with branching:                0
Automaton transfer successors:                        34997 (count: 34997, min: 1, max: 1, avg: 1.00) [1 x 34997]

CPA algorithm statistics
------------------------
Number of iterations:            23791
Max size of waitlist:            37
Average size of waitlist:        21
Number of computed successors:   28125
Max successors for one state:    2
Number of times merged:          3504
Number of times stopped:         4154
Number of times breaked:         17

Total time for CPA algorithm:         8.455s (Max:     1.678s)
  Time for choose from waitlist:      0.100s
  Time for precision adjustment:      3.491s
  Time for transfer relation:         3.499s
  Time for merge operator:            0.462s
  Time for stop operator:             0.171s
  Time for adding to reached set:     0.201s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   17
Avg. length of target path (in blocks):                 194 (count: 17, min: 2, max: 19, avg: 11.41)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.546s
  Counterexample analysis:                             0.316s (Max:     0.058s, Calls: 17)
    Refinement sat check:                              0.258s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.002s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.037s
  Precision update:                                    0.023s
  ARG update:                                          0.141s

Length of refined path (in blocks):                     174 (count: 17, min: 2, max: 19, avg: 10.24)
Number of affected states:                              153 (count: 17, min: 1, max: 18, avg: 9.00)
Length (states) of path with itp 'true':                  4 (count: 17, min: 0, max: 1, avg: 0.24)
Length (states) of path with itp non-trivial itp:       153 (count: 17, min: 1, max: 18, avg: 9.00)
Length (states) of path with itp 'false':                 4 (count: 17, min: 0, max: 1, avg: 0.24)
Different non-trivial interpolants along paths:           0 (count: 17, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:             136 (count: 17, min: 0, max: 17, avg: 8.00)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                17
Number of successful refinements:     17
Number of failed refinements:         0
Max. size of reached set before ref.: 1628
Max. size of reached set after ref.:  81
Avg. size of reached set before ref.: 1345.65
Avg. size of reached set after ref.:  31.29

Total time for CEGAR algorithm:       9.147s
Time for refinements:                 0.690s
Average time for refinement:          0.040s
Max time for refinement:              0.099s

Code Coverage
-----------------------------
  Function coverage:      0.327
  Visited lines:          1428
  Total lines:            1668
  Line coverage:          0.856
  Visited conditions:     258
  Total conditions:       342
  Condition coverage:     0.754

CPAchecker general statistics
-----------------------------
Number of program locations:     2136
Number of CFA edges:             2331
Number of relevant variables:    147
Number of functions:             55
Number of loops:                 18
Size of reached set:             1557
  Number of reached locations:   666 (31%)
    Avg states per location:     2
    Max states per location:     21 (at node N1112)
  Number of reached functions:   18 (33%)
  Number of partitions:          1547
    Avg size of partitions:      1
    Max size of partitions:      3 (with key [N189 (before line 4887), Function com90xx_probe called from node N988, stack depth 3 [2b46a8c1], stack [main, com90xx_init, com90xx_probe]])
  Number of target states:       0

Time for analysis setup:          4.922s
  Time for loading CPAs:          0.921s
  Time for loading parser:        0.741s
  Time for CFA construction:      3.100s
    Time for parsing file(s):     0.978s
    Time for AST to CFA:          1.006s
    Time for CFA sanity check:    0.189s
    Time for post-processing:     0.703s
      Time for var class.:        0.251s
Time for Analysis:                9.147s
CPU time for analysis:            9.140s
Time for analyzing result:        0.001s
Total time for CPAchecker:       14.080s
Total CPU time for CPAchecker:   14.070s
Time for statistics:              0.110s

Time for Garbage Collector:       0.231s (in 16 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 66MB (    63 MiB) max;     41MB (    39 MiB) avg;     68MB (    65 MiB) peak
Used non-heap memory:             37MB (    35 MiB) max;     30MB (    29 MiB) avg;     37MB (    36 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        38MB (    36 MiB) max;     32MB (    31 MiB) avg
Total process virtual memory:   8134MB (  7757 MiB) max;   8107MB (  7731 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
