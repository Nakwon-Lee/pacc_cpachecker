scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-32_7a-drivers--net--wireless--zd1211rw--zd1211rw.ko-ldv_main1_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_2uvmyr3s/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 9315: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 12653: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 13482: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 13859: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 14700: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 15277: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 15672: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 15754: Dead code detected: __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& kernel_stack)); (CFACreationUtils.addEdgeToCFA, INFO)

line 15757: Dead code detected: __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack)); (CFACreationUtils.addEdgeToCFA, INFO)

line 15760: Dead code detected: __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (8UL) {
  case 1UL:
  __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& kernel_stack));
  goto ldv_6199;
  case 2UL:
  __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack));
  goto ldv_6199;
  case 4UL:
  __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack));
  goto ldv_6199;
  case 8UL:
  __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack));
  goto ldv_6199;
  default:
  __bad_percpu_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 19379: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 15616: Function pointer *(rf->patch_6m_band_edge) with type int (*)(struct zd_rf *, u8 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 15496: Function pointer *(rf->set_channel) with type int (*)(struct zd_rf *, u8 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_handler_precall to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_pr_debug to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dump_stack to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_bulk_msg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_interrupt_msg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function msecs_to_jiffies to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function wait_for_completion_timeout to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_printk to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            49 (2% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            33 (67%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         16 (33%)
  Times precision was empty:       26 (53%)
  Times precision was {false}:     15 (31%)
  Times result was cached:         0 (0%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      8 (16%)
  Times result was 'false':        11 (22%)
Number of strengthen sat checks:   0
Number of coverage checks:         73
  BDD entailment checks:           15
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       105
Number of predicates discovered:          6
Number of abstraction locations:          7
Max number of predicates per location:    4
Avg number of predicates per location:    1
Total predicates per abstraction:         29
Max number of predicates per abstraction: 4
Avg number of predicates per abstraction: 1.26
Number of irrelevant predicates:          15 (52%)
Number of preds handled by boolean abs:   14 (48%)
  Total number of models for allsat:      7
  Max number of models for allsat:        1
  Avg number of models for allsat:        0.88

Time for post operator:                  1.568s
  Time for path formula creation:        1.547s
Time for strengthen operator:            0.010s
Time for prec operator:                888.327s
  Time for abstraction:                888.316s (Max:   887.693s, Count: 49)
    Boolean abstraction:               887.518s
    Solving time:                      888.060s (Max:   887.707s)
    Model enumeration time:              0.017s
    Time for BDD construction:           0.007s (Max:     0.006s)
Time for merge operator:                 0.084s
Time for coverage check:                 0.000s
  Time for BDD entailment checks:        0.000s
Total time for SMT solver (w/o itp):   888.081s

Number of path formula cache hits:   415 (16%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     1.490s

Total number of created targets for pointer analysis: 1883
   Number of created targets for uf: *unsigned_short_int is 136
   Number of created targets for uf: *signed_int is 242
   Number of created targets for uf: *_Bool is 2
   Number of created targets for uf: *unsigned_int is 187


Number of BDD nodes:                               208
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                           0 (count: 195, min: 0, max: 0, avg: 0.00)
Time for BDD node cleanup:                             0.002s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.062s
Automaton transfers with branching:                0
Automaton transfer successors:                         2662 (count: 2662, min: 1, max: 1, avg: 1.00) [1 x 2662]

CPA algorithm statistics
------------------------
Number of iterations:            736
Max size of waitlist:            29
Average size of waitlist:        16
Number of computed successors:   828
Max successors for one state:    2
Number of times merged:          29
Number of times stopped:         44
Number of times breaked:         5

Total time for CPA algorithm:       890.489s (Max:   887.992s)
  Time for choose from waitlist:      0.007s
  Time for precision adjustment:    888.421s
  Time for transfer relation:         1.899s
  Time for merge operator:            0.086s
  Time for stop operator:             0.012s
  Time for adding to reached set:     0.028s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   5
Avg. length of target path (in blocks):                  15 (count: 5, min: 2, max: 7, avg: 3.00)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.432s
  Counterexample analysis:                             0.388s (Max:     0.235s, Calls: 5)
    Refinement sat check:                              0.344s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.006s
  Precision update:                                    0.002s
  ARG update:                                          0.024s

Length of refined path (in blocks):                      15 (count: 5, min: 2, max: 7, avg: 3.00)
Number of affected states:                                9 (count: 5, min: 1, max: 5, avg: 1.80)
Length (states) of path with itp 'true':                  1 (count: 5, min: 0, max: 1, avg: 0.20)
Length (states) of path with itp non-trivial itp:         9 (count: 5, min: 1, max: 5, avg: 1.80)
Length (states) of path with itp 'false':                 0 (count: 5, min: 0, max: 0, avg: 0.00)
Different non-trivial interpolants along paths:           0 (count: 5, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:               4 (count: 5, min: 0, max: 4, avg: 0.80)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                5
Number of successful refinements:     5
Number of failed refinements:         0
Max. size of reached set before ref.: 490
Max. size of reached set after ref.:  116
Avg. size of reached set before ref.: 121.20
Avg. size of reached set after ref.:  28.80

Total time for CEGAR algorithm:     890.955s
Time for refinements:                 0.464s
Average time for refinement:          0.092s
Max time for refinement:              0.257s

Code Coverage
-----------------------------
  Function coverage:      0.069
  Visited lines:          1258
  Total lines:            8960
  Line coverage:          0.140
  Visited conditions:     78
  Total conditions:       1714
  Condition coverage:     0.046

CPAchecker general statistics
-----------------------------
Number of program locations:     11872
Number of CFA edges:             13466
Number of relevant variables:    1961
Number of functions:             479
Number of loops:                 56
Size of reached set:             311
  Number of reached locations:   268 (2%)
    Avg states per location:     1
    Max states per location:     7 (at node N10844)
  Number of reached functions:   33 (7%)
  Number of partitions:          311
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0
  Size of final wait list        25

Time for analysis setup:          9.809s
  Time for loading CPAs:          1.194s
  Time for loading parser:        0.765s
  Time for CFA construction:      7.676s
    Time for parsing file(s):     1.614s
    Time for AST to CFA:          2.815s
    Time for CFA sanity check:    0.652s
    Time for post-processing:     2.267s
      Time for var class.:        1.392s
Time for Analysis:              890.955s
CPU time for analysis:          890.890s
Total time for CPAchecker:      900.775s
Total CPU time for CPAchecker:  900.650s
Time for statistics:              0.116s

Time for Garbage Collector:       0.499s (in 19 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 87MB (    83 MiB) max;     56MB (    53 MiB) avg;     94MB (    89 MiB) peak
Used non-heap memory:             35MB (    33 MiB) max;     35MB (    33 MiB) avg;     35MB (    34 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        36MB (    35 MiB) max;     36MB (    35 MiB) avg
Total process virtual memory:   8777MB (  8370 MiB) max;   8515MB (  8121 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
