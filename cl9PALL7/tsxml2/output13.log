scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-drivers--mfd--sm501.ko-main.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_wx_5bvdi/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 5817: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 5244: Function pointer *(pd->set_power) with type int (*)(struct device *, unsigned int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 5207: Function pointer *(pd->get_power) with type int (*)(struct device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function dev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_enable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __request_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_ioremap_bar to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __mutex_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __raw_spin_lock_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _dev_info to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_create_file to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_dev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function msleep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ioremap_nocache to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function gpiochip_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function gpiochip_remove to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iounmap to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function release_resource to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_disable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __pci_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_driver_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 5207: Ignoring function call through function pointer *(pd->get_power): tmp___0 = (*(pd->get_power))(sm->dev); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5244: Ignoring function call through function pointer *(pd->set_power): (*(pd->set_power))(sm->dev, (unsigned int)on); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function platform_get_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_get_resource to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_remove_file to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function list_del to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __list_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            3373 (1% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            2720 (81%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         653 (19%)
  Times precision was empty:       1978 (59%)
  Times precision was {false}:     258 (8%)
  Times result was cached:         800 (24%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      337 (10%)
  Times result was 'false':        714 (21%)
Number of strengthen sat checks:   0
Number of coverage checks:         24121
  BDD entailment checks:           639
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       386
Number of predicates discovered:          8
Number of abstraction locations:          6
Max number of predicates per location:    7
Avg number of predicates per location:    4
Total predicates per abstraction:         3885
Max number of predicates per abstraction: 7
Avg number of predicates per abstraction: 6.53
Number of irrelevant predicates:          1088 (28%)
Number of preds handled by boolean abs:   1161 (30%)
  Total number of models for allsat:      335
  Max number of models for allsat:        8
  Avg number of models for allsat:        0.99

Time for post operator:                  4.470s
  Time for path formula creation:        4.322s
Time for strengthen operator:            0.203s
Time for prec operator:                 14.271s
  Time for abstraction:                 14.038s (Max:     0.334s, Count: 3373)
    Boolean abstraction:                 8.268s
    Solving time:                        9.562s (Max:     0.265s)
    Model enumeration time:              1.109s
    Time for BDD construction:           0.049s (Max:     0.009s)
Time for merge operator:                 0.808s
Time for coverage check:                 0.031s
  Time for BDD entailment checks:        0.018s
Total time for SMT solver (w/o itp):    10.671s

Number of path formula cache hits:   230331 (84%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     3.333s

Total number of created targets for pointer analysis: 11731
   Number of created targets for uf: *(void)* is 706
   Number of created targets for uf: *signed_int is 1297
   Number of created targets for uf: *(struct_sm501_platdata)* is 13
   Number of created targets for uf: *(struct_list_head)* is 81
   Number of created targets for uf: *(struct_resource)* is 1000
   Number of created targets for uf: *unsigned_char_:_1 is 32
   Number of created targets for uf: *unsigned_long_long_int is 539
   Number of created targets for uf: *(struct_device)* is 13
   Number of created targets for uf: *unsigned_int is 84
   Number of created targets for uf: *unsigned_long_int is 40


Number of BDD nodes:                               454
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         919 (count: 6291, min: 0, max: 50, avg: 0.15)
Time for BDD node cleanup:                             0.004s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.575s
  Time for transition matches:                         0.268s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.003s
Automaton transfers with branching:                0
Automaton transfer successors:                       261151 (count: 261151, min: 1, max: 1, avg: 1.00) [1 x 261151]

CPA algorithm statistics
------------------------
Number of iterations:            155196
Max size of waitlist:            244
Average size of waitlist:        77
Number of computed successors:   170264
Max successors for one state:    2
Number of times merged:          11741
Number of times stopped:         12030
Number of times breaked:         23

Total time for CPA algorithm:        24.727s (Max:     4.591s)
  Time for choose from waitlist:      0.115s
  Time for precision adjustment:     15.182s
  Time for transfer relation:         7.291s
  Time for merge operator:            1.015s
  Time for stop operator:             0.242s
  Time for adding to reached set:     0.186s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   23
Avg. length of target path (in blocks):                 101 (count: 23, min: 2, max: 5, avg: 4.39)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   1.515s
  Counterexample analysis:                             1.100s (Max:     0.126s, Calls: 23)
    Refinement sat check:                              0.988s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.007s
  Precision update:                                    0.022s
  ARG update:                                          0.334s

Length of refined path (in blocks):                      94 (count: 23, min: 2, max: 5, avg: 4.09)
Number of affected states:                               71 (count: 23, min: 1, max: 4, avg: 3.09)
Length (states) of path with itp 'true':                  0 (count: 23, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:        71 (count: 23, min: 1, max: 4, avg: 3.09)
Length (states) of path with itp 'false':                 3 (count: 23, min: 0, max: 1, avg: 0.13)
Different non-trivial interpolants along paths:           0 (count: 23, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:              48 (count: 23, min: 0, max: 3, avg: 2.09)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                23
Number of successful refinements:     23
Number of failed refinements:         0
Max. size of reached set before ref.: 14131
Max. size of reached set after ref.:  8
Avg. size of reached set before ref.: 6025.35
Avg. size of reached set after ref.:  8.00

Total time for CEGAR algorithm:      26.414s
Time for refinements:                 1.676s
Average time for refinement:          0.072s
Max time for refinement:              0.146s

Code Coverage
-----------------------------
  Function coverage:      0.640
  Visited lines:          1767
  Total lines:            2197
  Line coverage:          0.804
  Visited conditions:     286
  Total conditions:       440
  Condition coverage:     0.650

CPAchecker general statistics
-----------------------------
Number of program locations:     2964
Number of CFA edges:             3321
Number of relevant variables:    321
Number of functions:             114
Number of loops:                 12
Size of reached set:             19121
  Number of reached locations:   1013 (34%)
    Avg states per location:     18
    Max states per location:     562 (at node N26)
  Number of reached functions:   73 (64%)
  Number of partitions:          19116
    Avg size of partitions:      1
    Max size of partitions:      6 (with key [N1737 (before line 5563), Function main called from node N1722, stack depth 1 [7dd00705], stack [main]])
  Number of target states:       0
  Size of final wait list        238

Time for analysis setup:          3.869s
  Time for loading CPAs:          0.607s
  Time for loading parser:        0.516s
  Time for CFA construction:      2.637s
    Time for parsing file(s):     0.770s
    Time for AST to CFA:          1.010s
    Time for CFA sanity check:    0.145s
    Time for post-processing:     0.566s
      Time for var class.:        0.302s
Time for Analysis:               26.414s
CPU time for analysis:           26.430s
Total time for CPAchecker:       30.288s
Total CPU time for CPAchecker:   30.280s
Time for statistics:              0.272s

Time for Garbage Collector:       0.845s (in 86 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                109MB (   104 MiB) max;     63MB (    60 MiB) avg;    119MB (   114 MiB) peak
Used non-heap memory:             39MB (    37 MiB) max;     36MB (    34 MiB) avg;     40MB (    38 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        41MB (    39 MiB) max;     38MB (    36 MiB) avg
Total process virtual memory:   8067MB (  7693 MiB) max;   8058MB (  7685 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
