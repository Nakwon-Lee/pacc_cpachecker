scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-drivers--mfd--sm501.ko-main.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_2ohbisme/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 5817: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 5244: Function pointer *(pd->set_power) with type int (*)(struct device *, unsigned int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 5207: Function pointer *(pd->get_power) with type int (*)(struct device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function dev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_enable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __request_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_ioremap_bar to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __mutex_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __raw_spin_lock_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _dev_info to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_create_file to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_dev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function msleep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ioremap_nocache to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function gpiochip_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function gpiochip_remove to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iounmap to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function release_resource to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_disable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __pci_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_driver_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 5207: Ignoring function call through function pointer *(pd->get_power): tmp___0 = (*(pd->get_power))(sm->dev); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5244: Ignoring function call through function pointer *(pd->set_power): (*(pd->set_power))(sm->dev, (unsigned int)on); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function platform_get_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_get_resource to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_remove_file to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function list_del to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __list_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            37637 (2% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            32618 (87%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         5019 (13%)
  Times precision was empty:       2973 (8%)
  Times precision was {false}:     919 (2%)
  Times result was cached:         29515 (78%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      4230 (11%)
  Times result was 'false':        8639 (23%)
Number of strengthen sat checks:   0
Number of coverage checks:         270086
  BDD entailment checks:           45452
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       386
Number of predicates discovered:          9
Number of abstraction locations:          11
Max number of predicates per location:    7
Avg number of predicates per location:    4
Total predicates per abstraction:         151826
Max number of predicates per abstraction: 7
Avg number of predicates per abstraction: 29.49
Number of irrelevant predicates:          27180 (18%)
Number of preds handled by boolean abs:   17230 (11%)
  Total number of models for allsat:      4341
  Max number of models for allsat:        8
  Avg number of models for allsat:        1.03

Time for post operator:                 46.856s
  Time for path formula creation:       45.950s
Time for strengthen operator:            1.788s
Time for prec operator:                165.714s
  Time for abstraction:                163.918s (Max:     1.364s, Count: 37637)
    Boolean abstraction:               109.377s
    Solving time:                      107.338s (Max:     0.191s)
    Model enumeration time:             11.152s
    Time for BDD construction:           0.201s (Max:     0.009s)
Time for merge operator:                10.586s
Time for coverage check:                 0.074s
  Time for BDD entailment checks:        0.048s
Total time for SMT solver (w/o itp):   118.490s

Number of path formula cache hits:   1422336 (59%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    36.534s

Total number of created targets for pointer analysis: 502265
   Number of created targets for uf: *(void)* is 32918
   Number of created targets for uf: *signed_int is 281
   Number of created targets for uf: *(struct_sm501_platdata)* is 13
   Number of created targets for uf: *(struct_list_head)* is 94
   Number of created targets for uf: *signed_long_int is 81
   Number of created targets for uf: *(struct_resource)* is 45498
   Number of created targets for uf: *unsigned_char_:_1 is 1449
   Number of created targets for uf: *unsigned_long_long_int is 28511
   Number of created targets for uf: *(struct_device)* is 13
   Number of created targets for uf: *unsigned_int is 84
   Number of created targets for uf: *unsigned_long_int is 40


Number of BDD nodes:                               568
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        8539 (count: 80327, min: 0, max: 169, avg: 0.11)
Time for BDD node cleanup:                             0.018s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  2.859s
  Time for transition matches:                         1.613s
  Time for transition assertions:                      0.001s
  Time for transition actions:                         0.033s
Automaton transfers with branching:                0
Automaton transfer successors:                      2313817 (count: 2313817, min: 1, max: 1, avg: 1.00) [1 x 2313817]

CPA algorithm statistics
------------------------
Number of iterations:            1429715
Max size of waitlist:            291
Average size of waitlist:        75
Number of computed successors:   1571248
Max successors for one state:    2
Number of times merged:          112317
Number of times stopped:         127926
Number of times breaked:         72

Total time for CPA algorithm:       264.569s (Max:   175.462s)
  Time for choose from waitlist:      0.491s
  Time for precision adjustment:    177.856s
  Time for transfer relation:        66.949s
  Time for merge operator:           12.045s
  Time for stop operator:             1.255s
  Time for adding to reached set:     2.583s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   72
Avg. length of target path (in blocks):                 536 (count: 72, min: 2, max: 15, avg: 7.44)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   5.967s
  Counterexample analysis:                             4.434s (Max:     0.132s, Calls: 72)
    Refinement sat check:                              3.824s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.002s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.014s
  Precision update:                                    0.029s
  ARG update:                                          1.374s

Length of refined path (in blocks):                     529 (count: 72, min: 2, max: 15, avg: 7.35)
Number of affected states:                              208 (count: 72, min: 1, max: 10, avg: 2.89)
Length (states) of path with itp 'true':                249 (count: 72, min: 0, max: 13, avg: 3.46)
Length (states) of path with itp non-trivial itp:       208 (count: 72, min: 1, max: 10, avg: 2.89)
Length (states) of path with itp 'false':                 3 (count: 72, min: 0, max: 1, avg: 0.04)
Different non-trivial interpolants along paths:           0 (count: 72, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:             136 (count: 72, min: 0, max: 9, avg: 1.89)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                72
Number of successful refinements:     72
Number of failed refinements:         0
Max. size of reached set before ref.: 54794
Max. size of reached set after ref.:  53207
Avg. size of reached set before ref.: 24999.46
Avg. size of reached set after ref.:  15800.11

Total time for CEGAR algorithm:     272.817s
Time for refinements:                 7.398s
Average time for refinement:          0.102s
Max time for refinement:              0.304s

Code Coverage
-----------------------------
  Function coverage:      0.684
  Visited lines:          1899
  Total lines:            2197
  Line coverage:          0.864
  Visited conditions:     316
  Total conditions:       440
  Condition coverage:     0.718

CPAchecker general statistics
-----------------------------
Number of program locations:     2964
Number of CFA edges:             3321
Number of relevant variables:    321
Number of functions:             114
Number of loops:                 12
Size of reached set:             772331
  Number of reached locations:   1143 (39%)
    Avg states per location:     675
    Max states per location:     10043 (at node N26)
  Number of reached functions:   78 (68%)
  Number of partitions:          772326
    Avg size of partitions:      1
    Max size of partitions:      6 (with key [N1737 (before line 5563), Function main called from node N1722, stack depth 1 [7dd00705], stack [main]])
  Number of target states:       0

Time for analysis setup:          4.078s
  Time for loading CPAs:          0.846s
  Time for loading parser:        0.569s
  Time for CFA construction:      2.521s
    Time for parsing file(s):     0.683s
    Time for AST to CFA:          0.865s
    Time for CFA sanity check:    0.155s
    Time for post-processing:     0.679s
      Time for var class.:        0.354s
Time for Analysis:              272.817s
CPU time for analysis:          272.780s
Time for analyzing result:        0.638s
Total time for CPAchecker:      276.898s
Total CPU time for CPAchecker:  276.840s
Time for statistics:              5.585s

Time for Garbage Collector:      21.897s (in 517 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:               1147MB (  1094 MiB) max;    314MB (   299 MiB) avg;   1202MB (  1146 MiB) peak
Used non-heap memory:             45MB (    43 MiB) max;     40MB (    38 MiB) avg;     45MB (    43 MiB) peak
Allocated heap memory:          1483MB (  1414 MiB) max;    466MB (   445 MiB) avg
Allocated non-heap memory:        47MB (    45 MiB) max;     46MB (    44 MiB) avg
Total process virtual memory:   8214MB (  7834 MiB) max;   8138MB (  7761 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
