scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-drivers--mfd--sm501.ko-main.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_9lcn3xs7/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 5817: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 5244: Function pointer *(pd->set_power) with type int (*)(struct device *, unsigned int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 5207: Function pointer *(pd->get_power) with type int (*)(struct device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function dev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_enable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __request_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_ioremap_bar to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __mutex_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __raw_spin_lock_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _dev_info to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_create_file to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_dev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function msleep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ioremap_nocache to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function gpiochip_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function gpiochip_remove to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iounmap to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function release_resource to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_disable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __pci_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_driver_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 5207: Ignoring function call through function pointer *(pd->get_power): tmp___0 = (*(pd->get_power))(sm->dev); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5244: Ignoring function call through function pointer *(pd->set_power): (*(pd->set_power))(sm->dev, (unsigned int)on); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function platform_get_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_get_resource to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __list_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_remove_file to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function list_del to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            48509 (2% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            42825 (88%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         5684 (12%)
  Times precision was empty:       3172 (7%)
  Times precision was {false}:     1000 (2%)
  Times result was cached:         41130 (85%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      3207 (7%)
  Times result was 'false':        9573 (20%)
Number of strengthen sat checks:   0
Number of coverage checks:         339121
  BDD entailment checks:           48861
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       386
Number of predicates discovered:          9
Number of abstraction locations:          11
Max number of predicates per location:    7
Avg number of predicates per location:    4
Total predicates per abstraction:         218639
Max number of predicates per abstraction: 7
Avg number of predicates per abstraction: 51.97
Number of irrelevant predicates:          55526 (25%)
Number of preds handled by boolean abs:   13122 (6%)
  Total number of models for allsat:      3390
  Max number of models for allsat:        8
  Avg number of models for allsat:        1.06

Time for post operator:                 36.821s
  Time for path formula creation:       35.882s
Time for strengthen operator:            1.783s
Time for prec operator:                156.204s
  Time for abstraction:                154.290s (Max:     1.629s, Count: 48509)
    Boolean abstraction:                89.837s
    Solving time:                       91.052s (Max:     0.239s)
    Model enumeration time:              8.807s
    Time for BDD construction:           0.173s (Max:     0.012s)
Time for merge operator:                 8.141s
Time for coverage check:                 0.130s
  Time for BDD entailment checks:        0.091s
Total time for SMT solver (w/o itp):    99.859s

Number of path formula cache hits:   2469984 (81%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    23.900s

Total number of created targets for pointer analysis: 322204
   Number of created targets for uf: *(void)* is 99
   Number of created targets for uf: *signed_int is 17853
   Number of created targets for uf: *(struct_sm501_platdata)* is 30
   Number of created targets for uf: *signed_long_int is 49
   Number of created targets for uf: *(struct_list_head)* is 61
   Number of created targets for uf: *(struct_resource)* is 7002
   Number of created targets for uf: *unsigned_char_:_1 is 1058
   Number of created targets for uf: *unsigned_long_long_int is 17200
   Number of created targets for uf: *(struct_device)* is 10
   Number of created targets for uf: *unsigned_int is 1107
   Number of created targets for uf: *unsigned_long_int is 27


Number of BDD nodes:                               511
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        6646 (count: 78385, min: 0, max: 139, avg: 0.08)
Time for BDD node cleanup:                             0.012s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  3.236s
  Time for transition matches:                         1.749s
  Time for transition assertions:                      0.003s
  Time for transition actions:                         0.011s
Automaton transfers with branching:                0
Automaton transfer successors:                      2916219 (count: 2916219, min: 1, max: 1, avg: 1.00) [1 x 2916219]

CPA algorithm statistics
------------------------
Number of iterations:            1797253
Max size of waitlist:            182
Average size of waitlist:        61
Number of computed successors:   1978898
Max successors for one state:    2
Number of times merged:          145130
Number of times stopped:         167371
Number of times breaked:         591

Total time for CPA algorithm:       239.692s (Max:     8.810s)
  Time for choose from waitlist:      0.425s
  Time for precision adjustment:    164.767s
  Time for transfer relation:        58.157s
  Time for merge operator:            9.467s
  Time for stop operator:             1.537s
  Time for adding to reached set:     2.020s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   591
Avg. length of target path (in blocks):                3642 (count: 591, min: 2, max: 9, avg: 6.16)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  58.639s
  Counterexample analysis:                            55.178s (Max:     0.268s, Calls: 591)
    Refinement sat check:                             48.284s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.011s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.052s
  Precision update:                                    0.087s
  ARG update:                                          2.591s

Length of refined path (in blocks):                    3631 (count: 591, min: 2, max: 9, avg: 6.14)
Number of affected states:                              707 (count: 591, min: 1, max: 8, avg: 1.20)
Length (states) of path with itp 'true':               2333 (count: 591, min: 0, max: 7, avg: 3.95)
Length (states) of path with itp non-trivial itp:       707 (count: 591, min: 1, max: 8, avg: 1.20)
Length (states) of path with itp 'false':                 7 (count: 591, min: 0, max: 1, avg: 0.01)
Different non-trivial interpolants along paths:           0 (count: 591, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:             116 (count: 591, min: 0, max: 7, avg: 0.20)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                591
Number of successful refinements:     591
Number of failed refinements:         0
Max. size of reached set before ref.: 434897
Max. size of reached set after ref.:  434875
Avg. size of reached set before ref.: 65165.47
Avg. size of reached set after ref.:  62902.46

Total time for CEGAR algorithm:     357.839s
Time for refinements:                90.497s
Average time for refinement:          0.153s
Max time for refinement:              1.233s

Code Coverage
-----------------------------
  Function coverage:      0.684
  Visited lines:          1899
  Total lines:            2197
  Line coverage:          0.864
  Visited conditions:     316
  Total conditions:       440
  Condition coverage:     0.718

CPAchecker general statistics
-----------------------------
Number of program locations:     2964
Number of CFA edges:             3321
Number of relevant variables:    321
Number of functions:             114
Number of loops:                 12
Size of reached set:             464517
  Number of reached locations:   1143 (39%)
    Avg states per location:     406
    Max states per location:     6061 (at node N26)
  Number of reached functions:   78 (68%)
  Number of partitions:          464514
    Avg size of partitions:      1
    Max size of partitions:      4 (with key [N1737 (before line 5563), Function main called from node N1722, stack depth 1 [d176a31], stack [main]])
  Number of target states:       0

Time for analysis setup:          4.031s
  Time for loading CPAs:          0.688s
  Time for loading parser:        0.588s
  Time for CFA construction:      2.624s
    Time for parsing file(s):     0.719s
    Time for AST to CFA:          0.892s
    Time for CFA sanity check:    0.186s
    Time for post-processing:     0.678s
      Time for var class.:        0.301s
Time for Analysis:              357.840s
CPU time for analysis:          357.840s
Time for analyzing result:        0.376s
Total time for CPAchecker:      361.877s
Total CPU time for CPAchecker:  361.870s
Time for statistics:              3.383s

Time for Garbage Collector:      21.431s (in 849 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                745MB (   710 MiB) max;    218MB (   208 MiB) avg;    783MB (   747 MiB) peak
Used non-heap memory:             40MB (    39 MiB) max;     39MB (    37 MiB) avg;     42MB (    40 MiB) peak
Allocated heap memory:          1058MB (  1009 MiB) max;    328MB (   313 MiB) avg
Allocated non-heap memory:        42MB (    40 MiB) max;     41MB (    39 MiB) avg
Total process virtual memory:   8341MB (  7954 MiB) max;   8208MB (  7828 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
