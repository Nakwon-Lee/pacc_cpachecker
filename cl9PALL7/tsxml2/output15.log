scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-drivers--mfd--sm501.ko-main.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_3o_dnzhl/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 5817: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 5244: Function pointer *(pd->set_power) with type int (*)(struct device *, unsigned int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 5207: Function pointer *(pd->get_power) with type int (*)(struct device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function dev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_enable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __request_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_ioremap_bar to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __mutex_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __raw_spin_lock_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _dev_info to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_create_file to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_dev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function msleep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ioremap_nocache to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function gpiochip_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function gpiochip_remove to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iounmap to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function release_resource to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_disable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __pci_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_driver_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 5207: Ignoring function call through function pointer *(pd->get_power): tmp___0 = (*(pd->get_power))(sm->dev); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5244: Ignoring function call through function pointer *(pd->set_power): (*(pd->set_power))(sm->dev, (unsigned int)on); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function platform_get_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_get_resource to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_remove_file to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function list_del to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            4326 (1% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            3453 (80%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         873 (20%)
  Times precision was empty:       2556 (59%)
  Times precision was {false}:     282 (7%)
  Times result was cached:         1324 (31%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      164 (4%)
  Times result was 'false':        990 (23%)
Number of strengthen sat checks:   0
Number of coverage checks:         31650
  BDD entailment checks:           852
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       386
Number of predicates discovered:          8
Number of abstraction locations:          6
Max number of predicates per location:    7
Avg number of predicates per location:    4
Total predicates per abstraction:         4701
Max number of predicates per abstraction: 7
Avg number of predicates per abstraction: 10.54
Number of irrelevant predicates:          1902 (40%)
Number of preds handled by boolean abs:   478 (10%)
  Total number of models for allsat:      174
  Max number of models for allsat:        4
  Avg number of models for allsat:        1.06

Time for post operator:                  4.599s
  Time for path formula creation:        4.467s
Time for strengthen operator:            0.338s
Time for prec operator:                 13.121s
  Time for abstraction:                 12.781s (Max:     0.311s, Count: 4326)
    Boolean abstraction:                 4.518s
    Solving time:                        8.066s (Max:     0.219s)
    Model enumeration time:              0.701s
    Time for BDD construction:           0.035s (Max:     0.007s)
Time for merge operator:                 0.881s
Time for coverage check:                 0.024s
  Time for BDD entailment checks:        0.013s
Total time for SMT solver (w/o itp):     8.767s

Number of path formula cache hits:   327982 (91%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     3.049s

Total number of created targets for pointer analysis: 7250
   Number of created targets for uf: *(void)* is 370
   Number of created targets for uf: *signed_int is 881
   Number of created targets for uf: *(struct_sm501_platdata)* is 10
   Number of created targets for uf: *(struct_list_head)* is 59
   Number of created targets for uf: *(struct_resource)* is 540
   Number of created targets for uf: *unsigned_char_:_1 is 22
   Number of created targets for uf: *unsigned_long_long_int is 319
   Number of created targets for uf: *(struct_device)* is 10
   Number of created targets for uf: *unsigned_int is 64
   Number of created targets for uf: *unsigned_long_int is 32


Number of BDD nodes:                               470
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         608 (count: 6179, min: 0, max: 41, avg: 0.10)
Time for BDD node cleanup:                             0.002s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.617s
  Time for transition matches:                         0.305s
  Time for transition assertions:                      0.001s
  Time for transition actions:                         0.017s
Automaton transfers with branching:                0
Automaton transfer successors:                       343494 (count: 343494, min: 1, max: 1, avg: 1.00) [1 x 343494]

CPA algorithm statistics
------------------------
Number of iterations:            204246
Max size of waitlist:            226
Average size of waitlist:        98
Number of computed successors:   223984
Max successors for one state:    2
Number of times merged:          15399
Number of times stopped:         15684
Number of times breaked:         22

Total time for CPA algorithm:        25.196s (Max:     2.353s)
  Time for choose from waitlist:      0.111s
  Time for precision adjustment:     14.344s
  Time for transfer relation:         8.213s
  Time for merge operator:            1.120s
  Time for stop operator:             0.248s
  Time for adding to reached set:     0.459s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   22
Avg. length of target path (in blocks):                  93 (count: 22, min: 2, max: 5, avg: 4.23)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   1.604s
  Counterexample analysis:                             1.056s (Max:     0.090s, Calls: 22)
    Refinement sat check:                              0.927s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.006s
  Precision update:                                    0.015s
  ARG update:                                          0.485s

Length of refined path (in blocks):                      83 (count: 22, min: 2, max: 5, avg: 3.77)
Number of affected states:                               61 (count: 22, min: 1, max: 4, avg: 2.77)
Length (states) of path with itp 'true':                  0 (count: 22, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:        61 (count: 22, min: 1, max: 4, avg: 2.77)
Length (states) of path with itp 'false':                 5 (count: 22, min: 0, max: 1, avg: 0.23)
Different non-trivial interpolants along paths:           0 (count: 22, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:              39 (count: 22, min: 0, max: 3, avg: 1.77)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                22
Number of successful refinements:     22
Number of failed refinements:         0
Max. size of reached set before ref.: 16058
Max. size of reached set after ref.:  8
Avg. size of reached set before ref.: 8939.82
Avg. size of reached set after ref.:  8.00

Total time for CEGAR algorithm:      26.990s
Time for refinements:                 1.791s
Average time for refinement:          0.081s
Max time for refinement:              0.134s

Code Coverage
-----------------------------
  Function coverage:      0.623
  Visited lines:          1712
  Total lines:            2197
  Line coverage:          0.779
  Visited conditions:     276
  Total conditions:       440
  Condition coverage:     0.627

CPAchecker general statistics
-----------------------------
Number of program locations:     2964
Number of CFA edges:             3321
Number of relevant variables:    321
Number of functions:             114
Number of loops:                 12
Size of reached set:             10810
  Number of reached locations:   967 (33%)
    Avg states per location:     11
    Max states per location:     334 (at node N26)
  Number of reached functions:   71 (62%)
  Number of partitions:          10807
    Avg size of partitions:      1
    Max size of partitions:      4 (with key [N1737 (before line 5563), Function main called from node N1722, stack depth 1 [7dd00705], stack [main]])
  Number of target states:       0
  Size of final wait list        170

Time for analysis setup:          3.333s
  Time for loading CPAs:          0.626s
  Time for loading parser:        0.465s
  Time for CFA construction:      2.144s
    Time for parsing file(s):     0.610s
    Time for AST to CFA:          0.680s
    Time for CFA sanity check:    0.135s
    Time for post-processing:     0.583s
      Time for var class.:        0.299s
Time for Analysis:               26.990s
CPU time for analysis:           26.990s
Total time for CPAchecker:       30.330s
Total CPU time for CPAchecker:   30.310s
Time for statistics:              0.198s

Time for Garbage Collector:       1.199s (in 108 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                120MB (   115 MiB) max;     63MB (    60 MiB) avg;    128MB (   122 MiB) peak
Used non-heap memory:             39MB (    37 MiB) max;     36MB (    34 MiB) avg;     39MB (    38 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        41MB (    39 MiB) max;     38MB (    36 MiB) avg
Total process virtual memory:   8066MB (  7692 MiB) max;   8058MB (  7685 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
