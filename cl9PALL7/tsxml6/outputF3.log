scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-32_7a-drivers--video--smscufx.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_bzjxdj20/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 7471: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_handler_precall to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_pr_debug to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function schedule_delayed_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_dev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __raw_spin_lock_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_dealloc_cmap to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_destroy_modedb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function vfree to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_destroy_modelist to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function framebuffer_release to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value_probe to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_control_msg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_var_to_videomode to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_deferred_io_cleanup to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_deferred_io_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function might_fault to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _copy_to_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sys_imageblit to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sys_copyarea to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sys_fillrect to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_sys_write to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function down_interruptible to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __list_del_entry to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_free_coherent to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_free_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function msleep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __init_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function lockdep_init_map to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function init_timer_key to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_alloc_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_alloc_coherent to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __list_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function framebuffer_alloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_alloc_cmap to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function register_framebuffer to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _dev_info to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_edid_to_monspecs to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_videomode_to_var to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function vmalloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function down_timeout to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_submit_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function up to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_find_best_display to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_add_videomode to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            51631 (3% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            50152 (97%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         1479 (3%)
  Times precision was empty:       40128 (78%)
  Times precision was {false}:     707 (1%)
  Times result was cached:         8781 (17%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      2015 (4%)
  Times result was 'false':        2682 (5%)
Number of strengthen sat checks:   0
Number of coverage checks:         212669
  BDD entailment checks:           25483
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       2074
Number of predicates discovered:          19
Number of abstraction locations:          24
Max number of predicates per location:    12
Avg number of predicates per location:    4
Total predicates per abstraction:         40106
Max number of predicates per abstraction: 12
Avg number of predicates per abstraction: 14.73
Number of irrelevant predicates:          6742 (17%)
Number of preds handled by boolean abs:   5547 (14%)
  Total number of models for allsat:      1729
  Max number of models for allsat:        18
  Avg number of models for allsat:        0.86

Time for post operator:                 28.702s
  Time for path formula creation:       28.130s
Time for strengthen operator:            1.110s
Time for prec operator:                784.035s
  Time for abstraction:                782.871s (Max:    22.242s, Count: 51631)
    Boolean abstraction:               568.771s
    Solving time:                      554.051s (Max:    18.411s)
    Model enumeration time:            115.523s
    Time for BDD construction:           0.109s (Max:     0.014s)
Time for merge operator:                14.483s
Time for coverage check:                 0.040s
  Time for BDD entailment checks:        0.023s
Total time for SMT solver (w/o itp):   669.574s

Number of path formula cache hits:   1369238 (83%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    24.271s

Total number of created targets for pointer analysis: 627568
   Number of created targets for uf: *signed_int is 20
   Number of created targets for uf: *(struct_usb_device)* is 17
   Number of created targets for uf: *(struct_urb)* is 16
   Number of created targets for uf: *(struct_list_head)* is 24
   Number of created targets for uf: *(unsigned_char)* is 54
   Number of created targets for uf: *(struct_ufx_data)* is 16
   Number of created targets for uf: *unsigned_int is 697
   Number of created targets for uf: *unsigned_long_int is 160
   Number of created targets for uf: *(struct_fb_info)* is 9


Number of BDD nodes:                               1129
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        3917 (count: 82703, min: 0, max: 137, avg: 0.05)
Time for BDD node cleanup:                             0.013s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  1.586s
  Time for transition matches:                         0.881s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.013s
Automaton transfers with branching:                0
Automaton transfer successors:                      1542367 (count: 1542438, min: 0, max: 1, avg: 1.00) [0 x 71, 1 x 1542367]

CPA algorithm statistics
------------------------
Number of iterations:            1053632
Max size of waitlist:            142
Average size of waitlist:        56
Number of computed successors:   1178751
Max successors for one state:    2
Number of times merged:          93593
Number of times stopped:         118109
Number of times breaked:         88

Total time for CPA algorithm:       852.531s (Max:   189.541s)
  Time for choose from waitlist:      0.327s
  Time for precision adjustment:    789.366s
  Time for transfer relation:        43.057s
  Time for merge operator:           15.400s
  Time for stop operator:             0.942s
  Time for adding to reached set:     1.295s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   88
Avg. length of target path (in blocks):                 572 (count: 88, min: 2, max: 12, avg: 6.50)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  41.316s
  Counterexample analysis:                            39.208s (Max:     3.893s, Calls: 88)
    Refinement sat check:                             36.610s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.001s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.017s
  Precision update:                                    0.045s
  ARG update:                                          1.856s

Length of refined path (in blocks):                     558 (count: 88, min: 2, max: 12, avg: 6.34)
Number of affected states:                              429 (count: 88, min: 1, max: 11, avg: 4.88)
Length (states) of path with itp 'true':                 41 (count: 88, min: 0, max: 3, avg: 0.47)
Length (states) of path with itp non-trivial itp:       429 (count: 88, min: 1, max: 11, avg: 4.88)
Length (states) of path with itp 'false':                 3 (count: 88, min: 0, max: 1, avg: 0.03)
Different non-trivial interpolants along paths:           3 (count: 88, min: 0, max: 2, avg: 0.03)
Equal non-trivial interpolants along paths:             338 (count: 88, min: 0, max: 10, avg: 3.84)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                88
Number of successful refinements:     88
Number of failed refinements:         0
Max. size of reached set before ref.: 52882
Max. size of reached set after ref.:  37496
Avg. size of reached set before ref.: 18190.93
Avg. size of reached set after ref.:  6671.91

Total time for CEGAR algorithm:     895.985s
Time for refinements:                43.032s
Average time for refinement:          0.489s
Max time for refinement:              3.998s

Code Coverage
-----------------------------
  Function coverage:      0.636
  Visited lines:          2445
  Total lines:            3007
  Line coverage:          0.813
  Visited conditions:     577
  Total conditions:       782
  Condition coverage:     0.738

CPAchecker general statistics
-----------------------------
Number of program locations:     4028
Number of CFA edges:             4596
Number of relevant variables:    609
Number of functions:             118
Number of loops:                 31
Size of reached set:             44286
  Number of reached locations:   1627 (40%)
    Avg states per location:     27
    Max states per location:     2003 (at node N3229)
  Number of reached functions:   75 (64%)
  Number of partitions:          44283
    Avg size of partitions:      1
    Max size of partitions:      3 (with key [N2929 (before line 7199), Function ufx_alloc_urb_list called from node N2493, stack depth 3 [4472cf2b], stack [main, ufx_usb_probe, ufx_alloc_urb_list]])
  Number of target states:       0
  Size of final wait list        68

Time for analysis setup:          4.504s
  Time for loading CPAs:          0.726s
  Time for loading parser:        0.536s
  Time for CFA construction:      3.107s
    Time for parsing file(s):     0.799s
    Time for AST to CFA:          1.106s
    Time for CFA sanity check:    0.267s
    Time for post-processing:     0.790s
      Time for var class.:        0.376s
Time for Analysis:              895.985s
CPU time for analysis:          895.970s
Total time for CPAchecker:      900.500s
Total CPU time for CPAchecker:  900.480s
Time for statistics:              0.517s

Time for Garbage Collector:      16.619s (in 1193 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                302MB (   288 MiB) max;    162MB (   154 MiB) avg;    317MB (   303 MiB) peak
Used non-heap memory:             41MB (    39 MiB) max;     39MB (    37 MiB) avg;     41MB (    39 MiB) peak
Allocated heap memory:           411MB (   392 MiB) max;    235MB (   224 MiB) avg
Allocated non-heap memory:        43MB (    41 MiB) max;     42MB (    40 MiB) avg
Total process virtual memory:   8661MB (  8260 MiB) max;   8398MB (  8009 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
