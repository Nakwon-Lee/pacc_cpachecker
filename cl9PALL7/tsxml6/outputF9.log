scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-32_7a-drivers--video--smscufx.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_pidm475x/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 7471: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_handler_precall to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_pr_debug to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function schedule_delayed_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_dev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __raw_spin_lock_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_dealloc_cmap to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_destroy_modedb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function vfree to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_destroy_modelist to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function framebuffer_release to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value_probe to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_control_msg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_var_to_videomode to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_deferred_io_cleanup to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_deferred_io_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function might_fault to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _copy_to_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sys_imageblit to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sys_copyarea to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sys_fillrect to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_sys_write to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function down_interruptible to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __list_del_entry to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_free_coherent to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_free_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __init_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function lockdep_init_map to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function init_timer_key to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_alloc_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_alloc_coherent to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __list_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function framebuffer_alloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_alloc_cmap to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function msleep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function register_framebuffer to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _dev_info to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function down_timeout to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function vmalloc_to_pfn to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function remap_pfn_range to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_edid_to_monspecs to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_videomode_to_var to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function vmalloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_submit_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function up to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_find_best_display to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_add_videomode to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            56044 (3% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            53587 (96%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         2457 (4%)
  Times precision was empty:       43119 (77%)
  Times precision was {false}:     425 (1%)
  Times result was cached:         11138 (20%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      1362 (2%)
  Times result was 'false':        3685 (7%)
Number of strengthen sat checks:   0
Number of coverage checks:         235913
  BDD entailment checks:           23111
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       2074
Number of predicates discovered:          18
Number of abstraction locations:          21
Max number of predicates per location:    12
Avg number of predicates per location:    4
Total predicates per abstraction:         41900
Max number of predicates per abstraction: 12
Avg number of predicates per abstraction: 23.45
Number of irrelevant predicates:          8579 (20%)
Number of preds handled by boolean abs:   3862 (9%)
  Total number of models for allsat:      1267
  Max number of models for allsat:        18
  Avg number of models for allsat:        0.93

Time for post operator:                 18.395s
  Time for path formula creation:       17.767s
Time for strengthen operator:            1.118s
Time for prec operator:                760.708s
  Time for abstraction:                759.405s (Max:    12.337s, Count: 56044)
    Boolean abstraction:               497.122s
    Solving time:                      488.876s (Max:     7.444s)
    Model enumeration time:            103.620s
    Time for BDD construction:           0.113s (Max:     0.016s)
Time for merge operator:                 7.415s
Time for coverage check:                 0.041s
  Time for BDD entailment checks:        0.029s
Total time for SMT solver (w/o itp):   592.496s

Number of path formula cache hits:   1850785 (93%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    12.998s

Total number of created targets for pointer analysis: 300927
   Number of created targets for uf: *(struct_usb_device)* is 15
   Number of created targets for uf: *signed_int is 16
   Number of created targets for uf: *(struct_urb)* is 13
   Number of created targets for uf: *(struct_list_head)* is 19
   Number of created targets for uf: *(unsigned_char)* is 8
   Number of created targets for uf: *(struct_ufx_data)* is 13
   Number of created targets for uf: *unsigned_int is 233
   Number of created targets for uf: *unsigned_long_int is 22
   Number of created targets for uf: *(struct_fb_info)* is 7


Number of BDD nodes:                               1094
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        2992 (count: 77650, min: 0, max: 153, avg: 0.04)
Time for BDD node cleanup:                             0.024s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  1.813s
  Time for transition matches:                         0.975s
  Time for transition assertions:                      0.002s
  Time for transition actions:                         0.010s
Automaton transfers with branching:                0
Automaton transfer successors:                      1853002 (count: 1853066, min: 0, max: 1, avg: 1.00) [0 x 64, 1 x 1853002]

CPA algorithm statistics
------------------------
Number of iterations:            1258352
Max size of waitlist:            468
Average size of waitlist:        148
Number of computed successors:   1403112
Max successors for one state:    2
Number of times merged:          106401
Number of times stopped:         127674
Number of times breaked:         145

Total time for CPA algorithm:       813.278s (Max:   136.578s)
  Time for choose from waitlist:      0.447s
  Time for precision adjustment:    766.416s
  Time for transfer relation:        33.471s
  Time for merge operator:            8.301s
  Time for stop operator:             0.926s
  Time for adding to reached set:     1.431s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   145
Avg. length of target path (in blocks):                 675 (count: 145, min: 2, max: 9, avg: 4.66)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  79.902s
  Counterexample analysis:                            77.470s (Max:     3.927s, Calls: 145)
    Refinement sat check:                             72.083s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.002s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.040s
  Precision update:                                    0.022s
  ARG update:                                          2.078s

Length of refined path (in blocks):                     657 (count: 145, min: 2, max: 9, avg: 4.53)
Number of affected states:                              330 (count: 145, min: 1, max: 8, avg: 2.28)
Length (states) of path with itp 'true':                182 (count: 145, min: 0, max: 3, avg: 1.26)
Length (states) of path with itp non-trivial itp:       330 (count: 145, min: 1, max: 8, avg: 2.28)
Length (states) of path with itp 'false':                 6 (count: 145, min: 0, max: 1, avg: 0.04)
Different non-trivial interpolants along paths:           3 (count: 145, min: 0, max: 2, avg: 0.02)
Equal non-trivial interpolants along paths:             182 (count: 145, min: 0, max: 7, avg: 1.26)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                145
Number of successful refinements:     145
Number of failed refinements:         0
Max. size of reached set before ref.: 47949
Max. size of reached set after ref.:  22736
Avg. size of reached set before ref.: 15217.48
Avg. size of reached set after ref.:  6854.61

Total time for CEGAR algorithm:     896.209s
Time for refinements:                82.319s
Average time for refinement:          0.567s
Max time for refinement:              3.978s

Code Coverage
-----------------------------
  Function coverage:      0.661
  Visited lines:          2594
  Total lines:            3007
  Line coverage:          0.863
  Visited conditions:     617
  Total conditions:       782
  Condition coverage:     0.789

CPAchecker general statistics
-----------------------------
Number of program locations:     4028
Number of CFA edges:             4596
Number of relevant variables:    609
Number of functions:             118
Number of loops:                 31
Size of reached set:             59137
  Number of reached locations:   1754 (44%)
    Avg states per location:     33
    Max states per location:     2666 (at node N3229)
  Number of reached functions:   78 (66%)
  Number of partitions:          59130
    Avg size of partitions:      1
    Max size of partitions:      3 (with key [N2929 (before line 7199), Function ufx_alloc_urb_list called from node N2493, stack depth 3 [908d0f6], stack [main, ufx_usb_probe, ufx_alloc_urb_list]])
  Number of target states:       0
  Size of final wait list        129

Time for analysis setup:          4.320s
  Time for loading CPAs:          0.830s
  Time for loading parser:        0.539s
  Time for CFA construction:      2.840s
    Time for parsing file(s):     0.779s
    Time for AST to CFA:          0.935s
    Time for CFA sanity check:    0.231s
    Time for post-processing:     0.747s
      Time for var class.:        0.346s
Time for Analysis:              896.209s
CPU time for analysis:          896.200s
Total time for CPAchecker:      900.533s
Total CPU time for CPAchecker:  900.510s
Time for statistics:              0.598s

Time for Garbage Collector:      22.445s (in 2290 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                212MB (   203 MiB) max;    110MB (   105 MiB) avg;    241MB (   229 MiB) peak
Used non-heap memory:             40MB (    38 MiB) max;     39MB (    37 MiB) avg;     41MB (    39 MiB) peak
Allocated heap memory:           302MB (   288 MiB) max;    161MB (   154 MiB) avg
Allocated non-heap memory:        42MB (    40 MiB) max;     41MB (    39 MiB) avg
Total process virtual memory:   8568MB (  8171 MiB) max;   8356MB (  7969 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
