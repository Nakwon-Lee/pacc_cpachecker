scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-32_7a-drivers--video--smscufx.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_zj5dxwyc/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 7471: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_handler_precall to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_pr_debug to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function schedule_delayed_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_dev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __raw_spin_lock_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_dealloc_cmap to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_destroy_modedb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function vfree to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_destroy_modelist to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function framebuffer_release to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value_probe to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_control_msg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_var_to_videomode to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_deferred_io_cleanup to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_deferred_io_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function might_fault to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _copy_to_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sys_imageblit to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sys_copyarea to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sys_fillrect to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_sys_write to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function msleep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __init_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function lockdep_init_map to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function init_timer_key to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_alloc_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_alloc_coherent to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __list_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_free_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function framebuffer_alloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_alloc_cmap to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function register_framebuffer to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _dev_info to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_edid_to_monspecs to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_videomode_to_var to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function vmalloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_find_best_display to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_add_videomode to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function down_interruptible to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __list_del_entry to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_free_coherent to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            16724 (2% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            16000 (96%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         724 (4%)
  Times precision was empty:       13571 (81%)
  Times precision was {false}:     314 (2%)
  Times result was cached:         2327 (14%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      512 (3%)
  Times result was 'false':        867 (5%)
Number of strengthen sat checks:   0
Number of coverage checks:         88896
  BDD entailment checks:           4916
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       2074
Number of predicates discovered:          25
Number of abstraction locations:          15
Max number of predicates per location:    18
Avg number of predicates per location:    5
Total predicates per abstraction:         10312
Max number of predicates per abstraction: 18
Avg number of predicates per abstraction: 12.48
Number of irrelevant predicates:          1338 (13%)
Number of preds handled by boolean abs:   1819 (18%)
  Total number of models for allsat:      742
  Max number of models for allsat:        40
  Avg number of models for allsat:        1.45

Time for post operator:                 18.537s
  Time for path formula creation:       18.211s
Time for strengthen operator:            0.592s
Time for prec operator:                771.469s
  Time for abstraction:                770.885s (Max:    69.419s, Count: 16724)
    Boolean abstraction:               510.469s
    Solving time:                      551.301s (Max:    45.943s)
    Model enumeration time:            118.411s
    Time for BDD construction:           0.071s (Max:     0.013s)
Time for merge operator:                10.885s
Time for coverage check:                 0.054s
  Time for BDD entailment checks:        0.048s
Total time for SMT solver (w/o itp):   669.712s

Number of path formula cache hits:   648936 (87%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    16.036s

Total number of created targets for pointer analysis: 789320
   Number of created targets for uf: *signed_int is 86
   Number of created targets for uf: *(struct_usb_device)* is 10
   Number of created targets for uf: *(struct_urb)* is 19
   Number of created targets for uf: *(struct_list_head)* is 26
   Number of created targets for uf: *(unsigned_char)* is 7
   Number of created targets for uf: *(struct_ufx_data)* is 19
   Number of created targets for uf: *unsigned_int is 10843
   Number of created targets for uf: *(struct_fb_info)* is 8
   Number of created targets for uf: *unsigned_long_int is 19


Number of BDD nodes:                               4426
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        2057 (count: 23925, min: 0, max: 111, avg: 0.09)
Time for BDD node cleanup:                             0.011s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.972s
  Time for transition matches:                         0.434s
  Time for transition assertions:                      0.001s
  Time for transition actions:                         0.008s
Automaton transfers with branching:                0
Automaton transfer successors:                       693707 (count: 693759, min: 0, max: 1, avg: 1.00) [0 x 52, 1 x 693707]

CPA algorithm statistics
------------------------
Number of iterations:            465282
Max size of waitlist:            540
Average size of waitlist:        126
Number of computed successors:   520714
Max successors for one state:    2
Number of times merged:          41990
Number of times stopped:         46504
Number of times breaked:         60

Total time for CPA algorithm:       813.746s (Max:   170.322s)
  Time for choose from waitlist:      0.232s
  Time for precision adjustment:    774.168s
  Time for transfer relation:        25.677s
  Time for merge operator:           11.410s
  Time for stop operator:             0.514s
  Time for adding to reached set:     0.661s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   60
Avg. length of target path (in blocks):                 438 (count: 60, min: 2, max: 19, avg: 7.30)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  83.370s
  Counterexample analysis:                            82.407s (Max:    13.875s, Calls: 60)
    Refinement sat check:                             79.474s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.001s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.028s
  Precision update:                                    0.034s
  ARG update:                                          0.730s

Length of refined path (in blocks):                     426 (count: 60, min: 2, max: 19, avg: 7.10)
Number of affected states:                              343 (count: 60, min: 1, max: 18, avg: 5.72)
Length (states) of path with itp 'true':                 23 (count: 60, min: 0, max: 3, avg: 0.38)
Length (states) of path with itp non-trivial itp:       343 (count: 60, min: 1, max: 18, avg: 5.72)
Length (states) of path with itp 'false':                 4 (count: 60, min: 0, max: 1, avg: 0.07)
Different non-trivial interpolants along paths:          11 (count: 60, min: 0, max: 3, avg: 0.18)
Equal non-trivial interpolants along paths:             272 (count: 60, min: 0, max: 17, avg: 4.53)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                60
Number of successful refinements:     60
Number of failed refinements:         0
Max. size of reached set before ref.: 33615
Max. size of reached set after ref.:  14029
Avg. size of reached set before ref.: 9462.65
Avg. size of reached set after ref.:  2045.58

Total time for CEGAR algorithm:     898.602s
Time for refinements:                84.789s
Average time for refinement:          1.413s
Max time for refinement:             13.974s

Code Coverage
-----------------------------
  Function coverage:      0.576
  Visited lines:          2250
  Total lines:            3007
  Line coverage:          0.748
  Visited conditions:     525
  Total conditions:       782
  Condition coverage:     0.671

CPAchecker general statistics
-----------------------------
Number of program locations:     4028
Number of CFA edges:             4596
Number of relevant variables:    609
Number of functions:             118
Number of loops:                 31
Size of reached set:             28319
  Number of reached locations:   1456 (36%)
    Avg states per location:     19
    Max states per location:     1327 (at node N3229)
  Number of reached functions:   68 (58%)
  Number of partitions:          28314
    Avg size of partitions:      1
    Max size of partitions:      5 (with key [N2929 (before line 7199), Function ufx_alloc_urb_list called from node N2493, stack depth 3 [71099c72], stack [main, ufx_usb_probe, ufx_alloc_urb_list]])
  Number of target states:       0
  Size of final wait list        407

Time for analysis setup:          4.320s
  Time for loading CPAs:          0.730s
  Time for loading parser:        0.513s
  Time for CFA construction:      2.949s
    Time for parsing file(s):     0.761s
    Time for AST to CFA:          0.997s
    Time for CFA sanity check:    0.254s
    Time for post-processing:     0.812s
      Time for var class.:        0.333s
Time for Analysis:              898.602s
CPU time for analysis:          898.590s
Total time for CPAchecker:      902.926s
Total CPU time for CPAchecker:  902.910s
Time for statistics:              0.400s

Time for Garbage Collector:      16.901s (in 1119 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                216MB (   206 MiB) max;    131MB (   125 MiB) avg;    231MB (   220 MiB) peak
Used non-heap memory:             40MB (    38 MiB) max;     39MB (    37 MiB) avg;     40MB (    39 MiB) peak
Allocated heap memory:           232MB (   221 MiB) max;    190MB (   181 MiB) avg
Allocated non-heap memory:        42MB (    40 MiB) max;     42MB (    40 MiB) avg
Total process virtual memory:   8927MB (  8514 MiB) max;   8568MB (  8171 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
