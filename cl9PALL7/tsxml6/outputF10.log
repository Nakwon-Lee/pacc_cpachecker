scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-32_7a-drivers--video--smscufx.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_umua_lhr/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 7471: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_handler_precall to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_pr_debug to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function schedule_delayed_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_dev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __raw_spin_lock_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_dealloc_cmap to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_destroy_modedb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function vfree to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_destroy_modelist to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function framebuffer_release to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value_probe to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_control_msg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_var_to_videomode to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_deferred_io_cleanup to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_deferred_io_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function might_fault to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _copy_to_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sys_imageblit to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sys_copyarea to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sys_fillrect to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_sys_write to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function down_interruptible to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __list_del_entry to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_free_coherent to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_free_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __init_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function lockdep_init_map to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function init_timer_key to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_alloc_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_alloc_coherent to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __list_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function framebuffer_alloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_alloc_cmap to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function msleep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function register_framebuffer to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _dev_info to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function down_timeout to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function vmalloc_to_pfn to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function remap_pfn_range to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_edid_to_monspecs to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_videomode_to_var to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function vmalloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_submit_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function up to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_find_best_display to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_add_videomode to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            57061 (3% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            54567 (96%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         2494 (4%)
  Times precision was empty:       43867 (77%)
  Times precision was {false}:     444 (1%)
  Times result was cached:         11349 (20%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      1401 (2%)
  Times result was 'false':        3757 (7%)
Number of strengthen sat checks:   0
Number of coverage checks:         240816
  BDD entailment checks:           23440
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       2074
Number of predicates discovered:          20
Number of abstraction locations:          21
Max number of predicates per location:    14
Avg number of predicates per location:    4
Total predicates per abstraction:         42985
Max number of predicates per abstraction: 14
Avg number of predicates per abstraction: 23.30
Number of irrelevant predicates:          8684 (20%)
Number of preds handled by boolean abs:   4068 (9%)
  Total number of models for allsat:      1313
  Max number of models for allsat:        18
  Avg number of models for allsat:        0.94

Time for post operator:                 16.758s
  Time for path formula creation:       16.084s
Time for strengthen operator:            1.240s
Time for prec operator:                769.629s
  Time for abstraction:                768.299s (Max:    10.878s, Count: 57061)
    Boolean abstraction:               527.434s
    Solving time:                      503.998s (Max:     7.793s)
    Model enumeration time:            117.181s
    Time for BDD construction:           0.116s (Max:     0.011s)
Time for merge operator:                 7.138s
Time for coverage check:                 0.040s
  Time for BDD entailment checks:        0.015s
Total time for SMT solver (w/o itp):   621.181s

Number of path formula cache hits:   1893752 (93%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    11.605s

Total number of created targets for pointer analysis: 300927
   Number of created targets for uf: *signed_int is 16
   Number of created targets for uf: *(struct_usb_device)* is 15
   Number of created targets for uf: *(struct_urb)* is 13
   Number of created targets for uf: *(struct_list_head)* is 19
   Number of created targets for uf: *(unsigned_char)* is 8
   Number of created targets for uf: *(struct_ufx_data)* is 13
   Number of created targets for uf: *unsigned_int is 233
   Number of created targets for uf: *unsigned_long_int is 22
   Number of created targets for uf: *(struct_fb_info)* is 7


Number of BDD nodes:                               1568
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        3342 (count: 79198, min: 0, max: 153, avg: 0.04)
Time for BDD node cleanup:                             0.011s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  1.691s
  Time for transition matches:                         0.937s
  Time for transition assertions:                      0.001s
  Time for transition actions:                         0.009s
Automaton transfers with branching:                0
Automaton transfer successors:                      1893148 (count: 1893214, min: 0, max: 1, avg: 1.00) [0 x 66, 1 x 1893148]

CPA algorithm statistics
------------------------
Number of iterations:            1285411
Max size of waitlist:            468
Average size of waitlist:        149
Number of computed successors:   1433242
Max successors for one state:    2
Number of times merged:          108688
Number of times stopped:         130236
Number of times breaked:         146

Total time for CPA algorithm:       819.835s (Max:   151.860s)
  Time for choose from waitlist:      0.394s
  Time for precision adjustment:    775.508s
  Time for transfer relation:        31.393s
  Time for merge operator:            8.122s
  Time for stop operator:             0.972s
  Time for adding to reached set:     1.352s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   146
Avg. length of target path (in blocks):                 683 (count: 146, min: 2, max: 9, avg: 4.68)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  74.246s
  Counterexample analysis:                            71.937s (Max:     4.082s, Calls: 146)
    Refinement sat check:                             67.328s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.001s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.028s
  Precision update:                                    0.038s
  ARG update:                                          2.012s

Length of refined path (in blocks):                     662 (count: 146, min: 2, max: 9, avg: 4.53)
Number of affected states:                              334 (count: 146, min: 1, max: 8, avg: 2.29)
Length (states) of path with itp 'true':                182 (count: 146, min: 0, max: 3, avg: 1.25)
Length (states) of path with itp non-trivial itp:       334 (count: 146, min: 1, max: 8, avg: 2.29)
Length (states) of path with itp 'false':                 7 (count: 146, min: 0, max: 1, avg: 0.05)
Different non-trivial interpolants along paths:           6 (count: 146, min: 0, max: 3, avg: 0.04)
Equal non-trivial interpolants along paths:             182 (count: 146, min: 0, max: 7, avg: 1.25)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                146
Number of successful refinements:     146
Number of failed refinements:         0
Max. size of reached set before ref.: 59357
Max. size of reached set after ref.:  22736
Avg. size of reached set before ref.: 15519.80
Avg. size of reached set after ref.:  6807.71

Total time for CEGAR algorithm:     896.774s
Time for refinements:                76.437s
Average time for refinement:          0.523s
Max time for refinement:              4.268s

Code Coverage
-----------------------------
  Function coverage:      0.627
  Visited lines:          2365
  Total lines:            3007
  Line coverage:          0.786
  Visited conditions:     537
  Total conditions:       782
  Condition coverage:     0.687

CPAchecker general statistics
-----------------------------
Number of program locations:     4028
Number of CFA edges:             4596
Number of relevant variables:    609
Number of functions:             118
Number of loops:                 31
Size of reached set:             27283
  Number of reached locations:   1535 (38%)
    Avg states per location:     17
    Max states per location:     1259 (at node N3229)
  Number of reached functions:   74 (63%)
  Number of partitions:          27278
    Avg size of partitions:      1
    Max size of partitions:      4 (with key [N2929 (before line 7199), Function ufx_alloc_urb_list called from node N2493, stack depth 3 [664f9aab], stack [main, ufx_usb_probe, ufx_alloc_urb_list]])
  Number of target states:       0
  Size of final wait list        443

Time for analysis setup:          3.563s
  Time for loading CPAs:          0.620s
  Time for loading parser:        0.464s
  Time for CFA construction:      2.372s
    Time for parsing file(s):     0.607s
    Time for AST to CFA:          0.801s
    Time for CFA sanity check:    0.227s
    Time for post-processing:     0.639s
      Time for var class.:        0.294s
Time for Analysis:              896.774s
CPU time for analysis:          896.740s
Total time for CPAchecker:      900.350s
Total CPU time for CPAchecker:  900.310s
Time for statistics:              0.348s

Time for Garbage Collector:      20.207s (in 2333 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                215MB (   205 MiB) max;    114MB (   109 MiB) avg;    225MB (   214 MiB) peak
Used non-heap memory:             40MB (    38 MiB) max;     39MB (    37 MiB) avg;     40MB (    38 MiB) peak
Allocated heap memory:           271MB (   258 MiB) max;    169MB (   161 MiB) avg
Allocated non-heap memory:        41MB (    39 MiB) max;     41MB (    39 MiB) avg
Total process virtual memory:   8625MB (  8226 MiB) max;   8377MB (  7989 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
