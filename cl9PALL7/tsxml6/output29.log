scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-32_7a-drivers--video--smscufx.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_a7fxjf7u/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 7471: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_handler_precall to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_pr_debug to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function schedule_delayed_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_dev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __raw_spin_lock_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_dealloc_cmap to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_destroy_modedb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function vfree to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_destroy_modelist to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function framebuffer_release to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value_probe to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_control_msg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_var_to_videomode to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_deferred_io_cleanup to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_deferred_io_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function might_fault to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _copy_to_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sys_imageblit to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sys_copyarea to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sys_fillrect to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_sys_write to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function down_interruptible to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __list_del_entry to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_free_coherent to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_free_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function msleep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            1395 (3% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            1376 (99%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         19 (1%)
  Times precision was empty:       1310 (94%)
  Times precision was {false}:     66 (5%)
  Times result was cached:         7 (1%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      12 (1%)
  Times result was 'false':        16 (1%)
Number of strengthen sat checks:   0
Number of coverage checks:         5662
  BDD entailment checks:           788
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       1141
Number of predicates discovered:          5
Number of abstraction locations:          3
Max number of predicates per location:    4
Avg number of predicates per location:    2
Total predicates per abstraction:         262
Max number of predicates per abstraction: 4
Avg number of predicates per abstraction: 3.36
Number of irrelevant predicates:          232 (89%)
Number of preds handled by boolean abs:   21 (8%)
  Total number of models for allsat:      10
  Max number of models for allsat:        1
  Avg number of models for allsat:        0.83

Time for post operator:                  5.181s
  Time for path formula creation:        5.097s
Time for strengthen operator:            0.065s
Time for prec operator:                 16.261s
  Time for abstraction:                 16.114s (Max:     1.573s, Count: 1395)
    Boolean abstraction:                 0.264s
    Solving time:                       14.639s (Max:     1.488s)
    Model enumeration time:              0.012s
    Time for BDD construction:           0.005s (Max:     0.004s)
Time for merge operator:                 2.074s
Time for coverage check:                 0.037s
  Time for BDD entailment checks:        0.034s
Total time for SMT solver (w/o itp):    14.651s

Number of path formula cache hits:   5623 (14%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     4.898s

Total number of created targets for pointer analysis: 49683
   Number of created targets for uf: *(struct_usb_device)* is 2
   Number of created targets for uf: *signed_int is 2
   Number of created targets for uf: *(struct_list_head)* is 3
   Number of created targets for uf: *unsigned_int is 1075
   Number of created targets for uf: *unsigned_long_int is 3


Number of BDD nodes:                               209
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                          64 (count: 2529, min: 0, max: 45, avg: 0.03)
Time for BDD node cleanup:                             0.003s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.192s
Automaton transfers with branching:                0
Automaton transfer successors:                        41278 (count: 41280, min: 0, max: 1, avg: 1.00) [0 x 2, 1 x 41278]

CPA algorithm statistics
------------------------
Number of iterations:            27864
Max size of waitlist:            133
Average size of waitlist:        53
Number of computed successors:   31149
Max successors for one state:    2
Number of times merged:          2437
Number of times stopped:         3122
Number of times breaked:         5

Total time for CPA algorithm:        26.070s (Max:    23.347s)
  Time for choose from waitlist:      0.100s
  Time for precision adjustment:     16.702s
  Time for transfer relation:         6.422s
  Time for merge operator:            2.228s
  Time for stop operator:             0.103s
  Time for adding to reached set:     0.144s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   5
Avg. length of target path (in blocks):                  11 (count: 5, min: 2, max: 3, avg: 2.20)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.108s
  Counterexample analysis:                             0.060s (Max:     0.025s, Calls: 5)
    Refinement sat check:                              0.043s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.011s
  Precision update:                                    0.011s
  ARG update:                                          0.025s

Length of refined path (in blocks):                      11 (count: 5, min: 2, max: 3, avg: 2.20)
Number of affected states:                                6 (count: 5, min: 1, max: 2, avg: 1.20)
Length (states) of path with itp 'true':                  0 (count: 5, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:         6 (count: 5, min: 1, max: 2, avg: 1.20)
Length (states) of path with itp 'false':                 0 (count: 5, min: 0, max: 0, avg: 0.00)
Different non-trivial interpolants along paths:           0 (count: 5, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:               1 (count: 5, min: 0, max: 1, avg: 0.20)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                5
Number of successful refinements:     5
Number of failed refinements:         0
Max. size of reached set before ref.: 1699
Max. size of reached set after ref.:  7
Avg. size of reached set before ref.: 671.00
Avg. size of reached set after ref.:  7.00

Total time for CEGAR algorithm:      26.208s
Time for refinements:                 0.138s
Average time for refinement:          0.027s
Max time for refinement:              0.065s

Code Coverage
-----------------------------
  Function coverage:      0.483
  Visited lines:          1824
  Total lines:            3007
  Line coverage:          0.607
  Visited conditions:     385
  Total conditions:       782
  Condition coverage:     0.492

CPAchecker general statistics
-----------------------------
Number of program locations:     4028
Number of CFA edges:             4596
Number of relevant variables:    609
Number of functions:             118
Number of loops:                 31
Size of reached set:             24691
  Number of reached locations:   1063 (26%)
    Avg states per location:     23
    Max states per location:     1113 (at node N3229)
  Number of reached functions:   57 (48%)
  Number of partitions:          24689
    Avg size of partitions:      1
    Max size of partitions:      3 (with key [N3137 (before line 7418), Function main called from node N3012, stack depth 1 [6ba30587], stack [main]])
  Number of target states:       0
  Size of final wait list        36

Time for analysis setup:          4.126s
  Time for loading CPAs:          0.718s
  Time for loading parser:        0.529s
  Time for CFA construction:      2.751s
    Time for parsing file(s):     0.725s
    Time for AST to CFA:          0.923s
    Time for CFA sanity check:    0.250s
    Time for post-processing:     0.735s
      Time for var class.:        0.328s
Time for Analysis:               26.208s
CPU time for analysis:           26.210s
Total time for CPAchecker:       30.336s
Total CPU time for CPAchecker:   30.330s
Time for statistics:              0.426s

Time for Garbage Collector:       0.630s (in 42 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 94MB (    89 MiB) max;     56MB (    53 MiB) avg;    101MB (    96 MiB) peak
Used non-heap memory:             39MB (    37 MiB) max;     35MB (    33 MiB) avg;     39MB (    37 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        41MB (    39 MiB) max;     37MB (    35 MiB) avg
Total process virtual memory:   8198MB (  7818 MiB) max;   8129MB (  7752 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
