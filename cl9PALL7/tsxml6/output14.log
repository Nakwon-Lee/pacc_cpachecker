scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-32_7a-drivers--video--smscufx.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_1q9oxabz/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 7471: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_handler_precall to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_pr_debug to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function schedule_delayed_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_dev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __raw_spin_lock_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_dealloc_cmap to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_destroy_modedb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function vfree to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_destroy_modelist to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function framebuffer_release to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value_probe to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_control_msg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_var_to_videomode to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_deferred_io_cleanup to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_deferred_io_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function might_fault to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _copy_to_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sys_imageblit to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sys_copyarea to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sys_fillrect to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_sys_write to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function down_timeout to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __list_del_entry to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_submit_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __list_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function up to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function vmalloc_to_pfn to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function remap_pfn_range to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function down_interruptible to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_free_coherent to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_free_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function msleep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            3519 (2% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            3331 (95%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         188 (5%)
  Times precision was empty:       2364 (67%)
  Times precision was {false}:     88 (3%)
  Times result was cached:         931 (26%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      136 (4%)
  Times result was 'false':        215 (6%)
Number of strengthen sat checks:   0
Number of coverage checks:         17055
  BDD entailment checks:           1083
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       1102
Number of predicates discovered:          5
Number of abstraction locations:          9
Max number of predicates per location:    4
Avg number of predicates per location:    3
Total predicates per abstraction:         3909
Max number of predicates per abstraction: 4
Avg number of predicates per abstraction: 17.45
Number of irrelevant predicates:          364 (9%)
Number of preds handled by boolean abs:   334 (9%)
  Total number of models for allsat:      127
  Max number of models for allsat:        1
  Avg number of models for allsat:        0.93

Time for post operator:                  2.486s
  Time for path formula creation:        2.419s
Time for strengthen operator:            0.130s
Time for prec operator:                 14.620s
  Time for abstraction:                 14.396s (Max:     1.182s, Count: 3519)
    Boolean abstraction:                10.119s
    Solving time:                       10.620s (Max:     1.081s)
    Model enumeration time:              0.985s
    Time for BDD construction:           0.087s (Max:     0.013s)
Time for merge operator:                 0.530s
Time for coverage check:                 0.010s
  Time for BDD entailment checks:        0.007s
Total time for SMT solver (w/o itp):    11.606s

Number of path formula cache hits:   144179 (92%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     2.076s

Total number of created targets for pointer analysis: 4158
   Number of created targets for uf: *signed_int is 13
   Number of created targets for uf: *(struct_usb_device)* is 9
   Number of created targets for uf: *(struct_list_head)* is 9
   Number of created targets for uf: *unsigned_int is 11
   Number of created targets for uf: *unsigned_long_int is 17


Number of BDD nodes:                               214
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         300 (count: 4815, min: 0, max: 45, avg: 0.06)
Time for BDD node cleanup:                             0.007s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.359s
Automaton transfers with branching:                0
Automaton transfer successors:                       145506 (count: 145534, min: 0, max: 1, avg: 1.00) [0 x 28, 1 x 145506]

CPA algorithm statistics
------------------------
Number of iterations:            91330
Max size of waitlist:            82
Average size of waitlist:        38
Number of computed successors:   102382
Max successors for one state:    2
Number of times merged:          7986
Number of times stopped:         9038
Number of times breaked:         31

Total time for CPA algorithm:        21.808s (Max:     2.229s)
  Time for choose from waitlist:      0.127s
  Time for precision adjustment:     15.393s
  Time for transfer relation:         4.659s
  Time for merge operator:            0.709s
  Time for stop operator:             0.188s
  Time for adding to reached set:     0.239s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   31
Avg. length of target path (in blocks):                 127 (count: 31, min: 2, max: 5, avg: 4.10)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   3.675s
  Counterexample analysis:                             3.309s (Max:     0.488s, Calls: 31)
    Refinement sat check:                              3.012s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.028s
  Precision update:                                    0.026s
  ARG update:                                          0.247s

Length of refined path (in blocks):                     127 (count: 31, min: 2, max: 5, avg: 4.10)
Number of affected states:                               96 (count: 31, min: 1, max: 4, avg: 3.10)
Length (states) of path with itp 'true':                  0 (count: 31, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:        96 (count: 31, min: 1, max: 4, avg: 3.10)
Length (states) of path with itp 'false':                 0 (count: 31, min: 0, max: 0, avg: 0.00)
Different non-trivial interpolants along paths:           0 (count: 31, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:              65 (count: 31, min: 0, max: 3, avg: 2.10)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                31
Number of successful refinements:     31
Number of failed refinements:         0
Max. size of reached set before ref.: 4611
Max. size of reached set after ref.:  7
Avg. size of reached set before ref.: 2875.58
Avg. size of reached set after ref.:  7.00

Total time for CEGAR algorithm:      25.718s
Time for refinements:                 3.907s
Average time for refinement:          0.126s
Max time for refinement:              0.517s

Code Coverage
-----------------------------
  Function coverage:      0.525
  Visited lines:          1860
  Total lines:            3007
  Line coverage:          0.619
  Visited conditions:     367
  Total conditions:       782
  Condition coverage:     0.469

CPAchecker general statistics
-----------------------------
Number of program locations:     4028
Number of CFA edges:             4596
Number of relevant variables:    609
Number of functions:             118
Number of loops:                 31
Size of reached set:             4203
  Number of reached locations:   1064 (26%)
    Avg states per location:     3
    Max states per location:     173 (at node N3229)
  Number of reached functions:   62 (53%)
  Number of partitions:          4203
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0
  Size of final wait list        60

Time for analysis setup:          4.603s
  Time for loading CPAs:          0.912s
  Time for loading parser:        0.522s
  Time for CFA construction:      3.076s
    Time for parsing file(s):     0.682s
    Time for AST to CFA:          1.058s
    Time for CFA sanity check:    0.325s
    Time for post-processing:     0.887s
      Time for var class.:        0.382s
Time for Analysis:               25.718s
CPU time for analysis:           25.710s
Total time for CPAchecker:       30.325s
Total CPU time for CPAchecker:   30.310s
Time for statistics:              0.196s

Time for Garbage Collector:       0.655s (in 57 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 77MB (    73 MiB) max;     53MB (    50 MiB) avg;     80MB (    76 MiB) peak
Used non-heap memory:             38MB (    36 MiB) max;     35MB (    33 MiB) avg;     38MB (    37 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        40MB (    38 MiB) max;     37MB (    35 MiB) avg
Total process virtual memory:   8132MB (  7755 MiB) max;   8122MB (  7746 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
