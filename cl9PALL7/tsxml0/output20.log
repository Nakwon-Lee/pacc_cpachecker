scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-32_7a-kernel--rcutorture.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_mmwkivg6/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 1907: Dead code detected: __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

line 1910: Dead code detected: __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

line 1913: Dead code detected: __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (8UL) {
  case 1UL:
  __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& current_task));
  goto ldv_2861;
  case 2UL:
  __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_2861;
  case 4UL:
  __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_2861;
  case 8UL:
  __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_2861;
  default:
  __bad_percpu_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

lines 2209-2210: Dead code detected: __asm__ volatile ("xchgb %b0, %1\n": "+q" (__ret), "+m" (v->counter): : "memory",
                       "cc"); (CFACreationUtils.addEdgeToCFA, INFO)

lines 2213-2214: Dead code detected: __asm__ volatile ("xchgw %w0, %1\n": "+r" (__ret), "+m" (v->counter): : "memory",
                       "cc"); (CFACreationUtils.addEdgeToCFA, INFO)

lines 2221-2222: Dead code detected: __asm__ volatile ("xchgq %q0, %1\n": "+r" (__ret), "+m" (v->counter): : "memory",
                       "cc"); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (4UL) {
  case 1UL:
  __asm__ volatile ("xchgb %b0, %1\n": "+q" (__ret), "+m" (v->counter): : "memory",
                       "cc");
  goto ldv_5509;
  case 2UL:
  __asm__ volatile ("xchgw %w0, %1\n": "+r" (__ret), "+m" (v->counter): : "memory",
                       "cc");
  goto ldv_5509;
  case 4UL:
  __asm__ volatile ("xchgl %0, %1\n": "+r" (__ret), "+m" (v->counter): : "memory",
                       "cc");
  goto ldv_5509;
  case 8UL:
  __asm__ volatile ("xchgq %q0, %1\n": "+r" (__ret), "+m" (v->counter): : "memory",
                       "cc");
  goto ldv_5509;
  default:
  __xchg_wrong_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 2284: Dead code detected: __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& kernel_stack)); (CFACreationUtils.addEdgeToCFA, INFO)

line 2287: Dead code detected: __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack)); (CFACreationUtils.addEdgeToCFA, INFO)

line 2290: Dead code detected: __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (8UL) {
  case 1UL:
  __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& kernel_stack));
  goto ldv_6280;
  case 2UL:
  __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack));
  goto ldv_6280;
  case 4UL:
  __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack));
  goto ldv_6280;
  case 8UL:
  __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack));
  goto ldv_6280;
  default:
  __bad_percpu_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 4125: Dead code detected: pao_ID__ = 1; (CFACreationUtils.addEdgeToCFA, INFO)

line 4128: Dead code detected: [pao_ID__ == 1] (CFACreationUtils.addEdgeToCFA, INFO)

line 4128: Dead code detected: [!(pao_ID__ == 1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 4129: Dead code detected: __asm__ ("incb %%gs:%P0": "+m" (rcu_torture_count[pipe_count])); (CFACreationUtils.addEdgeToCFA, INFO)

line 4131: Dead code detected: [pao_ID__ == -1] (CFACreationUtils.addEdgeToCFA, INFO)

line 4131: Dead code detected: [!(pao_ID__ == -1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 4132: Dead code detected: __asm__ ("decb %%gs:%P0": "+m" (rcu_torture_count[pipe_count])); (CFACreationUtils.addEdgeToCFA, INFO)

line 4134: Dead code detected: __asm__ ("addb %1, %%gs:%P0": "+m" (rcu_torture_count[pipe_count]): "qi" (1L)); (CFACreationUtils.addEdgeToCFA, INFO)

line 4138: Dead code detected: [pao_ID__ == 1] (CFACreationUtils.addEdgeToCFA, INFO)

line 4138: Dead code detected: [!(pao_ID__ == 1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 4139: Dead code detected: __asm__ ("incw %%gs:%P0": "+m" (rcu_torture_count[pipe_count])); (CFACreationUtils.addEdgeToCFA, INFO)

line 4141: Dead code detected: [pao_ID__ == -1] (CFACreationUtils.addEdgeToCFA, INFO)

line 4141: Dead code detected: [!(pao_ID__ == -1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 4142: Dead code detected: __asm__ ("decw %%gs:%P0": "+m" (rcu_torture_count[pipe_count])); (CFACreationUtils.addEdgeToCFA, INFO)

line 4144: Dead code detected: __asm__ ("addw %1, %%gs:%P0": "+m" (rcu_torture_count[pipe_count]): "ri" (1L)); (CFACreationUtils.addEdgeToCFA, INFO)

line 4148: Dead code detected: [pao_ID__ == 1] (CFACreationUtils.addEdgeToCFA, INFO)

line 4148: Dead code detected: [!(pao_ID__ == 1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 4149: Dead code detected: __asm__ ("incl %%gs:%P0": "+m" (rcu_torture_count[pipe_count])); (CFACreationUtils.addEdgeToCFA, INFO)

line 4151: Dead code detected: [pao_ID__ == -1] (CFACreationUtils.addEdgeToCFA, INFO)

line 4151: Dead code detected: [!(pao_ID__ == -1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 4152: Dead code detected: __asm__ ("decl %%gs:%P0": "+m" (rcu_torture_count[pipe_count])); (CFACreationUtils.addEdgeToCFA, INFO)

line 4154: Dead code detected: __asm__ ("addl %1, %%gs:%P0": "+m" (rcu_torture_count[pipe_count]): "ri" (1L)); (CFACreationUtils.addEdgeToCFA, INFO)

line 4157: Dead code detected:  (CFACreationUtils.addEdgeToCFA, INFO)

line 4158: Dead code detected: [!(pao_ID__ == 1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 4159: Dead code detected: __asm__ ("incq %%gs:%P0": "+m" (rcu_torture_count[pipe_count])); (CFACreationUtils.addEdgeToCFA, INFO)

line 4161: Dead code detected: [pao_ID__ == -1] (CFACreationUtils.addEdgeToCFA, INFO)

line 4161: Dead code detected: [!(pao_ID__ == -1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 4162: Dead code detected: __asm__ ("decq %%gs:%P0": "+m" (rcu_torture_count[pipe_count])); (CFACreationUtils.addEdgeToCFA, INFO)

line 4164: Dead code detected: __asm__ ("addq %1, %%gs:%P0": "+m" (rcu_torture_count[pipe_count]): "re" (1L)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (8UL) {
  case 1UL: ;
  if (pao_ID__ == 1) {
    __asm__ ("incb %%gs:%P0": "+m" (rcu_torture_count[pipe_count]));
  } else
  if (pao_ID__ == -1) {
    __asm__ ("decb %%gs:%P0": "+m" (rcu_torture_count[pipe_count]));
  } else {
    __asm__ ("addb %1, %%gs:%P0": "+m" (rcu_torture_count[pipe_count]): "qi" (1L));
  }
  goto ldv_21329;
  case 2UL: ;
  if (pao_ID__ == 1) {
    __asm__ ("incw %%gs:%P0": "+m" (rcu_torture_count[pipe_count]));
  } else
  if (pao_ID__ == -1) {
    __asm__ ("decw %%gs:%P0": "+m" (rcu_torture_count[pipe_count]));
  } else {
    __asm__ ("addw %1, %%gs:%P0": "+m" (rcu_torture_count[pipe_count]): "ri" (1L));
  }
  goto ldv_21329;
  case 4UL: ;
  if (pao_ID__ == 1) {
    __asm__ ("incl %%gs:%P0": "+m" (rcu_torture_count[pipe_count]));
  } else
  if (pao_ID__ == -1) {
    __asm__ ("decl %%gs:%P0": "+m" (rcu_torture_count[pipe_count]));
  } else {
    __asm__ ("addl %1, %%gs:%P0": "+m" (rcu_torture_count[pipe_count]): "ri" (1L));
  }
  goto ldv_21329;
  case 8UL: ;
  if (pao_ID__ == 1) {
    __asm__ ("incq %%gs:%P0": "+m" (rcu_torture_count[pipe_count]));
  } else
  if (pao_ID__ == -1) {
    __asm__ ("decq %%gs:%P0": "+m" (rcu_torture_count[pipe_count]));
  } else {
    __asm__ ("addq %1, %%gs:%P0": "+m" (rcu_torture_count[pipe_count]): "re" (1L));
  }
  goto ldv_21329;
  default:
  __bad_percpu_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 4173: Dead code detected: pao_ID_____0 = 1; (CFACreationUtils.addEdgeToCFA, INFO)

line 4176: Dead code detected: [pao_ID_____0 == 1] (CFACreationUtils.addEdgeToCFA, INFO)

line 4176: Dead code detected: [!(pao_ID_____0 == 1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 4177: Dead code detected: __asm__ ("incb %%gs:%P0": "+m" (rcu_torture_count[pipe_count])); (CFACreationUtils.addEdgeToCFA, INFO)

line 4179: Dead code detected: [pao_ID_____0 == -1] (CFACreationUtils.addEdgeToCFA, INFO)

line 4179: Dead code detected: [!(pao_ID_____0 == -1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 4180: Dead code detected: __asm__ ("decb %%gs:%P0": "+m" (rcu_torture_count[pipe_count])); (CFACreationUtils.addEdgeToCFA, INFO)

line 4182: Dead code detected: __asm__ ("addb %1, %%gs:%P0": "+m" (rcu_torture_count[pipe_count]): "qi" (1L)); (CFACreationUtils.addEdgeToCFA, INFO)

line 4186: Dead code detected: [pao_ID_____0 == 1] (CFACreationUtils.addEdgeToCFA, INFO)

line 4186: Dead code detected: [!(pao_ID_____0 == 1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 4187: Dead code detected: __asm__ ("incw %%gs:%P0": "+m" (rcu_torture_count[pipe_count])); (CFACreationUtils.addEdgeToCFA, INFO)

line 4189: Dead code detected: [pao_ID_____0 == -1] (CFACreationUtils.addEdgeToCFA, INFO)

line 4189: Dead code detected: [!(pao_ID_____0 == -1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 4190: Dead code detected: __asm__ ("decw %%gs:%P0": "+m" (rcu_torture_count[pipe_count])); (CFACreationUtils.addEdgeToCFA, INFO)

line 4192: Dead code detected: __asm__ ("addw %1, %%gs:%P0": "+m" (rcu_torture_count[pipe_count]): "ri" (1L)); (CFACreationUtils.addEdgeToCFA, INFO)

line 4196: Dead code detected: [pao_ID_____0 == 1] (CFACreationUtils.addEdgeToCFA, INFO)

line 4196: Dead code detected: [!(pao_ID_____0 == 1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 4197: Dead code detected: __asm__ ("incl %%gs:%P0": "+m" (rcu_torture_count[pipe_count])); (CFACreationUtils.addEdgeToCFA, INFO)

line 4199: Dead code detected: [pao_ID_____0 == -1] (CFACreationUtils.addEdgeToCFA, INFO)

line 4199: Dead code detected: [!(pao_ID_____0 == -1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 4200: Dead code detected: __asm__ ("decl %%gs:%P0": "+m" (rcu_torture_count[pipe_count])); (CFACreationUtils.addEdgeToCFA, INFO)

line 4202: Dead code detected: __asm__ ("addl %1, %%gs:%P0": "+m" (rcu_torture_count[pipe_count]): "ri" (1L)); (CFACreationUtils.addEdgeToCFA, INFO)

line 4205: Dead code detected:  (CFACreationUtils.addEdgeToCFA, INFO)

line 4206: Dead code detected: [!(pao_ID_____0 == 1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 4207: Dead code detected: __asm__ ("incq %%gs:%P0": "+m" (rcu_torture_count[pipe_count])); (CFACreationUtils.addEdgeToCFA, INFO)

line 4209: Dead code detected: [pao_ID_____0 == -1] (CFACreationUtils.addEdgeToCFA, INFO)

line 4209: Dead code detected: [!(pao_ID_____0 == -1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 4210: Dead code detected: __asm__ ("decq %%gs:%P0": "+m" (rcu_torture_count[pipe_count])); (CFACreationUtils.addEdgeToCFA, INFO)

line 4212: Dead code detected: __asm__ ("addq %1, %%gs:%P0": "+m" (rcu_torture_count[pipe_count]): "re" (1L)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (8UL) {
  case 1UL: ;
  if (pao_ID_____0 == 1) {
    __asm__ ("incb %%gs:%P0": "+m" (rcu_torture_count[pipe_count]));
  } else
  if (pao_ID_____0 == -1) {
    __asm__ ("decb %%gs:%P0": "+m" (rcu_torture_count[pipe_count]));
  } else {
    __asm__ ("addb %1, %%gs:%P0": "+m" (rcu_torture_count[pipe_count]): "qi" (1L));
  }
  goto ldv_21340;
  case 2UL: ;
  if (pao_ID_____0 == 1) {
    __asm__ ("incw %%gs:%P0": "+m" (rcu_torture_count[pipe_count]));
  } else
  if (pao_ID_____0 == -1) {
    __asm__ ("decw %%gs:%P0": "+m" (rcu_torture_count[pipe_count]));
  } else {
    __asm__ ("addw %1, %%gs:%P0": "+m" (rcu_torture_count[pipe_count]): "ri" (1L));
  }
  goto ldv_21340;
  case 4UL: ;
  if (pao_ID_____0 == 1) {
    __asm__ ("incl %%gs:%P0": "+m" (rcu_torture_count[pipe_count]));
  } else
  if (pao_ID_____0 == -1) {
    __asm__ ("decl %%gs:%P0": "+m" (rcu_torture_count[pipe_count]));
  } else {
    __asm__ ("addl %1, %%gs:%P0": "+m" (rcu_torture_count[pipe_count]): "ri" (1L));
  }
  goto ldv_21340;
  case 8UL: ;
  if (pao_ID_____0 == 1) {
    __asm__ ("incq %%gs:%P0": "+m" (rcu_torture_count[pipe_count]));
  } else
  if (pao_ID_____0 == -1) {
    __asm__ ("decq %%gs:%P0": "+m" (rcu_torture_count[pipe_count]));
  } else {
    __asm__ ("addq %1, %%gs:%P0": "+m" (rcu_torture_count[pipe_count]): "re" (1L));
  }
  goto ldv_21340;
  default:
  __bad_percpu_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 4221: Dead code detected: pao_ID_____1 = 1; (CFACreationUtils.addEdgeToCFA, INFO)

line 4224: Dead code detected: [pao_ID_____1 == 1] (CFACreationUtils.addEdgeToCFA, INFO)

line 4224: Dead code detected: [!(pao_ID_____1 == 1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 4225: Dead code detected: __asm__ ("incb %%gs:%P0": "+m" (rcu_torture_count[pipe_count])); (CFACreationUtils.addEdgeToCFA, INFO)

line 4227: Dead code detected: [pao_ID_____1 == -1] (CFACreationUtils.addEdgeToCFA, INFO)

line 4227: Dead code detected: [!(pao_ID_____1 == -1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 4228: Dead code detected: __asm__ ("decb %%gs:%P0": "+m" (rcu_torture_count[pipe_count])); (CFACreationUtils.addEdgeToCFA, INFO)

line 4230: Dead code detected: __asm__ ("addb %1, %%gs:%P0": "+m" (rcu_torture_count[pipe_count]): "qi" (1L)); (CFACreationUtils.addEdgeToCFA, INFO)

line 4234: Dead code detected: [pao_ID_____1 == 1] (CFACreationUtils.addEdgeToCFA, INFO)

line 4234: Dead code detected: [!(pao_ID_____1 == 1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 4235: Dead code detected: __asm__ ("incw %%gs:%P0": "+m" (rcu_torture_count[pipe_count])); (CFACreationUtils.addEdgeToCFA, INFO)

line 4237: Dead code detected: [pao_ID_____1 == -1] (CFACreationUtils.addEdgeToCFA, INFO)

line 4237: Dead code detected: [!(pao_ID_____1 == -1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 4238: Dead code detected: __asm__ ("decw %%gs:%P0": "+m" (rcu_torture_count[pipe_count])); (CFACreationUtils.addEdgeToCFA, INFO)

line 4240: Dead code detected: __asm__ ("addw %1, %%gs:%P0": "+m" (rcu_torture_count[pipe_count]): "ri" (1L)); (CFACreationUtils.addEdgeToCFA, INFO)

line 4244: Dead code detected: [pao_ID_____1 == 1] (CFACreationUtils.addEdgeToCFA, INFO)

line 4244: Dead code detected: [!(pao_ID_____1 == 1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 4245: Dead code detected: __asm__ ("incl %%gs:%P0": "+m" (rcu_torture_count[pipe_count])); (CFACreationUtils.addEdgeToCFA, INFO)

line 4247: Dead code detected: [pao_ID_____1 == -1] (CFACreationUtils.addEdgeToCFA, INFO)

line 4247: Dead code detected: [!(pao_ID_____1 == -1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 4248: Dead code detected: __asm__ ("decl %%gs:%P0": "+m" (rcu_torture_count[pipe_count])); (CFACreationUtils.addEdgeToCFA, INFO)

line 4250: Dead code detected: __asm__ ("addl %1, %%gs:%P0": "+m" (rcu_torture_count[pipe_count]): "ri" (1L)); (CFACreationUtils.addEdgeToCFA, INFO)

line 4253: Dead code detected:  (CFACreationUtils.addEdgeToCFA, INFO)

line 4254: Dead code detected: [!(pao_ID_____1 == 1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 4255: Dead code detected: __asm__ ("incq %%gs:%P0": "+m" (rcu_torture_count[pipe_count])); (CFACreationUtils.addEdgeToCFA, INFO)

line 4257: Dead code detected: [pao_ID_____1 == -1] (CFACreationUtils.addEdgeToCFA, INFO)

line 4257: Dead code detected: [!(pao_ID_____1 == -1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 4258: Dead code detected: __asm__ ("decq %%gs:%P0": "+m" (rcu_torture_count[pipe_count])); (CFACreationUtils.addEdgeToCFA, INFO)

line 4260: Dead code detected: __asm__ ("addq %1, %%gs:%P0": "+m" (rcu_torture_count[pipe_count]): "re" (1L)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (8UL) {
  case 1UL: ;
  if (pao_ID_____1 == 1) {
    __asm__ ("incb %%gs:%P0": "+m" (rcu_torture_count[pipe_count]));
  } else
  if (pao_ID_____1 == -1) {
    __asm__ ("decb %%gs:%P0": "+m" (rcu_torture_count[pipe_count]));
  } else {
    __asm__ ("addb %1, %%gs:%P0": "+m" (rcu_torture_count[pipe_count]): "qi" (1L));
  }
  goto ldv_21350;
  case 2UL: ;
  if (pao_ID_____1 == 1) {
    __asm__ ("incw %%gs:%P0": "+m" (rcu_torture_count[pipe_count]));
  } else
  if (pao_ID_____1 == -1) {
    __asm__ ("decw %%gs:%P0": "+m" (rcu_torture_count[pipe_count]));
  } else {
    __asm__ ("addw %1, %%gs:%P0": "+m" (rcu_torture_count[pipe_count]): "ri" (1L));
  }
  goto ldv_21350;
  case 4UL: ;
  if (pao_ID_____1 == 1) {
    __asm__ ("incl %%gs:%P0": "+m" (rcu_torture_count[pipe_count]));
  } else
  if (pao_ID_____1 == -1) {
    __asm__ ("decl %%gs:%P0": "+m" (rcu_torture_count[pipe_count]));
  } else {
    __asm__ ("addl %1, %%gs:%P0": "+m" (rcu_torture_count[pipe_count]): "ri" (1L));
  }
  goto ldv_21350;
  case 8UL: ;
  if (pao_ID_____1 == 1) {
    __asm__ ("incq %%gs:%P0": "+m" (rcu_torture_count[pipe_count]));
  } else
  if (pao_ID_____1 == -1) {
    __asm__ ("decq %%gs:%P0": "+m" (rcu_torture_count[pipe_count]));
  } else {
    __asm__ ("addq %1, %%gs:%P0": "+m" (rcu_torture_count[pipe_count]): "re" (1L));
  }
  goto ldv_21350;
  default:
  __bad_percpu_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 4272: Dead code detected: [pao_ID_____2 == 1] (CFACreationUtils.addEdgeToCFA, INFO)

line 4272: Dead code detected: [!(pao_ID_____2 == 1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 4273: Dead code detected: __asm__ ("incb %%gs:%P0": "+m" (rcu_torture_count[pipe_count])); (CFACreationUtils.addEdgeToCFA, INFO)

line 4275: Dead code detected: [pao_ID_____2 == -1] (CFACreationUtils.addEdgeToCFA, INFO)

line 4275: Dead code detected: [!(pao_ID_____2 == -1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 4276: Dead code detected: __asm__ ("decb %%gs:%P0": "+m" (rcu_torture_count[pipe_count])); (CFACreationUtils.addEdgeToCFA, INFO)

line 4278: Dead code detected: __asm__ ("addb %1, %%gs:%P0": "+m" (rcu_torture_count[pipe_count]): "qi" (1L)); (CFACreationUtils.addEdgeToCFA, INFO)

line 4282: Dead code detected: [pao_ID_____2 == 1] (CFACreationUtils.addEdgeToCFA, INFO)

line 4282: Dead code detected: [!(pao_ID_____2 == 1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 4283: Dead code detected: __asm__ ("incw %%gs:%P0": "+m" (rcu_torture_count[pipe_count])); (CFACreationUtils.addEdgeToCFA, INFO)

line 4285: Dead code detected: [pao_ID_____2 == -1] (CFACreationUtils.addEdgeToCFA, INFO)

line 4285: Dead code detected: [!(pao_ID_____2 == -1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 4286: Dead code detected: __asm__ ("decw %%gs:%P0": "+m" (rcu_torture_count[pipe_count])); (CFACreationUtils.addEdgeToCFA, INFO)

line 4288: Dead code detected: __asm__ ("addw %1, %%gs:%P0": "+m" (rcu_torture_count[pipe_count]): "ri" (1L)); (CFACreationUtils.addEdgeToCFA, INFO)

line 4292: Dead code detected: [pao_ID_____2 == 1] (CFACreationUtils.addEdgeToCFA, INFO)

line 4292: Dead code detected: [!(pao_ID_____2 == 1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 4293: Dead code detected: __asm__ ("incl %%gs:%P0": "+m" (rcu_torture_count[pipe_count])); (CFACreationUtils.addEdgeToCFA, INFO)

line 4295: Dead code detected: [pao_ID_____2 == -1] (CFACreationUtils.addEdgeToCFA, INFO)

line 4295: Dead code detected: [!(pao_ID_____2 == -1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 4296: Dead code detected: __asm__ ("decl %%gs:%P0": "+m" (rcu_torture_count[pipe_count])); (CFACreationUtils.addEdgeToCFA, INFO)

line 4298: Dead code detected: __asm__ ("addl %1, %%gs:%P0": "+m" (rcu_torture_count[pipe_count]): "ri" (1L)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (8UL) {
  case 1UL: ;
  if (pao_ID_____2 == 1) {
    __asm__ ("incb %%gs:%P0": "+m" (rcu_torture_count[pipe_count]));
  } else
  if (pao_ID_____2 == -1) {
    __asm__ ("decb %%gs:%P0": "+m" (rcu_torture_count[pipe_count]));
  } else {
    __asm__ ("addb %1, %%gs:%P0": "+m" (rcu_torture_count[pipe_count]): "qi" (1L));
  }
  goto ldv_21360;
  case 2UL: ;
  if (pao_ID_____2 == 1) {
    __asm__ ("incw %%gs:%P0": "+m" (rcu_torture_count[pipe_count]));
  } else
  if (pao_ID_____2 == -1) {
    __asm__ ("decw %%gs:%P0": "+m" (rcu_torture_count[pipe_count]));
  } else {
    __asm__ ("addw %1, %%gs:%P0": "+m" (rcu_torture_count[pipe_count]): "ri" (1L));
  }
  goto ldv_21360;
  case 4UL: ;
  if (pao_ID_____2 == 1) {
    __asm__ ("incl %%gs:%P0": "+m" (rcu_torture_count[pipe_count]));
  } else
  if (pao_ID_____2 == -1) {
    __asm__ ("decl %%gs:%P0": "+m" (rcu_torture_count[pipe_count]));
  } else {
    __asm__ ("addl %1, %%gs:%P0": "+m" (rcu_torture_count[pipe_count]): "ri" (1L));
  }
  goto ldv_21360;
  case 8UL: ;
  if (pao_ID_____2 == 1) {
    __asm__ ("incq %%gs:%P0": "+m" (rcu_torture_count[pipe_count]));
  } else
  if (pao_ID_____2 == -1) {
    __asm__ ("decq %%gs:%P0": "+m" (rcu_torture_count[pipe_count]));
  } else {
    __asm__ ("addq %1, %%gs:%P0": "+m" (rcu_torture_count[pipe_count]): "re" (1L));
  }
  goto ldv_21360;
  default:
  __bad_percpu_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (8UL) {
  case 1UL:
  pao_ID__ = 1;
  switch (8UL) {
  case 1UL: ;
  if (pao_ID__ == 1) {
    __asm__ ("incb %%gs:%P0": "+m" (rcu_torture_count[pipe_count]));
  } else
  if (pao_ID__ == -1) {
    __asm__ ("decb %%gs:%P0": "+m" (rcu_torture_count[pipe_count]));
  } else {
    __asm__ ("addb %1, %%gs:%P0": "+m" (rcu_torture_count[pipe_count]): "qi" (1L));
  }
  goto ldv_21329;
  case 2UL: ;
  if (pao_ID__ == 1) {
    __asm__ ("incw %%gs:%P0": "+m" (rcu_torture_count[pipe_count]));
  } else
  if (pao_ID__ == -1) {
    __asm__ ("decw %%gs:%P0": "+m" (rcu_torture_count[pipe_count]));
  } else {
    __asm__ ("addw %1, %%gs:%P0": "+m" (rcu_torture_count[pipe_count]): "ri" (1L));
  }
  goto ldv_21329;
  case 4UL: ;
  if (pao_ID__ == 1) {
    __asm__ ("incl %%gs:%P0": "+m" (rcu_torture_count[pipe_count]));
  } else
  if (pao_ID__ == -1) {
    __asm__ ("decl %%gs:%P0": "+m" (rcu_torture_count[pipe_count]));
  } else {
    __asm__ ("addl %1, %%gs:%P0": "+m" (rcu_torture_count[pipe_count]): "ri" (1L));
  }
  goto ldv_21329;
  case 8UL: ;
  if (pao_ID__ == 1) {
    __asm__ ("incq %%gs:%P0": "+m" (rcu_torture_count[pipe_count]));
  } else
  if (pao_ID__ == -1) {
    __asm__ ("decq %%gs:%P0": "+m" (rcu_torture_count[pipe_count]));
  } else {
    __asm__ ("addq %1, %%gs:%P0": "+m" (rcu_torture_count[pipe_count]): "re" (1L));
  }
  goto ldv_21329;
  default:
  __bad_percpu_size();
  }
  ldv_21329: ;
  goto ldv_21334;
  case 2UL:
  pao_ID_____0 = 1;
  switch (8UL) {
  case 1UL: ;
  if (pao_ID_____0 == 1) {
    __asm__ ("incb %%gs:%P0": "+m" (rcu_torture_count[pipe_count]));
  } else
  if (pao_ID_____0 == -1) {
    __asm__ ("decb %%gs:%P0": "+m" (rcu_torture_count[pipe_count]));
  } else {
    __asm__ ("addb %1, %%gs:%P0": "+m" (rcu_torture_count[pipe_count]): "qi" (1L));
  }
  goto ldv_21340;
  case 2UL: ;
  if (pao_ID_____0 == 1) {
    __asm__ ("incw %%gs:%P0": "+m" (rcu_torture_count[pipe_count]));
  } else
  if (pao_ID_____0 == -1) {
    __asm__ ("decw %%gs:%P0": "+m" (rcu_torture_count[pipe_count]));
  } else {
    __asm__ ("addw %1, %%gs:%P0": "+m" (rcu_torture_count[pipe_count]): "ri" (1L));
  }
  goto ldv_21340;
  case 4UL: ;
  if (pao_ID_____0 == 1) {
    __asm__ ("incl %%gs:%P0": "+m" (rcu_torture_count[pipe_count]));
  } else
  if (pao_ID_____0 == -1) {
    __asm__ ("decl %%gs:%P0": "+m" (rcu_torture_count[pipe_count]));
  } else {
    __asm__ ("addl %1, %%gs:%P0": "+m" (rcu_torture_count[pipe_count]): "ri" (1L));
  }
  goto ldv_21340;
  case 8UL: ;
  if (pao_ID_____0 == 1) {
    __asm__ ("incq %%gs:%P0": "+m" (rcu_torture_count[pipe_count]));
  } else
  if (pao_ID_____0 == -1) {
    __asm__ ("decq %%gs:%P0": "+m" (rcu_torture_count[pipe_count]));
  } else {
    __asm__ ("addq %1, %%gs:%P0": "+m" (rcu_torture_count[pipe_count]): "re" (1L));
  }
  goto ldv_21340;
  default:
  __bad_percpu_size();
  }
  ldv_21340: ;
  goto ldv_21334;
  case 4UL:
  pao_ID_____1 = 1;
  switch (8UL) {
  case 1UL: ;
  if (pao_ID_____1 == 1) {
    __asm__ ("incb %%gs:%P0": "+m" (rcu_torture_count[pipe_count]));
  } else
  if (pao_ID_____1 == -1) {
    __asm__ ("decb %%gs:%P0": "+m" (rcu_torture_count[pipe_count]));
  } else {
    __asm__ ("addb %1, %%gs:%P0": "+m" (rcu_torture_count[pipe_count]): "qi" (1L));
  }
  goto ldv_21350;
  case 2UL: ;
  if (pao_ID_____1 == 1) {
    __asm__ ("incw %%gs:%P0": "+m" (rcu_torture_count[pipe_count]));
  } else
  if (pao_ID_____1 == -1) {
    __asm__ ("decw %%gs:%P0": "+m" (rcu_torture_count[pipe_count]));
  } else {
    __asm__ ("addw %1, %%gs:%P0": "+m" (rcu_torture_count[pipe_count]): "ri" (1L));
  }
  goto ldv_21350;
  case 4UL: ;
  if (pao_ID_____1 == 1) {
    __asm__ ("incl %%gs:%P0": "+m" (rcu_torture_count[pipe_count]));
  } else
  if (pao_ID_____1 == -1) {
    __asm__ ("decl %%gs:%P0": "+m" (rcu_torture_count[pipe_count]));
  } else {
    __asm__ ("addl %1, %%gs:%P0": "+m" (rcu_torture_count[pipe_count]): "ri" (1L));
  }
  goto ldv_21350;
  case 8UL: ;
  if (pao_ID_____1 == 1) {
    __asm__ ("incq %%gs:%P0": "+m" (rcu_torture_count[pipe_count]));
  } else
  if (pao_ID_____1 == -1) {
    __asm__ ("decq %%gs:%P0": "+m" (rcu_torture_count[pipe_count]));
  } else {
    __asm__ ("addq %1, %%gs:%P0": "+m" (rcu_torture_count[pipe_count]): "re" (1L));
  }
  goto ldv_21350;
  default:
  __bad_percpu_size();
  }
  ldv_21350: ;
  goto ldv_21334;
  case 8UL:
  pao_ID_____2 = 1;
  switch (8UL) {
  case 1UL: ;
  if (pao_ID_____2 == 1) {
    __asm__ ("incb %%gs:%P0": "+m" (rcu_torture_count[pipe_count]));
  } else
  if (pao_ID_____2 == -1) {
    __asm__ ("decb %%gs:%P0": "+m" (rcu_torture_count[pipe_count]));
  } else {
    __asm__ ("addb %1, %%gs:%P0": "+m" (rcu_torture_count[pipe_count]): "qi" (1L));
  }
  goto ldv_21360;
  case 2UL: ;
  if (pao_ID_____2 == 1) {
    __asm__ ("incw %%gs:%P0": "+m" (rcu_torture_count[pipe_count]));
  } else
  if (pao_ID_____2 == -1) {
    __asm__ ("decw %%gs:%P0": "+m" (rcu_torture_count[pipe_count]));
  } else {
    __asm__ ("addw %1, %%gs:%P0": "+m" (rcu_torture_count[pipe_count]): "ri" (1L));
  }
  goto ldv_21360;
  case 4UL: ;
  if (pao_ID_____2 == 1) {
    __asm__ ("incl %%gs:%P0": "+m" (rcu_torture_count[pipe_count]));
  } else
  if (pao_ID_____2 == -1) {
    __asm__ ("decl %%gs:%P0": "+m" (rcu_torture_count[pipe_count]));
  } else {
    __asm__ ("addl %1, %%gs:%P0": "+m" (rcu_torture_count[pipe_count]): "ri" (1L));
  }
  goto ldv_21360;
  case 8UL: ;
  if (pao_ID_____2 == 1) {
    __asm__ ("incq %%gs:%P0": "+m" (rcu_torture_count[pipe_count]));
  } else
  if (pao_ID_____2 == -1) {
    __asm__ ("decq %%gs:%P0": "+m" (rcu_torture_count[pipe_count]));
  } else {
    __asm__ ("addq %1, %%gs:%P0": "+m" (rcu_torture_count[pipe_count]): "re" (1L));
  }
  goto ldv_21360;
  default:
  __bad_percpu_size();
  }
  ldv_21360: ;
  goto ldv_21334;
  default:
  __bad_size_call_parameter();
  goto ldv_21334;
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 4331: Dead code detected: pao_ID_____3 = 1; (CFACreationUtils.addEdgeToCFA, INFO)

line 4334: Dead code detected: [pao_ID_____3 == 1] (CFACreationUtils.addEdgeToCFA, INFO)

line 4334: Dead code detected: [!(pao_ID_____3 == 1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 4335: Dead code detected: __asm__ ("incb %%gs:%P0": "+m" (rcu_torture_batch[completed])); (CFACreationUtils.addEdgeToCFA, INFO)

line 4337: Dead code detected: [pao_ID_____3 == -1] (CFACreationUtils.addEdgeToCFA, INFO)

line 4337: Dead code detected: [!(pao_ID_____3 == -1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 4338: Dead code detected: __asm__ ("decb %%gs:%P0": "+m" (rcu_torture_batch[completed])); (CFACreationUtils.addEdgeToCFA, INFO)

line 4340: Dead code detected: __asm__ ("addb %1, %%gs:%P0": "+m" (rcu_torture_batch[completed]): "qi" (1L)); (CFACreationUtils.addEdgeToCFA, INFO)

line 4344: Dead code detected: [pao_ID_____3 == 1] (CFACreationUtils.addEdgeToCFA, INFO)

line 4344: Dead code detected: [!(pao_ID_____3 == 1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 4345: Dead code detected: __asm__ ("incw %%gs:%P0": "+m" (rcu_torture_batch[completed])); (CFACreationUtils.addEdgeToCFA, INFO)

line 4347: Dead code detected: [pao_ID_____3 == -1] (CFACreationUtils.addEdgeToCFA, INFO)

line 4347: Dead code detected: [!(pao_ID_____3 == -1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 4348: Dead code detected: __asm__ ("decw %%gs:%P0": "+m" (rcu_torture_batch[completed])); (CFACreationUtils.addEdgeToCFA, INFO)

line 4350: Dead code detected: __asm__ ("addw %1, %%gs:%P0": "+m" (rcu_torture_batch[completed]): "ri" (1L)); (CFACreationUtils.addEdgeToCFA, INFO)

line 4354: Dead code detected: [pao_ID_____3 == 1] (CFACreationUtils.addEdgeToCFA, INFO)

line 4354: Dead code detected: [!(pao_ID_____3 == 1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 4355: Dead code detected: __asm__ ("incl %%gs:%P0": "+m" (rcu_torture_batch[completed])); (CFACreationUtils.addEdgeToCFA, INFO)

line 4357: Dead code detected: [pao_ID_____3 == -1] (CFACreationUtils.addEdgeToCFA, INFO)

line 4357: Dead code detected: [!(pao_ID_____3 == -1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 4358: Dead code detected: __asm__ ("decl %%gs:%P0": "+m" (rcu_torture_batch[completed])); (CFACreationUtils.addEdgeToCFA, INFO)

line 4360: Dead code detected: __asm__ ("addl %1, %%gs:%P0": "+m" (rcu_torture_batch[completed]): "ri" (1L)); (CFACreationUtils.addEdgeToCFA, INFO)

line 4363: Dead code detected:  (CFACreationUtils.addEdgeToCFA, INFO)

line 4364: Dead code detected: [!(pao_ID_____3 == 1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 4365: Dead code detected: __asm__ ("incq %%gs:%P0": "+m" (rcu_torture_batch[completed])); (CFACreationUtils.addEdgeToCFA, INFO)

line 4367: Dead code detected: [pao_ID_____3 == -1] (CFACreationUtils.addEdgeToCFA, INFO)

line 4367: Dead code detected: [!(pao_ID_____3 == -1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 4368: Dead code detected: __asm__ ("decq %%gs:%P0": "+m" (rcu_torture_batch[completed])); (CFACreationUtils.addEdgeToCFA, INFO)

line 4370: Dead code detected: __asm__ ("addq %1, %%gs:%P0": "+m" (rcu_torture_batch[completed]): "re" (1L)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (8UL) {
  case 1UL: ;
  if (pao_ID_____3 == 1) {
    __asm__ ("incb %%gs:%P0": "+m" (rcu_torture_batch[completed]));
  } else
  if (pao_ID_____3 == -1) {
    __asm__ ("decb %%gs:%P0": "+m" (rcu_torture_batch[completed]));
  } else {
    __asm__ ("addb %1, %%gs:%P0": "+m" (rcu_torture_batch[completed]): "qi" (1L));
  }
  goto ldv_21372;
  case 2UL: ;
  if (pao_ID_____3 == 1) {
    __asm__ ("incw %%gs:%P0": "+m" (rcu_torture_batch[completed]));
  } else
  if (pao_ID_____3 == -1) {
    __asm__ ("decw %%gs:%P0": "+m" (rcu_torture_batch[completed]));
  } else {
    __asm__ ("addw %1, %%gs:%P0": "+m" (rcu_torture_batch[completed]): "ri" (1L));
  }
  goto ldv_21372;
  case 4UL: ;
  if (pao_ID_____3 == 1) {
    __asm__ ("incl %%gs:%P0": "+m" (rcu_torture_batch[completed]));
  } else
  if (pao_ID_____3 == -1) {
    __asm__ ("decl %%gs:%P0": "+m" (rcu_torture_batch[completed]));
  } else {
    __asm__ ("addl %1, %%gs:%P0": "+m" (rcu_torture_batch[completed]): "ri" (1L));
  }
  goto ldv_21372;
  case 8UL: ;
  if (pao_ID_____3 == 1) {
    __asm__ ("incq %%gs:%P0": "+m" (rcu_torture_batch[completed]));
  } else
  if (pao_ID_____3 == -1) {
    __asm__ ("decq %%gs:%P0": "+m" (rcu_torture_batch[completed]));
  } else {
    __asm__ ("addq %1, %%gs:%P0": "+m" (rcu_torture_batch[completed]): "re" (1L));
  }
  goto ldv_21372;
  default:
  __bad_percpu_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 4379: Dead code detected: pao_ID_____4 = 1; (CFACreationUtils.addEdgeToCFA, INFO)

line 4382: Dead code detected: [pao_ID_____4 == 1] (CFACreationUtils.addEdgeToCFA, INFO)

line 4382: Dead code detected: [!(pao_ID_____4 == 1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 4383: Dead code detected: __asm__ ("incb %%gs:%P0": "+m" (rcu_torture_batch[completed])); (CFACreationUtils.addEdgeToCFA, INFO)

line 4385: Dead code detected: [pao_ID_____4 == -1] (CFACreationUtils.addEdgeToCFA, INFO)

line 4385: Dead code detected: [!(pao_ID_____4 == -1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 4386: Dead code detected: __asm__ ("decb %%gs:%P0": "+m" (rcu_torture_batch[completed])); (CFACreationUtils.addEdgeToCFA, INFO)

line 4388: Dead code detected: __asm__ ("addb %1, %%gs:%P0": "+m" (rcu_torture_batch[completed]): "qi" (1L)); (CFACreationUtils.addEdgeToCFA, INFO)

line 4392: Dead code detected: [pao_ID_____4 == 1] (CFACreationUtils.addEdgeToCFA, INFO)

line 4392: Dead code detected: [!(pao_ID_____4 == 1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 4393: Dead code detected: __asm__ ("incw %%gs:%P0": "+m" (rcu_torture_batch[completed])); (CFACreationUtils.addEdgeToCFA, INFO)

line 4395: Dead code detected: [pao_ID_____4 == -1] (CFACreationUtils.addEdgeToCFA, INFO)

line 4395: Dead code detected: [!(pao_ID_____4 == -1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 4396: Dead code detected: __asm__ ("decw %%gs:%P0": "+m" (rcu_torture_batch[completed])); (CFACreationUtils.addEdgeToCFA, INFO)

line 4398: Dead code detected: __asm__ ("addw %1, %%gs:%P0": "+m" (rcu_torture_batch[completed]): "ri" (1L)); (CFACreationUtils.addEdgeToCFA, INFO)

line 4402: Dead code detected: [pao_ID_____4 == 1] (CFACreationUtils.addEdgeToCFA, INFO)

line 4402: Dead code detected: [!(pao_ID_____4 == 1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 4403: Dead code detected: __asm__ ("incl %%gs:%P0": "+m" (rcu_torture_batch[completed])); (CFACreationUtils.addEdgeToCFA, INFO)

line 4405: Dead code detected: [pao_ID_____4 == -1] (CFACreationUtils.addEdgeToCFA, INFO)

line 4405: Dead code detected: [!(pao_ID_____4 == -1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 4406: Dead code detected: __asm__ ("decl %%gs:%P0": "+m" (rcu_torture_batch[completed])); (CFACreationUtils.addEdgeToCFA, INFO)

line 4408: Dead code detected: __asm__ ("addl %1, %%gs:%P0": "+m" (rcu_torture_batch[completed]): "ri" (1L)); (CFACreationUtils.addEdgeToCFA, INFO)

line 4411: Dead code detected:  (CFACreationUtils.addEdgeToCFA, INFO)

line 4412: Dead code detected: [!(pao_ID_____4 == 1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 4413: Dead code detected: __asm__ ("incq %%gs:%P0": "+m" (rcu_torture_batch[completed])); (CFACreationUtils.addEdgeToCFA, INFO)

line 4415: Dead code detected: [pao_ID_____4 == -1] (CFACreationUtils.addEdgeToCFA, INFO)

line 4415: Dead code detected: [!(pao_ID_____4 == -1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 4416: Dead code detected: __asm__ ("decq %%gs:%P0": "+m" (rcu_torture_batch[completed])); (CFACreationUtils.addEdgeToCFA, INFO)

line 4418: Dead code detected: __asm__ ("addq %1, %%gs:%P0": "+m" (rcu_torture_batch[completed]): "re" (1L)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (8UL) {
  case 1UL: ;
  if (pao_ID_____4 == 1) {
    __asm__ ("incb %%gs:%P0": "+m" (rcu_torture_batch[completed]));
  } else
  if (pao_ID_____4 == -1) {
    __asm__ ("decb %%gs:%P0": "+m" (rcu_torture_batch[completed]));
  } else {
    __asm__ ("addb %1, %%gs:%P0": "+m" (rcu_torture_batch[completed]): "qi" (1L));
  }
  goto ldv_21383;
  case 2UL: ;
  if (pao_ID_____4 == 1) {
    __asm__ ("incw %%gs:%P0": "+m" (rcu_torture_batch[completed]));
  } else
  if (pao_ID_____4 == -1) {
    __asm__ ("decw %%gs:%P0": "+m" (rcu_torture_batch[completed]));
  } else {
    __asm__ ("addw %1, %%gs:%P0": "+m" (rcu_torture_batch[completed]): "ri" (1L));
  }
  goto ldv_21383;
  case 4UL: ;
  if (pao_ID_____4 == 1) {
    __asm__ ("incl %%gs:%P0": "+m" (rcu_torture_batch[completed]));
  } else
  if (pao_ID_____4 == -1) {
    __asm__ ("decl %%gs:%P0": "+m" (rcu_torture_batch[completed]));
  } else {
    __asm__ ("addl %1, %%gs:%P0": "+m" (rcu_torture_batch[completed]): "ri" (1L));
  }
  goto ldv_21383;
  case 8UL: ;
  if (pao_ID_____4 == 1) {
    __asm__ ("incq %%gs:%P0": "+m" (rcu_torture_batch[completed]));
  } else
  if (pao_ID_____4 == -1) {
    __asm__ ("decq %%gs:%P0": "+m" (rcu_torture_batch[completed]));
  } else {
    __asm__ ("addq %1, %%gs:%P0": "+m" (rcu_torture_batch[completed]): "re" (1L));
  }
  goto ldv_21383;
  default:
  __bad_percpu_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 4427: Dead code detected: pao_ID_____5 = 1; (CFACreationUtils.addEdgeToCFA, INFO)

line 4430: Dead code detected: [pao_ID_____5 == 1] (CFACreationUtils.addEdgeToCFA, INFO)

line 4430: Dead code detected: [!(pao_ID_____5 == 1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 4431: Dead code detected: __asm__ ("incb %%gs:%P0": "+m" (rcu_torture_batch[completed])); (CFACreationUtils.addEdgeToCFA, INFO)

line 4433: Dead code detected: [pao_ID_____5 == -1] (CFACreationUtils.addEdgeToCFA, INFO)

line 4433: Dead code detected: [!(pao_ID_____5 == -1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 4434: Dead code detected: __asm__ ("decb %%gs:%P0": "+m" (rcu_torture_batch[completed])); (CFACreationUtils.addEdgeToCFA, INFO)

line 4436: Dead code detected: __asm__ ("addb %1, %%gs:%P0": "+m" (rcu_torture_batch[completed]): "qi" (1L)); (CFACreationUtils.addEdgeToCFA, INFO)

line 4440: Dead code detected: [pao_ID_____5 == 1] (CFACreationUtils.addEdgeToCFA, INFO)

line 4440: Dead code detected: [!(pao_ID_____5 == 1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 4441: Dead code detected: __asm__ ("incw %%gs:%P0": "+m" (rcu_torture_batch[completed])); (CFACreationUtils.addEdgeToCFA, INFO)

line 4443: Dead code detected: [pao_ID_____5 == -1] (CFACreationUtils.addEdgeToCFA, INFO)

line 4443: Dead code detected: [!(pao_ID_____5 == -1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 4444: Dead code detected: __asm__ ("decw %%gs:%P0": "+m" (rcu_torture_batch[completed])); (CFACreationUtils.addEdgeToCFA, INFO)

line 4446: Dead code detected: __asm__ ("addw %1, %%gs:%P0": "+m" (rcu_torture_batch[completed]): "ri" (1L)); (CFACreationUtils.addEdgeToCFA, INFO)

line 4450: Dead code detected: [pao_ID_____5 == 1] (CFACreationUtils.addEdgeToCFA, INFO)

line 4450: Dead code detected: [!(pao_ID_____5 == 1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 4451: Dead code detected: __asm__ ("incl %%gs:%P0": "+m" (rcu_torture_batch[completed])); (CFACreationUtils.addEdgeToCFA, INFO)

line 4453: Dead code detected: [pao_ID_____5 == -1] (CFACreationUtils.addEdgeToCFA, INFO)

line 4453: Dead code detected: [!(pao_ID_____5 == -1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 4454: Dead code detected: __asm__ ("decl %%gs:%P0": "+m" (rcu_torture_batch[completed])); (CFACreationUtils.addEdgeToCFA, INFO)

line 4456: Dead code detected: __asm__ ("addl %1, %%gs:%P0": "+m" (rcu_torture_batch[completed]): "ri" (1L)); (CFACreationUtils.addEdgeToCFA, INFO)

line 4459: Dead code detected:  (CFACreationUtils.addEdgeToCFA, INFO)

line 4460: Dead code detected: [!(pao_ID_____5 == 1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 4461: Dead code detected: __asm__ ("incq %%gs:%P0": "+m" (rcu_torture_batch[completed])); (CFACreationUtils.addEdgeToCFA, INFO)

line 4463: Dead code detected: [pao_ID_____5 == -1] (CFACreationUtils.addEdgeToCFA, INFO)

line 4463: Dead code detected: [!(pao_ID_____5 == -1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 4464: Dead code detected: __asm__ ("decq %%gs:%P0": "+m" (rcu_torture_batch[completed])); (CFACreationUtils.addEdgeToCFA, INFO)

line 4466: Dead code detected: __asm__ ("addq %1, %%gs:%P0": "+m" (rcu_torture_batch[completed]): "re" (1L)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (8UL) {
  case 1UL: ;
  if (pao_ID_____5 == 1) {
    __asm__ ("incb %%gs:%P0": "+m" (rcu_torture_batch[completed]));
  } else
  if (pao_ID_____5 == -1) {
    __asm__ ("decb %%gs:%P0": "+m" (rcu_torture_batch[completed]));
  } else {
    __asm__ ("addb %1, %%gs:%P0": "+m" (rcu_torture_batch[completed]): "qi" (1L));
  }
  goto ldv_21393;
  case 2UL: ;
  if (pao_ID_____5 == 1) {
    __asm__ ("incw %%gs:%P0": "+m" (rcu_torture_batch[completed]));
  } else
  if (pao_ID_____5 == -1) {
    __asm__ ("decw %%gs:%P0": "+m" (rcu_torture_batch[completed]));
  } else {
    __asm__ ("addw %1, %%gs:%P0": "+m" (rcu_torture_batch[completed]): "ri" (1L));
  }
  goto ldv_21393;
  case 4UL: ;
  if (pao_ID_____5 == 1) {
    __asm__ ("incl %%gs:%P0": "+m" (rcu_torture_batch[completed]));
  } else
  if (pao_ID_____5 == -1) {
    __asm__ ("decl %%gs:%P0": "+m" (rcu_torture_batch[completed]));
  } else {
    __asm__ ("addl %1, %%gs:%P0": "+m" (rcu_torture_batch[completed]): "ri" (1L));
  }
  goto ldv_21393;
  case 8UL: ;
  if (pao_ID_____5 == 1) {
    __asm__ ("incq %%gs:%P0": "+m" (rcu_torture_batch[completed]));
  } else
  if (pao_ID_____5 == -1) {
    __asm__ ("decq %%gs:%P0": "+m" (rcu_torture_batch[completed]));
  } else {
    __asm__ ("addq %1, %%gs:%P0": "+m" (rcu_torture_batch[completed]): "re" (1L));
  }
  goto ldv_21393;
  default:
  __bad_percpu_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 4478: Dead code detected: [pao_ID_____6 == 1] (CFACreationUtils.addEdgeToCFA, INFO)

line 4478: Dead code detected: [!(pao_ID_____6 == 1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 4479: Dead code detected: __asm__ ("incb %%gs:%P0": "+m" (rcu_torture_batch[completed])); (CFACreationUtils.addEdgeToCFA, INFO)

line 4481: Dead code detected: [pao_ID_____6 == -1] (CFACreationUtils.addEdgeToCFA, INFO)

line 4481: Dead code detected: [!(pao_ID_____6 == -1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 4482: Dead code detected: __asm__ ("decb %%gs:%P0": "+m" (rcu_torture_batch[completed])); (CFACreationUtils.addEdgeToCFA, INFO)

line 4484: Dead code detected: __asm__ ("addb %1, %%gs:%P0": "+m" (rcu_torture_batch[completed]): "qi" (1L)); (CFACreationUtils.addEdgeToCFA, INFO)

line 4488: Dead code detected: [pao_ID_____6 == 1] (CFACreationUtils.addEdgeToCFA, INFO)

line 4488: Dead code detected: [!(pao_ID_____6 == 1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 4489: Dead code detected: __asm__ ("incw %%gs:%P0": "+m" (rcu_torture_batch[completed])); (CFACreationUtils.addEdgeToCFA, INFO)

line 4491: Dead code detected: [pao_ID_____6 == -1] (CFACreationUtils.addEdgeToCFA, INFO)

line 4491: Dead code detected: [!(pao_ID_____6 == -1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 4492: Dead code detected: __asm__ ("decw %%gs:%P0": "+m" (rcu_torture_batch[completed])); (CFACreationUtils.addEdgeToCFA, INFO)

line 4494: Dead code detected: __asm__ ("addw %1, %%gs:%P0": "+m" (rcu_torture_batch[completed]): "ri" (1L)); (CFACreationUtils.addEdgeToCFA, INFO)

line 4498: Dead code detected: [pao_ID_____6 == 1] (CFACreationUtils.addEdgeToCFA, INFO)

line 4498: Dead code detected: [!(pao_ID_____6 == 1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 4499: Dead code detected: __asm__ ("incl %%gs:%P0": "+m" (rcu_torture_batch[completed])); (CFACreationUtils.addEdgeToCFA, INFO)

line 4501: Dead code detected: [pao_ID_____6 == -1] (CFACreationUtils.addEdgeToCFA, INFO)

line 4501: Dead code detected: [!(pao_ID_____6 == -1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 4502: Dead code detected: __asm__ ("decl %%gs:%P0": "+m" (rcu_torture_batch[completed])); (CFACreationUtils.addEdgeToCFA, INFO)

line 4504: Dead code detected: __asm__ ("addl %1, %%gs:%P0": "+m" (rcu_torture_batch[completed]): "ri" (1L)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (8UL) {
  case 1UL: ;
  if (pao_ID_____6 == 1) {
    __asm__ ("incb %%gs:%P0": "+m" (rcu_torture_batch[completed]));
  } else
  if (pao_ID_____6 == -1) {
    __asm__ ("decb %%gs:%P0": "+m" (rcu_torture_batch[completed]));
  } else {
    __asm__ ("addb %1, %%gs:%P0": "+m" (rcu_torture_batch[completed]): "qi" (1L));
  }
  goto ldv_21403;
  case 2UL: ;
  if (pao_ID_____6 == 1) {
    __asm__ ("incw %%gs:%P0": "+m" (rcu_torture_batch[completed]));
  } else
  if (pao_ID_____6 == -1) {
    __asm__ ("decw %%gs:%P0": "+m" (rcu_torture_batch[completed]));
  } else {
    __asm__ ("addw %1, %%gs:%P0": "+m" (rcu_torture_batch[completed]): "ri" (1L));
  }
  goto ldv_21403;
  case 4UL: ;
  if (pao_ID_____6 == 1) {
    __asm__ ("incl %%gs:%P0": "+m" (rcu_torture_batch[completed]));
  } else
  if (pao_ID_____6 == -1) {
    __asm__ ("decl %%gs:%P0": "+m" (rcu_torture_batch[completed]));
  } else {
    __asm__ ("addl %1, %%gs:%P0": "+m" (rcu_torture_batch[completed]): "ri" (1L));
  }
  goto ldv_21403;
  case 8UL: ;
  if (pao_ID_____6 == 1) {
    __asm__ ("incq %%gs:%P0": "+m" (rcu_torture_batch[completed]));
  } else
  if (pao_ID_____6 == -1) {
    __asm__ ("decq %%gs:%P0": "+m" (rcu_torture_batch[completed]));
  } else {
    __asm__ ("addq %1, %%gs:%P0": "+m" (rcu_torture_batch[completed]): "re" (1L));
  }
  goto ldv_21403;
  default:
  __bad_percpu_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (8UL) {
  case 1UL:
  pao_ID_____3 = 1;
  switch (8UL) {
  case 1UL: ;
  if (pao_ID_____3 == 1) {
    __asm__ ("incb %%gs:%P0": "+m" (rcu_torture_batch[completed]));
  } else
  if (pao_ID_____3 == -1) {
    __asm__ ("decb %%gs:%P0": "+m" (rcu_torture_batch[completed]));
  } else {
    __asm__ ("addb %1, %%gs:%P0": "+m" (rcu_torture_batch[completed]): "qi" (1L));
  }
  goto ldv_21372;
  case 2UL: ;
  if (pao_ID_____3 == 1) {
    __asm__ ("incw %%gs:%P0": "+m" (rcu_torture_batch[completed]));
  } else
  if (pao_ID_____3 == -1) {
    __asm__ ("decw %%gs:%P0": "+m" (rcu_torture_batch[completed]));
  } else {
    __asm__ ("addw %1, %%gs:%P0": "+m" (rcu_torture_batch[completed]): "ri" (1L));
  }
  goto ldv_21372;
  case 4UL: ;
  if (pao_ID_____3 == 1) {
    __asm__ ("incl %%gs:%P0": "+m" (rcu_torture_batch[completed]));
  } else
  if (pao_ID_____3 == -1) {
    __asm__ ("decl %%gs:%P0": "+m" (rcu_torture_batch[completed]));
  } else {
    __asm__ ("addl %1, %%gs:%P0": "+m" (rcu_torture_batch[completed]): "ri" (1L));
  }
  goto ldv_21372;
  case 8UL: ;
  if (pao_ID_____3 == 1) {
    __asm__ ("incq %%gs:%P0": "+m" (rcu_torture_batch[completed]));
  } else
  if (pao_ID_____3 == -1) {
    __asm__ ("decq %%gs:%P0": "+m" (rcu_torture_batch[completed]));
  } else {
    __asm__ ("addq %1, %%gs:%P0": "+m" (rcu_torture_batch[completed]): "re" (1L));
  }
  goto ldv_21372;
  default:
  __bad_percpu_size();
  }
  ldv_21372: ;
  goto ldv_21377;
  case 2UL:
  pao_ID_____4 = 1;
  switch (8UL) {
  case 1UL: ;
  if (pao_ID_____4 == 1) {
    __asm__ ("incb %%gs:%P0": "+m" (rcu_torture_batch[completed]));
  } else
  if (pao_ID_____4 == -1) {
    __asm__ ("decb %%gs:%P0": "+m" (rcu_torture_batch[completed]));
  } else {
    __asm__ ("addb %1, %%gs:%P0": "+m" (rcu_torture_batch[completed]): "qi" (1L));
  }
  goto ldv_21383;
  case 2UL: ;
  if (pao_ID_____4 == 1) {
    __asm__ ("incw %%gs:%P0": "+m" (rcu_torture_batch[completed]));
  } else
  if (pao_ID_____4 == -1) {
    __asm__ ("decw %%gs:%P0": "+m" (rcu_torture_batch[completed]));
  } else {
    __asm__ ("addw %1, %%gs:%P0": "+m" (rcu_torture_batch[completed]): "ri" (1L));
  }
  goto ldv_21383;
  case 4UL: ;
  if (pao_ID_____4 == 1) {
    __asm__ ("incl %%gs:%P0": "+m" (rcu_torture_batch[completed]));
  } else
  if (pao_ID_____4 == -1) {
    __asm__ ("decl %%gs:%P0": "+m" (rcu_torture_batch[completed]));
  } else {
    __asm__ ("addl %1, %%gs:%P0": "+m" (rcu_torture_batch[completed]): "ri" (1L));
  }
  goto ldv_21383;
  case 8UL: ;
  if (pao_ID_____4 == 1) {
    __asm__ ("incq %%gs:%P0": "+m" (rcu_torture_batch[completed]));
  } else
  if (pao_ID_____4 == -1) {
    __asm__ ("decq %%gs:%P0": "+m" (rcu_torture_batch[completed]));
  } else {
    __asm__ ("addq %1, %%gs:%P0": "+m" (rcu_torture_batch[completed]): "re" (1L));
  }
  goto ldv_21383;
  default:
  __bad_percpu_size();
  }
  ldv_21383: ;
  goto ldv_21377;
  case 4UL:
  pao_ID_____5 = 1;
  switch (8UL) {
  case 1UL: ;
  if (pao_ID_____5 == 1) {
    __asm__ ("incb %%gs:%P0": "+m" (rcu_torture_batch[completed]));
  } else
  if (pao_ID_____5 == -1) {
    __asm__ ("decb %%gs:%P0": "+m" (rcu_torture_batch[completed]));
  } else {
    __asm__ ("addb %1, %%gs:%P0": "+m" (rcu_torture_batch[completed]): "qi" (1L));
  }
  goto ldv_21393;
  case 2UL: ;
  if (pao_ID_____5 == 1) {
    __asm__ ("incw %%gs:%P0": "+m" (rcu_torture_batch[completed]));
  } else
  if (pao_ID_____5 == -1) {
    __asm__ ("decw %%gs:%P0": "+m" (rcu_torture_batch[completed]));
  } else {
    __asm__ ("addw %1, %%gs:%P0": "+m" (rcu_torture_batch[completed]): "ri" (1L));
  }
  goto ldv_21393;
  case 4UL: ;
  if (pao_ID_____5 == 1) {
    __asm__ ("incl %%gs:%P0": "+m" (rcu_torture_batch[completed]));
  } else
  if (pao_ID_____5 == -1) {
    __asm__ ("decl %%gs:%P0": "+m" (rcu_torture_batch[completed]));
  } else {
    __asm__ ("addl %1, %%gs:%P0": "+m" (rcu_torture_batch[completed]): "ri" (1L));
  }
  goto ldv_21393;
  case 8UL: ;
  if (pao_ID_____5 == 1) {
    __asm__ ("incq %%gs:%P0": "+m" (rcu_torture_batch[completed]));
  } else
  if (pao_ID_____5 == -1) {
    __asm__ ("decq %%gs:%P0": "+m" (rcu_torture_batch[completed]));
  } else {
    __asm__ ("addq %1, %%gs:%P0": "+m" (rcu_torture_batch[completed]): "re" (1L));
  }
  goto ldv_21393;
  default:
  __bad_percpu_size();
  }
  ldv_21393: ;
  goto ldv_21377;
  case 8UL:
  pao_ID_____6 = 1;
  switch (8UL) {
  case 1UL: ;
  if (pao_ID_____6 == 1) {
    __asm__ ("incb %%gs:%P0": "+m" (rcu_torture_batch[completed]));
  } else
  if (pao_ID_____6 == -1) {
    __asm__ ("decb %%gs:%P0": "+m" (rcu_torture_batch[completed]));
  } else {
    __asm__ ("addb %1, %%gs:%P0": "+m" (rcu_torture_batch[completed]): "qi" (1L));
  }
  goto ldv_21403;
  case 2UL: ;
  if (pao_ID_____6 == 1) {
    __asm__ ("incw %%gs:%P0": "+m" (rcu_torture_batch[completed]));
  } else
  if (pao_ID_____6 == -1) {
    __asm__ ("decw %%gs:%P0": "+m" (rcu_torture_batch[completed]));
  } else {
    __asm__ ("addw %1, %%gs:%P0": "+m" (rcu_torture_batch[completed]): "ri" (1L));
  }
  goto ldv_21403;
  case 4UL: ;
  if (pao_ID_____6 == 1) {
    __asm__ ("incl %%gs:%P0": "+m" (rcu_torture_batch[completed]));
  } else
  if (pao_ID_____6 == -1) {
    __asm__ ("decl %%gs:%P0": "+m" (rcu_torture_batch[completed]));
  } else {
    __asm__ ("addl %1, %%gs:%P0": "+m" (rcu_torture_batch[completed]): "ri" (1L));
  }
  goto ldv_21403;
  case 8UL: ;
  if (pao_ID_____6 == 1) {
    __asm__ ("incq %%gs:%P0": "+m" (rcu_torture_batch[completed]));
  } else
  if (pao_ID_____6 == -1) {
    __asm__ ("decq %%gs:%P0": "+m" (rcu_torture_batch[completed]));
  } else {
    __asm__ ("addq %1, %%gs:%P0": "+m" (rcu_torture_batch[completed]): "re" (1L));
  }
  goto ldv_21403;
  default:
  __bad_percpu_size();
  }
  ldv_21403: ;
  goto ldv_21377;
  default:
  __bad_size_call_parameter();
  goto ldv_21377;
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 4662: Dead code detected: pao_ID__ = 1; (CFACreationUtils.addEdgeToCFA, INFO)

line 4665: Dead code detected: [pao_ID__ == 1] (CFACreationUtils.addEdgeToCFA, INFO)

line 4665: Dead code detected: [!(pao_ID__ == 1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 4666: Dead code detected: __asm__ ("incb %%gs:%P0": "+m" (rcu_torture_count[pipe_count])); (CFACreationUtils.addEdgeToCFA, INFO)

line 4668: Dead code detected: [pao_ID__ == -1] (CFACreationUtils.addEdgeToCFA, INFO)

line 4668: Dead code detected: [!(pao_ID__ == -1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 4669: Dead code detected: __asm__ ("decb %%gs:%P0": "+m" (rcu_torture_count[pipe_count])); (CFACreationUtils.addEdgeToCFA, INFO)

line 4671: Dead code detected: __asm__ ("addb %1, %%gs:%P0": "+m" (rcu_torture_count[pipe_count]): "qi" (1L)); (CFACreationUtils.addEdgeToCFA, INFO)

line 4675: Dead code detected: [pao_ID__ == 1] (CFACreationUtils.addEdgeToCFA, INFO)

line 4675: Dead code detected: [!(pao_ID__ == 1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 4676: Dead code detected: __asm__ ("incw %%gs:%P0": "+m" (rcu_torture_count[pipe_count])); (CFACreationUtils.addEdgeToCFA, INFO)

line 4678: Dead code detected: [pao_ID__ == -1] (CFACreationUtils.addEdgeToCFA, INFO)

line 4678: Dead code detected: [!(pao_ID__ == -1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 4679: Dead code detected: __asm__ ("decw %%gs:%P0": "+m" (rcu_torture_count[pipe_count])); (CFACreationUtils.addEdgeToCFA, INFO)

line 4681: Dead code detected: __asm__ ("addw %1, %%gs:%P0": "+m" (rcu_torture_count[pipe_count]): "ri" (1L)); (CFACreationUtils.addEdgeToCFA, INFO)

line 4685: Dead code detected: [pao_ID__ == 1] (CFACreationUtils.addEdgeToCFA, INFO)

line 4685: Dead code detected: [!(pao_ID__ == 1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 4686: Dead code detected: __asm__ ("incl %%gs:%P0": "+m" (rcu_torture_count[pipe_count])); (CFACreationUtils.addEdgeToCFA, INFO)

line 4688: Dead code detected: [pao_ID__ == -1] (CFACreationUtils.addEdgeToCFA, INFO)

line 4688: Dead code detected: [!(pao_ID__ == -1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 4689: Dead code detected: __asm__ ("decl %%gs:%P0": "+m" (rcu_torture_count[pipe_count])); (CFACreationUtils.addEdgeToCFA, INFO)

line 4691: Dead code detected: __asm__ ("addl %1, %%gs:%P0": "+m" (rcu_torture_count[pipe_count]): "ri" (1L)); (CFACreationUtils.addEdgeToCFA, INFO)

line 4694: Dead code detected:  (CFACreationUtils.addEdgeToCFA, INFO)

line 4695: Dead code detected: [!(pao_ID__ == 1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 4696: Dead code detected: __asm__ ("incq %%gs:%P0": "+m" (rcu_torture_count[pipe_count])); (CFACreationUtils.addEdgeToCFA, INFO)

line 4698: Dead code detected: [pao_ID__ == -1] (CFACreationUtils.addEdgeToCFA, INFO)

line 4698: Dead code detected: [!(pao_ID__ == -1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 4699: Dead code detected: __asm__ ("decq %%gs:%P0": "+m" (rcu_torture_count[pipe_count])); (CFACreationUtils.addEdgeToCFA, INFO)

line 4701: Dead code detected: __asm__ ("addq %1, %%gs:%P0": "+m" (rcu_torture_count[pipe_count]): "re" (1L)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (8UL) {
  case 1UL: ;
  if (pao_ID__ == 1) {
    __asm__ ("incb %%gs:%P0": "+m" (rcu_torture_count[pipe_count]));
  } else
  if (pao_ID__ == -1) {
    __asm__ ("decb %%gs:%P0": "+m" (rcu_torture_count[pipe_count]));
  } else {
    __asm__ ("addb %1, %%gs:%P0": "+m" (rcu_torture_count[pipe_count]): "qi" (1L));
  }
  goto ldv_21429;
  case 2UL: ;
  if (pao_ID__ == 1) {
    __asm__ ("incw %%gs:%P0": "+m" (rcu_torture_count[pipe_count]));
  } else
  if (pao_ID__ == -1) {
    __asm__ ("decw %%gs:%P0": "+m" (rcu_torture_count[pipe_count]));
  } else {
    __asm__ ("addw %1, %%gs:%P0": "+m" (rcu_torture_count[pipe_count]): "ri" (1L));
  }
  goto ldv_21429;
  case 4UL: ;
  if (pao_ID__ == 1) {
    __asm__ ("incl %%gs:%P0": "+m" (rcu_torture_count[pipe_count]));
  } else
  if (pao_ID__ == -1) {
    __asm__ ("decl %%gs:%P0": "+m" (rcu_torture_count[pipe_count]));
  } else {
    __asm__ ("addl %1, %%gs:%P0": "+m" (rcu_torture_count[pipe_count]): "ri" (1L));
  }
  goto ldv_21429;
  case 8UL: ;
  if (pao_ID__ == 1) {
    __asm__ ("incq %%gs:%P0": "+m" (rcu_torture_count[pipe_count]));
  } else
  if (pao_ID__ == -1) {
    __asm__ ("decq %%gs:%P0": "+m" (rcu_torture_count[pipe_count]));
  } else {
    __asm__ ("addq %1, %%gs:%P0": "+m" (rcu_torture_count[pipe_count]): "re" (1L));
  }
  goto ldv_21429;
  default:
  __bad_percpu_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 4710: Dead code detected: pao_ID_____0 = 1; (CFACreationUtils.addEdgeToCFA, INFO)

line 4713: Dead code detected: [pao_ID_____0 == 1] (CFACreationUtils.addEdgeToCFA, INFO)

line 4713: Dead code detected: [!(pao_ID_____0 == 1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 4714: Dead code detected: __asm__ ("incb %%gs:%P0": "+m" (rcu_torture_count[pipe_count])); (CFACreationUtils.addEdgeToCFA, INFO)

line 4716: Dead code detected: [pao_ID_____0 == -1] (CFACreationUtils.addEdgeToCFA, INFO)

line 4716: Dead code detected: [!(pao_ID_____0 == -1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 4717: Dead code detected: __asm__ ("decb %%gs:%P0": "+m" (rcu_torture_count[pipe_count])); (CFACreationUtils.addEdgeToCFA, INFO)

line 4719: Dead code detected: __asm__ ("addb %1, %%gs:%P0": "+m" (rcu_torture_count[pipe_count]): "qi" (1L)); (CFACreationUtils.addEdgeToCFA, INFO)

line 4723: Dead code detected: [pao_ID_____0 == 1] (CFACreationUtils.addEdgeToCFA, INFO)

line 4723: Dead code detected: [!(pao_ID_____0 == 1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 4724: Dead code detected: __asm__ ("incw %%gs:%P0": "+m" (rcu_torture_count[pipe_count])); (CFACreationUtils.addEdgeToCFA, INFO)

line 4726: Dead code detected: [pao_ID_____0 == -1] (CFACreationUtils.addEdgeToCFA, INFO)

line 4726: Dead code detected: [!(pao_ID_____0 == -1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 4727: Dead code detected: __asm__ ("decw %%gs:%P0": "+m" (rcu_torture_count[pipe_count])); (CFACreationUtils.addEdgeToCFA, INFO)

line 4729: Dead code detected: __asm__ ("addw %1, %%gs:%P0": "+m" (rcu_torture_count[pipe_count]): "ri" (1L)); (CFACreationUtils.addEdgeToCFA, INFO)

line 4733: Dead code detected: [pao_ID_____0 == 1] (CFACreationUtils.addEdgeToCFA, INFO)

line 4733: Dead code detected: [!(pao_ID_____0 == 1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 4734: Dead code detected: __asm__ ("incl %%gs:%P0": "+m" (rcu_torture_count[pipe_count])); (CFACreationUtils.addEdgeToCFA, INFO)

line 4736: Dead code detected: [pao_ID_____0 == -1] (CFACreationUtils.addEdgeToCFA, INFO)

line 4736: Dead code detected: [!(pao_ID_____0 == -1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 4737: Dead code detected: __asm__ ("decl %%gs:%P0": "+m" (rcu_torture_count[pipe_count])); (CFACreationUtils.addEdgeToCFA, INFO)

line 4739: Dead code detected: __asm__ ("addl %1, %%gs:%P0": "+m" (rcu_torture_count[pipe_count]): "ri" (1L)); (CFACreationUtils.addEdgeToCFA, INFO)

line 4742: Dead code detected:  (CFACreationUtils.addEdgeToCFA, INFO)

line 4743: Dead code detected: [!(pao_ID_____0 == 1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 4744: Dead code detected: __asm__ ("incq %%gs:%P0": "+m" (rcu_torture_count[pipe_count])); (CFACreationUtils.addEdgeToCFA, INFO)

line 4746: Dead code detected: [pao_ID_____0 == -1] (CFACreationUtils.addEdgeToCFA, INFO)

line 4746: Dead code detected: [!(pao_ID_____0 == -1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 4747: Dead code detected: __asm__ ("decq %%gs:%P0": "+m" (rcu_torture_count[pipe_count])); (CFACreationUtils.addEdgeToCFA, INFO)

line 4749: Dead code detected: __asm__ ("addq %1, %%gs:%P0": "+m" (rcu_torture_count[pipe_count]): "re" (1L)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (8UL) {
  case 1UL: ;
  if (pao_ID_____0 == 1) {
    __asm__ ("incb %%gs:%P0": "+m" (rcu_torture_count[pipe_count]));
  } else
  if (pao_ID_____0 == -1) {
    __asm__ ("decb %%gs:%P0": "+m" (rcu_torture_count[pipe_count]));
  } else {
    __asm__ ("addb %1, %%gs:%P0": "+m" (rcu_torture_count[pipe_count]): "qi" (1L));
  }
  goto ldv_21440;
  case 2UL: ;
  if (pao_ID_____0 == 1) {
    __asm__ ("incw %%gs:%P0": "+m" (rcu_torture_count[pipe_count]));
  } else
  if (pao_ID_____0 == -1) {
    __asm__ ("decw %%gs:%P0": "+m" (rcu_torture_count[pipe_count]));
  } else {
    __asm__ ("addw %1, %%gs:%P0": "+m" (rcu_torture_count[pipe_count]): "ri" (1L));
  }
  goto ldv_21440;
  case 4UL: ;
  if (pao_ID_____0 == 1) {
    __asm__ ("incl %%gs:%P0": "+m" (rcu_torture_count[pipe_count]));
  } else
  if (pao_ID_____0 == -1) {
    __asm__ ("decl %%gs:%P0": "+m" (rcu_torture_count[pipe_count]));
  } else {
    __asm__ ("addl %1, %%gs:%P0": "+m" (rcu_torture_count[pipe_count]): "ri" (1L));
  }
  goto ldv_21440;
  case 8UL: ;
  if (pao_ID_____0 == 1) {
    __asm__ ("incq %%gs:%P0": "+m" (rcu_torture_count[pipe_count]));
  } else
  if (pao_ID_____0 == -1) {
    __asm__ ("decq %%gs:%P0": "+m" (rcu_torture_count[pipe_count]));
  } else {
    __asm__ ("addq %1, %%gs:%P0": "+m" (rcu_torture_count[pipe_count]): "re" (1L));
  }
  goto ldv_21440;
  default:
  __bad_percpu_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 4758: Dead code detected: pao_ID_____1 = 1; (CFACreationUtils.addEdgeToCFA, INFO)

line 4761: Dead code detected: [pao_ID_____1 == 1] (CFACreationUtils.addEdgeToCFA, INFO)

line 4761: Dead code detected: [!(pao_ID_____1 == 1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 4762: Dead code detected: __asm__ ("incb %%gs:%P0": "+m" (rcu_torture_count[pipe_count])); (CFACreationUtils.addEdgeToCFA, INFO)

line 4764: Dead code detected: [pao_ID_____1 == -1] (CFACreationUtils.addEdgeToCFA, INFO)

line 4764: Dead code detected: [!(pao_ID_____1 == -1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 4765: Dead code detected: __asm__ ("decb %%gs:%P0": "+m" (rcu_torture_count[pipe_count])); (CFACreationUtils.addEdgeToCFA, INFO)

line 4767: Dead code detected: __asm__ ("addb %1, %%gs:%P0": "+m" (rcu_torture_count[pipe_count]): "qi" (1L)); (CFACreationUtils.addEdgeToCFA, INFO)

line 4771: Dead code detected: [pao_ID_____1 == 1] (CFACreationUtils.addEdgeToCFA, INFO)

line 4771: Dead code detected: [!(pao_ID_____1 == 1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 4772: Dead code detected: __asm__ ("incw %%gs:%P0": "+m" (rcu_torture_count[pipe_count])); (CFACreationUtils.addEdgeToCFA, INFO)

line 4774: Dead code detected: [pao_ID_____1 == -1] (CFACreationUtils.addEdgeToCFA, INFO)

line 4774: Dead code detected: [!(pao_ID_____1 == -1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 4775: Dead code detected: __asm__ ("decw %%gs:%P0": "+m" (rcu_torture_count[pipe_count])); (CFACreationUtils.addEdgeToCFA, INFO)

line 4777: Dead code detected: __asm__ ("addw %1, %%gs:%P0": "+m" (rcu_torture_count[pipe_count]): "ri" (1L)); (CFACreationUtils.addEdgeToCFA, INFO)

line 4781: Dead code detected: [pao_ID_____1 == 1] (CFACreationUtils.addEdgeToCFA, INFO)

line 4781: Dead code detected: [!(pao_ID_____1 == 1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 4782: Dead code detected: __asm__ ("incl %%gs:%P0": "+m" (rcu_torture_count[pipe_count])); (CFACreationUtils.addEdgeToCFA, INFO)

line 4784: Dead code detected: [pao_ID_____1 == -1] (CFACreationUtils.addEdgeToCFA, INFO)

line 4784: Dead code detected: [!(pao_ID_____1 == -1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 4785: Dead code detected: __asm__ ("decl %%gs:%P0": "+m" (rcu_torture_count[pipe_count])); (CFACreationUtils.addEdgeToCFA, INFO)

line 4787: Dead code detected: __asm__ ("addl %1, %%gs:%P0": "+m" (rcu_torture_count[pipe_count]): "ri" (1L)); (CFACreationUtils.addEdgeToCFA, INFO)

line 4790: Dead code detected:  (CFACreationUtils.addEdgeToCFA, INFO)

line 4791: Dead code detected: [!(pao_ID_____1 == 1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 4792: Dead code detected: __asm__ ("incq %%gs:%P0": "+m" (rcu_torture_count[pipe_count])); (CFACreationUtils.addEdgeToCFA, INFO)

line 4794: Dead code detected: [pao_ID_____1 == -1] (CFACreationUtils.addEdgeToCFA, INFO)

line 4794: Dead code detected: [!(pao_ID_____1 == -1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 4795: Dead code detected: __asm__ ("decq %%gs:%P0": "+m" (rcu_torture_count[pipe_count])); (CFACreationUtils.addEdgeToCFA, INFO)

line 4797: Dead code detected: __asm__ ("addq %1, %%gs:%P0": "+m" (rcu_torture_count[pipe_count]): "re" (1L)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (8UL) {
  case 1UL: ;
  if (pao_ID_____1 == 1) {
    __asm__ ("incb %%gs:%P0": "+m" (rcu_torture_count[pipe_count]));
  } else
  if (pao_ID_____1 == -1) {
    __asm__ ("decb %%gs:%P0": "+m" (rcu_torture_count[pipe_count]));
  } else {
    __asm__ ("addb %1, %%gs:%P0": "+m" (rcu_torture_count[pipe_count]): "qi" (1L));
  }
  goto ldv_21450;
  case 2UL: ;
  if (pao_ID_____1 == 1) {
    __asm__ ("incw %%gs:%P0": "+m" (rcu_torture_count[pipe_count]));
  } else
  if (pao_ID_____1 == -1) {
    __asm__ ("decw %%gs:%P0": "+m" (rcu_torture_count[pipe_count]));
  } else {
    __asm__ ("addw %1, %%gs:%P0": "+m" (rcu_torture_count[pipe_count]): "ri" (1L));
  }
  goto ldv_21450;
  case 4UL: ;
  if (pao_ID_____1 == 1) {
    __asm__ ("incl %%gs:%P0": "+m" (rcu_torture_count[pipe_count]));
  } else
  if (pao_ID_____1 == -1) {
    __asm__ ("decl %%gs:%P0": "+m" (rcu_torture_count[pipe_count]));
  } else {
    __asm__ ("addl %1, %%gs:%P0": "+m" (rcu_torture_count[pipe_count]): "ri" (1L));
  }
  goto ldv_21450;
  case 8UL: ;
  if (pao_ID_____1 == 1) {
    __asm__ ("incq %%gs:%P0": "+m" (rcu_torture_count[pipe_count]));
  } else
  if (pao_ID_____1 == -1) {
    __asm__ ("decq %%gs:%P0": "+m" (rcu_torture_count[pipe_count]));
  } else {
    __asm__ ("addq %1, %%gs:%P0": "+m" (rcu_torture_count[pipe_count]): "re" (1L));
  }
  goto ldv_21450;
  default:
  __bad_percpu_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 4809: Dead code detected: [pao_ID_____2 == 1] (CFACreationUtils.addEdgeToCFA, INFO)

line 4809: Dead code detected: [!(pao_ID_____2 == 1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 4810: Dead code detected: __asm__ ("incb %%gs:%P0": "+m" (rcu_torture_count[pipe_count])); (CFACreationUtils.addEdgeToCFA, INFO)

line 4812: Dead code detected: [pao_ID_____2 == -1] (CFACreationUtils.addEdgeToCFA, INFO)

line 4812: Dead code detected: [!(pao_ID_____2 == -1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 4813: Dead code detected: __asm__ ("decb %%gs:%P0": "+m" (rcu_torture_count[pipe_count])); (CFACreationUtils.addEdgeToCFA, INFO)

line 4815: Dead code detected: __asm__ ("addb %1, %%gs:%P0": "+m" (rcu_torture_count[pipe_count]): "qi" (1L)); (CFACreationUtils.addEdgeToCFA, INFO)

line 4819: Dead code detected: [pao_ID_____2 == 1] (CFACreationUtils.addEdgeToCFA, INFO)

line 4819: Dead code detected: [!(pao_ID_____2 == 1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 4820: Dead code detected: __asm__ ("incw %%gs:%P0": "+m" (rcu_torture_count[pipe_count])); (CFACreationUtils.addEdgeToCFA, INFO)

line 4822: Dead code detected: [pao_ID_____2 == -1] (CFACreationUtils.addEdgeToCFA, INFO)

line 4822: Dead code detected: [!(pao_ID_____2 == -1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 4823: Dead code detected: __asm__ ("decw %%gs:%P0": "+m" (rcu_torture_count[pipe_count])); (CFACreationUtils.addEdgeToCFA, INFO)

line 4825: Dead code detected: __asm__ ("addw %1, %%gs:%P0": "+m" (rcu_torture_count[pipe_count]): "ri" (1L)); (CFACreationUtils.addEdgeToCFA, INFO)

line 4829: Dead code detected: [pao_ID_____2 == 1] (CFACreationUtils.addEdgeToCFA, INFO)

line 4829: Dead code detected: [!(pao_ID_____2 == 1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 4830: Dead code detected: __asm__ ("incl %%gs:%P0": "+m" (rcu_torture_count[pipe_count])); (CFACreationUtils.addEdgeToCFA, INFO)

line 4832: Dead code detected: [pao_ID_____2 == -1] (CFACreationUtils.addEdgeToCFA, INFO)

line 4832: Dead code detected: [!(pao_ID_____2 == -1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 4833: Dead code detected: __asm__ ("decl %%gs:%P0": "+m" (rcu_torture_count[pipe_count])); (CFACreationUtils.addEdgeToCFA, INFO)

line 4835: Dead code detected: __asm__ ("addl %1, %%gs:%P0": "+m" (rcu_torture_count[pipe_count]): "ri" (1L)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (8UL) {
  case 1UL: ;
  if (pao_ID_____2 == 1) {
    __asm__ ("incb %%gs:%P0": "+m" (rcu_torture_count[pipe_count]));
  } else
  if (pao_ID_____2 == -1) {
    __asm__ ("decb %%gs:%P0": "+m" (rcu_torture_count[pipe_count]));
  } else {
    __asm__ ("addb %1, %%gs:%P0": "+m" (rcu_torture_count[pipe_count]): "qi" (1L));
  }
  goto ldv_21460;
  case 2UL: ;
  if (pao_ID_____2 == 1) {
    __asm__ ("incw %%gs:%P0": "+m" (rcu_torture_count[pipe_count]));
  } else
  if (pao_ID_____2 == -1) {
    __asm__ ("decw %%gs:%P0": "+m" (rcu_torture_count[pipe_count]));
  } else {
    __asm__ ("addw %1, %%gs:%P0": "+m" (rcu_torture_count[pipe_count]): "ri" (1L));
  }
  goto ldv_21460;
  case 4UL: ;
  if (pao_ID_____2 == 1) {
    __asm__ ("incl %%gs:%P0": "+m" (rcu_torture_count[pipe_count]));
  } else
  if (pao_ID_____2 == -1) {
    __asm__ ("decl %%gs:%P0": "+m" (rcu_torture_count[pipe_count]));
  } else {
    __asm__ ("addl %1, %%gs:%P0": "+m" (rcu_torture_count[pipe_count]): "ri" (1L));
  }
  goto ldv_21460;
  case 8UL: ;
  if (pao_ID_____2 == 1) {
    __asm__ ("incq %%gs:%P0": "+m" (rcu_torture_count[pipe_count]));
  } else
  if (pao_ID_____2 == -1) {
    __asm__ ("decq %%gs:%P0": "+m" (rcu_torture_count[pipe_count]));
  } else {
    __asm__ ("addq %1, %%gs:%P0": "+m" (rcu_torture_count[pipe_count]): "re" (1L));
  }
  goto ldv_21460;
  default:
  __bad_percpu_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (8UL) {
  case 1UL:
  pao_ID__ = 1;
  switch (8UL) {
  case 1UL: ;
  if (pao_ID__ == 1) {
    __asm__ ("incb %%gs:%P0": "+m" (rcu_torture_count[pipe_count]));
  } else
  if (pao_ID__ == -1) {
    __asm__ ("decb %%gs:%P0": "+m" (rcu_torture_count[pipe_count]));
  } else {
    __asm__ ("addb %1, %%gs:%P0": "+m" (rcu_torture_count[pipe_count]): "qi" (1L));
  }
  goto ldv_21429;
  case 2UL: ;
  if (pao_ID__ == 1) {
    __asm__ ("incw %%gs:%P0": "+m" (rcu_torture_count[pipe_count]));
  } else
  if (pao_ID__ == -1) {
    __asm__ ("decw %%gs:%P0": "+m" (rcu_torture_count[pipe_count]));
  } else {
    __asm__ ("addw %1, %%gs:%P0": "+m" (rcu_torture_count[pipe_count]): "ri" (1L));
  }
  goto ldv_21429;
  case 4UL: ;
  if (pao_ID__ == 1) {
    __asm__ ("incl %%gs:%P0": "+m" (rcu_torture_count[pipe_count]));
  } else
  if (pao_ID__ == -1) {
    __asm__ ("decl %%gs:%P0": "+m" (rcu_torture_count[pipe_count]));
  } else {
    __asm__ ("addl %1, %%gs:%P0": "+m" (rcu_torture_count[pipe_count]): "ri" (1L));
  }
  goto ldv_21429;
  case 8UL: ;
  if (pao_ID__ == 1) {
    __asm__ ("incq %%gs:%P0": "+m" (rcu_torture_count[pipe_count]));
  } else
  if (pao_ID__ == -1) {
    __asm__ ("decq %%gs:%P0": "+m" (rcu_torture_count[pipe_count]));
  } else {
    __asm__ ("addq %1, %%gs:%P0": "+m" (rcu_torture_count[pipe_count]): "re" (1L));
  }
  goto ldv_21429;
  default:
  __bad_percpu_size();
  }
  ldv_21429: ;
  goto ldv_21434;
  case 2UL:
  pao_ID_____0 = 1;
  switch (8UL) {
  case 1UL: ;
  if (pao_ID_____0 == 1) {
    __asm__ ("incb %%gs:%P0": "+m" (rcu_torture_count[pipe_count]));
  } else
  if (pao_ID_____0 == -1) {
    __asm__ ("decb %%gs:%P0": "+m" (rcu_torture_count[pipe_count]));
  } else {
    __asm__ ("addb %1, %%gs:%P0": "+m" (rcu_torture_count[pipe_count]): "qi" (1L));
  }
  goto ldv_21440;
  case 2UL: ;
  if (pao_ID_____0 == 1) {
    __asm__ ("incw %%gs:%P0": "+m" (rcu_torture_count[pipe_count]));
  } else
  if (pao_ID_____0 == -1) {
    __asm__ ("decw %%gs:%P0": "+m" (rcu_torture_count[pipe_count]));
  } else {
    __asm__ ("addw %1, %%gs:%P0": "+m" (rcu_torture_count[pipe_count]): "ri" (1L));
  }
  goto ldv_21440;
  case 4UL: ;
  if (pao_ID_____0 == 1) {
    __asm__ ("incl %%gs:%P0": "+m" (rcu_torture_count[pipe_count]));
  } else
  if (pao_ID_____0 == -1) {
    __asm__ ("decl %%gs:%P0": "+m" (rcu_torture_count[pipe_count]));
  } else {
    __asm__ ("addl %1, %%gs:%P0": "+m" (rcu_torture_count[pipe_count]): "ri" (1L));
  }
  goto ldv_21440;
  case 8UL: ;
  if (pao_ID_____0 == 1) {
    __asm__ ("incq %%gs:%P0": "+m" (rcu_torture_count[pipe_count]));
  } else
  if (pao_ID_____0 == -1) {
    __asm__ ("decq %%gs:%P0": "+m" (rcu_torture_count[pipe_count]));
  } else {
    __asm__ ("addq %1, %%gs:%P0": "+m" (rcu_torture_count[pipe_count]): "re" (1L));
  }
  goto ldv_21440;
  default:
  __bad_percpu_size();
  }
  ldv_21440: ;
  goto ldv_21434;
  case 4UL:
  pao_ID_____1 = 1;
  switch (8UL) {
  case 1UL: ;
  if (pao_ID_____1 == 1) {
    __asm__ ("incb %%gs:%P0": "+m" (rcu_torture_count[pipe_count]));
  } else
  if (pao_ID_____1 == -1) {
    __asm__ ("decb %%gs:%P0": "+m" (rcu_torture_count[pipe_count]));
  } else {
    __asm__ ("addb %1, %%gs:%P0": "+m" (rcu_torture_count[pipe_count]): "qi" (1L));
  }
  goto ldv_21450;
  case 2UL: ;
  if (pao_ID_____1 == 1) {
    __asm__ ("incw %%gs:%P0": "+m" (rcu_torture_count[pipe_count]));
  } else
  if (pao_ID_____1 == -1) {
    __asm__ ("decw %%gs:%P0": "+m" (rcu_torture_count[pipe_count]));
  } else {
    __asm__ ("addw %1, %%gs:%P0": "+m" (rcu_torture_count[pipe_count]): "ri" (1L));
  }
  goto ldv_21450;
  case 4UL: ;
  if (pao_ID_____1 == 1) {
    __asm__ ("incl %%gs:%P0": "+m" (rcu_torture_count[pipe_count]));
  } else
  if (pao_ID_____1 == -1) {
    __asm__ ("decl %%gs:%P0": "+m" (rcu_torture_count[pipe_count]));
  } else {
    __asm__ ("addl %1, %%gs:%P0": "+m" (rcu_torture_count[pipe_count]): "ri" (1L));
  }
  goto ldv_21450;
  case 8UL: ;
  if (pao_ID_____1 == 1) {
    __asm__ ("incq %%gs:%P0": "+m" (rcu_torture_count[pipe_count]));
  } else
  if (pao_ID_____1 == -1) {
    __asm__ ("decq %%gs:%P0": "+m" (rcu_torture_count[pipe_count]));
  } else {
    __asm__ ("addq %1, %%gs:%P0": "+m" (rcu_torture_count[pipe_count]): "re" (1L));
  }
  goto ldv_21450;
  default:
  __bad_percpu_size();
  }
  ldv_21450: ;
  goto ldv_21434;
  case 8UL:
  pao_ID_____2 = 1;
  switch (8UL) {
  case 1UL: ;
  if (pao_ID_____2 == 1) {
    __asm__ ("incb %%gs:%P0": "+m" (rcu_torture_count[pipe_count]));
  } else
  if (pao_ID_____2 == -1) {
    __asm__ ("decb %%gs:%P0": "+m" (rcu_torture_count[pipe_count]));
  } else {
    __asm__ ("addb %1, %%gs:%P0": "+m" (rcu_torture_count[pipe_count]): "qi" (1L));
  }
  goto ldv_21460;
  case 2UL: ;
  if (pao_ID_____2 == 1) {
    __asm__ ("incw %%gs:%P0": "+m" (rcu_torture_count[pipe_count]));
  } else
  if (pao_ID_____2 == -1) {
    __asm__ ("decw %%gs:%P0": "+m" (rcu_torture_count[pipe_count]));
  } else {
    __asm__ ("addw %1, %%gs:%P0": "+m" (rcu_torture_count[pipe_count]): "ri" (1L));
  }
  goto ldv_21460;
  case 4UL: ;
  if (pao_ID_____2 == 1) {
    __asm__ ("incl %%gs:%P0": "+m" (rcu_torture_count[pipe_count]));
  } else
  if (pao_ID_____2 == -1) {
    __asm__ ("decl %%gs:%P0": "+m" (rcu_torture_count[pipe_count]));
  } else {
    __asm__ ("addl %1, %%gs:%P0": "+m" (rcu_torture_count[pipe_count]): "ri" (1L));
  }
  goto ldv_21460;
  case 8UL: ;
  if (pao_ID_____2 == 1) {
    __asm__ ("incq %%gs:%P0": "+m" (rcu_torture_count[pipe_count]));
  } else
  if (pao_ID_____2 == -1) {
    __asm__ ("decq %%gs:%P0": "+m" (rcu_torture_count[pipe_count]));
  } else {
    __asm__ ("addq %1, %%gs:%P0": "+m" (rcu_torture_count[pipe_count]): "re" (1L));
  }
  goto ldv_21460;
  default:
  __bad_percpu_size();
  }
  ldv_21460: ;
  goto ldv_21434;
  default:
  __bad_size_call_parameter();
  goto ldv_21434;
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 4868: Dead code detected: pao_ID_____3 = 1; (CFACreationUtils.addEdgeToCFA, INFO)

line 4871: Dead code detected: [pao_ID_____3 == 1] (CFACreationUtils.addEdgeToCFA, INFO)

line 4871: Dead code detected: [!(pao_ID_____3 == 1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 4872: Dead code detected: __asm__ ("incb %%gs:%P0": "+m" (rcu_torture_batch[completed])); (CFACreationUtils.addEdgeToCFA, INFO)

line 4874: Dead code detected: [pao_ID_____3 == -1] (CFACreationUtils.addEdgeToCFA, INFO)

line 4874: Dead code detected: [!(pao_ID_____3 == -1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 4875: Dead code detected: __asm__ ("decb %%gs:%P0": "+m" (rcu_torture_batch[completed])); (CFACreationUtils.addEdgeToCFA, INFO)

line 4877: Dead code detected: __asm__ ("addb %1, %%gs:%P0": "+m" (rcu_torture_batch[completed]): "qi" (1L)); (CFACreationUtils.addEdgeToCFA, INFO)

line 4881: Dead code detected: [pao_ID_____3 == 1] (CFACreationUtils.addEdgeToCFA, INFO)

line 4881: Dead code detected: [!(pao_ID_____3 == 1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 4882: Dead code detected: __asm__ ("incw %%gs:%P0": "+m" (rcu_torture_batch[completed])); (CFACreationUtils.addEdgeToCFA, INFO)

line 4884: Dead code detected: [pao_ID_____3 == -1] (CFACreationUtils.addEdgeToCFA, INFO)

line 4884: Dead code detected: [!(pao_ID_____3 == -1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 4885: Dead code detected: __asm__ ("decw %%gs:%P0": "+m" (rcu_torture_batch[completed])); (CFACreationUtils.addEdgeToCFA, INFO)

line 4887: Dead code detected: __asm__ ("addw %1, %%gs:%P0": "+m" (rcu_torture_batch[completed]): "ri" (1L)); (CFACreationUtils.addEdgeToCFA, INFO)

line 4891: Dead code detected: [pao_ID_____3 == 1] (CFACreationUtils.addEdgeToCFA, INFO)

line 4891: Dead code detected: [!(pao_ID_____3 == 1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 4892: Dead code detected: __asm__ ("incl %%gs:%P0": "+m" (rcu_torture_batch[completed])); (CFACreationUtils.addEdgeToCFA, INFO)

line 4894: Dead code detected: [pao_ID_____3 == -1] (CFACreationUtils.addEdgeToCFA, INFO)

line 4894: Dead code detected: [!(pao_ID_____3 == -1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 4895: Dead code detected: __asm__ ("decl %%gs:%P0": "+m" (rcu_torture_batch[completed])); (CFACreationUtils.addEdgeToCFA, INFO)

line 4897: Dead code detected: __asm__ ("addl %1, %%gs:%P0": "+m" (rcu_torture_batch[completed]): "ri" (1L)); (CFACreationUtils.addEdgeToCFA, INFO)

line 4900: Dead code detected:  (CFACreationUtils.addEdgeToCFA, INFO)

line 4901: Dead code detected: [!(pao_ID_____3 == 1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 4902: Dead code detected: __asm__ ("incq %%gs:%P0": "+m" (rcu_torture_batch[completed])); (CFACreationUtils.addEdgeToCFA, INFO)

line 4904: Dead code detected: [pao_ID_____3 == -1] (CFACreationUtils.addEdgeToCFA, INFO)

line 4904: Dead code detected: [!(pao_ID_____3 == -1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 4905: Dead code detected: __asm__ ("decq %%gs:%P0": "+m" (rcu_torture_batch[completed])); (CFACreationUtils.addEdgeToCFA, INFO)

line 4907: Dead code detected: __asm__ ("addq %1, %%gs:%P0": "+m" (rcu_torture_batch[completed]): "re" (1L)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (8UL) {
  case 1UL: ;
  if (pao_ID_____3 == 1) {
    __asm__ ("incb %%gs:%P0": "+m" (rcu_torture_batch[completed]));
  } else
  if (pao_ID_____3 == -1) {
    __asm__ ("decb %%gs:%P0": "+m" (rcu_torture_batch[completed]));
  } else {
    __asm__ ("addb %1, %%gs:%P0": "+m" (rcu_torture_batch[completed]): "qi" (1L));
  }
  goto ldv_21472;
  case 2UL: ;
  if (pao_ID_____3 == 1) {
    __asm__ ("incw %%gs:%P0": "+m" (rcu_torture_batch[completed]));
  } else
  if (pao_ID_____3 == -1) {
    __asm__ ("decw %%gs:%P0": "+m" (rcu_torture_batch[completed]));
  } else {
    __asm__ ("addw %1, %%gs:%P0": "+m" (rcu_torture_batch[completed]): "ri" (1L));
  }
  goto ldv_21472;
  case 4UL: ;
  if (pao_ID_____3 == 1) {
    __asm__ ("incl %%gs:%P0": "+m" (rcu_torture_batch[completed]));
  } else
  if (pao_ID_____3 == -1) {
    __asm__ ("decl %%gs:%P0": "+m" (rcu_torture_batch[completed]));
  } else {
    __asm__ ("addl %1, %%gs:%P0": "+m" (rcu_torture_batch[completed]): "ri" (1L));
  }
  goto ldv_21472;
  case 8UL: ;
  if (pao_ID_____3 == 1) {
    __asm__ ("incq %%gs:%P0": "+m" (rcu_torture_batch[completed]));
  } else
  if (pao_ID_____3 == -1) {
    __asm__ ("decq %%gs:%P0": "+m" (rcu_torture_batch[completed]));
  } else {
    __asm__ ("addq %1, %%gs:%P0": "+m" (rcu_torture_batch[completed]): "re" (1L));
  }
  goto ldv_21472;
  default:
  __bad_percpu_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 4916: Dead code detected: pao_ID_____4 = 1; (CFACreationUtils.addEdgeToCFA, INFO)

line 4919: Dead code detected: [pao_ID_____4 == 1] (CFACreationUtils.addEdgeToCFA, INFO)

line 4919: Dead code detected: [!(pao_ID_____4 == 1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 4920: Dead code detected: __asm__ ("incb %%gs:%P0": "+m" (rcu_torture_batch[completed])); (CFACreationUtils.addEdgeToCFA, INFO)

line 4922: Dead code detected: [pao_ID_____4 == -1] (CFACreationUtils.addEdgeToCFA, INFO)

line 4922: Dead code detected: [!(pao_ID_____4 == -1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 4923: Dead code detected: __asm__ ("decb %%gs:%P0": "+m" (rcu_torture_batch[completed])); (CFACreationUtils.addEdgeToCFA, INFO)

line 4925: Dead code detected: __asm__ ("addb %1, %%gs:%P0": "+m" (rcu_torture_batch[completed]): "qi" (1L)); (CFACreationUtils.addEdgeToCFA, INFO)

line 4929: Dead code detected: [pao_ID_____4 == 1] (CFACreationUtils.addEdgeToCFA, INFO)

line 4929: Dead code detected: [!(pao_ID_____4 == 1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 4930: Dead code detected: __asm__ ("incw %%gs:%P0": "+m" (rcu_torture_batch[completed])); (CFACreationUtils.addEdgeToCFA, INFO)

line 4932: Dead code detected: [pao_ID_____4 == -1] (CFACreationUtils.addEdgeToCFA, INFO)

line 4932: Dead code detected: [!(pao_ID_____4 == -1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 4933: Dead code detected: __asm__ ("decw %%gs:%P0": "+m" (rcu_torture_batch[completed])); (CFACreationUtils.addEdgeToCFA, INFO)

line 4935: Dead code detected: __asm__ ("addw %1, %%gs:%P0": "+m" (rcu_torture_batch[completed]): "ri" (1L)); (CFACreationUtils.addEdgeToCFA, INFO)

line 4939: Dead code detected: [pao_ID_____4 == 1] (CFACreationUtils.addEdgeToCFA, INFO)

line 4939: Dead code detected: [!(pao_ID_____4 == 1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 4940: Dead code detected: __asm__ ("incl %%gs:%P0": "+m" (rcu_torture_batch[completed])); (CFACreationUtils.addEdgeToCFA, INFO)

line 4942: Dead code detected: [pao_ID_____4 == -1] (CFACreationUtils.addEdgeToCFA, INFO)

line 4942: Dead code detected: [!(pao_ID_____4 == -1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 4943: Dead code detected: __asm__ ("decl %%gs:%P0": "+m" (rcu_torture_batch[completed])); (CFACreationUtils.addEdgeToCFA, INFO)

line 4945: Dead code detected: __asm__ ("addl %1, %%gs:%P0": "+m" (rcu_torture_batch[completed]): "ri" (1L)); (CFACreationUtils.addEdgeToCFA, INFO)

line 4948: Dead code detected:  (CFACreationUtils.addEdgeToCFA, INFO)

line 4949: Dead code detected: [!(pao_ID_____4 == 1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 4950: Dead code detected: __asm__ ("incq %%gs:%P0": "+m" (rcu_torture_batch[completed])); (CFACreationUtils.addEdgeToCFA, INFO)

line 4952: Dead code detected: [pao_ID_____4 == -1] (CFACreationUtils.addEdgeToCFA, INFO)

line 4952: Dead code detected: [!(pao_ID_____4 == -1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 4953: Dead code detected: __asm__ ("decq %%gs:%P0": "+m" (rcu_torture_batch[completed])); (CFACreationUtils.addEdgeToCFA, INFO)

line 4955: Dead code detected: __asm__ ("addq %1, %%gs:%P0": "+m" (rcu_torture_batch[completed]): "re" (1L)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (8UL) {
  case 1UL: ;
  if (pao_ID_____4 == 1) {
    __asm__ ("incb %%gs:%P0": "+m" (rcu_torture_batch[completed]));
  } else
  if (pao_ID_____4 == -1) {
    __asm__ ("decb %%gs:%P0": "+m" (rcu_torture_batch[completed]));
  } else {
    __asm__ ("addb %1, %%gs:%P0": "+m" (rcu_torture_batch[completed]): "qi" (1L));
  }
  goto ldv_21483;
  case 2UL: ;
  if (pao_ID_____4 == 1) {
    __asm__ ("incw %%gs:%P0": "+m" (rcu_torture_batch[completed]));
  } else
  if (pao_ID_____4 == -1) {
    __asm__ ("decw %%gs:%P0": "+m" (rcu_torture_batch[completed]));
  } else {
    __asm__ ("addw %1, %%gs:%P0": "+m" (rcu_torture_batch[completed]): "ri" (1L));
  }
  goto ldv_21483;
  case 4UL: ;
  if (pao_ID_____4 == 1) {
    __asm__ ("incl %%gs:%P0": "+m" (rcu_torture_batch[completed]));
  } else
  if (pao_ID_____4 == -1) {
    __asm__ ("decl %%gs:%P0": "+m" (rcu_torture_batch[completed]));
  } else {
    __asm__ ("addl %1, %%gs:%P0": "+m" (rcu_torture_batch[completed]): "ri" (1L));
  }
  goto ldv_21483;
  case 8UL: ;
  if (pao_ID_____4 == 1) {
    __asm__ ("incq %%gs:%P0": "+m" (rcu_torture_batch[completed]));
  } else
  if (pao_ID_____4 == -1) {
    __asm__ ("decq %%gs:%P0": "+m" (rcu_torture_batch[completed]));
  } else {
    __asm__ ("addq %1, %%gs:%P0": "+m" (rcu_torture_batch[completed]): "re" (1L));
  }
  goto ldv_21483;
  default:
  __bad_percpu_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 4964: Dead code detected: pao_ID_____5 = 1; (CFACreationUtils.addEdgeToCFA, INFO)

line 4967: Dead code detected: [pao_ID_____5 == 1] (CFACreationUtils.addEdgeToCFA, INFO)

line 4967: Dead code detected: [!(pao_ID_____5 == 1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 4968: Dead code detected: __asm__ ("incb %%gs:%P0": "+m" (rcu_torture_batch[completed])); (CFACreationUtils.addEdgeToCFA, INFO)

line 4970: Dead code detected: [pao_ID_____5 == -1] (CFACreationUtils.addEdgeToCFA, INFO)

line 4970: Dead code detected: [!(pao_ID_____5 == -1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 4971: Dead code detected: __asm__ ("decb %%gs:%P0": "+m" (rcu_torture_batch[completed])); (CFACreationUtils.addEdgeToCFA, INFO)

line 4973: Dead code detected: __asm__ ("addb %1, %%gs:%P0": "+m" (rcu_torture_batch[completed]): "qi" (1L)); (CFACreationUtils.addEdgeToCFA, INFO)

line 4977: Dead code detected: [pao_ID_____5 == 1] (CFACreationUtils.addEdgeToCFA, INFO)

line 4977: Dead code detected: [!(pao_ID_____5 == 1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 4978: Dead code detected: __asm__ ("incw %%gs:%P0": "+m" (rcu_torture_batch[completed])); (CFACreationUtils.addEdgeToCFA, INFO)

line 4980: Dead code detected: [pao_ID_____5 == -1] (CFACreationUtils.addEdgeToCFA, INFO)

line 4980: Dead code detected: [!(pao_ID_____5 == -1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 4981: Dead code detected: __asm__ ("decw %%gs:%P0": "+m" (rcu_torture_batch[completed])); (CFACreationUtils.addEdgeToCFA, INFO)

line 4983: Dead code detected: __asm__ ("addw %1, %%gs:%P0": "+m" (rcu_torture_batch[completed]): "ri" (1L)); (CFACreationUtils.addEdgeToCFA, INFO)

line 4987: Dead code detected: [pao_ID_____5 == 1] (CFACreationUtils.addEdgeToCFA, INFO)

line 4987: Dead code detected: [!(pao_ID_____5 == 1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 4988: Dead code detected: __asm__ ("incl %%gs:%P0": "+m" (rcu_torture_batch[completed])); (CFACreationUtils.addEdgeToCFA, INFO)

line 4990: Dead code detected: [pao_ID_____5 == -1] (CFACreationUtils.addEdgeToCFA, INFO)

line 4990: Dead code detected: [!(pao_ID_____5 == -1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 4991: Dead code detected: __asm__ ("decl %%gs:%P0": "+m" (rcu_torture_batch[completed])); (CFACreationUtils.addEdgeToCFA, INFO)

line 4993: Dead code detected: __asm__ ("addl %1, %%gs:%P0": "+m" (rcu_torture_batch[completed]): "ri" (1L)); (CFACreationUtils.addEdgeToCFA, INFO)

line 4996: Dead code detected:  (CFACreationUtils.addEdgeToCFA, INFO)

line 4997: Dead code detected: [!(pao_ID_____5 == 1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 4998: Dead code detected: __asm__ ("incq %%gs:%P0": "+m" (rcu_torture_batch[completed])); (CFACreationUtils.addEdgeToCFA, INFO)

line 5000: Dead code detected: [pao_ID_____5 == -1] (CFACreationUtils.addEdgeToCFA, INFO)

line 5000: Dead code detected: [!(pao_ID_____5 == -1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 5001: Dead code detected: __asm__ ("decq %%gs:%P0": "+m" (rcu_torture_batch[completed])); (CFACreationUtils.addEdgeToCFA, INFO)

line 5003: Dead code detected: __asm__ ("addq %1, %%gs:%P0": "+m" (rcu_torture_batch[completed]): "re" (1L)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (8UL) {
  case 1UL: ;
  if (pao_ID_____5 == 1) {
    __asm__ ("incb %%gs:%P0": "+m" (rcu_torture_batch[completed]));
  } else
  if (pao_ID_____5 == -1) {
    __asm__ ("decb %%gs:%P0": "+m" (rcu_torture_batch[completed]));
  } else {
    __asm__ ("addb %1, %%gs:%P0": "+m" (rcu_torture_batch[completed]): "qi" (1L));
  }
  goto ldv_21493;
  case 2UL: ;
  if (pao_ID_____5 == 1) {
    __asm__ ("incw %%gs:%P0": "+m" (rcu_torture_batch[completed]));
  } else
  if (pao_ID_____5 == -1) {
    __asm__ ("decw %%gs:%P0": "+m" (rcu_torture_batch[completed]));
  } else {
    __asm__ ("addw %1, %%gs:%P0": "+m" (rcu_torture_batch[completed]): "ri" (1L));
  }
  goto ldv_21493;
  case 4UL: ;
  if (pao_ID_____5 == 1) {
    __asm__ ("incl %%gs:%P0": "+m" (rcu_torture_batch[completed]));
  } else
  if (pao_ID_____5 == -1) {
    __asm__ ("decl %%gs:%P0": "+m" (rcu_torture_batch[completed]));
  } else {
    __asm__ ("addl %1, %%gs:%P0": "+m" (rcu_torture_batch[completed]): "ri" (1L));
  }
  goto ldv_21493;
  case 8UL: ;
  if (pao_ID_____5 == 1) {
    __asm__ ("incq %%gs:%P0": "+m" (rcu_torture_batch[completed]));
  } else
  if (pao_ID_____5 == -1) {
    __asm__ ("decq %%gs:%P0": "+m" (rcu_torture_batch[completed]));
  } else {
    __asm__ ("addq %1, %%gs:%P0": "+m" (rcu_torture_batch[completed]): "re" (1L));
  }
  goto ldv_21493;
  default:
  __bad_percpu_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 5015: Dead code detected: [pao_ID_____6 == 1] (CFACreationUtils.addEdgeToCFA, INFO)

line 5015: Dead code detected: [!(pao_ID_____6 == 1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 5016: Dead code detected: __asm__ ("incb %%gs:%P0": "+m" (rcu_torture_batch[completed])); (CFACreationUtils.addEdgeToCFA, INFO)

line 5018: Dead code detected: [pao_ID_____6 == -1] (CFACreationUtils.addEdgeToCFA, INFO)

line 5018: Dead code detected: [!(pao_ID_____6 == -1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 5019: Dead code detected: __asm__ ("decb %%gs:%P0": "+m" (rcu_torture_batch[completed])); (CFACreationUtils.addEdgeToCFA, INFO)

line 5021: Dead code detected: __asm__ ("addb %1, %%gs:%P0": "+m" (rcu_torture_batch[completed]): "qi" (1L)); (CFACreationUtils.addEdgeToCFA, INFO)

line 5025: Dead code detected: [pao_ID_____6 == 1] (CFACreationUtils.addEdgeToCFA, INFO)

line 5025: Dead code detected: [!(pao_ID_____6 == 1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 5026: Dead code detected: __asm__ ("incw %%gs:%P0": "+m" (rcu_torture_batch[completed])); (CFACreationUtils.addEdgeToCFA, INFO)

line 5028: Dead code detected: [pao_ID_____6 == -1] (CFACreationUtils.addEdgeToCFA, INFO)

line 5028: Dead code detected: [!(pao_ID_____6 == -1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 5029: Dead code detected: __asm__ ("decw %%gs:%P0": "+m" (rcu_torture_batch[completed])); (CFACreationUtils.addEdgeToCFA, INFO)

line 5031: Dead code detected: __asm__ ("addw %1, %%gs:%P0": "+m" (rcu_torture_batch[completed]): "ri" (1L)); (CFACreationUtils.addEdgeToCFA, INFO)

line 5035: Dead code detected: [pao_ID_____6 == 1] (CFACreationUtils.addEdgeToCFA, INFO)

line 5035: Dead code detected: [!(pao_ID_____6 == 1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 5036: Dead code detected: __asm__ ("incl %%gs:%P0": "+m" (rcu_torture_batch[completed])); (CFACreationUtils.addEdgeToCFA, INFO)

line 5038: Dead code detected: [pao_ID_____6 == -1] (CFACreationUtils.addEdgeToCFA, INFO)

line 5038: Dead code detected: [!(pao_ID_____6 == -1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 5039: Dead code detected: __asm__ ("decl %%gs:%P0": "+m" (rcu_torture_batch[completed])); (CFACreationUtils.addEdgeToCFA, INFO)

line 5041: Dead code detected: __asm__ ("addl %1, %%gs:%P0": "+m" (rcu_torture_batch[completed]): "ri" (1L)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (8UL) {
  case 1UL: ;
  if (pao_ID_____6 == 1) {
    __asm__ ("incb %%gs:%P0": "+m" (rcu_torture_batch[completed]));
  } else
  if (pao_ID_____6 == -1) {
    __asm__ ("decb %%gs:%P0": "+m" (rcu_torture_batch[completed]));
  } else {
    __asm__ ("addb %1, %%gs:%P0": "+m" (rcu_torture_batch[completed]): "qi" (1L));
  }
  goto ldv_21503;
  case 2UL: ;
  if (pao_ID_____6 == 1) {
    __asm__ ("incw %%gs:%P0": "+m" (rcu_torture_batch[completed]));
  } else
  if (pao_ID_____6 == -1) {
    __asm__ ("decw %%gs:%P0": "+m" (rcu_torture_batch[completed]));
  } else {
    __asm__ ("addw %1, %%gs:%P0": "+m" (rcu_torture_batch[completed]): "ri" (1L));
  }
  goto ldv_21503;
  case 4UL: ;
  if (pao_ID_____6 == 1) {
    __asm__ ("incl %%gs:%P0": "+m" (rcu_torture_batch[completed]));
  } else
  if (pao_ID_____6 == -1) {
    __asm__ ("decl %%gs:%P0": "+m" (rcu_torture_batch[completed]));
  } else {
    __asm__ ("addl %1, %%gs:%P0": "+m" (rcu_torture_batch[completed]): "ri" (1L));
  }
  goto ldv_21503;
  case 8UL: ;
  if (pao_ID_____6 == 1) {
    __asm__ ("incq %%gs:%P0": "+m" (rcu_torture_batch[completed]));
  } else
  if (pao_ID_____6 == -1) {
    __asm__ ("decq %%gs:%P0": "+m" (rcu_torture_batch[completed]));
  } else {
    __asm__ ("addq %1, %%gs:%P0": "+m" (rcu_torture_batch[completed]): "re" (1L));
  }
  goto ldv_21503;
  default:
  __bad_percpu_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (8UL) {
  case 1UL:
  pao_ID_____3 = 1;
  switch (8UL) {
  case 1UL: ;
  if (pao_ID_____3 == 1) {
    __asm__ ("incb %%gs:%P0": "+m" (rcu_torture_batch[completed]));
  } else
  if (pao_ID_____3 == -1) {
    __asm__ ("decb %%gs:%P0": "+m" (rcu_torture_batch[completed]));
  } else {
    __asm__ ("addb %1, %%gs:%P0": "+m" (rcu_torture_batch[completed]): "qi" (1L));
  }
  goto ldv_21472;
  case 2UL: ;
  if (pao_ID_____3 == 1) {
    __asm__ ("incw %%gs:%P0": "+m" (rcu_torture_batch[completed]));
  } else
  if (pao_ID_____3 == -1) {
    __asm__ ("decw %%gs:%P0": "+m" (rcu_torture_batch[completed]));
  } else {
    __asm__ ("addw %1, %%gs:%P0": "+m" (rcu_torture_batch[completed]): "ri" (1L));
  }
  goto ldv_21472;
  case 4UL: ;
  if (pao_ID_____3 == 1) {
    __asm__ ("incl %%gs:%P0": "+m" (rcu_torture_batch[completed]));
  } else
  if (pao_ID_____3 == -1) {
    __asm__ ("decl %%gs:%P0": "+m" (rcu_torture_batch[completed]));
  } else {
    __asm__ ("addl %1, %%gs:%P0": "+m" (rcu_torture_batch[completed]): "ri" (1L));
  }
  goto ldv_21472;
  case 8UL: ;
  if (pao_ID_____3 == 1) {
    __asm__ ("incq %%gs:%P0": "+m" (rcu_torture_batch[completed]));
  } else
  if (pao_ID_____3 == -1) {
    __asm__ ("decq %%gs:%P0": "+m" (rcu_torture_batch[completed]));
  } else {
    __asm__ ("addq %1, %%gs:%P0": "+m" (rcu_torture_batch[completed]): "re" (1L));
  }
  goto ldv_21472;
  default:
  __bad_percpu_size();
  }
  ldv_21472: ;
  goto ldv_21477;
  case 2UL:
  pao_ID_____4 = 1;
  switch (8UL) {
  case 1UL: ;
  if (pao_ID_____4 == 1) {
    __asm__ ("incb %%gs:%P0": "+m" (rcu_torture_batch[completed]));
  } else
  if (pao_ID_____4 == -1) {
    __asm__ ("decb %%gs:%P0": "+m" (rcu_torture_batch[completed]));
  } else {
    __asm__ ("addb %1, %%gs:%P0": "+m" (rcu_torture_batch[completed]): "qi" (1L));
  }
  goto ldv_21483;
  case 2UL: ;
  if (pao_ID_____4 == 1) {
    __asm__ ("incw %%gs:%P0": "+m" (rcu_torture_batch[completed]));
  } else
  if (pao_ID_____4 == -1) {
    __asm__ ("decw %%gs:%P0": "+m" (rcu_torture_batch[completed]));
  } else {
    __asm__ ("addw %1, %%gs:%P0": "+m" (rcu_torture_batch[completed]): "ri" (1L));
  }
  goto ldv_21483;
  case 4UL: ;
  if (pao_ID_____4 == 1) {
    __asm__ ("incl %%gs:%P0": "+m" (rcu_torture_batch[completed]));
  } else
  if (pao_ID_____4 == -1) {
    __asm__ ("decl %%gs:%P0": "+m" (rcu_torture_batch[completed]));
  } else {
    __asm__ ("addl %1, %%gs:%P0": "+m" (rcu_torture_batch[completed]): "ri" (1L));
  }
  goto ldv_21483;
  case 8UL: ;
  if (pao_ID_____4 == 1) {
    __asm__ ("incq %%gs:%P0": "+m" (rcu_torture_batch[completed]));
  } else
  if (pao_ID_____4 == -1) {
    __asm__ ("decq %%gs:%P0": "+m" (rcu_torture_batch[completed]));
  } else {
    __asm__ ("addq %1, %%gs:%P0": "+m" (rcu_torture_batch[completed]): "re" (1L));
  }
  goto ldv_21483;
  default:
  __bad_percpu_size();
  }
  ldv_21483: ;
  goto ldv_21477;
  case 4UL:
  pao_ID_____5 = 1;
  switch (8UL) {
  case 1UL: ;
  if (pao_ID_____5 == 1) {
    __asm__ ("incb %%gs:%P0": "+m" (rcu_torture_batch[completed]));
  } else
  if (pao_ID_____5 == -1) {
    __asm__ ("decb %%gs:%P0": "+m" (rcu_torture_batch[completed]));
  } else {
    __asm__ ("addb %1, %%gs:%P0": "+m" (rcu_torture_batch[completed]): "qi" (1L));
  }
  goto ldv_21493;
  case 2UL: ;
  if (pao_ID_____5 == 1) {
    __asm__ ("incw %%gs:%P0": "+m" (rcu_torture_batch[completed]));
  } else
  if (pao_ID_____5 == -1) {
    __asm__ ("decw %%gs:%P0": "+m" (rcu_torture_batch[completed]));
  } else {
    __asm__ ("addw %1, %%gs:%P0": "+m" (rcu_torture_batch[completed]): "ri" (1L));
  }
  goto ldv_21493;
  case 4UL: ;
  if (pao_ID_____5 == 1) {
    __asm__ ("incl %%gs:%P0": "+m" (rcu_torture_batch[completed]));
  } else
  if (pao_ID_____5 == -1) {
    __asm__ ("decl %%gs:%P0": "+m" (rcu_torture_batch[completed]));
  } else {
    __asm__ ("addl %1, %%gs:%P0": "+m" (rcu_torture_batch[completed]): "ri" (1L));
  }
  goto ldv_21493;
  case 8UL: ;
  if (pao_ID_____5 == 1) {
    __asm__ ("incq %%gs:%P0": "+m" (rcu_torture_batch[completed]));
  } else
  if (pao_ID_____5 == -1) {
    __asm__ ("decq %%gs:%P0": "+m" (rcu_torture_batch[completed]));
  } else {
    __asm__ ("addq %1, %%gs:%P0": "+m" (rcu_torture_batch[completed]): "re" (1L));
  }
  goto ldv_21493;
  default:
  __bad_percpu_size();
  }
  ldv_21493: ;
  goto ldv_21477;
  case 8UL:
  pao_ID_____6 = 1;
  switch (8UL) {
  case 1UL: ;
  if (pao_ID_____6 == 1) {
    __asm__ ("incb %%gs:%P0": "+m" (rcu_torture_batch[completed]));
  } else
  if (pao_ID_____6 == -1) {
    __asm__ ("decb %%gs:%P0": "+m" (rcu_torture_batch[completed]));
  } else {
    __asm__ ("addb %1, %%gs:%P0": "+m" (rcu_torture_batch[completed]): "qi" (1L));
  }
  goto ldv_21503;
  case 2UL: ;
  if (pao_ID_____6 == 1) {
    __asm__ ("incw %%gs:%P0": "+m" (rcu_torture_batch[completed]));
  } else
  if (pao_ID_____6 == -1) {
    __asm__ ("decw %%gs:%P0": "+m" (rcu_torture_batch[completed]));
  } else {
    __asm__ ("addw %1, %%gs:%P0": "+m" (rcu_torture_batch[completed]): "ri" (1L));
  }
  goto ldv_21503;
  case 4UL: ;
  if (pao_ID_____6 == 1) {
    __asm__ ("incl %%gs:%P0": "+m" (rcu_torture_batch[completed]));
  } else
  if (pao_ID_____6 == -1) {
    __asm__ ("decl %%gs:%P0": "+m" (rcu_torture_batch[completed]));
  } else {
    __asm__ ("addl %1, %%gs:%P0": "+m" (rcu_torture_batch[completed]): "ri" (1L));
  }
  goto ldv_21503;
  case 8UL: ;
  if (pao_ID_____6 == 1) {
    __asm__ ("incq %%gs:%P0": "+m" (rcu_torture_batch[completed]));
  } else
  if (pao_ID_____6 == -1) {
    __asm__ ("decq %%gs:%P0": "+m" (rcu_torture_batch[completed]));
  } else {
    __asm__ ("addq %1, %%gs:%P0": "+m" (rcu_torture_batch[completed]): "re" (1L));
  }
  goto ldv_21503;
  default:
  __bad_percpu_size();
  }
  ldv_21503: ;
  goto ldv_21477;
  default:
  __bad_size_call_parameter();
  goto ldv_21477;
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 7801: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 7845: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_handler_precall to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 6864: Ignoring function call through function pointer *(cur_ops->init): (*(cur_ops->init))(); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function synchronize_sched_expedited to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function synchronize_srcu_expedited to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function synchronize_sched to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function synchronize_srcu to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function srcu_barrier to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __bitmap_weight to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __list_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function find_next_bit to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function kthread_create_on_node to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function wake_up_process to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rcutorture_record_test_transition to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function unregister_reboot_notifier to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function kthread_stop to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_cpumask_var to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function unregister_cpu_notifier to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 6727: Ignoring function call through function pointer *(cur_ops->cb_barrier): (*(cur_ops->cb_barrier))(); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function schedule_timeout_uninterruptible to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 6572: Ignoring function call through function pointer *(cur_ops->cb_barrier): (*(cur_ops->cb_barrier))(); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function alloc_cpumask_var to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function register_cpu_notifier to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function register_reboot_notifier to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __cpu_to_node to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function kthread_bind to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 3160: Ignoring function call through function pointer *(cur_ops->sync): (*(cur_ops->sync))(); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function local_clock to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function call_rcu_sched to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function srcu_batches_completed to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function debug_lockdep_rcu_enabled to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rcu_is_cpu_idle to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function lockdep_rcu_suspicious to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function lock_release to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __srcu_read_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function schedule_timeout_interruptible to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __srcu_read_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function lock_acquire to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function trace_hardirqs_off to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function trace_hardirqs_on to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function call_srcu to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rcu_batches_completed_bh to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function local_bh_enable to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function local_bh_disable to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function call_rcu_bh to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rcu_batches_completed to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function set_user_nice to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function init_rcu_head_on_stack to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sched_setscheduler to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function kthread_should_stop to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function get_seconds to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function init_timer_on_stack_key to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            4891 (2% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            3663 (75%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         1228 (25%)
  Times precision was empty:       2911 (60%)
  Times precision was {false}:     349 (7%)
  Times result was cached:         1475 (30%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      156 (3%)
  Times result was 'false':        1262 (26%)
Number of strengthen sat checks:   0
Number of coverage checks:         31473
  BDD entailment checks:           933
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       321
Number of predicates discovered:          9
Number of abstraction locations:          19
Max number of predicates per location:    6
Avg number of predicates per location:    3
Total predicates per abstraction:         3661
Max number of predicates per abstraction: 6
Avg number of predicates per abstraction: 7.25
Number of irrelevant predicates:          1497 (41%)
Number of preds handled by boolean abs:   406 (11%)
  Total number of models for allsat:      150
  Max number of models for allsat:        2
  Avg number of models for allsat:        0.96

Time for post operator:                  4.184s
  Time for path formula creation:        4.076s
Time for strengthen operator:            0.181s
Time for prec operator:                 10.659s
  Time for abstraction:                 10.419s (Max:     0.450s, Count: 4891)
    Boolean abstraction:                 4.408s
    Solving time:                        6.439s (Max:     0.410s)
    Model enumeration time:              0.231s
    Time for BDD construction:           0.035s (Max:     0.008s)
Time for merge operator:                 0.904s
Time for coverage check:                 0.004s
  Time for BDD entailment checks:        0.004s
Total time for SMT solver (w/o itp):     6.670s

Number of path formula cache hits:   205757 (91%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     2.477s

Total number of created targets for pointer analysis: 6891
   Number of created targets for uf: *(struct_rcu_torture_ops)* is 14
   Number of created targets for uf: *signed_int is 173
   Number of created targets for uf: *(struct_list_head)* is 53
   Number of created targets for uf: *signed_long_int is 321
   Number of created targets for uf: *(struct_task_struct)* is 201
   Number of created targets for uf: *unsigned_long_int is 661


Number of BDD nodes:                               243
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         473 (count: 6904, min: 0, max: 70, avg: 0.07)
Time for BDD node cleanup:                             0.005s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.424s
Automaton transfers with branching:                0
Automaton transfer successors:                       209873 (count: 209873, min: 1, max: 1, avg: 1.00) [1 x 209873]

CPA algorithm statistics
------------------------
Number of iterations:            143208
Max size of waitlist:            131
Average size of waitlist:        66
Number of computed successors:   162534
Max successors for one state:    2
Number of times merged:          15270
Number of times stopped:         16152
Number of times breaked:         53

Total time for CPA algorithm:        20.110s (Max:     1.860s)
  Time for choose from waitlist:      0.102s
  Time for precision adjustment:     11.556s
  Time for transfer relation:         6.442s
  Time for merge operator:            1.144s
  Time for stop operator:             0.216s
  Time for adding to reached set:     0.260s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   53
Avg. length of target path (in blocks):                 373 (count: 53, min: 1, max: 14, avg: 7.04)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   5.313s
  Counterexample analysis:                             4.851s (Max:     0.214s, Calls: 53)
    Refinement sat check:                              4.445s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.010s
  Precision update:                                    0.009s
  ARG update:                                          0.383s

Length of refined path (in blocks):                     360 (count: 53, min: 1, max: 14, avg: 6.79)
Number of affected states:                              197 (count: 53, min: 0, max: 13, avg: 3.72)
Length (states) of path with itp 'true':                110 (count: 53, min: 0, max: 6, avg: 2.08)
Length (states) of path with itp non-trivial itp:       197 (count: 53, min: 0, max: 13, avg: 3.72)
Length (states) of path with itp 'false':                 7 (count: 53, min: 0, max: 1, avg: 0.13)
Different non-trivial interpolants along paths:           0 (count: 53, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:             145 (count: 53, min: 0, max: 12, avg: 2.74)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                53
Number of successful refinements:     53
Number of failed refinements:         0
Max. size of reached set before ref.: 10823
Max. size of reached set after ref.:  2259
Avg. size of reached set before ref.: 3131.91
Avg. size of reached set after ref.:  493.17

Total time for CEGAR algorithm:      25.669s
Time for refinements:                 5.542s
Average time for refinement:          0.104s
Max time for refinement:              0.246s

Code Coverage
-----------------------------
  Function coverage:      0.538
  Visited lines:          1952
  Total lines:            3709
  Line coverage:          0.526
  Visited conditions:     546
  Total conditions:       1514
  Condition coverage:     0.361

CPAchecker general statistics
-----------------------------
Number of program locations:     5630
Number of CFA edges:             6796
Number of relevant variables:    664
Number of functions:             182
Number of loops:                 62
Size of reached set:             5268
  Number of reached locations:   1552 (28%)
    Avg states per location:     3
    Max states per location:     54 (at node N5324)
  Number of reached functions:   98 (54%)
  Number of partitions:          5268
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0
  Size of final wait list        68

Time for analysis setup:          4.164s
  Time for loading CPAs:          0.660s
  Time for loading parser:        0.500s
  Time for CFA construction:      2.935s
    Time for parsing file(s):     0.676s
    Time for AST to CFA:          0.987s
    Time for CFA sanity check:    0.307s
    Time for post-processing:     0.899s
      Time for var class.:        0.361s
Time for Analysis:               25.670s
CPU time for analysis:           25.670s
Total time for CPAchecker:       29.838s
Total CPU time for CPAchecker:   29.830s
Time for statistics:              0.149s

Time for Garbage Collector:       0.774s (in 92 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 97MB (    92 MiB) max;     54MB (    51 MiB) avg;    103MB (    98 MiB) peak
Used non-heap memory:             40MB (    38 MiB) max;     36MB (    34 MiB) avg;     40MB (    38 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        42MB (    40 MiB) max;     38MB (    36 MiB) avg
Total process virtual memory:   8132MB (  7755 MiB) max;   8122MB (  7746 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
