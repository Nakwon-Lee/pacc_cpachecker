scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-drivers--staging--bcm--bcm_wimax.ko-main.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_7rzw203y/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 6851: Dead code detected: __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& kernel_stack)); (CFACreationUtils.addEdgeToCFA, INFO)

line 6854: Dead code detected: __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack)); (CFACreationUtils.addEdgeToCFA, INFO)

line 6857: Dead code detected: __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (8UL) {
  case 1:
  __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& kernel_stack));
  goto ldv_6189;
  case 2:
  __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack));
  goto ldv_6189;
  case 4:
  __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack));
  goto ldv_6189;
  case 8:
  __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack));
  goto ldv_6189;
  default:
  __bad_percpu_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 7577: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 8026: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 8072: Dead code detected: __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

line 8075: Dead code detected: __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

line 8078: Dead code detected: __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (8UL) {
  case 1:
  __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& current_task));
  goto ldv_2861;
  case 2:
  __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_2861;
  case 4:
  __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_2861;
  case 8:
  __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_2861;
  default:
  __bad_percpu_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 9424: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 9986: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 10297: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 10651: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 10957: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 14464: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 15143: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 16519: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 17135: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 17753: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 18685: Dead code detected: __ms = 3UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 18754: Dead code detected: __ms___0 = 3UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 19146: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 19498: Dead code detected: return (0); (CFACreationUtils.addEdgeToCFA, INFO)

line 19586: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 20136: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 21081: Dereferencing of non-pointer type PUCHAR  in expression *pucBuffer (ASTConverter.convert, WARNING)

line 21141: Dereferencing of non-pointer type PUCHAR  in expression *pucBuffer (ASTConverter.convert, WARNING)

line 23037: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 23179: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 23225: Dead code detected: __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& kernel_stack)); (CFACreationUtils.addEdgeToCFA, INFO)

line 23228: Dead code detected: __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack)); (CFACreationUtils.addEdgeToCFA, INFO)

line 23231: Dead code detected: __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (8UL) {
  case 1:
  __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& kernel_stack));
  goto ldv_6158;
  case 2:
  __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack));
  goto ldv_6158;
  case 4:
  __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack));
  goto ldv_6158;
  case 8:
  __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack));
  goto ldv_6158;
  default:
  __bad_percpu_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 24768: Dead code detected: __asm__ volatile ("call __get_user_1": "=a" (__ret_gu), "=d" (__val_gu): "0" ((unsigned long *)arg)); (CFACreationUtils.addEdgeToCFA, INFO)

line 24771: Dead code detected: __asm__ volatile ("call __get_user_2": "=a" (__ret_gu), "=d" (__val_gu): "0" ((unsigned long *)arg)); (CFACreationUtils.addEdgeToCFA, INFO)

line 24774: Dead code detected: __asm__ volatile ("call __get_user_4": "=a" (__ret_gu), "=d" (__val_gu): "0" ((unsigned long *)arg)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (8UL) {
  case 1:
  __asm__ volatile ("call __get_user_1": "=a" (__ret_gu), "=d" (__val_gu): "0" ((unsigned long *)arg));
  goto ldv_46984;
  case 2:
  __asm__ volatile ("call __get_user_2": "=a" (__ret_gu), "=d" (__val_gu): "0" ((unsigned long *)arg));
  goto ldv_46984;
  case 4:
  __asm__ volatile ("call __get_user_4": "=a" (__ret_gu), "=d" (__val_gu): "0" ((unsigned long *)arg));
  goto ldv_46984;
  case 8:
  __asm__ volatile ("call __get_user_8": "=a" (__ret_gu), "=d" (__val_gu): "0" ((unsigned long *)arg));
  goto ldv_46984;
  default:
  __asm__ volatile ("call __get_user_X": "=a" (__ret_gu), "=d" (__val_gu): "0" ((unsigned long *)arg));
  goto ldv_46984;
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 24796: Dead code detected: __asm__ volatile ("call __get_user_1": "=a" (__ret_gu___0), "=d" (__val_gu___0): "0" ((unsigned long *)arg)); (CFACreationUtils.addEdgeToCFA, INFO)

line 24799: Dead code detected: __asm__ volatile ("call __get_user_2": "=a" (__ret_gu___0), "=d" (__val_gu___0): "0" ((unsigned long *)arg)); (CFACreationUtils.addEdgeToCFA, INFO)

line 24802: Dead code detected: __asm__ volatile ("call __get_user_4": "=a" (__ret_gu___0), "=d" (__val_gu___0): "0" ((unsigned long *)arg)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (8UL) {
  case 1:
  __asm__ volatile ("call __get_user_1": "=a" (__ret_gu___0), "=d" (__val_gu___0): "0" ((unsigned long *)arg));
  goto ldv_46994;
  case 2:
  __asm__ volatile ("call __get_user_2": "=a" (__ret_gu___0), "=d" (__val_gu___0): "0" ((unsigned long *)arg));
  goto ldv_46994;
  case 4:
  __asm__ volatile ("call __get_user_4": "=a" (__ret_gu___0), "=d" (__val_gu___0): "0" ((unsigned long *)arg));
  goto ldv_46994;
  case 8:
  __asm__ volatile ("call __get_user_8": "=a" (__ret_gu___0), "=d" (__val_gu___0): "0" ((unsigned long *)arg));
  goto ldv_46994;
  default:
  __asm__ volatile ("call __get_user_X": "=a" (__ret_gu___0), "=d" (__val_gu___0): "0" ((unsigned long *)arg));
  goto ldv_46994;
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 24844: Dead code detected: __asm__ volatile ("call __get_user_1": "=a" (__ret_gu___1), "=d" (__val_gu___1): "0" ((unsigned long *)arg)); (CFACreationUtils.addEdgeToCFA, INFO)

line 24847: Dead code detected: __asm__ volatile ("call __get_user_2": "=a" (__ret_gu___1), "=d" (__val_gu___1): "0" ((unsigned long *)arg)); (CFACreationUtils.addEdgeToCFA, INFO)

line 24850: Dead code detected: __asm__ volatile ("call __get_user_4": "=a" (__ret_gu___1), "=d" (__val_gu___1): "0" ((unsigned long *)arg)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (8UL) {
  case 1:
  __asm__ volatile ("call __get_user_1": "=a" (__ret_gu___1), "=d" (__val_gu___1): "0" ((unsigned long *)arg));
  goto ldv_47007;
  case 2:
  __asm__ volatile ("call __get_user_2": "=a" (__ret_gu___1), "=d" (__val_gu___1): "0" ((unsigned long *)arg));
  goto ldv_47007;
  case 4:
  __asm__ volatile ("call __get_user_4": "=a" (__ret_gu___1), "=d" (__val_gu___1): "0" ((unsigned long *)arg));
  goto ldv_47007;
  case 8:
  __asm__ volatile ("call __get_user_8": "=a" (__ret_gu___1), "=d" (__val_gu___1): "0" ((unsigned long *)arg));
  goto ldv_47007;
  default:
  __asm__ volatile ("call __get_user_X": "=a" (__ret_gu___1), "=d" (__val_gu___1): "0" ((unsigned long *)arg));
  goto ldv_47007;
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 26392: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 26740: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 28619: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 29910: Dead code detected: Adapter->LEDInfo.led_thread_running = 0; (CFACreationUtils.addEdgeToCFA, INFO)

line 30034: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 30447: Dead code detected: __ms = 3UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 30482: Dead code detected: __ms___0 = 3UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 30511: Dead code detected: __ms___1 = 3UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 31834: Dead code detected: __ms = 3UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 31871: Dead code detected: __ms___0 = 3UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 35811: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 35937: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function strcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snprintf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_bcmNetDevOps_ndo_uninit_3 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_bcmNetDevOps_ndo_init_3 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function eth_mac_addr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __wake_up to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function consume_skb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netif_carrier_on to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function eth_change_mtu to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netif_carrier_off to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function eth_validate_addr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __class_create to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function class_destroy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_deregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 6900: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((const void *)to, 0); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function __builtin_object_size to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function might_fault to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_fmt to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _copy_from_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _copy_to_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function down to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function up to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

lines 22391-22392: Ignoring function call through function pointer *(Adapter->interface_rdm): tmp = (*(Adapter->interface_rdm))(Adapter->pvInterfaceAdapter, uiAddress, (PVOID )pucBuff, (int)sSize); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function usb_control_msg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function print_hex_dump to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memdup_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function do_gettimeofday to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

lines 22401-22402: Ignoring function call through function pointer *(Adapter->interface_wrm): iRetVal = (*(Adapter->interface_wrm))(Adapter->pvInterfaceAdapter, uiAddress, (PVOID )pucBuff, (int)sSize); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function down_trylock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_kill_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock_bh to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_bh to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 26342: Destroying the void* pointer bcm_char_ioctl::temp_buff___1 produces garbage or the memory pointed by it is unused: bcm_char_ioctl(bcm_fops_group2, ldvarg3, ldvarg2); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function nonseekable_open to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function no_llseek to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_usbbcm_driver_reset_resume_4 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netif_device_detach to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function alloc_etherdev_mqs to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            12676 (1% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            12667 (100%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         9 (0%)
  Times precision was empty:       11641 (92%)
  Times precision was {false}:     474 (4%)
  Times result was cached:         557 (4%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      4 (0%)
  Times result was 'false':        6 (0%)
Number of strengthen sat checks:   0
Number of coverage checks:         489428
  BDD entailment checks:           5718
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       4460
Number of predicates discovered:          4
Number of abstraction locations:          2
Max number of predicates per location:    3
Avg number of predicates per location:    2
Total predicates per abstraction:         3086
Max number of predicates per abstraction: 3
Avg number of predicates per abstraction: 6.46
Number of irrelevant predicates:          3077 (100%)
Number of preds handled by boolean abs:   9 (0%)
  Total number of models for allsat:      4
  Max number of models for allsat:        1
  Avg number of models for allsat:        1.00

Time for post operator:                405.341s
  Time for path formula creation:      404.810s
Time for strengthen operator:            1.102s
Time for prec operator:                423.374s
  Time for abstraction:                422.241s (Max:   167.717s, Count: 12676)
    Boolean abstraction:                49.152s
    Solving time:                      398.476s (Max:   167.593s)
    Model enumeration time:             14.307s
    Time for BDD construction:           0.005s (Max:     0.005s)
Time for merge operator:                28.793s
Time for coverage check:                 0.063s
  Time for BDD entailment checks:        0.019s
Total time for SMT solver (w/o itp):   412.783s

Number of path formula cache hits:   21556 (2%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:   398.816s

Total number of created targets for pointer analysis: 4436978
   Number of created targets for uf: *unsigned_short_int is 4
   Number of created targets for uf: *(struct_bcm_mini_adapter)* is 2
   Number of created targets for uf: *unsigned_char is 16845
   Number of created targets for uf: *enum__E_NWPKT_ETHFRAME_TYPE is 4
   Number of created targets for uf: *enum__E_NWPKT_IPFRAME_TYPE is 4
   Number of created targets for uf: *unsigned_int is 11960
   Number of created targets for uf: *char is 3
   Number of created targets for uf: *enum_bcm_flash2x_section_val is 2
   Number of created targets for uf: *unsigned_long_int is 2
   Number of created targets for uf: *(struct_bcm_tarang_data)* is 2


Number of BDD nodes:                               205
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                          32 (count: 19773, min: 0, max: 25, avg: 0.00)
Time for BDD node cleanup:                             0.008s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  1.963s
  Time for transition matches:                         1.241s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.000s
Automaton transfers with branching:                0
Automaton transfer successors:                      1291306 (count: 1291306, min: 1, max: 1, avg: 1.00) [1 x 1291306]

CPA algorithm statistics
------------------------
Number of iterations:            874023
Max size of waitlist:            4584
Average size of waitlist:        2258
Number of computed successors:   1125185
Max successors for one state:    2
Number of times merged:          241855
Number of times stopped:         246550
Number of times breaked:         3

Total time for CPA algorithm:       888.825s (Max:   885.599s)
  Time for choose from waitlist:      0.494s
  Time for precision adjustment:    429.565s
  Time for transfer relation:       420.395s
  Time for merge operator:           32.107s
  Time for stop operator:             1.248s
  Time for adding to reached set:     2.348s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   3
Avg. length of target path (in blocks):                   6 (count: 3, min: 2, max: 2, avg: 2.00)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.330s
  Counterexample analysis:                             0.291s (Max:     0.119s, Calls: 3)
    Refinement sat check:                              0.265s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.005s
  Precision update:                                    0.002s
  ARG update:                                          0.029s

Length of refined path (in blocks):                       6 (count: 3, min: 2, max: 2, avg: 2.00)
Number of affected states:                                3 (count: 3, min: 1, max: 1, avg: 1.00)
Length (states) of path with itp 'true':                  0 (count: 3, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:         3 (count: 3, min: 1, max: 1, avg: 1.00)
Length (states) of path with itp 'false':                 0 (count: 3, min: 0, max: 0, avg: 0.00)
Different non-trivial interpolants along paths:           0 (count: 3, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:               0 (count: 3, min: 0, max: 0, avg: 0.00)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                3
Number of successful refinements:     3
Number of failed refinements:         0
Max. size of reached set before ref.: 949
Max. size of reached set after ref.:  8
Avg. size of reached set before ref.: 943.00
Avg. size of reached set after ref.:  8.00

Total time for CEGAR algorithm:     889.190s
Time for refinements:                 0.365s
Average time for refinement:          0.121s
Max time for refinement:              0.136s

Code Coverage
-----------------------------
  Function coverage:      0.290
  Visited lines:          6088
  Total lines:            17058
  Line coverage:          0.357
  Visited conditions:     3518
  Total conditions:       13086
  Condition coverage:     0.269

CPAchecker general statistics
-----------------------------
Number of program locations:     27811
Number of CFA edges:             35544
Number of relevant variables:    3465
Number of functions:             544
Number of loops:                 194
Size of reached set:             875823
  Number of reached locations:   5747 (21%)
    Avg states per location:     152
    Max states per location:     7526 (at node N750)
  Number of reached functions:   158 (29%)
  Number of partitions:          875822
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N2162 (before line 9237), Function main called from node N2150, stack depth 1 [4a8b4dd0], stack [main]])
  Number of target states:       0
  Size of final wait list        4576

Time for analysis setup:         11.129s
  Time for loading CPAs:          1.032s
  Time for loading parser:        0.477s
  Time for CFA construction:      9.488s
    Time for parsing file(s):     1.140s
    Time for AST to CFA:          3.194s
    Time for CFA sanity check:    1.232s
    Time for post-processing:     3.803s
      Time for var class.:        1.718s
Time for Analysis:              889.190s
CPU time for analysis:          889.180s
Total time for CPAchecker:      900.327s
Total CPU time for CPAchecker:  900.280s
Time for statistics:              5.363s

Time for Garbage Collector:      41.136s (in 644 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:               1838MB (  1753 MiB) max;    660MB (   629 MiB) avg;   1882MB (  1794 MiB) peak
Used non-heap memory:             47MB (    45 MiB) max;     39MB (    38 MiB) avg;     47MB (    45 MiB) peak
Allocated heap memory:          2314MB (  2207 MiB) max;    983MB (   938 MiB) avg
Allocated non-heap memory:        48MB (    46 MiB) max;     48MB (    46 MiB) avg
Total process virtual memory:   8817MB (  8409 MiB) max;   8666MB (  8265 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
