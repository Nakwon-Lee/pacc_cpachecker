scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-drivers--ata--pata_legacy.ko-main.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run__wqeiwlb/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 5599: Dead code detected: tmp___5 = arch_irqs_disabled_flags(flags); (CFACreationUtils.addEdgeToCFA, INFO)

line 5600: Dead code detected: [!(tmp___5 != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 5601: Dead code detected: arch_local_irq_restore(flags); (CFACreationUtils.addEdgeToCFA, INFO)

line 5604: Dead code detected: trace_hardirqs_on(); (CFACreationUtils.addEdgeToCFA, INFO)

line 6548: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ata_dev_pair to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ioread16 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iowrite8 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ata_timing_compute to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ata_timing_merge to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ata_pio_need_iordy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ioread32_rep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iowrite32_rep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iowrite32 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ioread8 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ata_dev_next to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function trace_hardirqs_off to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function trace_hardirqs_on to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ata_sff_data_xfer_noirq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_get_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __request_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __release_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_register_full to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __devm_request_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function devm_ioport_map to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 5710: Ignoring function call through function pointer *(controller->setup): tmp___4 = (*(controller->setup))(pdev, probe, ld); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function ata_host_alloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ata_sff_std_ports to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ata_port_desc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ata_host_activate to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function async_synchronize_full to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ata_host_detach to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ata_dev_printk to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            86914 (5% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            86294 (99%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         620 (1%)
  Times precision was empty:       43398 (50%)
  Times precision was {false}:     979 (1%)
  Times result was cached:         40697 (47%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      1840 (2%)
  Times result was 'false':        7981 (9%)
Number of strengthen sat checks:   0
Number of coverage checks:         267100
  BDD entailment checks:           47460
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       199
Number of predicates discovered:          15
Number of abstraction locations:          12
Max number of predicates per location:    11
Avg number of predicates per location:    4
Total predicates per abstraction:         220268
Max number of predicates per abstraction: 11
Avg number of predicates per abstraction: 78.14
Number of irrelevant predicates:          94982 (43%)
Number of preds handled by boolean abs:   6359 (3%)
  Total number of models for allsat:      2112
  Max number of models for allsat:        32
  Avg number of models for allsat:        1.15

Time for post operator:                 14.515s
  Time for path formula creation:       13.897s
Time for strengthen operator:            1.316s
Time for prec operator:                 52.793s
  Time for abstraction:                 50.905s (Max:     0.595s, Count: 86914)
    Boolean abstraction:                18.244s
    Solving time:                       17.345s (Max:     0.148s)
    Model enumeration time:              6.568s
    Time for BDD construction:           0.112s (Max:     0.011s)
Time for merge operator:                 2.414s
Time for coverage check:                 0.087s
  Time for BDD entailment checks:        0.071s
Total time for SMT solver (w/o itp):    23.913s

Number of path formula cache hits:   1888495 (91%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     7.518s

Total number of created targets for pointer analysis: 46535
   Number of created targets for uf: *signed_int is 113
   Number of created targets for uf: *unsigned_char is 919
   Number of created targets for uf: *unsigned_int is 714
   Number of created targets for uf: *enum_controller is 373
   Number of created targets for uf: *unsigned_long_int is 3121


Number of BDD nodes:                               2704
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        4150 (count: 107639, min: 0, max: 89, avg: 0.04)
Time for BDD node cleanup:                             0.028s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  1.973s
  Time for transition matches:                         1.121s
  Time for transition assertions:                      0.001s
  Time for transition actions:                         0.003s
Automaton transfers with branching:                0
Automaton transfer successors:                      1901966 (count: 1901966, min: 1, max: 1, avg: 1.00) [1 x 1901966]

CPA algorithm statistics
------------------------
Number of iterations:            1102677
Max size of waitlist:            36
Average size of waitlist:        15
Number of computed successors:   1264785
Max successors for one state:    2
Number of times merged:          109820
Number of times stopped:         153553
Number of times breaked:         41

Total time for CPA algorithm:        95.767s (Max:     9.162s)
  Time for choose from waitlist:      0.393s
  Time for precision adjustment:     58.957s
  Time for transfer relation:        27.779s
  Time for merge operator:            3.579s
  Time for stop operator:             1.137s
  Time for adding to reached set:     1.305s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   41
Avg. length of target path (in blocks):                 522 (count: 41, min: 3, max: 22, avg: 12.73)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   3.462s
  Counterexample analysis:                             1.404s (Max:     0.067s, Calls: 41)
    Refinement sat check:                              1.176s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.001s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.021s
  Precision update:                                    0.028s
  ARG update:                                          1.982s

Length of refined path (in blocks):                     429 (count: 41, min: 2, max: 21, avg: 10.46)
Number of affected states:                              384 (count: 41, min: 1, max: 20, avg: 9.37)
Length (states) of path with itp 'true':                  4 (count: 41, min: 0, max: 1, avg: 0.10)
Length (states) of path with itp non-trivial itp:       384 (count: 41, min: 1, max: 20, avg: 9.37)
Length (states) of path with itp 'false':                20 (count: 41, min: 0, max: 1, avg: 0.49)
Different non-trivial interpolants along paths:           0 (count: 41, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:             343 (count: 41, min: 0, max: 19, avg: 8.37)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                41
Number of successful refinements:     41
Number of failed refinements:         0
Max. size of reached set before ref.: 64647
Max. size of reached set after ref.:  1667
Avg. size of reached set before ref.: 25454.39
Avg. size of reached set after ref.:  169.83

Total time for CEGAR algorithm:      99.860s
Time for refinements:                 4.071s
Average time for refinement:          0.099s
Max time for refinement:              0.284s

Code Coverage
-----------------------------
  Function coverage:      0.625
  Visited lines:          2118
  Total lines:            2343
  Line coverage:          0.904
  Visited conditions:     446
  Total conditions:       540
  Condition coverage:     0.826

CPAchecker general statistics
-----------------------------
Number of program locations:     3054
Number of CFA edges:             3435
Number of relevant variables:    372
Number of functions:             80
Number of loops:                 14
Size of reached set:             66585
  Number of reached locations:   1184 (39%)
    Avg states per location:     56
    Max states per location:     1437 (at node N2087)
  Number of reached functions:   50 (63%)
  Number of partitions:          66570
    Avg size of partitions:      1
    Max size of partitions:      8 (with key [N1687 (before line 6186), Function main called from node N1660, stack depth 1 [6818d900], stack [main]])
  Number of target states:       0

Time for analysis setup:          3.758s
  Time for loading CPAs:          0.705s
  Time for loading parser:        0.491s
  Time for CFA construction:      2.458s
    Time for parsing file(s):     0.690s
    Time for AST to CFA:          0.764s
    Time for CFA sanity check:    0.183s
    Time for post-processing:     0.695s
      Time for var class.:        0.293s
Time for Analysis:               99.860s
CPU time for analysis:           99.840s
Time for analyzing result:        0.048s
Total time for CPAchecker:      103.622s
Total CPU time for CPAchecker:  103.590s
Time for statistics:              0.728s

Time for Garbage Collector:       9.576s (in 483 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                278MB (   265 MiB) max;    111MB (   106 MiB) avg;    288MB (   274 MiB) peak
Used non-heap memory:             39MB (    37 MiB) max;     38MB (    36 MiB) avg;     40MB (    38 MiB) peak
Allocated heap memory:           287MB (   273 MiB) max;    175MB (   167 MiB) avg
Allocated non-heap memory:        42MB (    40 MiB) max;     41MB (    39 MiB) avg
Total process virtual memory:   8202MB (  7822 MiB) max;   8153MB (  7775 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
