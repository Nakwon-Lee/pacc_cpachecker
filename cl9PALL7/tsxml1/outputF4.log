scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-drivers--ata--pata_legacy.ko-main.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_gt6y6zea/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 5599: Dead code detected: tmp___5 = arch_irqs_disabled_flags(flags); (CFACreationUtils.addEdgeToCFA, INFO)

line 5600: Dead code detected: [!(tmp___5 != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 5601: Dead code detected: arch_local_irq_restore(flags); (CFACreationUtils.addEdgeToCFA, INFO)

line 5604: Dead code detected: trace_hardirqs_on(); (CFACreationUtils.addEdgeToCFA, INFO)

line 6548: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ata_dev_pair to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ioread16 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iowrite8 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ata_timing_compute to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ata_timing_merge to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ata_pio_need_iordy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ioread32_rep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iowrite32_rep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iowrite32 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ioread8 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ata_dev_next to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function trace_hardirqs_off to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function trace_hardirqs_on to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ata_sff_data_xfer_noirq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ata_dev_printk to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ata_host_detach to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_get_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __request_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __release_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_register_full to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __devm_request_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function devm_ioport_map to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 5710: Ignoring function call through function pointer *(controller->setup): tmp___4 = (*(controller->setup))(pdev, probe, ld); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function ata_host_alloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ata_sff_std_ports to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ata_port_desc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ata_host_activate to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function async_synchronize_full to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            52011 (4% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            51479 (99%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         532 (1%)
  Times precision was empty:       32551 (63%)
  Times precision was {false}:     890 (2%)
  Times result was cached:         16955 (33%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      1615 (3%)
  Times result was 'false':        5249 (10%)
Number of strengthen sat checks:   0
Number of coverage checks:         152737
  BDD entailment checks:           27809
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       199
Number of predicates discovered:          16
Number of abstraction locations:          12
Max number of predicates per location:    12
Avg number of predicates per location:    5
Total predicates per abstraction:         101228
Max number of predicates per abstraction: 12
Avg number of predicates per abstraction: 40.41
Number of irrelevant predicates:          44938 (44%)
Number of preds handled by boolean abs:   6805 (7%)
  Total number of models for allsat:      1882
  Max number of models for allsat:        32
  Avg number of models for allsat:        1.17

Time for post operator:                  9.533s
  Time for path formula creation:        9.209s
Time for strengthen operator:            0.804s
Time for prec operator:                 33.951s
  Time for abstraction:                 33.129s (Max:     0.444s, Count: 52011)
    Boolean abstraction:                14.693s
    Solving time:                       12.768s (Max:     0.116s)
    Model enumeration time:              6.855s
    Time for BDD construction:           0.069s (Max:     0.008s)
Time for merge operator:                 1.562s
Time for coverage check:                 0.065s
  Time for BDD entailment checks:        0.057s
Total time for SMT solver (w/o itp):    19.623s

Number of path formula cache hits:   1135267 (88%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     5.943s

Total number of created targets for pointer analysis: 28108
   Number of created targets for uf: *signed_int is 113
   Number of created targets for uf: *unsigned_char is 919
   Number of created targets for uf: *unsigned_int is 691
   Number of created targets for uf: *enum_controller is 361
   Number of created targets for uf: *unsigned_long_int is 1652


Number of BDD nodes:                               4427
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        4075 (count: 75371, min: 0, max: 127, avg: 0.05)
Time for BDD node cleanup:                             0.026s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  1.251s
  Time for transition matches:                         0.647s
  Time for transition assertions:                      0.001s
  Time for transition actions:                         0.003s
Automaton transfers with branching:                0
Automaton transfer successors:                      1192536 (count: 1192536, min: 1, max: 1, avg: 1.00) [1 x 1192536]

CPA algorithm statistics
------------------------
Number of iterations:            692608
Max size of waitlist:            36
Average size of waitlist:        14
Number of computed successors:   785807
Max successors for one state:    2
Number of times merged:          62464
Number of times stopped:         87451
Number of times breaked:         49

Total time for CPA algorithm:        60.924s (Max:     5.650s)
  Time for choose from waitlist:      0.207s
  Time for precision adjustment:     37.854s
  Time for transfer relation:        17.863s
  Time for merge operator:            2.135s
  Time for stop operator:             0.684s
  Time for adding to reached set:     0.781s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   49
Avg. length of target path (in blocks):                 551 (count: 49, min: 3, max: 23, avg: 11.24)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   2.425s
  Counterexample analysis:                             1.346s (Max:     0.069s, Calls: 49)
    Refinement sat check:                              1.148s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.002s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.014s
  Precision update:                                    0.012s
  ARG update:                                          1.006s

Length of refined path (in blocks):                     481 (count: 49, min: 2, max: 20, avg: 9.82)
Number of affected states:                              428 (count: 49, min: 1, max: 19, avg: 8.73)
Length (states) of path with itp 'true':                  4 (count: 49, min: 0, max: 1, avg: 0.08)
Length (states) of path with itp non-trivial itp:       428 (count: 49, min: 1, max: 19, avg: 8.73)
Length (states) of path with itp 'false':                28 (count: 49, min: 0, max: 1, avg: 0.57)
Different non-trivial interpolants along paths:           1 (count: 49, min: 0, max: 1, avg: 0.02)
Equal non-trivial interpolants along paths:             378 (count: 49, min: 0, max: 18, avg: 7.71)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                49
Number of successful refinements:     49
Number of failed refinements:         0
Max. size of reached set before ref.: 26781
Max. size of reached set after ref.:  1834
Avg. size of reached set before ref.: 13272.39
Avg. size of reached set after ref.:  157.06

Total time for CEGAR algorithm:      63.732s
Time for refinements:                 2.800s
Average time for refinement:          0.057s
Max time for refinement:              0.157s

Code Coverage
-----------------------------
  Function coverage:      0.625
  Visited lines:          2116
  Total lines:            2343
  Line coverage:          0.903
  Visited conditions:     446
  Total conditions:       540
  Condition coverage:     0.826

CPAchecker general statistics
-----------------------------
Number of program locations:     3054
Number of CFA edges:             3435
Number of relevant variables:    372
Number of functions:             80
Number of loops:                 14
Size of reached set:             50457
  Number of reached locations:   1175 (38%)
    Avg states per location:     42
    Max states per location:     1437 (at node N2087)
  Number of reached functions:   50 (63%)
  Number of partitions:          50442
    Avg size of partitions:      1
    Max size of partitions:      8 (with key [N1687 (before line 6186), Function main called from node N1660, stack depth 1 [6818d900], stack [main]])
  Number of target states:       0

Time for analysis setup:          3.434s
  Time for loading CPAs:          0.598s
  Time for loading parser:        0.439s
  Time for CFA construction:      2.313s
    Time for parsing file(s):     0.636s
    Time for AST to CFA:          0.747s
    Time for CFA sanity check:    0.150s
    Time for post-processing:     0.653s
      Time for var class.:        0.283s
Time for Analysis:               63.733s
CPU time for analysis:           63.730s
Time for analyzing result:        0.037s
Total time for CPAchecker:       67.170s
Total CPU time for CPAchecker:   67.160s
Time for statistics:              0.515s

Time for Garbage Collector:       4.774s (in 350 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                154MB (   146 MiB) max;     84MB (    80 MiB) avg;    173MB (   165 MiB) peak
Used non-heap memory:             39MB (    37 MiB) max;     37MB (    35 MiB) avg;     39MB (    37 MiB) peak
Allocated heap memory:           208MB (   199 MiB) max;    136MB (   129 MiB) avg
Allocated non-heap memory:        41MB (    39 MiB) max;     39MB (    37 MiB) avg
Total process virtual memory:   8134MB (  7757 MiB) max;   8129MB (  7752 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
