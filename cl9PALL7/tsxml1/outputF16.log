scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-drivers--ata--pata_legacy.ko-main.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_0gqq1n26/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 5599: Dead code detected: tmp___5 = arch_irqs_disabled_flags(flags); (CFACreationUtils.addEdgeToCFA, INFO)

line 5600: Dead code detected: [!(tmp___5 != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 5601: Dead code detected: arch_local_irq_restore(flags); (CFACreationUtils.addEdgeToCFA, INFO)

line 5604: Dead code detected: trace_hardirqs_on(); (CFACreationUtils.addEdgeToCFA, INFO)

line 6548: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ata_dev_pair to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ioread16 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iowrite8 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ata_timing_compute to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ata_timing_merge to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ata_pio_need_iordy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ioread32_rep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iowrite32_rep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iowrite32 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ioread8 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ata_dev_next to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function trace_hardirqs_off to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function trace_hardirqs_on to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ata_sff_data_xfer_noirq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ata_dev_printk to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ata_host_detach to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_get_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_register_full to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __devm_request_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function devm_ioport_map to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 5710: Ignoring function call through function pointer *(controller->setup): tmp___4 = (*(controller->setup))(pdev, probe, ld); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function ata_host_alloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ata_sff_std_ports to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ata_port_desc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ata_host_activate to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function async_synchronize_full to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __request_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __release_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            24917 (3% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            24510 (98%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         407 (2%)
  Times precision was empty:       13874 (56%)
  Times precision was {false}:     547 (2%)
  Times result was cached:         8116 (33%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      2380 (10%)
  Times result was 'false':        2048 (8%)
Number of strengthen sat checks:   0
Number of coverage checks:         129284
  BDD entailment checks:           16066
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       199
Number of predicates discovered:          12
Number of abstraction locations:          12
Max number of predicates per location:    10
Avg number of predicates per location:    5
Total predicates per abstraction:         50217
Max number of predicates per abstraction: 10
Avg number of predicates per abstraction: 17.16
Number of irrelevant predicates:          14354 (29%)
Number of preds handled by boolean abs:   9073 (18%)
  Total number of models for allsat:      3455
  Max number of models for allsat:        32
  Avg number of models for allsat:        1.45

Time for post operator:                 12.165s
  Time for path formula creation:       11.834s
Time for strengthen operator:            0.783s
Time for prec operator:                 40.701s
  Time for abstraction:                 40.050s (Max:     0.491s, Count: 24917)
    Boolean abstraction:                29.567s
    Solving time:                       18.599s (Max:     0.124s)
    Model enumeration time:             11.415s
    Time for BDD construction:           0.103s (Max:     0.009s)
Time for merge operator:                 2.650s
Time for coverage check:                 0.049s
  Time for BDD entailment checks:        0.034s
Total time for SMT solver (w/o itp):    30.014s

Number of path formula cache hits:   648442 (71%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     9.182s

Total number of created targets for pointer analysis: 49800
   Number of created targets for uf: *signed_int is 196
   Number of created targets for uf: *unsigned_char is 433
   Number of created targets for uf: *unsigned_int is 9247
   Number of created targets for uf: *enum_controller is 505
   Number of created targets for uf: *unsigned_long_int is 5643


Number of BDD nodes:                               2001
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        5296 (count: 47636, min: 0, max: 150, avg: 0.11)
Time for BDD node cleanup:                             0.006s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  1.058s
  Time for transition matches:                         0.582s
  Time for transition assertions:                      0.002s
  Time for transition actions:                         0.003s
Automaton transfers with branching:                0
Automaton transfer successors:                       857325 (count: 857325, min: 1, max: 1, avg: 1.00) [1 x 857325]

CPA algorithm statistics
------------------------
Number of iterations:            496484
Max size of waitlist:            253
Average size of waitlist:        102
Number of computed successors:   568986
Max successors for one state:    2
Number of times merged:          56609
Number of times stopped:         67405
Number of times breaked:         32

Total time for CPA algorithm:        68.170s (Max:    25.919s)
  Time for choose from waitlist:      0.197s
  Time for precision adjustment:     43.119s
  Time for transfer relation:        19.169s
  Time for merge operator:            3.307s
  Time for stop operator:             0.515s
  Time for adding to reached set:     0.598s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   32
Avg. length of target path (in blocks):                 541 (count: 32, min: 3, max: 39, avg: 16.91)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   1.601s
  Counterexample analysis:                             0.899s (Max:     0.095s, Calls: 32)
    Refinement sat check:                              0.738s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.001s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.009s
  Precision update:                                    0.024s
  ARG update:                                          0.636s

Length of refined path (in blocks):                     502 (count: 32, min: 2, max: 37, avg: 15.69)
Number of affected states:                              469 (count: 32, min: 1, max: 36, avg: 14.66)
Length (states) of path with itp 'true':                  1 (count: 32, min: 0, max: 1, avg: 0.03)
Length (states) of path with itp non-trivial itp:       469 (count: 32, min: 1, max: 36, avg: 14.66)
Length (states) of path with itp 'false':                14 (count: 32, min: 0, max: 1, avg: 0.44)
Different non-trivial interpolants along paths:           0 (count: 32, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:             437 (count: 32, min: 0, max: 35, avg: 13.66)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                32
Number of successful refinements:     32
Number of failed refinements:         0
Max. size of reached set before ref.: 25829
Max. size of reached set after ref.:  1371
Avg. size of reached set before ref.: 10616.56
Avg. size of reached set after ref.:  50.59

Total time for CEGAR algorithm:      70.066s
Time for refinements:                 1.894s
Average time for refinement:          0.059s
Max time for refinement:              0.191s

Code Coverage
-----------------------------
  Function coverage:      0.625
  Visited lines:          2118
  Total lines:            2343
  Line coverage:          0.904
  Visited conditions:     446
  Total conditions:       540
  Condition coverage:     0.826

CPAchecker general statistics
-----------------------------
Number of program locations:     3054
Number of CFA edges:             3435
Number of relevant variables:    372
Number of functions:             80
Number of loops:                 14
Size of reached set:             161423
  Number of reached locations:   1184 (39%)
    Avg states per location:     136
    Max states per location:     3294 (at node N2087)
  Number of reached functions:   50 (63%)
  Number of partitions:          161382
    Avg size of partitions:      1
    Max size of partitions:      14 (with key [N1687 (before line 6186), Function main called from node N1660, stack depth 1 [29c2c826], stack [main]])
  Number of target states:       0

Time for analysis setup:          3.335s
  Time for loading CPAs:          0.614s
  Time for loading parser:        0.422s
  Time for CFA construction:      2.222s
    Time for parsing file(s):     0.627s
    Time for AST to CFA:          0.727s
    Time for CFA sanity check:    0.140s
    Time for post-processing:     0.583s
      Time for var class.:        0.273s
Time for Analysis:               70.066s
CPU time for analysis:           70.070s
Time for analyzing result:        0.108s
Total time for CPAchecker:       73.405s
Total CPU time for CPAchecker:   73.390s
Time for statistics:              1.102s

Time for Garbage Collector:       4.472s (in 210 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                302MB (   288 MiB) max;    109MB (   104 MiB) avg;    317MB (   302 MiB) peak
Used non-heap memory:             41MB (    40 MiB) max;     38MB (    36 MiB) avg;     42MB (    40 MiB) peak
Allocated heap memory:           394MB (   376 MiB) max;    175MB (   167 MiB) avg
Allocated non-heap memory:        44MB (    41 MiB) max;     42MB (    40 MiB) avg
Total process virtual memory:   8139MB (  7762 MiB) max;   8081MB (  7707 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
