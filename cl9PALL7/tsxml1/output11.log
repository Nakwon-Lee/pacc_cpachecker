scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-drivers--ata--pata_legacy.ko-main.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_evrqw5i5/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 5599: Dead code detected: tmp___5 = arch_irqs_disabled_flags(flags); (CFACreationUtils.addEdgeToCFA, INFO)

line 5600: Dead code detected: [!(tmp___5 != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 5601: Dead code detected: arch_local_irq_restore(flags); (CFACreationUtils.addEdgeToCFA, INFO)

line 5604: Dead code detected: trace_hardirqs_on(); (CFACreationUtils.addEdgeToCFA, INFO)

line 6548: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ata_dev_pair to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ioread16 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iowrite8 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ata_timing_compute to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ata_timing_merge to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ata_pio_need_iordy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ioread32_rep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iowrite32_rep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iowrite32 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ioread8 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ata_dev_next to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function trace_hardirqs_off to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function trace_hardirqs_on to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ata_sff_data_xfer_noirq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ata_host_detach to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ata_dev_printk to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_get_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __request_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __release_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_register_full to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __devm_request_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function devm_ioport_map to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 5710: Ignoring function call through function pointer *(controller->setup): tmp___4 = (*(controller->setup))(pdev, probe, ld); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function ata_host_alloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ata_sff_std_ports to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ata_port_desc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ata_host_activate to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function async_synchronize_full to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            17074 (5% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            16974 (99%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         100 (1%)
  Times precision was empty:       10502 (62%)
  Times precision was {false}:     450 (3%)
  Times result was cached:         5475 (32%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      647 (4%)
  Times result was 'false':        541 (3%)
Number of strengthen sat checks:   0
Number of coverage checks:         58453
  BDD entailment checks:           9845
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       199
Number of predicates discovered:          10
Number of abstraction locations:          9
Max number of predicates per location:    9
Avg number of predicates per location:    4
Total predicates per abstraction:         25688
Max number of predicates per abstraction: 9
Avg number of predicates per abstraction: 23.42
Number of irrelevant predicates:          20958 (82%)
Number of preds handled by boolean abs:   2068 (8%)
  Total number of models for allsat:      449
  Max number of models for allsat:        1
  Avg number of models for allsat:        0.69

Time for post operator:                  4.693s
  Time for path formula creation:        4.482s
Time for strengthen operator:            0.370s
Time for prec operator:                 12.080s
  Time for abstraction:                 11.636s (Max:     0.155s, Count: 17074)
    Boolean abstraction:                 3.781s
    Solving time:                        6.624s (Max:     0.126s)
    Model enumeration time:              0.208s
    Time for BDD construction:           0.052s (Max:     0.009s)
Time for merge operator:                 0.746s
Time for coverage check:                 0.029s
  Time for BDD entailment checks:        0.023s
Total time for SMT solver (w/o itp):     6.832s

Number of path formula cache hits:   382670 (92%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     2.950s

Total number of created targets for pointer analysis: 10028
   Number of created targets for uf: *signed_int is 15
   Number of created targets for uf: *unsigned_char is 55
   Number of created targets for uf: *unsigned_int is 277
   Number of created targets for uf: *enum_controller is 145
   Number of created targets for uf: *unsigned_long_int is 417


Number of BDD nodes:                               279
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        1385 (count: 26685, min: 0, max: 96, avg: 0.05)
Time for BDD node cleanup:                             0.005s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.544s
  Time for transition matches:                         0.283s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.000s
Automaton transfers with branching:                0
Automaton transfer successors:                       379085 (count: 379085, min: 1, max: 1, avg: 1.00) [1 x 379085]

CPA algorithm statistics
------------------------
Number of iterations:            229972
Max size of waitlist:            64
Average size of waitlist:        23
Number of computed successors:   264436
Max successors for one state:    2
Number of times merged:          24304
Number of times stopped:         33702
Number of times breaked:         21

Total time for CPA algorithm:        24.686s (Max:     4.782s)
  Time for choose from waitlist:      0.123s
  Time for precision adjustment:     13.574s
  Time for transfer relation:         8.475s
  Time for merge operator:            1.148s
  Time for stop operator:             0.284s
  Time for adding to reached set:     0.323s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   21
Avg. length of target path (in blocks):                 170 (count: 21, min: 3, max: 14, avg: 8.10)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   1.302s
  Counterexample analysis:                             0.561s (Max:     0.068s, Calls: 21)
    Refinement sat check:                              0.453s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.006s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.011s
  Precision update:                                    0.011s
  ARG update:                                          0.688s

Length of refined path (in blocks):                     148 (count: 21, min: 3, max: 12, avg: 7.05)
Number of affected states:                              123 (count: 21, min: 1, max: 11, avg: 5.86)
Length (states) of path with itp 'true':                  4 (count: 21, min: 0, max: 1, avg: 0.19)
Length (states) of path with itp non-trivial itp:       123 (count: 21, min: 1, max: 11, avg: 5.86)
Length (states) of path with itp 'false':                10 (count: 21, min: 0, max: 1, avg: 0.48)
Different non-trivial interpolants along paths:           1 (count: 21, min: 0, max: 1, avg: 0.05)
Equal non-trivial interpolants along paths:             101 (count: 21, min: 0, max: 10, avg: 4.81)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                21
Number of successful refinements:     21
Number of failed refinements:         0
Max. size of reached set before ref.: 26781
Max. size of reached set after ref.:  1834
Avg. size of reached set before ref.: 11013.86
Avg. size of reached set after ref.:  355.81

Total time for CEGAR algorithm:      26.227s
Time for refinements:                 1.524s
Average time for refinement:          0.072s
Max time for refinement:              0.175s

Code Coverage
-----------------------------
  Function coverage:      0.625
  Visited lines:          2116
  Total lines:            2343
  Line coverage:          0.903
  Visited conditions:     446
  Total conditions:       540
  Condition coverage:     0.826

CPAchecker general statistics
-----------------------------
Number of program locations:     3054
Number of CFA edges:             3435
Number of relevant variables:    372
Number of functions:             80
Number of loops:                 14
Size of reached set:             6374
  Number of reached locations:   1175 (38%)
    Avg states per location:     5
    Max states per location:     181 (at node N2087)
  Number of reached functions:   50 (63%)
  Number of partitions:          6371
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N1687 (before line 6186), Function main called from node N1660, stack depth 1 [6818d900], stack [main]])
  Number of target states:       0
  Size of final wait list        15

Time for analysis setup:          3.596s
  Time for loading CPAs:          0.683s
  Time for loading parser:        0.482s
  Time for CFA construction:      2.330s
    Time for parsing file(s):     0.686s
    Time for AST to CFA:          0.738s
    Time for CFA sanity check:    0.155s
    Time for post-processing:     0.592s
      Time for var class.:        0.288s
Time for Analysis:               26.227s
CPU time for analysis:           26.230s
Total time for CPAchecker:       29.825s
Total CPU time for CPAchecker:   29.810s
Time for statistics:              0.134s

Time for Garbage Collector:       1.369s (in 118 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                124MB (   119 MiB) max;     66MB (    63 MiB) avg;    128MB (   122 MiB) peak
Used non-heap memory:             39MB (    37 MiB) max;     35MB (    34 MiB) avg;     39MB (    37 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        40MB (    39 MiB) max;     37MB (    35 MiB) avg
Total process virtual memory:   8133MB (  7757 MiB) max;   8124MB (  7748 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
