scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.4-simple/43_1a_cilled_true-unreach-call_ok_nondet_linux-43_1a-drivers--usb--serial--ssu100_false-termination.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_jplx1b6q/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 3596: Dead code detected: Goto: case_1 (CFACreationUtils.addEdgeToCFA, INFO)

line 3599: Dead code detected: Goto: case_2 (CFACreationUtils.addEdgeToCFA, INFO)

line 3602: Dead code detected: Goto: case_4 (CFACreationUtils.addEdgeToCFA, INFO)

line 3608: Dead code detected: Goto: switch_default (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_default is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_4 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_1 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_2 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

line 5559: Dead code detected: return (0); (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tty_get_baud_rate to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_control_msg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function prepare_to_wait to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function schedule to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function finish_wait to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function might_fault to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _copy_to_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tty_port_tty_get to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_serial_handle_break to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __wake_up to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tty_insert_flip_string_fixed_flag to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_serial_handle_sysrq_char to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tty_flip_buffer_push to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tty_kref_put to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock_nested to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __raw_spin_lock_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __init_waitqueue_head to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_serial_generic_close to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_serial_generic_open to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_final_state to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            79 (0% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            66 (84%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         13 (16%)
  Times precision was empty:       40 (51%)
  Times precision was {false}:     8 (10%)
  Times result was cached:         13 (16%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      18 (23%)
  Times result was 'false':        8 (10%)
Number of strengthen sat checks:   0
Number of coverage checks:         1649
  BDD entailment checks:           41
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       525
Number of predicates discovered:          2
Number of abstraction locations:          5
Max number of predicates per location:    1
Avg number of predicates per location:    1
Total predicates per abstraction:         39
Max number of predicates per abstraction: 1
Avg number of predicates per abstraction: 1.50
Number of irrelevant predicates:          13 (33%)
Number of preds handled by boolean abs:   18 (46%)
  Total number of models for allsat:      20
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.11

Time for post operator:                  1.492s
  Time for path formula creation:        1.449s
Time for strengthen operator:            0.078s
Time for prec operator:                  1.252s
  Time for abstraction:                  1.226s (Max:     0.812s, Count: 79)
    Boolean abstraction:                 1.026s
    Solving time:                        0.935s (Max:     0.671s)
    Model enumeration time:              0.088s
    Time for BDD construction:           0.002s (Max:     0.001s)
Time for merge operator:                 0.424s
Time for coverage check:                 0.005s
  Time for BDD entailment checks:        0.005s
Total time for SMT solver (w/o itp):     1.023s

Number of path formula cache hits:   10246 (49%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     1.388s

Total number of created targets for pointer analysis: 30
   Number of created targets for uf: *unsigned_char is 5
   Number of created targets for uf: *char is 12


Number of BDD nodes:                               202
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                          31 (count: 237, min: 0, max: 14, avg: 0.13)
Time for BDD node cleanup:                             0.000s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.142s
Automaton transfers with branching:                0
Automaton transfer successors:                        20591 (count: 20591, min: 1, max: 1, avg: 1.00) [1 x 20591]

CPA algorithm statistics
------------------------
Number of iterations:            6520
Max size of waitlist:            34
Average size of waitlist:        15
Number of computed successors:   7435
Max successors for one state:    2
Number of times merged:          804
Number of times stopped:         841
Number of times breaked:         5

Total time for CPA algorithm:         4.475s (Max:     1.277s)
  Time for choose from waitlist:      0.027s
  Time for precision adjustment:      1.421s
  Time for transfer relation:         2.276s
  Time for merge operator:            0.495s
  Time for stop operator:             0.066s
  Time for adding to reached set:     0.042s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   5
Avg. length of target path (in blocks):                  19 (count: 5, min: 2, max: 5, avg: 3.80)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.190s
  Counterexample analysis:                             0.119s (Max:     0.058s, Calls: 5)
    Refinement sat check:                              0.073s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.004s
  Precision update:                                    0.010s
  ARG update:                                          0.038s

Length of refined path (in blocks):                      19 (count: 5, min: 2, max: 5, avg: 3.80)
Number of affected states:                               11 (count: 5, min: 1, max: 3, avg: 2.20)
Length (states) of path with itp 'true':                  3 (count: 5, min: 0, max: 1, avg: 0.60)
Length (states) of path with itp non-trivial itp:        11 (count: 5, min: 1, max: 3, avg: 2.20)
Length (states) of path with itp 'false':                 0 (count: 5, min: 0, max: 0, avg: 0.00)
Different non-trivial interpolants along paths:           4 (count: 5, min: 0, max: 1, avg: 0.80)
Equal non-trivial interpolants along paths:               2 (count: 5, min: 0, max: 1, avg: 0.40)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                5
Number of successful refinements:     5
Number of failed refinements:         0
Max. size of reached set before ref.: 2055
Max. size of reached set after ref.:  1229
Avg. size of reached set before ref.: 1760.40
Avg. size of reached set after ref.:  738.60

Total time for CEGAR algorithm:       4.722s
Time for refinements:                 0.245s
Average time for refinement:          0.049s
Max time for refinement:              0.076s

Code Coverage
-----------------------------
  Function coverage:      0.913
  Visited lines:          2920
  Total lines:            2938
  Line coverage:          0.994
  Visited conditions:     290
  Total conditions:       298
  Condition coverage:     0.973

CPAchecker general statistics
-----------------------------
Number of program locations:     3329
Number of CFA edges:             3516
Number of relevant variables:    864
Number of functions:             46
Number of loops:                 4
Size of reached set:             1478
  Number of reached locations:   868 (26%)
    Avg states per location:     1
    Max states per location:     26 (at node N209)
  Number of reached functions:   42 (91%)
  Number of partitions:          1478
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0

Time for analysis setup:          3.957s
  Time for loading CPAs:          0.781s
  Time for loading parser:        0.554s
  Time for CFA construction:      2.501s
    Time for parsing file(s):     0.722s
    Time for AST to CFA:          0.766s
    Time for CFA sanity check:    0.173s
    Time for post-processing:     0.628s
      Time for var class.:        0.312s
Time for Analysis:                4.723s
CPU time for analysis:            4.730s
Time for analyzing result:        0.006s
Total time for CPAchecker:        8.686s
Total CPU time for CPAchecker:    8.660s
Time for statistics:              0.105s

Time for Garbage Collector:       0.242s (in 13 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 68MB (    65 MiB) max;     40MB (    38 MiB) avg;     73MB (    69 MiB) peak
Used non-heap memory:             35MB (    34 MiB) max;     29MB (    28 MiB) avg;     36MB (    34 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        37MB (    36 MiB) max;     31MB (    29 MiB) avg
Total process virtual memory:   8134MB (  7757 MiB) max;   8100MB (  7725 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
