scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.4-simple/43_1a_cilled_true-unreach-call_ok_nondet_linux-43_1a-drivers--mtd--nftl.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_w5zx1c3z/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

line 3466: Function pointer *__cil_tmp18 with type int (*)(struct mtd_info *, loff_t , struct mtd_oob_ops *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 3528: Function pointer *__cil_tmp22 with type int (*)(struct mtd_info *, loff_t , struct mtd_oob_ops *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function register_mtd_blktrans to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function deregister_mtd_blktrans to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_pr_debug to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function del_mtd_blktrans_dev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memcmp to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mtd_read to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 3466: Ignoring call via function pointer mtd_read_oob::__cil_tmp18 for which no suitable target was found in line: tmp___0 = (*__cil_tmp18)(mtd, from, ops); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 3466: Ignoring function call through function pointer *__cil_tmp18: tmp___0 = (*__cil_tmp18)(mtd, from, ops); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function mtd_block_isbad to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mtd_erase to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __builtin_alloca to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Cannot get declaration of function __builtin_alloca, ignoring calls to it. (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 3528: Ignoring call via function pointer mtd_write_oob::__cil_tmp22 for which no suitable target was found in line: tmp___0 = (*__cil_tmp22)(mtd, to, ops); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 3528: Ignoring function call through function pointer *__cil_tmp22: tmp___0 = (*__cil_tmp22)(mtd, to, ops); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function mtd_block_markbad to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function add_mtd_blktrans_dev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_final_state to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            4751 (1% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            4697 (99%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         54 (1%)
  Times precision was empty:       1288 (27%)
  Times precision was {false}:     700 (15%)
  Times result was cached:         2520 (53%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      243 (5%)
  Times result was 'false':        328 (7%)
Number of strengthen sat checks:   0
Number of coverage checks:         30243
  BDD entailment checks:           3329
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       699
Number of predicates discovered:          2
Number of abstraction locations:          27
Max number of predicates per location:    1
Avg number of predicates per location:    1
Total predicates per abstraction:         3463
Max number of predicates per abstraction: 1
Avg number of predicates per abstraction: 3.67
Number of irrelevant predicates:          1561 (45%)
Number of preds handled by boolean abs:   243 (7%)
  Total number of models for allsat:      228
  Max number of models for allsat:        1
  Avg number of models for allsat:        0.94

Time for post operator:                 10.757s
  Time for path formula creation:       10.517s
Time for strengthen operator:            0.469s
Time for prec operator:                 41.194s
  Time for abstraction:                 40.942s (Max:     2.139s, Count: 4751)
    Boolean abstraction:                 6.945s
    Solving time:                       34.864s (Max:     2.113s)
    Model enumeration time:              0.325s
    Time for BDD construction:           0.015s (Max:     0.005s)
Time for merge operator:                 1.895s
Time for coverage check:                 0.031s
  Time for BDD entailment checks:        0.027s
Total time for SMT solver (w/o itp):    35.189s

Number of path formula cache hits:   366578 (72%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     9.667s

Total number of created targets for pointer analysis: 106553
   Number of created targets for uf: *unsigned_short_int is 881
   Number of created targets for uf: *unsigned_char is 121
   Number of created targets for uf: *(unsigned_char)* is 76
   Number of created targets for uf: *unsigned_long_int is 954


Number of BDD nodes:                               202
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         470 (count: 9748, min: 0, max: 50, avg: 0.05)
Time for BDD node cleanup:                             0.005s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.734s
  Time for transition matches:                         0.348s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.002s
Automaton transfers with branching:                0
Automaton transfer successors:                       495961 (count: 495973, min: 0, max: 1, avg: 1.00) [0 x 12, 1 x 495961]

CPA algorithm statistics
------------------------
Number of iterations:            111504
Max size of waitlist:            268
Average size of waitlist:        62
Number of computed successors:   128909
Max successors for one state:    2
Number of times merged:          13457
Number of times stopped:         16404
Number of times breaked:         14

Total time for CPA algorithm:        60.677s (Max:    14.496s)
  Time for choose from waitlist:      0.093s
  Time for precision adjustment:     42.332s
  Time for transfer relation:        15.070s
  Time for merge operator:            2.122s
  Time for stop operator:             0.204s
  Time for adding to reached set:     0.265s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   14
Avg. length of target path (in blocks):                 145 (count: 14, min: 2, max: 17, avg: 10.36)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   1.683s
  Counterexample analysis:                             1.309s (Max:     0.219s, Calls: 14)
    Refinement sat check:                              1.165s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.015s
  Precision update:                                    0.005s
  ARG update:                                          0.339s

Length of refined path (in blocks):                     145 (count: 14, min: 2, max: 17, avg: 10.36)
Number of affected states:                              131 (count: 14, min: 1, max: 16, avg: 9.36)
Length (states) of path with itp 'true':                  0 (count: 14, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:       131 (count: 14, min: 1, max: 16, avg: 9.36)
Length (states) of path with itp 'false':                 0 (count: 14, min: 0, max: 0, avg: 0.00)
Different non-trivial interpolants along paths:           0 (count: 14, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:             117 (count: 14, min: 0, max: 15, avg: 8.36)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                14
Number of successful refinements:     14
Number of failed refinements:         0
Max. size of reached set before ref.: 14540
Max. size of reached set after ref.:  10
Avg. size of reached set before ref.: 7553.79
Avg. size of reached set after ref.:  10.00

Total time for CEGAR algorithm:      62.533s
Time for refinements:                 1.854s
Average time for refinement:          0.132s
Max time for refinement:              0.271s

Code Coverage
-----------------------------
  Function coverage:      0.850
  Visited lines:          5156
  Total lines:            5253
  Line coverage:          0.982
  Visited conditions:     378
  Total conditions:       394
  Condition coverage:     0.959

CPAchecker general statistics
-----------------------------
Number of program locations:     5625
Number of CFA edges:             5855
Number of relevant variables:    1816
Number of functions:             40
Number of loops:                 25
Size of reached set:             6565
  Number of reached locations:   1065 (19%)
    Avg states per location:     6
    Max states per location:     78 (at node N46)
  Number of reached functions:   34 (85%)
  Number of partitions:          6565
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0

Time for analysis setup:          4.417s
  Time for loading CPAs:          0.720s
  Time for loading parser:        0.572s
  Time for CFA construction:      3.051s
    Time for parsing file(s):     0.804s
    Time for AST to CFA:          0.946s
    Time for CFA sanity check:    0.309s
    Time for post-processing:     0.833s
      Time for var class.:        0.372s
Time for Analysis:               62.533s
CPU time for analysis:           62.530s
Time for analyzing result:        0.005s
Total time for CPAchecker:       66.954s
Total CPU time for CPAchecker:   66.940s
Time for statistics:              0.153s

Time for Garbage Collector:       2.326s (in 114 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                187MB (   178 MiB) max;     99MB (    94 MiB) avg;    195MB (   186 MiB) peak
Used non-heap memory:             40MB (    38 MiB) max;     37MB (    35 MiB) avg;     40MB (    38 MiB) peak
Allocated heap memory:           247MB (   236 MiB) max;    160MB (   153 MiB) avg
Allocated non-heap memory:        42MB (    40 MiB) max;     40MB (    38 MiB) avg
Total process virtual memory:   8141MB (  7764 MiB) max;   8129MB (  7752 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
