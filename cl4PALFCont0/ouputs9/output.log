scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/minepump_spec1_product32_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_8r9jdoa2/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 356: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 402: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 457: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 489: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 498: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 513: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 536: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 771: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 780: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 835: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 963: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 193: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            2167 (28% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  2109 (97%)
  Because of loop head:            40 (2%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         18 (1%)
  Times precision was empty:       436 (20%)
  Times precision was {false}:     51 (2%)
  Times result was cached:         1512 (70%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      168 (8%)
  Times result was 'false':        266 (12%)
Number of strengthen sat checks:   0
Number of coverage checks:         399
  BDD entailment checks:           283
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       9
Number of predicates discovered:          7
Number of abstraction locations:          42
Max number of predicates per location:    4
Avg number of predicates per location:    2
Total predicates per abstraction:         3555
Max number of predicates per abstraction: 4
Avg number of predicates per abstraction: 16.23
Number of irrelevant predicates:          1428 (40%)
Number of preds handled by boolean abs:   292 (8%)
  Total number of models for allsat:      182
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.08

Time for post operator:                  0.714s
  Time for path formula creation:        0.658s
Time for strengthen operator:            0.037s
Time for prec operator:                  1.580s
  Time for abstraction:                  1.402s (Max:     0.015s, Count: 2167)
    Boolean abstraction:                 0.220s
    Solving time:                        0.107s (Max:     0.010s)
    Model enumeration time:              0.032s
    Time for BDD construction:           0.040s (Max:     0.009s)
Time for merge operator:                 0.007s
Time for coverage check:                 0.029s
  Time for BDD entailment checks:        0.029s
Total time for SMT solver (w/o itp):     0.139s

Number of path formula cache hits:   4705 (53%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.578s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               234
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         257 (count: 2053, min: 0, max: 139, avg: 0.13)
Time for BDD node cleanup:                             0.007s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.115s
Automaton transfers with branching:                0
Automaton transfer successors:                         7747 (count: 7747, min: 1, max: 1, avg: 1.00) [1 x 7747]

CPA algorithm statistics
------------------------
Number of iterations:            5984
Max size of waitlist:            15
Average size of waitlist:        6
Number of computed successors:   6664
Max successors for one state:    2
Number of times merged:          58
Number of times stopped:         319
Number of times breaked:         18

Total time for CPA algorithm:         3.803s (Max:     0.448s)
  Time for choose from waitlist:      0.041s
  Time for precision adjustment:      1.822s
  Time for transfer relation:         1.480s
  Time for merge operator:            0.047s
  Time for stop operator:             0.119s
  Time for adding to reached set:     0.075s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   18
Avg. length of target path (in blocks):                 729 (count: 18, min: 26, max: 56, avg: 40.50)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.409s
  Counterexample analysis:                             0.225s (Max:     0.026s, Calls: 18)
    Refinement sat check:                              0.088s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.057s
  Precision update:                                    0.019s
  ARG update:                                          0.062s

Length of refined path (in blocks):                     472 (count: 18, min: 14, max: 49, avg: 26.22)
Number of affected states:                              398 (count: 18, min: 2, max: 48, avg: 22.11)
Length (states) of path with itp 'true':                 56 (count: 18, min: 0, max: 12, avg: 3.11)
Length (states) of path with itp non-trivial itp:       398 (count: 18, min: 2, max: 48, avg: 22.11)
Length (states) of path with itp 'false':                18 (count: 18, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           4 (count: 18, min: 0, max: 1, avg: 0.22)
Equal non-trivial interpolants along paths:             376 (count: 18, min: 1, max: 46, avg: 20.89)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                18
Number of successful refinements:     18
Number of failed refinements:         0
Max. size of reached set before ref.: 781
Max. size of reached set after ref.:  511
Avg. size of reached set before ref.: 411.28
Avg. size of reached set after ref.:  117.72

Total time for CEGAR algorithm:       4.294s
Time for refinements:                 0.488s
Average time for refinement:          0.027s
Max time for refinement:              0.086s

Code Coverage
-----------------------------
  Function coverage:      0.500
  Visited lines:          107
  Total lines:            436
  Line coverage:          0.245
  Visited conditions:     32
  Total conditions:       72
  Condition coverage:     0.444

CPAchecker general statistics
-----------------------------
Number of program locations:     629
Number of CFA edges:             679
Number of relevant variables:    113
Number of functions:             38
Number of loops:                 5
Size of reached set:             796
  Number of reached locations:   146 (23%)
    Avg states per location:     5
    Max states per location:     32 (at node N382)
  Number of reached functions:   19 (50%)
  Number of partitions:          793
    Avg size of partitions:      1
    Max size of partitions:      3 (with key [N406 (before lines 582-631), Function test called from node N620, stack depth 3 [42cc183e], stack [main, runTest, test]])
  Number of target states:       0

Time for analysis setup:          3.288s
  Time for loading CPAs:          0.797s
  Time for loading parser:        0.767s
  Time for CFA construction:      1.419s
    Time for parsing file(s):     0.547s
    Time for AST to CFA:          0.307s
    Time for CFA sanity check:    0.112s
    Time for post-processing:     0.300s
      Time for var class.:        0.131s
Time for Analysis:                4.294s
CPU time for analysis:            4.290s
Time for analyzing result:        0.009s
Total time for CPAchecker:        7.587s
Total CPU time for CPAchecker:    7.580s
Time for statistics:              0.114s

Time for Garbage Collector:       0.195s (in 7 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 58MB (    55 MiB) max;     35MB (    33 MiB) avg;     64MB (    61 MiB) peak
Used non-heap memory:             35MB (    33 MiB) max;     28MB (    26 MiB) avg;     36MB (    35 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        37MB (    36 MiB) max;     30MB (    28 MiB) avg
Total process virtual memory:   8133MB (  7756 MiB) max;   8089MB (  7714 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
