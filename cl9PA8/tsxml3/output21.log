scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/eca-rers2012/Problem02_label21_true-unreach-call_false-termination.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_321snicf/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            26 (0% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  12 (46%)
  Because of loop head:            7 (27%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         7 (27%)
  Times precision was empty:       4 (15%)
  Times precision was {false}:     8 (31%)
  Times result was cached:         0 (0%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      14 (54%)
  Times result was 'false':        5 (19%)
Number of strengthen sat checks:   0
Number of coverage checks:         12133
  BDD entailment checks:           13
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       982
Number of predicates discovered:          9
Number of abstraction locations:          4
Max number of predicates per location:    8
Avg number of predicates per location:    5
Total predicates per abstraction:         106
Max number of predicates per abstraction: 8
Avg number of predicates per abstraction: 4.82
Number of irrelevant predicates:          20 (19%)
Number of preds handled by boolean abs:   86 (81%)
  Total number of models for allsat:      156
  Max number of models for allsat:        28
  Avg number of models for allsat:        11.14

Time for post operator:                  1.078s
  Time for path formula creation:        1.037s
Time for strengthen operator:            0.039s
Time for prec operator:                  0.422s
  Time for abstraction:                  0.376s (Max:     0.051s, Count: 26)
    Boolean abstraction:                 0.179s
    Solving time:                        0.073s (Max:     0.017s)
    Model enumeration time:              0.046s
    Time for BDD construction:           0.056s (Max:     0.013s)
Time for merge operator:                 0.085s
Time for coverage check:                 0.004s
  Time for BDD entailment checks:        0.001s
Total time for SMT solver (w/o itp):     0.119s

Number of path formula cache hits:   8186 (46%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     1.010s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               767
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         210 (count: 229, min: 0, max: 74, avg: 0.92)
Time for BDD node cleanup:                             0.000s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.116s
Automaton transfers with branching:                0
Automaton transfer successors:                        15235 (count: 15565, min: 0, max: 1, avg: 0.98) [0 x 330, 1 x 15235]

CPA algorithm statistics
------------------------
Number of iterations:            8272
Max size of waitlist:            15
Average size of waitlist:        9
Number of computed successors:   14361
Max successors for one state:    2
Number of times merged:          6060
Number of times stopped:         6061
Number of times breaked:         2

Total time for CPA algorithm:         3.041s (Max:     1.312s)
  Time for choose from waitlist:      0.037s
  Time for precision adjustment:      0.718s
  Time for transfer relation:         1.605s
  Time for merge operator:            0.339s
  Time for stop operator:             0.091s
  Time for adding to reached set:     0.052s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   2
Avg. length of target path (in blocks):                   9 (count: 2, min: 3, max: 6, avg: 4.50)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.141s
  Counterexample analysis:                             0.079s (Max:     0.042s, Calls: 2)
    Refinement sat check:                              0.047s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.015s
  Precision update:                                    0.007s
  ARG update:                                          0.033s

Length of refined path (in blocks):                       9 (count: 2, min: 3, max: 6, avg: 4.50)
Number of affected states:                                7 (count: 2, min: 2, max: 5, avg: 3.50)
Length (states) of path with itp 'true':                  0 (count: 2, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:         7 (count: 2, min: 2, max: 5, avg: 3.50)
Length (states) of path with itp 'false':                 0 (count: 2, min: 0, max: 0, avg: 0.00)
Different non-trivial interpolants along paths:           1 (count: 2, min: 0, max: 1, avg: 0.50)
Equal non-trivial interpolants along paths:               4 (count: 2, min: 1, max: 3, avg: 2.00)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                2
Number of successful refinements:     2
Number of failed refinements:         0
Max. size of reached set before ref.: 2209
Max. size of reached set after ref.:  3
Avg. size of reached set before ref.: 1562.00
Avg. size of reached set after ref.:  3.00

Total time for CEGAR algorithm:       3.215s
Time for refinements:                 0.171s
Average time for refinement:          0.085s
Max time for refinement:              0.104s

Code Coverage
-----------------------------
  Function coverage:      1.000
  Visited lines:          509
  Total lines:            509
  Line coverage:          1.000
  Visited conditions:     1992
  Total conditions:       1992
  Condition coverage:     1.000

CPAchecker general statistics
-----------------------------
Number of program locations:     1514
Number of CFA edges:             2509
Number of relevant variables:    9
Number of functions:             2
Number of loops:                 1
Size of reached set:             5178
  Number of reached locations:   1297 (86%)
    Avg states per location:     3
    Max states per location:     4 (at node N0)
  Number of reached functions:   2 (100%)
  Number of partitions:          5173
    Avg size of partitions:      1
    Max size of partitions:      4 (with key [N1628 (before lines 606-616), Function main called from node N1625, stack depth 1 [71e5f61d], stack [main]])
  Number of target states:       0

Time for analysis setup:          2.607s
  Time for loading CPAs:          0.685s
  Time for loading parser:        0.444s
  Time for CFA construction:      1.315s
    Time for parsing file(s):     0.396s
    Time for AST to CFA:          0.406s
    Time for CFA sanity check:    0.151s
    Time for post-processing:     0.280s
      Time for var class.:        0.140s
Time for Analysis:                3.215s
CPU time for analysis:            3.220s
Time for analyzing result:        0.007s
Total time for CPAchecker:        5.825s
Total CPU time for CPAchecker:    5.830s
Time for statistics:              0.135s

Time for Garbage Collector:       0.151s (in 11 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 60MB (    57 MiB) max;     34MB (    33 MiB) avg;     66MB (    63 MiB) peak
Used non-heap memory:             33MB (    31 MiB) max;     27MB (    26 MiB) avg;     35MB (    33 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        36MB (    34 MiB) max;     30MB (    28 MiB) avg
Total process virtual memory:   8085MB (  7711 MiB) max;   8047MB (  7674 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
