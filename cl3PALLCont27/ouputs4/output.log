scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/elevator_spec2_product19_true-unreach-call_true-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_858cqxzy/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 131: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 289: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 298: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 332: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 341: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 381: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 461: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 474: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 826: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 855: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 889: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 945: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 976: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 990: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1563: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1574: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1583: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1707: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1943: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2254: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2490: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2529: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2568: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3013: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3333: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3379: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3391: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3414: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3170: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            212 (0% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            138 (65%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         74 (35%)
  Times precision was empty:       3 (1%)
  Times precision was {false}:     73 (34%)
  Times result was cached:         0 (0%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      136 (64%)
  Times result was 'false':        64 (30%)
Number of strengthen sat checks:   0
Number of coverage checks:         281815
  BDD entailment checks:           1989
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       911
Number of predicates discovered:          72
Number of abstraction locations:          2
Max number of predicates per location:    71
Avg number of predicates per location:    36
Total predicates per abstraction:         6471
Max number of predicates per abstraction: 71
Avg number of predicates per abstraction: 30.96
Number of irrelevant predicates:          73 (1%)
Number of preds handled by boolean abs:   6398 (99%)
  Total number of models for allsat:      130971
  Max number of models for allsat:        4684
  Avg number of models for allsat:        963.02

Time for post operator:                  9.835s
  Time for path formula creation:        9.191s
Time for strengthen operator:            0.813s
Time for prec operator:                851.979s
  Time for abstraction:                851.145s (Max:    28.910s, Count: 212)
    Boolean abstraction:               845.050s
    Solving time:                       26.445s (Max:     0.426s)
    Model enumeration time:            790.706s
    Time for BDD construction:          28.153s (Max:     1.597s)
Time for merge operator:                 2.627s
Time for coverage check:                 0.176s
  Time for BDD entailment checks:        0.116s
Total time for SMT solver (w/o itp):   817.152s

Number of path formula cache hits:   545972 (70%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     8.509s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               232902
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       76881 (count: 34153, min: 0, max: 5010, avg: 2.25)
Time for BDD node cleanup:                             0.029s
Time for BDD garbage collection:                       0.564s (in 148 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  1.321s
  Time for transition matches:                         0.633s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.000s
Automaton transfers with branching:                0
Automaton transfer successors:                       682253 (count: 682253, min: 1, max: 1, avg: 1.00) [1 x 682253]

CPA algorithm statistics
------------------------
Number of iterations:            509616
Max size of waitlist:            57
Average size of waitlist:        23
Number of computed successors:   649731
Max successors for one state:    2
Number of times merged:          139913
Number of times stopped:         139923
Number of times breaked:         10

Total time for CPA algorithm:       887.313s (Max:   609.226s)
  Time for choose from waitlist:      0.315s
  Time for precision adjustment:    857.177s
  Time for transfer relation:        20.168s
  Time for merge operator:            4.942s
  Time for stop operator:             1.110s
  Time for adding to reached set:     1.301s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   10
Avg. length of target path (in blocks):                  29 (count: 10, min: 2, max: 5, avg: 2.90)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   8.044s
  Counterexample analysis:                             6.354s (Max:     2.100s, Calls: 10)
    Refinement sat check:                              5.756s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.001s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.029s
  Precision update:                                    0.005s
  ARG update:                                          1.529s

Length of refined path (in blocks):                      29 (count: 10, min: 2, max: 5, avg: 2.90)
Number of affected states:                               19 (count: 10, min: 1, max: 4, avg: 1.90)
Length (states) of path with itp 'true':                  0 (count: 10, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:        19 (count: 10, min: 1, max: 4, avg: 1.90)
Length (states) of path with itp 'false':                 0 (count: 10, min: 0, max: 0, avg: 0.00)
Different non-trivial interpolants along paths:           9 (count: 10, min: 0, max: 3, avg: 0.90)
Equal non-trivial interpolants along paths:               0 (count: 10, min: 0, max: 0, avg: 0.00)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                10
Number of successful refinements:     10
Number of failed refinements:         0
Max. size of reached set before ref.: 171237
Max. size of reached set after ref.:  4006
Avg. size of reached set before ref.: 46625.80
Avg. size of reached set after ref.:  4006.00

Total time for CEGAR algorithm:     896.001s
Time for refinements:                 8.662s
Average time for refinement:          0.866s
Max time for refinement:              2.716s

Code Coverage
-----------------------------
  Function coverage:      0.573
  Visited lines:          1005
  Total lines:            1719
  Line coverage:          0.585
  Visited conditions:     588
  Total conditions:       754
  Condition coverage:     0.780

CPAchecker general statistics
-----------------------------
Number of program locations:     2258
Number of CFA edges:             2750
Number of relevant variables:    298
Number of functions:             75
Number of loops:                 9
Size of reached set:             83546
  Number of reached locations:   1129 (50%)
    Avg states per location:     74
    Max states per location:     625 (at node N1261)
  Number of reached functions:   43 (57%)
  Number of partitions:          83527
    Avg size of partitions:      1
    Max size of partitions:      20 (with key [N2232 (before lines 2807-2835), Function cleanup called from node N1803, stack depth 4 [58a55449], stack [main, runTest, test, cleanup]])
  Number of target states:       0
  Size of final wait list        22

Time for analysis setup:          4.249s
  Time for loading CPAs:          0.829s
  Time for loading parser:        0.711s
  Time for CFA construction:      2.525s
    Time for parsing file(s):     0.665s
    Time for AST to CFA:          0.795s
    Time for CFA sanity check:    0.267s
    Time for post-processing:     0.607s
      Time for var class.:        0.359s
Time for Analysis:              896.001s
CPU time for analysis:          895.960s
Total time for CPAchecker:      900.257s
Total CPU time for CPAchecker:  900.200s
Time for statistics:              1.147s

Time for Garbage Collector:       7.489s (in 153 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                372MB (   355 MiB) max;    263MB (   251 MiB) avg;    395MB (   377 MiB) peak
Used non-heap memory:             36MB (    34 MiB) max;     35MB (    33 MiB) avg;     36MB (    35 MiB) peak
Allocated heap memory:           451MB (   430 MiB) max;    379MB (   361 MiB) avg
Allocated non-heap memory:        38MB (    36 MiB) max;     38MB (    36 MiB) avg
Total process virtual memory:   8301MB (  7916 MiB) max;   8220MB (  7839 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
