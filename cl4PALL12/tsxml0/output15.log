scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/loop-acceleration/underapprox_true-unreach-call2_true-termination.i


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_ce6ik_8c/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            59 (14% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            30 (51%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         29 (49%)
  Times precision was empty:       2 (3%)
  Times precision was {false}:     28 (47%)
  Times result was cached:         0 (0%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      29 (49%)
  Times result was 'false':        22 (37%)
Number of strengthen sat checks:   0
Number of coverage checks:         69
  BDD entailment checks:           69
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       3
Number of predicates discovered:          8
Number of abstraction locations:          2
Max number of predicates per location:    7
Avg number of predicates per location:    4
Total predicates per abstraction:         154
Max number of predicates per abstraction: 7
Avg number of predicates per abstraction: 2.70
Number of irrelevant predicates:          28 (18%)
Number of preds handled by boolean abs:   126 (82%)
  Total number of models for allsat:      97
  Max number of models for allsat:        7
  Avg number of models for allsat:        3.34

Time for post operator:                  0.078s
  Time for path formula creation:        0.074s
Time for strengthen operator:            0.019s
Time for prec operator:                  0.423s
  Time for abstraction:                  0.406s (Max:     0.034s, Count: 59)
    Boolean abstraction:                 0.108s
    Solving time:                        0.050s (Max:     0.004s)
    Model enumeration time:              0.009s
    Time for BDD construction:           0.028s (Max:     0.011s)
Time for merge operator:                 0.000s
Time for coverage check:                 0.000s
  Time for BDD entailment checks:        0.000s
Total time for SMT solver (w/o itp):     0.059s

Number of path formula cache hits:   325 (73%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.071s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               541
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                           0 (count: 523, min: 0, max: 0, avg: 0.00)
Time for BDD node cleanup:                             0.001s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.019s
Automaton transfers with branching:                0
Automaton transfer successors:                          423 (count: 423, min: 1, max: 1, avg: 1.00) [1 x 423]

CPA algorithm statistics
------------------------
Number of iterations:            316
Max size of waitlist:            3
Average size of waitlist:        1
Number of computed successors:   352
Max successors for one state:    2
Number of times merged:          0
Number of times stopped:         1
Number of times breaked:         7

Total time for CPA algorithm:         0.716s (Max:     0.160s)
  Time for choose from waitlist:      0.002s
  Time for precision adjustment:      0.492s
  Time for transfer relation:         0.179s
  Time for merge operator:            0.004s
  Time for stop operator:             0.005s
  Time for adding to reached set:     0.019s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   7
Avg. length of target path (in blocks):                  35 (count: 7, min: 2, max: 8, avg: 5.00)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.162s
  Counterexample analysis:                             0.036s (Max:     0.012s, Calls: 7)
    Refinement sat check:                              0.008s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.080s
  Precision update:                                    0.023s
  ARG update:                                          0.016s

Length of refined path (in blocks):                      35 (count: 7, min: 2, max: 8, avg: 5.00)
Number of affected states:                               22 (count: 7, min: 1, max: 6, avg: 3.14)
Length (states) of path with itp 'true':                  6 (count: 7, min: 0, max: 6, avg: 0.86)
Length (states) of path with itp non-trivial itp:        22 (count: 7, min: 1, max: 6, avg: 3.14)
Length (states) of path with itp 'false':                 0 (count: 7, min: 0, max: 0, avg: 0.00)
Different non-trivial interpolants along paths:          15 (count: 7, min: 0, max: 5, avg: 2.14)
Equal non-trivial interpolants along paths:               0 (count: 7, min: 0, max: 0, avg: 0.00)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                7
Number of successful refinements:     7
Number of failed refinements:         0
Max. size of reached set before ref.: 84
Max. size of reached set after ref.:  75
Avg. size of reached set before ref.: 48.00
Avg. size of reached set after ref.:  13.29

Total time for CEGAR algorithm:       0.903s
Time for refinements:                 0.186s
Average time for refinement:          0.026s
Max time for refinement:              0.119s

Code Coverage
-----------------------------
  Function coverage:      1.000
  Visited lines:          9
  Total lines:            9
  Line coverage:          1.000
  Visited conditions:     4
  Total conditions:       4
  Condition coverage:     1.000

CPAchecker general statistics
-----------------------------
Number of program locations:     24
Number of CFA edges:             25
Number of relevant variables:    2
Number of functions:             2
Number of loops:                 1
Size of reached set:             87
  Number of reached locations:   15 (63%)
    Avg states per location:     5
    Max states per location:     7 (at node N0)
  Number of reached functions:   2 (100%)
  Number of partitions:          81
    Avg size of partitions:      1
    Max size of partitions:      7 (with key [N13 (before line 11), Function main called from node N9, stack depth 1 [27f981c6], stack [main]])
  Number of target states:       0

Time for analysis setup:          2.427s
  Time for loading CPAs:          0.763s
  Time for loading parser:        0.751s
  Time for CFA construction:      0.778s
    Time for parsing file(s):     0.346s
    Time for AST to CFA:          0.142s
    Time for CFA sanity check:    0.019s
    Time for post-processing:     0.140s
      Time for var class.:        0.033s
Time for Analysis:                0.905s
CPU time for analysis:            0.910s
Time for analyzing result:        0.000s
Total time for CPAchecker:        3.338s
Total CPU time for CPAchecker:    3.340s
Time for statistics:              0.096s

Time for Garbage Collector:       0.104s (in 4 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 44MB (    42 MiB) max;     26MB (    24 MiB) avg;     62MB (    59 MiB) peak
Used non-heap memory:             28MB (    27 MiB) max;     22MB (    21 MiB) avg;     30MB (    29 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        31MB (    30 MiB) max;     23MB (    22 MiB) avg
Total process virtual memory:   8132MB (  7756 MiB) max;   8041MB (  7668 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
