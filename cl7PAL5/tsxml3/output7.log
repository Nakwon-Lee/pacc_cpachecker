scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.12-rc1/linux-3.12-rc1.tar.xz-144_2a-drivers--net--usb--cdc_mbim.ko-entry_point_true-unreach-call.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_401i_5ic/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

lines 5513-5514: Dead code detected: __asm__ volatile (".pushsection .smp_locks,\"a\"\n.balign 4\n.long 671f - .\n.popsection\n671:\n\tlock; xaddb %b0, %1\n": "+q" (__ret),
                       "+m" (v->counter): : "memory", "cc"); (CFACreationUtils.addEdgeToCFA, INFO)

lines 5517-5518: Dead code detected: __asm__ volatile (".pushsection .smp_locks,\"a\"\n.balign 4\n.long 671f - .\n.popsection\n671:\n\tlock; xaddw %w0, %1\n": "+r" (__ret),
                       "+m" (v->counter): : "memory", "cc"); (CFACreationUtils.addEdgeToCFA, INFO)

lines 5525-5526: Dead code detected: __asm__ volatile (".pushsection .smp_locks,\"a\"\n.balign 4\n.long 671f - .\n.popsection\n671:\n\tlock; xaddq %q0, %1\n": "+r" (__ret),
                       "+m" (v->counter): : "memory", "cc"); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (4UL) {
  case 1UL:
  __asm__ volatile (".pushsection .smp_locks,\"a\"\n.balign 4\n.long 671f - .\n.popsection\n671:\n\tlock; xaddb %b0, %1\n": "+q" (__ret),
                       "+m" (v->counter): : "memory", "cc");
  goto ldv_5884;
  case 2UL:
  __asm__ volatile (".pushsection .smp_locks,\"a\"\n.balign 4\n.long 671f - .\n.popsection\n671:\n\tlock; xaddw %w0, %1\n": "+r" (__ret),
                       "+m" (v->counter): : "memory", "cc");
  goto ldv_5884;
  case 4UL:
  __asm__ volatile (".pushsection .smp_locks,\"a\"\n.balign 4\n.long 671f - .\n.popsection\n671:\n\tlock; xaddl %0, %1\n": "+r" (__ret),
                       "+m" (v->counter): : "memory", "cc");
  goto ldv_5884;
  case 8UL:
  __asm__ volatile (".pushsection .smp_locks,\"a\"\n.balign 4\n.long 671f - .\n.popsection\n671:\n\tlock; xaddq %q0, %1\n": "+r" (__ret),
                       "+m" (v->counter): : "memory", "cc");
  goto ldv_5884;
  default:
  __xadd_wrong_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 6112: Function pointer *(info->subdriver->disconnect) with type void (*)(struct usb_interface *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7100: Function pointer *completeFnBulk with type void (*)(struct urb *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7094: Function pointer *completeFnInt with type void (*)(struct urb *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_dev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netdev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function skb_pull to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock_bh to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_bh to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_kfree_skb_any to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function cdc_ncm_select_altsetting to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function cdc_ncm_bind_common to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_cdc_wdm_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function cdc_ncm_unbind to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 6112: Ignoring function call through function pointer *(info->subdriver->disconnect): (*(info->subdriver->disconnect))(ctx->control); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function cdc_ncm_rx_verify_nth16 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_deregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 6474: Ignoring function call through function pointer *(info->subdriver->resume): ret = (*(info->subdriver->resume))(intf); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Recursion detected, aborting. To ignore recursion, add -skipRecursion to the command line. (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, INFO)

Error: line 6474: Unsupported feature (recursion): ret = cdc_mbim_resume(intf); (line was originally pointer call(cdc_mbim_resume) ret = (*((info->subdriver)->resume))(intf);) (CallstackTransferRelation.getAbstractSuccessorsForEdge, SEVERE)

PredicateCPA statistics
-----------------------
Number of abstractions:            140 (1% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            92 (66%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         48 (34%)
  Times precision was empty:       86 (61%)
  Times precision was {false}:     47 (34%)
  Times result was cached:         0 (0%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      7 (5%)
  Times result was 'false':        41 (29%)
Number of strengthen sat checks:   0
Number of coverage checks:         1816
  BDD entailment checks:           0
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       122
Number of predicates discovered:          8
Number of abstraction locations:          2
Max number of predicates per location:    7
Avg number of predicates per location:    4
Total predicates per abstraction:         75
Max number of predicates per abstraction: 7
Avg number of predicates per abstraction: 1.39
Number of irrelevant predicates:          47 (63%)
Number of preds handled by boolean abs:   28 (37%)
  Total number of models for allsat:      7
  Max number of models for allsat:        1
  Avg number of models for allsat:        1.00

Time for post operator:                  0.762s
  Time for path formula creation:        0.744s
Time for strengthen operator:            0.033s
Time for prec operator:                  0.386s
  Time for abstraction:                  0.319s (Max:     0.033s, Count: 140)
    Boolean abstraction:                 0.066s
    Solving time:                        0.129s (Max:     0.018s)
    Model enumeration time:              0.003s
    Time for BDD construction:           0.017s (Max:     0.017s)
Time for merge operator:                 0.166s
Time for coverage check:                 0.008s
Total time for SMT solver (w/o itp):     0.132s

Number of path formula cache hits:   10312 (78%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.675s

Total number of created targets for pointer analysis: 52
   Number of created targets for uf: *unsigned_short_int is 11
   Number of created targets for uf: *unsigned_int is 5


Number of BDD nodes:                               223
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         105 (count: 462, min: 0, max: 55, avg: 0.23)
Time for BDD node cleanup:                             0.001s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.173s
Automaton transfers with branching:                0
Automaton transfer successors:                        12300 (count: 12300, min: 1, max: 1, avg: 1.00) [1 x 12300]

CPA algorithm statistics
------------------------
Number of iterations:            7122
Max size of waitlist:            26
Average size of waitlist:        17
Number of computed successors:   8204
Max successors for one state:    2
Number of times merged:          908
Number of times stopped:         908
Number of times breaked:         7

Total time for CPA algorithm:         2.328s (Max:     0.525s)
  Time for choose from waitlist:      0.012s
  Time for precision adjustment:      0.575s
  Time for transfer relation:         1.301s
  Time for merge operator:            0.208s
  Time for stop operator:             0.022s
  Time for adding to reached set:     0.069s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   7
Avg. length of target path (in blocks):                  14 (count: 7, min: 2, max: 2, avg: 2.00)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.092s
  Counterexample analysis:                             0.057s (Max:     0.013s, Calls: 7)
    Refinement sat check:                              0.046s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.008s
  Precision update:                                    0.001s
  ARG update:                                          0.014s

Length of refined path (in blocks):                      14 (count: 7, min: 2, max: 2, avg: 2.00)
Number of affected states:                                7 (count: 7, min: 1, max: 1, avg: 1.00)
Length (states) of path with itp 'true':                  0 (count: 7, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:         7 (count: 7, min: 1, max: 1, avg: 1.00)
Length (states) of path with itp 'false':                 0 (count: 7, min: 0, max: 0, avg: 0.00)
Different non-trivial interpolants along paths:           0 (count: 7, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:               0 (count: 7, min: 0, max: 0, avg: 0.00)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                7
Number of successful refinements:     7
Number of failed refinements:         0
Max. size of reached set before ref.: 1110
Max. size of reached set after ref.:  13
Avg. size of reached set before ref.: 884.14
Avg. size of reached set after ref.:  13.00

Total time for CEGAR algorithm:       2.460s
Time for refinements:                 0.129s
Average time for refinement:          0.018s
Max time for refinement:              0.044s

Code Coverage
-----------------------------
  Function coverage:      0.575
  Visited lines:          1369
  Total lines:            1728
  Line coverage:          0.792
  Visited conditions:     184
  Total conditions:       352
  Condition coverage:     0.523

CPAchecker general statistics
-----------------------------
Number of program locations:     2281
Number of CFA edges:             2472
Number of relevant variables:    316
Number of functions:             73
Number of loops:                 4
Size of reached set:             1158
  Number of reached locations:   499 (22%)
    Avg states per location:     2
    Max states per location:     9 (at node N115)
  Number of reached functions:   42 (58%)
  Number of partitions:          1158
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0
  Size of final wait list        23

Time for analysis setup:          3.139s
  Time for loading CPAs:          0.617s
  Time for loading parser:        0.432s
  Time for CFA construction:      2.014s
    Time for parsing file(s):     0.608s
    Time for AST to CFA:          0.658s
    Time for CFA sanity check:    0.123s
    Time for post-processing:     0.502s
      Time for var class.:        0.196s
Time for Analysis:                2.460s
CPU time for analysis:            2.450s
Total time for CPAchecker:        5.604s
Total CPU time for CPAchecker:    5.580s
Time for statistics:              0.079s

Time for Garbage Collector:       0.142s (in 10 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 63MB (    60 MiB) max;     36MB (    35 MiB) avg;     69MB (    66 MiB) peak
Used non-heap memory:             35MB (    33 MiB) max;     27MB (    26 MiB) avg;     35MB (    34 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        37MB (    35 MiB) max;     29MB (    28 MiB) avg
Total process virtual memory:   8132MB (  7756 MiB) max;   8092MB (  7717 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
