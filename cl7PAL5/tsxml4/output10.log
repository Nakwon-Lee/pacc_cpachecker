scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.12-rc1/linux-3.12-rc1.tar.xz-144_2a-drivers--net--wireless--ti--wlcore--wlcore_spi.ko-entry_point_true-unreach-call.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_8srf3_2o/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 7333: Function pointer *completeFnBulk with type void (*)(struct urb *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7327: Function pointer *completeFnInt with type void (*)(struct urb *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

line 7013: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___0 = ldv_zalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 7017: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___2 = ldv_zalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_release_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_setup_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __list_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function spi_sync to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function crc7 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function spi_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function driver_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function spi_setup to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_alloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_add_resources to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_add_data to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_put to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            719 (2% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            482 (67%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         237 (33%)
  Times precision was empty:       264 (37%)
  Times precision was {false}:     89 (12%)
  Times result was cached:         287 (40%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      79 (11%)
  Times result was 'false':        243 (34%)
Number of strengthen sat checks:   0
Number of coverage checks:         5129
  BDD entailment checks:           173
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       90
Number of predicates discovered:          7
Number of abstraction locations:          5
Max number of predicates per location:    6
Avg number of predicates per location:    4
Total predicates per abstraction:         1383
Max number of predicates per abstraction: 6
Avg number of predicates per abstraction: 8.23
Number of irrelevant predicates:          472 (34%)
Number of preds handled by boolean abs:   247 (18%)
  Total number of models for allsat:      81
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.03

Time for post operator:                  1.408s
  Time for path formula creation:        1.340s
Time for strengthen operator:            0.126s
Time for prec operator:                  1.188s
  Time for abstraction:                  1.082s (Max:     0.056s, Count: 719)
    Boolean abstraction:                 0.235s
    Solving time:                        0.267s (Max:     0.042s)
    Model enumeration time:              0.022s
    Time for BDD construction:           0.015s (Max:     0.008s)
Time for merge operator:                 0.241s
Time for coverage check:                 0.010s
  Time for BDD entailment checks:        0.008s
Total time for SMT solver (w/o itp):     0.289s

Number of path formula cache hits:   41535 (87%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     1.134s

Total number of created targets for pointer analysis: 4125
   Number of created targets for uf: *(struct_wl12xx_platform_data)* is 4
   Number of created targets for uf: *unsigned_char is 259
   Number of created targets for uf: *(struct_platform_device)* is 4
   Number of created targets for uf: *unsigned_int is 9
   Number of created targets for uf: *(struct_device)* is 6


Number of BDD nodes:                               272
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         311 (count: 1509, min: 0, max: 79, avg: 0.21)
Time for BDD node cleanup:                             0.001s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.238s
Automaton transfers with branching:                0
Automaton transfer successors:                        45099 (count: 45099, min: 1, max: 1, avg: 1.00) [1 x 45099]

CPA algorithm statistics
------------------------
Number of iterations:            27327
Max size of waitlist:            25
Average size of waitlist:        14
Number of computed successors:   30466
Max successors for one state:    2
Number of times merged:          2478
Number of times stopped:         2560
Number of times breaked:         22

Total time for CPA algorithm:         4.843s (Max:     0.760s)
  Time for choose from waitlist:      0.042s
  Time for precision adjustment:      1.511s
  Time for transfer relation:         2.450s
  Time for merge operator:            0.371s
  Time for stop operator:             0.110s
  Time for adding to reached set:     0.110s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   22
Avg. length of target path (in blocks):                  98 (count: 22, min: 2, max: 6, avg: 4.45)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.622s
  Counterexample analysis:                             0.470s (Max:     0.037s, Calls: 22)
    Refinement sat check:                              0.410s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.001s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.019s
  Precision update:                                    0.021s
  ARG update:                                          0.082s

Length of refined path (in blocks):                      94 (count: 22, min: 2, max: 6, avg: 4.27)
Number of affected states:                               72 (count: 22, min: 1, max: 5, avg: 3.27)
Length (states) of path with itp 'true':                  0 (count: 22, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:        72 (count: 22, min: 1, max: 5, avg: 3.27)
Length (states) of path with itp 'false':                 2 (count: 22, min: 0, max: 1, avg: 0.09)
Different non-trivial interpolants along paths:           0 (count: 22, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:              50 (count: 22, min: 0, max: 4, avg: 2.27)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                22
Number of successful refinements:     22
Number of failed refinements:         0
Max. size of reached set before ref.: 1589
Max. size of reached set after ref.:  23
Avg. size of reached set before ref.: 1225.50
Avg. size of reached set after ref.:  23.00

Total time for CEGAR algorithm:       5.574s
Time for refinements:                 0.726s
Average time for refinement:          0.033s
Max time for refinement:              0.060s

Code Coverage
-----------------------------
  Function coverage:      0.563
  Visited lines:          1477
  Total lines:            1589
  Line coverage:          0.930
  Visited conditions:     130
  Total conditions:       182
  Condition coverage:     0.714

CPAchecker general statistics
-----------------------------
Number of program locations:     1924
Number of CFA edges:             2020
Number of relevant variables:    155
Number of functions:             48
Number of loops:                 6
Size of reached set:             1209
  Number of reached locations:   404 (21%)
    Avg states per location:     2
    Max states per location:     15 (at node N6)
  Number of reached functions:   27 (56%)
  Number of partitions:          1208
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N578 (before line 7031), Function main called from node N539, stack depth 1 [60cf80e7], stack [main]])
  Number of target states:       0

Time for analysis setup:          3.042s
  Time for loading CPAs:          0.556s
  Time for loading parser:        0.419s
  Time for CFA construction:      1.987s
    Time for parsing file(s):     0.609s
    Time for AST to CFA:          0.716s
    Time for CFA sanity check:    0.106s
    Time for post-processing:     0.424s
      Time for var class.:        0.153s
Time for Analysis:                5.574s
CPU time for analysis:            5.570s
Time for analyzing result:        0.000s
Total time for CPAchecker:        8.620s
Total CPU time for CPAchecker:    8.610s
Time for statistics:              0.075s

Time for Garbage Collector:       0.176s (in 19 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 65MB (    62 MiB) max;     42MB (    40 MiB) avg;     69MB (    66 MiB) peak
Used non-heap memory:             36MB (    34 MiB) max;     30MB (    28 MiB) avg;     36MB (    35 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        38MB (    36 MiB) max;     32MB (    30 MiB) avg
Total process virtual memory:   8134MB (  7757 MiB) max;   8108MB (  7732 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
