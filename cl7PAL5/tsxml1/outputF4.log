scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.12-rc1/linux-3.12-rc1.tar.xz-144_2a-drivers--net--arcnet--com90xx.ko-entry_point_true-unreach-call.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_07jtl9ey/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 6748: Function pointer *completeFnBulk with type void (*)(struct urb *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6742: Function pointer *completeFnInt with type void (*)(struct urb *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __request_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __release_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ioremap_nocache to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iounmap to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function probe_irq_on to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function probe_irq_off to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function alloc_arcdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function request_threaded_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function register_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function unregister_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            3130 (4% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            2276 (73%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         854 (27%)
  Times precision was empty:       637 (20%)
  Times precision was {false}:     207 (7%)
  Times result was cached:         1972 (63%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      314 (10%)
  Times result was 'false':        956 (31%)
Number of strengthen sat checks:   0
Number of coverage checks:         14979
  BDD entailment checks:           1947
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       107
Number of predicates discovered:          9
Number of abstraction locations:          18
Max number of predicates per location:    7
Avg number of predicates per location:    5
Total predicates per abstraction:         10334
Max number of predicates per abstraction: 7
Avg number of predicates per abstraction: 19.83
Number of irrelevant predicates:          1905 (18%)
Number of preds handled by boolean abs:   1222 (12%)
  Total number of models for allsat:      316
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.01

Time for post operator:                  1.353s
  Time for path formula creation:        1.266s
Time for strengthen operator:            0.139s
Time for prec operator:                  3.161s
  Time for abstraction:                  3.005s (Max:     0.031s, Count: 3130)
    Boolean abstraction:                 1.149s
    Solving time:                        1.126s (Max:     0.028s)
    Model enumeration time:              0.059s
    Time for BDD construction:           0.047s (Max:     0.012s)
Time for merge operator:                 0.158s
Time for coverage check:                 0.027s
  Time for BDD entailment checks:        0.022s
Total time for SMT solver (w/o itp):     1.185s

Number of path formula cache hits:   70191 (90%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     1.098s

Total number of created targets for pointer analysis: 1266
   Number of created targets for uf: *(struct_net_device)* is 33
   Number of created targets for uf: *signed_int is 241
   Number of created targets for uf: *unsigned_long_int is 7


Number of BDD nodes:                               300
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         843 (count: 5855, min: 0, max: 160, avg: 0.14)
Time for BDD node cleanup:                             0.003s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.327s
Automaton transfers with branching:                0
Automaton transfer successors:                        69792 (count: 69792, min: 1, max: 1, avg: 1.00) [1 x 69792]

CPA algorithm statistics
------------------------
Number of iterations:            48884
Max size of waitlist:            15
Average size of waitlist:        8
Number of computed successors:   57661
Max successors for one state:    2
Number of times merged:          6516
Number of times stopped:         7572
Number of times breaked:         39

Total time for CPA algorithm:         7.388s (Max:     0.806s)
  Time for choose from waitlist:      0.062s
  Time for precision adjustment:      3.641s
  Time for transfer relation:         2.709s
  Time for merge operator:            0.355s
  Time for stop operator:             0.151s
  Time for adding to reached set:     0.093s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   39
Avg. length of target path (in blocks):                 371 (count: 39, min: 3, max: 18, avg: 9.51)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.776s
  Counterexample analysis:                             0.521s (Max:     0.052s, Calls: 39)
    Refinement sat check:                              0.409s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.020s
  Precision update:                                    0.041s
  ARG update:                                          0.161s

Length of refined path (in blocks):                     364 (count: 39, min: 3, max: 18, avg: 9.33)
Number of affected states:                              323 (count: 39, min: 2, max: 17, avg: 8.28)
Length (states) of path with itp 'true':                  2 (count: 39, min: 0, max: 2, avg: 0.05)
Length (states) of path with itp non-trivial itp:       323 (count: 39, min: 2, max: 17, avg: 8.28)
Length (states) of path with itp 'false':                 4 (count: 39, min: 0, max: 1, avg: 0.10)
Different non-trivial interpolants along paths:           0 (count: 39, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:             284 (count: 39, min: 1, max: 16, avg: 7.28)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                39
Number of successful refinements:     39
Number of failed refinements:         0
Max. size of reached set before ref.: 2125
Max. size of reached set after ref.:  251
Avg. size of reached set before ref.: 1171.59
Avg. size of reached set after ref.:  9.36

Total time for CEGAR algorithm:       8.302s
Time for refinements:                 0.914s
Average time for refinement:          0.023s
Max time for refinement:              0.070s

Code Coverage
-----------------------------
  Function coverage:      0.456
  Visited lines:          1598
  Total lines:            1795
  Line coverage:          0.890
  Visited conditions:     323
  Total conditions:       392
  Condition coverage:     0.824

CPAchecker general statistics
-----------------------------
Number of program locations:     2319
Number of CFA edges:             2523
Number of relevant variables:    200
Number of functions:             57
Number of loops:                 20
Size of reached set:             3807
  Number of reached locations:   795 (34%)
    Avg states per location:     4
    Max states per location:     70 (at node N111)
  Number of reached functions:   26 (46%)
  Number of partitions:          3786
    Avg size of partitions:      1
    Max size of partitions:      3 (with key [N256 (before line 5388), Function com90xx_probe called from node N1055, stack depth 3 [189738f4], stack [main, com90xx_init, com90xx_probe]])
  Number of target states:       0

Time for analysis setup:          3.295s
  Time for loading CPAs:          0.693s
  Time for loading parser:        0.435s
  Time for CFA construction:      2.084s
    Time for parsing file(s):     0.576s
    Time for AST to CFA:          0.719s
    Time for CFA sanity check:    0.123s
    Time for post-processing:     0.532s
      Time for var class.:        0.167s
Time for Analysis:                8.310s
CPU time for analysis:            8.310s
Time for analyzing result:        0.002s
Total time for CPAchecker:       11.607s
Total CPU time for CPAchecker:   11.600s
Time for statistics:              0.103s

Time for Garbage Collector:       0.230s (in 28 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 66MB (    63 MiB) max;     43MB (    41 MiB) avg;     69MB (    66 MiB) peak
Used non-heap memory:             38MB (    36 MiB) max;     32MB (    30 MiB) avg;     38MB (    36 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        40MB (    38 MiB) max;     33MB (    32 MiB) avg
Total process virtual memory:   8134MB (  7757 MiB) max;   8112MB (  7736 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
