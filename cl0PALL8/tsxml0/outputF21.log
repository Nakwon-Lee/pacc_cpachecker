scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.0/usb_urb-drivers-input-tablet-kbtab.ko_true-unreach-call.cil.out.i.pp.i


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_usp5qyvr/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 4119: Dead code detected: Goto: while_break (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label while_break is not reachable. (CFAFunctionBuilder.leave, INFO)

line 4182: Dead code detected: Goto: while_break (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label while_break is not reachable. (CFAFunctionBuilder.leave, INFO)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_unregister_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_undefined_pointer to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snprintf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strlcat to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_set_abs_params to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_register_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_free_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_deregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            144 (3% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            74 (51%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         70 (49%)
  Times precision was empty:       60 (42%)
  Times precision was {false}:     67 (47%)
  Times result was cached:         0 (0%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      17 (12%)
  Times result was 'false':        61 (42%)
Number of strengthen sat checks:   0
Number of coverage checks:         473
  BDD entailment checks:           25
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       101
Number of predicates discovered:          15
Number of abstraction locations:          2
Max number of predicates per location:    15
Avg number of predicates per location:    8
Total predicates per abstraction:         207
Max number of predicates per abstraction: 15
Avg number of predicates per abstraction: 2.46
Number of irrelevant predicates:          75 (36%)
Number of preds handled by boolean abs:   132 (64%)
  Total number of models for allsat:      37
  Max number of models for allsat:        5
  Avg number of models for allsat:        2.18

Time for post operator:                  0.618s
  Time for path formula creation:        0.604s
Time for strengthen operator:            0.028s
Time for prec operator:                  1.054s
  Time for abstraction:                  0.993s (Max:     0.048s, Count: 144)
    Boolean abstraction:                 0.284s
    Solving time:                        0.518s (Max:     0.024s)
    Model enumeration time:              0.058s
    Time for BDD construction:           0.025s (Max:     0.008s)
Time for merge operator:                 0.091s
Time for coverage check:                 0.001s
  Time for BDD entailment checks:        0.000s
Total time for SMT solver (w/o itp):     0.576s

Number of path formula cache hits:   3568 (66%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.532s

Total number of created targets for pointer analysis: 24
   Number of created targets for uf: *(struct_input_dev)* is 7
   Number of created targets for uf: *(struct_urb)* is 7
   Number of created targets for uf: *(unsigned_char)* is 7
   Number of created targets for uf: *(struct_device)* is 7


Number of BDD nodes:                               574
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         453 (count: 765, min: 0, max: 336, avg: 0.59)
Time for BDD node cleanup:                             0.001s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.125s
Automaton transfers with branching:                0
Automaton transfer successors:                         5157 (count: 5157, min: 1, max: 1, avg: 1.00) [1 x 5157]

CPA algorithm statistics
------------------------
Number of iterations:            3180
Max size of waitlist:            22
Average size of waitlist:        10
Number of computed successors:   3546
Max successors for one state:    2
Number of times merged:          224
Number of times stopped:         235
Number of times breaked:         9

Total time for CPA algorithm:         2.549s (Max:     0.743s)
  Time for choose from waitlist:      0.008s
  Time for precision adjustment:      1.190s
  Time for transfer relation:         1.087s
  Time for merge operator:            0.114s
  Time for stop operator:             0.019s
  Time for adding to reached set:     0.051s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   9
Avg. length of target path (in blocks):                  20 (count: 9, min: 1, max: 4, avg: 2.22)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.237s
  Counterexample analysis:                             0.180s (Max:     0.069s, Calls: 9)
    Refinement sat check:                              0.130s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.019s
  Precision update:                                    0.005s
  ARG update:                                          0.014s

Length of refined path (in blocks):                      20 (count: 9, min: 1, max: 4, avg: 2.22)
Number of affected states:                               11 (count: 9, min: 0, max: 3, avg: 1.22)
Length (states) of path with itp 'true':                  0 (count: 9, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:        11 (count: 9, min: 0, max: 3, avg: 1.22)
Length (states) of path with itp 'false':                 0 (count: 9, min: 0, max: 0, avg: 0.00)
Different non-trivial interpolants along paths:           4 (count: 9, min: 0, max: 2, avg: 0.44)
Equal non-trivial interpolants along paths:               0 (count: 9, min: 0, max: 0, avg: 0.00)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                9
Number of successful refinements:     9
Number of failed refinements:         0
Max. size of reached set before ref.: 855
Max. size of reached set after ref.:  36
Avg. size of reached set before ref.: 331.00
Avg. size of reached set after ref.:  34.67

Total time for CEGAR algorithm:       2.804s
Time for refinements:                 0.254s
Average time for refinement:          0.028s
Max time for refinement:              0.078s

Code Coverage
-----------------------------
  Function coverage:      0.686
  Visited lines:          759
  Total lines:            845
  Line coverage:          0.898
  Visited conditions:     54
  Total conditions:       70
  Condition coverage:     0.771

CPAchecker general statistics
-----------------------------
Number of program locations:     1038
Number of CFA edges:             1080
Number of relevant variables:    87
Number of functions:             35
Number of loops:                 2
Size of reached set:             584
  Number of reached locations:   228 (22%)
    Avg states per location:     2
    Max states per location:     14 (at node N436)
  Number of reached functions:   24 (69%)
  Number of partitions:          583
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N376 (before lines 4006-4062), Function main called from node N360, stack depth 1 [5e01a982], stack [main]])
  Number of target states:       0

Time for analysis setup:          3.296s
  Time for loading CPAs:          0.710s
  Time for loading parser:        0.604s
  Time for CFA construction:      1.830s
    Time for parsing file(s):     0.633s
    Time for AST to CFA:          0.594s
    Time for CFA sanity check:    0.100s
    Time for post-processing:     0.339s
      Time for var class.:        0.120s
Time for Analysis:                2.804s
CPU time for analysis:            2.790s
Time for analyzing result:        0.000s
Total time for CPAchecker:        6.103s
Total CPU time for CPAchecker:    6.080s
Time for statistics:              0.085s

Time for Garbage Collector:       0.141s (in 8 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 58MB (    55 MiB) max;     34MB (    32 MiB) avg;     66MB (    63 MiB) peak
Used non-heap memory:             33MB (    32 MiB) max;     27MB (    26 MiB) avg;     34MB (    33 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        36MB (    34 MiB) max;     29MB (    28 MiB) avg
Total process virtual memory:   8132MB (  7755 MiB) max;   8087MB (  7713 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
