scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.0/usb_urb-drivers-uwb-i1480-dfu-i1480-dfu-usb.ko_true-unreach-call.cil.out.i.pp.i


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run__1hxf8hk/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 3389: Dead code detected: Goto: while_break (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label while_break is not reachable. (CFAFunctionBuilder.leave, INFO)

line 3452: Dead code detected: Goto: while_break (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label while_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 3320: Function pointer *(i1480->rc_release) with type void (*)(struct i1480 *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_set_interface to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_warn to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __init_waitqueue_head to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_get_dev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_get_intf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_undefined_pointer to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_put_intf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_put_dev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function request_firmware to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 3896: Ignoring function call through function pointer *(i1480->read): result = (*(i1480->read))(i1480, reg, 4); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 3905: Ignoring function call through function pointer *(i1480->write): result = (*(i1480->write))(i1480, reg, (const void *)buffer, 4); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _dev_info to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function release_firmware to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function msleep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 3243: Ignoring function call through function pointer *(i1480->read): result = (*(i1480->read))(i1480, 2148007936U, 8UL); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 3320: Ignoring function call through function pointer *(i1480->rc_release): (*(i1480->rc_release))(i1480); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function usb_reset_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_kill_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_printk to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_deregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_control_msg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 3935: Ignoring function call through function pointer *(i1480->read): result = (*(i1480->read))(i1480, reg, 4); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 3944: Ignoring function call through function pointer *(i1480->write): result = (*(i1480->write))(i1480, reg, (const void *)buffer, 4); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

lines 3826-3827: Ignoring function call through function pointer *(i1480->write): tmp___0 = (*(i1480->write))(i1480, __CPAchecker_TMP_0, __CPAchecker_TMP_1, (hdr_itr->length) * 4); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

lines 3712-3713: Ignoring function call through function pointer *(i1480->read): tmp = (*(i1480->read))(i1480, (u32 )((hdr->address) + ((unsigned long)src_itr)), chunk_size); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function memcmp to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 4093: Ignoring function call through function pointer *(i1480->read): result = (*(i1480->read))(i1480, 2148007936U, (size_t )4); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 4167: Ignoring function call through function pointer *(i1480->rc_setup): tmp = (*(i1480->rc_setup))(i1480); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Recursion detected, aborting. To ignore recursion, add -skipRecursion to the command line. (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, INFO)

Error: line 4167: Unsupported feature (recursion): tmp = i1480_fw_upload(i1480); (line was originally pointer call(i1480_fw_upload) tmp = (*(i1480->rc_setup))(i1480);) (CallstackTransferRelation.getAbstractSuccessorsForEdge, SEVERE)

PredicateCPA statistics
-----------------------
Number of abstractions:            5619 (5% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            5423 (97%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         196 (3%)
  Times precision was empty:       4201 (75%)
  Times precision was {false}:     420 (7%)
  Times result was cached:         761 (14%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      237 (4%)
  Times result was 'false':        719 (13%)
Number of strengthen sat checks:   0
Number of coverage checks:         11183
  BDD entailment checks:           1519
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       253
Number of predicates discovered:          17
Number of abstraction locations:          7
Max number of predicates per location:    8
Avg number of predicates per location:    3
Total predicates per abstraction:         6318
Max number of predicates per abstraction: 8
Avg number of predicates per abstraction: 9.62
Number of irrelevant predicates:          4218 (67%)
Number of preds handled by boolean abs:   989 (16%)
  Total number of models for allsat:      311
  Max number of models for allsat:        8
  Avg number of models for allsat:        1.31

Time for post operator:                  4.961s
  Time for path formula creation:        4.899s
Time for strengthen operator:            0.117s
Time for prec operator:                  8.315s
  Time for abstraction:                  7.965s (Max:     0.160s, Count: 5619)
    Boolean abstraction:                 2.998s
    Solving time:                        4.583s (Max:     0.138s)
    Model enumeration time:              0.501s
    Time for BDD construction:           0.115s (Max:     0.014s)
Time for merge operator:                 0.474s
Time for coverage check:                 0.041s
  Time for BDD entailment checks:        0.039s
Total time for SMT solver (w/o itp):     5.084s

Number of path formula cache hits:   60032 (52%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     4.407s

Total number of created targets for pointer analysis: 262
   Number of created targets for uf: *(void)* is 2
   Number of created targets for uf: *(Return_type:_[signed_int],_Parameters:_3,_Parameter_1_type:_[(struct_i1480)*],_Parameter_2_type:_[(char)*],_Parameter_3_type:_[unsigned_long_int],_VarArgs:_false)* is 2
   Number of created targets for uf: *(struct_usb_device)* is 2
   Number of created targets for uf: *(Return_type:_[signed_int],_Parameters:_3,_Parameter_1_type:_[(struct_i1480)*],_Parameter_2_type:_[unsigned_int],_Parameter_3_type:_[unsigned_long_int],_VarArgs:_false)* is 2
   Number of created targets for uf: *(unsigned_int)* is 10
   Number of created targets for uf: *(Return_type:_[signed_int],_Parameters:_1,_Parameter_1_type:_[(struct_i1480)*],_VarArgs:_false)* is 3
   Number of created targets for uf: *unsigned_long_int is 2
   Number of created targets for uf: *(Return_type:_[signed_int],_Parameters:_4,_Parameter_1_type:_[(struct_i1480)*],_Parameter_2_type:_[unsigned_int],_Parameter_3_type:_[(void)*],_Parameter_4_type:_[unsigned_long_int],_VarArgs:_false)* is 2
   Number of created targets for uf: *(char)* is 5
   Number of created targets for uf: *unsigned_char is 2
   Number of created targets for uf: *(struct_urb)* is 2
   Number of created targets for uf: *(struct_usb_interface)* is 2
   Number of created targets for uf: *(struct_fw_hdr)* is 13
   Number of created targets for uf: *unsigned_int is 23
   Number of created targets for uf: *(struct_device)* is 2


Number of BDD nodes:                               365
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         668 (count: 9629, min: 0, max: 136, avg: 0.07)
Time for BDD node cleanup:                             0.010s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.374s
Automaton transfers with branching:                0
Automaton transfer successors:                       111536 (count: 111536, min: 1, max: 1, avg: 1.00) [1 x 111536]

CPA algorithm statistics
------------------------
Number of iterations:            66327
Max size of waitlist:            246
Average size of waitlist:        114
Number of computed successors:   75307
Max successors for one state:    2
Number of times merged:          4832
Number of times stopped:         6333
Number of times breaked:         28

Total time for CPA algorithm:        17.986s (Max:     2.935s)
  Time for choose from waitlist:      0.088s
  Time for precision adjustment:      9.186s
  Time for transfer relation:         6.940s
  Time for merge operator:            0.697s
  Time for stop operator:             0.249s
  Time for adding to reached set:     0.260s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   28
Avg. length of target path (in blocks):                 109 (count: 28, min: 1, max: 5, avg: 3.89)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   1.404s
  Counterexample analysis:                             1.014s (Max:     0.058s, Calls: 28)
    Refinement sat check:                              0.854s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.001s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.016s
  Precision update:                                    0.020s
  ARG update:                                          0.324s

Length of refined path (in blocks):                      70 (count: 28, min: 1, max: 4, avg: 2.50)
Number of affected states:                               21 (count: 28, min: 0, max: 3, avg: 0.75)
Length (states) of path with itp 'true':                 21 (count: 28, min: 0, max: 1, avg: 0.75)
Length (states) of path with itp non-trivial itp:        21 (count: 28, min: 0, max: 3, avg: 0.75)
Length (states) of path with itp 'false':                21 (count: 28, min: 0, max: 1, avg: 0.75)
Different non-trivial interpolants along paths:           3 (count: 28, min: 0, max: 2, avg: 0.11)
Equal non-trivial interpolants along paths:               1 (count: 28, min: 0, max: 1, avg: 0.04)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                28
Number of successful refinements:     28
Number of failed refinements:         0
Max. size of reached set before ref.: 11083
Max. size of reached set after ref.:  7022
Avg. size of reached set before ref.: 4901.46
Avg. size of reached set after ref.:  2711.82

Total time for CEGAR algorithm:      19.838s
Time for refinements:                 1.764s
Average time for refinement:          0.063s
Max time for refinement:              0.129s

Code Coverage
-----------------------------
  Function coverage:      0.660
  Visited lines:          1041
  Total lines:            1568
  Line coverage:          0.664
  Visited conditions:     134
  Total conditions:       306
  Condition coverage:     0.438

CPAchecker general statistics
-----------------------------
Number of program locations:     2135
Number of CFA edges:             2317
Number of relevant variables:    295
Number of functions:             50
Number of loops:                 19
Size of reached set:             6946
  Number of reached locations:   471 (22%)
    Avg states per location:     14
    Max states per location:     59 (at node N1258)
  Number of reached functions:   33 (66%)
  Number of partitions:          6943
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N393 (before lines 3631-3664), Function fw_hdrs_load called from node N654, stack depth 6 [1860a7a1], stack [main, i1480_usb_probe, i1480_fw_upload, i1480_pre_fw_upload, __mac_fw_upload, fw_hdrs_load]])
  Number of target states:       0
  Size of final wait list        143

Time for analysis setup:          3.678s
  Time for loading CPAs:          0.704s
  Time for loading parser:        0.515s
  Time for CFA construction:      2.362s
    Time for parsing file(s):     0.740s
    Time for AST to CFA:          0.820s
    Time for CFA sanity check:    0.109s
    Time for post-processing:     0.519s
      Time for var class.:        0.242s
Time for Analysis:               19.838s
CPU time for analysis:           19.840s
Total time for CPAchecker:       23.531s
Total CPU time for CPAchecker:   23.520s
Time for statistics:              0.199s

Time for Garbage Collector:       0.742s (in 41 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 97MB (    92 MiB) max;     53MB (    50 MiB) avg;    101MB (    96 MiB) peak
Used non-heap memory:             41MB (    39 MiB) max;     35MB (    34 MiB) avg;     41MB (    39 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        42MB (    40 MiB) max;     37MB (    35 MiB) avg
Total process virtual memory:   8067MB (  7693 MiB) max;   8056MB (  7683 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
