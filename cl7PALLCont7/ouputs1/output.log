scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/linux-3.8-rc1-32_7a-drivers--input--misc--uinput.ko-ldv_main0_true-unreach-call.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_nn0j7n7a/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 3102: Dead code detected: __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

line 3105: Dead code detected: __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

line 3108: Dead code detected: __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (8UL) {
  case 1UL:
  __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& current_task));
  goto ldv_2869;
  case 2UL:
  __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_2869;
  case 4UL:
  __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_2869;
  case 8UL:
  __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_2869;
  default:
  __bad_percpu_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 3177: Dead code detected: __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& kernel_stack)); (CFACreationUtils.addEdgeToCFA, INFO)

line 3180: Dead code detected: __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack)); (CFACreationUtils.addEdgeToCFA, INFO)

line 3183: Dead code detected: __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (8UL) {
  case 1UL:
  __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& kernel_stack));
  goto ldv_6226;
  case 2UL:
  __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack));
  goto ldv_6226;
  case 4UL:
  __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack));
  goto ldv_6226;
  case 8UL:
  __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack));
  goto ldv_6226;
  default:
  __bad_percpu_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 4975: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 4999: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 5023: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 5047: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 5071: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 3344: Function pointer *(p->_qproc) with type void (*)(struct file *, wait_queue_head_t *, struct poll_table_struct *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_handler_precall to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function misc_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 3300: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((const void *)to, 0); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function __builtin_object_size to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function might_fault to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_fmt to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _copy_from_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __wake_up to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function complete to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _copy_to_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strndup_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_free_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_unregister_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_ff_create to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_register_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_ff_destroy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 3344: Ignoring function call through function pointer *(p->_qproc): (*(p->_qproc))(filp, wait_address, p); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function memdup_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function kstrndup to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_mt_init_slots to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_alloc_absinfo to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_event_from_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_event to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_event_to_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __mutex_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __raw_spin_lock_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __init_waitqueue_head to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function nonseekable_open to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function prepare_to_wait to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function schedule to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function finish_wait to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function misc_deregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            74006 (3% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            49279 (67%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         24727 (33%)
  Times precision was empty:       129 (0%)
  Times precision was {false}:     22281 (30%)
  Times result was cached:         42849 (58%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      8747 (12%)
  Times result was 'false':        47203 (64%)
Number of strengthen sat checks:   0
Number of coverage checks:         751192
  BDD entailment checks:           514890
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       212
Number of predicates discovered:          96
Number of abstraction locations:          8
Max number of predicates per location:    67
Avg number of predicates per location:    15
Total predicates per abstraction:         1127152
Max number of predicates per abstraction: 67
Avg number of predicates per abstraction: 36.33
Number of irrelevant predicates:          62867 (6%)
Number of preds handled by boolean abs:   269392 (24%)
  Total number of models for allsat:      136572
  Max number of models for allsat:        65
  Avg number of models for allsat:        15.61

Time for post operator:                 15.114s
  Time for path formula creation:       14.436s
Time for strengthen operator:            1.587s
Time for prec operator:                190.174s
  Time for abstraction:                188.468s (Max:     0.408s, Count: 74006)
    Boolean abstraction:                68.752s
    Solving time:                       82.518s (Max:     0.135s)
    Model enumeration time:             20.799s
    Time for BDD construction:           8.562s (Max:     0.059s)
Time for merge operator:                 1.794s
Time for coverage check:                 2.152s
  Time for BDD entailment checks:        2.080s
Total time for SMT solver (w/o itp):   103.317s

Number of path formula cache hits:   2528155 (92%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     9.456s

Total number of created targets for pointer analysis: 2445
   Number of created targets for uf: *(char)* is 38
   Number of created targets for uf: *enum_uinput_state is 1051
   Number of created targets for uf: *unsigned_int is 149


Number of BDD nodes:                               269224
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                      276647 (count: 806244, min: 0, max: 5808, avg: 0.34)
Time for BDD node cleanup:                             0.114s
Time for BDD garbage collection:                       0.154s (in 26 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  2.782s
  Time for transition matches:                         1.387s
  Time for transition assertions:                      0.002s
  Time for transition actions:                         0.026s
Automaton transfers with branching:                0
Automaton transfer successors:                      2611801 (count: 2611801, min: 1, max: 1, avg: 1.00) [1 x 2611801]

CPA algorithm statistics
------------------------
Number of iterations:            1854634
Max size of waitlist:            476
Average size of waitlist:        101
Number of computed successors:   2043883
Max successors for one state:    2
Number of times merged:          118151
Number of times stopped:         120068
Number of times breaked:         604

Total time for CPA algorithm:       239.956s (Max:     8.248s)
  Time for choose from waitlist:      0.450s
  Time for precision adjustment:    197.389s
  Time for transfer relation:        30.801s
  Time for merge operator:            2.959s
  Time for stop operator:             3.546s
  Time for adding to reached set:     1.797s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   604
Avg. length of target path (in blocks):               22127 (count: 604, min: 1, max: 87, avg: 36.63)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  61.780s
  Counterexample analysis:                            58.172s (Max:     0.422s, Calls: 604)
    Refinement sat check:                             41.229s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.017s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.155s
  Precision update:                                    0.159s
  ARG update:                                          2.458s

Length of refined path (in blocks):                   21432 (count: 604, min: 1, max: 87, avg: 35.48)
Number of affected states:                            17031 (count: 604, min: 0, max: 72, avg: 28.20)
Length (states) of path with itp 'true':               3797 (count: 604, min: 0, max: 22, avg: 6.29)
Length (states) of path with itp non-trivial itp:     17031 (count: 604, min: 0, max: 72, avg: 28.20)
Length (states) of path with itp 'false':                20 (count: 604, min: 0, max: 1, avg: 0.03)
Different non-trivial interpolants along paths:       12821 (count: 604, min: 0, max: 63, avg: 21.23)
Equal non-trivial interpolants along paths:            3609 (count: 604, min: 0, max: 71, avg: 5.98)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                604
Number of successful refinements:     604
Number of failed refinements:         0
Max. size of reached set before ref.: 44887
Max. size of reached set after ref.:  34666
Avg. size of reached set before ref.: 10871.50
Avg. size of reached set after ref.:  7804.42

Total time for CEGAR algorithm:     313.148s
Time for refinements:                70.652s
Average time for refinement:          0.116s
Max time for refinement:              0.720s

Code Coverage
-----------------------------
  Function coverage:      0.651
  Visited lines:          1450
  Total lines:            1738
  Line coverage:          0.834
  Visited conditions:     326
  Total conditions:       418
  Condition coverage:     0.780

CPAchecker general statistics
-----------------------------
Number of program locations:     2425
Number of CFA edges:             2701
Number of relevant variables:    375
Number of functions:             109
Number of loops:                 9
Size of reached set:             24099
  Number of reached locations:   940 (39%)
    Avg states per location:     25
    Max states per location:     468 (at node N1686)
  Number of reached functions:   71 (65%)
  Number of partitions:          23888
    Avg size of partitions:      1
    Max size of partitions:      65 (with key [N795 (before line 4113), Function uinput_setup_device called from node N866, stack depth 3 [1415731b], stack [main, uinput_write, uinput_setup_device]])
  Number of target states:       0

Time for analysis setup:          3.592s
  Time for loading CPAs:          0.661s
  Time for loading parser:        0.483s
  Time for CFA construction:      2.326s
    Time for parsing file(s):     0.640s
    Time for AST to CFA:          0.827s
    Time for CFA sanity check:    0.167s
    Time for post-processing:     0.523s
      Time for var class.:        0.232s
Time for Analysis:              313.148s
CPU time for analysis:          313.150s
Time for analyzing result:        0.024s
Total time for CPAchecker:      316.743s
Total CPU time for CPAchecker:  316.730s
Time for statistics:              0.256s

Time for Garbage Collector:      10.612s (in 914 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                307MB (   293 MiB) max;    129MB (   123 MiB) avg;    318MB (   304 MiB) peak
Used non-heap memory:             40MB (    38 MiB) max;     39MB (    37 MiB) avg;     41MB (    39 MiB) peak
Allocated heap memory:           322MB (   308 MiB) max;    193MB (   184 MiB) avg
Allocated non-heap memory:        42MB (    40 MiB) max;     42MB (    40 MiB) avg
Total process virtual memory:   9627MB (  9181 MiB) max;   8664MB (  8262 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
