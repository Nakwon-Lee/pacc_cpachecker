scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-regression/ex3_forlist_true-termination.c_true-unreach-call.i


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_nd_r_rbg/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            768 (29% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  473 (62%)
  Because of loop head:            282 (37%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         13 (2%)
  Times precision was empty:       226 (29%)
  Times precision was {false}:     82 (11%)
  Times result was cached:         112 (15%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      348 (45%)
  Times result was 'false':        127 (17%)
Number of strengthen sat checks:   0
Number of coverage checks:         660
  BDD entailment checks:           538
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       5
Number of predicates discovered:          42
Number of abstraction locations:          15
Max number of predicates per location:    17
Avg number of predicates per location:    8
Total predicates per abstraction:         2599
Max number of predicates per abstraction: 17
Avg number of predicates per abstraction: 6.04
Number of irrelevant predicates:          423 (16%)
Number of preds handled by boolean abs:   1954 (75%)
  Total number of models for allsat:      1657
  Max number of models for allsat:        124
  Avg number of models for allsat:        4.76

Time for post operator:                  0.314s
  Time for path formula creation:        0.309s
Time for strengthen operator:            0.018s
Time for prec operator:                  1.930s
  Time for abstraction:                  1.885s (Max:     0.043s, Count: 768)
    Boolean abstraction:                 0.984s
    Solving time:                        0.459s (Max:     0.013s)
    Model enumeration time:              0.333s
    Time for BDD construction:           0.112s (Max:     0.013s)
Time for merge operator:                 0.016s
Time for coverage check:                 0.006s
  Time for BDD entailment checks:        0.006s
Total time for SMT solver (w/o itp):     0.792s

Number of path formula cache hits:   2299 (73%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.293s

Total number of created targets for pointer analysis: 86
   Number of created targets for uf: *(void)* is 7
   Number of created targets for uf: *signed_int is 23


Number of BDD nodes:                               8472
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        3995 (count: 5106, min: 0, max: 2895, avg: 0.78)
Time for BDD node cleanup:                             0.001s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.064s
Automaton transfers with branching:                0
Automaton transfer successors:                         2693 (count: 2693, min: 1, max: 1, avg: 1.00) [1 x 2693]

CPA algorithm statistics
------------------------
Number of iterations:            1957
Max size of waitlist:            12
Average size of waitlist:        3
Number of computed successors:   2372
Max successors for one state:    2
Number of times merged:          61
Number of times stopped:         244
Number of times breaked:         13

Total time for CPA algorithm:         2.742s (Max:     0.497s)
  Time for choose from waitlist:      0.015s
  Time for precision adjustment:      2.021s
  Time for transfer relation:         0.585s
  Time for merge operator:            0.040s
  Time for stop operator:             0.027s
  Time for adding to reached set:     0.020s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   13
Avg. length of target path (in blocks):                 288 (count: 13, min: 17, max: 29, avg: 22.15)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.266s
  Counterexample analysis:                             0.202s (Max:     0.031s, Calls: 13)
    Refinement sat check:                              0.093s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.032s
  Precision update:                                    0.006s
  ARG update:                                          0.015s

Length of refined path (in blocks):                     230 (count: 13, min: 3, max: 28, avg: 17.69)
Number of affected states:                              131 (count: 13, min: 1, max: 25, avg: 10.08)
Length (states) of path with itp 'true':                 86 (count: 13, min: 0, max: 23, avg: 6.62)
Length (states) of path with itp non-trivial itp:       131 (count: 13, min: 1, max: 25, avg: 10.08)
Length (states) of path with itp 'false':                13 (count: 13, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:          65 (count: 13, min: 0, max: 13, avg: 5.00)
Equal non-trivial interpolants along paths:              53 (count: 13, min: 0, max: 12, avg: 4.08)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                13
Number of successful refinements:     13
Number of failed refinements:         0
Max. size of reached set before ref.: 248
Max. size of reached set after ref.:  171
Avg. size of reached set before ref.: 165.23
Avg. size of reached set after ref.:  27.62

Total time for CEGAR algorithm:       3.034s
Time for refinements:                 0.292s
Average time for refinement:          0.022s
Max time for refinement:              0.043s

Code Coverage
-----------------------------
  Function coverage:      0.833
  Visited lines:          31
  Total lines:            32
  Line coverage:          0.969
  Visited conditions:     16
  Total conditions:       16
  Condition coverage:     1.000

CPAchecker general statistics
-----------------------------
Number of program locations:     76
Number of CFA edges:             86
Number of relevant variables:    12
Number of functions:             6
Number of loops:                 3
Size of reached set:             213
  Number of reached locations:   47 (62%)
    Avg states per location:     4
    Max states per location:     16 (at node N36)
  Number of reached functions:   5 (83%)
  Number of partitions:          198
    Avg size of partitions:      1
    Max size of partitions:      4 (with key [N35 (before line 36), Function g called from node N66, stack depth 2 [267dc982], stack [main, g]])
  Number of target states:       0

Time for analysis setup:          1.674s
  Time for loading CPAs:          0.449s
  Time for loading parser:        0.515s
  Time for CFA construction:      0.636s
    Time for parsing file(s):     0.216s
    Time for AST to CFA:          0.181s
    Time for CFA sanity check:    0.018s
    Time for post-processing:     0.103s
      Time for var class.:        0.037s
Time for Analysis:                3.034s
CPU time for analysis:            3.040s
Time for analyzing result:        0.000s
Total time for CPAchecker:        4.715s
Total CPU time for CPAchecker:    4.710s
Time for statistics:              0.042s

Time for Garbage Collector:       0.077s (in 6 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 58MB (    55 MiB) max;     34MB (    33 MiB) avg;     62MB (    59 MiB) peak
Used non-heap memory:             33MB (    31 MiB) max;     27MB (    26 MiB) avg;     34MB (    33 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        35MB (    34 MiB) max;     29MB (    27 MiB) avg
Total process virtual memory:   8085MB (  7711 MiB) max;   8042MB (  7670 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
