scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/elevator_spec1_product11_true-unreach-call_true-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_nnd1q_a8/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 78: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 117: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 156: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 446: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 595: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 604: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 638: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 647: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 687: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 767: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 780: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1132: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1161: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1195: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1251: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1282: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1296: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1868: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1879: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1888: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1903: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1926: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2348: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2394: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2744: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2858: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3098: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3409: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2185: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            83 (0% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            22 (27%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         61 (73%)
  Times precision was empty:       3 (4%)
  Times precision was {false}:     60 (72%)
  Times result was cached:         0 (0%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      20 (24%)
  Times result was 'false':        55 (66%)
Number of strengthen sat checks:   0
Number of coverage checks:         33899
  BDD entailment checks:           27
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       907
Number of predicates discovered:          58
Number of abstraction locations:          2
Max number of predicates per location:    58
Avg number of predicates per location:    29
Total predicates per abstraction:         763
Max number of predicates per abstraction: 58
Avg number of predicates per abstraction: 9.54
Number of irrelevant predicates:          68 (9%)
Number of preds handled by boolean abs:   695 (91%)
  Total number of models for allsat:      447
  Max number of models for allsat:        128
  Avg number of models for allsat:        22.35

Time for post operator:                  3.084s
  Time for path formula creation:        2.941s
Time for strengthen operator:            0.156s
Time for prec operator:                 11.040s
  Time for abstraction:                 10.764s (Max:     1.376s, Count: 83)
    Boolean abstraction:                 9.144s
    Solving time:                        4.382s (Max:     0.393s)
    Model enumeration time:              4.725s
    Time for BDD construction:           0.188s (Max:     0.070s)
Time for merge operator:                 0.644s
Time for coverage check:                 0.024s
  Time for BDD entailment checks:        0.015s
Total time for SMT solver (w/o itp):     9.107s

Number of path formula cache hits:   68820 (73%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     2.807s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               76518
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        5313 (count: 3738, min: 0, max: 2250, avg: 1.42)
Time for BDD node cleanup:                             0.005s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.506s
  Time for transition matches:                         0.204s
  Time for transition assertions:                      0.001s
  Time for transition actions:                         0.000s
Automaton transfers with branching:                0
Automaton transfer successors:                        82687 (count: 82687, min: 1, max: 1, avg: 1.00) [1 x 82687]

CPA algorithm statistics
------------------------
Number of iterations:            61273
Max size of waitlist:            15
Average size of waitlist:        7
Number of computed successors:   78286
Max successors for one state:    2
Number of times merged:          16936
Number of times stopped:         16938
Number of times breaked:         6

Total time for CPA algorithm:        21.024s (Max:     4.624s)
  Time for choose from waitlist:      0.192s
  Time for precision adjustment:     12.219s
  Time for transfer relation:         5.707s
  Time for merge operator:            1.345s
  Time for stop operator:             0.287s
  Time for adding to reached set:     0.358s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   6
Avg. length of target path (in blocks):                  19 (count: 6, min: 2, max: 5, avg: 3.17)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   4.409s
  Counterexample analysis:                             4.004s (Max:     1.096s, Calls: 6)
    Refinement sat check:                              3.573s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.037s
  Precision update:                                    0.004s
  ARG update:                                          0.263s

Length of refined path (in blocks):                      19 (count: 6, min: 2, max: 5, avg: 3.17)
Number of affected states:                               13 (count: 6, min: 1, max: 4, avg: 2.17)
Length (states) of path with itp 'true':                  0 (count: 6, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:        13 (count: 6, min: 1, max: 4, avg: 2.17)
Length (states) of path with itp 'false':                 0 (count: 6, min: 0, max: 0, avg: 0.00)
Different non-trivial interpolants along paths:           7 (count: 6, min: 0, max: 3, avg: 1.17)
Equal non-trivial interpolants along paths:               0 (count: 6, min: 0, max: 0, avg: 0.00)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                6
Number of successful refinements:     6
Number of failed refinements:         0
Max. size of reached set before ref.: 18906
Max. size of reached set after ref.:  3936
Avg. size of reached set before ref.: 12030.00
Avg. size of reached set after ref.:  3936.00

Total time for CEGAR algorithm:      25.901s
Time for refinements:                 4.847s
Average time for refinement:          0.807s
Max time for refinement:              1.248s

Code Coverage
-----------------------------
  Function coverage:      0.608
  Visited lines:          1025
  Total lines:            1718
  Line coverage:          0.597
  Visited conditions:     600
  Total conditions:       756
  Condition coverage:     0.794

CPAchecker general statistics
-----------------------------
Number of program locations:     2256
Number of CFA edges:             2749
Number of relevant variables:    300
Number of functions:             74
Number of loops:                 9
Size of reached set:             12729
  Number of reached locations:   1157 (51%)
    Avg states per location:     11
    Max states per location:     93 (at node N2152)
  Number of reached functions:   45 (61%)
  Number of partitions:          12727
    Avg size of partitions:      1
    Max size of partitions:      3 (with key [N1975 (before lines 2541-2569), Function cleanup called from node N115, stack depth 4 [c1a4620], stack [main, runTest, test, cleanup]])
  Number of target states:       0
  Size of final wait list        11

Time for analysis setup:          4.371s
  Time for loading CPAs:          0.885s
  Time for loading parser:        0.709s
  Time for CFA construction:      2.581s
    Time for parsing file(s):     0.705s
    Time for AST to CFA:          0.786s
    Time for CFA sanity check:    0.269s
    Time for post-processing:     0.652s
      Time for var class.:        0.356s
Time for Analysis:               25.901s
CPU time for analysis:           25.900s
Total time for CPAchecker:       30.277s
Total CPU time for CPAchecker:   30.260s
Time for statistics:              0.372s

Time for Garbage Collector:       0.640s (in 32 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 95MB (    90 MiB) max;     52MB (    49 MiB) avg;     99MB (    95 MiB) peak
Used non-heap memory:             36MB (    34 MiB) max;     32MB (    31 MiB) avg;     36MB (    35 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        38MB (    36 MiB) max;     35MB (    33 MiB) avg
Total process virtual memory:   8201MB (  7821 MiB) max;   8138MB (  7761 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
