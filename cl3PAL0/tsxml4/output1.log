scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/elevator_spec1_product11_true-unreach-call_true-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_6ibl_yfy/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 78: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 117: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 156: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 446: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 595: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 604: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 638: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 647: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 687: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 767: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 780: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1132: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1161: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1195: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1251: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1282: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1296: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1868: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1879: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1888: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1903: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1926: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2348: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2394: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2744: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2858: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3098: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3409: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2185: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            64 (0% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            18 (28%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         46 (72%)
  Times precision was empty:       3 (5%)
  Times precision was {false}:     45 (70%)
  Times result was cached:         0 (0%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      16 (25%)
  Times result was 'false':        41 (64%)
Number of strengthen sat checks:   0
Number of coverage checks:         28644
  BDD entailment checks:           20
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       907
Number of predicates discovered:          56
Number of abstraction locations:          2
Max number of predicates per location:    56
Avg number of predicates per location:    28
Total predicates per abstraction:         518
Max number of predicates per abstraction: 56
Avg number of predicates per abstraction: 8.49
Number of irrelevant predicates:          49 (9%)
Number of preds handled by boolean abs:   469 (91%)
  Total number of models for allsat:      313
  Max number of models for allsat:        128
  Avg number of models for allsat:        19.56

Time for post operator:                  3.351s
  Time for path formula creation:        3.148s
Time for strengthen operator:            0.222s
Time for prec operator:                 10.414s
  Time for abstraction:                 10.164s (Max:     1.662s, Count: 64)
    Boolean abstraction:                 8.604s
    Solving time:                        4.180s (Max:     0.412s)
    Model enumeration time:              4.337s
    Time for BDD construction:           0.199s (Max:     0.091s)
Time for merge operator:                 0.691s
Time for coverage check:                 0.027s
  Time for BDD entailment checks:        0.021s
Total time for SMT solver (w/o itp):     8.517s

Number of path formula cache hits:   54561 (69%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     2.905s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               42819
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        2498 (count: 2332, min: 0, max: 661, avg: 1.07)
Time for BDD node cleanup:                             0.007s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.577s
  Time for transition matches:                         0.245s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.000s
Automaton transfers with branching:                0
Automaton transfer successors:                        69708 (count: 69708, min: 1, max: 1, avg: 1.00) [1 x 69708]

CPA algorithm statistics
------------------------
Number of iterations:            51671
Max size of waitlist:            15
Average size of waitlist:        7
Number of computed successors:   66041
Max successors for one state:    2
Number of times merged:          14312
Number of times stopped:         14314
Number of times breaked:         5

Total time for CPA algorithm:        21.434s (Max:     4.844s)
  Time for choose from waitlist:      0.209s
  Time for precision adjustment:     11.702s
  Time for transfer relation:         6.338s
  Time for merge operator:            1.448s
  Time for stop operator:             0.282s
  Time for adding to reached set:     0.460s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   5
Avg. length of target path (in blocks):                  14 (count: 5, min: 2, max: 4, avg: 2.80)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   3.343s
  Counterexample analysis:                             2.997s (Max:     1.113s, Calls: 5)
    Refinement sat check:                              2.684s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.032s
  Precision update:                                    0.006s
  ARG update:                                          0.196s

Length of refined path (in blocks):                      14 (count: 5, min: 2, max: 4, avg: 2.80)
Number of affected states:                                9 (count: 5, min: 1, max: 3, avg: 1.80)
Length (states) of path with itp 'true':                  0 (count: 5, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:         9 (count: 5, min: 1, max: 3, avg: 1.80)
Length (states) of path with itp 'false':                 0 (count: 5, min: 0, max: 0, avg: 0.00)
Different non-trivial interpolants along paths:           4 (count: 5, min: 0, max: 2, avg: 0.80)
Equal non-trivial interpolants along paths:               0 (count: 5, min: 0, max: 0, avg: 0.00)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                5
Number of successful refinements:     5
Number of failed refinements:         0
Max. size of reached set before ref.: 15152
Max. size of reached set after ref.:  3936
Avg. size of reached set before ref.: 10654.80
Avg. size of reached set after ref.:  3936.00

Total time for CEGAR algorithm:      25.116s
Time for refinements:                 3.650s
Average time for refinement:          0.730s
Max time for refinement:              1.243s

Code Coverage
-----------------------------
  Function coverage:      0.608
  Visited lines:          1025
  Total lines:            1718
  Line coverage:          0.597
  Visited conditions:     600
  Total conditions:       756
  Condition coverage:     0.794

CPAchecker general statistics
-----------------------------
Number of program locations:     2256
Number of CFA edges:             2749
Number of relevant variables:    300
Number of functions:             74
Number of loops:                 9
Size of reached set:             18092
  Number of reached locations:   1157 (51%)
    Avg states per location:     15
    Max states per location:     129 (at node N2152)
  Number of reached functions:   45 (61%)
  Number of partitions:          18089
    Avg size of partitions:      1
    Max size of partitions:      4 (with key [N1975 (before lines 2541-2569), Function cleanup called from node N115, stack depth 4 [130a0f66], stack [main, runTest, test, cleanup]])
  Number of target states:       0
  Size of final wait list        8

Time for analysis setup:          4.617s
  Time for loading CPAs:          0.876s
  Time for loading parser:        0.872s
  Time for CFA construction:      2.605s
    Time for parsing file(s):     0.760s
    Time for AST to CFA:          0.750s
    Time for CFA sanity check:    0.275s
    Time for post-processing:     0.625s
      Time for var class.:        0.357s
Time for Analysis:               25.116s
CPU time for analysis:           25.120s
Total time for CPAchecker:       29.738s
Total CPU time for CPAchecker:   29.730s
Time for statistics:              0.484s

Time for Garbage Collector:       0.673s (in 28 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 78MB (    74 MiB) max;     49MB (    47 MiB) avg;     86MB (    82 MiB) peak
Used non-heap memory:             36MB (    34 MiB) max;     32MB (    31 MiB) avg;     37MB (    35 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        38MB (    36 MiB) max;     35MB (    33 MiB) avg
Total process virtual memory:   8199MB (  7820 MiB) max;   8130MB (  7754 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
