scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/elevator_spec2_product23_true-unreach-call_true-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_krfesi38/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 237: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 260: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 381: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 617: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 928: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1248: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1294: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1652: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1807: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1846: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1885: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1962: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2119: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2128: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2162: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2171: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2211: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2291: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2304: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2656: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2696: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2725: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2759: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2815: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2843: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2874: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2888: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3460: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3471: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3480: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1085: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            48 (0% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            18 (38%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         30 (63%)
  Times precision was empty:       3 (6%)
  Times precision was {false}:     29 (60%)
  Times result was cached:         0 (0%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      16 (33%)
  Times result was 'false':        23 (48%)
Number of strengthen sat checks:   0
Number of coverage checks:         34591
  BDD entailment checks:           11
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       983
Number of predicates discovered:          41
Number of abstraction locations:          2
Max number of predicates per location:    41
Avg number of predicates per location:    21
Total predicates per abstraction:         203
Max number of predicates per abstraction: 41
Avg number of predicates per abstraction: 4.51
Number of irrelevant predicates:          34 (17%)
Number of preds handled by boolean abs:   169 (83%)
  Total number of models for allsat:      60
  Max number of models for allsat:        15
  Avg number of models for allsat:        3.75

Time for post operator:                  3.211s
  Time for path formula creation:        3.042s
Time for strengthen operator:            0.232s
Time for prec operator:                  9.688s
  Time for abstraction:                  9.426s (Max:     1.097s, Count: 48)
    Boolean abstraction:                 7.995s
    Solving time:                        4.724s (Max:     0.415s)
    Model enumeration time:              3.358s
    Time for BDD construction:           0.070s (Max:     0.029s)
Time for merge operator:                 0.716s
Time for coverage check:                 0.038s
  Time for BDD entailment checks:        0.030s
Total time for SMT solver (w/o itp):     8.087s

Number of path formula cache hits:   73751 (76%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     2.850s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               1675
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         654 (count: 565, min: 0, max: 200, avg: 1.16)
Time for BDD node cleanup:                             0.002s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.496s
Automaton transfers with branching:                0
Automaton transfer successors:                        84295 (count: 84295, min: 1, max: 1, avg: 1.00) [1 x 84295]

CPA algorithm statistics
------------------------
Number of iterations:            62108
Max size of waitlist:            16
Average size of waitlist:        8
Number of computed successors:   79436
Max successors for one state:    2
Number of times merged:          17290
Number of times stopped:         17292
Number of times breaked:         7

Total time for CPA algorithm:        20.582s (Max:     5.583s)
  Time for choose from waitlist:      0.148s
  Time for precision adjustment:     11.000s
  Time for transfer relation:         6.167s
  Time for merge operator:            1.533s
  Time for stop operator:             0.382s
  Time for adding to reached set:     0.471s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   7
Avg. length of target path (in blocks):                  16 (count: 7, min: 2, max: 3, avg: 2.29)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   3.744s
  Counterexample analysis:                             3.317s (Max:     0.770s, Calls: 7)
    Refinement sat check:                              2.967s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.039s
  Precision update:                                    0.006s
  ARG update:                                          0.261s

Length of refined path (in blocks):                      16 (count: 7, min: 2, max: 3, avg: 2.29)
Number of affected states:                                9 (count: 7, min: 1, max: 2, avg: 1.29)
Length (states) of path with itp 'true':                  0 (count: 7, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:         9 (count: 7, min: 1, max: 2, avg: 1.29)
Length (states) of path with itp 'false':                 0 (count: 7, min: 0, max: 0, avg: 0.00)
Different non-trivial interpolants along paths:           2 (count: 7, min: 0, max: 1, avg: 0.29)
Equal non-trivial interpolants along paths:               0 (count: 7, min: 0, max: 0, avg: 0.00)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                7
Number of successful refinements:     7
Number of failed refinements:         0
Max. size of reached set before ref.: 16970
Max. size of reached set after ref.:  5657
Avg. size of reached set before ref.: 12919.71
Avg. size of reached set after ref.:  5657.00

Total time for CEGAR algorithm:      24.805s
Time for refinements:                 4.145s
Average time for refinement:          0.592s
Max time for refinement:              0.894s

Code Coverage
-----------------------------
  Function coverage:      0.597
  Visited lines:          1058
  Total lines:            1752
  Line coverage:          0.604
  Visited conditions:     604
  Total conditions:       760
  Condition coverage:     0.795

CPAchecker general statistics
-----------------------------
Number of program locations:     2297
Number of CFA edges:             2797
Number of relevant variables:    322
Number of functions:             77
Number of loops:                 9
Size of reached set:             11282
  Number of reached locations:   1172 (51%)
    Avg states per location:     9
    Max states per location:     135 (at node N200)
  Number of reached functions:   46 (60%)
  Number of partitions:          11282
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0
  Size of final wait list        2

Time for analysis setup:          5.339s
  Time for loading CPAs:          0.992s
  Time for loading parser:        1.077s
  Time for CFA construction:      3.038s
    Time for parsing file(s):     1.031s
    Time for AST to CFA:          0.752s
    Time for CFA sanity check:    0.312s
    Time for post-processing:     0.663s
      Time for var class.:        0.370s
Time for Analysis:               24.805s
CPU time for analysis:           24.800s
Total time for CPAchecker:       30.151s
Total CPU time for CPAchecker:   30.140s
Time for statistics:              0.371s

Time for Garbage Collector:       0.629s (in 31 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 83MB (    79 MiB) max;     51MB (    48 MiB) avg;     88MB (    84 MiB) peak
Used non-heap memory:             36MB (    34 MiB) max;     32MB (    30 MiB) avg;     37MB (    35 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        38MB (    36 MiB) max;     34MB (    32 MiB) avg
Total process virtual memory:   8199MB (  7819 MiB) max;   8118MB (  7742 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
