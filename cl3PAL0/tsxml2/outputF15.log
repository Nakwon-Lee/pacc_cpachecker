scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/elevator_spec14_product19_true-unreach-call_true-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_ewkgrb69/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 131: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 284: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 293: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 327: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 336: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 376: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 456: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 469: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 821: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 850: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 884: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 940: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 971: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 985: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1558: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1569: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1578: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2047: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2093: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2108: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2131: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2171: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2210: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2249: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2606: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2720: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2956: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3267: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1884: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            39 (0% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            16 (41%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         23 (59%)
  Times precision was empty:       6 (15%)
  Times precision was {false}:     18 (46%)
  Times result was cached:         0 (0%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      15 (38%)
  Times result was 'false':        18 (46%)
Number of strengthen sat checks:   0
Number of coverage checks:         40079
  BDD entailment checks:           105
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       3075
Number of predicates discovered:          23
Number of abstraction locations:          2
Max number of predicates per location:    22
Avg number of predicates per location:    11
Total predicates per abstraction:         348
Max number of predicates per abstraction: 22
Avg number of predicates per abstraction: 10.55
Number of irrelevant predicates:          18 (5%)
Number of preds handled by boolean abs:   330 (95%)
  Total number of models for allsat:      857
  Max number of models for allsat:        107
  Avg number of models for allsat:        57.13

Time for post operator:                  5.624s
  Time for path formula creation:        5.407s
Time for strengthen operator:            0.210s
Time for prec operator:                 20.124s
  Time for abstraction:                 19.878s (Max:     1.807s, Count: 39)
    Boolean abstraction:                14.604s
    Solving time:                        7.757s (Max:     1.475s)
    Model enumeration time:             10.420s
    Time for BDD construction:           0.112s (Max:     0.019s)
Time for merge operator:                 1.661s
Time for coverage check:                 0.020s
  Time for BDD entailment checks:        0.000s
Total time for SMT solver (w/o itp):    18.177s

Number of path formula cache hits:   6169 (6%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     5.134s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               13600
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        1112 (count: 769, min: 0, max: 114, avg: 1.45)
Time for BDD node cleanup:                             0.000s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.560s
  Time for transition matches:                         0.220s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.000s
Automaton transfers with branching:                0
Automaton transfer successors:                        97084 (count: 97084, min: 1, max: 1, avg: 1.00) [1 x 97084]

CPA algorithm statistics
------------------------
Number of iterations:            72705
Max size of waitlist:            15
Average size of waitlist:        7
Number of computed successors:   92714
Max successors for one state:    2
Number of times merged:          19987
Number of times stopped:         19988
Number of times breaked:         5

Total time for CPA algorithm:        34.979s (Max:    25.374s)
  Time for choose from waitlist:      0.155s
  Time for precision adjustment:     21.710s
  Time for transfer relation:         8.674s
  Time for merge operator:            2.470s
  Time for stop operator:             0.395s
  Time for adding to reached set:     0.428s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   5
Avg. length of target path (in blocks):                   6 (count: 5, min: 1, max: 2, avg: 1.20)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   4.730s
  Counterexample analysis:                             4.540s (Max:     2.267s, Calls: 5)
    Refinement sat check:                              4.290s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.024s
  Precision update:                                    0.003s
  ARG update:                                          0.032s

Length of refined path (in blocks):                       6 (count: 5, min: 1, max: 2, avg: 1.20)
Number of affected states:                                1 (count: 5, min: 0, max: 1, avg: 0.20)
Length (states) of path with itp 'true':                  0 (count: 5, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:         1 (count: 5, min: 0, max: 1, avg: 0.20)
Length (states) of path with itp 'false':                 0 (count: 5, min: 0, max: 0, avg: 0.00)
Different non-trivial interpolants along paths:           0 (count: 5, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:               0 (count: 5, min: 0, max: 0, avg: 0.00)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                5
Number of successful refinements:     5
Number of failed refinements:         0
Max. size of reached set before ref.: 18889
Max. size of reached set after ref.:  15057
Avg. size of reached set before ref.: 11308.00
Avg. size of reached set after ref.:  10540.80

Total time for CEGAR algorithm:      40.413s
Time for refinements:                 5.367s
Average time for refinement:          1.073s
Max time for refinement:              2.535s

Code Coverage
-----------------------------
  Function coverage:      0.625
  Visited lines:          963
  Total lines:            1649
  Line coverage:          0.584
  Visited conditions:     554
  Total conditions:       710
  Condition coverage:     0.780

CPAchecker general statistics
-----------------------------
Number of program locations:     2154
Number of CFA edges:             2620
Number of relevant variables:    291
Number of functions:             72
Number of loops:                 9
Size of reached set:             68873
  Number of reached locations:   1094 (51%)
    Avg states per location:     62
    Max states per location:     538 (at node N2037)
  Number of reached functions:   45 (63%)
  Number of partitions:          68860
    Avg size of partitions:      1
    Max size of partitions:      14 (with key [N1862 (before lines 2405-2433), Function cleanup called from node N1312, stack depth 4 [3af39e7b], stack [main, runTest, test, cleanup]])
  Number of target states:       0

Time for analysis setup:          4.487s
  Time for loading CPAs:          0.956s
  Time for loading parser:        0.744s
  Time for CFA construction:      2.567s
    Time for parsing file(s):     0.766s
    Time for AST to CFA:          0.725s
    Time for CFA sanity check:    0.291s
    Time for post-processing:     0.582s
      Time for var class.:        0.325s
Time for Analysis:               40.413s
CPU time for analysis:           40.410s
Time for analyzing result:        0.081s
Total time for CPAchecker:       44.906s
Total CPU time for CPAchecker:   44.900s
Time for statistics:              1.071s

Time for Garbage Collector:       1.475s (in 47 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                142MB (   135 MiB) max;     74MB (    71 MiB) avg;    155MB (   148 MiB) peak
Used non-heap memory:             36MB (    34 MiB) max;     34MB (    32 MiB) avg;     37MB (    35 MiB) peak
Allocated heap memory:           206MB (   197 MiB) max;    134MB (   127 MiB) avg
Allocated non-heap memory:        38MB (    36 MiB) max;     36MB (    34 MiB) avg
Total process virtual memory:   8206MB (  7826 MiB) max;   8173MB (  7794 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
