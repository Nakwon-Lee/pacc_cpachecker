scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/elevator_spec13_product31_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_nvo7o_2s/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 364: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 410: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 547: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 586: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 625: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 746: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 982: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1293: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1651: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1678: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1701: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1781: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1954: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1963: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1997: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2006: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2046: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2126: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2139: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2491: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2531: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2560: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2594: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2650: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2678: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2709: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2723: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3296: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3307: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3316: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 201: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            130 (0% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            88 (68%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         42 (32%)
  Times precision was empty:       109 (84%)
  Times precision was {false}:     20 (15%)
  Times result was cached:         1 (1%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      0 (0%)
  Times result was 'false':        21 (16%)
Number of strengthen sat checks:   0
Number of coverage checks:         31339
  BDD entailment checks:           5
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       3858
Number of predicates discovered:          1
Number of abstraction locations:          2
Max number of predicates per location:    1
Avg number of predicates per location:    1
Total predicates per abstraction:         21
Max number of predicates per abstraction: 1
Avg number of predicates per abstraction: 1.05
Number of irrelevant predicates:          21 (100%)

Time for post operator:                  6.401s
  Time for path formula creation:        6.230s
Time for strengthen operator:            0.197s
Time for prec operator:                  2.428s
  Time for abstraction:                  2.228s (Max:     0.256s, Count: 130)
    Solving time:                        0.750s (Max:     0.090s)
    Model enumeration time:              0.000s
    Time for BDD construction:           0.000s (Max:     0.000s)
Time for merge operator:                 1.483s
Time for coverage check:                 0.008s
  Time for BDD entailment checks:        0.001s
Total time for SMT solver (w/o itp):     0.750s

Number of path formula cache hits:   85 (0%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     6.032s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               202
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                           0 (count: 236, min: 0, max: 0, avg: 0.00)
Time for BDD node cleanup:                             0.000s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.570s
  Time for transition matches:                         0.236s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.000s
Automaton transfers with branching:                0
Automaton transfer successors:                        77202 (count: 77202, min: 1, max: 1, avg: 1.00) [1 x 77202]

CPA algorithm statistics
------------------------
Number of iterations:            56763
Max size of waitlist:            88
Average size of waitlist:        44
Number of computed successors:   72539
Max successors for one state:    2
Number of times merged:          15667
Number of times stopped:         15672
Number of times breaked:         22

Total time for CPA algorithm:        17.891s (Max:     3.665s)
  Time for choose from waitlist:      0.203s
  Time for precision adjustment:      3.779s
  Time for transfer relation:         9.636s
  Time for merge operator:            2.511s
  Time for stop operator:             0.372s
  Time for adding to reached set:     0.355s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   22
Avg. length of target path (in blocks):                  38 (count: 22, min: 1, max: 3, avg: 1.73)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   3.938s
  Counterexample analysis:                             3.478s (Max:     0.557s, Calls: 22)
    Refinement sat check:                              3.092s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.000s
  Precision update:                                    0.024s
  ARG update:                                          0.014s

Length of refined path (in blocks):                      35 (count: 21, min: 1, max: 3, avg: 1.67)
Number of affected states:                                0 (count: 21, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp 'true':                 14 (count: 21, min: 0, max: 2, avg: 0.67)
Length (states) of path with itp non-trivial itp:         0 (count: 21, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp 'false':                 1 (count: 21, min: 0, max: 1, avg: 0.05)
Different non-trivial interpolants along paths:           0 (count: 21, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:               0 (count: 21, min: 0, max: 0, avg: 0.00)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                22
Number of successful refinements:     21
Number of failed refinements:         0
Max. size of reached set before ref.: 56770
Max. size of reached set after ref.:  51244
Avg. size of reached set before ref.: 31802.41
Avg. size of reached set after ref.:  30609.81

Total time for CEGAR algorithm:      25.248s
Time for refinements:                 6.617s
Average time for refinement:          0.300s
Max time for refinement:              0.805s

Code Coverage
-----------------------------
  Function coverage:      0.684
  Visited lines:          1112
  Total lines:            1712
  Line coverage:          0.650
  Visited conditions:     622
  Total conditions:       730
  Condition coverage:     0.852

CPAchecker general statistics
-----------------------------
Number of program locations:     2241
Number of CFA edges:             2728
Number of relevant variables:    323
Number of functions:             76
Number of loops:                 9
Size of reached set:             56770
  Number of reached locations:   1244 (56%)
    Avg states per location:     45
    Max states per location:     660 (at node N510)
  Number of reached functions:   52 (68%)
  Number of partitions:          56770
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       1
  Size of final wait list        83

Time for analysis setup:          4.514s
  Time for loading CPAs:          0.919s
  Time for loading parser:        0.834s
  Time for CFA construction:      2.537s
    Time for parsing file(s):     0.727s
    Time for AST to CFA:          0.778s
    Time for CFA sanity check:    0.243s
    Time for post-processing:     0.613s
      Time for var class.:        0.355s
Time for Analysis:               25.248s
CPU time for analysis:           25.240s
Total time for CPAchecker:       29.767s
Total CPU time for CPAchecker:   29.750s
Time for statistics:              0.860s

Time for Garbage Collector:       1.665s (in 51 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                164MB (   157 MiB) max;     71MB (    67 MiB) avg;    175MB (   167 MiB) peak
Used non-heap memory:             35MB (    33 MiB) max;     32MB (    31 MiB) avg;     36MB (    34 MiB) peak
Allocated heap memory:           186MB (   177 MiB) max;    136MB (   130 MiB) avg
Allocated non-heap memory:        38MB (    36 MiB) max;     34MB (    33 MiB) avg
Total process virtual memory:   8206MB (  7826 MiB) max;   8144MB (  7767 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
