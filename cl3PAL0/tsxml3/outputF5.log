scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/elevator_spec13_product31_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_qwtp26nx/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 364: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 410: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 547: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 586: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 625: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 746: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 982: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1293: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1651: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1678: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1701: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1781: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1954: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1963: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1997: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2006: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2046: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2126: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2139: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2491: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2531: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2560: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2594: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2650: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2678: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2709: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2723: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3296: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3307: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3316: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 201: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            635 (0% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            480 (76%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         155 (24%)
  Times precision was empty:       170 (27%)
  Times precision was {false}:     102 (16%)
  Times result was cached:         87 (14%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      276 (43%)
  Times result was 'false':        296 (47%)
Number of strengthen sat checks:   0
Number of coverage checks:         65245
  BDD entailment checks:           371
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       3858
Number of predicates discovered:          96
Number of abstraction locations:          4
Max number of predicates per location:    73
Avg number of predicates per location:    23
Total predicates per abstraction:         3757
Max number of predicates per abstraction: 73
Avg number of predicates per abstraction: 9.94
Number of irrelevant predicates:          305 (8%)
Number of preds handled by boolean abs:   2930 (78%)
  Total number of models for allsat:      16601
  Max number of models for allsat:        6072
  Avg number of models for allsat:        60.15

Time for post operator:                  7.226s
  Time for path formula creation:        6.976s
Time for strengthen operator:            0.319s
Time for prec operator:                814.256s
  Time for abstraction:                813.870s (Max:   344.275s, Count: 635)
    Boolean abstraction:               803.652s
    Solving time:                       21.360s (Max:     2.696s)
    Model enumeration time:            777.354s
    Time for BDD construction:           6.815s (Max:     2.059s)
Time for merge operator:                 1.855s
Time for coverage check:                 0.024s
  Time for BDD entailment checks:        0.012s
Total time for SMT solver (w/o itp):   798.715s

Number of path formula cache hits:   60674 (35%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     6.656s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               103977
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       15364 (count: 8932, min: 0, max: 3535, avg: 1.72)
Time for BDD node cleanup:                             0.006s
Time for BDD garbage collection:                       0.209s (in 24 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.571s
  Time for transition matches:                         0.290s
  Time for transition assertions:                      0.001s
  Time for transition actions:                         0.002s
Automaton transfers with branching:                0
Automaton transfer successors:                       163484 (count: 163484, min: 1, max: 1, avg: 1.00) [1 x 163484]

CPA algorithm statistics
------------------------
Number of iterations:            120596
Max size of waitlist:            57
Average size of waitlist:        39
Number of computed successors:   153537
Max successors for one state:    2
Number of times merged:          32437
Number of times stopped:         32554
Number of times breaked:         31

Total time for CPA algorithm:       832.887s (Max:   760.319s)
  Time for choose from waitlist:      0.183s
  Time for precision adjustment:    816.147s
  Time for transfer relation:        11.191s
  Time for merge operator:            2.828s
  Time for stop operator:             0.494s
  Time for adding to reached set:     0.636s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   31
Avg. length of target path (in blocks):                 139 (count: 31, min: 1, max: 14, avg: 4.48)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  55.153s
  Counterexample analysis:                            53.879s (Max:    16.976s, Calls: 31)
    Refinement sat check:                             49.843s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.009s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.030s
  Precision update:                                    0.028s
  ARG update:                                          0.240s

Length of refined path (in blocks):                     119 (count: 31, min: 1, max: 13, avg: 3.84)
Number of affected states:                               48 (count: 31, min: 0, max: 11, avg: 1.55)
Length (states) of path with itp 'true':                 40 (count: 31, min: 0, max: 8, avg: 1.29)
Length (states) of path with itp non-trivial itp:        48 (count: 31, min: 0, max: 11, avg: 1.55)
Length (states) of path with itp 'false':                14 (count: 31, min: 0, max: 1, avg: 0.45)
Different non-trivial interpolants along paths:          31 (count: 31, min: 0, max: 7, avg: 1.00)
Equal non-trivial interpolants along paths:               8 (count: 31, min: 0, max: 5, avg: 0.26)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                31
Number of successful refinements:     31
Number of failed refinements:         0
Max. size of reached set before ref.: 57658
Max. size of reached set after ref.:  57222
Avg. size of reached set before ref.: 27017.94
Avg. size of reached set after ref.:  25521.55

Total time for CEGAR algorithm:     895.947s
Time for refinements:                62.029s
Average time for refinement:          2.000s
Max time for refinement:             17.916s

Code Coverage
-----------------------------
  Function coverage:      0.684
  Visited lines:          1079
  Total lines:            1712
  Line coverage:          0.630
  Visited conditions:     600
  Total conditions:       730
  Condition coverage:     0.822

CPAchecker general statistics
-----------------------------
Number of program locations:     2241
Number of CFA edges:             2728
Number of relevant variables:    323
Number of functions:             76
Number of loops:                 9
Size of reached set:             74299
  Number of reached locations:   1204 (54%)
    Avg states per location:     61
    Max states per location:     890 (at node N510)
  Number of reached functions:   52 (68%)
  Number of partitions:          74291
    Avg size of partitions:      1
    Max size of partitions:      9 (with key [N1155 (before lines 1444-1472), Function cleanup called from node N1297, stack depth 4 [23adbd6b], stack [main, runTest, test, cleanup]])
  Number of target states:       0
  Size of final wait list        45

Time for analysis setup:          4.784s
  Time for loading CPAs:          1.044s
  Time for loading parser:        0.815s
  Time for CFA construction:      2.760s
    Time for parsing file(s):     0.803s
    Time for AST to CFA:          0.833s
    Time for CFA sanity check:    0.292s
    Time for post-processing:     0.629s
      Time for var class.:        0.354s
Time for Analysis:              895.947s
CPU time for analysis:          895.900s
Total time for CPAchecker:      900.736s
Total CPU time for CPAchecker:  900.680s
Time for statistics:              1.087s

Time for Garbage Collector:       5.014s (in 109 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                234MB (   223 MiB) max;    144MB (   137 MiB) avg;    272MB (   259 MiB) peak
Used non-heap memory:             36MB (    35 MiB) max;     36MB (    34 MiB) avg;     37MB (    35 MiB) peak
Allocated heap memory:           258MB (   246 MiB) max;    248MB (   237 MiB) avg
Allocated non-heap memory:        39MB (    37 MiB) max;     38MB (    37 MiB) avg
Total process virtual memory:   8747MB (  8342 MiB) max;   8437MB (  8046 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
