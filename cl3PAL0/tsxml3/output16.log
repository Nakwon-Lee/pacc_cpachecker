scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/elevator_spec13_product31_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_lddpx1pt/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 364: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 410: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 547: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 586: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 625: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 746: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 982: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1293: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1651: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1678: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1701: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1781: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1954: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1963: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1997: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2006: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2046: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2126: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2139: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2491: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2531: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2560: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2594: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2650: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2678: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2709: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2723: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3296: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3307: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3316: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 201: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            129 (0% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            86 (67%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         43 (33%)
  Times precision was empty:       104 (81%)
  Times precision was {false}:     25 (19%)
  Times result was cached:         0 (0%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      0 (0%)
  Times result was 'false':        25 (19%)
Number of strengthen sat checks:   0
Number of coverage checks:         19251
  BDD entailment checks:           17
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       3858
Number of predicates discovered:          1
Number of abstraction locations:          2
Max number of predicates per location:    1
Avg number of predicates per location:    1
Total predicates per abstraction:         25
Max number of predicates per abstraction: 1
Avg number of predicates per abstraction: 1.00
Number of irrelevant predicates:          25 (100%)

Time for post operator:                  4.886s
  Time for path formula creation:        4.707s
Time for strengthen operator:            0.235s
Time for prec operator:                  3.331s
  Time for abstraction:                  3.123s (Max:     0.371s, Count: 129)
    Solving time:                        1.084s (Max:     0.160s)
    Model enumeration time:              0.000s
    Time for BDD construction:           0.000s (Max:     0.000s)
Time for merge operator:                 1.271s
Time for coverage check:                 0.005s
  Time for BDD entailment checks:        0.000s
Total time for SMT solver (w/o itp):     1.084s

Number of path formula cache hits:   153 (0%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     4.576s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               202
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                           0 (count: 273, min: 0, max: 0, avg: 0.00)
Time for BDD node cleanup:                             0.000s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.406s
Automaton transfers with branching:                0
Automaton transfer successors:                        47693 (count: 47693, min: 1, max: 1, avg: 1.00) [1 x 47693]

CPA algorithm statistics
------------------------
Number of iterations:            35086
Max size of waitlist:            45
Average size of waitlist:        26
Number of computed successors:   44801
Max successors for one state:    2
Number of times merged:          9617
Number of times stopped:         9634
Number of times breaked:         26

Total time for CPA algorithm:        15.353s (Max:     3.691s)
  Time for choose from waitlist:      0.148s
  Time for precision adjustment:      4.358s
  Time for transfer relation:         7.318s
  Time for merge operator:            1.976s
  Time for stop operator:             0.292s
  Time for adding to reached set:     0.380s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   26
Avg. length of target path (in blocks):                  51 (count: 26, min: 1, max: 4, avg: 1.96)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   6.770s
  Counterexample analysis:                             6.121s (Max:     0.687s, Calls: 26)
    Refinement sat check:                              5.395s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.000s
  Precision update:                                    0.013s
  ARG update:                                          0.050s

Length of refined path (in blocks):                      37 (count: 25, min: 1, max: 3, avg: 1.48)
Number of affected states:                                0 (count: 25, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp 'true':                 12 (count: 25, min: 0, max: 2, avg: 0.48)
Length (states) of path with itp non-trivial itp:         0 (count: 25, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp 'false':                 8 (count: 25, min: 0, max: 1, avg: 0.32)
Different non-trivial interpolants along paths:           0 (count: 25, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:               0 (count: 25, min: 0, max: 0, avg: 0.00)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                26
Number of successful refinements:     25
Number of failed refinements:         0
Max. size of reached set before ref.: 28786
Max. size of reached set after ref.:  28722
Avg. size of reached set before ref.: 22013.81
Avg. size of reached set after ref.:  21488.64

Total time for CEGAR algorithm:      25.633s
Time for refinements:                 9.626s
Average time for refinement:          0.370s
Max time for refinement:              1.257s

Code Coverage
-----------------------------
  Function coverage:      0.645
  Visited lines:          1045
  Total lines:            1712
  Line coverage:          0.610
  Visited conditions:     596
  Total conditions:       730
  Condition coverage:     0.816

CPAchecker general statistics
-----------------------------
Number of program locations:     2241
Number of CFA edges:             2728
Number of relevant variables:    323
Number of functions:             76
Number of loops:                 9
Size of reached set:             28706
  Number of reached locations:   1175 (52%)
    Avg states per location:     24
    Max states per location:     325 (at node N510)
  Number of reached functions:   49 (64%)
  Number of partitions:          28706
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       1
  Size of final wait list        38

Time for analysis setup:          4.679s
  Time for loading CPAs:          0.987s
  Time for loading parser:        0.809s
  Time for CFA construction:      2.697s
    Time for parsing file(s):     0.720s
    Time for AST to CFA:          0.881s
    Time for CFA sanity check:    0.266s
    Time for post-processing:     0.612s
      Time for var class.:        0.333s
Time for Analysis:               25.633s
CPU time for analysis:           25.630s
Total time for CPAchecker:       30.318s
Total CPU time for CPAchecker:   30.300s
Time for statistics:              0.597s

Time for Garbage Collector:       1.395s (in 50 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                115MB (   109 MiB) max;     64MB (    61 MiB) avg;    146MB (   139 MiB) peak
Used non-heap memory:             36MB (    34 MiB) max;     33MB (    31 MiB) avg;     37MB (    35 MiB) peak
Allocated heap memory:           173MB (   165 MiB) max;    130MB (   124 MiB) avg
Allocated non-heap memory:        38MB (    36 MiB) max;     35MB (    33 MiB) avg
Total process virtual memory:   8202MB (  7822 MiB) max;   8147MB (  7770 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
