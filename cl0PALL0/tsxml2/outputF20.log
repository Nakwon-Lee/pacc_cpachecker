scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/minepump_spec3_product58_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_r8zkqj_4/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 140: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 152: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 175: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 495: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 541: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 604: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 636: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 650: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 659: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 896: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 905: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 960: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 979: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 332: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            35 (1% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            18 (51%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         17 (49%)
  Times precision was empty:       7 (20%)
  Times precision was {false}:     18 (51%)
  Times result was cached:         0 (0%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      10 (29%)
  Times result was 'false':        15 (43%)
Number of strengthen sat checks:   0
Number of coverage checks:         696
  BDD entailment checks:           8
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       76
Number of predicates discovered:          13
Number of abstraction locations:          3
Max number of predicates per location:    12
Avg number of predicates per location:    4
Total predicates per abstraction:         103
Max number of predicates per abstraction: 12
Avg number of predicates per abstraction: 3.68
Number of irrelevant predicates:          18 (17%)
Number of preds handled by boolean abs:   85 (83%)
  Total number of models for allsat:      29
  Max number of models for allsat:        5
  Avg number of models for allsat:        2.90

Time for post operator:                  0.252s
  Time for path formula creation:        0.234s
Time for strengthen operator:            0.026s
Time for prec operator:                  0.302s
  Time for abstraction:                  0.289s (Max:     0.025s, Count: 35)
    Boolean abstraction:                 0.080s
    Solving time:                        0.097s (Max:     0.011s)
    Model enumeration time:              0.009s
    Time for BDD construction:           0.030s (Max:     0.011s)
Time for merge operator:                 0.055s
Time for coverage check:                 0.002s
  Time for BDD entailment checks:        0.002s
Total time for SMT solver (w/o itp):     0.106s

Number of path formula cache hits:   3403 (71%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.215s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               506
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         246 (count: 357, min: 0, max: 246, avg: 0.69)
Time for BDD node cleanup:                             0.001s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.069s
Automaton transfers with branching:                0
Automaton transfer successors:                         4552 (count: 4552, min: 1, max: 1, avg: 1.00) [1 x 4552]

CPA algorithm statistics
------------------------
Number of iterations:            3467
Max size of waitlist:            9
Average size of waitlist:        4
Number of computed successors:   3842
Max successors for one state:    2
Number of times merged:          344
Number of times stopped:         346
Number of times breaked:         4

Total time for CPA algorithm:         1.301s (Max:     0.383s)
  Time for choose from waitlist:      0.020s
  Time for precision adjustment:      0.410s
  Time for transfer relation:         0.647s
  Time for merge operator:            0.089s
  Time for stop operator:             0.023s
  Time for adding to reached set:     0.051s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   4
Avg. length of target path (in blocks):                  11 (count: 4, min: 2, max: 3, avg: 2.75)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.086s
  Counterexample analysis:                             0.045s (Max:     0.013s, Calls: 4)
    Refinement sat check:                              0.031s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.008s
  Precision update:                                    0.010s
  ARG update:                                          0.011s

Length of refined path (in blocks):                      10 (count: 4, min: 2, max: 3, avg: 2.50)
Number of affected states:                                6 (count: 4, min: 1, max: 2, avg: 1.50)
Length (states) of path with itp 'true':                  0 (count: 4, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:         6 (count: 4, min: 1, max: 2, avg: 1.50)
Length (states) of path with itp 'false':                 1 (count: 4, min: 0, max: 1, avg: 0.25)
Different non-trivial interpolants along paths:           2 (count: 4, min: 0, max: 1, avg: 0.50)
Equal non-trivial interpolants along paths:               0 (count: 4, min: 0, max: 0, avg: 0.00)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                4
Number of successful refinements:     4
Number of failed refinements:         0
Max. size of reached set before ref.: 1044
Max. size of reached set after ref.:  28
Avg. size of reached set before ref.: 685.50
Avg. size of reached set after ref.:  28.00

Total time for CEGAR algorithm:       1.403s
Time for refinements:                 0.102s
Average time for refinement:          0.025s
Max time for refinement:              0.035s

Code Coverage
-----------------------------
  Function coverage:      0.744
  Visited lines:          151
  Total lines:            449
  Line coverage:          0.336
  Visited conditions:     44
  Total conditions:       76
  Condition coverage:     0.579

CPAchecker general statistics
-----------------------------
Number of program locations:     646
Number of CFA edges:             697
Number of relevant variables:    122
Number of functions:             39
Number of loops:                 5
Size of reached set:             852
  Number of reached locations:   198 (31%)
    Avg states per location:     4
    Max states per location:     16 (at node N539)
  Number of reached functions:   29 (74%)
  Number of partitions:          851
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N494 (before lines 709-756), Function test called from node N46, stack depth 3 [1b45c0e], stack [main, runTest, test]])
  Number of target states:       0

Time for analysis setup:          2.279s
  Time for loading CPAs:          0.521s
  Time for loading parser:        0.550s
  Time for CFA construction:      1.050s
    Time for parsing file(s):     0.364s
    Time for AST to CFA:          0.235s
    Time for CFA sanity check:    0.084s
    Time for post-processing:     0.243s
      Time for var class.:        0.122s
Time for Analysis:                1.403s
CPU time for analysis:            1.410s
Time for analyzing result:        0.001s
Total time for CPAchecker:        3.687s
Total CPU time for CPAchecker:    3.680s
Time for statistics:              0.091s

Time for Garbage Collector:       0.099s (in 6 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 54MB (    52 MiB) max;     30MB (    29 MiB) avg;     61MB (    59 MiB) peak
Used non-heap memory:             32MB (    31 MiB) max;     25MB (    23 MiB) avg;     34MB (    32 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        35MB (    33 MiB) max;     26MB (    25 MiB) avg
Total process virtual memory:   8132MB (  7756 MiB) max;   8066MB (  7693 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
