scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/minepump_spec3_product37_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_sh646lvs/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 140: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 460: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 506: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 628: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 637: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 692: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 806: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 838: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 852: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 907: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 930: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 297: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            31 (1% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            16 (52%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         15 (48%)
  Times precision was empty:       3 (10%)
  Times precision was {false}:     14 (45%)
  Times result was cached:         0 (0%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      14 (45%)
  Times result was 'false':        13 (42%)
Number of strengthen sat checks:   0
Number of coverage checks:         508
  BDD entailment checks:           14
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       62
Number of predicates discovered:          5
Number of abstraction locations:          3
Max number of predicates per location:    4
Avg number of predicates per location:    3
Total predicates per abstraction:         68
Max number of predicates per abstraction: 4
Avg number of predicates per abstraction: 2.43
Number of irrelevant predicates:          14 (21%)
Number of preds handled by boolean abs:   54 (79%)
  Total number of models for allsat:      67
  Max number of models for allsat:        7
  Avg number of models for allsat:        4.79

Time for post operator:                  0.332s
  Time for path formula creation:        0.301s
Time for strengthen operator:            0.040s
Time for prec operator:                  0.313s
  Time for abstraction:                  0.291s (Max:     0.022s, Count: 31)
    Boolean abstraction:                 0.104s
    Solving time:                        0.145s (Max:     0.016s)
    Model enumeration time:              0.013s
    Time for BDD construction:           0.022s (Max:     0.007s)
Time for merge operator:                 0.063s
Time for coverage check:                 0.001s
  Time for BDD entailment checks:        0.000s
Total time for SMT solver (w/o itp):     0.158s

Number of path formula cache hits:   888 (27%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.294s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               277
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         122 (count: 228, min: 0, max: 122, avg: 0.54)
Time for BDD node cleanup:                             0.000s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.054s
Automaton transfers with branching:                0
Automaton transfer successors:                         3240 (count: 3240, min: 1, max: 1, avg: 1.00) [1 x 3240]

CPA algorithm statistics
------------------------
Number of iterations:            2504
Max size of waitlist:            8
Average size of waitlist:        4
Number of computed successors:   2774
Max successors for one state:    2
Number of times merged:          247
Number of times stopped:         251
Number of times breaked:         2

Total time for CPA algorithm:         1.319s (Max:     0.752s)
  Time for choose from waitlist:      0.010s
  Time for precision adjustment:      0.418s
  Time for transfer relation:         0.660s
  Time for merge operator:            0.120s
  Time for stop operator:             0.021s
  Time for adding to reached set:     0.020s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   2
Avg. length of target path (in blocks):                   5 (count: 2, min: 2, max: 3, avg: 2.50)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.049s
  Counterexample analysis:                             0.024s (Max:     0.013s, Calls: 2)
    Refinement sat check:                              0.009s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.008s
  Precision update:                                    0.001s
  ARG update:                                          0.012s

Length of refined path (in blocks):                       5 (count: 2, min: 2, max: 3, avg: 2.50)
Number of affected states:                                3 (count: 2, min: 1, max: 2, avg: 1.50)
Length (states) of path with itp 'true':                  0 (count: 2, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:         3 (count: 2, min: 1, max: 2, avg: 1.50)
Length (states) of path with itp 'false':                 0 (count: 2, min: 0, max: 0, avg: 0.00)
Different non-trivial interpolants along paths:           1 (count: 2, min: 0, max: 1, avg: 0.50)
Equal non-trivial interpolants along paths:               0 (count: 2, min: 0, max: 0, avg: 0.00)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                2
Number of successful refinements:     2
Number of failed refinements:         0
Max. size of reached set before ref.: 520
Max. size of reached set after ref.:  28
Avg. size of reached set before ref.: 350.50
Avg. size of reached set after ref.:  28.00

Total time for CEGAR algorithm:       1.381s
Time for refinements:                 0.062s
Average time for refinement:          0.031s
Max time for refinement:              0.040s

Code Coverage
-----------------------------
  Function coverage:      0.714
  Visited lines:          142
  Total lines:            429
  Line coverage:          0.331
  Visited conditions:     42
  Total conditions:       72
  Condition coverage:     0.583

CPAchecker general statistics
-----------------------------
Number of program locations:     610
Number of CFA edges:             659
Number of relevant variables:    115
Number of functions:             35
Number of loops:                 5
Size of reached set:             1866
  Number of reached locations:   190 (31%)
    Avg states per location:     9
    Max states per location:     44 (at node N378)
  Number of reached functions:   25 (71%)
  Number of partitions:          1862
    Avg size of partitions:      1
    Max size of partitions:      3 (with key [N479 (before lines 706-751), Function test called from node N46, stack depth 3 [df6620a], stack [main, runTest, test]])
  Number of target states:       0

Time for analysis setup:          2.381s
  Time for loading CPAs:          0.642s
  Time for loading parser:        0.508s
  Time for CFA construction:      1.092s
    Time for parsing file(s):     0.374s
    Time for AST to CFA:          0.243s
    Time for CFA sanity check:    0.072s
    Time for post-processing:     0.260s
      Time for var class.:        0.124s
Time for Analysis:                1.382s
CPU time for analysis:            1.380s
Time for analyzing result:        0.001s
Total time for CPAchecker:        3.767s
Total CPU time for CPAchecker:    3.760s
Time for statistics:              0.099s

Time for Garbage Collector:       0.099s (in 5 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 55MB (    53 MiB) max;     30MB (    29 MiB) avg;     62MB (    59 MiB) peak
Used non-heap memory:             32MB (    31 MiB) max;     25MB (    23 MiB) avg;     34MB (    33 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        35MB (    33 MiB) max;     26MB (    25 MiB) avg
Total process virtual memory:   8132MB (  7756 MiB) max;   8074MB (  7700 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
