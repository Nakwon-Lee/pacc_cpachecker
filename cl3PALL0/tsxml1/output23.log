scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/minepump_spec2_product60_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_t7hczzzk/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 92: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 124: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 138: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 147: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 260: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 272: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 295: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 686: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 732: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 868: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 877: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 932: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 951: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 523: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            57 (1% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            29 (51%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         28 (49%)
  Times precision was empty:       11 (19%)
  Times precision was {false}:     21 (37%)
  Times result was cached:         10 (18%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      15 (26%)
  Times result was 'false':        26 (46%)
Number of strengthen sat checks:   0
Number of coverage checks:         1175
  BDD entailment checks:           19
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       75
Number of predicates discovered:          7
Number of abstraction locations:          3
Max number of predicates per location:    6
Avg number of predicates per location:    2
Total predicates per abstraction:         104
Max number of predicates per abstraction: 6
Avg number of predicates per abstraction: 2.89
Number of irrelevant predicates:          27 (26%)
Number of preds handled by boolean abs:   53 (51%)
  Total number of models for allsat:      50
  Max number of models for allsat:        9
  Avg number of models for allsat:        3.33

Time for post operator:                  0.546s
  Time for path formula creation:        0.509s
Time for strengthen operator:            0.045s
Time for prec operator:                  0.544s
  Time for abstraction:                  0.490s (Max:     0.036s, Count: 57)
    Boolean abstraction:                 0.166s
    Solving time:                        0.143s (Max:     0.018s)
    Model enumeration time:              0.033s
    Time for BDD construction:           0.021s (Max:     0.008s)
Time for merge operator:                 0.074s
Time for coverage check:                 0.000s
  Time for BDD entailment checks:        0.000s
Total time for SMT solver (w/o itp):     0.176s

Number of path formula cache hits:   6012 (75%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.465s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               372
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         190 (count: 314, min: 0, max: 101, avg: 0.61)
Time for BDD node cleanup:                             0.001s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.157s
Automaton transfers with branching:                0
Automaton transfer successors:                         7518 (count: 7518, min: 1, max: 1, avg: 1.00) [1 x 7518]

CPA algorithm statistics
------------------------
Number of iterations:            5826
Max size of waitlist:            10
Average size of waitlist:        5
Number of computed successors:   6458
Max successors for one state:    2
Number of times merged:          578
Number of times stopped:         580
Number of times breaked:         5

Total time for CPA algorithm:         2.604s (Max:     0.565s)
  Time for choose from waitlist:      0.046s
  Time for precision adjustment:      0.853s
  Time for transfer relation:         1.263s
  Time for merge operator:            0.179s
  Time for stop operator:             0.045s
  Time for adding to reached set:     0.072s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   5
Avg. length of target path (in blocks):                  16 (count: 5, min: 2, max: 4, avg: 3.20)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.191s
  Counterexample analysis:                             0.085s (Max:     0.027s, Calls: 5)
    Refinement sat check:                              0.055s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.001s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.011s
  Precision update:                                    0.015s
  ARG update:                                          0.062s

Length of refined path (in blocks):                      16 (count: 5, min: 2, max: 4, avg: 3.20)
Number of affected states:                               11 (count: 5, min: 1, max: 3, avg: 2.20)
Length (states) of path with itp 'true':                  0 (count: 5, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:        11 (count: 5, min: 1, max: 3, avg: 2.20)
Length (states) of path with itp 'false':                 0 (count: 5, min: 0, max: 0, avg: 0.00)
Different non-trivial interpolants along paths:           4 (count: 5, min: 0, max: 2, avg: 0.80)
Equal non-trivial interpolants along paths:               2 (count: 5, min: 0, max: 1, avg: 0.40)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                5
Number of successful refinements:     5
Number of failed refinements:         0
Max. size of reached set before ref.: 1491
Max. size of reached set after ref.:  32
Avg. size of reached set before ref.: 941.80
Avg. size of reached set after ref.:  32.00

Total time for CEGAR algorithm:       2.852s
Time for refinements:                 0.244s
Average time for refinement:          0.048s
Max time for refinement:              0.067s

Code Coverage
-----------------------------
  Function coverage:      0.732
  Visited lines:          158
  Total lines:            459
  Line coverage:          0.344
  Visited conditions:     46
  Total conditions:       78
  Condition coverage:     0.590

CPAchecker general statistics
-----------------------------
Number of program locations:     665
Number of CFA edges:             717
Number of relevant variables:    120
Number of functions:             41
Number of loops:                 5
Size of reached set:             1304
  Number of reached locations:   211 (32%)
    Avg states per location:     6
    Max states per location:     24 (at node N521)
  Number of reached functions:   30 (73%)
  Number of partitions:          1302
    Avg size of partitions:      1
    Max size of partitions:      3 (with key [N175 (before lines 311-360), Function test called from node N123, stack depth 3 [258d79be], stack [main, runTest, test]])
  Number of target states:       0

Time for analysis setup:          3.396s
  Time for loading CPAs:          0.862s
  Time for loading parser:        0.757s
  Time for CFA construction:      1.574s
    Time for parsing file(s):     0.582s
    Time for AST to CFA:          0.378s
    Time for CFA sanity check:    0.106s
    Time for post-processing:     0.336s
      Time for var class.:        0.151s
Time for Analysis:                2.853s
CPU time for analysis:            2.860s
Time for analyzing result:        0.002s
Total time for CPAchecker:        6.255s
Total CPU time for CPAchecker:    6.260s
Time for statistics:              0.145s

Time for Garbage Collector:       0.131s (in 7 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 57MB (    55 MiB) max;     33MB (    31 MiB) avg;     62MB (    59 MiB) peak
Used non-heap memory:             32MB (    31 MiB) max;     26MB (    25 MiB) avg;     34MB (    32 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        35MB (    33 MiB) max;     28MB (    26 MiB) avg
Total process virtual memory:   8132MB (  7756 MiB) max;   8081MB (  7706 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
