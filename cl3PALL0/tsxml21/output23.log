scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/minepump_spec2_product52_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_03uppzig/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 235: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 244: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 299: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 318: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 442: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 494: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 517: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 566: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 598: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 612: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 621: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 941: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 987: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 778: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            37 (1% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            19 (51%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         18 (49%)
  Times precision was empty:       3 (8%)
  Times precision was {false}:     15 (41%)
  Times result was cached:         4 (11%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      15 (41%)
  Times result was 'false':        17 (46%)
Number of strengthen sat checks:   0
Number of coverage checks:         655
  BDD entailment checks:           11
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       66
Number of predicates discovered:          7
Number of abstraction locations:          3
Max number of predicates per location:    6
Avg number of predicates per location:    3
Total predicates per abstraction:         63
Max number of predicates per abstraction: 6
Avg number of predicates per abstraction: 2.10
Number of irrelevant predicates:          17 (27%)
Number of preds handled by boolean abs:   42 (67%)
  Total number of models for allsat:      41
  Max number of models for allsat:        10
  Avg number of models for allsat:        2.73

Time for post operator:                  0.480s
  Time for path formula creation:        0.457s
Time for strengthen operator:            0.033s
Time for prec operator:                  0.458s
  Time for abstraction:                  0.429s (Max:     0.033s, Count: 37)
    Boolean abstraction:                 0.145s
    Solving time:                        0.140s (Max:     0.016s)
    Model enumeration time:              0.025s
    Time for BDD construction:           0.018s (Max:     0.012s)
Time for merge operator:                 0.060s
Time for coverage check:                 0.001s
  Time for BDD entailment checks:        0.001s
Total time for SMT solver (w/o itp):     0.165s

Number of path formula cache hits:   2365 (56%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.407s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               344
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                          66 (count: 241, min: 0, max: 66, avg: 0.27)
Time for BDD node cleanup:                             0.001s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.081s
Automaton transfers with branching:                0
Automaton transfer successors:                         4071 (count: 4071, min: 1, max: 1, avg: 1.00) [1 x 4071]

CPA algorithm statistics
------------------------
Number of iterations:            3160
Max size of waitlist:            8
Average size of waitlist:        4
Number of computed successors:   3518
Max successors for one state:    2
Number of times merged:          322
Number of times stopped:         324
Number of times breaked:         4

Total time for CPA algorithm:         2.026s (Max:     0.619s)
  Time for choose from waitlist:      0.013s
  Time for precision adjustment:      0.682s
  Time for transfer relation:         0.976s
  Time for merge operator:            0.098s
  Time for stop operator:             0.037s
  Time for adding to reached set:     0.083s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   4
Avg. length of target path (in blocks):                  12 (count: 4, min: 2, max: 4, avg: 3.00)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.113s
  Counterexample analysis:                             0.059s (Max:     0.023s, Calls: 4)
    Refinement sat check:                              0.030s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.011s
  Precision update:                                    0.005s
  ARG update:                                          0.032s

Length of refined path (in blocks):                      12 (count: 4, min: 2, max: 4, avg: 3.00)
Number of affected states:                                8 (count: 4, min: 1, max: 3, avg: 2.00)
Length (states) of path with itp 'true':                  0 (count: 4, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:         8 (count: 4, min: 1, max: 3, avg: 2.00)
Length (states) of path with itp 'false':                 0 (count: 4, min: 0, max: 0, avg: 0.00)
Different non-trivial interpolants along paths:           3 (count: 4, min: 0, max: 1, avg: 0.75)
Equal non-trivial interpolants along paths:               1 (count: 4, min: 0, max: 1, avg: 0.25)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                4
Number of successful refinements:     4
Number of failed refinements:         0
Max. size of reached set before ref.: 724
Max. size of reached set after ref.:  32
Avg. size of reached set before ref.: 545.50
Avg. size of reached set after ref.:  32.00

Total time for CEGAR algorithm:       2.185s
Time for refinements:                 0.150s
Average time for refinement:          0.037s
Max time for refinement:              0.061s

Code Coverage
-----------------------------
  Function coverage:      0.700
  Visited lines:          150
  Total lines:            454
  Line coverage:          0.330
  Visited conditions:     44
  Total conditions:       76
  Condition coverage:     0.579

CPAchecker general statistics
-----------------------------
Number of program locations:     655
Number of CFA edges:             705
Number of relevant variables:    117
Number of functions:             40
Number of loops:                 5
Size of reached set:             1124
  Number of reached locations:   199 (30%)
    Avg states per location:     5
    Max states per location:     24 (at node N55)
  Number of reached functions:   28 (70%)
  Number of partitions:          1122
    Avg size of partitions:      1
    Max size of partitions:      3 (with key [N9 (before lines 56-105), Function test called from node N223, stack depth 3 [3370f42], stack [main, runTest, test]])
  Number of target states:       0

Time for analysis setup:          3.410s
  Time for loading CPAs:          0.865s
  Time for loading parser:        0.794s
  Time for CFA construction:      1.556s
    Time for parsing file(s):     0.578s
    Time for AST to CFA:          0.358s
    Time for CFA sanity check:    0.123s
    Time for post-processing:     0.329s
      Time for var class.:        0.143s
Time for Analysis:                2.186s
CPU time for analysis:            2.180s
Time for analyzing result:        0.006s
Total time for CPAchecker:        5.600s
Total CPU time for CPAchecker:    5.590s
Time for statistics:              0.163s

Time for Garbage Collector:       0.128s (in 6 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 58MB (    55 MiB) max;     31MB (    30 MiB) avg;     62MB (    60 MiB) peak
Used non-heap memory:             33MB (    31 MiB) max;     25MB (    24 MiB) avg;     34MB (    33 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        36MB (    34 MiB) max;     27MB (    26 MiB) avg
Total process virtual memory:   8132MB (  7755 MiB) max;   8071MB (  7697 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
