scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/minepump_spec1_product24_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_z8sm380t/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 356: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 402: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 457: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 489: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 498: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 708: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 824: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 833: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 888: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 923: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 946: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 193: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            33 (1% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            17 (52%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         16 (48%)
  Times precision was empty:       4 (12%)
  Times precision was {false}:     13 (39%)
  Times result was cached:         4 (12%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      12 (36%)
  Times result was 'false':        14 (42%)
Number of strengthen sat checks:   0
Number of coverage checks:         468
  BDD entailment checks:           8
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       58
Number of predicates discovered:          5
Number of abstraction locations:          3
Max number of predicates per location:    4
Avg number of predicates per location:    2
Total predicates per abstraction:         50
Max number of predicates per abstraction: 4
Avg number of predicates per abstraction: 2.00
Number of irrelevant predicates:          17 (34%)
Number of preds handled by boolean abs:   27 (54%)
  Total number of models for allsat:      23
  Max number of models for allsat:        4
  Avg number of models for allsat:        1.92

Time for post operator:                  0.329s
  Time for path formula creation:        0.304s
Time for strengthen operator:            0.038s
Time for prec operator:                  0.322s
  Time for abstraction:                  0.286s (Max:     0.021s, Count: 33)
    Boolean abstraction:                 0.076s
    Solving time:                        0.093s (Max:     0.012s)
    Model enumeration time:              0.009s
    Time for BDD construction:           0.006s (Max:     0.006s)
Time for merge operator:                 0.053s
Time for coverage check:                 0.001s
  Time for BDD entailment checks:        0.001s
Total time for SMT solver (w/o itp):     0.102s

Number of path formula cache hits:   2150 (63%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.260s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               224
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                          54 (count: 178, min: 0, max: 54, avg: 0.30)
Time for BDD node cleanup:                             0.024s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.082s
Automaton transfers with branching:                0
Automaton transfer successors:                         3278 (count: 3278, min: 1, max: 1, avg: 1.00) [1 x 3278]

CPA algorithm statistics
------------------------
Number of iterations:            2523
Max size of waitlist:            8
Average size of waitlist:        4
Number of computed successors:   2782
Max successors for one state:    2
Number of times merged:          230
Number of times stopped:         233
Number of times breaked:         4

Total time for CPA algorithm:         1.644s (Max:     0.464s)
  Time for choose from waitlist:      0.017s
  Time for precision adjustment:      0.539s
  Time for transfer relation:         0.831s
  Time for merge operator:            0.096s
  Time for stop operator:             0.026s
  Time for adding to reached set:     0.038s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   4
Avg. length of target path (in blocks):                  11 (count: 4, min: 2, max: 4, avg: 2.75)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.102s
  Counterexample analysis:                             0.055s (Max:     0.021s, Calls: 4)
    Refinement sat check:                              0.027s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.012s
  Precision update:                                    0.013s
  ARG update:                                          0.017s

Length of refined path (in blocks):                      10 (count: 4, min: 2, max: 3, avg: 2.50)
Number of affected states:                                6 (count: 4, min: 1, max: 2, avg: 1.50)
Length (states) of path with itp 'true':                  0 (count: 4, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:         6 (count: 4, min: 1, max: 2, avg: 1.50)
Length (states) of path with itp 'false':                 1 (count: 4, min: 0, max: 1, avg: 0.25)
Different non-trivial interpolants along paths:           1 (count: 4, min: 0, max: 1, avg: 0.25)
Equal non-trivial interpolants along paths:               1 (count: 4, min: 0, max: 1, avg: 0.25)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                4
Number of successful refinements:     4
Number of failed refinements:         0
Max. size of reached set before ref.: 967
Max. size of reached set after ref.:  28
Avg. size of reached set before ref.: 493.00
Avg. size of reached set after ref.:  28.00

Total time for CEGAR algorithm:       1.774s
Time for refinements:                 0.127s
Average time for refinement:          0.031s
Max time for refinement:              0.047s

Code Coverage
-----------------------------
  Function coverage:      0.676
  Visited lines:          128
  Total lines:            431
  Line coverage:          0.297
  Visited conditions:     38
  Total conditions:       70
  Condition coverage:     0.543

CPAchecker general statistics
-----------------------------
Number of program locations:     619
Number of CFA edges:             667
Number of relevant variables:    112
Number of functions:             37
Number of loops:                 5
Size of reached set:             676
  Number of reached locations:   173 (28%)
    Avg states per location:     3
    Max states per location:     16 (at node N499)
  Number of reached functions:   25 (68%)
  Number of partitions:          675
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N388 (before lines 553-602), Function test called from node N467, stack depth 3 [2931522b], stack [main, runTest, test]])
  Number of target states:       0

Time for analysis setup:          3.320s
  Time for loading CPAs:          0.830s
  Time for loading parser:        0.804s
  Time for CFA construction:      1.438s
    Time for parsing file(s):     0.519s
    Time for AST to CFA:          0.360s
    Time for CFA sanity check:    0.117s
    Time for post-processing:     0.291s
      Time for var class.:        0.121s
Time for Analysis:                1.774s
CPU time for analysis:            1.770s
Time for analyzing result:        0.001s
Total time for CPAchecker:        5.111s
Total CPU time for CPAchecker:    5.100s
Time for statistics:              0.129s

Time for Garbage Collector:       0.126s (in 5 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 56MB (    54 MiB) max;     30MB (    29 MiB) avg;     62MB (    59 MiB) peak
Used non-heap memory:             32MB (    31 MiB) max;     24MB (    23 MiB) avg;     34MB (    32 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        35MB (    33 MiB) max;     26MB (    25 MiB) avg
Total process virtual memory:   8132MB (  7755 MiB) max;   8065MB (  7692 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
