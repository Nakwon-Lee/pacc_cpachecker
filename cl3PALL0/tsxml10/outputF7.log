scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/minepump_spec5_product45_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_rfj6nprk/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 91: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 123: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 137: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 466: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 512: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 700: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 709: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 764: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 845: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 868: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 965: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 303: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            57 (1% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            29 (51%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         28 (49%)
  Times precision was empty:       10 (18%)
  Times precision was {false}:     32 (56%)
  Times result was cached:         0 (0%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      15 (26%)
  Times result was 'false':        29 (51%)
Number of strengthen sat checks:   0
Number of coverage checks:         1123
  BDD entailment checks:           31
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       70
Number of predicates discovered:          10
Number of abstraction locations:          3
Max number of predicates per location:    9
Avg number of predicates per location:    3
Total predicates per abstraction:         147
Max number of predicates per abstraction: 9
Avg number of predicates per abstraction: 3.13
Number of irrelevant predicates:          32 (22%)
Number of preds handled by boolean abs:   115 (78%)
  Total number of models for allsat:      72
  Max number of models for allsat:        8
  Avg number of models for allsat:        4.80

Time for post operator:                  0.668s
  Time for path formula creation:        0.606s
Time for strengthen operator:            0.101s
Time for prec operator:                  0.836s
  Time for abstraction:                  0.805s (Max:     0.037s, Count: 57)
    Boolean abstraction:                 0.236s
    Solving time:                        0.309s (Max:     0.017s)
    Model enumeration time:              0.055s
    Time for BDD construction:           0.052s (Max:     0.015s)
Time for merge operator:                 0.099s
Time for coverage check:                 0.011s
  Time for BDD entailment checks:        0.006s
Total time for SMT solver (w/o itp):     0.364s

Number of path formula cache hits:   4712 (62%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.565s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               637
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         372 (count: 475, min: 0, max: 198, avg: 0.78)
Time for BDD node cleanup:                             0.009s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.112s
Automaton transfers with branching:                0
Automaton transfer successors:                         7293 (count: 7293, min: 1, max: 1, avg: 1.00) [1 x 7293]

CPA algorithm statistics
------------------------
Number of iterations:            5664
Max size of waitlist:            12
Average size of waitlist:        5
Number of computed successors:   6261
Max successors for one state:    2
Number of times merged:          546
Number of times stopped:         548
Number of times breaked:         4

Total time for CPA algorithm:         3.118s (Max:     1.160s)
  Time for choose from waitlist:      0.038s
  Time for precision adjustment:      1.097s
  Time for transfer relation:         1.476s
  Time for merge operator:            0.182s
  Time for stop operator:             0.072s
  Time for adding to reached set:     0.087s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   4
Avg. length of target path (in blocks):                  14 (count: 4, min: 2, max: 7, avg: 3.50)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.187s
  Counterexample analysis:                             0.115s (Max:     0.055s, Calls: 4)
    Refinement sat check:                              0.056s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.013s
  Precision update:                                    0.002s
  ARG update:                                          0.047s

Length of refined path (in blocks):                      13 (count: 4, min: 2, max: 6, avg: 3.25)
Number of affected states:                                9 (count: 4, min: 1, max: 5, avg: 2.25)
Length (states) of path with itp 'true':                  0 (count: 4, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:         9 (count: 4, min: 1, max: 5, avg: 2.25)
Length (states) of path with itp 'false':                 1 (count: 4, min: 0, max: 1, avg: 0.25)
Different non-trivial interpolants along paths:           2 (count: 4, min: 0, max: 1, avg: 0.50)
Equal non-trivial interpolants along paths:               3 (count: 4, min: 0, max: 3, avg: 0.75)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                4
Number of successful refinements:     4
Number of failed refinements:         0
Max. size of reached set before ref.: 2255
Max. size of reached set after ref.:  32
Avg. size of reached set before ref.: 937.75
Avg. size of reached set after ref.:  32.00

Total time for CEGAR algorithm:       3.348s
Time for refinements:                 0.229s
Average time for refinement:          0.057s
Max time for refinement:              0.095s

Code Coverage
-----------------------------
  Function coverage:      0.737
  Visited lines:          141
  Total lines:            439
  Line coverage:          0.321
  Visited conditions:     42
  Total conditions:       74
  Condition coverage:     0.568

CPAchecker general statistics
-----------------------------
Number of program locations:     632
Number of CFA edges:             683
Number of relevant variables:    116
Number of functions:             38
Number of loops:                 5
Size of reached set:             2062
  Number of reached locations:   190 (30%)
    Avg states per location:     10
    Max states per location:     40 (at node N411)
  Number of reached functions:   28 (74%)
  Number of partitions:          2058
    Avg size of partitions:      1
    Max size of partitions:      5 (with key [N522 (before lines 779-824), Function test called from node N624, stack depth 3 [5b7a8434], stack [main, runTest, test]])
  Number of target states:       0

Time for analysis setup:          3.320s
  Time for loading CPAs:          0.739s
  Time for loading parser:        0.799s
  Time for CFA construction:      1.557s
    Time for parsing file(s):     0.556s
    Time for AST to CFA:          0.323s
    Time for CFA sanity check:    0.101s
    Time for post-processing:     0.391s
      Time for var class.:        0.189s
Time for Analysis:                3.348s
CPU time for analysis:            3.340s
Time for analyzing result:        0.002s
Total time for CPAchecker:        6.676s
Total CPU time for CPAchecker:    6.660s
Time for statistics:              0.164s

Time for Garbage Collector:       0.139s (in 6 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 57MB (    55 MiB) max;     33MB (    31 MiB) avg;     64MB (    61 MiB) peak
Used non-heap memory:             34MB (    32 MiB) max;     26MB (    25 MiB) avg;     35MB (    34 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        36MB (    35 MiB) max;     28MB (    27 MiB) avg
Total process virtual memory:   8132MB (  7755 MiB) max;   8080MB (  7706 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
