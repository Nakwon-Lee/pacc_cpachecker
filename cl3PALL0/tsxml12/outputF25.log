scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/minepump_spec4_product06_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_6ljaldxl/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 140: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 192: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 224: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 343: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 352: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 783: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 829: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 841: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 864: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 620: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            17 (2% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            9 (53%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         8 (47%)
  Times precision was empty:       3 (18%)
  Times precision was {false}:     9 (53%)
  Times result was cached:         0 (0%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      5 (29%)
  Times result was 'false':        8 (47%)
Number of strengthen sat checks:   0
Number of coverage checks:         132
  BDD entailment checks:           4
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       40
Number of predicates discovered:          5
Number of abstraction locations:          3
Max number of predicates per location:    4
Avg number of predicates per location:    2
Total predicates per abstraction:         27
Max number of predicates per abstraction: 4
Avg number of predicates per abstraction: 1.93
Number of irrelevant predicates:          9 (33%)
Number of preds handled by boolean abs:   18 (67%)
  Total number of models for allsat:      8
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.60

Time for post operator:                  0.221s
  Time for path formula creation:        0.212s
Time for strengthen operator:            0.018s
Time for prec operator:                  0.183s
  Time for abstraction:                  0.157s (Max:     0.036s, Count: 17)
    Boolean abstraction:                 0.033s
    Solving time:                        0.028s (Max:     0.008s)
    Model enumeration time:              0.001s
    Time for BDD construction:           0.013s (Max:     0.008s)
Time for merge operator:                 0.027s
Time for coverage check:                 0.000s
  Time for BDD entailment checks:        0.000s
Total time for SMT solver (w/o itp):     0.029s

Number of path formula cache hits:   350 (35%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.197s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               216
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                           0 (count: 108, min: 0, max: 0, avg: 0.00)
Time for BDD node cleanup:                             0.000s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.034s
Automaton transfers with branching:                0
Automaton transfer successors:                          965 (count: 965, min: 1, max: 1, avg: 1.00) [1 x 965]

CPA algorithm statistics
------------------------
Number of iterations:            724
Max size of waitlist:            6
Average size of waitlist:        2
Number of computed successors:   803
Max successors for one state:    2
Number of times merged:          64
Number of times stopped:         65
Number of times breaked:         2

Total time for CPA algorithm:         0.837s (Max:     0.307s)
  Time for choose from waitlist:      0.011s
  Time for precision adjustment:      0.305s
  Time for transfer relation:         0.419s
  Time for merge operator:            0.035s
  Time for stop operator:             0.015s
  Time for adding to reached set:     0.019s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   2
Avg. length of target path (in blocks):                   5 (count: 2, min: 2, max: 3, avg: 2.50)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.049s
  Counterexample analysis:                             0.023s (Max:     0.015s, Calls: 2)
    Refinement sat check:                              0.012s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.001s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.011s
  Precision update:                                    0.002s
  ARG update:                                          0.008s

Length of refined path (in blocks):                       4 (count: 2, min: 2, max: 2, avg: 2.00)
Number of affected states:                                2 (count: 2, min: 1, max: 1, avg: 1.00)
Length (states) of path with itp 'true':                  0 (count: 2, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:         2 (count: 2, min: 1, max: 1, avg: 1.00)
Length (states) of path with itp 'false':                 1 (count: 2, min: 0, max: 1, avg: 0.50)
Different non-trivial interpolants along paths:           0 (count: 2, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:               0 (count: 2, min: 0, max: 0, avg: 0.00)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                2
Number of successful refinements:     2
Number of failed refinements:         0
Max. size of reached set before ref.: 289
Max. size of reached set after ref.:  28
Avg. size of reached set before ref.: 195.50
Avg. size of reached set after ref.:  28.00

Total time for CEGAR algorithm:       0.901s
Time for refinements:                 0.064s
Average time for refinement:          0.032s
Max time for refinement:              0.045s

Code Coverage
-----------------------------
  Function coverage:      0.667
  Visited lines:          106
  Total lines:            406
  Line coverage:          0.261
  Visited conditions:     30
  Total conditions:       62
  Condition coverage:     0.484

CPAchecker general statistics
-----------------------------
Number of program locations:     574
Number of CFA edges:             615
Number of relevant variables:    107
Number of functions:             33
Number of loops:                 5
Size of reached set:             396
  Number of reached locations:   141 (25%)
    Avg states per location:     2
    Max states per location:     8 (at node N144)
  Number of reached functions:   22 (67%)
  Number of partitions:          395
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N220 (before lines 410-457), Function test called from node N46, stack depth 3 [11bb571c], stack [main, runTest, test]])
  Number of target states:       0

Time for analysis setup:          3.267s
  Time for loading CPAs:          0.891s
  Time for loading parser:        0.767s
  Time for CFA construction:      1.417s
    Time for parsing file(s):     0.552s
    Time for AST to CFA:          0.327s
    Time for CFA sanity check:    0.073s
    Time for post-processing:     0.293s
      Time for var class.:        0.117s
Time for Analysis:                0.902s
CPU time for analysis:            0.900s
Time for analyzing result:        0.000s
Total time for CPAchecker:        4.174s
Total CPU time for CPAchecker:    4.170s
Time for statistics:              0.116s

Time for Garbage Collector:       0.115s (in 4 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 46MB (    44 MiB) max;     29MB (    27 MiB) avg;     62MB (    59 MiB) peak
Used non-heap memory:             31MB (    29 MiB) max;     23MB (    22 MiB) avg;     32MB (    31 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        33MB (    32 MiB) max;     24MB (    23 MiB) avg
Total process virtual memory:   8132MB (  7755 MiB) max;   8057MB (  7683 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
