scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.4-simple/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--cpufreq--pcc-cpufreq.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_n1bm_g4a/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function acpi_evaluate_object to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_pr_debug to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ioread32 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iowrite32 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iowrite16 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function acpi_read to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function acpi_write to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ioread16 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function cpufreq_notify_transition to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function cpufreq_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iounmap to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_percpu to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            4680 (7% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  4142 (89%)
  Because of loop head:            520 (11%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         18 (0%)
  Times precision was empty:       1389 (30%)
  Times precision was {false}:     339 (7%)
  Times result was cached:         2731 (58%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      221 (5%)
  Times result was 'false':        60 (1%)
Number of strengthen sat checks:   0
Number of coverage checks:         3876
  BDD entailment checks:           1278
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       111
Number of predicates discovered:          3
Number of abstraction locations:          43
Max number of predicates per location:    2
Avg number of predicates per location:    1
Total predicates per abstraction:         4488
Max number of predicates per abstraction: 2
Avg number of predicates per abstraction: 8.01
Number of irrelevant predicates:          2588 (58%)
Number of preds handled by boolean abs:   272 (6%)
  Total number of models for allsat:      234
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.06

Time for post operator:                  4.624s
  Time for path formula creation:        4.503s
Time for strengthen operator:            0.135s
Time for prec operator:                  3.259s
  Time for abstraction:                  2.918s (Max:     0.080s, Count: 4680)
    Boolean abstraction:                 0.395s
    Solving time:                        0.408s (Max:     0.014s)
    Model enumeration time:              0.020s
    Time for BDD construction:           0.068s (Max:     0.012s)
Time for merge operator:                 0.296s
Time for coverage check:                 0.033s
  Time for BDD entailment checks:        0.030s
Total time for SMT solver (w/o itp):     0.428s

Number of path formula cache hits:   42049 (59%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     4.014s

Total number of created targets for pointer analysis: 10
   Number of created targets for uf: *unsigned_long_long_int is 11


Number of BDD nodes:                               206
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         431 (count: 5707, min: 0, max: 110, avg: 0.08)
Time for BDD node cleanup:                             0.001s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.377s
Automaton transfers with branching:                0
Automaton transfer successors:                        67961 (count: 67961, min: 1, max: 1, avg: 1.00) [1 x 67961]

CPA algorithm statistics
------------------------
Number of iterations:            22145
Max size of waitlist:            23
Average size of waitlist:        10
Number of computed successors:   24301
Max successors for one state:    2
Number of times merged:          1299
Number of times stopped:         2062
Number of times breaked:         18

Total time for CPA algorithm:        12.373s (Max:     1.606s)
  Time for choose from waitlist:      0.090s
  Time for precision adjustment:      3.834s
  Time for transfer relation:         6.957s
  Time for merge operator:            0.489s
  Time for stop operator:             0.140s
  Time for adding to reached set:     0.271s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   18
Avg. length of target path (in blocks):                 399 (count: 18, min: 8, max: 33, avg: 22.17)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.664s
  Counterexample analysis:                             0.394s (Max:     0.037s, Calls: 18)
    Refinement sat check:                              0.266s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.003s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.053s
  Precision update:                                    0.041s
  ARG update:                                          0.161s

Length of refined path (in blocks):                     276 (count: 18, min: 3, max: 25, avg: 15.33)
Number of affected states:                              258 (count: 18, min: 2, max: 24, avg: 14.33)
Length (states) of path with itp 'true':                  0 (count: 18, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:       258 (count: 18, min: 2, max: 24, avg: 14.33)
Length (states) of path with itp 'false':                18 (count: 18, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 18, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:             240 (count: 18, min: 1, max: 23, avg: 13.33)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                18
Number of successful refinements:     18
Number of failed refinements:         0
Max. size of reached set before ref.: 1321
Max. size of reached set after ref.:  3
Avg. size of reached set before ref.: 1218.39
Avg. size of reached set after ref.:  3.00

Total time for CEGAR algorithm:      13.165s
Time for refinements:                 0.790s
Average time for refinement:          0.043s
Max time for refinement:              0.096s

Code Coverage
-----------------------------
  Function coverage:      0.536
  Visited lines:          1243
  Total lines:            2510
  Line coverage:          0.495
  Visited conditions:     52
  Total conditions:       168
  Condition coverage:     0.310

CPAchecker general statistics
-----------------------------
Number of program locations:     2760
Number of CFA edges:             2871
Number of relevant variables:    549
Number of functions:             28
Number of loops:                 2
Size of reached set:             303
  Number of reached locations:   240 (9%)
    Avg states per location:     1
    Max states per location:     7 (at node N2283)
  Number of reached functions:   15 (54%)
  Number of partitions:          303
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0

Time for analysis setup:          5.284s
  Time for loading CPAs:          0.975s
  Time for loading parser:        0.774s
  Time for CFA construction:      3.372s
    Time for parsing file(s):     1.010s
    Time for AST to CFA:          1.042s
    Time for CFA sanity check:    0.275s
    Time for post-processing:     0.850s
      Time for var class.:        0.440s
Time for Analysis:               13.165s
CPU time for analysis:           13.170s
Time for analyzing result:        0.001s
Total time for CPAchecker:       18.454s
Total CPU time for CPAchecker:   18.430s
Time for statistics:              0.112s

Time for Garbage Collector:       0.400s (in 20 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 70MB (    67 MiB) max;     42MB (    40 MiB) avg;     74MB (    70 MiB) peak
Used non-heap memory:             38MB (    36 MiB) max;     32MB (    30 MiB) avg;     38MB (    36 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        39MB (    38 MiB) max;     34MB (    32 MiB) avg
Total process virtual memory:   8134MB (  7757 MiB) max;   8112MB (  7736 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
