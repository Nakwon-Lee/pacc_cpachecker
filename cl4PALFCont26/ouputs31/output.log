scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.4-simple/43_1a_cilled_true-unreach-call_ok_nondet_linux-43_1a-drivers--mtd--mtdoops_true-termination.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_l9x3kwoy/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 2120: Dead code detected: Goto: case_1 (CFACreationUtils.addEdgeToCFA, INFO)

line 2123: Dead code detected: Goto: case_2 (CFACreationUtils.addEdgeToCFA, INFO)

line 2126: Dead code detected: Goto: case_4 (CFACreationUtils.addEdgeToCFA, INFO)

line 2132: Dead code detected: Goto: switch_default (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_default is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_4 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_1 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_2 is not reachable. (CFAFunctionBuilder.leave, INFO)

line 2464: Dead code detected: Goto: case_1 (CFACreationUtils.addEdgeToCFA, INFO)

line 2467: Dead code detected: Goto: case_2 (CFACreationUtils.addEdgeToCFA, INFO)

line 2470: Dead code detected: Goto: case_4 (CFACreationUtils.addEdgeToCFA, INFO)

line 2476: Dead code detected: Goto: switch_default (CFACreationUtils.addEdgeToCFA, INFO)

line 2523: Dead code detected: Goto: case_1___0 (CFACreationUtils.addEdgeToCFA, INFO)

line 2526: Dead code detected: Goto: case_2___0 (CFACreationUtils.addEdgeToCFA, INFO)

line 2529: Dead code detected: Goto: case_4___0 (CFACreationUtils.addEdgeToCFA, INFO)

line 2535: Dead code detected: Goto: switch_default___0 (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label case_4___0 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_default is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_2___0 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_4 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_1 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_2 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_1___0 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function simple_strtoul to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function vmalloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __init_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function lockdep_init_map to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function register_mtd_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function unregister_mtd_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function vfree to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function kmsg_dump_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function flush_work_sync to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function kmsg_dump_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function schedule_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mtd_block_isbad to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mtd_read to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_final_state to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            572 (5% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  494 (86%)
  Because of loop head:            70 (12%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         8 (1%)
  Times precision was empty:       209 (37%)
  Times precision was {false}:     35 (6%)
  Times result was cached:         278 (49%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      50 (9%)
  Times result was 'false':        18 (3%)
Number of strengthen sat checks:   0
Number of coverage checks:         882
  BDD entailment checks:           152
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       75
Number of predicates discovered:          3
Number of abstraction locations:          41
Max number of predicates per location:    2
Avg number of predicates per location:    1
Total predicates per abstraction:         389
Max number of predicates per abstraction: 2
Avg number of predicates per abstraction: 4.58
Number of irrelevant predicates:          129 (33%)
Number of preds handled by boolean abs:   55 (14%)
  Total number of models for allsat:      57
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.14

Time for post operator:                  1.285s
  Time for path formula creation:        1.249s
Time for strengthen operator:            0.067s
Time for prec operator:                  0.968s
  Time for abstraction:                  0.867s (Max:     0.054s, Count: 572)
    Boolean abstraction:                 0.317s
    Solving time:                        0.307s (Max:     0.040s)
    Model enumeration time:              0.036s
    Time for BDD construction:           0.020s (Max:     0.012s)
Time for merge operator:                 0.121s
Time for coverage check:                 0.012s
  Time for BDD entailment checks:        0.010s
Total time for SMT solver (w/o itp):     0.343s

Number of path formula cache hits:   7817 (66%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     1.140s

Total number of created targets for pointer analysis: 24
   Number of created targets for uf: *unsigned_int is 16


Number of BDD nodes:                               205
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                          79 (count: 848, min: 0, max: 45, avg: 0.09)
Time for BDD node cleanup:                             0.000s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.149s
Automaton transfers with branching:                0
Automaton transfer successors:                        11140 (count: 11140, min: 1, max: 1, avg: 1.00) [1 x 11140]

CPA algorithm statistics
------------------------
Number of iterations:            3283
Max size of waitlist:            47
Average size of waitlist:        14
Number of computed successors:   3839
Max successors for one state:    2
Number of times merged:          365
Number of times stopped:         469
Number of times breaked:         8

Total time for CPA algorithm:         3.751s (Max:     0.728s)
  Time for choose from waitlist:      0.020s
  Time for precision adjustment:      1.216s
  Time for transfer relation:         2.139s
  Time for merge operator:            0.181s
  Time for stop operator:             0.053s
  Time for adding to reached set:     0.053s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   8
Avg. length of target path (in blocks):                 253 (count: 8, min: 5, max: 51, avg: 31.63)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.367s
  Counterexample analysis:                             0.273s (Max:     0.057s, Calls: 8)
    Refinement sat check:                              0.188s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.018s
  Precision update:                                    0.018s
  ARG update:                                          0.037s

Length of refined path (in blocks):                     229 (count: 8, min: 4, max: 50, avg: 28.63)
Number of affected states:                              200 (count: 8, min: 1, max: 49, avg: 25.00)
Length (states) of path with itp 'true':                 21 (count: 8, min: 0, max: 21, avg: 2.63)
Length (states) of path with itp non-trivial itp:       200 (count: 8, min: 1, max: 49, avg: 25.00)
Length (states) of path with itp 'false':                 8 (count: 8, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 8, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:             192 (count: 8, min: 0, max: 48, avg: 24.00)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                8
Number of successful refinements:     8
Number of failed refinements:         0
Max. size of reached set before ref.: 633
Max. size of reached set after ref.:  155
Avg. size of reached set before ref.: 391.13
Avg. size of reached set after ref.:  22.00

Total time for CEGAR algorithm:       4.183s
Time for refinements:                 0.430s
Average time for refinement:          0.053s
Max time for refinement:              0.077s

Code Coverage
-----------------------------
  Function coverage:      0.571
  Visited lines:          1255
  Total lines:            2055
  Line coverage:          0.611
  Visited conditions:     82
  Total conditions:       146
  Condition coverage:     0.562

CPAchecker general statistics
-----------------------------
Number of program locations:     2288
Number of CFA edges:             2361
Number of relevant variables:    520
Number of functions:             35
Number of loops:                 5
Size of reached set:             400
  Number of reached locations:   264 (12%)
    Avg states per location:     1
    Max states per location:     5 (at node N1258)
  Number of reached functions:   20 (57%)
  Number of partitions:          399
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N1260 (before line 3553), Function find_next_position called from node N1628, stack depth 3 [75d4a80f], stack [main, mtdoops_notify_add, find_next_position]])
  Number of target states:       0

Time for analysis setup:          5.043s
  Time for loading CPAs:          1.019s
  Time for loading parser:        0.794s
  Time for CFA construction:      3.041s
    Time for parsing file(s):     0.954s
    Time for AST to CFA:          0.918s
    Time for CFA sanity check:    0.226s
    Time for post-processing:     0.744s
      Time for var class.:        0.391s
Time for Analysis:                4.183s
CPU time for analysis:            4.190s
Time for analyzing result:        0.001s
Total time for CPAchecker:        9.236s
Total CPU time for CPAchecker:    9.230s
Time for statistics:              0.109s

Time for Garbage Collector:       0.194s (in 8 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 63MB (    60 MiB) max;     34MB (    33 MiB) avg;     67MB (    64 MiB) peak
Used non-heap memory:             35MB (    34 MiB) max;     28MB (    26 MiB) avg;     36MB (    34 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        37MB (    35 MiB) max;     30MB (    28 MiB) avg
Total process virtual memory:   8133MB (  7757 MiB) max;   8091MB (  7716 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
