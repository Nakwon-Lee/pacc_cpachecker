scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-4.0-rc1-mav/linux-4.0-rc1---drivers--vme--bridges--vme_ca91cx42.ko_true-unreach-call.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_4b5pb79y/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

line 7469: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 7551: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 7576: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 7651: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 7766: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 7797: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 7892: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 7925: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 7981: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 8332: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 4683: Function pointer *((bridge->lm_callback)[i]) with type void (*)(int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 4471: Function pointer *(ops->alloc) with type void *(*)(struct device *, size_t , dma_addr_t *, gfp_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 4511: Function pointer *(ops->free) with type void (*)(struct device *, size_t , void *, dma_addr_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7683: Function pointer *arg0 with type int (*)(struct pci_dev *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7694: Function pointer *arg0 with type int (*)(struct pci_dev *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7717: Function pointer *arg0 with type int (*)(struct pci_dev *, struct pm_message ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7729: Function pointer *arg0 with type int (*)(struct pci_dev *, struct pm_message ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function __pci_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 7762: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___0 = ldv_xmalloc(32UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function pci_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_pre_probe to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_after_alloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_enable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_request_regions to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ioread32 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __init_waitqueue_head to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __mutex_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iowrite32 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function request_threaded_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __wake_up to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 7598: Ignoring call via function pointer ldv_interrupt_instance_thread_0_3::arg0 for which no suitable target was found in line: (*arg0)(arg1, arg2); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 7598: Ignoring function call through function pointer *arg0: (*arg0)(arg1, arg2); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function pci_release_regions to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_disable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 4683: Ignoring function call through function pointer *((bridge->lm_callback)[i]): (*((bridge->lm_callback)[i]))(i); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function vme_irq_handler to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function external_allocated_data to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __raw_spin_lock_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __list_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 7705: Ignoring call via function pointer ldv_pci_instance_shutdown_1_3::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 7705: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function vme_unregister_bridge to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 4218: Return type of function __builtin_unreachable is void, but result is used as type int: __builtin_unreachable(); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function __builtin_unreachable to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function debug_dma_free_coherent to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 4511: Ignoring function call through function pointer *(ops->free): (*(ops->free))(dev, size, vaddr, bus, attrs); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 7717: Ignoring call via function pointer ldv_pci_instance_suspend_1_8::arg0 for which no suitable target was found in line: tmp = (*arg0)(arg1, arg2); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 7717: Ignoring function call through function pointer *arg0: tmp = (*arg0)(arg1, arg2); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 7729: Ignoring call via function pointer ldv_pci_instance_suspend_late_1_7::arg0 for which no suitable target was found in line: tmp = (*arg0)(arg1, arg2); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 7729: Ignoring function call through function pointer *arg0: tmp = (*arg0)(arg1, arg2); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 7694: Ignoring call via function pointer ldv_pci_instance_resume_early_1_6::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 7694: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 7683: Ignoring call via function pointer ldv_pci_instance_resume_1_5::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 7683: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function list_del to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            3761 (4% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            2314 (62%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         1447 (38%)
  Times precision was empty:       1852 (49%)
  Times precision was {false}:     748 (20%)
  Times result was cached:         907 (24%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      254 (7%)
  Times result was 'false':        1453 (39%)
Number of strengthen sat checks:   0
Number of coverage checks:         7516
  BDD entailment checks:           782
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       404
Number of predicates discovered:          36
Number of abstraction locations:          32
Max number of predicates per location:    25
Avg number of predicates per location:    2
Total predicates per abstraction:         4678
Max number of predicates per abstraction: 25
Avg number of predicates per abstraction: 4.67
Number of irrelevant predicates:          2537 (54%)
Number of preds handled by boolean abs:   1283 (27%)
  Total number of models for allsat:      250
  Max number of models for allsat:        4
  Avg number of models for allsat:        0.98

Time for post operator:                  2.131s
  Time for path formula creation:        2.081s
Time for strengthen operator:            0.113s
Time for prec operator:                 10.324s
  Time for abstraction:                 10.175s (Max:     0.134s, Count: 3761)
    Boolean abstraction:                 5.479s
    Solving time:                        6.380s (Max:     0.092s)
    Model enumeration time:              0.646s
    Time for BDD construction:           0.033s (Max:     0.008s)
Time for merge operator:                 0.219s
Time for coverage check:                 0.006s
  Time for BDD entailment checks:        0.004s
Total time for SMT solver (w/o itp):     7.026s

Number of path formula cache hits:   77181 (84%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     1.608s

Total number of created targets for pointer analysis: 1931
   Number of created targets for uf: *(void)* is 11
   Number of created targets for uf: *(Return_type:_[enum_irqreturn],_Parameters:_2,_Parameter_1_type:_[signed_int],_Parameter_2_type:_[(void)*],_VarArgs:_false)* is 4
   Number of created targets for uf: *signed_int is 613
   Number of created targets for uf: *(struct_list_head)* is 615
   Number of created targets for uf: *(struct_pci_driver)* is 2
   Number of created targets for uf: *(struct_device)* is 4


Number of BDD nodes:                               1144
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        2553 (count: 9532, min: 0, max: 240, avg: 0.27)
Time for BDD node cleanup:                             0.001s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.309s
Automaton transfers with branching:                0
Automaton transfer successors:                        86848 (count: 86848, min: 1, max: 1, avg: 1.00) [1 x 86848]

CPA algorithm statistics
------------------------
Number of iterations:            60917
Max size of waitlist:            48
Average size of waitlist:        23
Number of computed successors:   67418
Max successors for one state:    2
Number of times merged:          3367
Number of times stopped:         3916
Number of times breaked:         231

Total time for CPA algorithm:        15.487s (Max:     0.710s)
  Time for choose from waitlist:      0.063s
  Time for precision adjustment:     10.785s
  Time for transfer relation:         3.809s
  Time for merge operator:            0.341s
  Time for stop operator:             0.084s
  Time for adding to reached set:     0.109s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   231
Avg. length of target path (in blocks):                 633 (count: 231, min: 1, max: 7, avg: 2.74)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   8.671s
  Counterexample analysis:                             8.152s (Max:     0.127s, Calls: 231)
    Refinement sat check:                              7.069s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.001s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.028s
  Precision update:                                    0.069s
  ARG update:                                          0.212s

Length of refined path (in blocks):                     614 (count: 230, min: 1, max: 6, avg: 2.67)
Number of affected states:                              153 (count: 230, min: 0, max: 4, avg: 0.67)
Length (states) of path with itp 'true':                231 (count: 230, min: 0, max: 3, avg: 1.00)
Length (states) of path with itp non-trivial itp:       153 (count: 230, min: 0, max: 4, avg: 0.67)
Length (states) of path with itp 'false':                12 (count: 230, min: 0, max: 1, avg: 0.05)
Different non-trivial interpolants along paths:          21 (count: 230, min: 0, max: 3, avg: 0.09)
Equal non-trivial interpolants along paths:              19 (count: 230, min: 0, max: 2, avg: 0.08)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                231
Number of successful refinements:     230
Number of failed refinements:         0
Max. size of reached set before ref.: 6595
Max. size of reached set after ref.:  6200
Avg. size of reached set before ref.: 2322.89
Avg. size of reached set after ref.:  2063.21

Total time for CEGAR algorithm:      25.550s
Time for refinements:                 9.640s
Average time for refinement:          0.041s
Max time for refinement:              0.175s

Code Coverage
-----------------------------
  Function coverage:      0.228
  Visited lines:          1396
  Total lines:            4260
  Line coverage:          0.328
  Visited conditions:     142
  Total conditions:       960
  Condition coverage:     0.148

CPAchecker general statistics
-----------------------------
Number of program locations:     6536
Number of CFA edges:             7178
Number of relevant variables:    846
Number of functions:             501
Number of loops:                 25
Size of reached set:             2279
  Number of reached locations:   781 (12%)
    Avg states per location:     2
    Max states per location:     33 (at node N4113)
  Number of reached functions:   114 (23%)
  Number of partitions:          2277
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N2636 (before lines 7767-7770), Function ldv_pci_pci_instance_1 called from node N2486, stack depth 8 [10272bbb], stack [main, ldv_entry_EMGentry_6, ldv_EMGentry_init_ca91cx42_driver_init_6_7, ca91cx42_driver_init, ldv___pci_register_driver_138, ldv___pci_register_driver, ldv_dispatch_register_5_2, ldv_pci_pci_instance_1]])
  Number of target states:       1
  Size of final wait list        22

Time for analysis setup:          4.806s
  Time for loading CPAs:          0.779s
  Time for loading parser:        0.572s
  Time for CFA construction:      3.342s
    Time for parsing file(s):     0.743s
    Time for AST to CFA:          1.264s
    Time for CFA sanity check:    0.334s
    Time for post-processing:     0.774s
      Time for var class.:        0.420s
Time for Analysis:               25.550s
CPU time for analysis:           25.550s
Total time for CPAchecker:       30.365s
Total CPU time for CPAchecker:   30.320s
Time for statistics:              0.145s

Time for Garbage Collector:       0.539s (in 52 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 76MB (    73 MiB) max;     51MB (    48 MiB) avg;     81MB (    77 MiB) peak
Used non-heap memory:             40MB (    39 MiB) max;     36MB (    34 MiB) avg;     41MB (    39 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        42MB (    40 MiB) max;     37MB (    36 MiB) avg
Total process virtual memory:   8131MB (  7754 MiB) max;   8121MB (  7745 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
