scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-4.0-rc1-mav/linux-4.0-rc1---drivers--vme--bridges--vme_ca91cx42.ko_true-unreach-call.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_hpmb594r/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

line 7469: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 7551: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 7576: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 7651: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 7766: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 7797: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 7892: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 7925: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 7981: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 8332: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 4683: Function pointer *((bridge->lm_callback)[i]) with type void (*)(int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 4471: Function pointer *(ops->alloc) with type void *(*)(struct device *, size_t , dma_addr_t *, gfp_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 4511: Function pointer *(ops->free) with type void (*)(struct device *, size_t , void *, dma_addr_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7683: Function pointer *arg0 with type int (*)(struct pci_dev *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7694: Function pointer *arg0 with type int (*)(struct pci_dev *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7717: Function pointer *arg0 with type int (*)(struct pci_dev *, struct pm_message ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7729: Function pointer *arg0 with type int (*)(struct pci_dev *, struct pm_message ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function __pci_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 7762: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___0 = ldv_xmalloc(32UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function pci_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_pre_probe to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_after_alloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_enable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_request_regions to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ioread32 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __init_waitqueue_head to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __mutex_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iowrite32 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function request_threaded_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __wake_up to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 7598: Ignoring call via function pointer ldv_interrupt_instance_thread_0_3::arg0 for which no suitable target was found in line: (*arg0)(arg1, arg2); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 7598: Ignoring function call through function pointer *arg0: (*arg0)(arg1, arg2); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function pci_release_regions to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_disable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 4683: Ignoring function call through function pointer *((bridge->lm_callback)[i]): (*((bridge->lm_callback)[i]))(i); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function vme_irq_handler to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function external_allocated_data to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __raw_spin_lock_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __list_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function list_del to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _dev_info to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function vme_register_bridge to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 4218: Return type of function __builtin_unreachable is void, but result is used as type int: __builtin_unreachable(); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function __builtin_unreachable to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function debug_dma_free_coherent to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 4511: Ignoring function call through function pointer *(ops->free): (*(ops->free))(dev, size, vaddr, bus, attrs); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 7705: Ignoring call via function pointer ldv_pci_instance_shutdown_1_3::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 7705: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function vme_unregister_bridge to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 7717: Ignoring call via function pointer ldv_pci_instance_suspend_1_8::arg0 for which no suitable target was found in line: tmp = (*arg0)(arg1, arg2); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 7717: Ignoring function call through function pointer *arg0: tmp = (*arg0)(arg1, arg2); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 7729: Ignoring call via function pointer ldv_pci_instance_suspend_late_1_7::arg0 for which no suitable target was found in line: tmp = (*arg0)(arg1, arg2); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 7729: Ignoring function call through function pointer *arg0: tmp = (*arg0)(arg1, arg2); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 7694: Ignoring call via function pointer ldv_pci_instance_resume_early_1_6::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 7694: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 7683: Ignoring call via function pointer ldv_pci_instance_resume_1_5::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 7683: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            418647 (5% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            322225 (77%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         96422 (23%)
  Times precision was empty:       201340 (48%)
  Times precision was {false}:     12377 (3%)
  Times result was cached:         187400 (45%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      17530 (4%)
  Times result was 'false':        163236 (39%)
Number of strengthen sat checks:   0
Number of coverage checks:         995474
  BDD entailment checks:           298600
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       404
Number of predicates discovered:          54
Number of abstraction locations:          41
Max number of predicates per location:    38
Avg number of predicates per location:    11
Total predicates per abstraction:         2820864
Max number of predicates per abstraction: 37
Avg number of predicates per abstraction: 94.32
Number of irrelevant predicates:          474708 (17%)
Number of preds handled by boolean abs:   289405 (10%)
  Total number of models for allsat:      16326
  Max number of models for allsat:        18
  Avg number of models for allsat:        0.93

Time for post operator:                 45.394s
  Time for path formula creation:       43.328s
Time for strengthen operator:            5.136s
Time for prec operator:                394.071s
  Time for abstraction:                387.670s (Max:     0.452s, Count: 418647)
    Boolean abstraction:               182.636s
    Solving time:                      148.497s (Max:     0.099s)
    Model enumeration time:             43.147s
    Time for BDD construction:           0.821s (Max:     0.024s)
Time for merge operator:                 3.565s
Time for coverage check:                 0.420s
  Time for BDD entailment checks:        0.332s
Total time for SMT solver (w/o itp):   191.644s

Number of path formula cache hits:   8111946 (96%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    11.811s

Total number of created targets for pointer analysis: 89617
   Number of created targets for uf: *(void)* is 409
   Number of created targets for uf: *(Return_type:_[enum_irqreturn],_Parameters:_2,_Parameter_1_type:_[signed_int],_Parameter_2_type:_[(void)*],_VarArgs:_false)* is 56
   Number of created targets for uf: *signed_int is 16525
   Number of created targets for uf: *(struct_list_head)* is 23965
   Number of created targets for uf: *(struct_pci_driver)* is 2
   Number of created targets for uf: *(struct_device)* is 56


Number of BDD nodes:                               100592
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       96433 (count: 725354, min: 0, max: 2040, avg: 0.13)
Time for BDD node cleanup:                             0.140s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  9.534s
  Time for transition matches:                         3.999s
  Time for transition assertions:                      0.016s
  Time for transition actions:                         0.057s
Automaton transfers with branching:                0
Automaton transfer successors:                      7829128 (count: 7829128, min: 1, max: 1, avg: 1.00) [1 x 7829128]

CPA algorithm statistics
------------------------
Number of iterations:            5733857
Max size of waitlist:            153
Average size of waitlist:        73
Number of computed successors:   6374426
Max successors for one state:    2
Number of times merged:          348437
Number of times stopped:         469857
Number of times breaked:         481

Total time for CPA algorithm:       562.534s (Max:     9.664s)
  Time for choose from waitlist:      1.326s
  Time for precision adjustment:    420.847s
  Time for transfer relation:       113.604s
  Time for merge operator:            6.836s
  Time for stop operator:             4.755s
  Time for adding to reached set:     5.996s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   481
Avg. length of target path (in blocks):                5135 (count: 481, min: 1, max: 57, avg: 10.68)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  54.636s
  Counterexample analysis:                            44.477s (Max:     2.052s, Calls: 481)
    Refinement sat check:                             38.823s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.008s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.090s
  Precision update:                                    0.143s
  ARG update:                                          9.360s

Length of refined path (in blocks):                    4783 (count: 481, min: 1, max: 49, avg: 9.94)
Number of affected states:                             3781 (count: 481, min: 0, max: 47, avg: 7.86)
Length (states) of path with itp 'true':                521 (count: 481, min: 0, max: 22, avg: 1.08)
Length (states) of path with itp non-trivial itp:      3781 (count: 481, min: 0, max: 47, avg: 7.86)
Length (states) of path with itp 'false':                94 (count: 481, min: 0, max: 1, avg: 0.20)
Different non-trivial interpolants along paths:         225 (count: 481, min: 0, max: 7, avg: 0.47)
Equal non-trivial interpolants along paths:            3204 (count: 481, min: 0, max: 46, avg: 6.66)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                481
Number of successful refinements:     481
Number of failed refinements:         0
Max. size of reached set before ref.: 47041
Max. size of reached set after ref.:  46008
Avg. size of reached set before ref.: 16341.76
Avg. size of reached set after ref.:  4449.59

Total time for CEGAR algorithm:     625.767s
Time for refinements:                61.597s
Average time for refinement:          0.128s
Max time for refinement:              2.207s

Code Coverage
-----------------------------
  Function coverage:      0.289
  Visited lines:          1852
  Total lines:            4260
  Line coverage:          0.435
  Visited conditions:     224
  Total conditions:       960
  Condition coverage:     0.233

CPAchecker general statistics
-----------------------------
Number of program locations:     6536
Number of CFA edges:             7178
Number of relevant variables:    846
Number of functions:             501
Number of loops:                 25
Size of reached set:             21200
  Number of reached locations:   1151 (18%)
    Avg states per location:     18
    Max states per location:     370 (at node N4113)
  Number of reached functions:   145 (29%)
  Number of partitions:          21129
    Avg size of partitions:      1
    Max size of partitions:      9 (with key [N2105 (before line 6981), Function ca91cx42_probe called from node N2574, stack depth 10 [593ff28b], stack [main, ldv_entry_EMGentry_6, ldv_EMGentry_init_ca91cx42_driver_init_6_7, ca91cx42_driver_init, ldv___pci_register_driver_138, ldv___pci_register_driver, ldv_dispatch_register_5_2, ldv_pci_pci_instance_1, ldv_pci_instance_probe_1_17, ca91cx42_probe]])
  Number of target states:       0

Time for analysis setup:          5.091s
  Time for loading CPAs:          0.845s
  Time for loading parser:        0.535s
  Time for CFA construction:      3.587s
    Time for parsing file(s):     0.792s
    Time for AST to CFA:          1.441s
    Time for CFA sanity check:    0.373s
    Time for post-processing:     0.816s
      Time for var class.:        0.427s
Time for Analysis:              625.767s
CPU time for analysis:          625.770s
Time for analyzing result:        0.021s
Total time for CPAchecker:      630.864s
Total CPU time for CPAchecker:  630.850s
Time for statistics:              0.400s

Time for Garbage Collector:      46.206s (in 2147 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                297MB (   283 MiB) max;    151MB (   144 MiB) avg;    307MB (   292 MiB) peak
Used non-heap memory:             40MB (    38 MiB) max;     40MB (    38 MiB) avg;     41MB (    39 MiB) peak
Allocated heap memory:           303MB (   289 MiB) max;    223MB (   213 MiB) avg
Allocated non-heap memory:        43MB (    41 MiB) max;     42MB (    40 MiB) avg
Total process virtual memory:   9076MB (  8656 MiB) max;   8549MB (  8153 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
