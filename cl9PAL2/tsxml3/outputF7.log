scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/email_spec0_product19_true-unreach-call_true-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_a7rn85mo/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 130: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 139: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 154: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 285: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 317: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 326: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 335: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 360: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 469: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 492: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 816: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 845: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 893: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 940: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 985: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1063: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1132: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1266: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1349: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1396: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1443: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1488: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1551: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1658: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1712: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1784: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1831: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1877: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2432: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2478: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2505: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2526: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2563: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2600: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2639: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2678: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2715: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2752: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2789: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2826: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2863: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2269: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            6 (0% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            2 (33%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         4 (67%)
  Times precision was empty:       4 (67%)
  Times precision was {false}:     2 (33%)
  Times result was cached:         0 (0%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      0 (0%)
  Times result was 'false':        2 (33%)
Number of strengthen sat checks:   0
Number of coverage checks:         625
  BDD entailment checks:           1
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       377
Number of predicates discovered:          1
Number of abstraction locations:          1
Max number of predicates per location:    1
Avg number of predicates per location:    1
Total predicates per abstraction:         2
Max number of predicates per abstraction: 1
Avg number of predicates per abstraction: 1.00
Number of irrelevant predicates:          2 (100%)

Time for post operator:                  0.422s
  Time for path formula creation:        0.405s
Time for strengthen operator:            0.013s
Time for prec operator:                  0.070s
  Time for abstraction:                  0.047s (Max:     0.029s, Count: 6)
    Solving time:                        0.007s (Max:     0.006s)
    Model enumeration time:              0.000s
    Time for BDD construction:           0.000s (Max:     0.000s)
Time for merge operator:                 0.118s
Time for coverage check:                 0.008s
  Time for BDD entailment checks:        0.008s
Total time for SMT solver (w/o itp):     0.007s

Number of path formula cache hits:   2 (0%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.392s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               202
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                           0 (count: 19, min: 0, max: 0, avg: 0.00)
Time for BDD node cleanup:                             0.000s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.067s
Automaton transfers with branching:                0
Automaton transfer successors:                         2449 (count: 2449, min: 1, max: 1, avg: 1.00) [1 x 2449]

CPA algorithm statistics
------------------------
Number of iterations:            1667
Max size of waitlist:            10
Average size of waitlist:        4
Number of computed successors:   1981
Max successors for one state:    2
Number of times merged:          312
Number of times stopped:         313
Number of times breaked:         2

Total time for CPA algorithm:         1.165s (Max:     0.931s)
  Time for choose from waitlist:      0.030s
  Time for precision adjustment:      0.169s
  Time for transfer relation:         0.662s
  Time for merge operator:            0.189s
  Time for stop operator:             0.021s
  Time for adding to reached set:     0.023s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   2
Avg. length of target path (in blocks):                   4 (count: 2, min: 2, max: 2, avg: 2.00)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.073s
  Counterexample analysis:                             0.066s (Max:     0.043s, Calls: 2)
    Refinement sat check:                              0.044s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.000s
  Precision update:                                    0.001s
  ARG update:                                          0.000s

Length of refined path (in blocks):                       4 (count: 2, min: 2, max: 2, avg: 2.00)
Number of affected states:                                0 (count: 2, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp 'true':                  2 (count: 2, min: 1, max: 1, avg: 1.00)
Length (states) of path with itp non-trivial itp:         0 (count: 2, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp 'false':                 0 (count: 2, min: 0, max: 0, avg: 0.00)
Different non-trivial interpolants along paths:           0 (count: 2, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:               0 (count: 2, min: 0, max: 0, avg: 0.00)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                2
Number of successful refinements:     2
Number of failed refinements:         0
Max. size of reached set before ref.: 1551
Max. size of reached set after ref.:  1550
Avg. size of reached set before ref.: 1364.50
Avg. size of reached set after ref.:  1363.50

Total time for CEGAR algorithm:       1.298s
Time for refinements:                 0.120s
Average time for refinement:          0.060s
Max time for refinement:              0.063s

Code Coverage
-----------------------------
  Function coverage:      0.648
  Visited lines:          763
  Total lines:            1374
  Line coverage:          0.555
  Visited conditions:     252
  Total conditions:       486
  Condition coverage:     0.519

CPAchecker general statistics
-----------------------------
Number of program locations:     1890
Number of CFA edges:             2133
Number of relevant variables:    321
Number of functions:             108
Number of loops:                 4
Size of reached set:             1665
  Number of reached locations:   745 (39%)
    Avg states per location:     2
    Max states per location:     6 (at node N49)
  Number of reached functions:   70 (65%)
  Number of partitions:          1665
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0

Time for analysis setup:          2.851s
  Time for loading CPAs:          0.561s
  Time for loading parser:        0.532s
  Time for CFA construction:      1.612s
    Time for parsing file(s):     0.488s
    Time for AST to CFA:          0.467s
    Time for CFA sanity check:    0.159s
    Time for post-processing:     0.393s
      Time for var class.:        0.207s
Time for Analysis:                1.298s
CPU time for analysis:            1.300s
Time for analyzing result:        0.004s
Total time for CPAchecker:        4.152s
Total CPU time for CPAchecker:    4.140s
Time for statistics:              0.083s

Time for Garbage Collector:       0.113s (in 6 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 59MB (    56 MiB) max;     31MB (    30 MiB) avg;     63MB (    61 MiB) peak
Used non-heap memory:             34MB (    32 MiB) max;     25MB (    24 MiB) avg;     35MB (    34 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        37MB (    35 MiB) max;     27MB (    26 MiB) avg
Total process virtual memory:   8132MB (  7756 MiB) max;   8073MB (  7699 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
