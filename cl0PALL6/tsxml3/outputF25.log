scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-commit-tester/m0_true-unreach-call_drivers-staging-comedi-drivers-ni_660x-ko--107_1a--adbbc36.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_f5npkpcp/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 2006: Dead code detected: [size > 8192UL] (CFACreationUtils.addEdgeToCFA, INFO)

line 2006: Dead code detected: [!(size > 8192UL)] (CFACreationUtils.addEdgeToCFA, INFO)

line 2007: Dead code detected: tmp = kmalloc_large(size, flags); (CFACreationUtils.addEdgeToCFA, INFO)

line 2012: Dead code detected: [(flags & 1U) == 0U] (CFACreationUtils.addEdgeToCFA, INFO)

line 2012: Dead code detected: [!((flags & 1U) == 0U)] (CFACreationUtils.addEdgeToCFA, INFO)

line 2013: Dead code detected: tmp___0 = kmalloc_slab(size); (CFACreationUtils.addEdgeToCFA, INFO)

line 2015: Dead code detected: [!(((unsigned long)s) == ((unsigned long)((struct kmem_cache *)0)))] (CFACreationUtils.addEdgeToCFA, INFO)

line 2016: Dead code detected: return (16); (CFACreationUtils.addEdgeToCFA, INFO)

line 2020: Dead code detected: ret = kmem_cache_alloc_notrace(s, flags); (CFACreationUtils.addEdgeToCFA, INFO)

line 2914: Dead code detected: return (0); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 2139: Function pointer *(ops->free_coherent) with type void (*)(struct device *, size_t , void *, dma_addr_t ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 1816-1821: Function pointer *((void (*)(void *, unsigned long, const void *, size_t , size_t , gfp_t ))it_func) with type void (*)(void *, unsigned long, const void *, size_t , size_t , gfp_t ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_handler_precall to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function comedi_driver_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __pci_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function comedi_driver_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ni_gpct_device_destroy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __raw_spin_lock_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ni_tio_handle_interrupt to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ni_tio_set_mite_channel to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mite_release_channel to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function comedi_event to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mite_unsetup to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mite_list_devices to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mite_setup2 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function put_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function get_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function debug_dma_free_coherent to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 2139: Ignoring function call through function pointer *(ops->free_coherent): (*(ops->free_coherent))(dev, size, vaddr, bus); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function ni_gpct_device_construct to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ni_tio_init_counter to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function request_threaded_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            237 (5% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            225 (95%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         12 (5%)
  Times precision was empty:       231 (97%)
  Times precision was {false}:     6 (3%)
  Times result was cached:         0 (0%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      0 (0%)
  Times result was 'false':        6 (3%)
Number of strengthen sat checks:   0
Number of coverage checks:         463
  BDD entailment checks:           133
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       276
Number of predicates discovered:          1
Number of abstraction locations:          1
Max number of predicates per location:    1
Avg number of predicates per location:    1
Total predicates per abstraction:         6
Max number of predicates per abstraction: 1
Avg number of predicates per abstraction: 1.00
Number of irrelevant predicates:          6 (100%)

Time for post operator:                  1.288s
  Time for path formula creation:        1.260s
Time for strengthen operator:            0.044s
Time for prec operator:                  0.113s
  Time for abstraction:                  0.048s (Max:     0.015s, Count: 237)
    Solving time:                        0.003s (Max:     0.001s)
    Model enumeration time:              0.000s
    Time for BDD construction:           0.000s (Max:     0.000s)
Time for merge operator:                 0.102s
Time for coverage check:                 0.022s
  Time for BDD entailment checks:        0.022s
Total time for SMT solver (w/o itp):     0.003s

Number of path formula cache hits:   26 (1%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     1.221s

Total number of created targets for pointer analysis: 131
   Number of created targets for uf: *unsigned_short_int is 41
   Number of created targets for uf: *(void)* is 2
   Number of created targets for uf: *(struct_mite_dma_descriptor)* is 5
   Number of created targets for uf: *(struct_mite_dma_descriptor_ring)* is 33
   Number of created targets for uf: *unsigned_int is 5
   Number of created targets for uf: *(struct_mite_struct)* is 3
   Number of created targets for uf: *(struct_device)* is 5
   Number of created targets for uf: *(struct_ni_gpct_device)* is 17


Number of BDD nodes:                               202
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                           0 (count: 402, min: 0, max: 0, avg: 0.00)
Time for BDD node cleanup:                             0.000s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.087s
Automaton transfers with branching:                0
Automaton transfer successors:                         5172 (count: 5172, min: 1, max: 1, avg: 1.00) [1 x 5172]

CPA algorithm statistics
------------------------
Number of iterations:            3277
Max size of waitlist:            36
Average size of waitlist:        15
Number of computed successors:   3580
Max successors for one state:    2
Number of times merged:          165
Number of times stopped:         298
Number of times breaked:         6

Total time for CPA algorithm:         2.406s (Max:     1.759s)
  Time for choose from waitlist:      0.009s
  Time for precision adjustment:      0.311s
  Time for transfer relation:         1.789s
  Time for merge operator:            0.134s
  Time for stop operator:             0.053s
  Time for adding to reached set:     0.029s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   6
Avg. length of target path (in blocks):                   9 (count: 6, min: 1, max: 2, avg: 1.50)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.061s
  Counterexample analysis:                             0.039s (Max:     0.012s, Calls: 6)
    Refinement sat check:                              0.010s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.000s
  Precision update:                                    0.007s
  ARG update:                                          0.010s

Length of refined path (in blocks):                       9 (count: 6, min: 1, max: 2, avg: 1.50)
Number of affected states:                                0 (count: 6, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp 'true':                  3 (count: 6, min: 0, max: 1, avg: 0.50)
Length (states) of path with itp non-trivial itp:         0 (count: 6, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp 'false':                 0 (count: 6, min: 0, max: 0, avg: 0.00)
Different non-trivial interpolants along paths:           0 (count: 6, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:               0 (count: 6, min: 0, max: 0, avg: 0.00)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                6
Number of successful refinements:     6
Number of failed refinements:         0
Max. size of reached set before ref.: 232
Max. size of reached set after ref.:  231
Avg. size of reached set before ref.: 129.50
Avg. size of reached set after ref.:  128.50

Total time for CEGAR algorithm:       2.480s
Time for refinements:                 0.073s
Average time for refinement:          0.012s
Max time for refinement:              0.031s

Code Coverage
-----------------------------
  Function coverage:      0.644
  Visited lines:          1063
  Total lines:            1625
  Line coverage:          0.654
  Visited conditions:     178
  Total conditions:       408
  Condition coverage:     0.436

CPAchecker general statistics
-----------------------------
Number of program locations:     2135
Number of CFA edges:             2476
Number of relevant variables:    345
Number of functions:             90
Number of loops:                 30
Size of reached set:             3271
  Number of reached locations:   735 (34%)
    Avg states per location:     4
    Max states per location:     124 (at node N573)
  Number of reached functions:   58 (64%)
  Number of partitions:          3271
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0

Time for analysis setup:          3.488s
  Time for loading CPAs:          0.712s
  Time for loading parser:        0.515s
  Time for CFA construction:      2.157s
    Time for parsing file(s):     0.595s
    Time for AST to CFA:          0.687s
    Time for CFA sanity check:    0.156s
    Time for post-processing:     0.544s
      Time for var class.:        0.279s
Time for Analysis:                2.481s
CPU time for analysis:            2.470s
Time for analyzing result:        0.008s
Total time for CPAchecker:        5.973s
Total CPU time for CPAchecker:    5.960s
Time for statistics:              0.135s

Time for Garbage Collector:       0.171s (in 8 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 60MB (    57 MiB) max;     35MB (    33 MiB) avg;     67MB (    64 MiB) peak
Used non-heap memory:             35MB (    33 MiB) max;     27MB (    26 MiB) avg;     35MB (    34 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        36MB (    35 MiB) max;     29MB (    28 MiB) avg
Total process virtual memory:   8132MB (  7756 MiB) max;   8088MB (  7713 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
