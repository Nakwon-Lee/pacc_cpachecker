scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-commit-tester/m0_true-unreach-call_drivers-media-radio-si4713-i2c-ko--111_1a--064368f.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_uwayxdrt/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_handler_precall to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function i2c_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_final_state to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function complete to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock_nested to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function i2c_master_send to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usecs_to_jiffies to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function wait_for_completion_timeout to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function i2c_master_recv to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __gpio_set_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function regulator_bulk_disable to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function regulator_bulk_enable to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function msleep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function v4l2_device_unregister_subdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function regulator_bulk_free to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function gpio_free to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function gpio_request to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function gpio_direction_output to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value_probe to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function i2c_del_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strncpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function v4l2_ctrl_query_fill to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function might_fault to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _copy_to_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 3879: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((const void *)to, 0); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function __builtin_object_size to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function warn_slowpath_fmt to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _copy_from_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            41365 (0% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            41349 (100%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         16 (0%)
  Times precision was empty:       41357 (100%)
  Times precision was {false}:     8 (0%)
  Times result was cached:         0 (0%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      0 (0%)
  Times result was 'false':        8 (0%)
Number of strengthen sat checks:   0
Number of coverage checks:         3380155
  BDD entailment checks:           26171
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       3408
Number of predicates discovered:          1
Number of abstraction locations:          1
Max number of predicates per location:    1
Avg number of predicates per location:    1
Total predicates per abstraction:         8
Max number of predicates per abstraction: 1
Avg number of predicates per abstraction: 1.00
Number of irrelevant predicates:          8 (100%)

Time for post operator:                223.128s
  Time for path formula creation:      201.179s
Time for strengthen operator:           29.642s
Time for prec operator:                  5.662s
  Time for abstraction:                  0.236s (Max:     0.014s, Count: 41365)
    Solving time:                        0.039s (Max:     0.012s)
    Model enumeration time:              0.000s
    Time for BDD construction:           0.000s (Max:     0.000s)
Time for merge operator:               133.273s
Time for coverage check:                 0.259s
  Time for BDD entailment checks:        0.056s
Total time for SMT solver (w/o itp):     0.039s

Number of path formula cache hits:   13246884 (96%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:   156.508s

Total number of created targets for pointer analysis: 5792716
   Number of created targets for uf: *unsigned_short_int is 4
   Number of created targets for uf: *signed_char is 336
   Number of created targets for uf: *signed_int is 9
   Number of created targets for uf: *(unsigned_long_int)* is 306
   Number of created targets for uf: *unsigned_char is 350456
   Number of created targets for uf: *(unsigned_int)* is 306
   Number of created targets for uf: *unsigned_int is 15227
   Number of created targets for uf: *char is 21


Number of BDD nodes:                               202
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                           0 (count: 67578, min: 0, max: 0, avg: 0.00)
Time for BDD node cleanup:                             0.008s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                 16.265s
  Time for transition matches:                         5.937s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.001s
Automaton transfers with branching:                0
Automaton transfer successors:                     12175941 (count: 12175941, min: 1, max: 1, avg: 1.00) [1 x 12175941]

CPA algorithm statistics
------------------------
Number of iterations:            7662911
Max size of waitlist:            67
Average size of waitlist:        35
Number of computed successors:   9366111
Max successors for one state:    2
Number of times merged:          1676992
Number of times stopped:         1703163
Number of times breaked:         8

Total time for CPA algorithm:       895.527s (Max:   888.861s)
  Time for choose from waitlist:      1.719s
  Time for precision adjustment:    256.508s
  Time for transfer relation:       421.458s
  Time for merge operator:          163.951s
  Time for stop operator:             5.834s
  Time for adding to reached set:    12.010s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   8
Avg. length of target path (in blocks):                  24 (count: 8, min: 3, max: 3, avg: 3.00)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.135s
  Counterexample analysis:                             0.104s (Max:     0.021s, Calls: 8)
    Refinement sat check:                              0.087s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.000s
  Precision update:                                    0.011s
  ARG update:                                          0.000s

Length of refined path (in blocks):                      24 (count: 8, min: 3, max: 3, avg: 3.00)
Number of affected states:                                0 (count: 8, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp 'true':                 16 (count: 8, min: 2, max: 2, avg: 2.00)
Length (states) of path with itp non-trivial itp:         0 (count: 8, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp 'false':                 0 (count: 8, min: 0, max: 0, avg: 0.00)
Different non-trivial interpolants along paths:           0 (count: 8, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:               0 (count: 8, min: 0, max: 0, avg: 0.00)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                8
Number of successful refinements:     8
Number of failed refinements:         0
Max. size of reached set before ref.: 8004
Max. size of reached set after ref.:  8003
Avg. size of reached set before ref.: 7679.50
Avg. size of reached set after ref.:  7678.50

Total time for CEGAR algorithm:     895.964s
Time for refinements:                 0.357s
Average time for refinement:          0.044s
Max time for refinement:              0.097s

Shutdown was requested but CPAchecker is still running after 10s, forcing immediate termination now. (ForceTerminationOnShutdown.run, WARNING)

For your information: CPAchecker is currently hanging at
 com.google.common.collect.UnmodifiableIterator.<init>(UnmodifiableIterator.java:35)
com.google.common.collect.UnmodifiableListIterator.<init>(UnmodifiableListIterator.java:33)
com.google.common.collect.AbstractIndexedListIterator.<init>(AbstractIndexedListIterator.java:66)
com.google.common.collect.Iterators$10.<init>(Iterators.java:1011)
com.google.common.collect.Iterators.forArray(Iterators.java:1011)
com.google.common.collect.RegularImmutableList.listIterator(RegularImmutableList.java:66)
com.google.common.collect.ImmutableList.listIterator(ImmutableList.java:324)
com.google.common.collect.ImmutableList.iterator(ImmutableList.java:319)
com.google.common.collect.ImmutableList.iterator(ImmutableList.java:51)
org.sosy_lab.cpachecker.util.AbstractStates.extractStateByType(AbstractStates.java:89)
org.sosy_lab.cpachecker.util.AbstractStates.extractStateByType(AbstractStates.java:86)
org.sosy_lab.cpachecker.util.AbstractStates.extractLocation(AbstractStates.java:126)
org.sosy_lab.cpachecker.util.AbstractStates$$Lambda$101/184244257.apply(Unknown Source)
com.google.common.collect.Iterators$7.transform(Iterators.java:750)
com.google.common.collect.TransformedIterator.next(TransformedIterator.java:47)
com.google.common.collect.Iterators$6.computeNext(Iterators.java:616)
com.google.common.collect.AbstractIterator.tryToComputeNext(AbstractIterator.java:145)
com.google.common.collect.AbstractIterator.hasNext(AbstractIterator.java:140)
com.google.common.collect.Iterators$6.computeNext(Iterators.java:615)
com.google.common.collect.AbstractIterator.tryToComputeNext(AbstractIterator.java:145)
com.google.common.collect.AbstractIterator.hasNext(AbstractIterator.java:140)
com.google.common.collect.ImmutableCollection$Builder.addAll(ImmutableCollection.java:408)
com.google.common.collect.ImmutableList$Builder.addAll(ImmutableList.java:699)
com.google.common.collect.ImmutableList.copyOf(ImmutableList.java:256)
com.google.common.collect.ImmutableList.copyOf(ImmutableList.java:209)
com.google.common.collect.FluentIterable.toList(FluentIterable.java:614)
org.sosy_lab.cpachecker.util.coverage.CoverageReport.getFunctionEntriesFromReached(CoverageReport.java:239)
org.sosy_lab.cpachecker.util.coverage.CoverageReport.writeCoverageReport(CoverageReport.java:93)
org.sosy_lab.cpachecker.core.MainCPAStatistics.printStatistics(MainCPAStatistics.java:276)
org.sosy_lab.cpachecker.core.CPAcheckerResult.printStatistics(CPAcheckerResult.java:104)
org.sosy_lab.cpachecker.cmdline.CPAMain.printResultAndStatistics(CPAMain.java:578)
org.sosy_lab.cpachecker.cmdline.CPAMain.main(CPAMain.java:186) 
 (ForceTerminationOnShutdown.run, INFO)

