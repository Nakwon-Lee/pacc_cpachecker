scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/elevator_spec13_product32_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_11wdjy2t/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 591: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 711: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 947: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1258: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1300: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1339: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1378: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1390: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1413: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1733: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1779: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1858: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2031: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2040: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2074: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2083: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2123: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2203: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2216: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2568: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2608: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2637: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2671: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2727: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2755: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2786: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2800: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3420: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3431: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3440: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1570: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            257 (0% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            197 (77%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         60 (23%)
  Times precision was empty:       80 (31%)
  Times precision was {false}:     44 (17%)
  Times result was cached:         5 (2%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      128 (50%)
  Times result was 'false':        135 (53%)
Number of strengthen sat checks:   0
Number of coverage checks:         124544
  BDD entailment checks:           116
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       3891
Number of predicates discovered:          51
Number of abstraction locations:          5
Max number of predicates per location:    42
Avg number of predicates per location:    13
Total predicates per abstraction:         1604
Max number of predicates per abstraction: 42
Avg number of predicates per abstraction: 9.33
Number of irrelevant predicates:          46 (3%)
Number of preds handled by boolean abs:   1535 (96%)
  Total number of models for allsat:      36525
  Max number of models for allsat:        4877
  Avg number of models for allsat:        285.35

Time for post operator:                  7.709s
  Time for path formula creation:        7.471s
Time for strengthen operator:            0.394s
Time for prec operator:                861.835s
  Time for abstraction:                861.524s (Max:   200.577s, Count: 257)
    Boolean abstraction:               851.621s
    Solving time:                       18.711s (Max:     4.289s)
    Model enumeration time:            829.307s
    Time for BDD construction:           5.001s (Max:     0.800s)
Time for merge operator:                 2.469s
Time for coverage check:                 0.047s
  Time for BDD entailment checks:        0.030s
Total time for SMT solver (w/o itp):   848.024s

Number of path formula cache hits:   18330 (6%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     7.201s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               75865
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       18665 (count: 8748, min: 0, max: 3345, avg: 2.13)
Time for BDD node cleanup:                             0.012s
Time for BDD garbage collection:                       0.105s (in 9 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.529s
  Time for transition matches:                         0.250s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.000s
Automaton transfers with branching:                0
Automaton transfer successors:                       304421 (count: 304421, min: 1, max: 1, avg: 1.00) [1 x 304421]

CPA algorithm statistics
------------------------
Number of iterations:            224290
Max size of waitlist:            75
Average size of waitlist:        46
Number of computed successors:   286728
Max successors for one state:    2
Number of times merged:          62214
Number of times stopped:         62225
Number of times breaked:         19

Total time for CPA algorithm:       881.871s (Max:   869.022s)
  Time for choose from waitlist:      0.206s
  Time for precision adjustment:    864.042s
  Time for transfer relation:        11.673s
  Time for merge operator:            3.544s
  Time for stop operator:             0.507s
  Time for adding to reached set:     0.583s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   19
Avg. length of target path (in blocks):                  45 (count: 19, min: 1, max: 5, avg: 2.37)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  11.370s
  Counterexample analysis:                            10.618s (Max:     4.185s, Calls: 19)
    Refinement sat check:                              8.885s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.021s
  Precision update:                                    0.011s
  ARG update:                                          0.059s

Length of refined path (in blocks):                      39 (count: 19, min: 1, max: 5, avg: 2.05)
Number of affected states:                                4 (count: 19, min: 0, max: 4, avg: 0.21)
Length (states) of path with itp 'true':                 16 (count: 19, min: 0, max: 3, avg: 0.84)
Length (states) of path with itp non-trivial itp:         4 (count: 19, min: 0, max: 4, avg: 0.21)
Length (states) of path with itp 'false':                 5 (count: 19, min: 0, max: 1, avg: 0.26)
Different non-trivial interpolants along paths:           3 (count: 19, min: 0, max: 3, avg: 0.16)
Equal non-trivial interpolants along paths:               0 (count: 19, min: 0, max: 0, avg: 0.00)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                19
Number of successful refinements:     19
Number of failed refinements:         0
Max. size of reached set before ref.: 56064
Max. size of reached set after ref.:  56000
Avg. size of reached set before ref.: 44167.74
Avg. size of reached set after ref.:  43551.89

Total time for CEGAR algorithm:     897.435s
Time for refinements:                14.651s
Average time for refinement:          0.771s
Max time for refinement:              4.458s

Code Coverage
-----------------------------
  Function coverage:      0.692
  Visited lines:          1093
  Total lines:            1731
  Line coverage:          0.631
  Visited conditions:     604
  Total conditions:       736
  Condition coverage:     0.821

CPAchecker general statistics
-----------------------------
Number of program locations:     2272
Number of CFA edges:             2765
Number of relevant variables:    328
Number of functions:             78
Number of loops:                 9
Size of reached set:             212667
  Number of reached locations:   1222 (54%)
    Avg states per location:     174
    Max states per location:     2545 (at node N413)
  Number of reached functions:   54 (69%)
  Number of partitions:          212653
    Avg size of partitions:      1
    Max size of partitions:      15 (with key [N238 (before lines 386-414), Function cleanup called from node N2699, stack depth 4 [299d1bd6], stack [main, runTest, test, cleanup]])
  Number of target states:       0
  Size of final wait list        65

Time for analysis setup:          2.907s
  Time for loading CPAs:          0.578s
  Time for loading parser:        0.538s
  Time for CFA construction:      1.620s
    Time for parsing file(s):     0.460s
    Time for AST to CFA:          0.486s
    Time for CFA sanity check:    0.165s
    Time for post-processing:     0.346s
      Time for var class.:        0.194s
Time for Analysis:              897.435s
CPU time for analysis:          897.420s
Total time for CPAchecker:      900.345s
Total CPU time for CPAchecker:  900.330s
Time for statistics:              1.562s

Time for Garbage Collector:       5.492s (in 119 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                392MB (   374 MiB) max;    238MB (   227 MiB) avg;    406MB (   387 MiB) peak
Used non-heap memory:             36MB (    34 MiB) max;     35MB (    33 MiB) avg;     37MB (    35 MiB) peak
Allocated heap memory:           566MB (   540 MiB) max;    354MB (   338 MiB) avg
Allocated non-heap memory:        38MB (    36 MiB) max;     38MB (    36 MiB) avg
Total process virtual memory:   8511MB (  8117 MiB) max;   8413MB (  8023 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
