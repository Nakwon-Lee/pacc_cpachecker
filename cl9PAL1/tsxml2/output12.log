scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/elevator_spec13_product32_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_s8aals_f/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 591: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 711: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 947: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1258: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1300: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1339: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1378: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1390: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1413: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1733: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1779: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1858: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2031: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2040: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2074: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2083: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2123: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2203: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2216: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2568: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2608: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2637: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2671: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2727: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2755: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2786: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2800: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3420: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3431: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3440: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1570: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            140 (0% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            96 (69%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         44 (31%)
  Times precision was empty:       116 (83%)
  Times precision was {false}:     23 (16%)
  Times result was cached:         1 (1%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      0 (0%)
  Times result was 'false':        24 (17%)
Number of strengthen sat checks:   0
Number of coverage checks:         55812
  BDD entailment checks:           2
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       3891
Number of predicates discovered:          1
Number of abstraction locations:          2
Max number of predicates per location:    1
Avg number of predicates per location:    1
Total predicates per abstraction:         24
Max number of predicates per abstraction: 1
Avg number of predicates per abstraction: 1.04
Number of irrelevant predicates:          24 (100%)

Time for post operator:                  5.868s
  Time for path formula creation:        5.717s
Time for strengthen operator:            0.214s
Time for prec operator:                  2.948s
  Time for abstraction:                  2.729s (Max:     0.421s, Count: 140)
    Solving time:                        0.857s (Max:     0.075s)
    Model enumeration time:              0.000s
    Time for BDD construction:           0.000s (Max:     0.000s)
Time for merge operator:                 2.012s
Time for coverage check:                 0.008s
  Time for BDD entailment checks:        0.000s
Total time for SMT solver (w/o itp):     0.857s

Number of path formula cache hits:   50 (0%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     5.510s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               202
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                           0 (count: 258, min: 0, max: 0, avg: 0.00)
Time for BDD node cleanup:                             0.001s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.549s
  Time for transition matches:                         0.247s
  Time for transition assertions:                      0.001s
  Time for transition actions:                         0.000s
Automaton transfers with branching:                0
Automaton transfer successors:                       136549 (count: 136549, min: 1, max: 1, avg: 1.00) [1 x 136549]

CPA algorithm statistics
------------------------
Number of iterations:            100563
Max size of waitlist:            82
Average size of waitlist:        42
Number of computed successors:   128583
Max successors for one state:    2
Number of times merged:          27905
Number of times stopped:         27907
Number of times breaked:         25

Total time for CPA algorithm:        17.907s (Max:     3.387s)
  Time for choose from waitlist:      0.146s
  Time for precision adjustment:      4.205s
  Time for transfer relation:         9.173s
  Time for merge operator:            2.855s
  Time for stop operator:             0.311s
  Time for adding to reached set:     0.293s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   25
Avg. length of target path (in blocks):                  44 (count: 25, min: 1, max: 3, avg: 1.76)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   4.318s
  Counterexample analysis:                             3.724s (Max:     0.612s, Calls: 25)
    Refinement sat check:                              3.119s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.000s
  Precision update:                                    0.003s
  ARG update:                                          0.007s

Length of refined path (in blocks):                      39 (count: 25, min: 1, max: 3, avg: 1.56)
Number of affected states:                                0 (count: 25, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp 'true':                 14 (count: 25, min: 0, max: 2, avg: 0.56)
Length (states) of path with itp non-trivial itp:         0 (count: 25, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp 'false':                 5 (count: 25, min: 0, max: 1, avg: 0.20)
Different non-trivial interpolants along paths:           0 (count: 25, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:               0 (count: 25, min: 0, max: 0, avg: 0.00)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                25
Number of successful refinements:     25
Number of failed refinements:         0
Max. size of reached set before ref.: 100474
Max. size of reached set after ref.:  100471
Avg. size of reached set before ref.: 62965.16
Avg. size of reached set after ref.:  62957.88

Total time for CEGAR algorithm:      26.809s
Time for refinements:                 7.387s
Average time for refinement:          0.295s
Max time for refinement:              0.869s

Code Coverage
-----------------------------
  Function coverage:      0.692
  Visited lines:          1099
  Total lines:            1731
  Line coverage:          0.635
  Visited conditions:     606
  Total conditions:       736
  Condition coverage:     0.823

CPAchecker general statistics
-----------------------------
Number of program locations:     2272
Number of CFA edges:             2765
Number of relevant variables:    328
Number of functions:             78
Number of loops:                 9
Size of reached set:             100471
  Number of reached locations:   1230 (54%)
    Avg states per location:     81
    Max states per location:     1180 (at node N413)
  Number of reached functions:   54 (69%)
  Number of partitions:          100471
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0
  Size of final wait list        74

Time for analysis setup:          3.104s
  Time for loading CPAs:          0.667s
  Time for loading parser:        0.543s
  Time for CFA construction:      1.721s
    Time for parsing file(s):     0.478s
    Time for AST to CFA:          0.486s
    Time for CFA sanity check:    0.194s
    Time for post-processing:     0.405s
      Time for var class.:        0.235s
Time for Analysis:               26.809s
CPU time for analysis:           26.800s
Total time for CPAchecker:       29.917s
Total CPU time for CPAchecker:   29.910s
Time for statistics:              1.007s

Time for Garbage Collector:       2.350s (in 71 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                204MB (   195 MiB) max;     98MB (    93 MiB) avg;    215MB (   205 MiB) peak
Used non-heap memory:             35MB (    34 MiB) max;     33MB (    31 MiB) avg;     36MB (    35 MiB) peak
Allocated heap memory:           273MB (   261 MiB) max;    169MB (   161 MiB) avg
Allocated non-heap memory:        38MB (    36 MiB) max;     36MB (    34 MiB) avg
Total process virtual memory:   8205MB (  7825 MiB) max;   8091MB (  7716 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
