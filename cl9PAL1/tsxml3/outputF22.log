scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/elevator_spec3_product30_true-unreach-call_true-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_hlbupt4r/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 78: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 117: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 156: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 515: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 905: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1078: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1087: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1121: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1130: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1170: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1250: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1263: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1615: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1654: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1688: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1744: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1772: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1786: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2406: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2726: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2772: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2784: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2807: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2921: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3157: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3468: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2563: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            28 (0% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            5 (18%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         23 (82%)
  Times precision was empty:       10 (36%)
  Times precision was {false}:     14 (50%)
  Times result was cached:         0 (0%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      4 (14%)
  Times result was 'false':        14 (50%)
Number of strengthen sat checks:   0
Number of coverage checks:         49492
  BDD entailment checks:           6
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       4038
Number of predicates discovered:          8
Number of abstraction locations:          2
Max number of predicates per location:    7
Avg number of predicates per location:    4
Total predicates per abstraction:         42
Max number of predicates per abstraction: 7
Avg number of predicates per abstraction: 2.33
Number of irrelevant predicates:          14 (33%)
Number of preds handled by boolean abs:   28 (67%)
  Total number of models for allsat:      21
  Max number of models for allsat:        7
  Avg number of models for allsat:        5.25

Time for post operator:                  4.891s
  Time for path formula creation:        4.744s
Time for strengthen operator:            0.254s
Time for prec operator:                 14.601s
  Time for abstraction:                 14.369s (Max:     4.541s, Count: 28)
    Boolean abstraction:                 6.591s
    Solving time:                       10.330s (Max:     3.323s)
    Model enumeration time:              2.046s
    Time for BDD construction:           0.009s (Max:     0.003s)
Time for merge operator:                 1.529s
Time for coverage check:                 0.016s
  Time for BDD entailment checks:        0.000s
Total time for SMT solver (w/o itp):    12.376s

Number of path formula cache hits:   18014 (15%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     4.593s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               358
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         136 (count: 185, min: 0, max: 57, avg: 0.74)
Time for BDD node cleanup:                             0.001s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.424s
Automaton transfers with branching:                0
Automaton transfer successors:                       119124 (count: 119124, min: 1, max: 1, avg: 1.00) [1 x 119124]

CPA algorithm statistics
------------------------
Number of iterations:            87935
Max size of waitlist:            17
Average size of waitlist:        9
Number of computed successors:   112696
Max successors for one state:    2
Number of times merged:          24743
Number of times stopped:         24744
Number of times breaked:         9

Total time for CPA algorithm:        27.695s (Max:    12.547s)
  Time for choose from waitlist:      0.144s
  Time for precision adjustment:     15.947s
  Time for transfer relation:         7.757s
  Time for merge operator:            2.440s
  Time for stop operator:             0.321s
  Time for adding to reached set:     0.301s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   9
Avg. length of target path (in blocks):                  10 (count: 9, min: 1, max: 2, avg: 1.11)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  10.630s
  Counterexample analysis:                            10.223s (Max:     4.885s, Calls: 9)
    Refinement sat check:                              9.419s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.002s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.009s
  Precision update:                                    0.004s
  ARG update:                                          0.091s

Length of refined path (in blocks):                      10 (count: 9, min: 1, max: 2, avg: 1.11)
Number of affected states:                                1 (count: 9, min: 0, max: 1, avg: 0.11)
Length (states) of path with itp 'true':                  0 (count: 9, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:         1 (count: 9, min: 0, max: 1, avg: 0.11)
Length (states) of path with itp 'false':                 0 (count: 9, min: 0, max: 0, avg: 0.00)
Different non-trivial interpolants along paths:           0 (count: 9, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:               0 (count: 9, min: 0, max: 0, avg: 0.00)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                9
Number of successful refinements:     9
Number of failed refinements:         0
Max. size of reached set before ref.: 54835
Max. size of reached set after ref.:  43817
Avg. size of reached set before ref.: 30439.67
Avg. size of reached set after ref.:  29214.56

Total time for CEGAR algorithm:      39.405s
Time for refinements:                11.421s
Average time for refinement:          1.269s
Max time for refinement:              5.136s

Code Coverage
-----------------------------
  Function coverage:      0.676
  Visited lines:          1150
  Total lines:            1755
  Line coverage:          0.655
  Visited conditions:     626
  Total conditions:       762
  Condition coverage:     0.822

CPAchecker general statistics
-----------------------------
Number of program locations:     2300
Number of CFA edges:             2809
Number of relevant variables:    317
Number of functions:             74
Number of loops:                 9
Size of reached set:             76913
  Number of reached locations:   1240 (54%)
    Avg states per location:     62
    Max states per location:     869 (at node N2198)
  Number of reached functions:   50 (68%)
  Number of partitions:          76911
    Avg size of partitions:      1
    Max size of partitions:      3 (with key [N217 (before lines 308-336), Function cleanup called from node N575, stack depth 4 [766f5049], stack [main, runTest, test, cleanup]])
  Number of target states:       0

Time for analysis setup:          3.255s
  Time for loading CPAs:          0.658s
  Time for loading parser:        0.555s
  Time for CFA construction:      1.890s
    Time for parsing file(s):     0.565s
    Time for AST to CFA:          0.530s
    Time for CFA sanity check:    0.179s
    Time for post-processing:     0.440s
      Time for var class.:        0.236s
Time for Analysis:               39.406s
CPU time for analysis:           39.410s
Time for analyzing result:        0.056s
Total time for CPAchecker:       42.665s
Total CPU time for CPAchecker:   42.660s
Time for statistics:              0.710s

Time for Garbage Collector:       1.714s (in 56 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                156MB (   149 MiB) max;     88MB (    84 MiB) avg;    167MB (   159 MiB) peak
Used non-heap memory:             35MB (    33 MiB) max;     33MB (    31 MiB) avg;     36MB (    34 MiB) peak
Allocated heap memory:           192MB (   183 MiB) max;    154MB (   147 MiB) avg
Allocated non-heap memory:        38MB (    36 MiB) max;     36MB (    34 MiB) avg
Total process virtual memory:   8345MB (  7959 MiB) max;   8233MB (  7852 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
