scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/elevator_spec3_product30_true-unreach-call_true-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_sxti7zz1/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 78: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 117: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 156: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 515: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 905: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1078: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1087: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1121: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1130: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1170: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1250: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1263: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1615: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1654: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1688: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1744: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1772: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1786: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2406: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2726: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2772: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2784: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2807: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2921: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3157: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3468: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2563: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            19 (0% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            2 (11%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         17 (89%)
  Times precision was empty:       10 (53%)
  Times precision was {false}:     8 (42%)
  Times result was cached:         0 (0%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      1 (5%)
  Times result was 'false':        8 (42%)
Number of strengthen sat checks:   0
Number of coverage checks:         30886
  BDD entailment checks:           0
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       4038
Number of predicates discovered:          8
Number of abstraction locations:          2
Max number of predicates per location:    7
Avg number of predicates per location:    4
Total predicates per abstraction:         15
Max number of predicates per abstraction: 7
Avg number of predicates per abstraction: 1.67
Number of irrelevant predicates:          8 (53%)
Number of preds handled by boolean abs:   7 (47%)
  Total number of models for allsat:      0
  Max number of models for allsat:        0
  Avg number of models for allsat:        0.00

Time for post operator:                  4.084s
  Time for path formula creation:        3.950s
Time for strengthen operator:            0.142s
Time for prec operator:                  5.452s
  Time for abstraction:                  5.267s (Max:     0.872s, Count: 19)
    Boolean abstraction:                 0.548s
    Solving time:                        4.207s (Max:     0.731s)
    Model enumeration time:              0.000s
    Time for BDD construction:           0.000s (Max:     0.000s)
Time for merge operator:                 0.957s
Time for coverage check:                 0.002s
Total time for SMT solver (w/o itp):     4.208s

Number of path formula cache hits:   9 (0%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     3.832s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               202
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                           0 (count: 69, min: 0, max: 0, avg: 0.00)
Time for BDD node cleanup:                             0.001s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.326s
Automaton transfers with branching:                0
Automaton transfer successors:                        74352 (count: 74352, min: 1, max: 1, avg: 1.00) [1 x 74352]

CPA algorithm statistics
------------------------
Number of iterations:            54839
Max size of waitlist:            17
Average size of waitlist:        9
Number of computed successors:   70294
Max successors for one state:    2
Number of times merged:          15443
Number of times stopped:         15443
Number of times breaked:         9

Total time for CPA algorithm:        15.246s (Max:     3.381s)
  Time for choose from waitlist:      0.100s
  Time for precision adjustment:      6.340s
  Time for transfer relation:         6.141s
  Time for merge operator:            1.517s
  Time for stop operator:             0.250s
  Time for adding to reached set:     0.250s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   9
Avg. length of target path (in blocks):                  10 (count: 9, min: 1, max: 2, avg: 1.11)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  10.030s
  Counterexample analysis:                             9.632s (Max:     4.983s, Calls: 9)
    Refinement sat check:                              8.861s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.004s
  Precision update:                                    0.018s
  ARG update:                                          0.081s

Length of refined path (in blocks):                      10 (count: 9, min: 1, max: 2, avg: 1.11)
Number of affected states:                                1 (count: 9, min: 0, max: 1, avg: 0.11)
Length (states) of path with itp 'true':                  0 (count: 9, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:         1 (count: 9, min: 0, max: 1, avg: 0.11)
Length (states) of path with itp 'false':                 0 (count: 9, min: 0, max: 0, avg: 0.00)
Different non-trivial interpolants along paths:           0 (count: 9, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:               0 (count: 9, min: 0, max: 0, avg: 0.00)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                9
Number of successful refinements:     9
Number of failed refinements:         0
Max. size of reached set before ref.: 54835
Max. size of reached set after ref.:  43817
Avg. size of reached set before ref.: 30439.67
Avg. size of reached set after ref.:  29214.56

Total time for CEGAR algorithm:      26.621s
Time for refinements:                11.130s
Average time for refinement:          1.236s
Max time for refinement:              5.667s

Code Coverage
-----------------------------
  Function coverage:      0.635
  Visited lines:          1083
  Total lines:            1755
  Line coverage:          0.617
  Visited conditions:     600
  Total conditions:       762
  Condition coverage:     0.787

CPAchecker general statistics
-----------------------------
Number of program locations:     2300
Number of CFA edges:             2809
Number of relevant variables:    317
Number of functions:             74
Number of loops:                 9
Size of reached set:             43817
  Number of reached locations:   1170 (51%)
    Avg states per location:     37
    Max states per location:     488 (at node N2198)
  Number of reached functions:   47 (64%)
  Number of partitions:          43817
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0
  Size of final wait list        1

Time for analysis setup:          3.241s
  Time for loading CPAs:          0.714s
  Time for loading parser:        0.542s
  Time for CFA construction:      1.804s
    Time for parsing file(s):     0.488s
    Time for AST to CFA:          0.567s
    Time for CFA sanity check:    0.197s
    Time for post-processing:     0.416s
      Time for var class.:        0.215s
Time for Analysis:               26.621s
CPU time for analysis:           26.630s
Total time for CPAchecker:       29.866s
Total CPU time for CPAchecker:   29.860s
Time for statistics:              0.585s

Time for Garbage Collector:       1.309s (in 45 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                146MB (   140 MiB) max;     78MB (    74 MiB) avg;    179MB (   170 MiB) peak
Used non-heap memory:             35MB (    33 MiB) max;     33MB (    31 MiB) avg;     36MB (    34 MiB) peak
Allocated heap memory:           216MB (   206 MiB) max;    145MB (   139 MiB) avg
Allocated non-heap memory:        38MB (    36 MiB) max;     36MB (    34 MiB) avg
Total process virtual memory:   8345MB (  7958 MiB) max;   8197MB (  7818 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
