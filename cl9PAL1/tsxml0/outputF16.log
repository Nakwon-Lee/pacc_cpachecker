scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/elevator_spec1_product03_true-unreach-call_true-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_ukbnajgq/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 50: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 73: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 393: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 439: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 642: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 771: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 780: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 814: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 823: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 863: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 943: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 956: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1308: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1337: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1371: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1427: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1458: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1472: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2045: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2056: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2065: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2370: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2610: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2921: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2962: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3001: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3040: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3390: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 230: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            179 (0% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            38 (21%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         141 (79%)
  Times precision was empty:       3 (2%)
  Times precision was {false}:     140 (78%)
  Times result was cached:         0 (0%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      36 (20%)
  Times result was 'false':        135 (75%)
Number of strengthen sat checks:   0
Number of coverage checks:         63749
  BDD entailment checks:           195
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       799
Number of predicates discovered:          42
Number of abstraction locations:          2
Max number of predicates per location:    41
Avg number of predicates per location:    21
Total predicates per abstraction:         1362
Max number of predicates per abstraction: 41
Avg number of predicates per abstraction: 7.74
Number of irrelevant predicates:          140 (10%)
Number of preds handled by boolean abs:   1222 (90%)
  Total number of models for allsat:      4240
  Max number of models for allsat:        376
  Avg number of models for allsat:        117.78

Time for post operator:                  2.874s
  Time for path formula creation:        2.778s
Time for strengthen operator:            0.181s
Time for prec operator:                 28.831s
  Time for abstraction:                 28.608s (Max:     1.811s, Count: 179)
    Boolean abstraction:                26.468s
    Solving time:                        5.672s (Max:     0.235s)
    Model enumeration time:             20.952s
    Time for BDD construction:           0.381s (Max:     0.061s)
Time for merge operator:                 0.958s
Time for coverage check:                 0.020s
  Time for BDD entailment checks:        0.015s
Total time for SMT solver (w/o itp):    26.624s

Number of path formula cache hits:   74799 (45%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     2.577s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               75259
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        9389 (count: 5027, min: 0, max: 607, avg: 1.87)
Time for BDD node cleanup:                             0.010s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.391s
Automaton transfers with branching:                0
Automaton transfer successors:                       152938 (count: 152938, min: 1, max: 1, avg: 1.00) [1 x 152938]

CPA algorithm statistics
------------------------
Number of iterations:            113930
Max size of waitlist:            15
Average size of waitlist:        7
Number of computed successors:   145854
Max successors for one state:    2
Number of times merged:          31777
Number of times stopped:         31780
Number of times breaked:         6

Total time for CPA algorithm:        38.109s (Max:    25.987s)
  Time for choose from waitlist:      0.130s
  Time for precision adjustment:     30.029s
  Time for transfer relation:         5.180s
  Time for merge operator:            1.524s
  Time for stop operator:             0.241s
  Time for adding to reached set:     0.319s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   6
Avg. length of target path (in blocks):                  19 (count: 6, min: 2, max: 5, avg: 3.17)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   2.666s
  Counterexample analysis:                             2.433s (Max:     0.694s, Calls: 6)
    Refinement sat check:                              2.184s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.017s
  Precision update:                                    0.001s
  ARG update:                                          0.156s

Length of refined path (in blocks):                      19 (count: 6, min: 2, max: 5, avg: 3.17)
Number of affected states:                               13 (count: 6, min: 1, max: 4, avg: 2.17)
Length (states) of path with itp 'true':                  0 (count: 6, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:        13 (count: 6, min: 1, max: 4, avg: 2.17)
Length (states) of path with itp 'false':                 0 (count: 6, min: 0, max: 0, avg: 0.00)
Different non-trivial interpolants along paths:           7 (count: 6, min: 0, max: 3, avg: 1.17)
Equal non-trivial interpolants along paths:               0 (count: 6, min: 0, max: 0, avg: 0.00)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                6
Number of successful refinements:     6
Number of failed refinements:         0
Max. size of reached set before ref.: 17976
Max. size of reached set after ref.:  3750
Avg. size of reached set before ref.: 11441.00
Avg. size of reached set after ref.:  3750.00

Total time for CEGAR algorithm:      41.132s
Time for refinements:                 2.980s
Average time for refinement:          0.496s
Max time for refinement:              0.779s

Code Coverage
-----------------------------
  Function coverage:      0.589
  Visited lines:          994
  Total lines:            1708
  Line coverage:          0.582
  Visited conditions:     586
  Total conditions:       754
  Condition coverage:     0.777

CPAchecker general statistics
-----------------------------
Number of program locations:     2241
Number of CFA edges:             2732
Number of relevant variables:    296
Number of functions:             73
Number of loops:                 9
Size of reached set:             67794
  Number of reached locations:   1126 (50%)
    Avg states per location:     60
    Max states per location:     565 (at node N1782)
  Number of reached functions:   43 (59%)
  Number of partitions:          67777
    Avg size of partitions:      1
    Max size of partitions:      18 (with key [N2541 (before lines 3187-3215), Function cleanup called from node N400, stack depth 4 [4a8b5227], stack [main, runTest, test, cleanup]])
  Number of target states:       0

Time for analysis setup:          3.228s
  Time for loading CPAs:          0.620s
  Time for loading parser:        0.629s
  Time for CFA construction:      1.811s
    Time for parsing file(s):     0.510s
    Time for AST to CFA:          0.593s
    Time for CFA sanity check:    0.158s
    Time for post-processing:     0.392s
      Time for var class.:        0.222s
Time for Analysis:               41.132s
CPU time for analysis:           41.140s
Time for analyzing result:        0.046s
Total time for CPAchecker:       44.364s
Total CPU time for CPAchecker:   44.360s
Time for statistics:              0.696s

Time for Garbage Collector:       1.237s (in 60 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                124MB (   119 MiB) max;     78MB (    75 MiB) avg;    140MB (   133 MiB) peak
Used non-heap memory:             36MB (    34 MiB) max;     34MB (    33 MiB) avg;     37MB (    35 MiB) peak
Allocated heap memory:           149MB (   142 MiB) max;    136MB (   130 MiB) avg
Allocated non-heap memory:        38MB (    36 MiB) max;     36MB (    35 MiB) avg
Total process virtual memory:   8199MB (  7820 MiB) max;   8170MB (  7791 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
