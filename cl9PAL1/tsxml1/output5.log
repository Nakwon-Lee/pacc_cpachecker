scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/elevator_spec2_product25_true-unreach-call_true-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_v13vypg0/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 50: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 73: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 362: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 539: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 548: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 582: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 591: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 631: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 711: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 724: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1076: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1110: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1166: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1180: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1752: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1793: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1832: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1871: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1986: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2222: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2533: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2945: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2991: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3350: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2782: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            137 (0% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            37 (27%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         100 (73%)
  Times precision was empty:       3 (2%)
  Times precision was {false}:     99 (72%)
  Times result was cached:         0 (0%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      35 (26%)
  Times result was 'false':        88 (64%)
Number of strengthen sat checks:   0
Number of coverage checks:         57471
  BDD entailment checks:           45
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       994
Number of predicates discovered:          85
Number of abstraction locations:          2
Max number of predicates per location:    85
Avg number of predicates per location:    43
Total predicates per abstraction:         1446
Max number of predicates per abstraction: 85
Avg number of predicates per abstraction: 10.79
Number of irrelevant predicates:          108 (7%)
Number of preds handled by boolean abs:   1338 (93%)
  Total number of models for allsat:      684
  Max number of models for allsat:        147
  Avg number of models for allsat:        19.54

Time for post operator:                  1.768s
  Time for path formula creation:        1.690s
Time for strengthen operator:            0.167s
Time for prec operator:                 14.867s
  Time for abstraction:                 14.712s (Max:     1.607s, Count: 137)
    Boolean abstraction:                13.096s
    Solving time:                        5.227s (Max:     0.278s)
    Model enumeration time:              7.904s
    Time for BDD construction:           0.153s (Max:     0.023s)
Time for merge operator:                 0.454s
Time for coverage check:                 0.031s
  Time for BDD entailment checks:        0.025s
Total time for SMT solver (w/o itp):    13.131s

Number of path formula cache hits:   136563 (83%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     1.550s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               85585
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       15194 (count: 6993, min: 0, max: 2012, avg: 2.17)
Time for BDD node cleanup:                             0.008s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.346s
Automaton transfers with branching:                0
Automaton transfer successors:                       140506 (count: 140506, min: 1, max: 1, avg: 1.00) [1 x 140506]

CPA algorithm statistics
------------------------
Number of iterations:            104865
Max size of waitlist:            15
Average size of waitlist:        7
Number of computed successors:   133690
Max successors for one state:    2
Number of times merged:          28713
Number of times stopped:         28715
Number of times breaked:         11

Total time for CPA algorithm:        21.381s (Max:     3.771s)
  Time for choose from waitlist:      0.105s
  Time for precision adjustment:     15.730s
  Time for transfer relation:         3.622s
  Time for merge operator:            0.992s
  Time for stop operator:             0.160s
  Time for adding to reached set:     0.211s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   11
Avg. length of target path (in blocks):                  33 (count: 11, min: 2, max: 5, avg: 3.00)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   5.303s
  Counterexample analysis:                             4.897s (Max:     0.966s, Calls: 11)
    Refinement sat check:                              4.376s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.001s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.020s
  Precision update:                                    0.005s
  ARG update:                                          0.270s

Length of refined path (in blocks):                      33 (count: 11, min: 2, max: 5, avg: 3.00)
Number of affected states:                               22 (count: 11, min: 1, max: 4, avg: 2.00)
Length (states) of path with itp 'true':                  0 (count: 11, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:        22 (count: 11, min: 1, max: 4, avg: 2.00)
Length (states) of path with itp 'false':                 0 (count: 11, min: 0, max: 0, avg: 0.00)
Different non-trivial interpolants along paths:          11 (count: 11, min: 0, max: 3, avg: 1.00)
Equal non-trivial interpolants along paths:               0 (count: 11, min: 0, max: 0, avg: 0.00)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                11
Number of successful refinements:     11
Number of failed refinements:         0
Max. size of reached set before ref.: 20194
Max. size of reached set after ref.:  4037
Avg. size of reached set before ref.: 12103.91
Avg. size of reached set after ref.:  4037.00

Total time for CEGAR algorithm:      27.186s
Time for refinements:                 5.763s
Average time for refinement:          0.523s
Max time for refinement:              1.064s

Code Coverage
-----------------------------
  Function coverage:      0.611
  Visited lines:          1022
  Total lines:            1695
  Line coverage:          0.603
  Visited conditions:     606
  Total conditions:       750
  Condition coverage:     0.808

CPAchecker general statistics
-----------------------------
Number of program locations:     2227
Number of CFA edges:             2714
Number of relevant variables:    286
Number of functions:             72
Number of loops:                 9
Size of reached set:             16151
  Number of reached locations:   1160 (52%)
    Avg states per location:     13
    Max states per location:     99 (at node N1493)
  Number of reached functions:   44 (61%)
  Number of partitions:          16148
    Avg size of partitions:      1
    Max size of partitions:      4 (with key [N2516 (before lines 3147-3175), Function cleanup called from node N27, stack depth 4 [27f9e982], stack [main, runTest, test, cleanup]])
  Number of target states:       0
  Size of final wait list        3

Time for analysis setup:          3.123s
  Time for loading CPAs:          0.578s
  Time for loading parser:        0.608s
  Time for CFA construction:      1.826s
    Time for parsing file(s):     0.521s
    Time for AST to CFA:          0.522s
    Time for CFA sanity check:    0.194s
    Time for post-processing:     0.448s
      Time for var class.:        0.263s
Time for Analysis:               27.186s
CPU time for analysis:           27.190s
Total time for CPAchecker:       30.312s
Total CPU time for CPAchecker:   30.300s
Time for statistics:              0.273s

Time for Garbage Collector:       0.699s (in 49 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                114MB (   109 MiB) max;     63MB (    60 MiB) avg;    118MB (   112 MiB) peak
Used non-heap memory:             36MB (    34 MiB) max;     33MB (    32 MiB) avg;     36MB (    35 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        38MB (    36 MiB) max;     36MB (    34 MiB) avg
Total process virtual memory:   8199MB (  7820 MiB) max;   8149MB (  7771 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
