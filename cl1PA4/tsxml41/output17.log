scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.16-rc1/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-kernel--locking--locktorture.ko-entry_point_true-unreach-call.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_5mv52l7t/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 1848: Dead code detected: __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

line 1851: Dead code detected: __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

line 1854: Dead code detected: __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (8UL) {
  case 1UL:
  __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& current_task));
  goto ldv_3067;
  case 2UL:
  __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_3067;
  case 4UL:
  __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_3067;
  case 8UL:
  __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_3067;
  default:
  __bad_percpu_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_probe_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_release_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_probe_3 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_release_3 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_probe_1 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_release_1 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function torture_init_begin to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 2548: Ignoring function call through function pointer *(cur_ops->init): (*(cur_ops->init))(); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function torture_cleanup to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _torture_stop_kthread to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function torture_onoff_failures to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __bitmap_weight to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function torture_init_end to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function torture_onoff_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function torture_shuffle_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function torture_shutdown_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function torture_stutter_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _torture_create_kthread to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function torture_random to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_final_state to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            22893 (17% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  19619 (86%)
  Because of loop head:            3220 (14%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         54 (0%)
  Times precision was empty:       3177 (14%)
  Times precision was {false}:     327 (1%)
  Times result was cached:         18650 (81%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      739 (3%)
  Times result was 'false':        1298 (6%)
Number of strengthen sat checks:   0
Number of coverage checks:         23173
  BDD entailment checks:           6417
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       42
Number of predicates discovered:          10
Number of abstraction locations:          68
Max number of predicates per location:    6
Avg number of predicates per location:    1
Total predicates per abstraction:         38180
Max number of predicates per abstraction: 6
Avg number of predicates per abstraction: 35.82
Number of irrelevant predicates:          7356 (19%)
Number of preds handled by boolean abs:   1191 (3%)
  Total number of models for allsat:      762
  Max number of models for allsat:        4
  Avg number of models for allsat:        1.03

Time for post operator:                  6.312s
  Time for path formula creation:        6.100s
Time for strengthen operator:            0.325s
Time for prec operator:                  8.453s
  Time for abstraction:                  7.599s (Max:     0.042s, Count: 22893)
    Boolean abstraction:                 1.080s
    Solving time:                        0.990s (Max:     0.014s)
    Model enumeration time:              0.094s
    Time for BDD construction:           0.101s (Max:     0.012s)
Time for merge operator:                 0.480s
Time for coverage check:                 0.077s
  Time for BDD entailment checks:        0.072s
Total time for SMT solver (w/o itp):     1.084s

Number of path formula cache hits:   105628 (67%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     5.334s

Total number of created targets for pointer analysis: 378
   Number of created targets for uf: *(struct_lock_torture_ops)* is 127


Number of BDD nodes:                               294
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        1577 (count: 15938, min: 0, max: 165, avg: 0.10)
Time for BDD node cleanup:                             0.020s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.555s
  Time for transition matches:                         0.217s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.000s
Automaton transfers with branching:                0
Automaton transfer successors:                       137316 (count: 137316, min: 1, max: 1, avg: 1.00) [1 x 137316]

CPA algorithm statistics
------------------------
Number of iterations:            94728
Max size of waitlist:            51
Average size of waitlist:        31
Number of computed successors:   110945
Max successors for one state:    2
Number of times merged:          8378
Number of times stopped:         13353
Number of times breaked:         54

Total time for CPA algorithm:        23.634s (Max:     2.229s)
  Time for choose from waitlist:      0.179s
  Time for precision adjustment:     10.176s
  Time for transfer relation:        10.209s
  Time for merge operator:            0.870s
  Time for stop operator:             0.442s
  Time for adding to reached set:     0.534s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   54
Avg. length of target path (in blocks):                1514 (count: 54, min: 15, max: 44, avg: 28.04)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   1.645s
  Counterexample analysis:                             1.082s (Max:     0.040s, Calls: 54)
    Refinement sat check:                              0.718s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.006s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.080s
  Precision update:                                    0.086s
  ARG update:                                          0.363s

Length of refined path (in blocks):                    1280 (count: 54, min: 8, max: 39, avg: 23.70)
Number of affected states:                              917 (count: 54, min: 1, max: 38, avg: 16.98)
Length (states) of path with itp 'true':                309 (count: 54, min: 0, max: 26, avg: 5.72)
Length (states) of path with itp non-trivial itp:       917 (count: 54, min: 1, max: 38, avg: 16.98)
Length (states) of path with itp 'false':                54 (count: 54, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           1 (count: 54, min: 0, max: 1, avg: 0.02)
Equal non-trivial interpolants along paths:             862 (count: 54, min: 0, max: 37, avg: 15.96)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                54
Number of successful refinements:     54
Number of failed refinements:         0
Max. size of reached set before ref.: 9218
Max. size of reached set after ref.:  8956
Avg. size of reached set before ref.: 2923.96
Avg. size of reached set after ref.:  1176.09

Total time for CEGAR algorithm:      25.745s
Time for refinements:                 2.042s
Average time for refinement:          0.037s
Max time for refinement:              0.080s

Code Coverage
-----------------------------
  Function coverage:      0.609
  Visited lines:          763
  Total lines:            973
  Line coverage:          0.784
  Visited conditions:     170
  Total conditions:       256
  Condition coverage:     0.664

CPAchecker general statistics
-----------------------------
Number of program locations:     1370
Number of CFA edges:             1513
Number of relevant variables:    144
Number of functions:             46
Number of loops:                 12
Size of reached set:             1909
  Number of reached locations:   416 (30%)
    Avg states per location:     4
    Max states per location:     27 (at node N393)
  Number of reached functions:   28 (61%)
  Number of partitions:          1896
    Avg size of partitions:      1
    Max size of partitions:      3 (with key [N637 (before line 2717), Function main called from node N612, stack depth 1 [1021f6c9], stack [main]])
  Number of target states:       0
  Size of final wait list        29

Time for analysis setup:          4.009s
  Time for loading CPAs:          0.871s
  Time for loading parser:        0.680s
  Time for CFA construction:      2.314s
    Time for parsing file(s):     0.675s
    Time for AST to CFA:          0.752s
    Time for CFA sanity check:    0.170s
    Time for post-processing:     0.552s
      Time for var class.:        0.221s
Time for Analysis:               25.745s
CPU time for analysis:           25.740s
Total time for CPAchecker:       29.767s
Total CPU time for CPAchecker:   29.760s
Time for statistics:              0.110s

Time for Garbage Collector:       0.775s (in 51 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 91MB (    87 MiB) max;     48MB (    46 MiB) avg;     94MB (    89 MiB) peak
Used non-heap memory:             39MB (    37 MiB) max;     35MB (    33 MiB) avg;     40MB (    38 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        41MB (    39 MiB) max;     36MB (    35 MiB) avg
Total process virtual memory:   8087MB (  7712 MiB) max;   8074MB (  7700 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
