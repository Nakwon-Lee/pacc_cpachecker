scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.16-rc1/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-kernel--locking--locktorture.ko-entry_point_true-unreach-call.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_32ovup9q/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 1848: Dead code detected: __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

line 1851: Dead code detected: __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

line 1854: Dead code detected: __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (8UL) {
  case 1UL:
  __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& current_task));
  goto ldv_3067;
  case 2UL:
  __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_3067;
  case 4UL:
  __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_3067;
  case 8UL:
  __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_3067;
  default:
  __bad_percpu_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_probe_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_release_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_probe_3 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_release_3 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_probe_1 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_release_1 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function torture_random to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function torture_init_begin to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function torture_cleanup to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _torture_stop_kthread to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 2548: Ignoring function call through function pointer *(cur_ops->init): (*(cur_ops->init))(); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function ldv_check_final_state to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function torture_init_end to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __bitmap_weight to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function torture_onoff_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function torture_shuffle_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function torture_shutdown_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function torture_stutter_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function torture_onoff_failures to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _torture_create_kthread to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            206687 (18% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  162401 (79%)
  Because of loop head:            44165 (21%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         121 (0%)
  Times precision was empty:       61128 (30%)
  Times precision was {false}:     1728 (1%)
  Times result was cached:         140437 (68%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      3394 (2%)
  Times result was 'false':        9020 (4%)
Number of strengthen sat checks:   0
Number of coverage checks:         236938
  BDD entailment checks:           109538
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       42
Number of predicates discovered:          20
Number of abstraction locations:          80
Max number of predicates per location:    10
Avg number of predicates per location:    3
Total predicates per abstraction:         351457
Max number of predicates per abstraction: 10
Avg number of predicates per abstraction: 68.62
Number of irrelevant predicates:          202069 (57%)
Number of preds handled by boolean abs:   7247 (2%)
  Total number of models for allsat:      5541
  Max number of models for allsat:        18
  Avg number of models for allsat:        1.63

Time for post operator:                 15.583s
  Time for path formula creation:       14.785s
Time for strengthen operator:            1.273s
Time for prec operator:                 32.856s
  Time for abstraction:                 29.679s (Max:     0.409s, Count: 206687)
    Boolean abstraction:                 4.243s
    Solving time:                        3.453s (Max:     0.017s)
    Model enumeration time:              1.054s
    Time for BDD construction:           0.261s (Max:     0.012s)
Time for merge operator:                 1.150s
Time for coverage check:                 0.190s
  Time for BDD entailment checks:        0.131s
Total time for SMT solver (w/o itp):     4.507s

Number of path formula cache hits:   1131122 (83%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    11.058s

Total number of created targets for pointer analysis: 4188
   Number of created targets for uf: *(struct_lock_torture_ops)* is 1397


Number of BDD nodes:                               4280
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        8287 (count: 201817, min: 0, max: 631, avg: 0.04)
Time for BDD node cleanup:                             0.066s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  1.757s
  Time for transition matches:                         0.997s
  Time for transition assertions:                      0.001s
  Time for transition actions:                         0.000s
Automaton transfers with branching:                0
Automaton transfer successors:                      1152329 (count: 1152329, min: 1, max: 1, avg: 1.00) [1 x 1152329]

CPA algorithm statistics
------------------------
Number of iterations:            794839
Max size of waitlist:            750
Average size of waitlist:        230
Number of computed successors:   937328
Max successors for one state:    2
Number of times merged:          63700
Number of times stopped:         112503
Number of times breaked:         121

Total time for CPA algorithm:        78.354s (Max:     2.434s)
  Time for choose from waitlist:      0.449s
  Time for precision adjustment:     40.351s
  Time for transfer relation:        28.749s
  Time for merge operator:            2.365s
  Time for stop operator:             1.537s
  Time for adding to reached set:     1.752s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   121
Avg. length of target path (in blocks):                3355 (count: 121, min: 13, max: 63, avg: 27.73)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   3.827s
  Counterexample analysis:                             1.825s (Max:     0.045s, Calls: 121)
    Refinement sat check:                              1.284s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.002s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.084s
  Precision update:                                    0.090s
  ARG update:                                          1.761s

Length of refined path (in blocks):                    2555 (count: 121, min: 8, max: 47, avg: 21.12)
Number of affected states:                             1627 (count: 121, min: 1, max: 46, avg: 13.45)
Length (states) of path with itp 'true':                807 (count: 121, min: 0, max: 31, avg: 6.67)
Length (states) of path with itp non-trivial itp:      1627 (count: 121, min: 1, max: 46, avg: 13.45)
Length (states) of path with itp 'false':               121 (count: 121, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:          25 (count: 121, min: 0, max: 3, avg: 0.21)
Equal non-trivial interpolants along paths:            1481 (count: 121, min: 0, max: 42, avg: 12.24)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                121
Number of successful refinements:     121
Number of failed refinements:         0
Max. size of reached set before ref.: 22805
Max. size of reached set after ref.:  10859
Avg. size of reached set before ref.: 7752.79
Avg. size of reached set after ref.:  1018.91

Total time for CEGAR algorithm:      83.131s
Time for refinements:                 4.673s
Average time for refinement:          0.038s
Max time for refinement:              0.113s

Code Coverage
-----------------------------
  Function coverage:      0.457
  Visited lines:          674
  Total lines:            973
  Line coverage:          0.693
  Visited conditions:     148
  Total conditions:       256
  Condition coverage:     0.578

CPAchecker general statistics
-----------------------------
Number of program locations:     1370
Number of CFA edges:             1513
Number of relevant variables:    144
Number of functions:             46
Number of loops:                 12
Size of reached set:             1006
  Number of reached locations:   336 (25%)
    Avg states per location:     2
    Max states per location:     23 (at node N393)
  Number of reached functions:   21 (46%)
  Number of partitions:          991
    Avg size of partitions:      1
    Max size of partitions:      6 (with key [N513 (before line 2559), Function lock_torture_init called from node N729, stack depth 2 [79105d0], stack [main, lock_torture_init]])
  Number of target states:       0

Time for analysis setup:          4.201s
  Time for loading CPAs:          0.991s
  Time for loading parser:        0.721s
  Time for CFA construction:      2.304s
    Time for parsing file(s):     0.729s
    Time for AST to CFA:          0.677s
    Time for CFA sanity check:    0.173s
    Time for post-processing:     0.566s
      Time for var class.:        0.222s
Time for Analysis:               83.132s
CPU time for analysis:           83.130s
Time for analyzing result:        0.001s
Total time for CPAchecker:       87.343s
Total CPU time for CPAchecker:   87.330s
Time for statistics:              0.115s

Time for Garbage Collector:       6.565s (in 352 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                169MB (   162 MiB) max;     77MB (    73 MiB) avg;    182MB (   174 MiB) peak
Used non-heap memory:             39MB (    37 MiB) max;     37MB (    35 MiB) avg;     39MB (    38 MiB) peak
Allocated heap memory:           196MB (   187 MiB) max;    135MB (   129 MiB) avg
Allocated non-heap memory:        41MB (    39 MiB) max;     40MB (    38 MiB) avg
Total process virtual memory:   8087MB (  7712 MiB) max;   8081MB (  7707 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
