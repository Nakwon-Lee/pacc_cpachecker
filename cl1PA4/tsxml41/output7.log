scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.16-rc1/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-kernel--locking--locktorture.ko-entry_point_true-unreach-call.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_34_uwrj6/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 1848: Dead code detected: __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

line 1851: Dead code detected: __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

line 1854: Dead code detected: __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (8UL) {
  case 1UL:
  __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& current_task));
  goto ldv_3067;
  case 2UL:
  __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_3067;
  case 4UL:
  __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_3067;
  case 8UL:
  __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_3067;
  default:
  __bad_percpu_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_probe_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_release_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_probe_3 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_release_3 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_probe_1 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_release_1 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function torture_random to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function torture_cleanup to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _torture_stop_kthread to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function torture_onoff_failures to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_final_state to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function torture_init_begin to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 2548: Ignoring function call through function pointer *(cur_ops->init): (*(cur_ops->init))(); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function __bitmap_weight to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function torture_init_end to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function torture_onoff_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function torture_shuffle_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function torture_shutdown_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function torture_stutter_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _torture_create_kthread to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            27208 (19% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  22833 (84%)
  Because of loop head:            4274 (16%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         101 (0%)
  Times precision was empty:       8841 (32%)
  Times precision was {false}:     321 (1%)
  Times result was cached:         16590 (61%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      1456 (5%)
  Times result was 'false':        1596 (6%)
Number of strengthen sat checks:   0
Number of coverage checks:         24076
  BDD entailment checks:           9762
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       42
Number of predicates discovered:          17
Number of abstraction locations:          66
Max number of predicates per location:    8
Avg number of predicates per location:    3
Total predicates per abstraction:         47173
Max number of predicates per abstraction: 8
Avg number of predicates per abstraction: 26.55
Number of irrelevant predicates:          23778 (50%)
Number of preds handled by boolean abs:   3394 (7%)
  Total number of models for allsat:      1512
  Max number of models for allsat:        4
  Avg number of models for allsat:        1.04

Time for post operator:                  5.468s
  Time for path formula creation:        5.262s
Time for strengthen operator:            0.300s
Time for prec operator:                  8.479s
  Time for abstraction:                  7.684s (Max:     0.033s, Count: 27208)
    Boolean abstraction:                 1.392s
    Solving time:                        1.144s (Max:     0.020s)
    Model enumeration time:              0.141s
    Time for BDD construction:           0.144s (Max:     0.014s)
Time for merge operator:                 0.458s
Time for coverage check:                 0.074s
  Time for BDD entailment checks:        0.070s
Total time for SMT solver (w/o itp):     1.285s

Number of path formula cache hits:   120548 (72%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     4.422s

Total number of created targets for pointer analysis: 198
   Number of created targets for uf: *(struct_lock_torture_ops)* is 67


Number of BDD nodes:                               662
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        3382 (count: 29563, min: 0, max: 349, avg: 0.11)
Time for BDD node cleanup:                             0.010s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.706s
  Time for transition matches:                         0.309s
  Time for transition assertions:                      0.001s
  Time for transition actions:                         0.000s
Automaton transfers with branching:                0
Automaton transfer successors:                       143884 (count: 143884, min: 1, max: 1, avg: 1.00) [1 x 143884]

CPA algorithm statistics
------------------------
Number of iterations:            102462
Max size of waitlist:            30
Average size of waitlist:        12
Number of computed successors:   117419
Max successors for one state:    2
Number of times merged:          7157
Number of times stopped:         12904
Number of times breaked:         101

Total time for CPA algorithm:        22.810s (Max:     1.029s)
  Time for choose from waitlist:      0.240s
  Time for precision adjustment:     10.173s
  Time for transfer relation:         9.221s
  Time for merge operator:            0.845s
  Time for stop operator:             0.446s
  Time for adding to reached set:     0.545s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   101
Avg. length of target path (in blocks):                3204 (count: 101, min: 13, max: 64, avg: 31.72)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   2.495s
  Counterexample analysis:                             1.795s (Max:     0.038s, Calls: 101)
    Refinement sat check:                              1.283s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.001s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.049s
  Precision update:                                    0.147s
  ARG update:                                          0.387s

Length of refined path (in blocks):                    2635 (count: 101, min: 8, max: 51, avg: 26.09)
Number of affected states:                             1293 (count: 101, min: 1, max: 42, avg: 12.80)
Length (states) of path with itp 'true':               1241 (count: 101, min: 0, max: 41, avg: 12.29)
Length (states) of path with itp non-trivial itp:      1293 (count: 101, min: 1, max: 42, avg: 12.80)
Length (states) of path with itp 'false':               101 (count: 101, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           9 (count: 101, min: 0, max: 3, avg: 0.09)
Equal non-trivial interpolants along paths:            1183 (count: 101, min: 0, max: 38, avg: 11.71)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                101
Number of successful refinements:     101
Number of failed refinements:         0
Max. size of reached set before ref.: 4348
Max. size of reached set after ref.:  3874
Avg. size of reached set before ref.: 2319.30
Avg. size of reached set after ref.:  1319.27

Total time for CEGAR algorithm:      25.827s
Time for refinements:                 2.839s
Average time for refinement:          0.028s
Max time for refinement:              0.057s

Code Coverage
-----------------------------
  Function coverage:      0.630
  Visited lines:          764
  Total lines:            973
  Line coverage:          0.785
  Visited conditions:     160
  Total conditions:       256
  Condition coverage:     0.625

CPAchecker general statistics
-----------------------------
Number of program locations:     1370
Number of CFA edges:             1513
Number of relevant variables:    144
Number of functions:             46
Number of loops:                 12
Size of reached set:             1916
  Number of reached locations:   425 (31%)
    Avg states per location:     4
    Max states per location:     42 (at node N394)
  Number of reached functions:   29 (63%)
  Number of partitions:          1880
    Avg size of partitions:      1
    Max size of partitions:      6 (with key [N637 (before line 2717), Function main called from node N612, stack depth 1 [1021f6c9], stack [main]])
  Number of target states:       0
  Size of final wait list        16

Time for analysis setup:          3.929s
  Time for loading CPAs:          0.906s
  Time for loading parser:        0.625s
  Time for CFA construction:      2.279s
    Time for parsing file(s):     0.697s
    Time for AST to CFA:          0.708s
    Time for CFA sanity check:    0.165s
    Time for post-processing:     0.555s
      Time for var class.:        0.232s
Time for Analysis:               25.828s
CPU time for analysis:           25.820s
Total time for CPAchecker:       29.762s
Total CPU time for CPAchecker:   29.750s
Time for statistics:              0.128s

Time for Garbage Collector:       0.551s (in 52 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 74MB (    70 MiB) max;     45MB (    43 MiB) avg;     78MB (    74 MiB) peak
Used non-heap memory:             39MB (    37 MiB) max;     35MB (    33 MiB) avg;     39MB (    38 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        41MB (    39 MiB) max;     36MB (    35 MiB) avg
Total process virtual memory:   8087MB (  7712 MiB) max;   8075MB (  7701 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
