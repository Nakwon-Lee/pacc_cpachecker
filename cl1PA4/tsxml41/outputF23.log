scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.16-rc1/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-kernel--locking--locktorture.ko-entry_point_true-unreach-call.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_2r9yonpp/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 1848: Dead code detected: __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

line 1851: Dead code detected: __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

line 1854: Dead code detected: __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (8UL) {
  case 1UL:
  __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& current_task));
  goto ldv_3067;
  case 2UL:
  __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_3067;
  case 4UL:
  __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_3067;
  case 8UL:
  __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_3067;
  default:
  __bad_percpu_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_probe_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_release_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_probe_3 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_release_3 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_probe_1 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_release_1 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function torture_random to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function torture_cleanup to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _torture_stop_kthread to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_final_state to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function torture_onoff_failures to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function torture_init_begin to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 2548: Ignoring function call through function pointer *(cur_ops->init): (*(cur_ops->init))(); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function torture_init_end to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function torture_onoff_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function torture_shuffle_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function torture_shutdown_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function torture_stutter_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __bitmap_weight to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            43240 (17% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  37637 (87%)
  Because of loop head:            5356 (12%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         247 (1%)
  Times precision was empty:       14846 (34%)
  Times precision was {false}:     346 (1%)
  Times result was cached:         27167 (63%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      881 (2%)
  Times result was 'false':        1918 (4%)
Number of strengthen sat checks:   0
Number of coverage checks:         48508
  BDD entailment checks:           12050
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       42
Number of predicates discovered:          16
Number of abstraction locations:          60
Max number of predicates per location:    7
Avg number of predicates per location:    3
Total predicates per abstraction:         97368
Max number of predicates per abstraction: 7
Avg number of predicates per abstraction: 79.35
Number of irrelevant predicates:          56896 (58%)
Number of preds handled by boolean abs:   1964 (2%)
  Total number of models for allsat:      962
  Max number of models for allsat:        4
  Avg number of models for allsat:        1.09

Time for post operator:                  4.647s
  Time for path formula creation:        4.390s
Time for strengthen operator:            0.402s
Time for prec operator:                  9.621s
  Time for abstraction:                  8.697s (Max:     0.039s, Count: 43240)
    Boolean abstraction:                 1.131s
    Solving time:                        0.848s (Max:     0.015s)
    Model enumeration time:              0.129s
    Time for BDD construction:           0.142s (Max:     0.012s)
Time for merge operator:                 0.482s
Time for coverage check:                 0.090s
  Time for BDD entailment checks:        0.082s
Total time for SMT solver (w/o itp):     0.977s

Number of path formula cache hits:   279302 (90%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     3.333s

Total number of created targets for pointer analysis: 6
   Number of created targets for uf: *(struct_lock_torture_ops)* is 3


Number of BDD nodes:                               496
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        2287 (count: 34218, min: 0, max: 248, avg: 0.07)
Time for BDD node cleanup:                             0.024s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.779s
  Time for transition matches:                         0.325s
  Time for transition assertions:                      0.001s
  Time for transition actions:                         0.001s
Automaton transfers with branching:                0
Automaton transfer successors:                       256107 (count: 256107, min: 1, max: 1, avg: 1.00) [1 x 256107]

CPA algorithm statistics
------------------------
Number of iterations:            183309
Max size of waitlist:            74
Average size of waitlist:        45
Number of computed successors:   219985
Max successors for one state:    2
Number of times merged:          18229
Number of times stopped:         24550
Number of times breaked:         247

Total time for CPA algorithm:        25.048s (Max:     1.142s)
  Time for choose from waitlist:      0.289s
  Time for precision adjustment:     11.976s
  Time for transfer relation:         9.193s
  Time for merge operator:            1.037s
  Time for stop operator:             0.616s
  Time for adding to reached set:     0.590s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   247
Avg. length of target path (in blocks):               12113 (count: 247, min: 13, max: 62, avg: 49.04)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   6.109s
  Counterexample analysis:                             5.097s (Max:     0.042s, Calls: 247)
    Refinement sat check:                              3.180s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.022s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.080s
  Precision update:                                    0.158s
  ARG update:                                          0.573s

Length of refined path (in blocks):                    6461 (count: 247, min: 8, max: 47, avg: 26.16)
Number of affected states:                             1551 (count: 247, min: 1, max: 46, avg: 6.28)
Length (states) of path with itp 'true':               4663 (count: 247, min: 0, max: 38, avg: 18.88)
Length (states) of path with itp non-trivial itp:      1551 (count: 247, min: 1, max: 46, avg: 6.28)
Length (states) of path with itp 'false':               247 (count: 247, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:          22 (count: 247, min: 0, max: 3, avg: 0.09)
Equal non-trivial interpolants along paths:            1282 (count: 247, min: 0, max: 42, avg: 5.19)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                247
Number of successful refinements:     247
Number of failed refinements:         0
Max. size of reached set before ref.: 1709
Max. size of reached set after ref.:  911
Avg. size of reached set before ref.: 1279.44
Avg. size of reached set after ref.:  499.88

Total time for CEGAR algorithm:      31.778s
Time for refinements:                 6.626s
Average time for refinement:          0.026s
Max time for refinement:              0.086s

Code Coverage
-----------------------------
  Function coverage:      0.500
  Visited lines:          715
  Total lines:            973
  Line coverage:          0.735
  Visited conditions:     162
  Total conditions:       256
  Condition coverage:     0.633

CPAchecker general statistics
-----------------------------
Number of program locations:     1370
Number of CFA edges:             1513
Number of relevant variables:    144
Number of functions:             46
Number of loops:                 12
Size of reached set:             968
  Number of reached locations:   376 (27%)
    Avg states per location:     2
    Max states per location:     26 (at node N393)
  Number of reached functions:   23 (50%)
  Number of partitions:          950
    Avg size of partitions:      1
    Max size of partitions:      3 (with key [N427 (before line 2467), Function lock_torture_cleanup called from node N719, stack depth 2 [21b0c46], stack [main, lock_torture_cleanup]])
  Number of target states:       0

Time for analysis setup:          4.099s
  Time for loading CPAs:          0.899s
  Time for loading parser:        0.698s
  Time for CFA construction:      2.323s
    Time for parsing file(s):     0.742s
    Time for AST to CFA:          0.690s
    Time for CFA sanity check:    0.183s
    Time for post-processing:     0.556s
      Time for var class.:        0.240s
Time for Analysis:               31.778s
CPU time for analysis:           31.780s
Time for analyzing result:        0.001s
Total time for CPAchecker:       35.882s
Total CPU time for CPAchecker:   35.880s
Time for statistics:              0.098s

Time for Garbage Collector:       0.635s (in 87 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 69MB (    66 MiB) max;     45MB (    43 MiB) avg;     72MB (    69 MiB) peak
Used non-heap memory:             39MB (    37 MiB) max;     35MB (    34 MiB) avg;     39MB (    37 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        41MB (    39 MiB) max;     37MB (    36 MiB) avg
Total process virtual memory:   8087MB (  7713 MiB) max;   8076MB (  7702 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
