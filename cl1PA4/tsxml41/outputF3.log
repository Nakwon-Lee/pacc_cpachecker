scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.16-rc1/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-kernel--locking--locktorture.ko-entry_point_true-unreach-call.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_xusttb3e/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 1848: Dead code detected: __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

line 1851: Dead code detected: __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

line 1854: Dead code detected: __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (8UL) {
  case 1UL:
  __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& current_task));
  goto ldv_3067;
  case 2UL:
  __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_3067;
  case 4UL:
  __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_3067;
  case 8UL:
  __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_3067;
  default:
  __bad_percpu_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_probe_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_release_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_probe_3 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_release_3 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_probe_1 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_release_1 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function torture_random to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function torture_init_begin to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_final_state to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function torture_cleanup to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _torture_stop_kthread to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 2548: Ignoring function call through function pointer *(cur_ops->init): (*(cur_ops->init))(); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function torture_init_end to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __bitmap_weight to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function torture_onoff_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function torture_shuffle_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function torture_shutdown_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function torture_stutter_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _torture_create_kthread to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function torture_onoff_failures to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            503116 (19% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  402092 (80%)
  Because of loop head:            100871 (20%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         153 (0%)
  Times precision was empty:       131595 (26%)
  Times precision was {false}:     2290 (0%)
  Times result was cached:         366120 (73%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      3111 (1%)
  Times result was 'false':        13930 (3%)
Number of strengthen sat checks:   0
Number of coverage checks:         467926
  BDD entailment checks:           225912
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       42
Number of predicates discovered:          20
Number of abstraction locations:          80
Max number of predicates per location:    11
Avg number of predicates per location:    3
Total predicates per abstraction:         1019944
Max number of predicates per abstraction: 11
Avg number of predicates per abstraction: 188.84
Number of irrelevant predicates:          721462 (71%)
Number of preds handled by boolean abs:   6851 (1%)
  Total number of models for allsat:      5423
  Max number of models for allsat:        18
  Avg number of models for allsat:        1.74

Time for post operator:                 28.885s
  Time for path formula creation:       27.287s
Time for strengthen operator:            2.727s
Time for prec operator:                 62.745s
  Time for abstraction:                 55.775s (Max:     0.528s, Count: 503116)
    Boolean abstraction:                 4.207s
    Solving time:                        3.563s (Max:     0.027s)
    Model enumeration time:              1.105s
    Time for BDD construction:           0.286s (Max:     0.011s)
Time for merge operator:                 1.884s
Time for coverage check:                 0.310s
  Time for BDD entailment checks:        0.240s
Total time for SMT solver (w/o itp):     4.668s

Number of path formula cache hits:   2617077 (83%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    19.085s

Total number of created targets for pointer analysis: 7146
   Number of created targets for uf: *(struct_lock_torture_ops)* is 2383


Number of BDD nodes:                               4517
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        7843 (count: 389458, min: 0, max: 384, avg: 0.02)
Time for BDD node cleanup:                             0.086s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  4.504s
  Time for transition matches:                         2.546s
  Time for transition assertions:                      0.002s
  Time for transition actions:                         0.001s
Automaton transfers with branching:                0
Automaton transfer successors:                      2654215 (count: 2654215, min: 1, max: 1, avg: 1.00) [1 x 2654215]

CPA algorithm statistics
------------------------
Number of iterations:            1817672
Max size of waitlist:            639
Average size of waitlist:        255
Number of computed successors:   2108708
Max successors for one state:    2
Number of times merged:          121007
Number of times stopped:         242366
Number of times breaked:         153

Total time for CPA algorithm:       158.077s (Max:     3.053s)
  Time for choose from waitlist:      0.927s
  Time for precision adjustment:     80.181s
  Time for transfer relation:        59.529s
  Time for merge operator:            4.047s
  Time for stop operator:             2.988s
  Time for adding to reached set:     3.772s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   153
Avg. length of target path (in blocks):                5835 (count: 153, min: 13, max: 69, avg: 38.14)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   6.320s
  Counterexample analysis:                             2.741s (Max:     0.042s, Calls: 153)
    Refinement sat check:                              1.860s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.009s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.063s
  Precision update:                                    0.070s
  ARG update:                                          3.319s

Length of refined path (in blocks):                    4157 (count: 153, min: 8, max: 63, avg: 27.17)
Number of affected states:                             2332 (count: 153, min: 1, max: 46, avg: 15.24)
Length (states) of path with itp 'true':               1672 (count: 153, min: 0, max: 38, avg: 10.93)
Length (states) of path with itp non-trivial itp:      2332 (count: 153, min: 1, max: 46, avg: 15.24)
Length (states) of path with itp 'false':               153 (count: 153, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:          23 (count: 153, min: 0, max: 3, avg: 0.15)
Equal non-trivial interpolants along paths:            2156 (count: 153, min: 0, max: 42, avg: 14.09)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                153
Number of successful refinements:     153
Number of failed refinements:         0
Max. size of reached set before ref.: 28043
Max. size of reached set after ref.:  1186
Avg. size of reached set before ref.: 12608.24
Avg. size of reached set after ref.:  507.19

Total time for CEGAR algorithm:     165.708s
Time for refinements:                 7.566s
Average time for refinement:          0.049s
Max time for refinement:              0.124s

Code Coverage
-----------------------------
  Function coverage:      0.457
  Visited lines:          674
  Total lines:            973
  Line coverage:          0.693
  Visited conditions:     148
  Total conditions:       256
  Condition coverage:     0.578

CPAchecker general statistics
-----------------------------
Number of program locations:     1370
Number of CFA edges:             1513
Number of relevant variables:    144
Number of functions:             46
Number of loops:                 12
Size of reached set:             953
  Number of reached locations:   336 (25%)
    Avg states per location:     2
    Max states per location:     21 (at node N393)
  Number of reached functions:   21 (46%)
  Number of partitions:          938
    Avg size of partitions:      1
    Max size of partitions:      6 (with key [N513 (before line 2559), Function lock_torture_init called from node N729, stack depth 2 [38f09349], stack [main, lock_torture_init]])
  Number of target states:       0

Time for analysis setup:          4.127s
  Time for loading CPAs:          0.910s
  Time for loading parser:        0.711s
  Time for CFA construction:      2.352s
    Time for parsing file(s):     0.778s
    Time for AST to CFA:          0.680s
    Time for CFA sanity check:    0.179s
    Time for post-processing:     0.562s
      Time for var class.:        0.227s
Time for Analysis:              165.708s
CPU time for analysis:          165.700s
Time for analyzing result:        0.001s
Total time for CPAchecker:      169.846s
Total CPU time for CPAchecker:  169.830s
Time for statistics:              0.101s

Time for Garbage Collector:      14.590s (in 534 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                323MB (   308 MiB) max;    140MB (   133 MiB) avg;    330MB (   315 MiB) peak
Used non-heap memory:             39MB (    37 MiB) max;     38MB (    36 MiB) avg;     40MB (    38 MiB) peak
Allocated heap memory:           347MB (   331 MiB) max;    212MB (   202 MiB) avg
Allocated non-heap memory:        41MB (    39 MiB) max;     40MB (    38 MiB) avg
Total process virtual memory:   8087MB (  7712 MiB) max;   8082MB (  7708 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
