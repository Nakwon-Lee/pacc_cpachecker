scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.16-rc1/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-kernel--locking--locktorture.ko-entry_point_true-unreach-call.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_ss1gps97/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 1848: Dead code detected: __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

line 1851: Dead code detected: __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

line 1854: Dead code detected: __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (8UL) {
  case 1UL:
  __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& current_task));
  goto ldv_3067;
  case 2UL:
  __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_3067;
  case 4UL:
  __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_3067;
  case 8UL:
  __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_3067;
  default:
  __bad_percpu_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_probe_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_release_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_probe_3 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_release_3 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_probe_1 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_release_1 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function torture_random to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function torture_cleanup to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _torture_stop_kthread to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function torture_onoff_failures to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_final_state to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function torture_init_begin to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 2548: Ignoring function call through function pointer *(cur_ops->init): (*(cur_ops->init))(); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function __bitmap_weight to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function torture_init_end to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function torture_onoff_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function torture_shuffle_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function torture_shutdown_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function torture_stutter_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _torture_create_kthread to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            41229 (20% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  35158 (85%)
  Because of loop head:            5923 (14%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         148 (0%)
  Times precision was empty:       10734 (26%)
  Times precision was {false}:     414 (1%)
  Times result was cached:         27822 (67%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      2259 (5%)
  Times result was 'false':        2828 (7%)
Number of strengthen sat checks:   0
Number of coverage checks:         34963
  BDD entailment checks:           16041
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       42
Number of predicates discovered:          17
Number of abstraction locations:          69
Max number of predicates per location:    8
Avg number of predicates per location:    3
Total predicates per abstraction:         98275
Max number of predicates per abstraction: 8
Avg number of predicates per abstraction: 36.77
Number of irrelevant predicates:          49581 (50%)
Number of preds handled by boolean abs:   5921 (6%)
  Total number of models for allsat:      2302
  Max number of models for allsat:        4
  Avg number of models for allsat:        1.02

Time for post operator:                  6.277s
  Time for path formula creation:        6.015s
Time for strengthen operator:            0.330s
Time for prec operator:                 12.171s
  Time for abstraction:                 11.111s (Max:     0.038s, Count: 41229)
    Boolean abstraction:                 2.078s
    Solving time:                        1.636s (Max:     0.023s)
    Model enumeration time:              0.169s
    Time for BDD construction:           0.155s (Max:     0.012s)
Time for merge operator:                 0.344s
Time for coverage check:                 0.109s
  Time for BDD entailment checks:        0.086s
Total time for SMT solver (w/o itp):     1.805s

Number of path formula cache hits:   185237 (77%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     4.888s

Total number of created targets for pointer analysis: 258
   Number of created targets for uf: *(struct_lock_torture_ops)* is 87


Number of BDD nodes:                               948
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        5628 (count: 43239, min: 0, max: 377, avg: 0.13)
Time for BDD node cleanup:                             0.027s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.670s
  Time for transition matches:                         0.328s
  Time for transition assertions:                      0.001s
  Time for transition actions:                         0.000s
Automaton transfers with branching:                0
Automaton transfer successors:                       205618 (count: 205618, min: 1, max: 1, avg: 1.00) [1 x 205618]

CPA algorithm statistics
------------------------
Number of iterations:            148010
Max size of waitlist:            46
Average size of waitlist:        12
Number of computed successors:   169115
Max successors for one state:    2
Number of times merged:          9461
Number of times stopped:         17834
Number of times breaked:         148

Total time for CPA algorithm:        28.466s (Max:     1.114s)
  Time for choose from waitlist:      0.222s
  Time for precision adjustment:     14.219s
  Time for transfer relation:        10.632s
  Time for merge operator:            0.830s
  Time for stop operator:             0.599s
  Time for adding to reached set:     0.503s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   148
Avg. length of target path (in blocks):                5562 (count: 148, min: 13, max: 71, avg: 37.58)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   3.421s
  Counterexample analysis:                             2.556s (Max:     0.036s, Calls: 148)
    Refinement sat check:                              1.757s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.002s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.089s
  Precision update:                                    0.134s
  ARG update:                                          0.522s

Length of refined path (in blocks):                    4889 (count: 148, min: 8, max: 70, avg: 33.03)
Number of affected states:                             1939 (count: 148, min: 1, max: 46, avg: 13.10)
Length (states) of path with itp 'true':               2802 (count: 148, min: 0, max: 56, avg: 18.93)
Length (states) of path with itp non-trivial itp:      1939 (count: 148, min: 1, max: 46, avg: 13.10)
Length (states) of path with itp 'false':               148 (count: 148, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:          22 (count: 148, min: 0, max: 3, avg: 0.15)
Equal non-trivial interpolants along paths:            1769 (count: 148, min: 0, max: 42, avg: 11.95)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                148
Number of successful refinements:     148
Number of failed refinements:         0
Max. size of reached set before ref.: 5430
Max. size of reached set after ref.:  4964
Avg. size of reached set before ref.: 2702.97
Avg. size of reached set after ref.:  1706.43

Total time for CEGAR algorithm:      32.690s
Time for refinements:                 3.975s
Average time for refinement:          0.026s
Max time for refinement:              0.071s

Code Coverage
-----------------------------
  Function coverage:      0.457
  Visited lines:          674
  Total lines:            973
  Line coverage:          0.693
  Visited conditions:     148
  Total conditions:       256
  Condition coverage:     0.578

CPAchecker general statistics
-----------------------------
Number of program locations:     1370
Number of CFA edges:             1513
Number of relevant variables:    144
Number of functions:             46
Number of loops:                 12
Size of reached set:             967
  Number of reached locations:   336 (25%)
    Avg states per location:     2
    Max states per location:     21 (at node N393)
  Number of reached functions:   21 (46%)
  Number of partitions:          952
    Avg size of partitions:      1
    Max size of partitions:      6 (with key [N513 (before line 2559), Function lock_torture_init called from node N729, stack depth 2 [43dccbe3], stack [main, lock_torture_init]])
  Number of target states:       0

Time for analysis setup:          4.157s
  Time for loading CPAs:          0.883s
  Time for loading parser:        0.734s
  Time for CFA construction:      2.363s
    Time for parsing file(s):     0.737s
    Time for AST to CFA:          0.768s
    Time for CFA sanity check:    0.166s
    Time for post-processing:     0.552s
      Time for var class.:        0.234s
Time for Analysis:               32.690s
CPU time for analysis:           32.700s
Time for analyzing result:        0.001s
Total time for CPAchecker:       36.855s
Total CPU time for CPAchecker:   36.850s
Time for statistics:              0.121s

Time for Garbage Collector:       0.829s (in 77 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 82MB (    78 MiB) max;     49MB (    46 MiB) avg;     87MB (    83 MiB) peak
Used non-heap memory:             40MB (    38 MiB) max;     36MB (    34 MiB) avg;     40MB (    38 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        42MB (    40 MiB) max;     38MB (    36 MiB) avg
Total process virtual memory:   8087MB (  7712 MiB) max;   8076MB (  7702 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
