scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.16-rc1/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-kernel--locking--locktorture.ko-entry_point_true-unreach-call.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_cqv76_ma/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 1848: Dead code detected: __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

line 1851: Dead code detected: __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

line 1854: Dead code detected: __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (8UL) {
  case 1UL:
  __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& current_task));
  goto ldv_3067;
  case 2UL:
  __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_3067;
  case 4UL:
  __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_3067;
  case 8UL:
  __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_3067;
  default:
  __bad_percpu_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_probe_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_release_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_probe_3 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_release_3 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_probe_1 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_release_1 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function torture_init_begin to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 2548: Ignoring function call through function pointer *(cur_ops->init): (*(cur_ops->init))(); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function ldv_check_final_state to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function torture_cleanup to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _torture_stop_kthread to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function torture_random to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function torture_init_end to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __bitmap_weight to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function torture_onoff_failures to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function torture_onoff_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function torture_shuffle_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function torture_shutdown_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function torture_stutter_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            88715 (15% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  70854 (80%)
  Because of loop head:            17778 (20%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         83 (0%)
  Times precision was empty:       25885 (29%)
  Times precision was {false}:     1116 (1%)
  Times result was cached:         59997 (68%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      1717 (2%)
  Times result was 'false':        4446 (5%)
Number of strengthen sat checks:   0
Number of coverage checks:         109305
  BDD entailment checks:           38875
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       42
Number of predicates discovered:          19
Number of abstraction locations:          71
Max number of predicates per location:    9
Avg number of predicates per location:    3
Total predicates per abstraction:         183841
Max number of predicates per abstraction: 9
Avg number of predicates per abstraction: 64.89
Number of irrelevant predicates:          99965 (54%)
Number of preds handled by boolean abs:   3694 (2%)
  Total number of models for allsat:      2531
  Max number of models for allsat:        12
  Avg number of models for allsat:        1.47

Time for post operator:                 13.617s
  Time for path formula creation:       12.894s
Time for strengthen operator:            0.590s
Time for prec operator:                 20.080s
  Time for abstraction:                 18.408s (Max:     0.232s, Count: 88715)
    Boolean abstraction:                 2.722s
    Solving time:                        2.514s (Max:     0.038s)
    Model enumeration time:              0.456s
    Time for BDD construction:           0.192s (Max:     0.012s)
Time for merge operator:                 0.968s
Time for coverage check:                 0.116s
  Time for BDD entailment checks:        0.091s
Total time for SMT solver (w/o itp):     2.970s

Number of path formula cache hits:   482618 (72%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    10.437s

Total number of created targets for pointer analysis: 3888
   Number of created targets for uf: *(struct_lock_torture_ops)* is 1297


Number of BDD nodes:                               1976
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        4380 (count: 81515, min: 0, max: 255, avg: 0.05)
Time for BDD node cleanup:                             0.041s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  1.373s
  Time for transition matches:                         0.677s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.001s
Automaton transfers with branching:                0
Automaton transfer successors:                       591518 (count: 591518, min: 1, max: 1, avg: 1.00) [1 x 591518]

CPA algorithm statistics
------------------------
Number of iterations:            389992
Max size of waitlist:            468
Average size of waitlist:        229
Number of computed successors:   470307
Max successors for one state:    2
Number of times merged:          35215
Number of times stopped:         55012
Number of times breaked:         83

Total time for CPA algorithm:        52.722s (Max:     1.558s)
  Time for choose from waitlist:      0.417s
  Time for precision adjustment:     24.193s
  Time for transfer relation:        21.934s
  Time for merge operator:            1.731s
  Time for stop operator:             1.022s
  Time for adding to reached set:     1.252s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   83
Avg. length of target path (in blocks):                3393 (count: 83, min: 15, max: 73, avg: 40.88)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   3.631s
  Counterexample analysis:                             2.292s (Max:     0.048s, Calls: 83)
    Refinement sat check:                              1.646s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.006s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.076s
  Precision update:                                    0.089s
  ARG update:                                          1.073s

Length of refined path (in blocks):                    2381 (count: 83, min: 8, max: 49, avg: 28.69)
Number of affected states:                             1702 (count: 83, min: 1, max: 48, avg: 20.51)
Length (states) of path with itp 'true':                596 (count: 83, min: 0, max: 31, avg: 7.18)
Length (states) of path with itp non-trivial itp:      1702 (count: 83, min: 1, max: 48, avg: 20.51)
Length (states) of path with itp 'false':                83 (count: 83, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:          35 (count: 83, min: 0, max: 3, avg: 0.42)
Equal non-trivial interpolants along paths:            1584 (count: 83, min: 0, max: 47, avg: 19.08)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                83
Number of successful refinements:     83
Number of failed refinements:         0
Max. size of reached set before ref.: 8955
Max. size of reached set after ref.:  2528
Avg. size of reached set before ref.: 5183.47
Avg. size of reached set after ref.:  243.52

Total time for CEGAR algorithm:      56.826s
Time for refinements:                 4.069s
Average time for refinement:          0.049s
Max time for refinement:              0.086s

Code Coverage
-----------------------------
  Function coverage:      0.457
  Visited lines:          674
  Total lines:            973
  Line coverage:          0.693
  Visited conditions:     148
  Total conditions:       256
  Condition coverage:     0.578

CPAchecker general statistics
-----------------------------
Number of program locations:     1370
Number of CFA edges:             1513
Number of relevant variables:    144
Number of functions:             46
Number of loops:                 12
Size of reached set:             834
  Number of reached locations:   336 (25%)
    Avg states per location:     2
    Max states per location:     19 (at node N393)
  Number of reached functions:   21 (46%)
  Number of partitions:          824
    Avg size of partitions:      1
    Max size of partitions:      4 (with key [N513 (before line 2559), Function lock_torture_init called from node N729, stack depth 2 [7d2f7bc9], stack [main, lock_torture_init]])
  Number of target states:       0

Time for analysis setup:          3.990s
  Time for loading CPAs:          0.872s
  Time for loading parser:        0.685s
  Time for CFA construction:      2.288s
    Time for parsing file(s):     0.747s
    Time for AST to CFA:          0.677s
    Time for CFA sanity check:    0.167s
    Time for post-processing:     0.546s
      Time for var class.:        0.232s
Time for Analysis:               56.827s
CPU time for analysis:           56.820s
Time for analyzing result:        0.001s
Total time for CPAchecker:       60.829s
Total CPU time for CPAchecker:   60.820s
Time for statistics:              0.088s

Time for Garbage Collector:       2.954s (in 188 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                146MB (   139 MiB) max;     68MB (    65 MiB) avg;    151MB (   144 MiB) peak
Used non-heap memory:             39MB (    37 MiB) max;     37MB (    35 MiB) avg;     40MB (    38 MiB) peak
Allocated heap memory:           160MB (   152 MiB) max;    133MB (   127 MiB) avg
Allocated non-heap memory:        41MB (    39 MiB) max;     39MB (    37 MiB) avg
Total process virtual memory:   8087MB (  7713 MiB) max;   8080MB (  7706 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
