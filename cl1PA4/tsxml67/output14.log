scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.16-rc1/205_9a_array_safes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--arcnet--arc-rawmode.ko-entry_point_true-unreach-call.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_72_40h0u/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 5545: Function pointer *(lp->hw.copy_to_card) with type void (*)(struct net_device *, int, int, void *, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 5546: Function pointer *(lp->hw.copy_to_card) with type void (*)(struct net_device *, int, int, void *, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 5477-5478: Function pointer *(lp->hw.copy_from_card) with type void (*)(struct net_device *, int, int, void *, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

line 5591: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___1 = ldv_zalloc(232UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function arcnet_unregister_proto to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 5545: Ignoring function call through function pointer *(lp->hw.copy_to_card): (*(lp->hw.copy_to_card))(dev, bufnum, 0, (void *)hard, 4); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5546: Ignoring function call through function pointer *(lp->hw.copy_to_card): (*(lp->hw.copy_to_card))(dev, bufnum, ofs, (void *)(&(pkt->soft)), length); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5560: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp = ldv_zalloc(20UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function skb_put to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function skb_pull to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

lines 5477-5478: Ignoring function call through function pointer *(lp->hw.copy_from_card): (*(lp->hw.copy_from_card))(dev, bufnum, (int)(((unsigned int)ofs) + 16U), ((void *)(&(pkt->soft.raw))) + 16U, (int)(((unsigned int)length) - 16U)); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            5886 (14% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  3729 (63%)
  Because of loop head:            2114 (36%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         43 (1%)
  Times precision was empty:       1566 (27%)
  Times precision was {false}:     57 (1%)
  Times result was cached:         2221 (38%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      2042 (35%)
  Times result was 'false':        1123 (19%)
Number of strengthen sat checks:   0
Number of coverage checks:         16390
  BDD entailment checks:           9854
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       20
Number of predicates discovered:          38
Number of abstraction locations:          35
Max number of predicates per location:    30
Avg number of predicates per location:    2
Total predicates per abstraction:         26530
Max number of predicates per abstraction: 30
Avg number of predicates per abstraction: 12.64
Number of irrelevant predicates:          3188 (12%)
Number of preds handled by boolean abs:   21480 (81%)
  Total number of models for allsat:      1173
  Max number of models for allsat:        4
  Avg number of models for allsat:        0.57

Time for post operator:                  3.749s
  Time for path formula creation:        3.660s
Time for strengthen operator:            0.111s
Time for prec operator:                 14.349s
  Time for abstraction:                 14.021s (Max:     0.033s, Count: 5886)
    Boolean abstraction:                 8.301s
    Solving time:                        7.105s (Max:     0.021s)
    Model enumeration time:              0.397s
    Time for BDD construction:           0.221s (Max:     0.010s)
Time for merge operator:                 0.406s
Time for coverage check:                 0.084s
  Time for BDD entailment checks:        0.061s
Total time for SMT solver (w/o itp):     7.503s

Number of path formula cache hits:   23618 (50%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     3.276s

Total number of created targets for pointer analysis: 3345
   Number of created targets for uf: *(void)* is 436
   Number of created targets for uf: *(struct_ArcProto)* is 2461


Number of BDD nodes:                               9791
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       26582 (count: 33377, min: 0, max: 2225, avg: 0.80)
Time for BDD node cleanup:                             0.019s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.277s
Automaton transfers with branching:                0
Automaton transfer successors:                        43554 (count: 43554, min: 1, max: 1, avg: 1.00) [1 x 43554]

CPA algorithm statistics
------------------------
Number of iterations:            32861
Max size of waitlist:            19
Average size of waitlist:        4
Number of computed successors:   38137
Max successors for one state:    2
Number of times merged:          3268
Number of times stopped:         4047
Number of times breaked:         43

Total time for CPA algorithm:        22.045s (Max:     1.238s)
  Time for choose from waitlist:      0.120s
  Time for precision adjustment:     15.048s
  Time for transfer relation:         5.287s
  Time for merge operator:            0.614s
  Time for stop operator:             0.254s
  Time for adding to reached set:     0.166s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   43
Avg. length of target path (in blocks):                2047 (count: 43, min: 14, max: 74, avg: 47.60)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   2.842s
  Counterexample analysis:                             2.554s (Max:     0.180s, Calls: 43)
    Refinement sat check:                              1.589s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.006s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.051s
  Precision update:                                    0.029s
  ARG update:                                          0.157s

Length of refined path (in blocks):                     919 (count: 43, min: 8, max: 37, avg: 21.37)
Number of affected states:                              518 (count: 43, min: 1, max: 29, avg: 12.05)
Length (states) of path with itp 'true':                358 (count: 43, min: 4, max: 24, avg: 8.33)
Length (states) of path with itp non-trivial itp:       518 (count: 43, min: 1, max: 29, avg: 12.05)
Length (states) of path with itp 'false':                43 (count: 43, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:         385 (count: 43, min: 0, max: 27, avg: 8.95)
Equal non-trivial interpolants along paths:              90 (count: 43, min: 0, max: 27, avg: 2.09)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                43
Number of successful refinements:     43
Number of failed refinements:         0
Max. size of reached set before ref.: 1563
Max. size of reached set after ref.:  382
Avg. size of reached set before ref.: 855.67
Avg. size of reached set after ref.:  92.02

Total time for CEGAR algorithm:      25.050s
Time for refinements:                 3.003s
Average time for refinement:          0.069s
Max time for refinement:              0.195s

Code Coverage
-----------------------------
  Function coverage:      0.140
  Visited lines:          974
  Total lines:            1202
  Line coverage:          0.810
  Visited conditions:     40
  Total conditions:       96
  Condition coverage:     0.417

CPAchecker general statistics
-----------------------------
Number of program locations:     1429
Number of CFA edges:             1463
Number of relevant variables:    69
Number of functions:             43
Number of loops:                 7
Size of reached set:             130
  Number of reached locations:   90 (6%)
    Avg states per location:     1
    Max states per location:     3 (at node N61)
  Number of reached functions:   6 (14%)
  Number of partitions:          128
    Avg size of partitions:      1
    Max size of partitions:      3 (with key [N92 (before line 5410), Function arcnet_raw_init called from node N320, stack depth 2 [a2341c6], stack [main, arcnet_raw_init]])
  Number of target states:       0
  Size of final wait list        1

Time for analysis setup:          4.688s
  Time for loading CPAs:          1.044s
  Time for loading parser:        0.735s
  Time for CFA construction:      2.726s
    Time for parsing file(s):     0.892s
    Time for AST to CFA:          0.905s
    Time for CFA sanity check:    0.140s
    Time for post-processing:     0.572s
      Time for var class.:        0.150s
Time for Analysis:               25.050s
CPU time for analysis:           25.050s
Total time for CPAchecker:       29.742s
Total CPU time for CPAchecker:   29.730s
Time for statistics:              0.080s

Time for Garbage Collector:       0.360s (in 32 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 71MB (    67 MiB) max;     46MB (    44 MiB) avg;     73MB (    70 MiB) peak
Used non-heap memory:             40MB (    38 MiB) max;     35MB (    33 MiB) avg;     40MB (    38 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        42MB (    40 MiB) max;     37MB (    35 MiB) avg
Total process virtual memory:   8086MB (  7712 MiB) max;   8073MB (  7699 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
