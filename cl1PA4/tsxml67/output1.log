scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.16-rc1/205_9a_array_safes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--arcnet--arc-rawmode.ko-entry_point_true-unreach-call.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_8b5jye7o/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 5545: Function pointer *(lp->hw.copy_to_card) with type void (*)(struct net_device *, int, int, void *, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 5546: Function pointer *(lp->hw.copy_to_card) with type void (*)(struct net_device *, int, int, void *, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 5477-5478: Function pointer *(lp->hw.copy_from_card) with type void (*)(struct net_device *, int, int, void *, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

line 5591: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___1 = ldv_zalloc(232UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function arcnet_unregister_proto to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 5545: Ignoring function call through function pointer *(lp->hw.copy_to_card): (*(lp->hw.copy_to_card))(dev, bufnum, 0, (void *)hard, 4); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5546: Ignoring function call through function pointer *(lp->hw.copy_to_card): (*(lp->hw.copy_to_card))(dev, bufnum, ofs, (void *)(&(pkt->soft)), length); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5560: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp = ldv_zalloc(20UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function skb_put to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function skb_pull to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

lines 5477-5478: Ignoring function call through function pointer *(lp->hw.copy_from_card): (*(lp->hw.copy_from_card))(dev, bufnum, (int)(((unsigned int)ofs) + 16U), ((void *)(&(pkt->soft.raw))) + 16U, (int)(((unsigned int)length) - 16U)); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            5873 (14% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  3723 (63%)
  Because of loop head:            2108 (36%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         42 (1%)
  Times precision was empty:       1565 (27%)
  Times precision was {false}:     57 (1%)
  Times result was cached:         2220 (38%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      2031 (35%)
  Times result was 'false':        1119 (19%)
Number of strengthen sat checks:   0
Number of coverage checks:         16332
  BDD entailment checks:           9816
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       20
Number of predicates discovered:          37
Number of abstraction locations:          35
Max number of predicates per location:    29
Avg number of predicates per location:    2
Total predicates per abstraction:         26335
Max number of predicates per abstraction: 29
Avg number of predicates per abstraction: 12.61
Number of irrelevant predicates:          3179 (12%)
Number of preds handled by boolean abs:   21294 (81%)
  Total number of models for allsat:      1167
  Max number of models for allsat:        4
  Avg number of models for allsat:        0.57

Time for post operator:                  3.768s
  Time for path formula creation:        3.691s
Time for strengthen operator:            0.089s
Time for prec operator:                 14.633s
  Time for abstraction:                 14.285s (Max:     0.031s, Count: 5873)
    Boolean abstraction:                 8.346s
    Solving time:                        7.128s (Max:     0.018s)
    Model enumeration time:              0.363s
    Time for BDD construction:           0.237s (Max:     0.015s)
Time for merge operator:                 0.477s
Time for coverage check:                 0.101s
  Time for BDD entailment checks:        0.078s
Total time for SMT solver (w/o itp):     7.491s

Number of path formula cache hits:   23548 (50%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     3.324s

Total number of created targets for pointer analysis: 3305
   Number of created targets for uf: *(void)* is 451
   Number of created targets for uf: *(struct_ArcProto)* is 2421


Number of BDD nodes:                               9722
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       26576 (count: 33204, min: 0, max: 2221, avg: 0.80)
Time for BDD node cleanup:                             0.018s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.386s
Automaton transfers with branching:                0
Automaton transfer successors:                        43446 (count: 43446, min: 1, max: 1, avg: 1.00) [1 x 43446]

CPA algorithm statistics
------------------------
Number of iterations:            32770
Max size of waitlist:            19
Average size of waitlist:        4
Number of computed successors:   38031
Max successors for one state:    2
Number of times merged:          3258
Number of times stopped:         4034
Number of times breaked:         42

Total time for CPA algorithm:        22.804s (Max:     1.337s)
  Time for choose from waitlist:      0.107s
  Time for precision adjustment:     15.307s
  Time for transfer relation:         5.688s
  Time for merge operator:            0.684s
  Time for stop operator:             0.303s
  Time for adding to reached set:     0.171s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   42
Avg. length of target path (in blocks):                1973 (count: 42, min: 14, max: 73, avg: 46.98)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   2.745s
  Counterexample analysis:                             2.401s (Max:     0.178s, Calls: 42)
    Refinement sat check:                              1.481s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.001s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.042s
  Precision update:                                    0.023s
  ARG update:                                          0.202s

Length of refined path (in blocks):                     882 (count: 42, min: 8, max: 36, avg: 21.00)
Number of affected states:                              490 (count: 42, min: 1, max: 29, avg: 11.67)
Length (states) of path with itp 'true':                350 (count: 42, min: 4, max: 24, avg: 8.33)
Length (states) of path with itp non-trivial itp:       490 (count: 42, min: 1, max: 29, avg: 11.67)
Length (states) of path with itp 'false':                42 (count: 42, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:         358 (count: 42, min: 0, max: 26, avg: 8.52)
Equal non-trivial interpolants along paths:              90 (count: 42, min: 0, max: 27, avg: 2.14)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                42
Number of successful refinements:     42
Number of failed refinements:         0
Max. size of reached set before ref.: 1529
Max. size of reached set after ref.:  382
Avg. size of reached set before ref.: 838.83
Avg. size of reached set after ref.:  92.33

Total time for CEGAR algorithm:      25.724s
Time for refinements:                 2.910s
Average time for refinement:          0.069s
Max time for refinement:              0.191s

Code Coverage
-----------------------------
  Function coverage:      0.512
  Visited lines:          1130
  Total lines:            1202
  Line coverage:          0.940
  Visited conditions:     82
  Total conditions:       96
  Condition coverage:     0.854

CPAchecker general statistics
-----------------------------
Number of program locations:     1429
Number of CFA edges:             1463
Number of relevant variables:    69
Number of functions:             43
Number of loops:                 7
Size of reached set:             1525
  Number of reached locations:   261 (18%)
    Avg states per location:     5
    Max states per location:     61 (at node N92)
  Number of reached functions:   22 (51%)
  Number of partitions:          1459
    Avg size of partitions:      1
    Max size of partitions:      28 (with key [N92 (before line 5410), Function arcnet_raw_init called from node N320, stack depth 2 [74e6094b], stack [main, arcnet_raw_init]])
  Number of target states:       0
  Size of final wait list        5

Time for analysis setup:          4.495s
  Time for loading CPAs:          0.886s
  Time for loading parser:        0.673s
  Time for CFA construction:      2.780s
    Time for parsing file(s):     0.936s
    Time for AST to CFA:          0.959s
    Time for CFA sanity check:    0.140s
    Time for post-processing:     0.541s
      Time for var class.:        0.155s
Time for Analysis:               25.724s
CPU time for analysis:           25.720s
Total time for CPAchecker:       30.224s
Total CPU time for CPAchecker:   30.210s
Time for statistics:              0.107s

Time for Garbage Collector:       0.370s (in 33 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 71MB (    68 MiB) max;     46MB (    44 MiB) avg;     73MB (    70 MiB) peak
Used non-heap memory:             40MB (    38 MiB) max;     35MB (    33 MiB) avg;     40MB (    38 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        42MB (    40 MiB) max;     37MB (    35 MiB) avg
Total process virtual memory:   8087MB (  7713 MiB) max;   8074MB (  7700 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
