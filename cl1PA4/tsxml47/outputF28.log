scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.16-rc1/205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--atheros--atlx--atl1.ko-entry_point_true-unreach-call.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_vuwsxpe2/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 6693: Function pointer *(ops->alloc) with type void *(*)(struct device *, size_t , dma_addr_t *, gfp_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6725: Function pointer *(ops->free) with type void (*)(struct device *, size_t , void *, dma_addr_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6586: Function pointer *(ops->map_page) with type dma_addr_t (*)(struct device *, struct page *, unsigned long, size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6616: Function pointer *(ops->unmap_page) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

line 12583: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp = ldv_zalloc(32UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 12591: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___3 = ldv_zalloc(12UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 12593: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___4 = ldv_zalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 12595: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___5 = ldv_zalloc(8UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 12599: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___7 = ldv_zalloc(196UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 12609: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___12 = ldv_zalloc(40UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ndo_uninit_5 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ndo_init_5 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function eth_validate_addr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ethtool_op_get_link to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_complete_6 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_suspend_noirq_6 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_restore_noirq_6 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_poweroff_late_6 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_poweroff_noirq_6 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_thaw_noirq_6 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_freeze_late_6 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_prepare_6 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_freeze_noirq_6 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_resume_noirq_6 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_thaw_early_6 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_resume_early_6 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_restore_early_6 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_suspend_late_6 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function disable_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __pci_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_enable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netif_carrier_off to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_warn to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iowrite32 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_set_wakeup_enable to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ioread32 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strlcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dma_set_mask to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_request_regions to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_set_master to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function alloc_etherdev_mqs to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_release_regions to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_disable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dev_kfree_skb_any to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 12485: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___2 = ldv_zalloc(16UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function dev_printk to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function enable_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iowrite16 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ioread16 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function msleep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netif_device_detach to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __might_sleep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_dev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netif_device_attach to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_iomap to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _dev_info to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netif_napi_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function unregister_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_iounmap to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __raw_spin_lock_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __phys_addr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            2271576 (14% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  1975896 (87%)
  Because of loop head:            294762 (13%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         918 (0%)
  Times precision was empty:       672580 (30%)
  Times precision was {false}:     10954 (0%)
  Times result was cached:         1575011 (69%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      13031 (1%)
  Times result was 'false':        77260 (3%)
Number of strengthen sat checks:   0
Number of coverage checks:         3989627
  BDD entailment checks:           1877487
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       102
Number of predicates discovered:          27
Number of abstraction locations:          295
Max number of predicates per location:    21
Avg number of predicates per location:    3
Total predicates per abstraction:         5566830
Max number of predicates per abstraction: 21
Avg number of predicates per abstraction: 232.10
Number of irrelevant predicates:          3573611 (64%)
Number of preds handled by boolean abs:   29602 (1%)
  Total number of models for allsat:      67980
  Max number of models for allsat:        288
  Avg number of models for allsat:        5.22

Time for post operator:                140.321s
  Time for path formula creation:      133.569s
Time for strengthen operator:           15.425s
Time for prec operator:                356.117s
  Time for abstraction:                324.212s (Max:     2.415s, Count: 2271576)
    Boolean abstraction:                59.329s
    Solving time:                       22.431s (Max:     0.120s)
    Model enumeration time:             39.952s
    Time for BDD construction:           1.801s (Max:     0.050s)
Time for merge operator:                14.886s
Time for coverage check:                 1.763s
  Time for BDD entailment checks:        1.219s
Total time for SMT solver (w/o itp):    62.383s

Number of path formula cache hits:   17698156 (94%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    61.907s

Total number of created targets for pointer analysis: 94576
   Number of created targets for uf: *unsigned_short_int is 129
   Number of created targets for uf: *(void)* is 289
   Number of created targets for uf: *unsigned_char is 63
   Number of created targets for uf: *(unsigned_char)* is 49
   Number of created targets for uf: *unsigned_long_long_int is 99
   Number of created targets for uf: *unsigned_int is 118


Number of BDD nodes:                               29973
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       28456 (count: 2720481, min: 0, max: 687, avg: 0.01)
Time for BDD node cleanup:                             0.333s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                 19.607s
  Time for transition matches:                        10.579s
  Time for transition assertions:                      0.005s
  Time for transition actions:                         0.009s
Automaton transfers with branching:                0
Automaton transfer successors:                     15931017 (count: 15931017, min: 1, max: 1, avg: 1.00) [1 x 15931017]

CPA algorithm statistics
------------------------
Number of iterations:            9598892
Max size of waitlist:            1385
Average size of waitlist:        571
Number of computed successors:   11395055
Max successors for one state:    2
Number of times merged:          1056070
Number of times stopped:         1390619
Number of times breaked:         918

Total time for CPA algorithm:       799.137s (Max:     4.474s)
  Time for choose from waitlist:      5.557s
  Time for precision adjustment:    426.289s
  Time for transfer relation:       281.110s
  Time for merge operator:           28.155s
  Time for stop operator:            14.429s
  Time for adding to reached set:    18.204s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   918
Avg. length of target path (in blocks):               70716 (count: 918, min: 34, max: 107, avg: 77.03)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  59.500s
  Counterexample analysis:                            37.301s (Max:     0.128s, Calls: 918)
    Refinement sat check:                             25.218s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.034s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.320s
  Precision update:                                    0.631s
  ARG update:                                         20.656s

Length of refined path (in blocks):                   62270 (count: 918, min: 28, max: 106, avg: 67.83)
Number of affected states:                            12967 (count: 918, min: 1, max: 83, avg: 14.13)
Length (states) of path with itp 'true':              48385 (count: 918, min: 0, max: 79, avg: 52.71)
Length (states) of path with itp non-trivial itp:     12967 (count: 918, min: 1, max: 83, avg: 14.13)
Length (states) of path with itp 'false':               918 (count: 918, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:         136 (count: 918, min: 0, max: 1, avg: 0.15)
Equal non-trivial interpolants along paths:           11913 (count: 918, min: 0, max: 81, avg: 12.98)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                918
Number of successful refinements:     918
Number of failed refinements:         0
Max. size of reached set before ref.: 48152
Max. size of reached set after ref.:  39739
Avg. size of reached set before ref.: 26615.02
Avg. size of reached set after ref.:  15824.39

Total time for CEGAR algorithm:     891.748s
Time for refinements:                80.447s
Average time for refinement:          0.087s
Max time for refinement:              0.354s

Code Coverage
-----------------------------
  Function coverage:      0.319
  Visited lines:          2299
  Total lines:            5158
  Line coverage:          0.446
  Visited conditions:     492
  Total conditions:       1348
  Condition coverage:     0.365

CPAchecker general statistics
-----------------------------
Number of program locations:     7411
Number of CFA edges:             8353
Number of relevant variables:    1336
Number of functions:             263
Number of loops:                 40
Size of reached set:             21381
  Number of reached locations:   1182 (16%)
    Avg states per location:     18
    Max states per location:     378 (at node N715)
  Number of reached functions:   84 (32%)
  Number of partitions:          21321
    Avg size of partitions:      1
    Max size of partitions:      18 (with key [N5606 (before line 12626), Function main called from node N5524, stack depth 1 [4b41587d], stack [main]])
  Number of target states:       0
  Size of final wait list        585

Time for analysis setup:          8.502s
  Time for loading CPAs:          1.310s
  Time for loading parser:        0.716s
  Time for CFA construction:      6.284s
    Time for parsing file(s):     1.374s
    Time for AST to CFA:          2.109s
    Time for CFA sanity check:    0.586s
    Time for post-processing:     2.023s
      Time for var class.:        0.755s
Time for Analysis:              891.748s
CPU time for analysis:          891.670s
Total time for CPAchecker:      900.255s
Total CPU time for CPAchecker:  900.160s
Time for statistics:              0.485s

Time for Garbage Collector:      56.445s (in 1064 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:               1085MB (  1034 MiB) max;    474MB (   452 MiB) avg;   1099MB (  1048 MiB) peak
Used non-heap memory:             47MB (    45 MiB) max;     41MB (    39 MiB) avg;     47MB (    45 MiB) peak
Allocated heap memory:          1120MB (  1068 MiB) max;    689MB (   657 MiB) avg
Allocated non-heap memory:        49MB (    47 MiB) max;     49MB (    46 MiB) avg
Total process virtual memory:   8290MB (  7906 MiB) max;   8199MB (  7819 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
