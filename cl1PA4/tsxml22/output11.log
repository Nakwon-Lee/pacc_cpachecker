scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.16-rc1/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--core--pktgen.ko-entry_point_true-unreach-call.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_or66oiw4/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 6829: Dead code detected: __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

line 6832: Dead code detected: __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

line 6835: Dead code detected: __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (8UL) {
  case 1UL:
  __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& current_task));
  goto ldv_3067;
  case 2UL:
  __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_3067;
  case 4UL:
  __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_3067;
  case 8UL:
  __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_3067;
  default:
  __bad_percpu_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 7003: Dead code detected: __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& kernel_stack)); (CFACreationUtils.addEdgeToCFA, INFO)

line 7006: Dead code detected: __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack)); (CFACreationUtils.addEdgeToCFA, INFO)

line 7009: Dead code detected: __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (8UL) {
  case 1UL:
  __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& kernel_stack));
  goto ldv_5945;
  case 2UL:
  __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack));
  goto ldv_5945;
  case 4UL:
  __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack));
  goto ldv_5945;
  case 8UL:
  __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack));
  goto ldv_5945;
  default:
  __bad_percpu_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 7040: Dead code detected: [pao_ID__ == 1] (CFACreationUtils.addEdgeToCFA, INFO)

line 7040: Dead code detected: [!(pao_ID__ == 1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 7041: Dead code detected: __asm__ ("incb %%gs:%P0": "+m" (__preempt_count)); (CFACreationUtils.addEdgeToCFA, INFO)

line 7043: Dead code detected: [pao_ID__ == -1] (CFACreationUtils.addEdgeToCFA, INFO)

line 7043: Dead code detected: [!(pao_ID__ == -1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 7044: Dead code detected: __asm__ ("decb %%gs:%P0": "+m" (__preempt_count)); (CFACreationUtils.addEdgeToCFA, INFO)

line 7046: Dead code detected: __asm__ ("addb %1, %%gs:%P0": "+m" (__preempt_count): "qi" (val)); (CFACreationUtils.addEdgeToCFA, INFO)

line 7050: Dead code detected: [pao_ID__ == 1] (CFACreationUtils.addEdgeToCFA, INFO)

line 7050: Dead code detected: [!(pao_ID__ == 1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 7051: Dead code detected: __asm__ ("incw %%gs:%P0": "+m" (__preempt_count)); (CFACreationUtils.addEdgeToCFA, INFO)

line 7053: Dead code detected: [pao_ID__ == -1] (CFACreationUtils.addEdgeToCFA, INFO)

line 7053: Dead code detected: [!(pao_ID__ == -1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 7054: Dead code detected: __asm__ ("decw %%gs:%P0": "+m" (__preempt_count)); (CFACreationUtils.addEdgeToCFA, INFO)

line 7056: Dead code detected: __asm__ ("addw %1, %%gs:%P0": "+m" (__preempt_count): "ri" (val)); (CFACreationUtils.addEdgeToCFA, INFO)

line 7070: Dead code detected: [pao_ID__ == 1] (CFACreationUtils.addEdgeToCFA, INFO)

line 7070: Dead code detected: [!(pao_ID__ == 1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 7071: Dead code detected: __asm__ ("incq %%gs:%P0": "+m" (__preempt_count)); (CFACreationUtils.addEdgeToCFA, INFO)

line 7073: Dead code detected: [pao_ID__ == -1] (CFACreationUtils.addEdgeToCFA, INFO)

line 7073: Dead code detected: [!(pao_ID__ == -1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 7074: Dead code detected: __asm__ ("decq %%gs:%P0": "+m" (__preempt_count)); (CFACreationUtils.addEdgeToCFA, INFO)

line 7076: Dead code detected: __asm__ ("addq %1, %%gs:%P0": "+m" (__preempt_count): "re" (val)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (4UL) {
  case 1UL: ;
  if (pao_ID__ == 1) {
    __asm__ ("incb %%gs:%P0": "+m" (__preempt_count));
  } else
  if (pao_ID__ == -1) {
    __asm__ ("decb %%gs:%P0": "+m" (__preempt_count));
  } else {
    __asm__ ("addb %1, %%gs:%P0": "+m" (__preempt_count): "qi" (val));
  }
  goto ldv_6061;
  case 2UL: ;
  if (pao_ID__ == 1) {
    __asm__ ("incw %%gs:%P0": "+m" (__preempt_count));
  } else
  if (pao_ID__ == -1) {
    __asm__ ("decw %%gs:%P0": "+m" (__preempt_count));
  } else {
    __asm__ ("addw %1, %%gs:%P0": "+m" (__preempt_count): "ri" (val));
  }
  goto ldv_6061;
  case 4UL: ;
  if (pao_ID__ == 1) {
    __asm__ ("incl %%gs:%P0": "+m" (__preempt_count));
  } else
  if (pao_ID__ == -1) {
    __asm__ ("decl %%gs:%P0": "+m" (__preempt_count));
  } else {
    __asm__ ("addl %1, %%gs:%P0": "+m" (__preempt_count): "ri" (val));
  }
  goto ldv_6061;
  case 8UL: ;
  if (pao_ID__ == 1) {
    __asm__ ("incq %%gs:%P0": "+m" (__preempt_count));
  } else
  if (pao_ID__ == -1) {
    __asm__ ("decq %%gs:%P0": "+m" (__preempt_count));
  } else {
    __asm__ ("addq %1, %%gs:%P0": "+m" (__preempt_count): "re" (val));
  }
  goto ldv_6061;
  default:
  __bad_percpu_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 7094: Dead code detected: [pao_ID__ == 1] (CFACreationUtils.addEdgeToCFA, INFO)

line 7094: Dead code detected: [!(pao_ID__ == 1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 7095: Dead code detected: __asm__ ("incb %%gs:%P0": "+m" (__preempt_count)); (CFACreationUtils.addEdgeToCFA, INFO)

line 7097: Dead code detected: [pao_ID__ == -1] (CFACreationUtils.addEdgeToCFA, INFO)

line 7097: Dead code detected: [!(pao_ID__ == -1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 7098: Dead code detected: __asm__ ("decb %%gs:%P0": "+m" (__preempt_count)); (CFACreationUtils.addEdgeToCFA, INFO)

line 7100: Dead code detected: __asm__ ("addb %1, %%gs:%P0": "+m" (__preempt_count): "qi" (- val)); (CFACreationUtils.addEdgeToCFA, INFO)

line 7104: Dead code detected: [pao_ID__ == 1] (CFACreationUtils.addEdgeToCFA, INFO)

line 7104: Dead code detected: [!(pao_ID__ == 1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 7105: Dead code detected: __asm__ ("incw %%gs:%P0": "+m" (__preempt_count)); (CFACreationUtils.addEdgeToCFA, INFO)

line 7107: Dead code detected: [pao_ID__ == -1] (CFACreationUtils.addEdgeToCFA, INFO)

line 7107: Dead code detected: [!(pao_ID__ == -1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 7108: Dead code detected: __asm__ ("decw %%gs:%P0": "+m" (__preempt_count)); (CFACreationUtils.addEdgeToCFA, INFO)

line 7110: Dead code detected: __asm__ ("addw %1, %%gs:%P0": "+m" (__preempt_count): "ri" (- val)); (CFACreationUtils.addEdgeToCFA, INFO)

line 7124: Dead code detected: [pao_ID__ == 1] (CFACreationUtils.addEdgeToCFA, INFO)

line 7124: Dead code detected: [!(pao_ID__ == 1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 7125: Dead code detected: __asm__ ("incq %%gs:%P0": "+m" (__preempt_count)); (CFACreationUtils.addEdgeToCFA, INFO)

line 7127: Dead code detected: [pao_ID__ == -1] (CFACreationUtils.addEdgeToCFA, INFO)

line 7127: Dead code detected: [!(pao_ID__ == -1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 7128: Dead code detected: __asm__ ("decq %%gs:%P0": "+m" (__preempt_count)); (CFACreationUtils.addEdgeToCFA, INFO)

line 7130: Dead code detected: __asm__ ("addq %1, %%gs:%P0": "+m" (__preempt_count): "re" (- val)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (4UL) {
  case 1UL: ;
  if (pao_ID__ == 1) {
    __asm__ ("incb %%gs:%P0": "+m" (__preempt_count));
  } else
  if (pao_ID__ == -1) {
    __asm__ ("decb %%gs:%P0": "+m" (__preempt_count));
  } else {
    __asm__ ("addb %1, %%gs:%P0": "+m" (__preempt_count): "qi" (- val));
  }
  goto ldv_6073;
  case 2UL: ;
  if (pao_ID__ == 1) {
    __asm__ ("incw %%gs:%P0": "+m" (__preempt_count));
  } else
  if (pao_ID__ == -1) {
    __asm__ ("decw %%gs:%P0": "+m" (__preempt_count));
  } else {
    __asm__ ("addw %1, %%gs:%P0": "+m" (__preempt_count): "ri" (- val));
  }
  goto ldv_6073;
  case 4UL: ;
  if (pao_ID__ == 1) {
    __asm__ ("incl %%gs:%P0": "+m" (__preempt_count));
  } else
  if (pao_ID__ == -1) {
    __asm__ ("decl %%gs:%P0": "+m" (__preempt_count));
  } else {
    __asm__ ("addl %1, %%gs:%P0": "+m" (__preempt_count): "ri" (- val));
  }
  goto ldv_6073;
  case 8UL: ;
  if (pao_ID__ == 1) {
    __asm__ ("incq %%gs:%P0": "+m" (__preempt_count));
  } else
  if (pao_ID__ == -1) {
    __asm__ ("decq %%gs:%P0": "+m" (__preempt_count));
  } else {
    __asm__ ("addq %1, %%gs:%P0": "+m" (__preempt_count): "re" (- val));
  }
  goto ldv_6073;
  default:
  __bad_percpu_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

lines 7520-7535: Dead code detected: switch (4UL) (CFACreationUtils.addEdgeToCFA, INFO)

line 7522: Dead code detected: __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "m" (numa_node)); (CFACreationUtils.addEdgeToCFA, INFO)

line 7525: Dead code detected: __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "m" (numa_node)); (CFACreationUtils.addEdgeToCFA, INFO)

line 7527: Dead code detected:  (CFACreationUtils.addEdgeToCFA, INFO)

line 7531: Dead code detected: __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret__): "m" (numa_node)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (4UL) {
  case 1UL:
  __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "m" (numa_node));
  goto ldv_12750;
  case 2UL:
  __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "m" (numa_node));
  goto ldv_12750;
  case 4UL:
  __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "m" (numa_node));
  goto ldv_12750;
  case 8UL:
  __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret__): "m" (numa_node));
  goto ldv_12750;
  default:
  __bad_percpu_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

lines 7540-7555: Dead code detected: switch (4UL) (CFACreationUtils.addEdgeToCFA, INFO)

line 7542: Dead code detected: __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret_____0): "m" (numa_node)); (CFACreationUtils.addEdgeToCFA, INFO)

line 7545: Dead code detected: __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret_____0): "m" (numa_node)); (CFACreationUtils.addEdgeToCFA, INFO)

line 7547: Dead code detected:  (CFACreationUtils.addEdgeToCFA, INFO)

line 7551: Dead code detected: __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret_____0): "m" (numa_node)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (4UL) {
  case 1UL:
  __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret_____0): "m" (numa_node));
  goto ldv_12760;
  case 2UL:
  __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret_____0): "m" (numa_node));
  goto ldv_12760;
  case 4UL:
  __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret_____0): "m" (numa_node));
  goto ldv_12760;
  case 8UL:
  __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret_____0): "m" (numa_node));
  goto ldv_12760;
  default:
  __bad_percpu_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 7562: Dead code detected: __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret_____1): "m" (numa_node)); (CFACreationUtils.addEdgeToCFA, INFO)

line 7565: Dead code detected: __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret_____1): "m" (numa_node)); (CFACreationUtils.addEdgeToCFA, INFO)

line 7571: Dead code detected: __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret_____1): "m" (numa_node)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (4UL) {
  case 1UL:
  __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret_____1): "m" (numa_node));
  goto ldv_12769;
  case 2UL:
  __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret_____1): "m" (numa_node));
  goto ldv_12769;
  case 4UL:
  __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret_____1): "m" (numa_node));
  goto ldv_12769;
  case 8UL:
  __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret_____1): "m" (numa_node));
  goto ldv_12769;
  default:
  __bad_percpu_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

lines 7580-7595: Dead code detected: switch (4UL) (CFACreationUtils.addEdgeToCFA, INFO)

line 7582: Dead code detected: __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret_____2): "m" (numa_node)); (CFACreationUtils.addEdgeToCFA, INFO)

line 7585: Dead code detected: __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret_____2): "m" (numa_node)); (CFACreationUtils.addEdgeToCFA, INFO)

line 7587: Dead code detected:  (CFACreationUtils.addEdgeToCFA, INFO)

line 7591: Dead code detected: __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret_____2): "m" (numa_node)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (4UL) {
  case 1UL:
  __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret_____2): "m" (numa_node));
  goto ldv_12778;
  case 2UL:
  __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret_____2): "m" (numa_node));
  goto ldv_12778;
  case 4UL:
  __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret_____2): "m" (numa_node));
  goto ldv_12778;
  case 8UL:
  __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret_____2): "m" (numa_node));
  goto ldv_12778;
  default:
  __bad_percpu_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (4UL) {
  case 1UL: ;
  switch (4UL) {
  case 1UL:
  __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "m" (numa_node));
  goto ldv_12750;
  case 2UL:
  __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "m" (numa_node));
  goto ldv_12750;
  case 4UL:
  __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "m" (numa_node));
  goto ldv_12750;
  case 8UL:
  __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret__): "m" (numa_node));
  goto ldv_12750;
  default:
  __bad_percpu_size();
  }
  ldv_12750:
  pscr_ret__ = pfo_ret__;
  goto ldv_12756;
  case 2UL: ;
  switch (4UL) {
  case 1UL:
  __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret_____0): "m" (numa_node));
  goto ldv_12760;
  case 2UL:
  __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret_____0): "m" (numa_node));
  goto ldv_12760;
  case 4UL:
  __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret_____0): "m" (numa_node));
  goto ldv_12760;
  case 8UL:
  __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret_____0): "m" (numa_node));
  goto ldv_12760;
  default:
  __bad_percpu_size();
  }
  ldv_12760:
  pscr_ret__ = pfo_ret_____0;
  goto ldv_12756;
  case 4UL: ;
  switch (4UL) {
  case 1UL:
  __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret_____1): "m" (numa_node));
  goto ldv_12769;
  case 2UL:
  __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret_____1): "m" (numa_node));
  goto ldv_12769;
  case 4UL:
  __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret_____1): "m" (numa_node));
  goto ldv_12769;
  case 8UL:
  __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret_____1): "m" (numa_node));
  goto ldv_12769;
  default:
  __bad_percpu_size();
  }
  ldv_12769:
  pscr_ret__ = pfo_ret_____1;
  goto ldv_12756;
  case 8UL: ;
  switch (4UL) {
  case 1UL:
  __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret_____2): "m" (numa_node));
  goto ldv_12778;
  case 2UL:
  __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret_____2): "m" (numa_node));
  goto ldv_12778;
  case 4UL:
  __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret_____2): "m" (numa_node));
  goto ldv_12778;
  case 8UL:
  __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret_____2): "m" (numa_node));
  goto ldv_12778;
  default:
  __bad_percpu_size();
  }
  ldv_12778:
  pscr_ret__ = pfo_ret_____2;
  goto ldv_12756;
  default:
  __bad_size_call_parameter();
  goto ldv_12756;
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 8414: Dead code detected: pao_ID__ = -1; (CFACreationUtils.addEdgeToCFA, INFO)

line 8417: Dead code detected: [pao_ID__ == 1] (CFACreationUtils.addEdgeToCFA, INFO)

line 8417: Dead code detected: [!(pao_ID__ == 1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 8418: Dead code detected: __asm__ ("incb %%gs:%P0": "+m" (*(dev->pcpu_refcnt))); (CFACreationUtils.addEdgeToCFA, INFO)

line 8420: Dead code detected: [pao_ID__ == -1] (CFACreationUtils.addEdgeToCFA, INFO)

line 8420: Dead code detected: [!(pao_ID__ == -1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 8421: Dead code detected: __asm__ ("decb %%gs:%P0": "+m" (*(dev->pcpu_refcnt))); (CFACreationUtils.addEdgeToCFA, INFO)

line 8423: Dead code detected: __asm__ ("addb %1, %%gs:%P0": "+m" (*(dev->pcpu_refcnt)): "qi" (-1)); (CFACreationUtils.addEdgeToCFA, INFO)

line 8427: Dead code detected: [pao_ID__ == 1] (CFACreationUtils.addEdgeToCFA, INFO)

line 8427: Dead code detected: [!(pao_ID__ == 1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 8428: Dead code detected: __asm__ ("incw %%gs:%P0": "+m" (*(dev->pcpu_refcnt))); (CFACreationUtils.addEdgeToCFA, INFO)

line 8430: Dead code detected: [pao_ID__ == -1] (CFACreationUtils.addEdgeToCFA, INFO)

line 8430: Dead code detected: [!(pao_ID__ == -1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 8431: Dead code detected: __asm__ ("decw %%gs:%P0": "+m" (*(dev->pcpu_refcnt))); (CFACreationUtils.addEdgeToCFA, INFO)

line 8433: Dead code detected: __asm__ ("addw %1, %%gs:%P0": "+m" (*(dev->pcpu_refcnt)): "ri" (-1)); (CFACreationUtils.addEdgeToCFA, INFO)

line 8436: Dead code detected:  (CFACreationUtils.addEdgeToCFA, INFO)

line 8437: Dead code detected: [!(pao_ID__ == 1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 8438: Dead code detected: __asm__ ("incl %%gs:%P0": "+m" (*(dev->pcpu_refcnt))); (CFACreationUtils.addEdgeToCFA, INFO)

line 8440: Dead code detected: [pao_ID__ == -1] (CFACreationUtils.addEdgeToCFA, INFO)

line 8440: Dead code detected: [!(pao_ID__ == -1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 8441: Dead code detected: __asm__ ("decl %%gs:%P0": "+m" (*(dev->pcpu_refcnt))); (CFACreationUtils.addEdgeToCFA, INFO)

line 8443: Dead code detected: __asm__ ("addl %1, %%gs:%P0": "+m" (*(dev->pcpu_refcnt)): "ri" (-1)); (CFACreationUtils.addEdgeToCFA, INFO)

line 8447: Dead code detected: [pao_ID__ == 1] (CFACreationUtils.addEdgeToCFA, INFO)

line 8447: Dead code detected: [!(pao_ID__ == 1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 8448: Dead code detected: __asm__ ("incq %%gs:%P0": "+m" (*(dev->pcpu_refcnt))); (CFACreationUtils.addEdgeToCFA, INFO)

line 8450: Dead code detected: [pao_ID__ == -1] (CFACreationUtils.addEdgeToCFA, INFO)

line 8450: Dead code detected: [!(pao_ID__ == -1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 8451: Dead code detected: __asm__ ("decq %%gs:%P0": "+m" (*(dev->pcpu_refcnt))); (CFACreationUtils.addEdgeToCFA, INFO)

line 8453: Dead code detected: __asm__ ("addq %1, %%gs:%P0": "+m" (*(dev->pcpu_refcnt)): "re" (-1)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (4UL) {
  case 1UL: ;
  if (pao_ID__ == 1) {
    __asm__ ("incb %%gs:%P0": "+m" (*(dev->pcpu_refcnt)));
  } else
  if (pao_ID__ == -1) {
    __asm__ ("decb %%gs:%P0": "+m" (*(dev->pcpu_refcnt)));
  } else {
    __asm__ ("addb %1, %%gs:%P0": "+m" (*(dev->pcpu_refcnt)): "qi" (-1));
  }
  goto ldv_41041;
  case 2UL: ;
  if (pao_ID__ == 1) {
    __asm__ ("incw %%gs:%P0": "+m" (*(dev->pcpu_refcnt)));
  } else
  if (pao_ID__ == -1) {
    __asm__ ("decw %%gs:%P0": "+m" (*(dev->pcpu_refcnt)));
  } else {
    __asm__ ("addw %1, %%gs:%P0": "+m" (*(dev->pcpu_refcnt)): "ri" (-1));
  }
  goto ldv_41041;
  case 4UL: ;
  if (pao_ID__ == 1) {
    __asm__ ("incl %%gs:%P0": "+m" (*(dev->pcpu_refcnt)));
  } else
  if (pao_ID__ == -1) {
    __asm__ ("decl %%gs:%P0": "+m" (*(dev->pcpu_refcnt)));
  } else {
    __asm__ ("addl %1, %%gs:%P0": "+m" (*(dev->pcpu_refcnt)): "ri" (-1));
  }
  goto ldv_41041;
  case 8UL: ;
  if (pao_ID__ == 1) {
    __asm__ ("incq %%gs:%P0": "+m" (*(dev->pcpu_refcnt)));
  } else
  if (pao_ID__ == -1) {
    __asm__ ("decq %%gs:%P0": "+m" (*(dev->pcpu_refcnt)));
  } else {
    __asm__ ("addq %1, %%gs:%P0": "+m" (*(dev->pcpu_refcnt)): "re" (-1));
  }
  goto ldv_41041;
  default:
  __bad_percpu_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 8462: Dead code detected: pao_ID_____0 = -1; (CFACreationUtils.addEdgeToCFA, INFO)

line 8465: Dead code detected: [pao_ID_____0 == 1] (CFACreationUtils.addEdgeToCFA, INFO)

line 8465: Dead code detected: [!(pao_ID_____0 == 1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 8466: Dead code detected: __asm__ ("incb %%gs:%P0": "+m" (*(dev->pcpu_refcnt))); (CFACreationUtils.addEdgeToCFA, INFO)

line 8468: Dead code detected: [pao_ID_____0 == -1] (CFACreationUtils.addEdgeToCFA, INFO)

line 8468: Dead code detected: [!(pao_ID_____0 == -1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 8469: Dead code detected: __asm__ ("decb %%gs:%P0": "+m" (*(dev->pcpu_refcnt))); (CFACreationUtils.addEdgeToCFA, INFO)

line 8471: Dead code detected: __asm__ ("addb %1, %%gs:%P0": "+m" (*(dev->pcpu_refcnt)): "qi" (-1)); (CFACreationUtils.addEdgeToCFA, INFO)

line 8475: Dead code detected: [pao_ID_____0 == 1] (CFACreationUtils.addEdgeToCFA, INFO)

line 8475: Dead code detected: [!(pao_ID_____0 == 1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 8476: Dead code detected: __asm__ ("incw %%gs:%P0": "+m" (*(dev->pcpu_refcnt))); (CFACreationUtils.addEdgeToCFA, INFO)

line 8478: Dead code detected: [pao_ID_____0 == -1] (CFACreationUtils.addEdgeToCFA, INFO)

line 8478: Dead code detected: [!(pao_ID_____0 == -1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 8479: Dead code detected: __asm__ ("decw %%gs:%P0": "+m" (*(dev->pcpu_refcnt))); (CFACreationUtils.addEdgeToCFA, INFO)

line 8481: Dead code detected: __asm__ ("addw %1, %%gs:%P0": "+m" (*(dev->pcpu_refcnt)): "ri" (-1)); (CFACreationUtils.addEdgeToCFA, INFO)

line 8484: Dead code detected:  (CFACreationUtils.addEdgeToCFA, INFO)

line 8485: Dead code detected: [!(pao_ID_____0 == 1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 8486: Dead code detected: __asm__ ("incl %%gs:%P0": "+m" (*(dev->pcpu_refcnt))); (CFACreationUtils.addEdgeToCFA, INFO)

line 8488: Dead code detected: [pao_ID_____0 == -1] (CFACreationUtils.addEdgeToCFA, INFO)

line 8488: Dead code detected: [!(pao_ID_____0 == -1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 8489: Dead code detected: __asm__ ("decl %%gs:%P0": "+m" (*(dev->pcpu_refcnt))); (CFACreationUtils.addEdgeToCFA, INFO)

line 8491: Dead code detected: __asm__ ("addl %1, %%gs:%P0": "+m" (*(dev->pcpu_refcnt)): "ri" (-1)); (CFACreationUtils.addEdgeToCFA, INFO)

line 8495: Dead code detected: [pao_ID_____0 == 1] (CFACreationUtils.addEdgeToCFA, INFO)

line 8495: Dead code detected: [!(pao_ID_____0 == 1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 8496: Dead code detected: __asm__ ("incq %%gs:%P0": "+m" (*(dev->pcpu_refcnt))); (CFACreationUtils.addEdgeToCFA, INFO)

line 8498: Dead code detected: [pao_ID_____0 == -1] (CFACreationUtils.addEdgeToCFA, INFO)

line 8498: Dead code detected: [!(pao_ID_____0 == -1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 8499: Dead code detected: __asm__ ("decq %%gs:%P0": "+m" (*(dev->pcpu_refcnt))); (CFACreationUtils.addEdgeToCFA, INFO)

line 8501: Dead code detected: __asm__ ("addq %1, %%gs:%P0": "+m" (*(dev->pcpu_refcnt)): "re" (-1)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (4UL) {
  case 1UL: ;
  if (pao_ID_____0 == 1) {
    __asm__ ("incb %%gs:%P0": "+m" (*(dev->pcpu_refcnt)));
  } else
  if (pao_ID_____0 == -1) {
    __asm__ ("decb %%gs:%P0": "+m" (*(dev->pcpu_refcnt)));
  } else {
    __asm__ ("addb %1, %%gs:%P0": "+m" (*(dev->pcpu_refcnt)): "qi" (-1));
  }
  goto ldv_41052;
  case 2UL: ;
  if (pao_ID_____0 == 1) {
    __asm__ ("incw %%gs:%P0": "+m" (*(dev->pcpu_refcnt)));
  } else
  if (pao_ID_____0 == -1) {
    __asm__ ("decw %%gs:%P0": "+m" (*(dev->pcpu_refcnt)));
  } else {
    __asm__ ("addw %1, %%gs:%P0": "+m" (*(dev->pcpu_refcnt)): "ri" (-1));
  }
  goto ldv_41052;
  case 4UL: ;
  if (pao_ID_____0 == 1) {
    __asm__ ("incl %%gs:%P0": "+m" (*(dev->pcpu_refcnt)));
  } else
  if (pao_ID_____0 == -1) {
    __asm__ ("decl %%gs:%P0": "+m" (*(dev->pcpu_refcnt)));
  } else {
    __asm__ ("addl %1, %%gs:%P0": "+m" (*(dev->pcpu_refcnt)): "ri" (-1));
  }
  goto ldv_41052;
  case 8UL: ;
  if (pao_ID_____0 == 1) {
    __asm__ ("incq %%gs:%P0": "+m" (*(dev->pcpu_refcnt)));
  } else
  if (pao_ID_____0 == -1) {
    __asm__ ("decq %%gs:%P0": "+m" (*(dev->pcpu_refcnt)));
  } else {
    __asm__ ("addq %1, %%gs:%P0": "+m" (*(dev->pcpu_refcnt)): "re" (-1));
  }
  goto ldv_41052;
  default:
  __bad_percpu_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 8513: Dead code detected: [pao_ID_____1 == 1] (CFACreationUtils.addEdgeToCFA, INFO)

line 8513: Dead code detected: [!(pao_ID_____1 == 1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 8514: Dead code detected: __asm__ ("incb %%gs:%P0": "+m" (*(dev->pcpu_refcnt))); (CFACreationUtils.addEdgeToCFA, INFO)

line 8516: Dead code detected: [pao_ID_____1 == -1] (CFACreationUtils.addEdgeToCFA, INFO)

line 8516: Dead code detected: [!(pao_ID_____1 == -1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 8517: Dead code detected: __asm__ ("decb %%gs:%P0": "+m" (*(dev->pcpu_refcnt))); (CFACreationUtils.addEdgeToCFA, INFO)

line 8519: Dead code detected: __asm__ ("addb %1, %%gs:%P0": "+m" (*(dev->pcpu_refcnt)): "qi" (-1)); (CFACreationUtils.addEdgeToCFA, INFO)

line 8523: Dead code detected: [pao_ID_____1 == 1] (CFACreationUtils.addEdgeToCFA, INFO)

line 8523: Dead code detected: [!(pao_ID_____1 == 1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 8524: Dead code detected: __asm__ ("incw %%gs:%P0": "+m" (*(dev->pcpu_refcnt))); (CFACreationUtils.addEdgeToCFA, INFO)

line 8526: Dead code detected: [pao_ID_____1 == -1] (CFACreationUtils.addEdgeToCFA, INFO)

line 8526: Dead code detected: [!(pao_ID_____1 == -1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 8527: Dead code detected: __asm__ ("decw %%gs:%P0": "+m" (*(dev->pcpu_refcnt))); (CFACreationUtils.addEdgeToCFA, INFO)

line 8529: Dead code detected: __asm__ ("addw %1, %%gs:%P0": "+m" (*(dev->pcpu_refcnt)): "ri" (-1)); (CFACreationUtils.addEdgeToCFA, INFO)

line 8543: Dead code detected: [pao_ID_____1 == 1] (CFACreationUtils.addEdgeToCFA, INFO)

line 8543: Dead code detected: [!(pao_ID_____1 == 1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 8544: Dead code detected: __asm__ ("incq %%gs:%P0": "+m" (*(dev->pcpu_refcnt))); (CFACreationUtils.addEdgeToCFA, INFO)

line 8546: Dead code detected: [pao_ID_____1 == -1] (CFACreationUtils.addEdgeToCFA, INFO)

line 8546: Dead code detected: [!(pao_ID_____1 == -1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 8547: Dead code detected: __asm__ ("decq %%gs:%P0": "+m" (*(dev->pcpu_refcnt))); (CFACreationUtils.addEdgeToCFA, INFO)

line 8549: Dead code detected: __asm__ ("addq %1, %%gs:%P0": "+m" (*(dev->pcpu_refcnt)): "re" (-1)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (4UL) {
  case 1UL: ;
  if (pao_ID_____1 == 1) {
    __asm__ ("incb %%gs:%P0": "+m" (*(dev->pcpu_refcnt)));
  } else
  if (pao_ID_____1 == -1) {
    __asm__ ("decb %%gs:%P0": "+m" (*(dev->pcpu_refcnt)));
  } else {
    __asm__ ("addb %1, %%gs:%P0": "+m" (*(dev->pcpu_refcnt)): "qi" (-1));
  }
  goto ldv_41062;
  case 2UL: ;
  if (pao_ID_____1 == 1) {
    __asm__ ("incw %%gs:%P0": "+m" (*(dev->pcpu_refcnt)));
  } else
  if (pao_ID_____1 == -1) {
    __asm__ ("decw %%gs:%P0": "+m" (*(dev->pcpu_refcnt)));
  } else {
    __asm__ ("addw %1, %%gs:%P0": "+m" (*(dev->pcpu_refcnt)): "ri" (-1));
  }
  goto ldv_41062;
  case 4UL: ;
  if (pao_ID_____1 == 1) {
    __asm__ ("incl %%gs:%P0": "+m" (*(dev->pcpu_refcnt)));
  } else
  if (pao_ID_____1 == -1) {
    __asm__ ("decl %%gs:%P0": "+m" (*(dev->pcpu_refcnt)));
  } else {
    __asm__ ("addl %1, %%gs:%P0": "+m" (*(dev->pcpu_refcnt)): "ri" (-1));
  }
  goto ldv_41062;
  case 8UL: ;
  if (pao_ID_____1 == 1) {
    __asm__ ("incq %%gs:%P0": "+m" (*(dev->pcpu_refcnt)));
  } else
  if (pao_ID_____1 == -1) {
    __asm__ ("decq %%gs:%P0": "+m" (*(dev->pcpu_refcnt)));
  } else {
    __asm__ ("addq %1, %%gs:%P0": "+m" (*(dev->pcpu_refcnt)): "re" (-1));
  }
  goto ldv_41062;
  default:
  __bad_percpu_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 8558: Dead code detected: pao_ID_____2 = -1; (CFACreationUtils.addEdgeToCFA, INFO)

line 8561: Dead code detected: [pao_ID_____2 == 1] (CFACreationUtils.addEdgeToCFA, INFO)

line 8561: Dead code detected: [!(pao_ID_____2 == 1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 8562: Dead code detected: __asm__ ("incb %%gs:%P0": "+m" (*(dev->pcpu_refcnt))); (CFACreationUtils.addEdgeToCFA, INFO)

line 8564: Dead code detected: [pao_ID_____2 == -1] (CFACreationUtils.addEdgeToCFA, INFO)

line 8564: Dead code detected: [!(pao_ID_____2 == -1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 8565: Dead code detected: __asm__ ("decb %%gs:%P0": "+m" (*(dev->pcpu_refcnt))); (CFACreationUtils.addEdgeToCFA, INFO)

line 8567: Dead code detected: __asm__ ("addb %1, %%gs:%P0": "+m" (*(dev->pcpu_refcnt)): "qi" (-1)); (CFACreationUtils.addEdgeToCFA, INFO)

line 8571: Dead code detected: [pao_ID_____2 == 1] (CFACreationUtils.addEdgeToCFA, INFO)

line 8571: Dead code detected: [!(pao_ID_____2 == 1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 8572: Dead code detected: __asm__ ("incw %%gs:%P0": "+m" (*(dev->pcpu_refcnt))); (CFACreationUtils.addEdgeToCFA, INFO)

line 8574: Dead code detected: [pao_ID_____2 == -1] (CFACreationUtils.addEdgeToCFA, INFO)

line 8574: Dead code detected: [!(pao_ID_____2 == -1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 8575: Dead code detected: __asm__ ("decw %%gs:%P0": "+m" (*(dev->pcpu_refcnt))); (CFACreationUtils.addEdgeToCFA, INFO)

line 8577: Dead code detected: __asm__ ("addw %1, %%gs:%P0": "+m" (*(dev->pcpu_refcnt)): "ri" (-1)); (CFACreationUtils.addEdgeToCFA, INFO)

line 8580: Dead code detected:  (CFACreationUtils.addEdgeToCFA, INFO)

line 8581: Dead code detected: [!(pao_ID_____2 == 1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 8582: Dead code detected: __asm__ ("incl %%gs:%P0": "+m" (*(dev->pcpu_refcnt))); (CFACreationUtils.addEdgeToCFA, INFO)

line 8584: Dead code detected: [pao_ID_____2 == -1] (CFACreationUtils.addEdgeToCFA, INFO)

line 8584: Dead code detected: [!(pao_ID_____2 == -1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 8585: Dead code detected: __asm__ ("decl %%gs:%P0": "+m" (*(dev->pcpu_refcnt))); (CFACreationUtils.addEdgeToCFA, INFO)

line 8587: Dead code detected: __asm__ ("addl %1, %%gs:%P0": "+m" (*(dev->pcpu_refcnt)): "ri" (-1)); (CFACreationUtils.addEdgeToCFA, INFO)

line 8591: Dead code detected: [pao_ID_____2 == 1] (CFACreationUtils.addEdgeToCFA, INFO)

line 8591: Dead code detected: [!(pao_ID_____2 == 1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 8592: Dead code detected: __asm__ ("incq %%gs:%P0": "+m" (*(dev->pcpu_refcnt))); (CFACreationUtils.addEdgeToCFA, INFO)

line 8594: Dead code detected: [pao_ID_____2 == -1] (CFACreationUtils.addEdgeToCFA, INFO)

line 8594: Dead code detected: [!(pao_ID_____2 == -1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 8595: Dead code detected: __asm__ ("decq %%gs:%P0": "+m" (*(dev->pcpu_refcnt))); (CFACreationUtils.addEdgeToCFA, INFO)

line 8597: Dead code detected: __asm__ ("addq %1, %%gs:%P0": "+m" (*(dev->pcpu_refcnt)): "re" (-1)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (4UL) {
  case 1UL: ;
  if (pao_ID_____2 == 1) {
    __asm__ ("incb %%gs:%P0": "+m" (*(dev->pcpu_refcnt)));
  } else
  if (pao_ID_____2 == -1) {
    __asm__ ("decb %%gs:%P0": "+m" (*(dev->pcpu_refcnt)));
  } else {
    __asm__ ("addb %1, %%gs:%P0": "+m" (*(dev->pcpu_refcnt)): "qi" (-1));
  }
  goto ldv_41072;
  case 2UL: ;
  if (pao_ID_____2 == 1) {
    __asm__ ("incw %%gs:%P0": "+m" (*(dev->pcpu_refcnt)));
  } else
  if (pao_ID_____2 == -1) {
    __asm__ ("decw %%gs:%P0": "+m" (*(dev->pcpu_refcnt)));
  } else {
    __asm__ ("addw %1, %%gs:%P0": "+m" (*(dev->pcpu_refcnt)): "ri" (-1));
  }
  goto ldv_41072;
  case 4UL: ;
  if (pao_ID_____2 == 1) {
    __asm__ ("incl %%gs:%P0": "+m" (*(dev->pcpu_refcnt)));
  } else
  if (pao_ID_____2 == -1) {
    __asm__ ("decl %%gs:%P0": "+m" (*(dev->pcpu_refcnt)));
  } else {
    __asm__ ("addl %1, %%gs:%P0": "+m" (*(dev->pcpu_refcnt)): "ri" (-1));
  }
  goto ldv_41072;
  case 8UL: ;
  if (pao_ID_____2 == 1) {
    __asm__ ("incq %%gs:%P0": "+m" (*(dev->pcpu_refcnt)));
  } else
  if (pao_ID_____2 == -1) {
    __asm__ ("decq %%gs:%P0": "+m" (*(dev->pcpu_refcnt)));
  } else {
    __asm__ ("addq %1, %%gs:%P0": "+m" (*(dev->pcpu_refcnt)): "re" (-1));
  }
  goto ldv_41072;
  default:
  __bad_percpu_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (4UL) {
  case 1UL:
  pao_ID__ = -1;
  switch (4UL) {
  case 1UL: ;
  if (pao_ID__ == 1) {
    __asm__ ("incb %%gs:%P0": "+m" (*(dev->pcpu_refcnt)));
  } else
  if (pao_ID__ == -1) {
    __asm__ ("decb %%gs:%P0": "+m" (*(dev->pcpu_refcnt)));
  } else {
    __asm__ ("addb %1, %%gs:%P0": "+m" (*(dev->pcpu_refcnt)): "qi" (-1));
  }
  goto ldv_41041;
  case 2UL: ;
  if (pao_ID__ == 1) {
    __asm__ ("incw %%gs:%P0": "+m" (*(dev->pcpu_refcnt)));
  } else
  if (pao_ID__ == -1) {
    __asm__ ("decw %%gs:%P0": "+m" (*(dev->pcpu_refcnt)));
  } else {
    __asm__ ("addw %1, %%gs:%P0": "+m" (*(dev->pcpu_refcnt)): "ri" (-1));
  }
  goto ldv_41041;
  case 4UL: ;
  if (pao_ID__ == 1) {
    __asm__ ("incl %%gs:%P0": "+m" (*(dev->pcpu_refcnt)));
  } else
  if (pao_ID__ == -1) {
    __asm__ ("decl %%gs:%P0": "+m" (*(dev->pcpu_refcnt)));
  } else {
    __asm__ ("addl %1, %%gs:%P0": "+m" (*(dev->pcpu_refcnt)): "ri" (-1));
  }
  goto ldv_41041;
  case 8UL: ;
  if (pao_ID__ == 1) {
    __asm__ ("incq %%gs:%P0": "+m" (*(dev->pcpu_refcnt)));
  } else
  if (pao_ID__ == -1) {
    __asm__ ("decq %%gs:%P0": "+m" (*(dev->pcpu_refcnt)));
  } else {
    __asm__ ("addq %1, %%gs:%P0": "+m" (*(dev->pcpu_refcnt)): "re" (-1));
  }
  goto ldv_41041;
  default:
  __bad_percpu_size();
  }
  ldv_41041: ;
  goto ldv_41046;
  case 2UL:
  pao_ID_____0 = -1;
  switch (4UL) {
  case 1UL: ;
  if (pao_ID_____0 == 1) {
    __asm__ ("incb %%gs:%P0": "+m" (*(dev->pcpu_refcnt)));
  } else
  if (pao_ID_____0 == -1) {
    __asm__ ("decb %%gs:%P0": "+m" (*(dev->pcpu_refcnt)));
  } else {
    __asm__ ("addb %1, %%gs:%P0": "+m" (*(dev->pcpu_refcnt)): "qi" (-1));
  }
  goto ldv_41052;
  case 2UL: ;
  if (pao_ID_____0 == 1) {
    __asm__ ("incw %%gs:%P0": "+m" (*(dev->pcpu_refcnt)));
  } else
  if (pao_ID_____0 == -1) {
    __asm__ ("decw %%gs:%P0": "+m" (*(dev->pcpu_refcnt)));
  } else {
    __asm__ ("addw %1, %%gs:%P0": "+m" (*(dev->pcpu_refcnt)): "ri" (-1));
  }
  goto ldv_41052;
  case 4UL: ;
  if (pao_ID_____0 == 1) {
    __asm__ ("incl %%gs:%P0": "+m" (*(dev->pcpu_refcnt)));
  } else
  if (pao_ID_____0 == -1) {
    __asm__ ("decl %%gs:%P0": "+m" (*(dev->pcpu_refcnt)));
  } else {
    __asm__ ("addl %1, %%gs:%P0": "+m" (*(dev->pcpu_refcnt)): "ri" (-1));
  }
  goto ldv_41052;
  case 8UL: ;
  if (pao_ID_____0 == 1) {
    __asm__ ("incq %%gs:%P0": "+m" (*(dev->pcpu_refcnt)));
  } else
  if (pao_ID_____0 == -1) {
    __asm__ ("decq %%gs:%P0": "+m" (*(dev->pcpu_refcnt)));
  } else {
    __asm__ ("addq %1, %%gs:%P0": "+m" (*(dev->pcpu_refcnt)): "re" (-1));
  }
  goto ldv_41052;
  default:
  __bad_percpu_size();
  }
  ldv_41052: ;
  goto ldv_41046;
  case 4UL:
  pao_ID_____1 = -1;
  switch (4UL) {
  case 1UL: ;
  if (pao_ID_____1 == 1) {
    __asm__ ("incb %%gs:%P0": "+m" (*(dev->pcpu_refcnt)));
  } else
  if (pao_ID_____1 == -1) {
    __asm__ ("decb %%gs:%P0": "+m" (*(dev->pcpu_refcnt)));
  } else {
    __asm__ ("addb %1, %%gs:%P0": "+m" (*(dev->pcpu_refcnt)): "qi" (-1));
  }
  goto ldv_41062;
  case 2UL: ;
  if (pao_ID_____1 == 1) {
    __asm__ ("incw %%gs:%P0": "+m" (*(dev->pcpu_refcnt)));
  } else
  if (pao_ID_____1 == -1) {
    __asm__ ("decw %%gs:%P0": "+m" (*(dev->pcpu_refcnt)));
  } else {
    __asm__ ("addw %1, %%gs:%P0": "+m" (*(dev->pcpu_refcnt)): "ri" (-1));
  }
  goto ldv_41062;
  case 4UL: ;
  if (pao_ID_____1 == 1) {
    __asm__ ("incl %%gs:%P0": "+m" (*(dev->pcpu_refcnt)));
  } else
  if (pao_ID_____1 == -1) {
    __asm__ ("decl %%gs:%P0": "+m" (*(dev->pcpu_refcnt)));
  } else {
    __asm__ ("addl %1, %%gs:%P0": "+m" (*(dev->pcpu_refcnt)): "ri" (-1));
  }
  goto ldv_41062;
  case 8UL: ;
  if (pao_ID_____1 == 1) {
    __asm__ ("incq %%gs:%P0": "+m" (*(dev->pcpu_refcnt)));
  } else
  if (pao_ID_____1 == -1) {
    __asm__ ("decq %%gs:%P0": "+m" (*(dev->pcpu_refcnt)));
  } else {
    __asm__ ("addq %1, %%gs:%P0": "+m" (*(dev->pcpu_refcnt)): "re" (-1));
  }
  goto ldv_41062;
  default:
  __bad_percpu_size();
  }
  ldv_41062: ;
  goto ldv_41046;
  case 8UL:
  pao_ID_____2 = -1;
  switch (4UL) {
  case 1UL: ;
  if (pao_ID_____2 == 1) {
    __asm__ ("incb %%gs:%P0": "+m" (*(dev->pcpu_refcnt)));
  } else
  if (pao_ID_____2 == -1) {
    __asm__ ("decb %%gs:%P0": "+m" (*(dev->pcpu_refcnt)));
  } else {
    __asm__ ("addb %1, %%gs:%P0": "+m" (*(dev->pcpu_refcnt)): "qi" (-1));
  }
  goto ldv_41072;
  case 2UL: ;
  if (pao_ID_____2 == 1) {
    __asm__ ("incw %%gs:%P0": "+m" (*(dev->pcpu_refcnt)));
  } else
  if (pao_ID_____2 == -1) {
    __asm__ ("decw %%gs:%P0": "+m" (*(dev->pcpu_refcnt)));
  } else {
    __asm__ ("addw %1, %%gs:%P0": "+m" (*(dev->pcpu_refcnt)): "ri" (-1));
  }
  goto ldv_41072;
  case 4UL: ;
  if (pao_ID_____2 == 1) {
    __asm__ ("incl %%gs:%P0": "+m" (*(dev->pcpu_refcnt)));
  } else
  if (pao_ID_____2 == -1) {
    __asm__ ("decl %%gs:%P0": "+m" (*(dev->pcpu_refcnt)));
  } else {
    __asm__ ("addl %1, %%gs:%P0": "+m" (*(dev->pcpu_refcnt)): "ri" (-1));
  }
  goto ldv_41072;
  case 8UL: ;
  if (pao_ID_____2 == 1) {
    __asm__ ("incq %%gs:%P0": "+m" (*(dev->pcpu_refcnt)));
  } else
  if (pao_ID_____2 == -1) {
    __asm__ ("decq %%gs:%P0": "+m" (*(dev->pcpu_refcnt)));
  } else {
    __asm__ ("addq %1, %%gs:%P0": "+m" (*(dev->pcpu_refcnt)): "re" (-1));
  }
  goto ldv_41072;
  default:
  __bad_percpu_size();
  }
  ldv_41072: ;
  goto ldv_41046;
  default:
  __bad_size_call_parameter();
  goto ldv_41046;
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 11836: Dead code detected: tmp___2 = get_current(); (CFACreationUtils.addEdgeToCFA, INFO)

line 11841: Dead code detected: tmp___3 = get_current(); (CFACreationUtils.addEdgeToCFA, INFO)

line 11846: Dead code detected: tmp___4 = get_current(); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (8UL) {
    case 1UL:
    tmp___2 = get_current();
    __asm__ volatile ("xchgb %b0, %1\n": "+q" (__ret), "+m" (tmp___2->state): : "memory",
                         "cc");
    goto ldv_51910;
    case 2UL:
    tmp___3 = get_current();
    __asm__ volatile ("xchgw %w0, %1\n": "+r" (__ret), "+m" (tmp___3->state): : "memory",
                         "cc");
    goto ldv_51910;
    case 4UL:
    tmp___4 = get_current();
    __asm__ volatile ("xchgl %0, %1\n": "+r" (__ret), "+m" (tmp___4->state): : "memory",
                         "cc");
    goto ldv_51910;
    case 8UL:
    tmp___5 = get_current();
    __asm__ volatile ("xchgq %q0, %1\n": "+r" (__ret), "+m" (tmp___5->state): : "memory",
                         "cc");
    goto ldv_51910;
    default:
    __xchg_wrong_size();
    } (CFACreationUtils.addEdgeToCFA, INFO)

lines 12002-12017: Dead code detected: switch (4UL) (CFACreationUtils.addEdgeToCFA, INFO)

line 12004: Dead code detected: __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "m" (cpu_number)); (CFACreationUtils.addEdgeToCFA, INFO)

line 12007: Dead code detected: __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "m" (cpu_number)); (CFACreationUtils.addEdgeToCFA, INFO)

line 12009: Dead code detected:  (CFACreationUtils.addEdgeToCFA, INFO)

line 12013: Dead code detected: __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret__): "m" (cpu_number)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (4UL) {
    case 1UL:
    __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "m" (cpu_number));
    goto ldv_51945;
    case 2UL:
    __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "m" (cpu_number));
    goto ldv_51945;
    case 4UL:
    __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "m" (cpu_number));
    goto ldv_51945;
    case 8UL:
    __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret__): "m" (cpu_number));
    goto ldv_51945;
    default:
    __bad_percpu_size();
    } (CFACreationUtils.addEdgeToCFA, INFO)

lines 12022-12037: Dead code detected: switch (4UL) (CFACreationUtils.addEdgeToCFA, INFO)

line 12024: Dead code detected: __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret_____0): "m" (cpu_number)); (CFACreationUtils.addEdgeToCFA, INFO)

line 12027: Dead code detected: __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret_____0): "m" (cpu_number)); (CFACreationUtils.addEdgeToCFA, INFO)

line 12029: Dead code detected:  (CFACreationUtils.addEdgeToCFA, INFO)

line 12033: Dead code detected: __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret_____0): "m" (cpu_number)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (4UL) {
    case 1UL:
    __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret_____0): "m" (cpu_number));
    goto ldv_51955;
    case 2UL:
    __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret_____0): "m" (cpu_number));
    goto ldv_51955;
    case 4UL:
    __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret_____0): "m" (cpu_number));
    goto ldv_51955;
    case 8UL:
    __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret_____0): "m" (cpu_number));
    goto ldv_51955;
    default:
    __bad_percpu_size();
    } (CFACreationUtils.addEdgeToCFA, INFO)

line 12044: Dead code detected: __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret_____1): "m" (cpu_number)); (CFACreationUtils.addEdgeToCFA, INFO)

line 12047: Dead code detected: __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret_____1): "m" (cpu_number)); (CFACreationUtils.addEdgeToCFA, INFO)

line 12053: Dead code detected: __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret_____1): "m" (cpu_number)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (4UL) {
    case 1UL:
    __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret_____1): "m" (cpu_number));
    goto ldv_51964;
    case 2UL:
    __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret_____1): "m" (cpu_number));
    goto ldv_51964;
    case 4UL:
    __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret_____1): "m" (cpu_number));
    goto ldv_51964;
    case 8UL:
    __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret_____1): "m" (cpu_number));
    goto ldv_51964;
    default:
    __bad_percpu_size();
    } (CFACreationUtils.addEdgeToCFA, INFO)

lines 12062-12077: Dead code detected: switch (4UL) (CFACreationUtils.addEdgeToCFA, INFO)

line 12064: Dead code detected: __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret_____2): "m" (cpu_number)); (CFACreationUtils.addEdgeToCFA, INFO)

line 12067: Dead code detected: __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret_____2): "m" (cpu_number)); (CFACreationUtils.addEdgeToCFA, INFO)

line 12069: Dead code detected:  (CFACreationUtils.addEdgeToCFA, INFO)

line 12073: Dead code detected: __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret_____2): "m" (cpu_number)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (4UL) {
    case 1UL:
    __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret_____2): "m" (cpu_number));
    goto ldv_51973;
    case 2UL:
    __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret_____2): "m" (cpu_number));
    goto ldv_51973;
    case 4UL:
    __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret_____2): "m" (cpu_number));
    goto ldv_51973;
    case 8UL:
    __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret_____2): "m" (cpu_number));
    goto ldv_51973;
    default:
    __bad_percpu_size();
    } (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (4UL) {
    case 1UL: ;
    switch (4UL) {
    case 1UL:
    __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "m" (cpu_number));
    goto ldv_51945;
    case 2UL:
    __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "m" (cpu_number));
    goto ldv_51945;
    case 4UL:
    __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "m" (cpu_number));
    goto ldv_51945;
    case 8UL:
    __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret__): "m" (cpu_number));
    goto ldv_51945;
    default:
    __bad_percpu_size();
    }
    ldv_51945:
    pscr_ret__ = pfo_ret__;
    goto ldv_51951;
    case 2UL: ;
    switch (4UL) {
    case 1UL:
    __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret_____0): "m" (cpu_number));
    goto ldv_51955;
    case 2UL:
    __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret_____0): "m" (cpu_number));
    goto ldv_51955;
    case 4UL:
    __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret_____0): "m" (cpu_number));
    goto ldv_51955;
    case 8UL:
    __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret_____0): "m" (cpu_number));
    goto ldv_51955;
    default:
    __bad_percpu_size();
    }
    ldv_51955:
    pscr_ret__ = pfo_ret_____0;
    goto ldv_51951;
    case 4UL: ;
    switch (4UL) {
    case 1UL:
    __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret_____1): "m" (cpu_number));
    goto ldv_51964;
    case 2UL:
    __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret_____1): "m" (cpu_number));
    goto ldv_51964;
    case 4UL:
    __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret_____1): "m" (cpu_number));
    goto ldv_51964;
    case 8UL:
    __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret_____1): "m" (cpu_number));
    goto ldv_51964;
    default:
    __bad_percpu_size();
    }
    ldv_51964:
    pscr_ret__ = pfo_ret_____1;
    goto ldv_51951;
    case 8UL: ;
    switch (4UL) {
    case 1UL:
    __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret_____2): "m" (cpu_number));
    goto ldv_51973;
    case 2UL:
    __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret_____2): "m" (cpu_number));
    goto ldv_51973;
    case 4UL:
    __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret_____2): "m" (cpu_number));
    goto ldv_51973;
    case 8UL:
    __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret_____2): "m" (cpu_number));
    goto ldv_51973;
    default:
    __bad_percpu_size();
    }
    ldv_51973:
    pscr_ret__ = pfo_ret_____2;
    goto ldv_51951;
    default:
    __bad_size_call_parameter();
    goto ldv_51951;
    } (CFACreationUtils.addEdgeToCFA, INFO)

line 12466: Dead code detected: pao_ID__ = 1; (CFACreationUtils.addEdgeToCFA, INFO)

line 12469: Dead code detected: [pao_ID__ == 1] (CFACreationUtils.addEdgeToCFA, INFO)

line 12469: Dead code detected: [!(pao_ID__ == 1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 12470: Dead code detected: __asm__ ("incb %%gs:%P0": "+m" ((net->mib.xfrm_statistics)->mibs[20])); (CFACreationUtils.addEdgeToCFA, INFO)

line 12472: Dead code detected: [pao_ID__ == -1] (CFACreationUtils.addEdgeToCFA, INFO)

line 12472: Dead code detected: [!(pao_ID__ == -1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 12473: Dead code detected: __asm__ ("decb %%gs:%P0": "+m" ((net->mib.xfrm_statistics)->mibs[20])); (CFACreationUtils.addEdgeToCFA, INFO)

line 12475: Dead code detected: __asm__ ("addb %1, %%gs:%P0": "+m" ((net->mib.xfrm_statistics)->mibs[20]): "qi" (1UL)); (CFACreationUtils.addEdgeToCFA, INFO)

line 12479: Dead code detected: [pao_ID__ == 1] (CFACreationUtils.addEdgeToCFA, INFO)

line 12479: Dead code detected: [!(pao_ID__ == 1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 12480: Dead code detected: __asm__ ("incw %%gs:%P0": "+m" ((net->mib.xfrm_statistics)->mibs[20])); (CFACreationUtils.addEdgeToCFA, INFO)

line 12482: Dead code detected: [pao_ID__ == -1] (CFACreationUtils.addEdgeToCFA, INFO)

line 12482: Dead code detected: [!(pao_ID__ == -1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 12483: Dead code detected: __asm__ ("decw %%gs:%P0": "+m" ((net->mib.xfrm_statistics)->mibs[20])); (CFACreationUtils.addEdgeToCFA, INFO)

line 12485: Dead code detected: __asm__ ("addw %1, %%gs:%P0": "+m" ((net->mib.xfrm_statistics)->mibs[20]): "ri" (1UL)); (CFACreationUtils.addEdgeToCFA, INFO)

line 12489: Dead code detected: [pao_ID__ == 1] (CFACreationUtils.addEdgeToCFA, INFO)

line 12489: Dead code detected: [!(pao_ID__ == 1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 12490: Dead code detected: __asm__ ("incl %%gs:%P0": "+m" ((net->mib.xfrm_statistics)->mibs[20])); (CFACreationUtils.addEdgeToCFA, INFO)

line 12492: Dead code detected: [pao_ID__ == -1] (CFACreationUtils.addEdgeToCFA, INFO)

line 12492: Dead code detected: [!(pao_ID__ == -1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 12493: Dead code detected: __asm__ ("decl %%gs:%P0": "+m" ((net->mib.xfrm_statistics)->mibs[20])); (CFACreationUtils.addEdgeToCFA, INFO)

line 12495: Dead code detected: __asm__ ("addl %1, %%gs:%P0": "+m" ((net->mib.xfrm_statistics)->mibs[20]): "ri" (1UL)); (CFACreationUtils.addEdgeToCFA, INFO)

line 12498: Dead code detected:  (CFACreationUtils.addEdgeToCFA, INFO)

line 12499: Dead code detected: [!(pao_ID__ == 1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 12500: Dead code detected: __asm__ ("incq %%gs:%P0": "+m" ((net->mib.xfrm_statistics)->mibs[20])); (CFACreationUtils.addEdgeToCFA, INFO)

line 12502: Dead code detected: [pao_ID__ == -1] (CFACreationUtils.addEdgeToCFA, INFO)

line 12502: Dead code detected: [!(pao_ID__ == -1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 12503: Dead code detected: __asm__ ("decq %%gs:%P0": "+m" ((net->mib.xfrm_statistics)->mibs[20])); (CFACreationUtils.addEdgeToCFA, INFO)

line 12505: Dead code detected: __asm__ ("addq %1, %%gs:%P0": "+m" ((net->mib.xfrm_statistics)->mibs[20]): "re" (1UL)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (8UL) {
    case 1UL: ;
    if (pao_ID__ == 1) {
      __asm__ ("incb %%gs:%P0": "+m" ((net->mib.xfrm_statistics)->mibs[20]));
    } else
    if (pao_ID__ == -1) {
      __asm__ ("decb %%gs:%P0": "+m" ((net->mib.xfrm_statistics)->mibs[20]));
    } else {
      __asm__ ("addb %1, %%gs:%P0": "+m" ((net->mib.xfrm_statistics)->mibs[20]): "qi" (1UL));
    }
    goto ldv_52020;
    case 2UL: ;
    if (pao_ID__ == 1) {
      __asm__ ("incw %%gs:%P0": "+m" ((net->mib.xfrm_statistics)->mibs[20]));
    } else
    if (pao_ID__ == -1) {
      __asm__ ("decw %%gs:%P0": "+m" ((net->mib.xfrm_statistics)->mibs[20]));
    } else {
      __asm__ ("addw %1, %%gs:%P0": "+m" ((net->mib.xfrm_statistics)->mibs[20]): "ri" (1UL));
    }
    goto ldv_52020;
    case 4UL: ;
    if (pao_ID__ == 1) {
      __asm__ ("incl %%gs:%P0": "+m" ((net->mib.xfrm_statistics)->mibs[20]));
    } else
    if (pao_ID__ == -1) {
      __asm__ ("decl %%gs:%P0": "+m" ((net->mib.xfrm_statistics)->mibs[20]));
    } else {
      __asm__ ("addl %1, %%gs:%P0": "+m" ((net->mib.xfrm_statistics)->mibs[20]): "ri" (1UL));
    }
    goto ldv_52020;
    case 8UL: ;
    if (pao_ID__ == 1) {
      __asm__ ("incq %%gs:%P0": "+m" ((net->mib.xfrm_statistics)->mibs[20]));
    } else
    if (pao_ID__ == -1) {
      __asm__ ("decq %%gs:%P0": "+m" ((net->mib.xfrm_statistics)->mibs[20]));
    } else {
      __asm__ ("addq %1, %%gs:%P0": "+m" ((net->mib.xfrm_statistics)->mibs[20]): "re" (1UL));
    }
    goto ldv_52020;
    default:
    __bad_percpu_size();
    } (CFACreationUtils.addEdgeToCFA, INFO)

line 12514: Dead code detected: pao_ID_____0 = 1; (CFACreationUtils.addEdgeToCFA, INFO)

line 12517: Dead code detected: [pao_ID_____0 == 1] (CFACreationUtils.addEdgeToCFA, INFO)

line 12517: Dead code detected: [!(pao_ID_____0 == 1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 12518: Dead code detected: __asm__ ("incb %%gs:%P0": "+m" ((net->mib.xfrm_statistics)->mibs[20])); (CFACreationUtils.addEdgeToCFA, INFO)

line 12520: Dead code detected: [pao_ID_____0 == -1] (CFACreationUtils.addEdgeToCFA, INFO)

line 12520: Dead code detected: [!(pao_ID_____0 == -1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 12521: Dead code detected: __asm__ ("decb %%gs:%P0": "+m" ((net->mib.xfrm_statistics)->mibs[20])); (CFACreationUtils.addEdgeToCFA, INFO)

line 12523: Dead code detected: __asm__ ("addb %1, %%gs:%P0": "+m" ((net->mib.xfrm_statistics)->mibs[20]): "qi" (1UL)); (CFACreationUtils.addEdgeToCFA, INFO)

line 12527: Dead code detected: [pao_ID_____0 == 1] (CFACreationUtils.addEdgeToCFA, INFO)

line 12527: Dead code detected: [!(pao_ID_____0 == 1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 12528: Dead code detected: __asm__ ("incw %%gs:%P0": "+m" ((net->mib.xfrm_statistics)->mibs[20])); (CFACreationUtils.addEdgeToCFA, INFO)

line 12530: Dead code detected: [pao_ID_____0 == -1] (CFACreationUtils.addEdgeToCFA, INFO)

line 12530: Dead code detected: [!(pao_ID_____0 == -1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 12531: Dead code detected: __asm__ ("decw %%gs:%P0": "+m" ((net->mib.xfrm_statistics)->mibs[20])); (CFACreationUtils.addEdgeToCFA, INFO)

line 12533: Dead code detected: __asm__ ("addw %1, %%gs:%P0": "+m" ((net->mib.xfrm_statistics)->mibs[20]): "ri" (1UL)); (CFACreationUtils.addEdgeToCFA, INFO)

line 12537: Dead code detected: [pao_ID_____0 == 1] (CFACreationUtils.addEdgeToCFA, INFO)

line 12537: Dead code detected: [!(pao_ID_____0 == 1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 12538: Dead code detected: __asm__ ("incl %%gs:%P0": "+m" ((net->mib.xfrm_statistics)->mibs[20])); (CFACreationUtils.addEdgeToCFA, INFO)

line 12540: Dead code detected: [pao_ID_____0 == -1] (CFACreationUtils.addEdgeToCFA, INFO)

line 12540: Dead code detected: [!(pao_ID_____0 == -1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 12541: Dead code detected: __asm__ ("decl %%gs:%P0": "+m" ((net->mib.xfrm_statistics)->mibs[20])); (CFACreationUtils.addEdgeToCFA, INFO)

line 12543: Dead code detected: __asm__ ("addl %1, %%gs:%P0": "+m" ((net->mib.xfrm_statistics)->mibs[20]): "ri" (1UL)); (CFACreationUtils.addEdgeToCFA, INFO)

line 12546: Dead code detected:  (CFACreationUtils.addEdgeToCFA, INFO)

line 12547: Dead code detected: [!(pao_ID_____0 == 1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 12548: Dead code detected: __asm__ ("incq %%gs:%P0": "+m" ((net->mib.xfrm_statistics)->mibs[20])); (CFACreationUtils.addEdgeToCFA, INFO)

line 12550: Dead code detected: [pao_ID_____0 == -1] (CFACreationUtils.addEdgeToCFA, INFO)

line 12550: Dead code detected: [!(pao_ID_____0 == -1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 12551: Dead code detected: __asm__ ("decq %%gs:%P0": "+m" ((net->mib.xfrm_statistics)->mibs[20])); (CFACreationUtils.addEdgeToCFA, INFO)

line 12553: Dead code detected: __asm__ ("addq %1, %%gs:%P0": "+m" ((net->mib.xfrm_statistics)->mibs[20]): "re" (1UL)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (8UL) {
    case 1UL: ;
    if (pao_ID_____0 == 1) {
      __asm__ ("incb %%gs:%P0": "+m" ((net->mib.xfrm_statistics)->mibs[20]));
    } else
    if (pao_ID_____0 == -1) {
      __asm__ ("decb %%gs:%P0": "+m" ((net->mib.xfrm_statistics)->mibs[20]));
    } else {
      __asm__ ("addb %1, %%gs:%P0": "+m" ((net->mib.xfrm_statistics)->mibs[20]): "qi" (1UL));
    }
    goto ldv_52031;
    case 2UL: ;
    if (pao_ID_____0 == 1) {
      __asm__ ("incw %%gs:%P0": "+m" ((net->mib.xfrm_statistics)->mibs[20]));
    } else
    if (pao_ID_____0 == -1) {
      __asm__ ("decw %%gs:%P0": "+m" ((net->mib.xfrm_statistics)->mibs[20]));
    } else {
      __asm__ ("addw %1, %%gs:%P0": "+m" ((net->mib.xfrm_statistics)->mibs[20]): "ri" (1UL));
    }
    goto ldv_52031;
    case 4UL: ;
    if (pao_ID_____0 == 1) {
      __asm__ ("incl %%gs:%P0": "+m" ((net->mib.xfrm_statistics)->mibs[20]));
    } else
    if (pao_ID_____0 == -1) {
      __asm__ ("decl %%gs:%P0": "+m" ((net->mib.xfrm_statistics)->mibs[20]));
    } else {
      __asm__ ("addl %1, %%gs:%P0": "+m" ((net->mib.xfrm_statistics)->mibs[20]): "ri" (1UL));
    }
    goto ldv_52031;
    case 8UL: ;
    if (pao_ID_____0 == 1) {
      __asm__ ("incq %%gs:%P0": "+m" ((net->mib.xfrm_statistics)->mibs[20]));
    } else
    if (pao_ID_____0 == -1) {
      __asm__ ("decq %%gs:%P0": "+m" ((net->mib.xfrm_statistics)->mibs[20]));
    } else {
      __asm__ ("addq %1, %%gs:%P0": "+m" ((net->mib.xfrm_statistics)->mibs[20]): "re" (1UL));
    }
    goto ldv_52031;
    default:
    __bad_percpu_size();
    } (CFACreationUtils.addEdgeToCFA, INFO)

line 12562: Dead code detected: pao_ID_____1 = 1; (CFACreationUtils.addEdgeToCFA, INFO)

line 12565: Dead code detected: [pao_ID_____1 == 1] (CFACreationUtils.addEdgeToCFA, INFO)

line 12565: Dead code detected: [!(pao_ID_____1 == 1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 12566: Dead code detected: __asm__ ("incb %%gs:%P0": "+m" ((net->mib.xfrm_statistics)->mibs[20])); (CFACreationUtils.addEdgeToCFA, INFO)

line 12568: Dead code detected: [pao_ID_____1 == -1] (CFACreationUtils.addEdgeToCFA, INFO)

line 12568: Dead code detected: [!(pao_ID_____1 == -1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 12569: Dead code detected: __asm__ ("decb %%gs:%P0": "+m" ((net->mib.xfrm_statistics)->mibs[20])); (CFACreationUtils.addEdgeToCFA, INFO)

line 12571: Dead code detected: __asm__ ("addb %1, %%gs:%P0": "+m" ((net->mib.xfrm_statistics)->mibs[20]): "qi" (1UL)); (CFACreationUtils.addEdgeToCFA, INFO)

line 12575: Dead code detected: [pao_ID_____1 == 1] (CFACreationUtils.addEdgeToCFA, INFO)

line 12575: Dead code detected: [!(pao_ID_____1 == 1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 12576: Dead code detected: __asm__ ("incw %%gs:%P0": "+m" ((net->mib.xfrm_statistics)->mibs[20])); (CFACreationUtils.addEdgeToCFA, INFO)

line 12578: Dead code detected: [pao_ID_____1 == -1] (CFACreationUtils.addEdgeToCFA, INFO)

line 12578: Dead code detected: [!(pao_ID_____1 == -1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 12579: Dead code detected: __asm__ ("decw %%gs:%P0": "+m" ((net->mib.xfrm_statistics)->mibs[20])); (CFACreationUtils.addEdgeToCFA, INFO)

line 12581: Dead code detected: __asm__ ("addw %1, %%gs:%P0": "+m" ((net->mib.xfrm_statistics)->mibs[20]): "ri" (1UL)); (CFACreationUtils.addEdgeToCFA, INFO)

line 12585: Dead code detected: [pao_ID_____1 == 1] (CFACreationUtils.addEdgeToCFA, INFO)

line 12585: Dead code detected: [!(pao_ID_____1 == 1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 12586: Dead code detected: __asm__ ("incl %%gs:%P0": "+m" ((net->mib.xfrm_statistics)->mibs[20])); (CFACreationUtils.addEdgeToCFA, INFO)

line 12588: Dead code detected: [pao_ID_____1 == -1] (CFACreationUtils.addEdgeToCFA, INFO)

line 12588: Dead code detected: [!(pao_ID_____1 == -1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 12589: Dead code detected: __asm__ ("decl %%gs:%P0": "+m" ((net->mib.xfrm_statistics)->mibs[20])); (CFACreationUtils.addEdgeToCFA, INFO)

line 12591: Dead code detected: __asm__ ("addl %1, %%gs:%P0": "+m" ((net->mib.xfrm_statistics)->mibs[20]): "ri" (1UL)); (CFACreationUtils.addEdgeToCFA, INFO)

line 12594: Dead code detected:  (CFACreationUtils.addEdgeToCFA, INFO)

line 12595: Dead code detected: [!(pao_ID_____1 == 1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 12596: Dead code detected: __asm__ ("incq %%gs:%P0": "+m" ((net->mib.xfrm_statistics)->mibs[20])); (CFACreationUtils.addEdgeToCFA, INFO)

line 12598: Dead code detected: [pao_ID_____1 == -1] (CFACreationUtils.addEdgeToCFA, INFO)

line 12598: Dead code detected: [!(pao_ID_____1 == -1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 12599: Dead code detected: __asm__ ("decq %%gs:%P0": "+m" ((net->mib.xfrm_statistics)->mibs[20])); (CFACreationUtils.addEdgeToCFA, INFO)

line 12601: Dead code detected: __asm__ ("addq %1, %%gs:%P0": "+m" ((net->mib.xfrm_statistics)->mibs[20]): "re" (1UL)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (8UL) {
    case 1UL: ;
    if (pao_ID_____1 == 1) {
      __asm__ ("incb %%gs:%P0": "+m" ((net->mib.xfrm_statistics)->mibs[20]));
    } else
    if (pao_ID_____1 == -1) {
      __asm__ ("decb %%gs:%P0": "+m" ((net->mib.xfrm_statistics)->mibs[20]));
    } else {
      __asm__ ("addb %1, %%gs:%P0": "+m" ((net->mib.xfrm_statistics)->mibs[20]): "qi" (1UL));
    }
    goto ldv_52041;
    case 2UL: ;
    if (pao_ID_____1 == 1) {
      __asm__ ("incw %%gs:%P0": "+m" ((net->mib.xfrm_statistics)->mibs[20]));
    } else
    if (pao_ID_____1 == -1) {
      __asm__ ("decw %%gs:%P0": "+m" ((net->mib.xfrm_statistics)->mibs[20]));
    } else {
      __asm__ ("addw %1, %%gs:%P0": "+m" ((net->mib.xfrm_statistics)->mibs[20]): "ri" (1UL));
    }
    goto ldv_52041;
    case 4UL: ;
    if (pao_ID_____1 == 1) {
      __asm__ ("incl %%gs:%P0": "+m" ((net->mib.xfrm_statistics)->mibs[20]));
    } else
    if (pao_ID_____1 == -1) {
      __asm__ ("decl %%gs:%P0": "+m" ((net->mib.xfrm_statistics)->mibs[20]));
    } else {
      __asm__ ("addl %1, %%gs:%P0": "+m" ((net->mib.xfrm_statistics)->mibs[20]): "ri" (1UL));
    }
    goto ldv_52041;
    case 8UL: ;
    if (pao_ID_____1 == 1) {
      __asm__ ("incq %%gs:%P0": "+m" ((net->mib.xfrm_statistics)->mibs[20]));
    } else
    if (pao_ID_____1 == -1) {
      __asm__ ("decq %%gs:%P0": "+m" ((net->mib.xfrm_statistics)->mibs[20]));
    } else {
      __asm__ ("addq %1, %%gs:%P0": "+m" ((net->mib.xfrm_statistics)->mibs[20]): "re" (1UL));
    }
    goto ldv_52041;
    default:
    __bad_percpu_size();
    } (CFACreationUtils.addEdgeToCFA, INFO)

line 12613: Dead code detected: [pao_ID_____2 == 1] (CFACreationUtils.addEdgeToCFA, INFO)

line 12613: Dead code detected: [!(pao_ID_____2 == 1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 12614: Dead code detected: __asm__ ("incb %%gs:%P0": "+m" ((net->mib.xfrm_statistics)->mibs[20])); (CFACreationUtils.addEdgeToCFA, INFO)

line 12616: Dead code detected: [pao_ID_____2 == -1] (CFACreationUtils.addEdgeToCFA, INFO)

line 12616: Dead code detected: [!(pao_ID_____2 == -1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 12617: Dead code detected: __asm__ ("decb %%gs:%P0": "+m" ((net->mib.xfrm_statistics)->mibs[20])); (CFACreationUtils.addEdgeToCFA, INFO)

line 12619: Dead code detected: __asm__ ("addb %1, %%gs:%P0": "+m" ((net->mib.xfrm_statistics)->mibs[20]): "qi" (1UL)); (CFACreationUtils.addEdgeToCFA, INFO)

line 12623: Dead code detected: [pao_ID_____2 == 1] (CFACreationUtils.addEdgeToCFA, INFO)

line 12623: Dead code detected: [!(pao_ID_____2 == 1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 12624: Dead code detected: __asm__ ("incw %%gs:%P0": "+m" ((net->mib.xfrm_statistics)->mibs[20])); (CFACreationUtils.addEdgeToCFA, INFO)

line 12626: Dead code detected: [pao_ID_____2 == -1] (CFACreationUtils.addEdgeToCFA, INFO)

line 12626: Dead code detected: [!(pao_ID_____2 == -1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 12627: Dead code detected: __asm__ ("decw %%gs:%P0": "+m" ((net->mib.xfrm_statistics)->mibs[20])); (CFACreationUtils.addEdgeToCFA, INFO)

line 12629: Dead code detected: __asm__ ("addw %1, %%gs:%P0": "+m" ((net->mib.xfrm_statistics)->mibs[20]): "ri" (1UL)); (CFACreationUtils.addEdgeToCFA, INFO)

line 12633: Dead code detected: [pao_ID_____2 == 1] (CFACreationUtils.addEdgeToCFA, INFO)

line 12633: Dead code detected: [!(pao_ID_____2 == 1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 12634: Dead code detected: __asm__ ("incl %%gs:%P0": "+m" ((net->mib.xfrm_statistics)->mibs[20])); (CFACreationUtils.addEdgeToCFA, INFO)

line 12636: Dead code detected: [pao_ID_____2 == -1] (CFACreationUtils.addEdgeToCFA, INFO)

line 12636: Dead code detected: [!(pao_ID_____2 == -1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 12637: Dead code detected: __asm__ ("decl %%gs:%P0": "+m" ((net->mib.xfrm_statistics)->mibs[20])); (CFACreationUtils.addEdgeToCFA, INFO)

line 12639: Dead code detected: __asm__ ("addl %1, %%gs:%P0": "+m" ((net->mib.xfrm_statistics)->mibs[20]): "ri" (1UL)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (8UL) {
    case 1UL: ;
    if (pao_ID_____2 == 1) {
      __asm__ ("incb %%gs:%P0": "+m" ((net->mib.xfrm_statistics)->mibs[20]));
    } else
    if (pao_ID_____2 == -1) {
      __asm__ ("decb %%gs:%P0": "+m" ((net->mib.xfrm_statistics)->mibs[20]));
    } else {
      __asm__ ("addb %1, %%gs:%P0": "+m" ((net->mib.xfrm_statistics)->mibs[20]): "qi" (1UL));
    }
    goto ldv_52051;
    case 2UL: ;
    if (pao_ID_____2 == 1) {
      __asm__ ("incw %%gs:%P0": "+m" ((net->mib.xfrm_statistics)->mibs[20]));
    } else
    if (pao_ID_____2 == -1) {
      __asm__ ("decw %%gs:%P0": "+m" ((net->mib.xfrm_statistics)->mibs[20]));
    } else {
      __asm__ ("addw %1, %%gs:%P0": "+m" ((net->mib.xfrm_statistics)->mibs[20]): "ri" (1UL));
    }
    goto ldv_52051;
    case 4UL: ;
    if (pao_ID_____2 == 1) {
      __asm__ ("incl %%gs:%P0": "+m" ((net->mib.xfrm_statistics)->mibs[20]));
    } else
    if (pao_ID_____2 == -1) {
      __asm__ ("decl %%gs:%P0": "+m" ((net->mib.xfrm_statistics)->mibs[20]));
    } else {
      __asm__ ("addl %1, %%gs:%P0": "+m" ((net->mib.xfrm_statistics)->mibs[20]): "ri" (1UL));
    }
    goto ldv_52051;
    case 8UL: ;
    if (pao_ID_____2 == 1) {
      __asm__ ("incq %%gs:%P0": "+m" ((net->mib.xfrm_statistics)->mibs[20]));
    } else
    if (pao_ID_____2 == -1) {
      __asm__ ("decq %%gs:%P0": "+m" ((net->mib.xfrm_statistics)->mibs[20]));
    } else {
      __asm__ ("addq %1, %%gs:%P0": "+m" ((net->mib.xfrm_statistics)->mibs[20]): "re" (1UL));
    }
    goto ldv_52051;
    default:
    __bad_percpu_size();
    } (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (8UL) {
    case 1UL:
    pao_ID__ = 1;
    switch (8UL) {
    case 1UL: ;
    if (pao_ID__ == 1) {
      __asm__ ("incb %%gs:%P0": "+m" ((net->mib.xfrm_statistics)->mibs[20]));
    } else
    if (pao_ID__ == -1) {
      __asm__ ("decb %%gs:%P0": "+m" ((net->mib.xfrm_statistics)->mibs[20]));
    } else {
      __asm__ ("addb %1, %%gs:%P0": "+m" ((net->mib.xfrm_statistics)->mibs[20]): "qi" (1UL));
    }
    goto ldv_52020;
    case 2UL: ;
    if (pao_ID__ == 1) {
      __asm__ ("incw %%gs:%P0": "+m" ((net->mib.xfrm_statistics)->mibs[20]));
    } else
    if (pao_ID__ == -1) {
      __asm__ ("decw %%gs:%P0": "+m" ((net->mib.xfrm_statistics)->mibs[20]));
    } else {
      __asm__ ("addw %1, %%gs:%P0": "+m" ((net->mib.xfrm_statistics)->mibs[20]): "ri" (1UL));
    }
    goto ldv_52020;
    case 4UL: ;
    if (pao_ID__ == 1) {
      __asm__ ("incl %%gs:%P0": "+m" ((net->mib.xfrm_statistics)->mibs[20]));
    } else
    if (pao_ID__ == -1) {
      __asm__ ("decl %%gs:%P0": "+m" ((net->mib.xfrm_statistics)->mibs[20]));
    } else {
      __asm__ ("addl %1, %%gs:%P0": "+m" ((net->mib.xfrm_statistics)->mibs[20]): "ri" (1UL));
    }
    goto ldv_52020;
    case 8UL: ;
    if (pao_ID__ == 1) {
      __asm__ ("incq %%gs:%P0": "+m" ((net->mib.xfrm_statistics)->mibs[20]));
    } else
    if (pao_ID__ == -1) {
      __asm__ ("decq %%gs:%P0": "+m" ((net->mib.xfrm_statistics)->mibs[20]));
    } else {
      __asm__ ("addq %1, %%gs:%P0": "+m" ((net->mib.xfrm_statistics)->mibs[20]): "re" (1UL));
    }
    goto ldv_52020;
    default:
    __bad_percpu_size();
    }
    ldv_52020: ;
    goto ldv_52025;
    case 2UL:
    pao_ID_____0 = 1;
    switch (8UL) {
    case 1UL: ;
    if (pao_ID_____0 == 1) {
      __asm__ ("incb %%gs:%P0": "+m" ((net->mib.xfrm_statistics)->mibs[20]));
    } else
    if (pao_ID_____0 == -1) {
      __asm__ ("decb %%gs:%P0": "+m" ((net->mib.xfrm_statistics)->mibs[20]));
    } else {
      __asm__ ("addb %1, %%gs:%P0": "+m" ((net->mib.xfrm_statistics)->mibs[20]): "qi" (1UL));
    }
    goto ldv_52031;
    case 2UL: ;
    if (pao_ID_____0 == 1) {
      __asm__ ("incw %%gs:%P0": "+m" ((net->mib.xfrm_statistics)->mibs[20]));
    } else
    if (pao_ID_____0 == -1) {
      __asm__ ("decw %%gs:%P0": "+m" ((net->mib.xfrm_statistics)->mibs[20]));
    } else {
      __asm__ ("addw %1, %%gs:%P0": "+m" ((net->mib.xfrm_statistics)->mibs[20]): "ri" (1UL));
    }
    goto ldv_52031;
    case 4UL: ;
    if (pao_ID_____0 == 1) {
      __asm__ ("incl %%gs:%P0": "+m" ((net->mib.xfrm_statistics)->mibs[20]));
    } else
    if (pao_ID_____0 == -1) {
      __asm__ ("decl %%gs:%P0": "+m" ((net->mib.xfrm_statistics)->mibs[20]));
    } else {
      __asm__ ("addl %1, %%gs:%P0": "+m" ((net->mib.xfrm_statistics)->mibs[20]): "ri" (1UL));
    }
    goto ldv_52031;
    case 8UL: ;
    if (pao_ID_____0 == 1) {
      __asm__ ("incq %%gs:%P0": "+m" ((net->mib.xfrm_statistics)->mibs[20]));
    } else
    if (pao_ID_____0 == -1) {
      __asm__ ("decq %%gs:%P0": "+m" ((net->mib.xfrm_statistics)->mibs[20]));
    } else {
      __asm__ ("addq %1, %%gs:%P0": "+m" ((net->mib.xfrm_statistics)->mibs[20]): "re" (1UL));
    }
    goto ldv_52031;
    default:
    __bad_percpu_size();
    }
    ldv_52031: ;
    goto ldv_52025;
    case 4UL:
    pao_ID_____1 = 1;
    switch (8UL) {
    case 1UL: ;
    if (pao_ID_____1 == 1) {
      __asm__ ("incb %%gs:%P0": "+m" ((net->mib.xfrm_statistics)->mibs[20]));
    } else
    if (pao_ID_____1 == -1) {
      __asm__ ("decb %%gs:%P0": "+m" ((net->mib.xfrm_statistics)->mibs[20]));
    } else {
      __asm__ ("addb %1, %%gs:%P0": "+m" ((net->mib.xfrm_statistics)->mibs[20]): "qi" (1UL));
    }
    goto ldv_52041;
    case 2UL: ;
    if (pao_ID_____1 == 1) {
      __asm__ ("incw %%gs:%P0": "+m" ((net->mib.xfrm_statistics)->mibs[20]));
    } else
    if (pao_ID_____1 == -1) {
      __asm__ ("decw %%gs:%P0": "+m" ((net->mib.xfrm_statistics)->mibs[20]));
    } else {
      __asm__ ("addw %1, %%gs:%P0": "+m" ((net->mib.xfrm_statistics)->mibs[20]): "ri" (1UL));
    }
    goto ldv_52041;
    case 4UL: ;
    if (pao_ID_____1 == 1) {
      __asm__ ("incl %%gs:%P0": "+m" ((net->mib.xfrm_statistics)->mibs[20]));
    } else
    if (pao_ID_____1 == -1) {
      __asm__ ("decl %%gs:%P0": "+m" ((net->mib.xfrm_statistics)->mibs[20]));
    } else {
      __asm__ ("addl %1, %%gs:%P0": "+m" ((net->mib.xfrm_statistics)->mibs[20]): "ri" (1UL));
    }
    goto ldv_52041;
    case 8UL: ;
    if (pao_ID_____1 == 1) {
      __asm__ ("incq %%gs:%P0": "+m" ((net->mib.xfrm_statistics)->mibs[20]));
    } else
    if (pao_ID_____1 == -1) {
      __asm__ ("decq %%gs:%P0": "+m" ((net->mib.xfrm_statistics)->mibs[20]));
    } else {
      __asm__ ("addq %1, %%gs:%P0": "+m" ((net->mib.xfrm_statistics)->mibs[20]): "re" (1UL));
    }
    goto ldv_52041;
    default:
    __bad_percpu_size();
    }
    ldv_52041: ;
    goto ldv_52025;
    case 8UL:
    pao_ID_____2 = 1;
    switch (8UL) {
    case 1UL: ;
    if (pao_ID_____2 == 1) {
      __asm__ ("incb %%gs:%P0": "+m" ((net->mib.xfrm_statistics)->mibs[20]));
    } else
    if (pao_ID_____2 == -1) {
      __asm__ ("decb %%gs:%P0": "+m" ((net->mib.xfrm_statistics)->mibs[20]));
    } else {
      __asm__ ("addb %1, %%gs:%P0": "+m" ((net->mib.xfrm_statistics)->mibs[20]): "qi" (1UL));
    }
    goto ldv_52051;
    case 2UL: ;
    if (pao_ID_____2 == 1) {
      __asm__ ("incw %%gs:%P0": "+m" ((net->mib.xfrm_statistics)->mibs[20]));
    } else
    if (pao_ID_____2 == -1) {
      __asm__ ("decw %%gs:%P0": "+m" ((net->mib.xfrm_statistics)->mibs[20]));
    } else {
      __asm__ ("addw %1, %%gs:%P0": "+m" ((net->mib.xfrm_statistics)->mibs[20]): "ri" (1UL));
    }
    goto ldv_52051;
    case 4UL: ;
    if (pao_ID_____2 == 1) {
      __asm__ ("incl %%gs:%P0": "+m" ((net->mib.xfrm_statistics)->mibs[20]));
    } else
    if (pao_ID_____2 == -1) {
      __asm__ ("decl %%gs:%P0": "+m" ((net->mib.xfrm_statistics)->mibs[20]));
    } else {
      __asm__ ("addl %1, %%gs:%P0": "+m" ((net->mib.xfrm_statistics)->mibs[20]): "ri" (1UL));
    }
    goto ldv_52051;
    case 8UL: ;
    if (pao_ID_____2 == 1) {
      __asm__ ("incq %%gs:%P0": "+m" ((net->mib.xfrm_statistics)->mibs[20]));
    } else
    if (pao_ID_____2 == -1) {
      __asm__ ("decq %%gs:%P0": "+m" ((net->mib.xfrm_statistics)->mibs[20]));
    } else {
      __asm__ ("addq %1, %%gs:%P0": "+m" ((net->mib.xfrm_statistics)->mibs[20]): "re" (1UL));
    }
    goto ldv_52051;
    default:
    __bad_percpu_size();
    }
    ldv_52051: ;
    goto ldv_52025;
    default:
    __bad_size_call_parameter();
    goto ldv_52025;
    } (CFACreationUtils.addEdgeToCFA, INFO)

line 12671: Dead code detected: pao_ID_____3 = 1; (CFACreationUtils.addEdgeToCFA, INFO)

line 12674: Dead code detected: [pao_ID_____3 == 1] (CFACreationUtils.addEdgeToCFA, INFO)

line 12674: Dead code detected: [!(pao_ID_____3 == 1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 12675: Dead code detected: __asm__ ("incb %%gs:%P0": "+m" ((net->mib.xfrm_statistics)->mibs[19])); (CFACreationUtils.addEdgeToCFA, INFO)

line 12677: Dead code detected: [pao_ID_____3 == -1] (CFACreationUtils.addEdgeToCFA, INFO)

line 12677: Dead code detected: [!(pao_ID_____3 == -1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 12678: Dead code detected: __asm__ ("decb %%gs:%P0": "+m" ((net->mib.xfrm_statistics)->mibs[19])); (CFACreationUtils.addEdgeToCFA, INFO)

line 12680: Dead code detected: __asm__ ("addb %1, %%gs:%P0": "+m" ((net->mib.xfrm_statistics)->mibs[19]): "qi" (1UL)); (CFACreationUtils.addEdgeToCFA, INFO)

line 12684: Dead code detected: [pao_ID_____3 == 1] (CFACreationUtils.addEdgeToCFA, INFO)

line 12684: Dead code detected: [!(pao_ID_____3 == 1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 12685: Dead code detected: __asm__ ("incw %%gs:%P0": "+m" ((net->mib.xfrm_statistics)->mibs[19])); (CFACreationUtils.addEdgeToCFA, INFO)

line 12687: Dead code detected: [pao_ID_____3 == -1] (CFACreationUtils.addEdgeToCFA, INFO)

line 12687: Dead code detected: [!(pao_ID_____3 == -1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 12688: Dead code detected: __asm__ ("decw %%gs:%P0": "+m" ((net->mib.xfrm_statistics)->mibs[19])); (CFACreationUtils.addEdgeToCFA, INFO)

line 12690: Dead code detected: __asm__ ("addw %1, %%gs:%P0": "+m" ((net->mib.xfrm_statistics)->mibs[19]): "ri" (1UL)); (CFACreationUtils.addEdgeToCFA, INFO)

line 12694: Dead code detected: [pao_ID_____3 == 1] (CFACreationUtils.addEdgeToCFA, INFO)

line 12694: Dead code detected: [!(pao_ID_____3 == 1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 12695: Dead code detected: __asm__ ("incl %%gs:%P0": "+m" ((net->mib.xfrm_statistics)->mibs[19])); (CFACreationUtils.addEdgeToCFA, INFO)

line 12697: Dead code detected: [pao_ID_____3 == -1] (CFACreationUtils.addEdgeToCFA, INFO)

line 12697: Dead code detected: [!(pao_ID_____3 == -1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 12698: Dead code detected: __asm__ ("decl %%gs:%P0": "+m" ((net->mib.xfrm_statistics)->mibs[19])); (CFACreationUtils.addEdgeToCFA, INFO)

line 12700: Dead code detected: __asm__ ("addl %1, %%gs:%P0": "+m" ((net->mib.xfrm_statistics)->mibs[19]): "ri" (1UL)); (CFACreationUtils.addEdgeToCFA, INFO)

line 12703: Dead code detected:  (CFACreationUtils.addEdgeToCFA, INFO)

line 12704: Dead code detected: [!(pao_ID_____3 == 1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 12705: Dead code detected: __asm__ ("incq %%gs:%P0": "+m" ((net->mib.xfrm_statistics)->mibs[19])); (CFACreationUtils.addEdgeToCFA, INFO)

line 12707: Dead code detected: [pao_ID_____3 == -1] (CFACreationUtils.addEdgeToCFA, INFO)

line 12707: Dead code detected: [!(pao_ID_____3 == -1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 12708: Dead code detected: __asm__ ("decq %%gs:%P0": "+m" ((net->mib.xfrm_statistics)->mibs[19])); (CFACreationUtils.addEdgeToCFA, INFO)

line 12710: Dead code detected: __asm__ ("addq %1, %%gs:%P0": "+m" ((net->mib.xfrm_statistics)->mibs[19]): "re" (1UL)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (8UL) {
    case 1UL: ;
    if (pao_ID_____3 == 1) {
      __asm__ ("incb %%gs:%P0": "+m" ((net->mib.xfrm_statistics)->mibs[19]));
    } else
    if (pao_ID_____3 == -1) {
      __asm__ ("decb %%gs:%P0": "+m" ((net->mib.xfrm_statistics)->mibs[19]));
    } else {
      __asm__ ("addb %1, %%gs:%P0": "+m" ((net->mib.xfrm_statistics)->mibs[19]): "qi" (1UL));
    }
    goto ldv_52064;
    case 2UL: ;
    if (pao_ID_____3 == 1) {
      __asm__ ("incw %%gs:%P0": "+m" ((net->mib.xfrm_statistics)->mibs[19]));
    } else
    if (pao_ID_____3 == -1) {
      __asm__ ("decw %%gs:%P0": "+m" ((net->mib.xfrm_statistics)->mibs[19]));
    } else {
      __asm__ ("addw %1, %%gs:%P0": "+m" ((net->mib.xfrm_statistics)->mibs[19]): "ri" (1UL));
    }
    goto ldv_52064;
    case 4UL: ;
    if (pao_ID_____3 == 1) {
      __asm__ ("incl %%gs:%P0": "+m" ((net->mib.xfrm_statistics)->mibs[19]));
    } else
    if (pao_ID_____3 == -1) {
      __asm__ ("decl %%gs:%P0": "+m" ((net->mib.xfrm_statistics)->mibs[19]));
    } else {
      __asm__ ("addl %1, %%gs:%P0": "+m" ((net->mib.xfrm_statistics)->mibs[19]): "ri" (1UL));
    }
    goto ldv_52064;
    case 8UL: ;
    if (pao_ID_____3 == 1) {
      __asm__ ("incq %%gs:%P0": "+m" ((net->mib.xfrm_statistics)->mibs[19]));
    } else
    if (pao_ID_____3 == -1) {
      __asm__ ("decq %%gs:%P0": "+m" ((net->mib.xfrm_statistics)->mibs[19]));
    } else {
      __asm__ ("addq %1, %%gs:%P0": "+m" ((net->mib.xfrm_statistics)->mibs[19]): "re" (1UL));
    }
    goto ldv_52064;
    default:
    __bad_percpu_size();
    } (CFACreationUtils.addEdgeToCFA, INFO)

line 12719: Dead code detected: pao_ID_____4 = 1; (CFACreationUtils.addEdgeToCFA, INFO)

line 12722: Dead code detected: [pao_ID_____4 == 1] (CFACreationUtils.addEdgeToCFA, INFO)

line 12722: Dead code detected: [!(pao_ID_____4 == 1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 12723: Dead code detected: __asm__ ("incb %%gs:%P0": "+m" ((net->mib.xfrm_statistics)->mibs[19])); (CFACreationUtils.addEdgeToCFA, INFO)

line 12725: Dead code detected: [pao_ID_____4 == -1] (CFACreationUtils.addEdgeToCFA, INFO)

line 12725: Dead code detected: [!(pao_ID_____4 == -1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 12726: Dead code detected: __asm__ ("decb %%gs:%P0": "+m" ((net->mib.xfrm_statistics)->mibs[19])); (CFACreationUtils.addEdgeToCFA, INFO)

line 12728: Dead code detected: __asm__ ("addb %1, %%gs:%P0": "+m" ((net->mib.xfrm_statistics)->mibs[19]): "qi" (1UL)); (CFACreationUtils.addEdgeToCFA, INFO)

line 12732: Dead code detected: [pao_ID_____4 == 1] (CFACreationUtils.addEdgeToCFA, INFO)

line 12732: Dead code detected: [!(pao_ID_____4 == 1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 12733: Dead code detected: __asm__ ("incw %%gs:%P0": "+m" ((net->mib.xfrm_statistics)->mibs[19])); (CFACreationUtils.addEdgeToCFA, INFO)

line 12735: Dead code detected: [pao_ID_____4 == -1] (CFACreationUtils.addEdgeToCFA, INFO)

line 12735: Dead code detected: [!(pao_ID_____4 == -1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 12736: Dead code detected: __asm__ ("decw %%gs:%P0": "+m" ((net->mib.xfrm_statistics)->mibs[19])); (CFACreationUtils.addEdgeToCFA, INFO)

line 12738: Dead code detected: __asm__ ("addw %1, %%gs:%P0": "+m" ((net->mib.xfrm_statistics)->mibs[19]): "ri" (1UL)); (CFACreationUtils.addEdgeToCFA, INFO)

line 12742: Dead code detected: [pao_ID_____4 == 1] (CFACreationUtils.addEdgeToCFA, INFO)

line 12742: Dead code detected: [!(pao_ID_____4 == 1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 12743: Dead code detected: __asm__ ("incl %%gs:%P0": "+m" ((net->mib.xfrm_statistics)->mibs[19])); (CFACreationUtils.addEdgeToCFA, INFO)

line 12745: Dead code detected: [pao_ID_____4 == -1] (CFACreationUtils.addEdgeToCFA, INFO)

line 12745: Dead code detected: [!(pao_ID_____4 == -1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 12746: Dead code detected: __asm__ ("decl %%gs:%P0": "+m" ((net->mib.xfrm_statistics)->mibs[19])); (CFACreationUtils.addEdgeToCFA, INFO)

line 12748: Dead code detected: __asm__ ("addl %1, %%gs:%P0": "+m" ((net->mib.xfrm_statistics)->mibs[19]): "ri" (1UL)); (CFACreationUtils.addEdgeToCFA, INFO)

line 12751: Dead code detected:  (CFACreationUtils.addEdgeToCFA, INFO)

line 12752: Dead code detected: [!(pao_ID_____4 == 1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 12753: Dead code detected: __asm__ ("incq %%gs:%P0": "+m" ((net->mib.xfrm_statistics)->mibs[19])); (CFACreationUtils.addEdgeToCFA, INFO)

line 12755: Dead code detected: [pao_ID_____4 == -1] (CFACreationUtils.addEdgeToCFA, INFO)

line 12755: Dead code detected: [!(pao_ID_____4 == -1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 12756: Dead code detected: __asm__ ("decq %%gs:%P0": "+m" ((net->mib.xfrm_statistics)->mibs[19])); (CFACreationUtils.addEdgeToCFA, INFO)

line 12758: Dead code detected: __asm__ ("addq %1, %%gs:%P0": "+m" ((net->mib.xfrm_statistics)->mibs[19]): "re" (1UL)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (8UL) {
    case 1UL: ;
    if (pao_ID_____4 == 1) {
      __asm__ ("incb %%gs:%P0": "+m" ((net->mib.xfrm_statistics)->mibs[19]));
    } else
    if (pao_ID_____4 == -1) {
      __asm__ ("decb %%gs:%P0": "+m" ((net->mib.xfrm_statistics)->mibs[19]));
    } else {
      __asm__ ("addb %1, %%gs:%P0": "+m" ((net->mib.xfrm_statistics)->mibs[19]): "qi" (1UL));
    }
    goto ldv_52075;
    case 2UL: ;
    if (pao_ID_____4 == 1) {
      __asm__ ("incw %%gs:%P0": "+m" ((net->mib.xfrm_statistics)->mibs[19]));
    } else
    if (pao_ID_____4 == -1) {
      __asm__ ("decw %%gs:%P0": "+m" ((net->mib.xfrm_statistics)->mibs[19]));
    } else {
      __asm__ ("addw %1, %%gs:%P0": "+m" ((net->mib.xfrm_statistics)->mibs[19]): "ri" (1UL));
    }
    goto ldv_52075;
    case 4UL: ;
    if (pao_ID_____4 == 1) {
      __asm__ ("incl %%gs:%P0": "+m" ((net->mib.xfrm_statistics)->mibs[19]));
    } else
    if (pao_ID_____4 == -1) {
      __asm__ ("decl %%gs:%P0": "+m" ((net->mib.xfrm_statistics)->mibs[19]));
    } else {
      __asm__ ("addl %1, %%gs:%P0": "+m" ((net->mib.xfrm_statistics)->mibs[19]): "ri" (1UL));
    }
    goto ldv_52075;
    case 8UL: ;
    if (pao_ID_____4 == 1) {
      __asm__ ("incq %%gs:%P0": "+m" ((net->mib.xfrm_statistics)->mibs[19]));
    } else
    if (pao_ID_____4 == -1) {
      __asm__ ("decq %%gs:%P0": "+m" ((net->mib.xfrm_statistics)->mibs[19]));
    } else {
      __asm__ ("addq %1, %%gs:%P0": "+m" ((net->mib.xfrm_statistics)->mibs[19]): "re" (1UL));
    }
    goto ldv_52075;
    default:
    __bad_percpu_size();
    } (CFACreationUtils.addEdgeToCFA, INFO)

line 12767: Dead code detected: pao_ID_____5 = 1; (CFACreationUtils.addEdgeToCFA, INFO)

line 12770: Dead code detected: [pao_ID_____5 == 1] (CFACreationUtils.addEdgeToCFA, INFO)

line 12770: Dead code detected: [!(pao_ID_____5 == 1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 12771: Dead code detected: __asm__ ("incb %%gs:%P0": "+m" ((net->mib.xfrm_statistics)->mibs[19])); (CFACreationUtils.addEdgeToCFA, INFO)

line 12773: Dead code detected: [pao_ID_____5 == -1] (CFACreationUtils.addEdgeToCFA, INFO)

line 12773: Dead code detected: [!(pao_ID_____5 == -1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 12774: Dead code detected: __asm__ ("decb %%gs:%P0": "+m" ((net->mib.xfrm_statistics)->mibs[19])); (CFACreationUtils.addEdgeToCFA, INFO)

line 12776: Dead code detected: __asm__ ("addb %1, %%gs:%P0": "+m" ((net->mib.xfrm_statistics)->mibs[19]): "qi" (1UL)); (CFACreationUtils.addEdgeToCFA, INFO)

line 12780: Dead code detected: [pao_ID_____5 == 1] (CFACreationUtils.addEdgeToCFA, INFO)

line 12780: Dead code detected: [!(pao_ID_____5 == 1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 12781: Dead code detected: __asm__ ("incw %%gs:%P0": "+m" ((net->mib.xfrm_statistics)->mibs[19])); (CFACreationUtils.addEdgeToCFA, INFO)

line 12783: Dead code detected: [pao_ID_____5 == -1] (CFACreationUtils.addEdgeToCFA, INFO)

line 12783: Dead code detected: [!(pao_ID_____5 == -1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 12784: Dead code detected: __asm__ ("decw %%gs:%P0": "+m" ((net->mib.xfrm_statistics)->mibs[19])); (CFACreationUtils.addEdgeToCFA, INFO)

line 12786: Dead code detected: __asm__ ("addw %1, %%gs:%P0": "+m" ((net->mib.xfrm_statistics)->mibs[19]): "ri" (1UL)); (CFACreationUtils.addEdgeToCFA, INFO)

line 12790: Dead code detected: [pao_ID_____5 == 1] (CFACreationUtils.addEdgeToCFA, INFO)

line 12790: Dead code detected: [!(pao_ID_____5 == 1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 12791: Dead code detected: __asm__ ("incl %%gs:%P0": "+m" ((net->mib.xfrm_statistics)->mibs[19])); (CFACreationUtils.addEdgeToCFA, INFO)

line 12793: Dead code detected: [pao_ID_____5 == -1] (CFACreationUtils.addEdgeToCFA, INFO)

line 12793: Dead code detected: [!(pao_ID_____5 == -1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 12794: Dead code detected: __asm__ ("decl %%gs:%P0": "+m" ((net->mib.xfrm_statistics)->mibs[19])); (CFACreationUtils.addEdgeToCFA, INFO)

line 12796: Dead code detected: __asm__ ("addl %1, %%gs:%P0": "+m" ((net->mib.xfrm_statistics)->mibs[19]): "ri" (1UL)); (CFACreationUtils.addEdgeToCFA, INFO)

line 12799: Dead code detected:  (CFACreationUtils.addEdgeToCFA, INFO)

line 12800: Dead code detected: [!(pao_ID_____5 == 1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 12801: Dead code detected: __asm__ ("incq %%gs:%P0": "+m" ((net->mib.xfrm_statistics)->mibs[19])); (CFACreationUtils.addEdgeToCFA, INFO)

line 12803: Dead code detected: [pao_ID_____5 == -1] (CFACreationUtils.addEdgeToCFA, INFO)

line 12803: Dead code detected: [!(pao_ID_____5 == -1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 12804: Dead code detected: __asm__ ("decq %%gs:%P0": "+m" ((net->mib.xfrm_statistics)->mibs[19])); (CFACreationUtils.addEdgeToCFA, INFO)

line 12806: Dead code detected: __asm__ ("addq %1, %%gs:%P0": "+m" ((net->mib.xfrm_statistics)->mibs[19]): "re" (1UL)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (8UL) {
    case 1UL: ;
    if (pao_ID_____5 == 1) {
      __asm__ ("incb %%gs:%P0": "+m" ((net->mib.xfrm_statistics)->mibs[19]));
    } else
    if (pao_ID_____5 == -1) {
      __asm__ ("decb %%gs:%P0": "+m" ((net->mib.xfrm_statistics)->mibs[19]));
    } else {
      __asm__ ("addb %1, %%gs:%P0": "+m" ((net->mib.xfrm_statistics)->mibs[19]): "qi" (1UL));
    }
    goto ldv_52085;
    case 2UL: ;
    if (pao_ID_____5 == 1) {
      __asm__ ("incw %%gs:%P0": "+m" ((net->mib.xfrm_statistics)->mibs[19]));
    } else
    if (pao_ID_____5 == -1) {
      __asm__ ("decw %%gs:%P0": "+m" ((net->mib.xfrm_statistics)->mibs[19]));
    } else {
      __asm__ ("addw %1, %%gs:%P0": "+m" ((net->mib.xfrm_statistics)->mibs[19]): "ri" (1UL));
    }
    goto ldv_52085;
    case 4UL: ;
    if (pao_ID_____5 == 1) {
      __asm__ ("incl %%gs:%P0": "+m" ((net->mib.xfrm_statistics)->mibs[19]));
    } else
    if (pao_ID_____5 == -1) {
      __asm__ ("decl %%gs:%P0": "+m" ((net->mib.xfrm_statistics)->mibs[19]));
    } else {
      __asm__ ("addl %1, %%gs:%P0": "+m" ((net->mib.xfrm_statistics)->mibs[19]): "ri" (1UL));
    }
    goto ldv_52085;
    case 8UL: ;
    if (pao_ID_____5 == 1) {
      __asm__ ("incq %%gs:%P0": "+m" ((net->mib.xfrm_statistics)->mibs[19]));
    } else
    if (pao_ID_____5 == -1) {
      __asm__ ("decq %%gs:%P0": "+m" ((net->mib.xfrm_statistics)->mibs[19]));
    } else {
      __asm__ ("addq %1, %%gs:%P0": "+m" ((net->mib.xfrm_statistics)->mibs[19]): "re" (1UL));
    }
    goto ldv_52085;
    default:
    __bad_percpu_size();
    } (CFACreationUtils.addEdgeToCFA, INFO)

line 12818: Dead code detected: [pao_ID_____6 == 1] (CFACreationUtils.addEdgeToCFA, INFO)

line 12818: Dead code detected: [!(pao_ID_____6 == 1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 12819: Dead code detected: __asm__ ("incb %%gs:%P0": "+m" ((net->mib.xfrm_statistics)->mibs[19])); (CFACreationUtils.addEdgeToCFA, INFO)

line 12821: Dead code detected: [pao_ID_____6 == -1] (CFACreationUtils.addEdgeToCFA, INFO)

line 12821: Dead code detected: [!(pao_ID_____6 == -1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 12822: Dead code detected: __asm__ ("decb %%gs:%P0": "+m" ((net->mib.xfrm_statistics)->mibs[19])); (CFACreationUtils.addEdgeToCFA, INFO)

line 12824: Dead code detected: __asm__ ("addb %1, %%gs:%P0": "+m" ((net->mib.xfrm_statistics)->mibs[19]): "qi" (1UL)); (CFACreationUtils.addEdgeToCFA, INFO)

line 12828: Dead code detected: [pao_ID_____6 == 1] (CFACreationUtils.addEdgeToCFA, INFO)

line 12828: Dead code detected: [!(pao_ID_____6 == 1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 12829: Dead code detected: __asm__ ("incw %%gs:%P0": "+m" ((net->mib.xfrm_statistics)->mibs[19])); (CFACreationUtils.addEdgeToCFA, INFO)

line 12831: Dead code detected: [pao_ID_____6 == -1] (CFACreationUtils.addEdgeToCFA, INFO)

line 12831: Dead code detected: [!(pao_ID_____6 == -1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 12832: Dead code detected: __asm__ ("decw %%gs:%P0": "+m" ((net->mib.xfrm_statistics)->mibs[19])); (CFACreationUtils.addEdgeToCFA, INFO)

line 12834: Dead code detected: __asm__ ("addw %1, %%gs:%P0": "+m" ((net->mib.xfrm_statistics)->mibs[19]): "ri" (1UL)); (CFACreationUtils.addEdgeToCFA, INFO)

line 12838: Dead code detected: [pao_ID_____6 == 1] (CFACreationUtils.addEdgeToCFA, INFO)

line 12838: Dead code detected: [!(pao_ID_____6 == 1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 12839: Dead code detected: __asm__ ("incl %%gs:%P0": "+m" ((net->mib.xfrm_statistics)->mibs[19])); (CFACreationUtils.addEdgeToCFA, INFO)

line 12841: Dead code detected: [pao_ID_____6 == -1] (CFACreationUtils.addEdgeToCFA, INFO)

line 12841: Dead code detected: [!(pao_ID_____6 == -1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 12842: Dead code detected: __asm__ ("decl %%gs:%P0": "+m" ((net->mib.xfrm_statistics)->mibs[19])); (CFACreationUtils.addEdgeToCFA, INFO)

line 12844: Dead code detected: __asm__ ("addl %1, %%gs:%P0": "+m" ((net->mib.xfrm_statistics)->mibs[19]): "ri" (1UL)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (8UL) {
    case 1UL: ;
    if (pao_ID_____6 == 1) {
      __asm__ ("incb %%gs:%P0": "+m" ((net->mib.xfrm_statistics)->mibs[19]));
    } else
    if (pao_ID_____6 == -1) {
      __asm__ ("decb %%gs:%P0": "+m" ((net->mib.xfrm_statistics)->mibs[19]));
    } else {
      __asm__ ("addb %1, %%gs:%P0": "+m" ((net->mib.xfrm_statistics)->mibs[19]): "qi" (1UL));
    }
    goto ldv_52095;
    case 2UL: ;
    if (pao_ID_____6 == 1) {
      __asm__ ("incw %%gs:%P0": "+m" ((net->mib.xfrm_statistics)->mibs[19]));
    } else
    if (pao_ID_____6 == -1) {
      __asm__ ("decw %%gs:%P0": "+m" ((net->mib.xfrm_statistics)->mibs[19]));
    } else {
      __asm__ ("addw %1, %%gs:%P0": "+m" ((net->mib.xfrm_statistics)->mibs[19]): "ri" (1UL));
    }
    goto ldv_52095;
    case 4UL: ;
    if (pao_ID_____6 == 1) {
      __asm__ ("incl %%gs:%P0": "+m" ((net->mib.xfrm_statistics)->mibs[19]));
    } else
    if (pao_ID_____6 == -1) {
      __asm__ ("decl %%gs:%P0": "+m" ((net->mib.xfrm_statistics)->mibs[19]));
    } else {
      __asm__ ("addl %1, %%gs:%P0": "+m" ((net->mib.xfrm_statistics)->mibs[19]): "ri" (1UL));
    }
    goto ldv_52095;
    case 8UL: ;
    if (pao_ID_____6 == 1) {
      __asm__ ("incq %%gs:%P0": "+m" ((net->mib.xfrm_statistics)->mibs[19]));
    } else
    if (pao_ID_____6 == -1) {
      __asm__ ("decq %%gs:%P0": "+m" ((net->mib.xfrm_statistics)->mibs[19]));
    } else {
      __asm__ ("addq %1, %%gs:%P0": "+m" ((net->mib.xfrm_statistics)->mibs[19]): "re" (1UL));
    }
    goto ldv_52095;
    default:
    __bad_percpu_size();
    } (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (8UL) {
    case 1UL:
    pao_ID_____3 = 1;
    switch (8UL) {
    case 1UL: ;
    if (pao_ID_____3 == 1) {
      __asm__ ("incb %%gs:%P0": "+m" ((net->mib.xfrm_statistics)->mibs[19]));
    } else
    if (pao_ID_____3 == -1) {
      __asm__ ("decb %%gs:%P0": "+m" ((net->mib.xfrm_statistics)->mibs[19]));
    } else {
      __asm__ ("addb %1, %%gs:%P0": "+m" ((net->mib.xfrm_statistics)->mibs[19]): "qi" (1UL));
    }
    goto ldv_52064;
    case 2UL: ;
    if (pao_ID_____3 == 1) {
      __asm__ ("incw %%gs:%P0": "+m" ((net->mib.xfrm_statistics)->mibs[19]));
    } else
    if (pao_ID_____3 == -1) {
      __asm__ ("decw %%gs:%P0": "+m" ((net->mib.xfrm_statistics)->mibs[19]));
    } else {
      __asm__ ("addw %1, %%gs:%P0": "+m" ((net->mib.xfrm_statistics)->mibs[19]): "ri" (1UL));
    }
    goto ldv_52064;
    case 4UL: ;
    if (pao_ID_____3 == 1) {
      __asm__ ("incl %%gs:%P0": "+m" ((net->mib.xfrm_statistics)->mibs[19]));
    } else
    if (pao_ID_____3 == -1) {
      __asm__ ("decl %%gs:%P0": "+m" ((net->mib.xfrm_statistics)->mibs[19]));
    } else {
      __asm__ ("addl %1, %%gs:%P0": "+m" ((net->mib.xfrm_statistics)->mibs[19]): "ri" (1UL));
    }
    goto ldv_52064;
    case 8UL: ;
    if (pao_ID_____3 == 1) {
      __asm__ ("incq %%gs:%P0": "+m" ((net->mib.xfrm_statistics)->mibs[19]));
    } else
    if (pao_ID_____3 == -1) {
      __asm__ ("decq %%gs:%P0": "+m" ((net->mib.xfrm_statistics)->mibs[19]));
    } else {
      __asm__ ("addq %1, %%gs:%P0": "+m" ((net->mib.xfrm_statistics)->mibs[19]): "re" (1UL));
    }
    goto ldv_52064;
    default:
    __bad_percpu_size();
    }
    ldv_52064: ;
    goto ldv_52069;
    case 2UL:
    pao_ID_____4 = 1;
    switch (8UL) {
    case 1UL: ;
    if (pao_ID_____4 == 1) {
      __asm__ ("incb %%gs:%P0": "+m" ((net->mib.xfrm_statistics)->mibs[19]));
    } else
    if (pao_ID_____4 == -1) {
      __asm__ ("decb %%gs:%P0": "+m" ((net->mib.xfrm_statistics)->mibs[19]));
    } else {
      __asm__ ("addb %1, %%gs:%P0": "+m" ((net->mib.xfrm_statistics)->mibs[19]): "qi" (1UL));
    }
    goto ldv_52075;
    case 2UL: ;
    if (pao_ID_____4 == 1) {
      __asm__ ("incw %%gs:%P0": "+m" ((net->mib.xfrm_statistics)->mibs[19]));
    } else
    if (pao_ID_____4 == -1) {
      __asm__ ("decw %%gs:%P0": "+m" ((net->mib.xfrm_statistics)->mibs[19]));
    } else {
      __asm__ ("addw %1, %%gs:%P0": "+m" ((net->mib.xfrm_statistics)->mibs[19]): "ri" (1UL));
    }
    goto ldv_52075;
    case 4UL: ;
    if (pao_ID_____4 == 1) {
      __asm__ ("incl %%gs:%P0": "+m" ((net->mib.xfrm_statistics)->mibs[19]));
    } else
    if (pao_ID_____4 == -1) {
      __asm__ ("decl %%gs:%P0": "+m" ((net->mib.xfrm_statistics)->mibs[19]));
    } else {
      __asm__ ("addl %1, %%gs:%P0": "+m" ((net->mib.xfrm_statistics)->mibs[19]): "ri" (1UL));
    }
    goto ldv_52075;
    case 8UL: ;
    if (pao_ID_____4 == 1) {
      __asm__ ("incq %%gs:%P0": "+m" ((net->mib.xfrm_statistics)->mibs[19]));
    } else
    if (pao_ID_____4 == -1) {
      __asm__ ("decq %%gs:%P0": "+m" ((net->mib.xfrm_statistics)->mibs[19]));
    } else {
      __asm__ ("addq %1, %%gs:%P0": "+m" ((net->mib.xfrm_statistics)->mibs[19]): "re" (1UL));
    }
    goto ldv_52075;
    default:
    __bad_percpu_size();
    }
    ldv_52075: ;
    goto ldv_52069;
    case 4UL:
    pao_ID_____5 = 1;
    switch (8UL) {
    case 1UL: ;
    if (pao_ID_____5 == 1) {
      __asm__ ("incb %%gs:%P0": "+m" ((net->mib.xfrm_statistics)->mibs[19]));
    } else
    if (pao_ID_____5 == -1) {
      __asm__ ("decb %%gs:%P0": "+m" ((net->mib.xfrm_statistics)->mibs[19]));
    } else {
      __asm__ ("addb %1, %%gs:%P0": "+m" ((net->mib.xfrm_statistics)->mibs[19]): "qi" (1UL));
    }
    goto ldv_52085;
    case 2UL: ;
    if (pao_ID_____5 == 1) {
      __asm__ ("incw %%gs:%P0": "+m" ((net->mib.xfrm_statistics)->mibs[19]));
    } else
    if (pao_ID_____5 == -1) {
      __asm__ ("decw %%gs:%P0": "+m" ((net->mib.xfrm_statistics)->mibs[19]));
    } else {
      __asm__ ("addw %1, %%gs:%P0": "+m" ((net->mib.xfrm_statistics)->mibs[19]): "ri" (1UL));
    }
    goto ldv_52085;
    case 4UL: ;
    if (pao_ID_____5 == 1) {
      __asm__ ("incl %%gs:%P0": "+m" ((net->mib.xfrm_statistics)->mibs[19]));
    } else
    if (pao_ID_____5 == -1) {
      __asm__ ("decl %%gs:%P0": "+m" ((net->mib.xfrm_statistics)->mibs[19]));
    } else {
      __asm__ ("addl %1, %%gs:%P0": "+m" ((net->mib.xfrm_statistics)->mibs[19]): "ri" (1UL));
    }
    goto ldv_52085;
    case 8UL: ;
    if (pao_ID_____5 == 1) {
      __asm__ ("incq %%gs:%P0": "+m" ((net->mib.xfrm_statistics)->mibs[19]));
    } else
    if (pao_ID_____5 == -1) {
      __asm__ ("decq %%gs:%P0": "+m" ((net->mib.xfrm_statistics)->mibs[19]));
    } else {
      __asm__ ("addq %1, %%gs:%P0": "+m" ((net->mib.xfrm_statistics)->mibs[19]): "re" (1UL));
    }
    goto ldv_52085;
    default:
    __bad_percpu_size();
    }
    ldv_52085: ;
    goto ldv_52069;
    case 8UL:
    pao_ID_____6 = 1;
    switch (8UL) {
    case 1UL: ;
    if (pao_ID_____6 == 1) {
      __asm__ ("incb %%gs:%P0": "+m" ((net->mib.xfrm_statistics)->mibs[19]));
    } else
    if (pao_ID_____6 == -1) {
      __asm__ ("decb %%gs:%P0": "+m" ((net->mib.xfrm_statistics)->mibs[19]));
    } else {
      __asm__ ("addb %1, %%gs:%P0": "+m" ((net->mib.xfrm_statistics)->mibs[19]): "qi" (1UL));
    }
    goto ldv_52095;
    case 2UL: ;
    if (pao_ID_____6 == 1) {
      __asm__ ("incw %%gs:%P0": "+m" ((net->mib.xfrm_statistics)->mibs[19]));
    } else
    if (pao_ID_____6 == -1) {
      __asm__ ("decw %%gs:%P0": "+m" ((net->mib.xfrm_statistics)->mibs[19]));
    } else {
      __asm__ ("addw %1, %%gs:%P0": "+m" ((net->mib.xfrm_statistics)->mibs[19]): "ri" (1UL));
    }
    goto ldv_52095;
    case 4UL: ;
    if (pao_ID_____6 == 1) {
      __asm__ ("incl %%gs:%P0": "+m" ((net->mib.xfrm_statistics)->mibs[19]));
    } else
    if (pao_ID_____6 == -1) {
      __asm__ ("decl %%gs:%P0": "+m" ((net->mib.xfrm_statistics)->mibs[19]));
    } else {
      __asm__ ("addl %1, %%gs:%P0": "+m" ((net->mib.xfrm_statistics)->mibs[19]): "ri" (1UL));
    }
    goto ldv_52095;
    case 8UL: ;
    if (pao_ID_____6 == 1) {
      __asm__ ("incq %%gs:%P0": "+m" ((net->mib.xfrm_statistics)->mibs[19]));
    } else
    if (pao_ID_____6 == -1) {
      __asm__ ("decq %%gs:%P0": "+m" ((net->mib.xfrm_statistics)->mibs[19]));
    } else {
      __asm__ ("addq %1, %%gs:%P0": "+m" ((net->mib.xfrm_statistics)->mibs[19]): "re" (1UL));
    }
    goto ldv_52095;
    default:
    __bad_percpu_size();
    }
    ldv_52095: ;
    goto ldv_52069;
    default:
    __bad_size_call_parameter();
    goto ldv_52069;
    } (CFACreationUtils.addEdgeToCFA, INFO)

lines 14257-14272: Dead code detected: switch (4UL) (CFACreationUtils.addEdgeToCFA, INFO)

line 14259: Dead code detected: __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "m" (cpu_number)); (CFACreationUtils.addEdgeToCFA, INFO)

line 14262: Dead code detected: __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "m" (cpu_number)); (CFACreationUtils.addEdgeToCFA, INFO)

line 14264: Dead code detected:  (CFACreationUtils.addEdgeToCFA, INFO)

line 14268: Dead code detected: __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret__): "m" (cpu_number)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (4UL) {
    case 1UL:
    __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "m" (cpu_number));
    goto ldv_52408;
    case 2UL:
    __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "m" (cpu_number));
    goto ldv_52408;
    case 4UL:
    __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "m" (cpu_number));
    goto ldv_52408;
    case 8UL:
    __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret__): "m" (cpu_number));
    goto ldv_52408;
    default:
    __bad_percpu_size();
    } (CFACreationUtils.addEdgeToCFA, INFO)

lines 14277-14292: Dead code detected: switch (4UL) (CFACreationUtils.addEdgeToCFA, INFO)

line 14279: Dead code detected: __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret_____0): "m" (cpu_number)); (CFACreationUtils.addEdgeToCFA, INFO)

line 14282: Dead code detected: __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret_____0): "m" (cpu_number)); (CFACreationUtils.addEdgeToCFA, INFO)

line 14284: Dead code detected:  (CFACreationUtils.addEdgeToCFA, INFO)

line 14288: Dead code detected: __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret_____0): "m" (cpu_number)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (4UL) {
    case 1UL:
    __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret_____0): "m" (cpu_number));
    goto ldv_52418;
    case 2UL:
    __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret_____0): "m" (cpu_number));
    goto ldv_52418;
    case 4UL:
    __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret_____0): "m" (cpu_number));
    goto ldv_52418;
    case 8UL:
    __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret_____0): "m" (cpu_number));
    goto ldv_52418;
    default:
    __bad_percpu_size();
    } (CFACreationUtils.addEdgeToCFA, INFO)

line 14299: Dead code detected: __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret_____1): "m" (cpu_number)); (CFACreationUtils.addEdgeToCFA, INFO)

line 14302: Dead code detected: __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret_____1): "m" (cpu_number)); (CFACreationUtils.addEdgeToCFA, INFO)

line 14308: Dead code detected: __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret_____1): "m" (cpu_number)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (4UL) {
    case 1UL:
    __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret_____1): "m" (cpu_number));
    goto ldv_52427;
    case 2UL:
    __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret_____1): "m" (cpu_number));
    goto ldv_52427;
    case 4UL:
    __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret_____1): "m" (cpu_number));
    goto ldv_52427;
    case 8UL:
    __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret_____1): "m" (cpu_number));
    goto ldv_52427;
    default:
    __bad_percpu_size();
    } (CFACreationUtils.addEdgeToCFA, INFO)

lines 14317-14332: Dead code detected: switch (4UL) (CFACreationUtils.addEdgeToCFA, INFO)

line 14319: Dead code detected: __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret_____2): "m" (cpu_number)); (CFACreationUtils.addEdgeToCFA, INFO)

line 14322: Dead code detected: __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret_____2): "m" (cpu_number)); (CFACreationUtils.addEdgeToCFA, INFO)

line 14324: Dead code detected:  (CFACreationUtils.addEdgeToCFA, INFO)

line 14328: Dead code detected: __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret_____2): "m" (cpu_number)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (4UL) {
    case 1UL:
    __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret_____2): "m" (cpu_number));
    goto ldv_52436;
    case 2UL:
    __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret_____2): "m" (cpu_number));
    goto ldv_52436;
    case 4UL:
    __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret_____2): "m" (cpu_number));
    goto ldv_52436;
    case 8UL:
    __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret_____2): "m" (cpu_number));
    goto ldv_52436;
    default:
    __bad_percpu_size();
    } (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (4UL) {
    case 1UL: ;
    switch (4UL) {
    case 1UL:
    __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "m" (cpu_number));
    goto ldv_52408;
    case 2UL:
    __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "m" (cpu_number));
    goto ldv_52408;
    case 4UL:
    __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "m" (cpu_number));
    goto ldv_52408;
    case 8UL:
    __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret__): "m" (cpu_number));
    goto ldv_52408;
    default:
    __bad_percpu_size();
    }
    ldv_52408:
    pscr_ret__ = pfo_ret__;
    goto ldv_52414;
    case 2UL: ;
    switch (4UL) {
    case 1UL:
    __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret_____0): "m" (cpu_number));
    goto ldv_52418;
    case 2UL:
    __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret_____0): "m" (cpu_number));
    goto ldv_52418;
    case 4UL:
    __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret_____0): "m" (cpu_number));
    goto ldv_52418;
    case 8UL:
    __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret_____0): "m" (cpu_number));
    goto ldv_52418;
    default:
    __bad_percpu_size();
    }
    ldv_52418:
    pscr_ret__ = pfo_ret_____0;
    goto ldv_52414;
    case 4UL: ;
    switch (4UL) {
    case 1UL:
    __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret_____1): "m" (cpu_number));
    goto ldv_52427;
    case 2UL:
    __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret_____1): "m" (cpu_number));
    goto ldv_52427;
    case 4UL:
    __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret_____1): "m" (cpu_number));
    goto ldv_52427;
    case 8UL:
    __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret_____1): "m" (cpu_number));
    goto ldv_52427;
    default:
    __bad_percpu_size();
    }
    ldv_52427:
    pscr_ret__ = pfo_ret_____1;
    goto ldv_52414;
    case 8UL: ;
    switch (4UL) {
    case 1UL:
    __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret_____2): "m" (cpu_number));
    goto ldv_52436;
    case 2UL:
    __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret_____2): "m" (cpu_number));
    goto ldv_52436;
    case 4UL:
    __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret_____2): "m" (cpu_number));
    goto ldv_52436;
    case 8UL:
    __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret_____2): "m" (cpu_number));
    goto ldv_52436;
    default:
    __bad_percpu_size();
    }
    ldv_52436:
    pscr_ret__ = pfo_ret_____2;
    goto ldv_52414;
    default:
    __bad_size_call_parameter();
    goto ldv_52414;
    } (CFACreationUtils.addEdgeToCFA, INFO)

lines 14471-14486: Dead code detected: switch (4UL) (CFACreationUtils.addEdgeToCFA, INFO)

line 14473: Dead code detected: __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "m" (cpu_number)); (CFACreationUtils.addEdgeToCFA, INFO)

line 14476: Dead code detected: __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "m" (cpu_number)); (CFACreationUtils.addEdgeToCFA, INFO)

line 14478: Dead code detected:  (CFACreationUtils.addEdgeToCFA, INFO)

line 14482: Dead code detected: __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret__): "m" (cpu_number)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (4UL) {
  case 1UL:
  __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "m" (cpu_number));
  goto ldv_52465;
  case 2UL:
  __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "m" (cpu_number));
  goto ldv_52465;
  case 4UL:
  __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "m" (cpu_number));
  goto ldv_52465;
  case 8UL:
  __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret__): "m" (cpu_number));
  goto ldv_52465;
  default:
  __bad_percpu_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

lines 14491-14506: Dead code detected: switch (4UL) (CFACreationUtils.addEdgeToCFA, INFO)

line 14493: Dead code detected: __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret_____0): "m" (cpu_number)); (CFACreationUtils.addEdgeToCFA, INFO)

line 14496: Dead code detected: __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret_____0): "m" (cpu_number)); (CFACreationUtils.addEdgeToCFA, INFO)

line 14498: Dead code detected:  (CFACreationUtils.addEdgeToCFA, INFO)

line 14502: Dead code detected: __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret_____0): "m" (cpu_number)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (4UL) {
  case 1UL:
  __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret_____0): "m" (cpu_number));
  goto ldv_52475;
  case 2UL:
  __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret_____0): "m" (cpu_number));
  goto ldv_52475;
  case 4UL:
  __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret_____0): "m" (cpu_number));
  goto ldv_52475;
  case 8UL:
  __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret_____0): "m" (cpu_number));
  goto ldv_52475;
  default:
  __bad_percpu_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 14513: Dead code detected: __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret_____1): "m" (cpu_number)); (CFACreationUtils.addEdgeToCFA, INFO)

line 14516: Dead code detected: __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret_____1): "m" (cpu_number)); (CFACreationUtils.addEdgeToCFA, INFO)

line 14522: Dead code detected: __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret_____1): "m" (cpu_number)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (4UL) {
  case 1UL:
  __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret_____1): "m" (cpu_number));
  goto ldv_52484;
  case 2UL:
  __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret_____1): "m" (cpu_number));
  goto ldv_52484;
  case 4UL:
  __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret_____1): "m" (cpu_number));
  goto ldv_52484;
  case 8UL:
  __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret_____1): "m" (cpu_number));
  goto ldv_52484;
  default:
  __bad_percpu_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

lines 14531-14546: Dead code detected: switch (4UL) (CFACreationUtils.addEdgeToCFA, INFO)

line 14533: Dead code detected: __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret_____2): "m" (cpu_number)); (CFACreationUtils.addEdgeToCFA, INFO)

line 14536: Dead code detected: __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret_____2): "m" (cpu_number)); (CFACreationUtils.addEdgeToCFA, INFO)

line 14538: Dead code detected:  (CFACreationUtils.addEdgeToCFA, INFO)

line 14542: Dead code detected: __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret_____2): "m" (cpu_number)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (4UL) {
  case 1UL:
  __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret_____2): "m" (cpu_number));
  goto ldv_52493;
  case 2UL:
  __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret_____2): "m" (cpu_number));
  goto ldv_52493;
  case 4UL:
  __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret_____2): "m" (cpu_number));
  goto ldv_52493;
  case 8UL:
  __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret_____2): "m" (cpu_number));
  goto ldv_52493;
  default:
  __bad_percpu_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (4UL) {
  case 1UL: ;
  switch (4UL) {
  case 1UL:
  __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "m" (cpu_number));
  goto ldv_52465;
  case 2UL:
  __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "m" (cpu_number));
  goto ldv_52465;
  case 4UL:
  __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "m" (cpu_number));
  goto ldv_52465;
  case 8UL:
  __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret__): "m" (cpu_number));
  goto ldv_52465;
  default:
  __bad_percpu_size();
  }
  ldv_52465:
  pscr_ret__ = pfo_ret__;
  goto ldv_52471;
  case 2UL: ;
  switch (4UL) {
  case 1UL:
  __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret_____0): "m" (cpu_number));
  goto ldv_52475;
  case 2UL:
  __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret_____0): "m" (cpu_number));
  goto ldv_52475;
  case 4UL:
  __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret_____0): "m" (cpu_number));
  goto ldv_52475;
  case 8UL:
  __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret_____0): "m" (cpu_number));
  goto ldv_52475;
  default:
  __bad_percpu_size();
  }
  ldv_52475:
  pscr_ret__ = pfo_ret_____0;
  goto ldv_52471;
  case 4UL: ;
  switch (4UL) {
  case 1UL:
  __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret_____1): "m" (cpu_number));
  goto ldv_52484;
  case 2UL:
  __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret_____1): "m" (cpu_number));
  goto ldv_52484;
  case 4UL:
  __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret_____1): "m" (cpu_number));
  goto ldv_52484;
  case 8UL:
  __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret_____1): "m" (cpu_number));
  goto ldv_52484;
  default:
  __bad_percpu_size();
  }
  ldv_52484:
  pscr_ret__ = pfo_ret_____1;
  goto ldv_52471;
  case 8UL: ;
  switch (4UL) {
  case 1UL:
  __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret_____2): "m" (cpu_number));
  goto ldv_52493;
  case 2UL:
  __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret_____2): "m" (cpu_number));
  goto ldv_52493;
  case 4UL:
  __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret_____2): "m" (cpu_number));
  goto ldv_52493;
  case 8UL:
  __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret_____2): "m" (cpu_number));
  goto ldv_52493;
  default:
  __bad_percpu_size();
  }
  ldv_52493:
  pscr_ret__ = pfo_ret_____2;
  goto ldv_52471;
  default:
  __bad_size_call_parameter();
  goto ldv_52471;
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 14584: Dead code detected: tmp___4 = get_current(); (CFACreationUtils.addEdgeToCFA, INFO)

line 14589: Dead code detected: tmp___5 = get_current(); (CFACreationUtils.addEdgeToCFA, INFO)

line 14594: Dead code detected: tmp___6 = get_current(); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (8UL) {
  case 1UL:
  tmp___4 = get_current();
  __asm__ volatile ("xchgb %b0, %1\n": "+q" (__ret), "+m" (tmp___4->state): : "memory",
                       "cc");
  goto ldv_52507;
  case 2UL:
  tmp___5 = get_current();
  __asm__ volatile ("xchgw %w0, %1\n": "+r" (__ret), "+m" (tmp___5->state): : "memory",
                       "cc");
  goto ldv_52507;
  case 4UL:
  tmp___6 = get_current();
  __asm__ volatile ("xchgl %0, %1\n": "+r" (__ret), "+m" (tmp___6->state): : "memory",
                       "cc");
  goto ldv_52507;
  case 8UL:
  tmp___7 = get_current();
  __asm__ volatile ("xchgq %q0, %1\n": "+r" (__ret), "+m" (tmp___7->state): : "memory",
                       "cc");
  goto ldv_52507;
  default:
  __xchg_wrong_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 14711: Dead code detected: tmp___14 = get_current(); (CFACreationUtils.addEdgeToCFA, INFO)

line 14716: Dead code detected: tmp___15 = get_current(); (CFACreationUtils.addEdgeToCFA, INFO)

line 14721: Dead code detected: tmp___16 = get_current(); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (8UL) {
  case 1UL:
  tmp___14 = get_current();
  __asm__ volatile ("xchgb %b0, %1\n": "+q" (__ret___2), "+m" (tmp___14->state): : "memory",
                       "cc");
  goto ldv_52530;
  case 2UL:
  tmp___15 = get_current();
  __asm__ volatile ("xchgw %w0, %1\n": "+r" (__ret___2), "+m" (tmp___15->state): : "memory",
                       "cc");
  goto ldv_52530;
  case 4UL:
  tmp___16 = get_current();
  __asm__ volatile ("xchgl %0, %1\n": "+r" (__ret___2), "+m" (tmp___16->state): : "memory",
                       "cc");
  goto ldv_52530;
  case 8UL:
  tmp___17 = get_current();
  __asm__ volatile ("xchgq %q0, %1\n": "+r" (__ret___2), "+m" (tmp___17->state): : "memory",
                       "cc");
  goto ldv_52530;
  default:
  __xchg_wrong_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 14791: Dead code detected: tmp___23 = get_current(); (CFACreationUtils.addEdgeToCFA, INFO)

line 14796: Dead code detected: tmp___24 = get_current(); (CFACreationUtils.addEdgeToCFA, INFO)

line 14801: Dead code detected: tmp___25 = get_current(); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (8UL) {
  case 1UL:
  tmp___23 = get_current();
  __asm__ volatile ("xchgb %b0, %1\n": "+q" (__ret___3), "+m" (tmp___23->state): : "memory",
                       "cc");
  goto ldv_52542;
  case 2UL:
  tmp___24 = get_current();
  __asm__ volatile ("xchgw %w0, %1\n": "+r" (__ret___3), "+m" (tmp___24->state): : "memory",
                       "cc");
  goto ldv_52542;
  case 4UL:
  tmp___25 = get_current();
  __asm__ volatile ("xchgl %0, %1\n": "+r" (__ret___3), "+m" (tmp___25->state): : "memory",
                       "cc");
  goto ldv_52542;
  case 8UL:
  tmp___26 = get_current();
  __asm__ volatile ("xchgq %q0, %1\n": "+r" (__ret___3), "+m" (tmp___26->state): : "memory",
                       "cc");
  goto ldv_52542;
  default:
  __xchg_wrong_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 7824: Function pointer *(timer->base->get_time) with type ktime_t (*)() is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 12460: Function pointer *(x->outer_mode->output) with type int (*)(struct xfrm_state *, struct sk_buff *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 12666: Function pointer *(x->type->output) with type int (*)(struct xfrm_state *, struct sk_buff *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 14355: Function pointer *xmit with type netdev_tx_t (*)(struct sk_buff *, struct net_device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

line 15413: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___2 = ldv_zalloc(8UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 15419: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___5 = ldv_zalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 15421: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___6 = ldv_zalloc(8UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 15429: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___10 = ldv_zalloc(8UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 15431: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___11 = ldv_zalloc(8UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 15433: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___12 = ldv_zalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 15439: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___15 = ldv_zalloc(8UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 15441: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___16 = ldv_zalloc(8UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 15443: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___17 = ldv_zalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 15455: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___23 = ldv_zalloc(24UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function seq_lseek to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function seq_read to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function single_release to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function lock_acquire to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function debug_lockdep_rcu_enabled to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rcu_is_watching to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function lockdep_rcu_suspicious to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function lock_release to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function capable to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 7963: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((const void *)to, 0); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function __builtin_object_size to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function might_fault to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _copy_from_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_pr_debug to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock_nested to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function schedule_timeout_interruptible to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function msleep_interruptible to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __copy_from_user_overflow to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rcu_lockdep_current_cpu_online to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function lock_is_held to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function PDE_DATA to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function single_open to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function proc_mkdir to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function proc_create_data to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function remove_proc_entry to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function find_next_bit to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __raw_spin_lock_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __list_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __init_waitqueue_head to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __cpu_to_node to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function kthread_create_on_node to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function list_del to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function kthread_bind to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function wake_up_process to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function wait_for_completion to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function kthread_stop to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function unregister_netdevice_notifier to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function unregister_pernet_subsys to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_final_state to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function register_pernet_subsys to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function register_netdevice_notifier to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            16023 (18% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  13474 (84%)
  Because of loop head:            2533 (16%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         16 (0%)
  Times precision was empty:       10852 (68%)
  Times precision was {false}:     376 (2%)
  Times result was cached:         4629 (29%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      166 (1%)
  Times result was 'false':        143 (1%)
Number of strengthen sat checks:   0
Number of coverage checks:         11611
  BDD entailment checks:           2779
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       63
Number of predicates discovered:          5
Number of abstraction locations:          112
Max number of predicates per location:    4
Avg number of predicates per location:    1
Total predicates per abstraction:         5889
Max number of predicates per abstraction: 4
Avg number of predicates per abstraction: 10.87
Number of irrelevant predicates:          4752 (81%)
Number of preds handled by boolean abs:   210 (4%)
  Total number of models for allsat:      194
  Max number of models for allsat:        6
  Avg number of models for allsat:        1.17

Time for post operator:                  8.041s
  Time for path formula creation:        7.831s
Time for strengthen operator:            0.207s
Time for prec operator:                  4.073s
  Time for abstraction:                  3.289s (Max:     0.021s, Count: 16023)
    Boolean abstraction:                 0.465s
    Solving time:                        0.648s (Max:     0.016s)
    Model enumeration time:              0.065s
    Time for BDD construction:           0.053s (Max:     0.008s)
Time for merge operator:                 0.611s
Time for coverage check:                 0.063s
  Time for BDD entailment checks:        0.060s
Total time for SMT solver (w/o itp):     0.713s

Number of path formula cache hits:   56325 (57%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     7.010s

Total number of created targets for pointer analysis: 4354
   Number of created targets for uf: *signed_int is 15
   Number of created targets for uf: *(struct_proc_dir_entry)* is 18
   Number of created targets for uf: *(struct_list_head)* is 75
   Number of created targets for uf: *char is 103
   Number of created targets for uf: *unsigned_int is 529


Number of BDD nodes:                               253
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         384 (count: 16568, min: 0, max: 103, avg: 0.02)
Time for BDD node cleanup:                             0.008s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.391s
Automaton transfers with branching:                0
Automaton transfer successors:                        86789 (count: 86789, min: 1, max: 1, avg: 1.00) [1 x 86789]

CPA algorithm statistics
------------------------
Number of iterations:            56894
Max size of waitlist:            100
Average size of waitlist:        63
Number of computed successors:   64867
Max successors for one state:    2
Number of times merged:          4416
Number of times stopped:         6744
Number of times breaked:         16

Total time for CPA algorithm:        19.438s (Max:     2.767s)
  Time for choose from waitlist:      0.214s
  Time for precision adjustment:      5.252s
  Time for transfer relation:        11.359s
  Time for merge operator:            0.949s
  Time for stop operator:             0.322s
  Time for adding to reached set:     0.372s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   16
Avg. length of target path (in blocks):                2292 (count: 16, min: 66, max: 195, avg: 143.25)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   1.907s
  Counterexample analysis:                             1.391s (Max:     0.142s, Calls: 16)
    Refinement sat check:                              0.778s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.003s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.081s
  Precision update:                                    0.034s
  ARG update:                                          0.349s

Length of refined path (in blocks):                    1973 (count: 16, min: 30, max: 194, avg: 123.31)
Number of affected states:                             1382 (count: 16, min: 1, max: 163, avg: 86.38)
Length (states) of path with itp 'true':                575 (count: 16, min: 0, max: 104, avg: 35.94)
Length (states) of path with itp non-trivial itp:      1382 (count: 16, min: 1, max: 163, avg: 86.38)
Length (states) of path with itp 'false':                16 (count: 16, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 16, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:            1366 (count: 16, min: 0, max: 162, avg: 85.38)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                16
Number of successful refinements:     16
Number of failed refinements:         0
Max. size of reached set before ref.: 4652
Max. size of reached set after ref.:  995
Avg. size of reached set before ref.: 3814.38
Avg. size of reached set after ref.:  304.50

Total time for CEGAR algorithm:      21.653s
Time for refinements:                 2.204s
Average time for refinement:          0.137s
Max time for refinement:              0.187s

Code Coverage
-----------------------------
  Function coverage:      0.209
  Visited lines:          1779
  Total lines:            5803
  Line coverage:          0.307
  Visited conditions:     196
  Total conditions:       1432
  Condition coverage:     0.137

CPAchecker general statistics
-----------------------------
Number of program locations:     7909
Number of CFA edges:             8902
Number of relevant variables:    1354
Number of functions:             225
Number of loops:                 52
Size of reached set:             1822
  Number of reached locations:   573 (7%)
    Avg states per location:     3
    Max states per location:     21 (at node N746)
  Number of reached functions:   47 (21%)
  Number of partitions:          1815
    Avg size of partitions:      1
    Max size of partitions:      3 (with key [N7943 (before line 15470), Function main called from node N7818, stack depth 1 [154b8cb6], stack [main]])
  Number of target states:       0
  Size of final wait list        60

Time for analysis setup:          8.620s
  Time for loading CPAs:          1.113s
  Time for loading parser:        0.676s
  Time for CFA construction:      6.659s
    Time for parsing file(s):     1.248s
    Time for AST to CFA:          2.847s
    Time for CFA sanity check:    0.572s
    Time for post-processing:     1.804s
      Time for var class.:        0.880s
Time for Analysis:               21.653s
CPU time for analysis:           21.640s
Total time for CPAchecker:       30.277s
Total CPU time for CPAchecker:   30.250s
Time for statistics:              0.152s

Time for Garbage Collector:       0.800s (in 41 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 87MB (    83 MiB) max;     56MB (    53 MiB) avg;     91MB (    87 MiB) peak
Used non-heap memory:             40MB (    38 MiB) max;     35MB (    33 MiB) avg;     41MB (    39 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        42MB (    40 MiB) max;     37MB (    35 MiB) avg
Total process virtual memory:   8087MB (  7712 MiB) max;   8071MB (  7697 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
