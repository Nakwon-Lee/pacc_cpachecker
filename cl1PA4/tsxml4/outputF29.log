scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.16-rc1/205_9a_array_safes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--usb--r8152.ko-entry_point_true-unreach-call.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_71uc0h67/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

lines 7299-7314: Dead code detected: switch (4UL) (CFACreationUtils.addEdgeToCFA, INFO)

line 7301: Dead code detected: __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "m" (cpu_number)); (CFACreationUtils.addEdgeToCFA, INFO)

line 7304: Dead code detected: __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "m" (cpu_number)); (CFACreationUtils.addEdgeToCFA, INFO)

line 7306: Dead code detected:  (CFACreationUtils.addEdgeToCFA, INFO)

line 7310: Dead code detected: __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret__): "m" (cpu_number)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (4UL) {
  case 1UL:
  __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "m" (cpu_number));
  goto ldv_40900;
  case 2UL:
  __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "m" (cpu_number));
  goto ldv_40900;
  case 4UL:
  __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "m" (cpu_number));
  goto ldv_40900;
  case 8UL:
  __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret__): "m" (cpu_number));
  goto ldv_40900;
  default:
  __bad_percpu_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

lines 7319-7334: Dead code detected: switch (4UL) (CFACreationUtils.addEdgeToCFA, INFO)

line 7321: Dead code detected: __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret_____0): "m" (cpu_number)); (CFACreationUtils.addEdgeToCFA, INFO)

line 7324: Dead code detected: __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret_____0): "m" (cpu_number)); (CFACreationUtils.addEdgeToCFA, INFO)

line 7326: Dead code detected:  (CFACreationUtils.addEdgeToCFA, INFO)

line 7330: Dead code detected: __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret_____0): "m" (cpu_number)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (4UL) {
  case 1UL:
  __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret_____0): "m" (cpu_number));
  goto ldv_40910;
  case 2UL:
  __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret_____0): "m" (cpu_number));
  goto ldv_40910;
  case 4UL:
  __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret_____0): "m" (cpu_number));
  goto ldv_40910;
  case 8UL:
  __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret_____0): "m" (cpu_number));
  goto ldv_40910;
  default:
  __bad_percpu_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 7341: Dead code detected: __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret_____1): "m" (cpu_number)); (CFACreationUtils.addEdgeToCFA, INFO)

line 7344: Dead code detected: __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret_____1): "m" (cpu_number)); (CFACreationUtils.addEdgeToCFA, INFO)

line 7350: Dead code detected: __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret_____1): "m" (cpu_number)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (4UL) {
  case 1UL:
  __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret_____1): "m" (cpu_number));
  goto ldv_40919;
  case 2UL:
  __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret_____1): "m" (cpu_number));
  goto ldv_40919;
  case 4UL:
  __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret_____1): "m" (cpu_number));
  goto ldv_40919;
  case 8UL:
  __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret_____1): "m" (cpu_number));
  goto ldv_40919;
  default:
  __bad_percpu_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

lines 7359-7374: Dead code detected: switch (4UL) (CFACreationUtils.addEdgeToCFA, INFO)

line 7361: Dead code detected: __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret_____2): "m" (cpu_number)); (CFACreationUtils.addEdgeToCFA, INFO)

line 7364: Dead code detected: __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret_____2): "m" (cpu_number)); (CFACreationUtils.addEdgeToCFA, INFO)

line 7366: Dead code detected:  (CFACreationUtils.addEdgeToCFA, INFO)

line 7370: Dead code detected: __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret_____2): "m" (cpu_number)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (4UL) {
  case 1UL:
  __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret_____2): "m" (cpu_number));
  goto ldv_40928;
  case 2UL:
  __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret_____2): "m" (cpu_number));
  goto ldv_40928;
  case 4UL:
  __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret_____2): "m" (cpu_number));
  goto ldv_40928;
  case 8UL:
  __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret_____2): "m" (cpu_number));
  goto ldv_40928;
  default:
  __bad_percpu_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (4UL) {
  case 1UL: ;
  switch (4UL) {
  case 1UL:
  __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "m" (cpu_number));
  goto ldv_40900;
  case 2UL:
  __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "m" (cpu_number));
  goto ldv_40900;
  case 4UL:
  __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "m" (cpu_number));
  goto ldv_40900;
  case 8UL:
  __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret__): "m" (cpu_number));
  goto ldv_40900;
  default:
  __bad_percpu_size();
  }
  ldv_40900:
  pscr_ret__ = pfo_ret__;
  goto ldv_40906;
  case 2UL: ;
  switch (4UL) {
  case 1UL:
  __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret_____0): "m" (cpu_number));
  goto ldv_40910;
  case 2UL:
  __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret_____0): "m" (cpu_number));
  goto ldv_40910;
  case 4UL:
  __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret_____0): "m" (cpu_number));
  goto ldv_40910;
  case 8UL:
  __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret_____0): "m" (cpu_number));
  goto ldv_40910;
  default:
  __bad_percpu_size();
  }
  ldv_40910:
  pscr_ret__ = pfo_ret_____0;
  goto ldv_40906;
  case 4UL: ;
  switch (4UL) {
  case 1UL:
  __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret_____1): "m" (cpu_number));
  goto ldv_40919;
  case 2UL:
  __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret_____1): "m" (cpu_number));
  goto ldv_40919;
  case 4UL:
  __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret_____1): "m" (cpu_number));
  goto ldv_40919;
  case 8UL:
  __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret_____1): "m" (cpu_number));
  goto ldv_40919;
  default:
  __bad_percpu_size();
  }
  ldv_40919:
  pscr_ret__ = pfo_ret_____1;
  goto ldv_40906;
  case 8UL: ;
  switch (4UL) {
  case 1UL:
  __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret_____2): "m" (cpu_number));
  goto ldv_40928;
  case 2UL:
  __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret_____2): "m" (cpu_number));
  goto ldv_40928;
  case 4UL:
  __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret_____2): "m" (cpu_number));
  goto ldv_40928;
  case 8UL:
  __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret_____2): "m" (cpu_number));
  goto ldv_40928;
  default:
  __bad_percpu_size();
  }
  ldv_40928:
  pscr_ret__ = pfo_ret_____2;
  goto ldv_40906;
  default:
  __bad_size_call_parameter();
  goto ldv_40906;
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 9862: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 9896: Dead code detected: __ms___0 = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 10143: Dead code detected: __ms = 3UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 10283: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 10322: Dead code detected: __ms___0 = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 10410: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 10449: Dead code detected: __ms___0 = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 10651: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 10690: Dead code detected: __ms___0 = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 10769: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 10808: Dead code detected: __ms___0 = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

line 12216: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___4 = ldv_zalloc(8UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 12218: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___5 = ldv_zalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ndo_uninit_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ndo_init_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function eth_change_mtu to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function eth_validate_addr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ethtool_op_get_link to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_reset_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function alloc_etherdev_mqs to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_driver_set_configuration to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netdev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tasklet_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __init_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function lockdep_init_map to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function init_timer_key to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netdev_info to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 12025: Ignoring function call through function pointer *(tp->rtl_ops.init): (*(tp->rtl_ops.init))(tp); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function netdev_notice to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function register_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_set_wakeup_enable to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 7768: Destroying the void* pointer get_registers::tmp produces garbage or the memory pointed by it is unused: ret = get_registers(tp, (int)index, (int)type, (int)limit, data); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function usb_control_msg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 7778: Destroying the void* pointer get_registers::tmp produces garbage or the memory pointed by it is unused: ret = get_registers(tp, (int)index, (int)type, (int)size, data); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function kmemdup to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock_bh to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_bh to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function msleep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_kill_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netif_device_detach to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function cancel_delayed_work_sync to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 11461: Ignoring function call through function pointer *(tp->rtl_ops.down): (*(tp->rtl_ops.down))(tp); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 11483: Ignoring function call through function pointer *(tp->rtl_ops.init): (*(tp->rtl_ops.init))(tp); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function netif_device_attach to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 11500: Ignoring function call through function pointer *(tp->rtl_ops.up): (*(tp->rtl_ops.up))(tp); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 11495: Ignoring function call through function pointer *(tp->rtl_ops.disable): (*(tp->rtl_ops.disable))(tp); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function netif_carrier_off to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_submit_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tasklet_kill to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function unregister_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 12071: Ignoring function call through function pointer *(tp->rtl_ops.unload): (*(tp->rtl_ops.unload))(tp); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function usb_deregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            2247008 (19% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  2086910 (93%)
  Because of loop head:            160088 (7%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         10 (0%)
  Times precision was empty:       2237255 (100%)
  Times precision was {false}:     2532 (0%)
  Times result was cached:         7091 (0%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      130 (0%)
  Times result was 'false':        110 (0%)
Number of strengthen sat checks:   0
Number of coverage checks:         1645136
  BDD entailment checks:           622372
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       56
Number of predicates discovered:          6
Number of abstraction locations:          75
Max number of predicates per location:    4
Avg number of predicates per location:    1
Total predicates per abstraction:         10394
Max number of predicates per abstraction: 4
Avg number of predicates per abstraction: 3.90
Number of irrelevant predicates:          9985 (96%)
Number of preds handled by boolean abs:   167 (2%)
  Total number of models for allsat:      198
  Max number of models for allsat:        8
  Avg number of models for allsat:        1.52

Time for post operator:                460.948s
  Time for path formula creation:      454.371s
Time for strengthen operator:           11.709s
Time for prec operator:                 47.224s
  Time for abstraction:                 12.436s (Max:     0.317s, Count: 2247008)
    Boolean abstraction:                 0.277s
    Solving time:                        2.236s (Max:     0.014s)
    Model enumeration time:              0.035s
    Time for BDD construction:           0.021s (Max:     0.007s)
Time for merge operator:                18.788s
Time for coverage check:                 0.734s
  Time for BDD entailment checks:        0.530s
Total time for SMT solver (w/o itp):     2.271s

Number of path formula cache hits:   7233330 (54%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:   379.620s

Total number of created targets for pointer analysis: 432416
   Number of created targets for uf: *(void)* is 8017
   Number of created targets for uf: *unsigned_short_int is 19686
   Number of created targets for uf: *(struct_sk_buff)* is 1003
   Number of created targets for uf: *unsigned_char is 27
   Number of created targets for uf: *(struct_list_head)* is 35
   Number of created targets for uf: *unsigned_long_long_int is 18
   Number of created targets for uf: *unsigned_int is 50
   Number of created targets for uf: *(struct_device)* is 13


Number of BDD nodes:                               246
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         312 (count: 2873144, min: 0, max: 116, avg: 0.00)
Time for BDD node cleanup:                             0.412s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                 35.171s
  Time for transition matches:                        10.438s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.001s
Automaton transfers with branching:                0
Automaton transfer successors:                     12023251 (count: 12023251, min: 1, max: 1, avg: 1.00) [1 x 12023251]

CPA algorithm statistics
------------------------
Number of iterations:            7746188
Max size of waitlist:            325
Average size of waitlist:        148
Number of computed successors:   8880970
Max successors for one state:    2
Number of times merged:          511382
Number of times stopped:         1133582
Number of times breaked:         10

Total time for CPA algorithm:       862.315s (Max:   109.678s)
  Time for choose from waitlist:      4.014s
  Time for precision adjustment:    135.222s
  Time for transfer relation:       638.403s
  Time for merge operator:           28.592s
  Time for stop operator:            11.989s
  Time for adding to reached set:    18.836s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   10
Avg. length of target path (in blocks):                 484 (count: 10, min: 30, max: 94, avg: 48.40)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  26.302s
  Counterexample analysis:                             0.308s (Max:     0.071s, Calls: 10)
    Refinement sat check:                              0.200s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.015s
  Precision update:                                    0.004s
  ARG update:                                         25.964s

Length of refined path (in blocks):                     394 (count: 10, min: 22, max: 93, avg: 39.40)
Number of affected states:                              214 (count: 10, min: 1, max: 74, avg: 21.40)
Length (states) of path with itp 'true':                170 (count: 10, min: 0, max: 20, avg: 17.00)
Length (states) of path with itp non-trivial itp:       214 (count: 10, min: 1, max: 74, avg: 21.40)
Length (states) of path with itp 'false':                10 (count: 10, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           6 (count: 10, min: 0, max: 1, avg: 0.60)
Equal non-trivial interpolants along paths:             198 (count: 10, min: 0, max: 72, avg: 19.80)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                10
Number of successful refinements:     10
Number of failed refinements:         0
Max. size of reached set before ref.: 856615
Max. size of reached set after ref.:  92
Avg. size of reached set before ref.: 743456.90
Avg. size of reached set after ref.:  81.10

Total time for CEGAR algorithm:     893.025s
Time for refinements:                30.710s
Average time for refinement:          3.071s
Max time for refinement:              4.738s

Code Coverage
-----------------------------
  Function coverage:      0.490
  Visited lines:          2819
  Total lines:            4556
  Line coverage:          0.619
  Visited conditions:     584
  Total conditions:       1132
  Condition coverage:     0.516

CPAchecker general statistics
-----------------------------
Number of program locations:     6452
Number of CFA edges:             7604
Number of relevant variables:    1079
Number of functions:             253
Number of loops:                 42
Size of reached set:             313520
  Number of reached locations:   1879 (29%)
    Avg states per location:     166
    Max states per location:     12850 (at node N970)
  Number of reached functions:   124 (49%)
  Number of partitions:          313516
    Avg size of partitions:      1
    Max size of partitions:      4 (with key [N4958 (before line 12240), Function main called from node N4891, stack depth 1 [314a31b0], stack [main]])
  Number of target states:       0
  Size of final wait list        200

Time for analysis setup:          7.219s
  Time for loading CPAs:          1.050s
  Time for loading parser:        0.699s
  Time for CFA construction:      5.295s
    Time for parsing file(s):     1.215s
    Time for AST to CFA:          2.038s
    Time for CFA sanity check:    0.400s
    Time for post-processing:     1.406s
      Time for var class.:        0.676s
Time for Analysis:              893.025s
CPU time for analysis:          892.990s
Total time for CPAchecker:      900.253s
Total CPU time for CPAchecker:  900.200s
Time for statistics:              3.653s

Time for Garbage Collector:     136.725s (in 221 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:               5013MB (  4780 MiB) max;   2435MB (  2322 MiB) avg;   5234MB (  4991 MiB) peak
Used non-heap memory:             40MB (    38 MiB) max;     39MB (    37 MiB) avg;     41MB (    39 MiB) peak
Allocated heap memory:          5414MB (  5163 MiB) max;   3583MB (  3417 MiB) avg
Allocated non-heap memory:        43MB (    41 MiB) max;     42MB (    40 MiB) avg
Total process virtual memory:   8086MB (  7711 MiB) max;   8083MB (  7709 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
