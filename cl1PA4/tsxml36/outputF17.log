scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.16-rc1/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--wireless--zd1211rw--zd1211rw.ko-entry_point_true-unreach-call.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_a9oswkv9/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 16474: Dead code detected: __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "m" (__preempt_count)); (CFACreationUtils.addEdgeToCFA, INFO)

line 16477: Dead code detected: __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "m" (__preempt_count)); (CFACreationUtils.addEdgeToCFA, INFO)

line 16483: Dead code detected: __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret__): "m" (__preempt_count)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (4UL) {
  case 1UL:
  __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "m" (__preempt_count));
  goto ldv_6004;
  case 2UL:
  __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "m" (__preempt_count));
  goto ldv_6004;
  case 4UL:
  __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "m" (__preempt_count));
  goto ldv_6004;
  case 8UL:
  __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret__): "m" (__preempt_count));
  goto ldv_6004;
  default:
  __bad_percpu_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 16321: Function pointer *(rf->patch_6m_band_edge) with type int (*)(struct zd_rf *, u8 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 16201: Function pointer *(rf->set_channel) with type int (*)(struct zd_rf *, u8 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_pr_debug to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_deregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function destroy_workqueue to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_printk to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ieee80211_unregister_hw to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_kill_anchored_urbs to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock_nested to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tasklet_kill to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function cancel_delayed_work_sync to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_kill_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_free_coherent to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_free_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_reset_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function flush_workqueue to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_put_intf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dump_stack to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 16056: Ignoring function call through function pointer *(rf->clear): (*(rf->clear))(rf); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function mutex_destroy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ieee80211_free_hw to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_dev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_final_state to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __alloc_workqueue_key to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ieee80211_alloc_hw to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_control_msg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ieee80211_register_hw to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _dev_info to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __raw_spin_lock_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __mutex_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_get_intf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __init_waitqueue_head to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __init_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function lockdep_init_map to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function init_timer_key to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_bulk_msg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 12981: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp = ldv_zalloc(8UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function _raw_spin_lock_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function kfree_skb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 16201: Ignoring function call through function pointer *(rf->set_channel): r = (*(rf->set_channel))(rf, (int)channel); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 16321: Ignoring function call through function pointer *(rf->patch_6m_band_edge): tmp = (*(rf->patch_6m_band_edge))(rf, (int)channel); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function scnprintf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function request_firmware to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function release_firmware to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_reset_configuration to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_warn to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ieee80211_beacon_get_tim to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_alloc_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function cancel_work_sync to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_alloc_coherent to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_submit_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_anchor_empty to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_anchor_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_unanchor_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_wait_anchor_empty_timeout to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function regulatory_hint to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function msleep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 16250: Ignoring function call through function pointer *(rf->switch_radio_on): t = (*(rf->switch_radio_on))(rf); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function ieee80211_wake_queues to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function skb_push to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function consume_skb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function skb_queue_tail to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function skb_unlink to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ieee80211_stop_queues to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            1317039 (22% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  1207975 (92%)
  Because of loop head:            106777 (8%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         2287 (0%)
  Times precision was empty:       373235 (28%)
  Times precision was {false}:     3254 (0%)
  Times result was cached:         935267 (71%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      5283 (0%)
  Times result was 'false':        18362 (1%)
Number of strengthen sat checks:   0
Number of coverage checks:         591637
  BDD entailment checks:           210699
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       45
Number of predicates discovered:          6
Number of abstraction locations:          547
Max number of predicates per location:    4
Avg number of predicates per location:    1
Total predicates per abstraction:         1699698
Max number of predicates per abstraction: 4
Avg number of predicates per abstraction: 199.10
Number of irrelevant predicates:          888068 (52%)
Number of preds handled by boolean abs:   6771 (0%)
  Total number of models for allsat:      5358
  Max number of models for allsat:        6
  Avg number of models for allsat:        1.01

Time for post operator:                 79.511s
  Time for path formula creation:       77.074s
Time for strengthen operator:            4.718s
Time for prec operator:                291.967s
  Time for abstraction:                273.028s (Max:     0.748s, Count: 1317039)
    Boolean abstraction:                59.649s
    Solving time:                      111.043s (Max:     0.440s)
    Model enumeration time:              2.199s
    Time for BDD construction:           0.145s (Max:     0.009s)
Time for merge operator:                 3.354s
Time for coverage check:                 0.344s
  Time for BDD entailment checks:        0.230s
Total time for SMT solver (w/o itp):   113.242s

Number of path formula cache hits:   7170935 (96%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    37.569s

Total number of created targets for pointer analysis: 571627
   Number of created targets for uf: *unsigned_short_int is 637
   Number of created targets for uf: *(void)* is 37
   Number of created targets for uf: *(struct_sk_buff)* is 17
   Number of created targets for uf: *signed_int is 361
   Number of created targets for uf: *unsigned_char is 145
   Number of created targets for uf: *(struct_list_head)* is 28
   Number of created targets for uf: *unsigned_int is 559
   Number of created targets for uf: *char is 169
   Number of created targets for uf: *(struct_device)* is 5
   Number of created targets for uf: *unsigned_long_int is 127


Number of BDD nodes:                               317
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       10666 (count: 634325, min: 0, max: 278, avg: 0.02)
Time for BDD node cleanup:                             0.106s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  8.230s
  Time for transition matches:                         4.689s
  Time for transition assertions:                      0.012s
  Time for transition actions:                         0.013s
Automaton transfers with branching:                0
Automaton transfer successors:                      6012861 (count: 6012861, min: 1, max: 1, avg: 1.00) [1 x 6012861]

CPA algorithm statistics
------------------------
Number of iterations:            4080009
Max size of waitlist:            173
Average size of waitlist:        71
Number of computed successors:   4471484
Max successors for one state:    2
Number of times merged:          190469
Number of times stopped:         329841
Number of times breaked:         2287

Total time for CPA algorithm:       519.612s (Max:     5.768s)
  Time for choose from waitlist:      1.812s
  Time for precision adjustment:    319.821s
  Time for transfer relation:       169.177s
  Time for merge operator:            6.017s
  Time for stop operator:             4.683s
  Time for adding to reached set:     7.012s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   2287
Avg. length of target path (in blocks):              295620 (count: 2287, min: 31, max: 395, avg: 129.26)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                 338.066s
  Counterexample analysis:                           326.804s (Max:     1.077s, Calls: 2287)
    Refinement sat check:                            250.931s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.182s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.814s
  Precision update:                                    1.922s
  ARG update:                                          7.075s

Length of refined path (in blocks):                  290384 (count: 2286, min: 4, max: 394, avg: 127.03)
Number of affected states:                           126788 (count: 2286, min: 1, max: 206, avg: 55.46)
Length (states) of path with itp 'true':             161310 (count: 2286, min: 0, max: 187, avg: 70.56)
Length (states) of path with itp non-trivial itp:    126788 (count: 2286, min: 1, max: 206, avg: 55.46)
Length (states) of path with itp 'false':              2286 (count: 2286, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 2286, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:          124502 (count: 2286, min: 0, max: 205, avg: 54.46)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                2287
Number of successful refinements:     2286
Number of failed refinements:         0
Max. size of reached set before ref.: 34186
Max. size of reached set after ref.:  23281
Avg. size of reached set before ref.: 9440.03
Avg. size of reached set after ref.:  7640.45

Total time for CEGAR algorithm:     890.169s
Time for refinements:               358.744s
Average time for refinement:          0.156s
Max time for refinement:              1.129s

Code Coverage
-----------------------------
  Function coverage:      0.467
  Visited lines:          3680
  Total lines:            8993
  Line coverage:          0.409
  Visited conditions:     612
  Total conditions:       1684
  Condition coverage:     0.363

CPAchecker general statistics
-----------------------------
Number of program locations:     11862
Number of CFA edges:             13403
Number of relevant variables:    2119
Number of functions:             458
Number of loops:                 55
Size of reached set:             30257
  Number of reached locations:   2334 (20%)
    Avg states per location:     12
    Max states per location:     1363 (at node N63)
  Number of reached functions:   214 (47%)
  Number of partitions:          30240
    Avg size of partitions:      1
    Max size of partitions:      5 (with key [N10717 (before line 20073), Function main called from node N10703, stack depth 1 [2b30b627], stack [main]])
  Number of target states:       1
  Size of final wait list        168

Time for analysis setup:         10.195s
  Time for loading CPAs:          1.369s
  Time for loading parser:        0.686s
  Time for CFA construction:      7.975s
    Time for parsing file(s):     1.596s
    Time for AST to CFA:          3.032s
    Time for CFA sanity check:    1.017s
    Time for post-processing:     2.181s
      Time for var class.:        1.160s
Time for Analysis:              890.169s
CPU time for analysis:          890.060s
Total time for CPAchecker:      900.369s
Total CPU time for CPAchecker:  900.240s
Time for statistics:              0.654s

Time for Garbage Collector:      28.333s (in 1485 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                332MB (   317 MiB) max;    183MB (   175 MiB) avg;    354MB (   338 MiB) peak
Used non-heap memory:             42MB (    40 MiB) max;     41MB (    39 MiB) avg;     43MB (    41 MiB) peak
Allocated heap memory:           395MB (   376 MiB) max;    269MB (   257 MiB) avg
Allocated non-heap memory:        44MB (    42 MiB) max;     43MB (    41 MiB) avg
Total process virtual memory:   8302MB (  7917 MiB) max;   8196MB (  7817 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
