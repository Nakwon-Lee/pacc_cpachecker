scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.16-rc1/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--wireless--zd1211rw--zd1211rw.ko-entry_point_true-unreach-call.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_6_1jcrox/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 16474: Dead code detected: __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "m" (__preempt_count)); (CFACreationUtils.addEdgeToCFA, INFO)

line 16477: Dead code detected: __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "m" (__preempt_count)); (CFACreationUtils.addEdgeToCFA, INFO)

line 16483: Dead code detected: __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret__): "m" (__preempt_count)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (4UL) {
  case 1UL:
  __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "m" (__preempt_count));
  goto ldv_6004;
  case 2UL:
  __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "m" (__preempt_count));
  goto ldv_6004;
  case 4UL:
  __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "m" (__preempt_count));
  goto ldv_6004;
  case 8UL:
  __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret__): "m" (__preempt_count));
  goto ldv_6004;
  default:
  __bad_percpu_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 16321: Function pointer *(rf->patch_6m_band_edge) with type int (*)(struct zd_rf *, u8 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 16201: Function pointer *(rf->set_channel) with type int (*)(struct zd_rf *, u8 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_pr_debug to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_deregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function destroy_workqueue to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_printk to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ieee80211_unregister_hw to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_kill_anchored_urbs to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock_nested to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_kill_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_free_coherent to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_free_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tasklet_kill to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function cancel_delayed_work_sync to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_reset_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function flush_workqueue to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_put_intf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 16056: Ignoring function call through function pointer *(rf->clear): (*(rf->clear))(rf); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function mutex_destroy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dump_stack to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ieee80211_free_hw to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_dev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __alloc_workqueue_key to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ieee80211_alloc_hw to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __raw_spin_lock_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __mutex_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_get_intf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __init_waitqueue_head to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __init_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function lockdep_init_map to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function init_timer_key to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 12981: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp = ldv_zalloc(8UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function _raw_spin_lock_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_interrupt_msg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_bulk_msg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function msecs_to_jiffies to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function wait_for_completion_timeout to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_anchor_empty to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_final_state to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_alloc_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_anchor_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_submit_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_unanchor_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_wait_anchor_empty_timeout to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function kfree_skb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _dev_info to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_control_msg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ieee80211_register_hw to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 16201: Ignoring function call through function pointer *(rf->set_channel): r = (*(rf->set_channel))(rf, (int)channel); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 16321: Ignoring function call through function pointer *(rf->patch_6m_band_edge): tmp = (*(rf->patch_6m_band_edge))(rf, (int)channel); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            536304 (23% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  499093 (93%)
  Because of loop head:            34990 (7%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         2221 (0%)
  Times precision was empty:       158267 (30%)
  Times precision was {false}:     2168 (0%)
  Times result was cached:         373942 (70%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      1927 (0%)
  Times result was 'false':        3359 (1%)
Number of strengthen sat checks:   0
Number of coverage checks:         218311
  BDD entailment checks:           103937
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       45
Number of predicates discovered:          5
Number of abstraction locations:          304
Max number of predicates per location:    4
Avg number of predicates per location:    1
Total predicates per abstraction:         432890
Max number of predicates per abstraction: 4
Avg number of predicates per abstraction: 105.71
Number of irrelevant predicates:          274527 (63%)
Number of preds handled by boolean abs:   2009 (0%)
  Total number of models for allsat:      1941
  Max number of models for allsat:        4
  Avg number of models for allsat:        1.01

Time for post operator:                 53.804s
  Time for path formula creation:       52.642s
Time for strengthen operator:            2.168s
Time for prec operator:                144.658s
  Time for abstraction:                135.562s (Max:     0.712s, Count: 536304)
    Boolean abstraction:                32.556s
    Solving time:                       70.851s (Max:     0.685s)
    Model enumeration time:              0.907s
    Time for BDD construction:           0.088s (Max:     0.009s)
Time for merge operator:                 1.944s
Time for coverage check:                 0.169s
  Time for BDD entailment checks:        0.139s
Total time for SMT solver (w/o itp):    71.758s

Number of path formula cache hits:   2701174 (94%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    33.269s

Total number of created targets for pointer analysis: 571292
   Number of created targets for uf: *unsigned_short_int is 47674
   Number of created targets for uf: *(void)* is 44
   Number of created targets for uf: *(struct_sk_buff)* is 9
   Number of created targets for uf: *signed_int is 601
   Number of created targets for uf: *unsigned_char is 21
   Number of created targets for uf: *(struct_list_head)* is 44
   Number of created targets for uf: *_Bool is 391
   Number of created targets for uf: *unsigned_int is 5656
   Number of created targets for uf: *(struct_device)* is 4


Number of BDD nodes:                               228
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        3901 (count: 284660, min: 0, max: 318, avg: 0.01)
Time for BDD node cleanup:                             0.078s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  3.563s
  Time for transition matches:                         1.912s
  Time for transition assertions:                      0.002s
  Time for transition actions:                         0.024s
Automaton transfers with branching:                0
Automaton transfer successors:                      2332265 (count: 2332265, min: 1, max: 1, avg: 1.00) [1 x 2332265]

CPA algorithm statistics
------------------------
Number of iterations:            1572848
Max size of waitlist:            38
Average size of waitlist:        25
Number of computed successors:   1718715
Max successors for one state:    2
Number of times merged:          57187
Number of times stopped:         135429
Number of times breaked:         2221

Total time for CPA algorithm:       261.644s (Max:     7.540s)
  Time for choose from waitlist:      0.709s
  Time for precision adjustment:    157.080s
  Time for transfer relation:        91.256s
  Time for merge operator:            3.233s
  Time for stop operator:             2.098s
  Time for adding to reached set:     2.769s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   2221
Avg. length of target path (in blocks):              444298 (count: 2221, min: 26, max: 347, avg: 200.04)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                 573.051s
  Counterexample analysis:                           566.008s (Max:     1.005s, Calls: 2221)
    Refinement sat check:                            425.354s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.289s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.932s
  Precision update:                                    1.124s
  ARG update:                                          3.059s

Length of refined path (in blocks):                  440261 (count: 2220, min: 4, max: 346, avg: 198.32)
Number of affected states:                           146876 (count: 2220, min: 1, max: 309, avg: 66.16)
Length (states) of path with itp 'true':             291165 (count: 2220, min: 0, max: 208, avg: 131.16)
Length (states) of path with itp non-trivial itp:    146876 (count: 2220, min: 1, max: 309, avg: 66.16)
Length (states) of path with itp 'false':              2220 (count: 2220, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 2220, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:          144656 (count: 2220, min: 0, max: 308, avg: 65.16)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                2221
Number of successful refinements:     2220
Number of failed refinements:         0
Max. size of reached set before ref.: 28873
Max. size of reached set after ref.:  28066
Avg. size of reached set before ref.: 14886.81
Avg. size of reached set after ref.:  14181.83

Total time for CEGAR algorithm:     890.740s
Time for refinements:               606.509s
Average time for refinement:          0.273s
Max time for refinement:              1.026s

Code Coverage
-----------------------------
  Function coverage:      0.290
  Visited lines:          2835
  Total lines:            8993
  Line coverage:          0.315
  Visited conditions:     408
  Total conditions:       1684
  Condition coverage:     0.242

CPAchecker general statistics
-----------------------------
Number of program locations:     11862
Number of CFA edges:             13403
Number of relevant variables:    2119
Number of functions:             458
Number of loops:                 55
Size of reached set:             8710
  Number of reached locations:   1530 (13%)
    Avg states per location:     5
    Max states per location:     237 (at node N63)
  Number of reached functions:   133 (29%)
  Number of partitions:          8702
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N10717 (before line 20073), Function main called from node N10703, stack depth 1 [1107c465], stack [main]])
  Number of target states:       1
  Size of final wait list        28

Time for analysis setup:          9.530s
  Time for loading CPAs:          1.186s
  Time for loading parser:        0.710s
  Time for CFA construction:      7.467s
    Time for parsing file(s):     1.432s
    Time for AST to CFA:          2.667s
    Time for CFA sanity check:    0.759s
    Time for post-processing:     2.428s
      Time for var class.:        1.242s
Time for Analysis:              890.740s
CPU time for analysis:          890.650s
Total time for CPAchecker:      900.284s
Total CPU time for CPAchecker:  900.180s
Time for statistics:              0.265s

Time for Garbage Collector:      12.665s (in 913 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                255MB (   243 MiB) max;    146MB (   139 MiB) avg;    263MB (   250 MiB) peak
Used non-heap memory:             42MB (    40 MiB) max;     41MB (    39 MiB) avg;     42MB (    40 MiB) peak
Allocated heap memory:           271MB (   258 MiB) max;    214MB (   204 MiB) avg
Allocated non-heap memory:        44MB (    42 MiB) max;     44MB (    42 MiB) avg
Total process virtual memory:   8227MB (  7846 MiB) max;   8174MB (  7795 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
