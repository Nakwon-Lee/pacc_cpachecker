scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.16-rc1/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--wireless--zd1211rw--zd1211rw.ko-entry_point_true-unreach-call.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_jmdfl6vx/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 16474: Dead code detected: __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "m" (__preempt_count)); (CFACreationUtils.addEdgeToCFA, INFO)

line 16477: Dead code detected: __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "m" (__preempt_count)); (CFACreationUtils.addEdgeToCFA, INFO)

line 16483: Dead code detected: __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret__): "m" (__preempt_count)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (4UL) {
  case 1UL:
  __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "m" (__preempt_count));
  goto ldv_6004;
  case 2UL:
  __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "m" (__preempt_count));
  goto ldv_6004;
  case 4UL:
  __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "m" (__preempt_count));
  goto ldv_6004;
  case 8UL:
  __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret__): "m" (__preempt_count));
  goto ldv_6004;
  default:
  __bad_percpu_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 16321: Function pointer *(rf->patch_6m_band_edge) with type int (*)(struct zd_rf *, u8 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 16201: Function pointer *(rf->set_channel) with type int (*)(struct zd_rf *, u8 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_pr_debug to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_deregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function destroy_workqueue to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_printk to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ieee80211_unregister_hw to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_kill_anchored_urbs to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock_nested to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tasklet_kill to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function cancel_delayed_work_sync to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_kill_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_free_coherent to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_free_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_reset_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function flush_workqueue to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_put_intf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dump_stack to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 16056: Ignoring function call through function pointer *(rf->clear): (*(rf->clear))(rf); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function mutex_destroy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ieee80211_free_hw to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_dev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_final_state to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __alloc_workqueue_key to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ieee80211_alloc_hw to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_control_msg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ieee80211_register_hw to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _dev_info to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __raw_spin_lock_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __mutex_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_get_intf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __init_waitqueue_head to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __init_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function lockdep_init_map to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function init_timer_key to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_bulk_msg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            11067 (21% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  10407 (94%)
  Because of loop head:            635 (6%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         25 (0%)
  Times precision was empty:       5565 (50%)
  Times precision was {false}:     432 (4%)
  Times result was cached:         4644 (42%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      426 (4%)
  Times result was 'false':        143 (1%)
Number of strengthen sat checks:   0
Number of coverage checks:         4871
  BDD entailment checks:           1763
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       45
Number of predicates discovered:          4
Number of abstraction locations:          153
Max number of predicates per location:    3
Avg number of predicates per location:    1
Total predicates per abstraction:         7777
Max number of predicates per abstraction: 3
Avg number of predicates per abstraction: 9.06
Number of irrelevant predicates:          4432 (57%)
Number of preds handled by boolean abs:   480 (6%)
  Total number of models for allsat:      432
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.01

Time for post operator:                  6.930s
  Time for path formula creation:        6.752s
Time for strengthen operator:            0.136s
Time for prec operator:                  5.209s
  Time for abstraction:                  4.589s (Max:     0.210s, Count: 11067)
    Boolean abstraction:                 1.075s
    Solving time:                        1.235s (Max:     0.187s)
    Model enumeration time:              0.075s
    Time for BDD construction:           0.089s (Max:     0.010s)
Time for merge operator:                 0.249s
Time for coverage check:                 0.065s
  Time for BDD entailment checks:        0.062s
Total time for SMT solver (w/o itp):     1.310s

Number of path formula cache hits:   39809 (66%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     6.053s

Total number of created targets for pointer analysis: 7858
   Number of created targets for uf: *(void)* is 30
   Number of created targets for uf: *signed_int is 121
   Number of created targets for uf: *unsigned_char is 21
   Number of created targets for uf: *(struct_list_head)* is 12
   Number of created targets for uf: *unsigned_int is 185
   Number of created targets for uf: *(struct_device)* is 3


Number of BDD nodes:                               210
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         876 (count: 12089, min: 0, max: 132, avg: 0.07)
Time for BDD node cleanup:                             0.008s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.404s
Automaton transfers with branching:                0
Automaton transfer successors:                        51931 (count: 51931, min: 1, max: 1, avg: 1.00) [1 x 51931]

CPA algorithm statistics
------------------------
Number of iterations:            34378
Max size of waitlist:            15
Average size of waitlist:        6
Number of computed successors:   37222
Max successors for one state:    2
Number of times merged:          1554
Number of times stopped:         2582
Number of times breaked:         25

Total time for CPA algorithm:        17.178s (Max:     2.117s)
  Time for choose from waitlist:      0.123s
  Time for precision adjustment:      5.937s
  Time for transfer relation:         9.532s
  Time for merge operator:            0.404s
  Time for stop operator:             0.230s
  Time for adding to reached set:     0.270s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   25
Avg. length of target path (in blocks):                2362 (count: 25, min: 31, max: 137, avg: 94.48)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   3.430s
  Counterexample analysis:                             3.034s (Max:     0.231s, Calls: 25)
    Refinement sat check:                              2.266s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.071s
  Precision update:                                    0.058s
  ARG update:                                          0.195s

Length of refined path (in blocks):                    2168 (count: 25, min: 4, max: 136, avg: 86.72)
Number of affected states:                             1505 (count: 25, min: 1, max: 132, avg: 60.20)
Length (states) of path with itp 'true':                638 (count: 25, min: 0, max: 72, avg: 25.52)
Length (states) of path with itp non-trivial itp:      1505 (count: 25, min: 1, max: 132, avg: 60.20)
Length (states) of path with itp 'false':                25 (count: 25, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 25, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:            1480 (count: 25, min: 0, max: 131, avg: 59.20)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                25
Number of successful refinements:     25
Number of failed refinements:         0
Max. size of reached set before ref.: 2222
Max. size of reached set after ref.:  1421
Avg. size of reached set before ref.: 1806.56
Avg. size of reached set after ref.:  480.20

Total time for CEGAR algorithm:      20.870s
Time for refinements:                 3.651s
Average time for refinement:          0.146s
Max time for refinement:              0.265s

Code Coverage
-----------------------------
  Function coverage:      0.148
  Visited lines:          1697
  Total lines:            8993
  Line coverage:          0.189
  Visited conditions:     132
  Total conditions:       1684
  Condition coverage:     0.078

CPAchecker general statistics
-----------------------------
Number of program locations:     11862
Number of CFA edges:             13403
Number of relevant variables:    2119
Number of functions:             458
Number of loops:                 55
Size of reached set:             1339
  Number of reached locations:   576 (5%)
    Avg states per location:     2
    Max states per location:     25 (at node N63)
  Number of reached functions:   68 (15%)
  Number of partitions:          1318
    Avg size of partitions:      1
    Max size of partitions:      4 (with key [N10717 (before line 20073), Function main called from node N10703, stack depth 1 [2b30b627], stack [main]])
  Number of target states:       0
  Size of final wait list        6

Time for analysis setup:          9.352s
  Time for loading CPAs:          1.209s
  Time for loading parser:        0.703s
  Time for CFA construction:      7.313s
    Time for parsing file(s):     1.468s
    Time for AST to CFA:          2.729s
    Time for CFA sanity check:    0.640s
    Time for post-processing:     2.170s
      Time for var class.:        1.319s
Time for Analysis:               20.870s
CPU time for analysis:           20.870s
Total time for CPAchecker:       30.236s
Total CPU time for CPAchecker:   30.210s
Time for statistics:              0.151s

Time for Garbage Collector:       0.700s (in 38 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 91MB (    87 MiB) max;     59MB (    57 MiB) avg;     98MB (    93 MiB) peak
Used non-heap memory:             42MB (    40 MiB) max;     35MB (    33 MiB) avg;     42MB (    40 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        44MB (    42 MiB) max;     36MB (    35 MiB) avg
Total process virtual memory:   8087MB (  7712 MiB) max;   8069MB (  7695 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
