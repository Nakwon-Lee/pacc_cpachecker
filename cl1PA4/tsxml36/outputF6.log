scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.16-rc1/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--wireless--zd1211rw--zd1211rw.ko-entry_point_true-unreach-call.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_jeig6m8r/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 16474: Dead code detected: __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "m" (__preempt_count)); (CFACreationUtils.addEdgeToCFA, INFO)

line 16477: Dead code detected: __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "m" (__preempt_count)); (CFACreationUtils.addEdgeToCFA, INFO)

line 16483: Dead code detected: __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret__): "m" (__preempt_count)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (4UL) {
  case 1UL:
  __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "m" (__preempt_count));
  goto ldv_6004;
  case 2UL:
  __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "m" (__preempt_count));
  goto ldv_6004;
  case 4UL:
  __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "m" (__preempt_count));
  goto ldv_6004;
  case 8UL:
  __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret__): "m" (__preempt_count));
  goto ldv_6004;
  default:
  __bad_percpu_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 16321: Function pointer *(rf->patch_6m_band_edge) with type int (*)(struct zd_rf *, u8 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 16201: Function pointer *(rf->set_channel) with type int (*)(struct zd_rf *, u8 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 12981: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp = ldv_zalloc(8UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function __dynamic_pr_debug to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __alloc_workqueue_key to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_deregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_printk to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function destroy_workqueue to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ieee80211_unregister_hw to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_kill_anchored_urbs to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_reset_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ieee80211_alloc_hw to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __raw_spin_lock_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock_nested to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_kill_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_free_coherent to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_free_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tasklet_kill to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function cancel_delayed_work_sync to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_anchor_empty to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dump_stack to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function flush_workqueue to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_put_intf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 16056: Ignoring function call through function pointer *(rf->clear): (*(rf->clear))(rf); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function mutex_destroy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ieee80211_free_hw to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_dev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_final_state to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_alloc_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_anchor_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_submit_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_unanchor_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_wait_anchor_empty_timeout to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_interrupt_msg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_bulk_msg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function msecs_to_jiffies to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function wait_for_completion_timeout to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __mutex_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_get_intf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __init_waitqueue_head to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __init_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function lockdep_init_map to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function init_timer_key to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _dev_info to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_control_msg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ieee80211_beacon_get_tim to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_alloc_coherent to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function scnprintf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function request_firmware to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function release_firmware to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_warn to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_reset_configuration to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            517060 (21% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  482416 (93%)
  Because of loop head:            34193 (7%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         451 (0%)
  Times precision was empty:       145355 (28%)
  Times precision was {false}:     2509 (0%)
  Times result was cached:         366440 (71%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      2756 (1%)
  Times result was 'false':        9149 (2%)
Number of strengthen sat checks:   0
Number of coverage checks:         233338
  BDD entailment checks:           75896
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       359
Number of predicates discovered:          5
Number of abstraction locations:          406
Max number of predicates per location:    4
Avg number of predicates per location:    1
Total predicates per abstraction:         423630
Max number of predicates per abstraction: 4
Avg number of predicates per abstraction: 80.46
Number of irrelevant predicates:          106005 (25%)
Number of preds handled by boolean abs:   2834 (1%)
  Total number of models for allsat:      2769
  Max number of models for allsat:        4
  Avg number of models for allsat:        1.00

Time for post operator:                 51.705s
  Time for path formula creation:       50.600s
Time for strengthen operator:            2.077s
Time for prec operator:                279.089s
  Time for abstraction:                270.609s (Max:    12.447s, Count: 517060)
    Boolean abstraction:                87.879s
    Solving time:                      160.439s (Max:    10.507s)
    Model enumeration time:              2.756s
    Time for BDD construction:           0.083s (Max:     0.003s)
Time for merge operator:                 1.898s
Time for coverage check:                 0.153s
  Time for BDD entailment checks:        0.130s
Total time for SMT solver (w/o itp):   163.195s

Number of path formula cache hits:   2847649 (96%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    32.979s

Total number of created targets for pointer analysis: 856488
   Number of created targets for uf: *unsigned_short_int is 802
   Number of created targets for uf: *(void)* is 46
   Number of created targets for uf: *signed_int is 601
   Number of created targets for uf: *unsigned_char is 45
   Number of created targets for uf: *(struct_list_head)* is 12
   Number of created targets for uf: *_Bool is 283
   Number of created targets for uf: *unsigned_int is 1049
   Number of created targets for uf: *char is 57
   Number of created targets for uf: *(struct_device)* is 3


Number of BDD nodes:                               231
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        5578 (count: 250399, min: 0, max: 280, avg: 0.02)
Time for BDD node cleanup:                             0.036s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  3.504s
  Time for transition matches:                         1.975s
  Time for transition assertions:                      0.001s
  Time for transition actions:                         0.007s
Automaton transfers with branching:                0
Automaton transfer successors:                      2407288 (count: 2407288, min: 1, max: 1, avg: 1.00) [1 x 2407288]

CPA algorithm statistics
------------------------
Number of iterations:            1624110
Max size of waitlist:            53
Average size of waitlist:        34
Number of computed successors:   1788805
Max successors for one state:    2
Number of times merged:          78721
Number of times stopped:         151714
Number of times breaked:         451

Total time for CPA algorithm:       392.996s (Max:    19.050s)
  Time for choose from waitlist:      0.783s
  Time for precision adjustment:    291.432s
  Time for transfer relation:        87.636s
  Time for merge operator:            3.020s
  Time for stop operator:             2.138s
  Time for adding to reached set:     2.765s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   451
Avg. length of target path (in blocks):               65772 (count: 451, min: 22, max: 509, avg: 145.84)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                 498.548s
  Counterexample analysis:                           493.761s (Max:    15.123s, Calls: 451)
    Refinement sat check:                            445.161s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.042s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.270s
  Precision update:                                    0.324s
  ARG update:                                          3.701s

Length of refined path (in blocks):                   63075 (count: 450, min: 4, max: 508, avg: 140.17)
Number of affected states:                            29164 (count: 450, min: 1, max: 507, avg: 64.81)
Length (states) of path with itp 'true':              33461 (count: 450, min: 0, max: 196, avg: 74.36)
Length (states) of path with itp non-trivial itp:     29164 (count: 450, min: 1, max: 507, avg: 64.81)
Length (states) of path with itp 'false':               450 (count: 450, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 450, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:           28714 (count: 450, min: 0, max: 506, avg: 63.81)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                451
Number of successful refinements:     450
Number of failed refinements:         0
Max. size of reached set before ref.: 57161
Max. size of reached set after ref.:  15504
Avg. size of reached set before ref.: 8596.99
Avg. size of reached set after ref.:  4998.44

Total time for CEGAR algorithm:     896.993s
Time for refinements:               502.341s
Average time for refinement:          1.113s
Max time for refinement:             15.263s

Code Coverage
-----------------------------
  Function coverage:      0.279
  Visited lines:          3744
  Total lines:            8993
  Line coverage:          0.416
  Visited conditions:     532
  Total conditions:       1684
  Condition coverage:     0.316

CPAchecker general statistics
-----------------------------
Number of program locations:     11862
Number of CFA edges:             13403
Number of relevant variables:    2119
Number of functions:             458
Number of loops:                 55
Size of reached set:             57161
  Number of reached locations:   1771 (15%)
    Avg states per location:     32
    Max states per location:     1590 (at node N63)
  Number of reached functions:   128 (28%)
  Number of partitions:          57150
    Avg size of partitions:      1
    Max size of partitions:      3 (with key [N10717 (before line 20073), Function main called from node N10703, stack depth 1 [1107c465], stack [main]])
  Number of target states:       1
  Size of final wait list        42

Time for analysis setup:          9.477s
  Time for loading CPAs:          1.222s
  Time for loading parser:        0.660s
  Time for CFA construction:      7.446s
    Time for parsing file(s):     1.517s
    Time for AST to CFA:          2.714s
    Time for CFA sanity check:    0.702s
    Time for post-processing:     2.258s
      Time for var class.:        1.261s
Time for Analysis:              896.993s
CPU time for analysis:          896.860s
Total time for CPAchecker:      906.474s
Total CPU time for CPAchecker:  906.310s
Time for statistics:              0.965s

Time for Garbage Collector:      29.141s (in 944 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                289MB (   275 MiB) max;    150MB (   143 MiB) avg;    305MB (   291 MiB) peak
Used non-heap memory:             41MB (    39 MiB) max;     40MB (    38 MiB) avg;     42MB (    40 MiB) peak
Allocated heap memory:           298MB (   284 MiB) max;    220MB (   210 MiB) avg
Allocated non-heap memory:        44MB (    42 MiB) max;     43MB (    41 MiB) avg
Total process virtual memory:   8921MB (  8508 MiB) max;   8642MB (  8242 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
