scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.16-rc1/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--wireless--zd1211rw--zd1211rw.ko-entry_point_true-unreach-call.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_2i5di7my/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 16474: Dead code detected: __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "m" (__preempt_count)); (CFACreationUtils.addEdgeToCFA, INFO)

line 16477: Dead code detected: __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "m" (__preempt_count)); (CFACreationUtils.addEdgeToCFA, INFO)

line 16483: Dead code detected: __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret__): "m" (__preempt_count)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (4UL) {
  case 1UL:
  __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "m" (__preempt_count));
  goto ldv_6004;
  case 2UL:
  __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "m" (__preempt_count));
  goto ldv_6004;
  case 4UL:
  __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "m" (__preempt_count));
  goto ldv_6004;
  case 8UL:
  __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret__): "m" (__preempt_count));
  goto ldv_6004;
  default:
  __bad_percpu_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 16321: Function pointer *(rf->patch_6m_band_edge) with type int (*)(struct zd_rf *, u8 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 16201: Function pointer *(rf->set_channel) with type int (*)(struct zd_rf *, u8 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_printk to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_reset_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _dev_info to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_bulk_msg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_pr_debug to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_deregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function destroy_workqueue to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_final_state to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __alloc_workqueue_key to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function flush_workqueue to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_put_intf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 16056: Ignoring function call through function pointer *(rf->clear): (*(rf->clear))(rf); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function mutex_destroy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ieee80211_free_hw to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ieee80211_alloc_hw to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ieee80211_register_hw to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dump_stack to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_control_msg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __raw_spin_lock_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __mutex_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_get_intf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __init_waitqueue_head to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __init_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function lockdep_init_map to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function init_timer_key to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ieee80211_unregister_hw to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_kill_anchored_urbs to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock_nested to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tasklet_kill to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function cancel_delayed_work_sync to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_dev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_kill_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_free_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_free_coherent to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 12981: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp = ldv_zalloc(8UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function usb_alloc_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function cancel_work_sync to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_anchor_empty to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_anchor_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_wait_anchor_empty_timeout to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function msleep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 16250: Ignoring function call through function pointer *(rf->switch_radio_on): t = (*(rf->switch_radio_on))(rf); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function ieee80211_wake_queues to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 16300: Ignoring function call through function pointer *(rf->switch_radio_off): t = (*(rf->switch_radio_off))(rf); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function usb_submit_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_unanchor_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function msecs_to_jiffies to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function wait_for_completion_timeout to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_interrupt_msg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            103128 (21% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  98258 (95%)
  Because of loop head:            3848 (4%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         1022 (1%)
  Times precision was empty:       19520 (19%)
  Times precision was {false}:     1051 (1%)
  Times result was cached:         81573 (79%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      984 (1%)
  Times result was 'false':        546 (1%)
Number of strengthen sat checks:   0
Number of coverage checks:         43091
  BDD entailment checks:           14369
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       169
Number of predicates discovered:          4
Number of abstraction locations:          350
Max number of predicates per location:    3
Avg number of predicates per location:    1
Total predicates per abstraction:         105473
Max number of predicates per abstraction: 3
Avg number of predicates per abstraction: 51.83
Number of irrelevant predicates:          78847 (75%)
Number of preds handled by boolean abs:   1042 (1%)
  Total number of models for allsat:      1007
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.02

Time for post operator:                 22.522s
  Time for path formula creation:       22.242s
Time for strengthen operator:            0.579s
Time for prec operator:                 54.441s
  Time for abstraction:                 51.890s (Max:     3.611s, Count: 103128)
    Boolean abstraction:                19.619s
    Solving time:                       32.499s (Max:     2.970s)
    Model enumeration time:              0.683s
    Time for BDD construction:           0.095s (Max:     0.010s)
Time for merge operator:                 0.689s
Time for coverage check:                 0.089s
  Time for BDD entailment checks:        0.076s
Total time for SMT solver (w/o itp):    33.182s

Number of path formula cache hits:   516237 (88%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    16.117s

Total number of created targets for pointer analysis: 249526
   Number of created targets for uf: *unsigned_short_int is 269
   Number of created targets for uf: *(void)* is 13
   Number of created targets for uf: *signed_int is 121
   Number of created targets for uf: *unsigned_char is 913
   Number of created targets for uf: *(struct_list_head)* is 12
   Number of created targets for uf: *_Bool is 40
   Number of created targets for uf: *unsigned_int is 209
   Number of created targets for uf: *(struct_device)* is 3


Number of BDD nodes:                               211
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        1996 (count: 45095, min: 0, max: 294, avg: 0.04)
Time for BDD node cleanup:                             0.011s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  1.198s
  Time for transition matches:                         0.583s
  Time for transition assertions:                      0.001s
  Time for transition actions:                         0.012s
Automaton transfers with branching:                0
Automaton transfer successors:                       483198 (count: 483198, min: 1, max: 1, avg: 1.00) [1 x 483198]

CPA algorithm statistics
------------------------
Number of iterations:            310535
Max size of waitlist:            124
Average size of waitlist:        97
Number of computed successors:   345423
Max successors for one state:    2
Number of times merged:          14361
Number of times stopped:         22187
Number of times breaked:         1022

Total time for CPA algorithm:        92.974s (Max:     8.758s)
  Time for choose from waitlist:      0.242s
  Time for precision adjustment:     57.338s
  Time for transfer relation:        31.426s
  Time for merge operator:            1.025s
  Time for stop operator:             0.622s
  Time for adding to reached set:     0.782s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   1022
Avg. length of target path (in blocks):              384090 (count: 1022, min: 22, max: 437, avg: 375.82)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                 787.676s
  Counterexample analysis:                           784.297s (Max:     5.467s, Calls: 1022)
    Refinement sat check:                            570.188s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.188s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.400s
  Precision update:                                    0.687s
  ARG update:                                          0.843s

Length of refined path (in blocks):                  382461 (count: 1021, min: 4, max: 436, avg: 374.59)
Number of affected states:                            52572 (count: 1021, min: 1, max: 155, avg: 51.49)
Length (states) of path with itp 'true':             328868 (count: 1021, min: 0, max: 386, avg: 322.10)
Length (states) of path with itp non-trivial itp:     52572 (count: 1021, min: 1, max: 155, avg: 51.49)
Length (states) of path with itp 'false':              1021 (count: 1021, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 1021, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:           51551 (count: 1021, min: 0, max: 154, avg: 50.49)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                1022
Number of successful refinements:     1021
Number of failed refinements:         0
Max. size of reached set before ref.: 12577
Max. size of reached set after ref.:  12326
Avg. size of reached set before ref.: 5685.12
Avg. size of reached set after ref.:  5374.64

Total time for CEGAR algorithm:     893.202s
Time for refinements:               796.805s
Average time for refinement:          0.779s
Max time for refinement:              5.486s

Code Coverage
-----------------------------
  Function coverage:      0.380
  Visited lines:          3215
  Total lines:            8993
  Line coverage:          0.358
  Visited conditions:     504
  Total conditions:       1684
  Condition coverage:     0.299

CPAchecker general statistics
-----------------------------
Number of program locations:     11862
Number of CFA edges:             13403
Number of relevant variables:    2119
Number of functions:             458
Number of loops:                 55
Size of reached set:             12577
  Number of reached locations:   1794 (15%)
    Avg states per location:     7
    Max states per location:     371 (at node N64)
  Number of reached functions:   174 (38%)
  Number of partitions:          12568
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N10717 (before line 20073), Function main called from node N10703, stack depth 1 [4fd00e10], stack [main]])
  Number of target states:       1
  Size of final wait list        117

Time for analysis setup:          9.139s
  Time for loading CPAs:          1.224s
  Time for loading parser:        0.762s
  Time for CFA construction:      6.988s
    Time for parsing file(s):     1.480s
    Time for AST to CFA:          2.634s
    Time for CFA sanity check:    0.687s
    Time for post-processing:     1.918s
      Time for var class.:        0.973s
Time for Analysis:              893.202s
CPU time for analysis:          893.120s
Total time for CPAchecker:      902.355s
Total CPU time for CPAchecker:  902.250s
Time for statistics:              0.392s

Time for Garbage Collector:       3.449s (in 372 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                130MB (   124 MiB) max;     92MB (    88 MiB) avg;    138MB (   131 MiB) peak
Used non-heap memory:             41MB (    39 MiB) max;     40MB (    38 MiB) avg;     42MB (    40 MiB) peak
Allocated heap memory:           161MB (   153 MiB) max;    138MB (   131 MiB) avg
Allocated non-heap memory:        43MB (    41 MiB) max;     43MB (    41 MiB) avg
Total process virtual memory:   8425MB (  8035 MiB) max;   8189MB (  7809 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
