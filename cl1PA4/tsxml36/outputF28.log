scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.16-rc1/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--wireless--zd1211rw--zd1211rw.ko-entry_point_true-unreach-call.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_51ugfc34/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 16474: Dead code detected: __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "m" (__preempt_count)); (CFACreationUtils.addEdgeToCFA, INFO)

line 16477: Dead code detected: __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "m" (__preempt_count)); (CFACreationUtils.addEdgeToCFA, INFO)

line 16483: Dead code detected: __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret__): "m" (__preempt_count)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (4UL) {
  case 1UL:
  __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "m" (__preempt_count));
  goto ldv_6004;
  case 2UL:
  __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "m" (__preempt_count));
  goto ldv_6004;
  case 4UL:
  __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "m" (__preempt_count));
  goto ldv_6004;
  case 8UL:
  __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret__): "m" (__preempt_count));
  goto ldv_6004;
  default:
  __bad_percpu_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 16321: Function pointer *(rf->patch_6m_band_edge) with type int (*)(struct zd_rf *, u8 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 16201: Function pointer *(rf->set_channel) with type int (*)(struct zd_rf *, u8 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 12981: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp = ldv_zalloc(8UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function __dynamic_pr_debug to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __alloc_workqueue_key to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_final_state to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_deregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function destroy_workqueue to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_printk to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ieee80211_unregister_hw to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_reset_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_kill_anchored_urbs to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ieee80211_alloc_hw to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock_nested to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ieee80211_beacon_get_tim to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __raw_spin_lock_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function flush_workqueue to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function skb_push to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function cancel_delayed_work_sync to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_anchor_empty to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dump_stack to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_alloc_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _dev_info to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_bulk_msg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __mutex_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function scnprintf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_get_intf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_kill_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tasklet_kill to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_free_coherent to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_free_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function request_firmware to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function release_firmware to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_put_intf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_warn to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 16056: Ignoring function call through function pointer *(rf->clear): (*(rf->clear))(rf); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function __init_waitqueue_head to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_destroy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_control_msg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ieee80211_register_hw to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_reset_configuration to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ieee80211_free_hw to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function consume_skb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function cancel_work_sync to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_anchor_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_wait_anchor_empty_timeout to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_submit_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 16201: Ignoring function call through function pointer *(rf->set_channel): r = (*(rf->set_channel))(rf, (int)channel); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function usb_unanchor_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_alloc_coherent to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function skb_queue_tail to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function skb_unlink to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function kfree_skb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 16321: Ignoring function call through function pointer *(rf->patch_6m_band_edge): tmp = (*(rf->patch_6m_band_edge))(rf, (int)channel); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function memcmp to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ieee80211_stop_queues to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __init_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function lockdep_init_map to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function init_timer_key to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function msecs_to_jiffies to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function wait_for_completion_timeout to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function get_seconds to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_interrupt_msg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_dev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            1336351 (20% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  1262366 (94%)
  Because of loop head:            72634 (5%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         1351 (0%)
  Times precision was empty:       305830 (23%)
  Times precision was {false}:     3846 (0%)
  Times result was cached:         1021920 (76%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      4755 (0%)
  Times result was 'false':        19590 (1%)
Number of strengthen sat checks:   0
Number of coverage checks:         652021
  BDD entailment checks:           221329
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       45
Number of predicates discovered:          6
Number of abstraction locations:          435
Max number of predicates per location:    4
Avg number of predicates per location:    1
Total predicates per abstraction:         1612249
Max number of predicates per abstraction: 4
Avg number of predicates per abstraction: 187.45
Number of irrelevant predicates:          1047603 (65%)
Number of preds handled by boolean abs:   5810 (0%)
  Total number of models for allsat:      4874
  Max number of models for allsat:        6
  Avg number of models for allsat:        1.03

Time for post operator:                106.982s
  Time for path formula creation:      103.660s
Time for strengthen operator:            5.765s
Time for prec operator:                392.724s
  Time for abstraction:                372.101s (Max:     1.024s, Count: 1336351)
    Boolean abstraction:                71.083s
    Solving time:                      177.975s (Max:     0.471s)
    Model enumeration time:              2.353s
    Time for BDD construction:           0.221s (Max:     0.012s)
Time for merge operator:                 4.199s
Time for coverage check:                 0.381s
  Time for BDD entailment checks:        0.300s
Total time for SMT solver (w/o itp):   180.328s

Number of path formula cache hits:   7753265 (96%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    58.167s

Total number of created targets for pointer analysis: 981297
   Number of created targets for uf: *unsigned_short_int is 4440
   Number of created targets for uf: *(void)* is 34
   Number of created targets for uf: *(struct_sk_buff)* is 31
   Number of created targets for uf: *signed_int is 12241
   Number of created targets for uf: *unsigned_char is 878
   Number of created targets for uf: *(struct_list_head)* is 30
   Number of created targets for uf: *_Bool is 13
   Number of created targets for uf: *unsigned_int is 19381
   Number of created targets for uf: *char is 1825
   Number of created targets for uf: *(struct_device)* is 2
   Number of created targets for uf: *unsigned_long_int is 820


Number of BDD nodes:                               351
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        9574 (count: 578646, min: 0, max: 153, avg: 0.02)
Time for BDD node cleanup:                             0.116s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  8.923s
  Time for transition matches:                         5.052s
  Time for transition assertions:                      0.002s
  Time for transition actions:                         0.016s
Automaton transfers with branching:                0
Automaton transfer successors:                      6634423 (count: 6634423, min: 1, max: 1, avg: 1.00) [1 x 6634423]

CPA algorithm statistics
------------------------
Number of iterations:            4259415
Max size of waitlist:            736
Average size of waitlist:        252
Number of computed successors:   4694110
Max successors for one state:    2
Number of times merged:          215346
Number of times stopped:         354151
Number of times breaked:         1351

Total time for CPA algorithm:       677.936s (Max:     8.342s)
  Time for choose from waitlist:      2.649s
  Time for precision adjustment:    427.537s
  Time for transfer relation:       213.800s
  Time for merge operator:            7.867s
  Time for stop operator:             4.939s
  Time for adding to reached set:     8.441s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   1351
Avg. length of target path (in blocks):              114085 (count: 1351, min: 22, max: 131, avg: 84.44)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                 146.767s
  Counterexample analysis:                           135.352s (Max:     0.479s, Calls: 1351)
    Refinement sat check:                            110.820s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.081s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.377s
  Precision update:                                    1.125s
  ARG update:                                          9.148s

Length of refined path (in blocks):                  110236 (count: 1351, min: 4, max: 130, avg: 81.60)
Number of affected states:                            41807 (count: 1351, min: 1, max: 129, avg: 30.95)
Length (states) of path with itp 'true':              67078 (count: 1351, min: 0, max: 103, avg: 49.65)
Length (states) of path with itp non-trivial itp:     41807 (count: 1351, min: 1, max: 129, avg: 30.95)
Length (states) of path with itp 'false':              1351 (count: 1351, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 1351, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:           40456 (count: 1351, min: 0, max: 128, avg: 29.95)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                1351
Number of successful refinements:     1351
Number of failed refinements:         0
Max. size of reached set before ref.: 75230
Max. size of reached set after ref.:  74589
Avg. size of reached set before ref.: 26518.48
Avg. size of reached set after ref.:  23326.83

Total time for CEGAR algorithm:     890.514s
Time for refinements:               184.215s
Average time for refinement:          0.136s
Max time for refinement:              0.676s

Code Coverage
-----------------------------
  Function coverage:      0.328
  Visited lines:          2962
  Total lines:            8993
  Line coverage:          0.329
  Visited conditions:     444
  Total conditions:       1684
  Condition coverage:     0.264

CPAchecker general statistics
-----------------------------
Number of program locations:     11862
Number of CFA edges:             13403
Number of relevant variables:    2119
Number of functions:             458
Number of loops:                 55
Size of reached set:             8443
  Number of reached locations:   1634 (14%)
    Avg states per location:     5
    Max states per location:     276 (at node N64)
  Number of reached functions:   150 (33%)
  Number of partitions:          8414
    Avg size of partitions:      1
    Max size of partitions:      7 (with key [N10717 (before line 20073), Function main called from node N10703, stack depth 1 [1107c465], stack [main]])
  Number of target states:       0
  Size of final wait list        146

Time for analysis setup:          9.790s
  Time for loading CPAs:          1.222s
  Time for loading parser:        0.709s
  Time for CFA construction:      7.740s
    Time for parsing file(s):     1.483s
    Time for AST to CFA:          2.866s
    Time for CFA sanity check:    0.796s
    Time for post-processing:     2.445s
      Time for var class.:        1.433s
Time for Analysis:              890.514s
CPU time for analysis:          890.430s
Total time for CPAchecker:      900.308s
Total CPU time for CPAchecker:  900.200s
Time for statistics:              0.336s

Time for Garbage Collector:      52.952s (in 1490 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                469MB (   447 MiB) max;    232MB (   221 MiB) avg;    492MB (   470 MiB) peak
Used non-heap memory:             43MB (    41 MiB) max;     42MB (    40 MiB) avg;     43MB (    41 MiB) peak
Allocated heap memory:           511MB (   487 MiB) max;    336MB (   320 MiB) avg
Allocated non-heap memory:        45MB (    43 MiB) max;     44MB (    42 MiB) avg
Total process virtual memory:   8320MB (  7935 MiB) max;   8204MB (  7824 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
