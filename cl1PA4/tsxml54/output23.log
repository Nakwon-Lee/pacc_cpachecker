scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.16-rc1/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_cbq.ko-entry_point_true-unreach-call.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_5n9g7x5g/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 8970: Function pointer *(arg->fn) with type int (*)(struct Qdisc *, unsigned long, struct qdisc_walker *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

line 9118: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___0 = ldv_zalloc(88UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 9126: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___4 = ldv_zalloc(20UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_probe_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_setup_1 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function qdisc_create_dflt to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function register_qdisc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function unregister_qdisc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 6072: Ignoring function call through function pointer *(sch->dequeue): sch->gso_skb = (*(sch->dequeue))(sch); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Recursion detected, aborting. To ignore recursion, add -skipRecursion to the command line. (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, INFO)

Error: line 6072: Unsupported feature (recursion): sch->gso_skb = qdisc_peek_dequeued(sch); (line was originally pointer call(qdisc_peek_dequeued) sch->gso_skb = (*(sch->dequeue))(sch);) (CallstackTransferRelation.getAbstractSuccessorsForEdge, SEVERE)

PredicateCPA statistics
-----------------------
Number of abstractions:            124 (6% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  118 (95%)
  Because of loop head:            6 (5%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         0 (0%)
  Times precision was empty:       124 (100%)
  Times precision was {false}:     0 (0%)
  Times result was cached:         0 (0%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      0 (0%)
  Times result was 'false':        0 (0%)
Number of strengthen sat checks:   0
Number of coverage checks:         95
  BDD entailment checks:           1
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       63
Number of predicates discovered:          0

Time for post operator:                  0.941s
  Time for path formula creation:        0.930s
Time for strengthen operator:            0.026s
Time for prec operator:                  0.060s
  Time for abstraction:                  0.018s (Max:     0.017s, Count: 124)
    Solving time:                        0.000s (Max:     0.000s)
    Model enumeration time:              0.000s
    Time for BDD construction:           0.000s (Max:     0.000s)
Time for merge operator:                 0.041s
Time for coverage check:                 0.012s
  Time for BDD entailment checks:        0.012s
Total time for SMT solver (w/o itp):     0.000s

Number of path formula cache hits:   199 (9%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.873s

Total number of created targets for pointer analysis: 9
   Number of created targets for uf: *(struct_sk_buff)* is 4
   Number of created targets for uf: *signed_int is 4


Number of BDD nodes:                               202
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                           0 (count: 126, min: 0, max: 0, avg: 0.00)
Time for BDD node cleanup:                             0.000s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.044s
Automaton transfers with branching:                0
Automaton transfer successors:                         2072 (count: 2072, min: 1, max: 1, avg: 1.00) [1 x 2072]

CPA algorithm statistics
------------------------
Number of iterations:            490
Max size of waitlist:            64
Average size of waitlist:        35
Number of computed successors:   600
Max successors for one state:    2
Number of times merged:          47
Number of times stopped:         48
Number of times breaked:         0

Total time for CPA algorithm:         1.503s (Max:     1.503s)
  Time for choose from waitlist:      0.005s
  Time for precision adjustment:      0.138s
  Time for transfer relation:         1.199s
  Time for merge operator:            0.055s
  Time for stop operator:             0.028s
  Time for adding to reached set:     0.036s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   0

CEGAR algorithm statistics
--------------------------
Number of refinements:                0

Code Coverage
-----------------------------
  Function coverage:      0.229
  Visited lines:          1346
  Total lines:            3257
  Line coverage:          0.413
  Visited conditions:     194
  Total conditions:       874
  Condition coverage:     0.222

CPAchecker general statistics
-----------------------------
Number of program locations:     4534
Number of CFA edges:             5135
Number of relevant variables:    796
Number of functions:             140
Number of loops:                 38
Size of reached set:             553
  Number of reached locations:   373 (8%)
    Avg states per location:     1
    Max states per location:     23 (at node N430)
  Number of reached functions:   32 (23%)
  Number of partitions:          553
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0
  Size of final wait list        64

Time for analysis setup:          6.712s
  Time for loading CPAs:          1.097s
  Time for loading parser:        0.780s
  Time for CFA construction:      4.667s
    Time for parsing file(s):     1.148s
    Time for AST to CFA:          1.612s
    Time for CFA sanity check:    0.381s
    Time for post-processing:     1.337s
      Time for var class.:        0.589s
Time for Analysis:                1.503s
CPU time for analysis:            1.500s
Total time for CPAchecker:        8.228s
Total CPU time for CPAchecker:    8.210s
Time for statistics:              0.080s

Time for Garbage Collector:       0.216s (in 11 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 65MB (    62 MiB) max;     37MB (    35 MiB) avg;     69MB (    66 MiB) peak
Used non-heap memory:             33MB (    31 MiB) max;     25MB (    24 MiB) avg;     33MB (    32 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        35MB (    33 MiB) max;     27MB (    26 MiB) avg
Total process virtual memory:   8083MB (  7709 MiB) max;   8035MB (  7663 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
