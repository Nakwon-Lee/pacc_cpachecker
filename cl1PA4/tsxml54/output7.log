scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.16-rc1/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_cbq.ko-entry_point_true-unreach-call.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_sv8aal8f/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 8970: Function pointer *(arg->fn) with type int (*)(struct Qdisc *, unsigned long, struct qdisc_walker *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

line 9118: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___0 = ldv_zalloc(88UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 9126: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___4 = ldv_zalloc(20UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_probe_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_setup_1 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function nla_parse to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rtnl_is_locked to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dump_stack to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock_bh to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function qdisc_get_rtab to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function qdisc_put_rtab to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function qdisc_class_hash_destroy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function qdisc_watchdog_cancel to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function hrtimer_cancel to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Extern function ktime_get() returning a composite is treated as nondet. (PredicateCPA:CExpressionVisitorWithPointerAliasing.visit, WARNING)

Assuming external function qdisc_class_hash_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function qdisc_create_dflt to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tcf_destroy_chain to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function qdisc_destroy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function gen_kill_estimator to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function qdisc_reset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function qdisc_tree_decrease_qlen to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function qdisc_class_hash_remove to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tc_classify_compat to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function kfree_skb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function debug_lockdep_rcu_enabled to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rcu_read_lock_bh_held to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function lockdep_rcu_suspicious to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __qdisc_calculate_pkt_len to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 6032: Ignoring function call through function pointer *(sch->enqueue): tmp = (*(sch->enqueue))(skb, sch); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Recursion detected, aborting. To ignore recursion, add -skipRecursion to the command line. (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, INFO)

Error: line 6032: Unsupported feature (recursion): tmp = cbq_enqueue(skb, sch); (line was originally pointer call(cbq_enqueue) tmp = (*(sch->enqueue))(skb, sch);) (CallstackTransferRelation.getAbstractSuccessorsForEdge, SEVERE)

PredicateCPA statistics
-----------------------
Number of abstractions:            690 (12% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  557 (81%)
  Because of loop head:            130 (19%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         3 (0%)
  Times precision was empty:       684 (99%)
  Times precision was {false}:     3 (0%)
  Times result was cached:         1 (0%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      2 (0%)
  Times result was 'false':        4 (1%)
Number of strengthen sat checks:   0
Number of coverage checks:         789
  BDD entailment checks:           97
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       63
Number of predicates discovered:          2
Number of abstraction locations:          2
Max number of predicates per location:    1
Avg number of predicates per location:    1
Total predicates per abstraction:         6
Max number of predicates per abstraction: 1
Avg number of predicates per abstraction: 1.20
Number of irrelevant predicates:          4 (67%)
Number of preds handled by boolean abs:   2 (33%)
  Total number of models for allsat:      2
  Max number of models for allsat:        1
  Avg number of models for allsat:        1.00

Time for post operator:                  1.711s
  Time for path formula creation:        1.659s
Time for strengthen operator:            0.049s
Time for prec operator:                  0.215s
  Time for abstraction:                  0.101s (Max:     0.017s, Count: 690)
    Boolean abstraction:                 0.008s
    Solving time:                        0.016s (Max:     0.009s)
    Model enumeration time:              0.000s
    Time for BDD construction:           0.000s (Max:     0.000s)
Time for merge operator:                 0.080s
Time for coverage check:                 0.011s
  Time for BDD entailment checks:        0.010s
Total time for SMT solver (w/o itp):     0.016s

Number of path formula cache hits:   3063 (47%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     1.566s

Total number of created targets for pointer analysis: 107
   Number of created targets for uf: *signed_int is 4
   Number of created targets for uf: *(struct_Qdisc)* is 4
   Number of created targets for uf: *unsigned_int is 11


Number of BDD nodes:                               202
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                           7 (count: 815, min: 0, max: 7, avg: 0.01)
Time for BDD node cleanup:                             0.001s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.083s
Automaton transfers with branching:                0
Automaton transfer successors:                         5996 (count: 5996, min: 1, max: 1, avg: 1.00) [1 x 5996]

CPA algorithm statistics
------------------------
Number of iterations:            3169
Max size of waitlist:            79
Average size of waitlist:        60
Number of computed successors:   3752
Max successors for one state:    2
Number of times merged:          346
Number of times stopped:         443
Number of times breaked:         3

Total time for CPA algorithm:         3.275s (Max:     1.866s)
  Time for choose from waitlist:      0.036s
  Time for precision adjustment:      0.444s
  Time for transfer relation:         2.386s
  Time for merge operator:            0.150s
  Time for stop operator:             0.078s
  Time for adding to reached set:     0.067s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   3
Avg. length of target path (in blocks):                 118 (count: 3, min: 37, max: 44, avg: 39.33)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.179s
  Counterexample analysis:                             0.099s (Max:     0.040s, Calls: 3)
    Refinement sat check:                              0.064s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.005s
  Precision update:                                    0.005s
  ARG update:                                          0.032s

Length of refined path (in blocks):                      90 (count: 3, min: 22, max: 34, avg: 30.00)
Number of affected states:                                1 (count: 3, min: 0, max: 1, avg: 0.33)
Length (states) of path with itp 'true':                 86 (count: 3, min: 20, max: 33, avg: 28.67)
Length (states) of path with itp non-trivial itp:         1 (count: 3, min: 0, max: 1, avg: 0.33)
Length (states) of path with itp 'false':                 3 (count: 3, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 3, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:               0 (count: 3, min: 0, max: 0, avg: 0.00)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                3
Number of successful refinements:     3
Number of failed refinements:         0
Max. size of reached set before ref.: 1009
Max. size of reached set after ref.:  942
Avg. size of reached set before ref.: 941.33
Avg. size of reached set after ref.:  630.00

Total time for CEGAR algorithm:       3.502s
Time for refinements:                 0.224s
Average time for refinement:          0.074s
Max time for refinement:              0.092s

Code Coverage
-----------------------------
  Function coverage:      0.379
  Visited lines:          1787
  Total lines:            3257
  Line coverage:          0.549
  Visited conditions:     352
  Total conditions:       874
  Condition coverage:     0.403

CPAchecker general statistics
-----------------------------
Number of program locations:     4534
Number of CFA edges:             5135
Number of relevant variables:    796
Number of functions:             140
Number of loops:                 38
Size of reached set:             2372
  Number of reached locations:   848 (19%)
    Avg states per location:     2
    Max states per location:     32 (at node N429)
  Number of reached functions:   53 (38%)
  Number of partitions:          2372
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0
  Size of final wait list        69

Time for analysis setup:          6.800s
  Time for loading CPAs:          1.105s
  Time for loading parser:        0.712s
  Time for CFA construction:      4.820s
    Time for parsing file(s):     1.382s
    Time for AST to CFA:          1.557s
    Time for CFA sanity check:    0.405s
    Time for post-processing:     1.318s
      Time for var class.:        0.490s
Time for Analysis:                3.502s
CPU time for analysis:            3.510s
Total time for CPAchecker:       10.307s
Total CPU time for CPAchecker:   10.290s
Time for statistics:              0.159s

Time for Garbage Collector:       0.277s (in 12 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 67MB (    64 MiB) max;     39MB (    37 MiB) avg;     72MB (    69 MiB) peak
Used non-heap memory:             34MB (    33 MiB) max;     27MB (    25 MiB) avg;     35MB (    33 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        36MB (    34 MiB) max;     28MB (    27 MiB) avg
Total process virtual memory:   8083MB (  7709 MiB) max;   8046MB (  7673 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
