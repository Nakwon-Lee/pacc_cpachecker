scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.16-rc1/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_cbq.ko-entry_point_true-unreach-call.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_81mafulb/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 8970: Function pointer *(arg->fn) with type int (*)(struct Qdisc *, unsigned long, struct qdisc_walker *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

line 9118: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___0 = ldv_zalloc(88UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 9126: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___4 = ldv_zalloc(20UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_probe_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_setup_1 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tcf_destroy_chain to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function qdisc_class_hash_destroy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function qdisc_destroy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function qdisc_put_rtab to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function gen_kill_estimator to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tc_classify_compat to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function kfree_skb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function debug_lockdep_rcu_enabled to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rcu_read_lock_bh_held to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function lockdep_rcu_suspicious to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __qdisc_calculate_pkt_len to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 6032: Ignoring function call through function pointer *(sch->enqueue): tmp = (*(sch->enqueue))(skb, sch); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Recursion detected, aborting. To ignore recursion, add -skipRecursion to the command line. (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, INFO)

Error: line 6032: Unsupported feature (recursion): tmp = cbq_enqueue(skb, sch); (line was originally pointer call(cbq_enqueue) tmp = (*(sch->enqueue))(skb, sch);) (CallstackTransferRelation.getAbstractSuccessorsForEdge, SEVERE)

PredicateCPA statistics
-----------------------
Number of abstractions:            153 (7% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  122 (80%)
  Because of loop head:            31 (20%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         0 (0%)
  Times precision was empty:       153 (100%)
  Times precision was {false}:     0 (0%)
  Times result was cached:         0 (0%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      0 (0%)
  Times result was 'false':        0 (0%)
Number of strengthen sat checks:   0
Number of coverage checks:         170
  BDD entailment checks:           18
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       63
Number of predicates discovered:          0

Time for post operator:                  1.043s
  Time for path formula creation:        1.024s
Time for strengthen operator:            0.009s
Time for prec operator:                  0.036s
  Time for abstraction:                  0.008s (Max:     0.002s, Count: 153)
    Solving time:                        0.000s (Max:     0.000s)
    Model enumeration time:              0.000s
    Time for BDD construction:           0.000s (Max:     0.000s)
Time for merge operator:                 0.065s
Time for coverage check:                 0.006s
  Time for BDD entailment checks:        0.005s
Total time for SMT solver (w/o itp):     0.000s

Number of path formula cache hits:   157 (7%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.989s

Total number of created targets for pointer analysis: 11
   Number of created targets for uf: *signed_int is 5
   Number of created targets for uf: *(struct_Qdisc)* is 4


Number of BDD nodes:                               202
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                           0 (count: 172, min: 0, max: 0, avg: 0.00)
Time for BDD node cleanup:                             0.001s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.048s
Automaton transfers with branching:                0
Automaton transfer successors:                         2291 (count: 2291, min: 1, max: 1, avg: 1.00) [1 x 2291]

CPA algorithm statistics
------------------------
Number of iterations:            722
Max size of waitlist:            64
Average size of waitlist:        41
Number of computed successors:   872
Max successors for one state:    2
Number of times merged:          76
Number of times stopped:         94
Number of times breaked:         0

Total time for CPA algorithm:         1.697s (Max:     1.697s)
  Time for choose from waitlist:      0.018s
  Time for precision adjustment:      0.139s
  Time for transfer relation:         1.368s
  Time for merge operator:            0.085s
  Time for stop operator:             0.024s
  Time for adding to reached set:     0.013s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   0

CEGAR algorithm statistics
--------------------------
Number of refinements:                0

Code Coverage
-----------------------------
  Function coverage:      0.250
  Visited lines:          1403
  Total lines:            3257
  Line coverage:          0.431
  Visited conditions:     244
  Total conditions:       874
  Condition coverage:     0.279

CPAchecker general statistics
-----------------------------
Number of program locations:     4534
Number of CFA edges:             5135
Number of relevant variables:    796
Number of functions:             140
Number of loops:                 38
Size of reached set:             779
  Number of reached locations:   482 (11%)
    Avg states per location:     1
    Max states per location:     10 (at node N61)
  Number of reached functions:   35 (25%)
  Number of partitions:          779
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0
  Size of final wait list        58

Time for analysis setup:          6.528s
  Time for loading CPAs:          1.041s
  Time for loading parser:        0.720s
  Time for CFA construction:      4.610s
    Time for parsing file(s):     1.094s
    Time for AST to CFA:          1.524s
    Time for CFA sanity check:    0.413s
    Time for post-processing:     1.470s
      Time for var class.:        0.601s
Time for Analysis:                1.697s
CPU time for analysis:            1.690s
Total time for CPAchecker:        8.229s
Total CPU time for CPAchecker:    8.210s
Time for statistics:              0.120s

Time for Garbage Collector:       0.256s (in 11 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 65MB (    62 MiB) max;     37MB (    35 MiB) avg;     69MB (    66 MiB) peak
Used non-heap memory:             32MB (    31 MiB) max;     26MB (    24 MiB) avg;     34MB (    32 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        35MB (    34 MiB) max;     27MB (    26 MiB) avg
Total process virtual memory:   8083MB (  7709 MiB) max;   8038MB (  7666 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
