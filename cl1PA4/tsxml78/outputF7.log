scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.16-rc1/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--isicom.ko-entry_point_true-unreach-call.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_xdc__pgv/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 3700: Dead code detected: __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "m" (__preempt_count)); (CFACreationUtils.addEdgeToCFA, INFO)

line 3703: Dead code detected: __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "m" (__preempt_count)); (CFACreationUtils.addEdgeToCFA, INFO)

line 3709: Dead code detected: __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret__): "m" (__preempt_count)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (4UL) {
  case 1UL:
  __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "m" (__preempt_count));
  goto ldv_6004;
  case 2UL:
  __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "m" (__preempt_count));
  goto ldv_6004;
  case 4UL:
  __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "m" (__preempt_count));
  goto ldv_6004;
  case 8UL:
  __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret__): "m" (__preempt_count));
  goto ldv_6004;
  default:
  __bad_percpu_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 4246: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

line 6489: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___1 = ldv_zalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 6509: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___11 = ldv_zalloc(32UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_destruct_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_setup_3 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_release_3 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_disconnect_3 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_enable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _dev_info to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tty_port_alloc_xmit_buf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function msleep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tty_port_close to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 3972: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((const void *)to, 0); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function __builtin_object_size to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function might_fault to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _copy_from_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __copy_from_user_overflow to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock_nested to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 3997: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size(from, 0); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function _copy_to_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __copy_to_user_overflow to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function capable to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tty_port_hangup to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function del_timer_sync to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tty_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function put_tty_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tty_port_tty_get to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tty_prepare_flip_string to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_pr_debug to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tty_flip_buffer_push to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function do_SAK to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __wake_up to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tty_hangup to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tty_wakeup to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tty_kref_put to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_disable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tty_port_open to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __tty_alloc_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mod_timer to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tty_unregister_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tty_port_destroy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_request_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function request_threaded_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __raw_spin_lock_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tty_set_operations to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tty_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __pci_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_release_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_dev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_warn to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function request_firmware to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function release_firmware to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tty_port_free_xmit_buf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_final_state to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tty_port_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tty_port_register_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            3499489 (19% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  3196121 (91%)
  Because of loop head:            302843 (9%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         525 (0%)
  Times precision was empty:       1527746 (44%)
  Times precision was {false}:     5363 (0%)
  Times result was cached:         1962360 (56%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      4020 (0%)
  Times result was 'false':        62532 (2%)
Number of strengthen sat checks:   0
Number of coverage checks:         2130909
  BDD entailment checks:           674303
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       69
Number of predicates discovered:          11
Number of abstraction locations:          287
Max number of predicates per location:    7
Avg number of predicates per location:    1
Total predicates per abstraction:         6218288
Max number of predicates per abstraction: 7
Avg number of predicates per abstraction: 662.72
Number of irrelevant predicates:          4805622 (77%)
Number of preds handled by boolean abs:   7116 (0%)
  Total number of models for allsat:      4650
  Max number of models for allsat:        36
  Avg number of models for allsat:        1.16

Time for post operator:                118.187s
  Time for path formula creation:      109.996s
Time for strengthen operator:           13.544s
Time for prec operator:                312.641s
  Time for abstraction:                276.385s (Max:     1.741s, Count: 3499489)
    Boolean abstraction:                11.185s
    Solving time:                       19.086s (Max:     0.116s)
    Model enumeration time:              0.705s
    Time for BDD construction:           0.114s (Max:     0.004s)
Time for merge operator:                 9.933s
Time for coverage check:                 0.772s
  Time for BDD entailment checks:        0.521s
Total time for SMT solver (w/o itp):    19.791s

Number of path formula cache hits:   21079179 (96%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    57.538s

Total number of created targets for pointer analysis: 980924
   Number of created targets for uf: *unsigned_short_int is 53441
   Number of created targets for uf: *(void)* is 219
   Number of created targets for uf: *signed_char is 3769
   Number of created targets for uf: *signed_int is 19856
   Number of created targets for uf: *(struct_isi_board)* is 3141
   Number of created targets for uf: *unsigned_char is 633
   Number of created targets for uf: *(struct_isi_port)* is 641
   Number of created targets for uf: *(unsigned_char)* is 261
   Number of created targets for uf: *unsigned_int is 7655
   Number of created targets for uf: *unsigned_long_int is 23041


Number of BDD nodes:                               1506
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        8464 (count: 2262111, min: 0, max: 244, avg: 0.00)
Time for BDD node cleanup:                             0.452s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                 22.636s
  Time for transition matches:                        12.816s
  Time for transition assertions:                      0.003s
  Time for transition actions:                         0.005s
Automaton transfers with branching:                0
Automaton transfer successors:                     18067456 (count: 18067456, min: 1, max: 1, avg: 1.00) [1 x 18067456]

CPA algorithm statistics
------------------------
Number of iterations:            11694641
Max size of waitlist:            187
Average size of waitlist:        91
Number of computed successors:   13030274
Max successors for one state:    2
Number of times merged:          728303
Number of times stopped:         1252901
Number of times breaked:         525

Total time for CPA algorithm:       794.658s (Max:     7.686s)
  Time for choose from waitlist:      4.387s
  Time for precision adjustment:    406.268s
  Time for transfer relation:       305.337s
  Time for merge operator:           18.831s
  Time for stop operator:            13.634s
  Time for adding to reached set:    16.178s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   525
Avg. length of target path (in blocks):               61572 (count: 525, min: 78, max: 162, avg: 117.28)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  68.026s
  Counterexample analysis:                            44.437s (Max:     0.239s, Calls: 525)
    Refinement sat check:                             31.700s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.047s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.216s
  Precision update:                                    0.313s
  ARG update:                                         22.639s

Length of refined path (in blocks):                   46001 (count: 525, min: 10, max: 161, avg: 87.62)
Number of affected states:                            29928 (count: 525, min: 1, max: 160, avg: 57.01)
Length (states) of path with itp 'true':              15548 (count: 525, min: 0, max: 62, avg: 29.62)
Length (states) of path with itp non-trivial itp:     29928 (count: 525, min: 1, max: 160, avg: 57.01)
Length (states) of path with itp 'false':               525 (count: 525, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 525, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:           29403 (count: 525, min: 0, max: 159, avg: 56.01)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                525
Number of successful refinements:     525
Number of failed refinements:         0
Max. size of reached set before ref.: 62926
Max. size of reached set after ref.:  50579
Avg. size of reached set before ref.: 49882.06
Avg. size of reached set after ref.:  27677.35

Total time for CEGAR algorithm:     894.182s
Time for refinements:                87.399s
Average time for refinement:          0.166s
Max time for refinement:              0.474s

Code Coverage
-----------------------------
  Function coverage:      0.899
  Visited lines:          2654
  Total lines:            2696
  Line coverage:          0.984
  Visited conditions:     745
  Total conditions:       758
  Condition coverage:     0.983

CPAchecker general statistics
-----------------------------
Number of program locations:     3749
Number of CFA edges:             4328
Number of relevant variables:    486
Number of functions:             99
Number of loops:                 19
Size of reached set:             57367
  Number of reached locations:   1992 (53%)
    Avg states per location:     28
    Max states per location:     1899 (at node N52)
  Number of reached functions:   89 (90%)
  Number of partitions:          57210
    Avg size of partitions:      1
    Max size of partitions:      10 (with key [N2461 (before line 6520), Function main called from node N2393, stack depth 1 [506dcf55], stack [main]])
  Number of target states:       0
  Size of final wait list        120

Time for analysis setup:          6.063s
  Time for loading CPAs:          1.108s
  Time for loading parser:        0.726s
  Time for CFA construction:      4.061s
    Time for parsing file(s):     1.067s
    Time for AST to CFA:          1.420s
    Time for CFA sanity check:    0.292s
    Time for post-processing:     1.072s
      Time for var class.:        0.491s
Time for Analysis:              894.182s
CPU time for analysis:          894.020s
Total time for CPAchecker:      900.249s
Total CPU time for CPAchecker:  900.070s
Time for statistics:              0.833s

Time for Garbage Collector:      95.499s (in 1578 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                767MB (   732 MiB) max;    391MB (   373 MiB) avg;    801MB (   764 MiB) peak
Used non-heap memory:             41MB (    39 MiB) max;     39MB (    38 MiB) avg;     41MB (    39 MiB) peak
Allocated heap memory:           844MB (   805 MiB) max;    574MB (   547 MiB) avg
Allocated non-heap memory:        43MB (    41 MiB) max;     41MB (    40 MiB) avg
Total process virtual memory:   8222MB (  7841 MiB) max;   8147MB (  7769 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
