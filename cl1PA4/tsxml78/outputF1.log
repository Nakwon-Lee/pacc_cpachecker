scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.16-rc1/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--isicom.ko-entry_point_true-unreach-call.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run___xjf1h_/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 3700: Dead code detected: __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "m" (__preempt_count)); (CFACreationUtils.addEdgeToCFA, INFO)

line 3703: Dead code detected: __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "m" (__preempt_count)); (CFACreationUtils.addEdgeToCFA, INFO)

line 3709: Dead code detected: __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret__): "m" (__preempt_count)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (4UL) {
  case 1UL:
  __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "m" (__preempt_count));
  goto ldv_6004;
  case 2UL:
  __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "m" (__preempt_count));
  goto ldv_6004;
  case 4UL:
  __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "m" (__preempt_count));
  goto ldv_6004;
  case 8UL:
  __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret__): "m" (__preempt_count));
  goto ldv_6004;
  default:
  __bad_percpu_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 4246: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

line 6489: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___1 = ldv_zalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 6509: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___11 = ldv_zalloc(32UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_destruct_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_setup_3 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_release_3 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_disconnect_3 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tty_port_hangup to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function del_timer_sync to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tty_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function put_tty_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tty_port_close to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tty_port_open to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock_nested to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tty_wakeup to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 3997: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size(from, 0); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function __builtin_object_size to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function might_fault to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _copy_to_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __copy_to_user_overflow to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tty_unregister_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tty_port_destroy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_release_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_disable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_final_state to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tty_port_free_xmit_buf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_pr_debug to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function msleep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tty_port_alloc_xmit_buf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 3972: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((const void *)to, 0); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function _copy_from_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __copy_from_user_overflow to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function capable to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __raw_spin_lock_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __tty_alloc_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tty_set_operations to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tty_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __pci_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mod_timer to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_enable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _dev_info to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_request_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function request_threaded_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_dev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_warn to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function request_firmware to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tty_port_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tty_port_register_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function release_firmware to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tty_port_tty_get to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tty_kref_put to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tty_prepare_flip_string to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tty_hangup to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __wake_up to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function do_SAK to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tty_flip_buffer_push to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            3499572 (20% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  3183029 (91%)
  Because of loop head:            315920 (9%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         623 (0%)
  Times precision was empty:       1436891 (41%)
  Times precision was {false}:     8997 (0%)
  Times result was cached:         2047899 (59%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      5785 (0%)
  Times result was 'false':        50273 (1%)
Number of strengthen sat checks:   0
Number of coverage checks:         2018318
  BDD entailment checks:           702334
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       69
Number of predicates discovered:          10
Number of abstraction locations:          250
Max number of predicates per location:    8
Avg number of predicates per location:    2
Total predicates per abstraction:         5811426
Max number of predicates per abstraction: 8
Avg number of predicates per abstraction: 393.14
Number of irrelevant predicates:          5114637 (88%)
Number of preds handled by boolean abs:   10827 (0%)
  Total number of models for allsat:      8056
  Max number of models for allsat:        36
  Avg number of models for allsat:        1.39

Time for post operator:                131.570s
  Time for path formula creation:      124.474s
Time for strengthen operator:           15.293s
Time for prec operator:                295.197s
  Time for abstraction:                261.393s (Max:     2.004s, Count: 3499572)
    Boolean abstraction:                16.073s
    Solving time:                       25.055s (Max:     0.138s)
    Model enumeration time:              1.642s
    Time for BDD construction:           0.195s (Max:     0.009s)
Time for merge operator:                10.199s
Time for coverage check:                 1.908s
  Time for BDD entailment checks:        1.616s
Total time for SMT solver (w/o itp):    26.697s

Number of path formula cache hits:   20219492 (94%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    74.109s

Total number of created targets for pointer analysis: 1242899
   Number of created targets for uf: *unsigned_short_int is 61399
   Number of created targets for uf: *(void)* is 536
   Number of created targets for uf: *signed_char is 5257
   Number of created targets for uf: *signed_int is 27792
   Number of created targets for uf: *(struct_isi_board)* is 4801
   Number of created targets for uf: *unsigned_char is 1053
   Number of created targets for uf: *(struct_isi_port)* is 965
   Number of created targets for uf: *(unsigned_char)* is 141
   Number of created targets for uf: *unsigned_int is 10905
   Number of created targets for uf: *unsigned_long_int is 10993


Number of BDD nodes:                               2105
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       12117 (count: 2221293, min: 0, max: 289, avg: 0.01)
Time for BDD node cleanup:                             0.394s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                 22.355s
  Time for transition matches:                        11.536s
  Time for transition assertions:                      0.003s
  Time for transition actions:                         0.005s
Automaton transfers with branching:                0
Automaton transfer successors:                     17577102 (count: 17577102, min: 1, max: 1, avg: 1.00) [1 x 17577102]

CPA algorithm statistics
------------------------
Number of iterations:            11302565
Max size of waitlist:            241
Average size of waitlist:        75
Number of computed successors:   12563821
Max successors for one state:    2
Number of times merged:          657992
Number of times stopped:         1191616
Number of times breaked:         623

Total time for CPA algorithm:       785.265s (Max:     8.647s)
  Time for choose from waitlist:      4.878s
  Time for precision adjustment:    382.454s
  Time for transfer relation:       315.736s
  Time for merge operator:           19.216s
  Time for stop operator:            16.214s
  Time for adding to reached set:    18.197s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   623
Avg. length of target path (in blocks):               83501 (count: 623, min: 78, max: 244, avg: 134.03)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  83.689s
  Counterexample analysis:                            56.262s (Max:     0.191s, Calls: 623)
    Refinement sat check:                             38.790s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.064s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.252s
  Precision update:                                    0.386s
  ARG update:                                         26.213s

Length of refined path (in blocks):                   64641 (count: 622, min: 10, max: 243, avg: 103.92)
Number of affected states:                            32905 (count: 622, min: 0, max: 155, avg: 52.90)
Length (states) of path with itp 'true':              31114 (count: 622, min: 0, max: 167, avg: 50.02)
Length (states) of path with itp non-trivial itp:     32905 (count: 622, min: 0, max: 155, avg: 52.90)
Length (states) of path with itp 'false':               622 (count: 622, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 622, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:           32314 (count: 622, min: 0, max: 154, avg: 51.95)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                623
Number of successful refinements:     622
Number of failed refinements:         0
Max. size of reached set before ref.: 70918
Max. size of reached set after ref.:  64207
Avg. size of reached set before ref.: 33266.58
Avg. size of reached set after ref.:  15117.60

Total time for CEGAR algorithm:     893.740s
Time for refinements:               100.445s
Average time for refinement:          0.161s
Max time for refinement:              1.177s

Code Coverage
-----------------------------
  Function coverage:      0.909
  Visited lines:          2578
  Total lines:            2696
  Line coverage:          0.956
  Visited conditions:     739
  Total conditions:       758
  Condition coverage:     0.975

CPAchecker general statistics
-----------------------------
Number of program locations:     3749
Number of CFA edges:             4328
Number of relevant variables:    486
Number of functions:             99
Number of loops:                 19
Size of reached set:             38665
  Number of reached locations:   1915 (51%)
    Avg states per location:     20
    Max states per location:     1275 (at node N53)
  Number of reached functions:   90 (91%)
  Number of partitions:          38592
    Avg size of partitions:      1
    Max size of partitions:      13 (with key [N2461 (before line 6520), Function main called from node N2393, stack depth 1 [506dcf55], stack [main]])
  Number of target states:       1
  Size of final wait list        170

Time for analysis setup:          6.466s
  Time for loading CPAs:          1.049s
  Time for loading parser:        0.827s
  Time for CFA construction:      4.413s
    Time for parsing file(s):     1.114s
    Time for AST to CFA:          1.556s
    Time for CFA sanity check:    0.333s
    Time for post-processing:     1.175s
      Time for var class.:        0.515s
Time for Analysis:              893.740s
CPU time for analysis:          893.680s
Total time for CPAchecker:      900.211s
Total CPU time for CPAchecker:  900.130s
Time for statistics:              0.669s

Time for Garbage Collector:      96.980s (in 1853 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                837MB (   799 MiB) max;    341MB (   325 MiB) avg;    891MB (   850 MiB) peak
Used non-heap memory:             40MB (    39 MiB) max;     39MB (    37 MiB) avg;     41MB (    39 MiB) peak
Allocated heap memory:           969MB (   924 MiB) max;    497MB (   474 MiB) avg
Allocated non-heap memory:        42MB (    40 MiB) max;     41MB (    39 MiB) avg
Total process virtual memory:   8291MB (  7907 MiB) max;   8150MB (  7773 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
