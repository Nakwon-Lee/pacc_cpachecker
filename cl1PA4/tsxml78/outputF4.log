scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.16-rc1/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--isicom.ko-entry_point_true-unreach-call.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_yqe5we20/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 3700: Dead code detected: __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "m" (__preempt_count)); (CFACreationUtils.addEdgeToCFA, INFO)

line 3703: Dead code detected: __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "m" (__preempt_count)); (CFACreationUtils.addEdgeToCFA, INFO)

line 3709: Dead code detected: __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret__): "m" (__preempt_count)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (4UL) {
  case 1UL:
  __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "m" (__preempt_count));
  goto ldv_6004;
  case 2UL:
  __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "m" (__preempt_count));
  goto ldv_6004;
  case 4UL:
  __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "m" (__preempt_count));
  goto ldv_6004;
  case 8UL:
  __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret__): "m" (__preempt_count));
  goto ldv_6004;
  default:
  __bad_percpu_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 4246: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

line 6489: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___1 = ldv_zalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 6509: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___11 = ldv_zalloc(32UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_destruct_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_setup_3 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_release_3 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_disconnect_3 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_enable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _dev_info to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tty_port_alloc_xmit_buf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tty_port_close to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tty_port_hangup to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function del_timer_sync to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tty_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function put_tty_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_disable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock_nested to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_final_state to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mod_timer to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 3972: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((const void *)to, 0); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function __builtin_object_size to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function might_fault to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 3997: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size(from, 0); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function tty_port_open to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __tty_alloc_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __raw_spin_lock_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _copy_from_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _copy_to_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tty_port_tty_get to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tty_kref_put to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tty_unregister_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tty_port_destroy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_request_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function capable to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __copy_from_user_overflow to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __copy_to_user_overflow to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function request_threaded_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_pr_debug to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tty_set_operations to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tty_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __pci_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tty_wakeup to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_release_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function msleep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tty_port_free_xmit_buf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_dev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tty_prepare_flip_string to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tty_flip_buffer_push to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function do_SAK to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __wake_up to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tty_hangup to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_warn to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function request_firmware to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tty_port_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tty_port_register_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function release_firmware to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            4274189 (19% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  3904927 (91%)
  Because of loop head:            369097 (9%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         165 (0%)
  Times precision was empty:       2465852 (58%)
  Times precision was {false}:     6673 (0%)
  Times result was cached:         1800013 (42%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      1651 (0%)
  Times result was 'false':        53659 (1%)
Number of strengthen sat checks:   0
Number of coverage checks:         2655624
  BDD entailment checks:           861088
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       69
Number of predicates discovered:          10
Number of abstraction locations:          231
Max number of predicates per location:    7
Avg number of predicates per location:    1
Total predicates per abstraction:         3457360
Max number of predicates per abstraction: 7
Avg number of predicates per abstraction: 415.35
Number of irrelevant predicates:          3185621 (92%)
Number of preds handled by boolean abs:   2892 (0%)
  Total number of models for allsat:      2666
  Max number of models for allsat:        36
  Avg number of models for allsat:        1.61

Time for post operator:                134.186s
  Time for path formula creation:      125.067s
Time for strengthen operator:           17.162s
Time for prec operator:                240.910s
  Time for abstraction:                199.978s (Max:     1.687s, Count: 4274189)
    Boolean abstraction:                 3.297s
    Solving time:                        9.446s (Max:     0.112s)
    Model enumeration time:              0.593s
    Time for BDD construction:           0.101s (Max:     0.012s)
Time for merge operator:                11.475s
Time for coverage check:                 0.984s
  Time for BDD entailment checks:        0.611s
Total time for SMT solver (w/o itp):    10.039s

Number of path formula cache hits:   26020937 (97%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    62.343s

Total number of created targets for pointer analysis: 1022744
   Number of created targets for uf: *unsigned_short_int is 48875
   Number of created targets for uf: *(void)* is 269
   Number of created targets for uf: *signed_char is 3385
   Number of created targets for uf: *signed_int is 17942
   Number of created targets for uf: *(struct_isi_board)* is 2881
   Number of created targets for uf: *unsigned_char is 581
   Number of created targets for uf: *(struct_isi_port)* is 589
   Number of created targets for uf: *(unsigned_char)* is 21
   Number of created targets for uf: *unsigned_int is 7173
   Number of created targets for uf: *unsigned_long_int is 21165


Number of BDD nodes:                               1704
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        3718 (count: 3384169, min: 0, max: 299, avg: 0.00)
Time for BDD node cleanup:                             0.458s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                 28.639s
  Time for transition matches:                        15.393s
  Time for transition assertions:                      0.005s
  Time for transition actions:                         0.003s
Automaton transfers with branching:                0
Automaton transfer successors:                     22017828 (count: 22017828, min: 1, max: 1, avg: 1.00) [1 x 22017828]

CPA algorithm statistics
------------------------
Number of iterations:            14249391
Max size of waitlist:            1507
Average size of waitlist:        647
Number of computed successors:   15858487
Max successors for one state:    2
Number of times merged:          897268
Number of times stopped:         1554049
Number of times breaked:         165

Total time for CPA algorithm:       833.998s (Max:    13.408s)
  Time for choose from waitlist:      5.512s
  Time for precision adjustment:    357.951s
  Time for transfer relation:       375.052s
  Time for merge operator:           21.549s
  Time for stop operator:            17.838s
  Time for adding to reached set:    21.270s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   165
Avg. length of target path (in blocks):               16729 (count: 165, min: 78, max: 113, avg: 101.39)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  47.145s
  Counterexample analysis:                            12.445s (Max:     0.167s, Calls: 165)
    Refinement sat check:                              9.106s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.015s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.078s
  Precision update:                                    0.108s
  ARG update:                                         34.314s

Length of refined path (in blocks):                   10404 (count: 165, min: 10, max: 110, avg: 63.05)
Number of affected states:                             8843 (count: 165, min: 1, max: 109, avg: 53.59)
Length (states) of path with itp 'true':               1396 (count: 165, min: 0, max: 41, avg: 8.46)
Length (states) of path with itp non-trivial itp:      8843 (count: 165, min: 1, max: 109, avg: 53.59)
Length (states) of path with itp 'false':               165 (count: 165, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 165, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:            8678 (count: 165, min: 0, max: 108, avg: 52.59)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                165
Number of successful refinements:     165
Number of failed refinements:         0
Max. size of reached set before ref.: 178833
Max. size of reached set after ref.:  152665
Avg. size of reached set before ref.: 97827.19
Avg. size of reached set after ref.:  12265.60

Total time for CEGAR algorithm:     893.927s
Time for refinements:                57.998s
Average time for refinement:          0.351s
Max time for refinement:              1.989s

Code Coverage
-----------------------------
  Function coverage:      0.909
  Visited lines:          2647
  Total lines:            2696
  Line coverage:          0.982
  Visited conditions:     741
  Total conditions:       758
  Condition coverage:     0.978

CPAchecker general statistics
-----------------------------
Number of program locations:     3749
Number of CFA edges:             4328
Number of relevant variables:    486
Number of functions:             99
Number of loops:                 19
Size of reached set:             133118
  Number of reached locations:   1984 (53%)
    Avg states per location:     67
    Max states per location:     4533 (at node N53)
  Number of reached functions:   90 (91%)
  Number of partitions:          132550
    Avg size of partitions:      1
    Max size of partitions:      13 (with key [N2461 (before line 6520), Function main called from node N2393, stack depth 1 [506dcf55], stack [main]])
  Number of target states:       0
  Size of final wait list        99

Time for analysis setup:          6.409s
  Time for loading CPAs:          1.042s
  Time for loading parser:        0.763s
  Time for CFA construction:      4.407s
    Time for parsing file(s):     1.072s
    Time for AST to CFA:          1.548s
    Time for CFA sanity check:    0.321s
    Time for post-processing:     1.214s
      Time for var class.:        0.536s
Time for Analysis:              893.927s
CPU time for analysis:          893.900s
Total time for CPAchecker:      900.341s
Total CPU time for CPAchecker:  900.300s
Time for statistics:              1.580s

Time for Garbage Collector:     149.717s (in 1456 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                810MB (   773 MiB) max;    401MB (   383 MiB) avg;    862MB (   822 MiB) peak
Used non-heap memory:             40MB (    38 MiB) max;     39MB (    37 MiB) avg;     41MB (    39 MiB) peak
Allocated heap memory:           939MB (   895 MiB) max;    597MB (   569 MiB) avg
Allocated non-heap memory:        41MB (    40 MiB) max;     41MB (    39 MiB) avg
Total process virtual memory:   8152MB (  7775 MiB) max;   8125MB (  7749 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
