scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.16-rc1/205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--intel--ixgb--ixgb.ko-entry_point_true-unreach-call.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_rtafx9ju/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 13406: Dead code detected: return (0); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 6793: Function pointer *(ops->alloc) with type void *(*)(struct device *, size_t , dma_addr_t *, gfp_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6825: Function pointer *(ops->free) with type void (*)(struct device *, size_t , void *, dma_addr_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6665: Function pointer *(ops->map_page) with type dma_addr_t (*)(struct device *, struct page *, unsigned long, size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 6598-6599: Function pointer *(ops->map_page) with type dma_addr_t (*)(struct device *, struct page *, unsigned long, size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6715: Function pointer *(ops->mapping_error) with type int (*)(struct device *, dma_addr_t ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6695: Function pointer *(ops->unmap_page) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6632: Function pointer *(ops->unmap_page) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

line 10719: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___4 = ldv_zalloc(32UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ndo_uninit_4 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ndo_init_4 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function eth_validate_addr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_probe_6 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_release_6 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_suspend_6 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_enable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 14936: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___0 = ldv_zalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 14938: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___1 = ldv_zalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 14944: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___4 = ldv_zalloc(196UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 14950: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___7 = ldv_zalloc(8UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 14952: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___8 = ldv_zalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 14954: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___9 = ldv_zalloc(12UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function ethtool_op_get_link to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 11161: Destroying the void* pointer ldv_main_exported_3::tmp___2 produces garbage or the memory pointed by it is unused: ldv_main_exported_3(); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function dma_set_mask to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_request_regions to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_set_master to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function alloc_etherdev_mqs to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_release_regions to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_disable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 10460: Ignoring function call through function pointer *(timer->function): (*(timer->function))(timer->data); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function dma_supported to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __pci_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            15540 (13% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  14981 (96%)
  Because of loop head:            530 (3%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         29 (0%)
  Times precision was empty:       13288 (86%)
  Times precision was {false}:     344 (2%)
  Times result was cached:         1683 (11%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      225 (1%)
  Times result was 'false':        265 (2%)
Number of strengthen sat checks:   0
Number of coverage checks:         13485
  BDD entailment checks:           1773
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       111
Number of predicates discovered:          7
Number of abstraction locations:          49
Max number of predicates per location:    5
Avg number of predicates per location:    1
Total predicates per abstraction:         5934
Max number of predicates per abstraction: 5
Avg number of predicates per abstraction: 10.43
Number of irrelevant predicates:          3328 (56%)
Number of preds handled by boolean abs:   518 (9%)
  Total number of models for allsat:      480
  Max number of models for allsat:        16
  Avg number of models for allsat:        2.13

Time for post operator:                  7.275s
  Time for path formula creation:        6.987s
Time for strengthen operator:            0.329s
Time for prec operator:                  4.217s
  Time for abstraction:                  3.438s (Max:     0.034s, Count: 15540)
    Boolean abstraction:                 1.018s
    Solving time:                        0.774s (Max:     0.017s)
    Model enumeration time:              0.219s
    Time for BDD construction:           0.088s (Max:     0.009s)
Time for merge operator:                 0.518s
Time for coverage check:                 0.049s
  Time for BDD entailment checks:        0.043s
Total time for SMT solver (w/o itp):     0.993s

Number of path formula cache hits:   99958 (76%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     5.914s

Total number of created targets for pointer analysis: 1846
   Number of created targets for uf: *(void)* is 701
   Number of created targets for uf: *unsigned_long_long_int is 1147


Number of BDD nodes:                               334
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         509 (count: 18219, min: 0, max: 53, avg: 0.03)
Time for BDD node cleanup:                             0.032s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.597s
  Time for transition matches:                         0.310s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.001s
Automaton transfers with branching:                0
Automaton transfer successors:                       116525 (count: 116525, min: 1, max: 1, avg: 1.00) [1 x 116525]

CPA algorithm statistics
------------------------
Number of iterations:            60771
Max size of waitlist:            282
Average size of waitlist:        133
Number of computed successors:   73359
Max successors for one state:    2
Number of times merged:          5856
Number of times stopped:         6868
Number of times breaked:         29

Total time for CPA algorithm:        19.545s (Max:     2.242s)
  Time for choose from waitlist:      0.241s
  Time for precision adjustment:      5.708s
  Time for transfer relation:        10.781s
  Time for merge operator:            0.940s
  Time for stop operator:             0.345s
  Time for adding to reached set:     0.464s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   29
Avg. length of target path (in blocks):                1021 (count: 29, min: 18, max: 63, avg: 35.21)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   2.240s
  Counterexample analysis:                             1.697s (Max:     0.110s, Calls: 29)
    Refinement sat check:                              1.302s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.007s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.064s
  Precision update:                                    0.039s
  ARG update:                                          0.413s

Length of refined path (in blocks):                     755 (count: 29, min: 12, max: 62, avg: 26.03)
Number of affected states:                              454 (count: 29, min: 1, max: 53, avg: 15.66)
Length (states) of path with itp 'true':                272 (count: 29, min: 8, max: 10, avg: 9.38)
Length (states) of path with itp non-trivial itp:       454 (count: 29, min: 1, max: 53, avg: 15.66)
Length (states) of path with itp 'false':                29 (count: 29, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           9 (count: 29, min: 0, max: 1, avg: 0.31)
Equal non-trivial interpolants along paths:             416 (count: 29, min: 0, max: 51, avg: 14.34)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                29
Number of successful refinements:     29
Number of failed refinements:         0
Max. size of reached set before ref.: 3056
Max. size of reached set after ref.:  42
Avg. size of reached set before ref.: 2274.28
Avg. size of reached set after ref.:  40.76

Total time for CEGAR algorithm:      22.023s
Time for refinements:                 2.470s
Average time for refinement:          0.085s
Max time for refinement:              0.167s

Code Coverage
-----------------------------
  Function coverage:      0.204
  Visited lines:          1975
  Total lines:            6633
  Line coverage:          0.298
  Visited conditions:     306
  Total conditions:       1356
  Condition coverage:     0.226

CPAchecker general statistics
-----------------------------
Number of program locations:     9036
Number of CFA edges:             10369
Number of relevant variables:    1490
Number of functions:             304
Number of loops:                 66
Size of reached set:             1454
  Number of reached locations:   639 (7%)
    Avg states per location:     2
    Max states per location:     65 (at node N748)
  Number of reached functions:   62 (20%)
  Number of partitions:          1453
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N3632 (before line 10736), Function main called from node N3582, stack depth 1 [2969a9a6], stack [main]])
  Number of target states:       0
  Size of final wait list        137

Time for analysis setup:          8.188s
  Time for loading CPAs:          1.166s
  Time for loading parser:        0.749s
  Time for CFA construction:      6.122s
    Time for parsing file(s):     1.395s
    Time for AST to CFA:          2.190s
    Time for CFA sanity check:    0.458s
    Time for post-processing:     1.789s
      Time for var class.:        0.940s
Time for Analysis:               22.023s
CPU time for analysis:           22.020s
Total time for CPAchecker:       30.215s
Total CPU time for CPAchecker:   30.190s
Time for statistics:              0.178s

Time for Garbage Collector:       0.743s (in 42 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 87MB (    83 MiB) max;     57MB (    54 MiB) avg;     91MB (    87 MiB) peak
Used non-heap memory:             40MB (    38 MiB) max;     34MB (    33 MiB) avg;     40MB (    39 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        42MB (    40 MiB) max;     36MB (    34 MiB) avg
Total process virtual memory:   8086MB (  7711 MiB) max;   8069MB (  7696 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
