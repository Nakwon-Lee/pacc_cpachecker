scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.16-rc1/205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--intel--ixgb--ixgb.ko-entry_point_true-unreach-call.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_w55u_brx/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 13406: Dead code detected: return (0); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 6793: Function pointer *(ops->alloc) with type void *(*)(struct device *, size_t , dma_addr_t *, gfp_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6825: Function pointer *(ops->free) with type void (*)(struct device *, size_t , void *, dma_addr_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6665: Function pointer *(ops->map_page) with type dma_addr_t (*)(struct device *, struct page *, unsigned long, size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 6598-6599: Function pointer *(ops->map_page) with type dma_addr_t (*)(struct device *, struct page *, unsigned long, size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6715: Function pointer *(ops->mapping_error) with type int (*)(struct device *, dma_addr_t ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6695: Function pointer *(ops->unmap_page) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6632: Function pointer *(ops->unmap_page) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

line 10719: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___4 = ldv_zalloc(32UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ndo_uninit_4 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ndo_init_4 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function eth_validate_addr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_probe_6 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_release_6 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_suspend_6 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_enable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 10460: Ignoring function call through function pointer *(timer->function): (*(timer->function))(timer->data); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function __pci_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dma_set_mask to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_request_regions to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_set_master to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function alloc_etherdev_mqs to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_release_regions to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_disable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netdev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function disable_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 14936: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___0 = ldv_zalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function vzalloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netif_carrier_off to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 14938: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___1 = ldv_zalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function __dev_kfree_skb_any to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 14944: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___4 = ldv_zalloc(196UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 14950: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___7 = ldv_zalloc(8UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 14952: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___8 = ldv_zalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 14954: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___9 = ldv_zalloc(12UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function ethtool_op_get_link to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 11161: Destroying the void* pointer ldv_main_exported_3::tmp___2 produces garbage or the memory pointed by it is unused: ldv_main_exported_3(); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function cancel_work_sync to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function unregister_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iounmap to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netif_device_detach to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_pr_debug to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netif_device_attach to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __might_sleep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dma_supported to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function enable_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_ioremap_bar to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netif_napi_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strlcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strncpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __init_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function lockdep_init_map to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function register_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function msleep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function vfree to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netdev_info to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            2336355 (16% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  2113376 (90%)
  Because of loop head:            221675 (9%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         1304 (0%)
  Times precision was empty:       670071 (29%)
  Times precision was {false}:     7066 (0%)
  Times result was cached:         1650111 (71%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      9107 (0%)
  Times result was 'false':        93876 (4%)
Number of strengthen sat checks:   0
Number of coverage checks:         2297506
  BDD entailment checks:           1059720
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       180
Number of predicates discovered:          29
Number of abstraction locations:          407
Max number of predicates per location:    17
Avg number of predicates per location:    2
Total predicates per abstraction:         4913975
Max number of predicates per abstraction: 18
Avg number of predicates per abstraction: 303.84
Number of irrelevant predicates:          2650648 (54%)
Number of preds handled by boolean abs:   21767 (0%)
  Total number of models for allsat:      19235
  Max number of models for allsat:        324
  Avg number of models for allsat:        2.11

Time for post operator:                114.432s
  Time for path formula creation:      107.497s
Time for strengthen operator:           11.958s
Time for prec operator:                290.801s
  Time for abstraction:                259.218s (Max:     1.451s, Count: 2336355)
    Boolean abstraction:                17.677s
    Solving time:                       15.723s (Max:     0.196s)
    Model enumeration time:              4.236s
    Time for BDD construction:           0.526s (Max:     0.012s)
Time for merge operator:                 8.869s
Time for coverage check:                 1.059s
  Time for BDD entailment checks:        0.728s
Total time for SMT solver (w/o itp):    19.959s

Number of path formula cache hits:   16457595 (97%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    37.573s

Total number of created targets for pointer analysis: 182396
   Number of created targets for uf: *unsigned_short_int is 277
   Number of created targets for uf: *(void)* is 829
   Number of created targets for uf: *signed_int is 2266
   Number of created targets for uf: *(char)* is 281
   Number of created targets for uf: *unsigned_char is 243
   Number of created targets for uf: *(struct_list_head)* is 23
   Number of created targets for uf: *(unsigned_char)* is 106
   Number of created targets for uf: *unsigned_long_long_int is 3232
   Number of created targets for uf: *unsigned_int is 265
   Number of created targets for uf: *unsigned_long_int is 526


Number of BDD nodes:                               15282
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       22628 (count: 1864680, min: 0, max: 602, avg: 0.01)
Time for BDD node cleanup:                             0.242s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                 19.238s
  Time for transition matches:                        10.840s
  Time for transition assertions:                      0.002s
  Time for transition actions:                         0.010s
Automaton transfers with branching:                0
Automaton transfer successors:                     14165377 (count: 14165377, min: 1, max: 1, avg: 1.00) [1 x 14165377]

CPA algorithm statistics
------------------------
Number of iterations:            8423274
Max size of waitlist:            1005
Average size of waitlist:        557
Number of computed successors:   9692336
Max successors for one state:    2
Number of times merged:          618893
Number of times stopped:         912263
Number of times breaked:         1304

Total time for CPA algorithm:       732.561s (Max:    13.238s)
  Time for choose from waitlist:      4.024s
  Time for precision adjustment:    355.154s
  Time for transfer relation:       309.964s
  Time for merge operator:           16.573s
  Time for stop operator:            10.478s
  Time for adding to reached set:    14.822s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   1304
Avg. length of target path (in blocks):              103540 (count: 1304, min: 18, max: 158, avg: 79.40)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                 105.877s
  Counterexample analysis:                            86.899s (Max:     0.446s, Calls: 1304)
    Refinement sat check:                             62.325s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.076s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.263s
  Precision update:                                    1.146s
  ARG update:                                         16.776s

Length of refined path (in blocks):                   81826 (count: 1304, min: 12, max: 157, avg: 62.75)
Number of affected states:                            18311 (count: 1304, min: 1, max: 148, avg: 14.04)
Length (states) of path with itp 'true':              62211 (count: 1304, min: 0, max: 78, avg: 47.71)
Length (states) of path with itp non-trivial itp:     18311 (count: 1304, min: 1, max: 148, avg: 14.04)
Length (states) of path with itp 'false':              1304 (count: 1304, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:         928 (count: 1304, min: 0, max: 3, avg: 0.71)
Equal non-trivial interpolants along paths:           16079 (count: 1304, min: 0, max: 146, avg: 12.33)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                1304
Number of successful refinements:     1304
Number of failed refinements:         0
Max. size of reached set before ref.: 72988
Max. size of reached set after ref.:  38971
Avg. size of reached set before ref.: 28885.47
Avg. size of reached set after ref.:  22237.54

Total time for CEGAR algorithm:     892.346s
Time for refinements:               137.163s
Average time for refinement:          0.105s
Max time for refinement:              0.619s

Code Coverage
-----------------------------
  Function coverage:      0.339
  Visited lines:          2472
  Total lines:            6633
  Line coverage:          0.373
  Visited conditions:     390
  Total conditions:       1356
  Condition coverage:     0.288

CPAchecker general statistics
-----------------------------
Number of program locations:     9036
Number of CFA edges:             10369
Number of relevant variables:    1490
Number of functions:             304
Number of loops:                 66
Size of reached set:             17296
  Number of reached locations:   1061 (12%)
    Avg states per location:     16
    Max states per location:     406 (at node N748)
  Number of reached functions:   103 (34%)
  Number of partitions:          17222
    Avg size of partitions:      1
    Max size of partitions:      16 (with key [N3632 (before line 10736), Function main called from node N3582, stack depth 1 [2969a9a6], stack [main]])
  Number of target states:       0
  Size of final wait list        698

Time for analysis setup:          7.907s
  Time for loading CPAs:          1.148s
  Time for loading parser:        0.663s
  Time for CFA construction:      5.905s
    Time for parsing file(s):     1.396s
    Time for AST to CFA:          2.073s
    Time for CFA sanity check:    0.505s
    Time for post-processing:     1.689s
      Time for var class.:        0.876s
Time for Analysis:              892.346s
CPU time for analysis:          892.270s
Total time for CPAchecker:      900.257s
Total CPU time for CPAchecker:  900.150s
Time for statistics:              0.403s

Time for Garbage Collector:      68.051s (in 1624 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                655MB (   625 MiB) max;    303MB (   289 MiB) avg;    679MB (   648 MiB) peak
Used non-heap memory:             42MB (    40 MiB) max;     41MB (    39 MiB) avg;     42MB (    40 MiB) peak
Allocated heap memory:           674MB (   643 MiB) max;    446MB (   425 MiB) avg
Allocated non-heap memory:        44MB (    42 MiB) max;     43MB (    41 MiB) avg
Total process virtual memory:   8291MB (  7907 MiB) max;   8184MB (  7805 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
