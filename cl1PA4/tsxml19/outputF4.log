scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.16-rc1/205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--intel--ixgb--ixgb.ko-entry_point_true-unreach-call.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_bjqqqz69/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 13406: Dead code detected: return (0); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 6793: Function pointer *(ops->alloc) with type void *(*)(struct device *, size_t , dma_addr_t *, gfp_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6825: Function pointer *(ops->free) with type void (*)(struct device *, size_t , void *, dma_addr_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6665: Function pointer *(ops->map_page) with type dma_addr_t (*)(struct device *, struct page *, unsigned long, size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 6598-6599: Function pointer *(ops->map_page) with type dma_addr_t (*)(struct device *, struct page *, unsigned long, size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6715: Function pointer *(ops->mapping_error) with type int (*)(struct device *, dma_addr_t ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6695: Function pointer *(ops->unmap_page) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6632: Function pointer *(ops->unmap_page) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

line 10719: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___4 = ldv_zalloc(32UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ndo_uninit_4 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ndo_init_4 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function eth_validate_addr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_probe_6 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_release_6 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_suspend_6 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_enable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 14936: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___0 = ldv_zalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 14938: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___1 = ldv_zalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 14944: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___4 = ldv_zalloc(196UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 14950: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___7 = ldv_zalloc(8UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 14952: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___8 = ldv_zalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 14954: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___9 = ldv_zalloc(12UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function ethtool_op_get_link to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 11161: Destroying the void* pointer ldv_main_exported_3::tmp___2 produces garbage or the memory pointed by it is unused: ldv_main_exported_3(); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function dma_set_mask to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_request_regions to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_set_master to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function alloc_etherdev_mqs to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_release_regions to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_disable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 10460: Ignoring function call through function pointer *(timer->function): (*(timer->function))(timer->data); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function dma_supported to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __pci_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netdev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function vzalloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netif_carrier_off to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function vfree to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dev_kfree_skb_any to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function disable_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __might_sleep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function msleep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_pr_debug to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function synchronize_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strlcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function enable_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 6793: Ignoring function call through function pointer *(ops->alloc): memory = (*(ops->alloc))(dev, size, dma_handle, tmp___1, attrs); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function debug_dma_alloc_coherent to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function debug_dma_free_coherent to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 6825: Ignoring function call through function pointer *(ops->free): (*(ops->free))(dev, size, vaddr, bus, attrs); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            1839417 (18% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  1725558 (94%)
  Because of loop head:            113499 (6%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         360 (0%)
  Times precision was empty:       1115135 (61%)
  Times precision was {false}:     4814 (0%)
  Times result was cached:         702866 (38%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      16602 (1%)
  Times result was 'false':        44276 (2%)
Number of strengthen sat checks:   0
Number of coverage checks:         1027591
  BDD entailment checks:           333237
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       180
Number of predicates discovered:          19
Number of abstraction locations:          245
Max number of predicates per location:    14
Avg number of predicates per location:    6
Total predicates per abstraction:         3708071
Max number of predicates per abstraction: 14
Avg number of predicates per abstraction: 173.14
Number of irrelevant predicates:          2072123 (56%)
Number of preds handled by boolean abs:   65766 (2%)
  Total number of models for allsat:      21389
  Max number of models for allsat:        72
  Avg number of models for allsat:        1.29

Time for post operator:                125.408s
  Time for path formula creation:      121.375s
Time for strengthen operator:           10.021s
Time for prec operator:                396.694s
  Time for abstraction:                372.594s (Max:     1.798s, Count: 1839417)
    Boolean abstraction:               151.371s
    Solving time:                      147.292s (Max:     1.760s)
    Model enumeration time:              5.938s
    Time for BDD construction:           0.580s (Max:     0.011s)
Time for merge operator:                 5.652s
Time for coverage check:                 0.388s
  Time for BDD entailment checks:        0.240s
Total time for SMT solver (w/o itp):   153.230s

Number of path formula cache hits:   11643588 (94%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    76.594s

Total number of created targets for pointer analysis: 891136
   Number of created targets for uf: *(void)* is 133
   Number of created targets for uf: *unsigned_short_int is 2904
   Number of created targets for uf: *signed_int is 3613
   Number of created targets for uf: *unsigned_long_long_int is 7228
   Number of created targets for uf: *unsigned_int is 2204
   Number of created targets for uf: *unsigned_long_int is 14701


Number of BDD nodes:                               15031
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       39586 (count: 1577984, min: 0, max: 552, avg: 0.03)
Time for BDD node cleanup:                             0.267s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                 14.017s
  Time for transition matches:                         8.007s
  Time for transition assertions:                      0.001s
  Time for transition actions:                         0.004s
Automaton transfers with branching:                0
Automaton transfer successors:                     10402401 (count: 10402401, min: 1, max: 1, avg: 1.00) [1 x 10402401]

CPA algorithm statistics
------------------------
Number of iterations:            6033549
Max size of waitlist:            1099
Average size of waitlist:        477
Number of computed successors:   6742044
Max successors for one state:    2
Number of times merged:          347177
Number of times stopped:         457017
Number of times breaked:         360

Total time for CPA algorithm:       849.640s (Max:    17.158s)
  Time for choose from waitlist:      2.490s
  Time for precision adjustment:    438.283s
  Time for transfer relation:       367.006s
  Time for merge operator:           10.060s
  Time for stop operator:             6.848s
  Time for adding to reached set:     9.226s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   360
Avg. length of target path (in blocks):               24748 (count: 360, min: 18, max: 202, avg: 68.74)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  38.852s
  Counterexample analysis:                            27.470s (Max:     0.572s, Calls: 360)
    Refinement sat check:                             20.892s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.027s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.178s
  Precision update:                                    0.326s
  ARG update:                                         10.633s

Length of refined path (in blocks):                   20564 (count: 360, min: 12, max: 188, avg: 57.12)
Number of affected states:                            18075 (count: 360, min: 1, max: 184, avg: 50.21)
Length (states) of path with itp 'true':               2129 (count: 360, min: 0, max: 67, avg: 5.91)
Length (states) of path with itp non-trivial itp:     18075 (count: 360, min: 1, max: 184, avg: 50.21)
Length (states) of path with itp 'false':               360 (count: 360, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:         230 (count: 360, min: 0, max: 3, avg: 0.64)
Equal non-trivial interpolants along paths:           17485 (count: 360, min: 0, max: 182, avg: 48.57)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                360
Number of successful refinements:     360
Number of failed refinements:         0
Max. size of reached set before ref.: 36804
Max. size of reached set after ref.:  15243
Avg. size of reached set before ref.: 18443.88
Avg. size of reached set after ref.:  1177.44

Total time for CEGAR algorithm:     892.387s
Time for refinements:                42.451s
Average time for refinement:          0.117s
Max time for refinement:              0.636s

Code Coverage
-----------------------------
  Function coverage:      0.424
  Visited lines:          3740
  Total lines:            6633
  Line coverage:          0.564
  Visited conditions:     642
  Total conditions:       1356
  Condition coverage:     0.473

CPAchecker general statistics
-----------------------------
Number of program locations:     9036
Number of CFA edges:             10369
Number of relevant variables:    1490
Number of functions:             304
Number of loops:                 66
Size of reached set:             24832
  Number of reached locations:   1996 (22%)
    Avg states per location:     12
    Max states per location:     871 (at node N77)
  Number of reached functions:   129 (42%)
  Number of partitions:          24801
    Avg size of partitions:      1
    Max size of partitions:      7 (with key [N3632 (before line 10736), Function main called from node N3582, stack depth 1 [2969a9a6], stack [main]])
  Number of target states:       0
  Size of final wait list        641

Time for analysis setup:          7.886s
  Time for loading CPAs:          1.010s
  Time for loading parser:        0.746s
  Time for CFA construction:      5.968s
    Time for parsing file(s):     1.359s
    Time for AST to CFA:          2.206s
    Time for CFA sanity check:    0.505s
    Time for post-processing:     1.643s
      Time for var class.:        0.861s
Time for Analysis:              892.387s
CPU time for analysis:          892.290s
Total time for CPAchecker:      900.285s
Total CPU time for CPAchecker:  900.170s
Time for statistics:              0.495s

Time for Garbage Collector:      51.540s (in 1160 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                775MB (   739 MiB) max;    386MB (   368 MiB) avg;    823MB (   785 MiB) peak
Used non-heap memory:             41MB (    39 MiB) max;     40MB (    38 MiB) avg;     42MB (    40 MiB) peak
Allocated heap memory:           898MB (   856 MiB) max;    566MB (   540 MiB) avg
Allocated non-heap memory:        44MB (    42 MiB) max;     43MB (    41 MiB) avg
Total process virtual memory:   8626MB (  8227 MiB) max;   8322MB (  7936 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
