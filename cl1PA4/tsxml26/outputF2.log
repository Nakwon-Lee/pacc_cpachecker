scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.16-rc1/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--usb--pegasus.ko-entry_point_true-unreach-call.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_4kn0p17f/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

line 8510: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___4 = ldv_zalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ndo_uninit_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ndo_init_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function eth_mac_addr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function eth_change_mtu to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function eth_validate_addr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_reset_resume_1 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_deregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mii_ethtool_gset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strlcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snprintf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netdev_warn to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_unlink_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netif_device_detach to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function cancel_delayed_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_kill_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tasklet_kill to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netif_device_attach to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_control_msg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_netdev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_set_wakeup_enable to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function unregister_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_dev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_free_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function consume_skb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function destroy_workqueue to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function capable to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netdev_info to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_submit_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strsep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function simple_strtoul to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_final_state to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 8457: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___0 = ldv_zalloc(44UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function __alloc_workqueue_key to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function alloc_etherdev_mqs to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_alloc_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __netdev_alloc_skb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tasklet_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __init_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function lockdep_init_map to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function init_timer_key to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _dev_info to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_warn to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function register_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netdev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function skb_put to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netif_rx to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __tasklet_schedule to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netif_carrier_off to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netif_carrier_on to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            2050174 (16% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  1949038 (95%)
  Because of loop head:            100761 (5%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         375 (0%)
  Times precision was empty:       187389 (9%)
  Times precision was {false}:     9260 (0%)
  Times result was cached:         1826296 (89%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      27229 (1%)
  Times result was 'false':        74289 (4%)
Number of strengthen sat checks:   0
Number of coverage checks:         1994842
  BDD entailment checks:           560434
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       49
Number of predicates discovered:          9
Number of abstraction locations:          331
Max number of predicates per location:    8
Avg number of predicates per location:    3
Total predicates per abstraction:         6475612
Max number of predicates per abstraction: 8
Avg number of predicates per abstraction: 177.47
Number of irrelevant predicates:          3237897 (50%)
Number of preds handled by boolean abs:   51758 (1%)
  Total number of models for allsat:      27736
  Max number of models for allsat:        12
  Avg number of models for allsat:        1.02

Time for post operator:                153.573s
  Time for path formula creation:      147.871s
Time for strengthen operator:           12.179s
Time for prec operator:                371.286s
  Time for abstraction:                342.601s (Max:     2.893s, Count: 2050174)
    Boolean abstraction:                36.488s
    Solving time:                       41.551s (Max:     0.085s)
    Model enumeration time:              2.928s
    Time for BDD construction:           0.474s (Max:     0.008s)
Time for merge operator:                11.753s
Time for coverage check:                 0.847s
  Time for BDD entailment checks:        0.553s
Total time for SMT solver (w/o itp):    44.479s

Number of path formula cache hits:   13688818 (91%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    94.746s

Total number of created targets for pointer analysis: 416671
   Number of created targets for uf: *(void)* is 685
   Number of created targets for uf: *unsigned_short_int is 39434
   Number of created targets for uf: *(char)* is 4117
   Number of created targets for uf: *signed_int is 315
   Number of created targets for uf: *unsigned_char is 22225
   Number of created targets for uf: *(unsigned_char)* is 615
   Number of created targets for uf: *unsigned_int is 3266
   Number of created targets for uf: *(struct_device)* is 467


Number of BDD nodes:                               1511
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       54568 (count: 968941, min: 0, max: 780, avg: 0.06)
Time for BDD node cleanup:                             0.215s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                 16.357s
  Time for transition matches:                         8.688s
  Time for transition assertions:                      0.001s
  Time for transition actions:                         0.003s
Automaton transfers with branching:                0
Automaton transfer successors:                     12662971 (count: 12662971, min: 1, max: 1, avg: 1.00) [1 x 12662971]

CPA algorithm statistics
------------------------
Number of iterations:            8615932
Max size of waitlist:            46
Average size of waitlist:        18
Number of computed successors:   9795120
Max successors for one state:    2
Number of times merged:          717204
Number of times stopped:         1096837
Number of times breaked:         375

Total time for CPA algorithm:       790.072s (Max:    11.061s)
  Time for choose from waitlist:      3.086s
  Time for precision adjustment:    442.522s
  Time for transfer relation:       273.391s
  Time for merge operator:           21.679s
  Time for stop operator:            10.789s
  Time for adding to reached set:    14.139s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   375
Avg. length of target path (in blocks):               38575 (count: 375, min: 19, max: 260, avg: 102.87)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  48.819s
  Counterexample analysis:                            28.738s (Max:     0.264s, Calls: 375)
    Refinement sat check:                             19.290s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.026s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.281s
  Precision update:                                    0.509s
  ARG update:                                         18.920s

Length of refined path (in blocks):                   31971 (count: 375, min: 12, max: 228, avg: 85.26)
Number of affected states:                            28369 (count: 375, min: 1, max: 227, avg: 75.65)
Length (states) of path with itp 'true':               3227 (count: 375, min: 0, max: 89, avg: 8.61)
Length (states) of path with itp non-trivial itp:     28369 (count: 375, min: 1, max: 227, avg: 75.65)
Length (states) of path with itp 'false':               375 (count: 375, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 375, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:           27994 (count: 375, min: 0, max: 226, avg: 74.65)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                375
Number of successful refinements:     375
Number of failed refinements:         0
Max. size of reached set before ref.: 63770
Max. size of reached set after ref.:  28795
Avg. size of reached set before ref.: 24997.66
Avg. size of reached set after ref.:  2098.43

Total time for CEGAR algorithm:     845.743s
Time for refinements:                55.046s
Average time for refinement:          0.146s
Max time for refinement:              0.578s

Code Coverage
-----------------------------
  Function coverage:      0.767
  Visited lines:          2422
  Total lines:            2689
  Line coverage:          0.901
  Visited conditions:     550
  Total conditions:       630
  Condition coverage:     0.873

CPAchecker general statistics
-----------------------------
Number of program locations:     3701
Number of CFA edges:             4138
Number of relevant variables:    547
Number of functions:             133
Number of loops:                 9
Size of reached set:             36786
  Number of reached locations:   1592 (43%)
    Avg states per location:     23
    Max states per location:     867 (at node N102)
  Number of reached functions:   102 (77%)
  Number of partitions:          36729
    Avg size of partitions:      1
    Max size of partitions:      7 (with key [N2177 (before line 8524), Function main called from node N2130, stack depth 1 [17f2dd85], stack [main]])
  Number of target states:       0

Time for analysis setup:          6.532s
  Time for loading CPAs:          1.172s
  Time for loading parser:        0.757s
  Time for CFA construction:      4.430s
    Time for parsing file(s):     1.185s
    Time for AST to CFA:          1.615s
    Time for CFA sanity check:    0.319s
    Time for post-processing:     1.077s
      Time for var class.:        0.573s
Time for Analysis:              845.743s
CPU time for analysis:          845.670s
Time for analyzing result:        0.039s
Total time for CPAchecker:      852.279s
Total CPU time for CPAchecker:  852.190s
Time for statistics:              0.797s

Time for Garbage Collector:      76.041s (in 1257 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:               1045MB (   996 MiB) max;    442MB (   422 MiB) avg;   1070MB (  1021 MiB) peak
Used non-heap memory:             46MB (    44 MiB) max;     41MB (    39 MiB) avg;     46MB (    44 MiB) peak
Allocated heap memory:          1245MB (  1187 MiB) max;    651MB (   621 MiB) avg
Allocated non-heap memory:        47MB (    45 MiB) max;     47MB (    45 MiB) avg
Total process virtual memory:   8495MB (  8102 MiB) max;   8279MB (  7895 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
