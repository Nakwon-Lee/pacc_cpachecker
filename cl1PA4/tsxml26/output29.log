scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.16-rc1/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--usb--pegasus.ko-entry_point_true-unreach-call.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_gcze30tj/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

line 8510: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___4 = ldv_zalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ndo_uninit_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ndo_init_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function eth_mac_addr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function eth_change_mtu to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function eth_validate_addr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_reset_resume_1 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strsep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function simple_strtoul to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __alloc_workqueue_key to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function alloc_etherdev_mqs to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function destroy_workqueue to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_deregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mii_ethtool_gset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strlcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snprintf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netdev_warn to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_unlink_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function capable to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_control_msg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_netdev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netdev_info to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tasklet_kill to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_kill_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_final_state to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 8457: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___0 = ldv_zalloc(44UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function usb_alloc_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tasklet_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __init_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function lockdep_init_map to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function init_timer_key to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_free_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _dev_info to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_warn to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            11924 (14% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  11306 (95%)
  Because of loop head:            589 (5%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         29 (0%)
  Times precision was empty:       7115 (60%)
  Times precision was {false}:     832 (7%)
  Times result was cached:         3536 (30%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      441 (4%)
  Times result was 'false':        537 (5%)
Number of strengthen sat checks:   0
Number of coverage checks:         13324
  BDD entailment checks:           1104
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       49
Number of predicates discovered:          7
Number of abstraction locations:          78
Max number of predicates per location:    6
Avg number of predicates per location:    2
Total predicates per abstraction:         7714
Max number of predicates per abstraction: 6
Avg number of predicates per abstraction: 6.06
Number of irrelevant predicates:          5516 (72%)
Number of preds handled by boolean abs:   724 (9%)
  Total number of models for allsat:      563
  Max number of models for allsat:        8
  Avg number of models for allsat:        1.28

Time for post operator:                  8.479s
  Time for path formula creation:        8.272s
Time for strengthen operator:            0.184s
Time for prec operator:                  5.936s
  Time for abstraction:                  5.339s (Max:     0.118s, Count: 11924)
    Boolean abstraction:                 1.185s
    Solving time:                        1.385s (Max:     0.091s)
    Model enumeration time:              0.157s
    Time for BDD construction:           0.151s (Max:     0.013s)
Time for merge operator:                 0.577s
Time for coverage check:                 0.048s
  Time for BDD entailment checks:        0.023s
Total time for SMT solver (w/o itp):     1.542s

Number of path formula cache hits:   52593 (56%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     7.680s

Total number of created targets for pointer analysis: 5781
   Number of created targets for uf: *(void)* is 11
   Number of created targets for uf: *unsigned_short_int is 116
   Number of created targets for uf: *signed_int is 6
   Number of created targets for uf: *(char)* is 757
   Number of created targets for uf: *unsigned_char is 139
   Number of created targets for uf: *unsigned_int is 116


Number of BDD nodes:                               329
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         893 (count: 15168, min: 0, max: 130, avg: 0.06)
Time for BDD node cleanup:                             0.028s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.637s
  Time for transition matches:                         0.283s
  Time for transition assertions:                      0.001s
  Time for transition actions:                         0.000s
Automaton transfers with branching:                0
Automaton transfer successors:                        84261 (count: 84261, min: 1, max: 1, avg: 1.00) [1 x 84261]

CPA algorithm statistics
------------------------
Number of iterations:            51304
Max size of waitlist:            160
Average size of waitlist:        64
Number of computed successors:   61564
Max successors for one state:    2
Number of times merged:          6110
Number of times stopped:         6942
Number of times breaked:         29

Total time for CPA algorithm:        21.304s (Max:     1.768s)
  Time for choose from waitlist:      0.194s
  Time for precision adjustment:      7.131s
  Time for transfer relation:        11.568s
  Time for merge operator:            0.890s
  Time for stop operator:             0.296s
  Time for adding to reached set:     0.335s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   29
Avg. length of target path (in blocks):                1591 (count: 29, min: 19, max: 142, avg: 54.86)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   2.511s
  Counterexample analysis:                             2.071s (Max:     0.141s, Calls: 29)
    Refinement sat check:                              1.511s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.063s
  Precision update:                                    0.029s
  ARG update:                                          0.313s

Length of refined path (in blocks):                    1129 (count: 29, min: 12, max: 122, avg: 38.93)
Number of affected states:                              940 (count: 29, min: 1, max: 121, avg: 32.41)
Length (states) of path with itp 'true':                160 (count: 29, min: 0, max: 10, avg: 5.52)
Length (states) of path with itp non-trivial itp:       940 (count: 29, min: 1, max: 121, avg: 32.41)
Length (states) of path with itp 'false':                29 (count: 29, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 29, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:             911 (count: 29, min: 0, max: 120, avg: 31.41)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                29
Number of successful refinements:     29
Number of failed refinements:         0
Max. size of reached set before ref.: 3904
Max. size of reached set after ref.:  53
Avg. size of reached set before ref.: 1826.93
Avg. size of reached set after ref.:  30.59

Total time for CEGAR algorithm:      23.984s
Time for refinements:                 2.680s
Average time for refinement:          0.092s
Max time for refinement:              0.168s

Code Coverage
-----------------------------
  Function coverage:      0.451
  Visited lines:          1687
  Total lines:            2689
  Line coverage:          0.627
  Visited conditions:     296
  Total conditions:       630
  Condition coverage:     0.470

CPAchecker general statistics
-----------------------------
Number of program locations:     3701
Number of CFA edges:             4138
Number of relevant variables:    547
Number of functions:             133
Number of loops:                 9
Size of reached set:             1992
  Number of reached locations:   724 (20%)
    Avg states per location:     2
    Max states per location:     53 (at node N154)
  Number of reached functions:   60 (45%)
  Number of partitions:          1990
    Avg size of partitions:      1
    Max size of partitions:      3 (with key [N2177 (before line 8524), Function main called from node N2130, stack depth 1 [17f2dd85], stack [main]])
  Number of target states:       0
  Size of final wait list        102

Time for analysis setup:          6.286s
  Time for loading CPAs:          1.026s
  Time for loading parser:        0.767s
  Time for CFA construction:      4.366s
    Time for parsing file(s):     1.156s
    Time for AST to CFA:          1.708s
    Time for CFA sanity check:    0.283s
    Time for post-processing:     0.979s
      Time for var class.:        0.488s
Time for Analysis:               23.984s
CPU time for analysis:           23.990s
Total time for CPAchecker:       30.274s
Total CPU time for CPAchecker:   30.260s
Time for statistics:              0.149s

Time for Garbage Collector:       0.621s (in 36 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 83MB (    79 MiB) max;     52MB (    49 MiB) avg;     85MB (    81 MiB) peak
Used non-heap memory:             41MB (    39 MiB) max;     35MB (    33 MiB) avg;     41MB (    39 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        43MB (    41 MiB) max;     36MB (    35 MiB) avg
Total process virtual memory:   8086MB (  7711 MiB) max;   8071MB (  7697 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
