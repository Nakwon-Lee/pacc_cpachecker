scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.16-rc1/205_9a_array_safes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--usb--cdc_eem.ko-entry_point_true-unreach-call.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_vappi05o/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_release_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_reset_resume_1 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usbnet_resume to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usbnet_suspend to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usbnet_disconnect to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usbnet_probe to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usbnet_get_endpoints to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function skb_copy_expand to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_deregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dev_kfree_skb_any to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function crc32_le to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function skb_put to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function skb_push to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_driver_release_interface to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function skb_pull to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function skb_clone to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netdev_warn to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usbnet_device_suggests_idle to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function skb_trim to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_netdev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_alloc_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memmove to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usbnet_skb_return to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_submit_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_free_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            16264 (16% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  13107 (81%)
  Because of loop head:            3083 (19%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         74 (0%)
  Times precision was empty:       6453 (40%)
  Times precision was {false}:     313 (2%)
  Times result was cached:         9091 (56%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      407 (3%)
  Times result was 'false':        1013 (6%)
Number of strengthen sat checks:   0
Number of coverage checks:         19356
  BDD entailment checks:           5238
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       30
Number of predicates discovered:          14
Number of abstraction locations:          96
Max number of predicates per location:    5
Avg number of predicates per location:    1
Total predicates per abstraction:         15104
Max number of predicates per abstraction: 5
Avg number of predicates per abstraction: 20.98
Number of irrelevant predicates:          7266 (48%)
Number of preds handled by boolean abs:   715 (5%)
  Total number of models for allsat:      473
  Max number of models for allsat:        6
  Avg number of models for allsat:        1.16

Time for post operator:                  4.588s
  Time for path formula creation:        4.457s
Time for strengthen operator:            0.279s
Time for prec operator:                  5.378s
  Time for abstraction:                  4.674s (Max:     0.034s, Count: 16264)
    Boolean abstraction:                 0.762s
    Solving time:                        0.581s (Max:     0.017s)
    Model enumeration time:              0.090s
    Time for BDD construction:           0.105s (Max:     0.009s)
Time for merge operator:                 0.380s
Time for coverage check:                 0.059s
  Time for BDD entailment checks:        0.058s
Total time for SMT solver (w/o itp):     0.671s

Number of path formula cache hits:   93913 (78%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     3.942s

Total number of created targets for pointer analysis: 213
   Number of created targets for uf: *(void)* is 31
   Number of created targets for uf: *(unsigned_char)* is 5
   Number of created targets for uf: *unsigned_int is 13


Number of BDD nodes:                               330
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         989 (count: 15978, min: 0, max: 257, avg: 0.06)
Time for BDD node cleanup:                             0.035s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.518s
  Time for transition matches:                         0.221s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.000s
Automaton transfers with branching:                0
Automaton transfer successors:                       103669 (count: 103669, min: 1, max: 1, avg: 1.00) [1 x 103669]

CPA algorithm statistics
------------------------
Number of iterations:            66694
Max size of waitlist:            67
Average size of waitlist:        26
Number of computed successors:   79116
Max successors for one state:    2
Number of times merged:          7059
Number of times stopped:         9879
Number of times breaked:         74

Total time for CPA algorithm:        16.484s (Max:     1.250s)
  Time for choose from waitlist:      0.107s
  Time for precision adjustment:      6.634s
  Time for transfer relation:         7.488s
  Time for merge operator:            0.710s
  Time for stop operator:             0.415s
  Time for adding to reached set:     0.307s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   74
Avg. length of target path (in blocks):                3194 (count: 74, min: 18, max: 58, avg: 43.16)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   2.452s
  Counterexample analysis:                             1.867s (Max:     0.049s, Calls: 74)
    Refinement sat check:                              1.103s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.006s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.065s
  Precision update:                                    0.095s
  ARG update:                                          0.342s

Length of refined path (in blocks):                    2538 (count: 74, min: 10, max: 51, avg: 34.30)
Number of affected states:                             1018 (count: 74, min: 1, max: 44, avg: 13.76)
Length (states) of path with itp 'true':               1446 (count: 74, min: 6, max: 30, avg: 19.54)
Length (states) of path with itp non-trivial itp:      1018 (count: 74, min: 1, max: 44, avg: 13.76)
Length (states) of path with itp 'false':                74 (count: 74, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:          24 (count: 74, min: 0, max: 1, avg: 0.32)
Equal non-trivial interpolants along paths:             920 (count: 74, min: 0, max: 42, avg: 12.43)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                74
Number of successful refinements:     74
Number of failed refinements:         0
Max. size of reached set before ref.: 2415
Max. size of reached set after ref.:  1551
Avg. size of reached set before ref.: 1500.32
Avg. size of reached set after ref.:  603.91

Total time for CEGAR algorithm:      19.269s
Time for refinements:                 2.726s
Average time for refinement:          0.036s
Max time for refinement:              0.099s

Code Coverage
-----------------------------
  Function coverage:      0.657
  Visited lines:          1344
  Total lines:            1443
  Line coverage:          0.931
  Visited conditions:     162
  Total conditions:       186
  Condition coverage:     0.871

CPAchecker general statistics
-----------------------------
Number of program locations:     1837
Number of CFA edges:             1923
Number of relevant variables:    200
Number of functions:             67
Number of loops:                 7
Size of reached set:             1890
  Number of reached locations:   486 (26%)
    Avg states per location:     3
    Max states per location:     30 (at node N343)
  Number of reached functions:   44 (66%)
  Number of partitions:          1882
    Avg size of partitions:      1
    Max size of partitions:      3 (with key [N535 (before line 6233), Function main called from node N512, stack depth 1 [5fd62371], stack [main]])
  Number of target states:       0

Time for analysis setup:          5.014s
  Time for loading CPAs:          0.969s
  Time for loading parser:        0.706s
  Time for CFA construction:      3.170s
    Time for parsing file(s):     0.961s
    Time for AST to CFA:          1.110s
    Time for CFA sanity check:    0.172s
    Time for post-processing:     0.760s
      Time for var class.:        0.277s
Time for Analysis:               19.269s
CPU time for analysis:           19.270s
Time for analyzing result:        0.001s
Total time for CPAchecker:       24.295s
Total CPU time for CPAchecker:   24.280s
Time for statistics:              0.139s

Time for Garbage Collector:       0.458s (in 36 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 73MB (    69 MiB) max;     46MB (    43 MiB) avg;     75MB (    71 MiB) peak
Used non-heap memory:             40MB (    38 MiB) max;     34MB (    33 MiB) avg;     41MB (    39 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        42MB (    40 MiB) max;     36MB (    34 MiB) avg
Total process virtual memory:   8019MB (  7647 MiB) max;   8006MB (  7635 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
