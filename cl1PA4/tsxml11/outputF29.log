scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.16-rc1/205_9a_array_safes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--usb--cdc_eem.ko-entry_point_true-unreach-call.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_1bdgwber/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_release_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_reset_resume_1 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usbnet_resume to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usbnet_suspend to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usbnet_disconnect to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usbnet_probe to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_deregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function skb_pull to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function skb_clone to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netdev_warn to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usbnet_device_suggests_idle to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function skb_trim to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usbnet_skb_return to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dev_kfree_skb_any to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function crc32_le to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function skb_push to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_alloc_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_submit_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_free_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_netdev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usbnet_get_endpoints to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_driver_release_interface to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function skb_copy_expand to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memmove to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function skb_put to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            234100 (20% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  202214 (86%)
  Because of loop head:            31702 (14%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         184 (0%)
  Times precision was empty:       25563 (11%)
  Times precision was {false}:     590 (0%)
  Times result was cached:         179028 (76%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      28919 (12%)
  Times result was 'false':        20332 (9%)
Number of strengthen sat checks:   0
Number of coverage checks:         280454
  BDD entailment checks:           168396
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       30
Number of predicates discovered:          67
Number of abstraction locations:          96
Max number of predicates per location:    20
Avg number of predicates per location:    8
Total predicates per abstraction:         1498984
Max number of predicates per abstraction: 20
Avg number of predicates per abstraction: 50.80
Number of irrelevant predicates:          408879 (27%)
Number of preds handled by boolean abs:   183937 (12%)
  Total number of models for allsat:      138147
  Max number of models for allsat:        216
  Avg number of models for allsat:        4.78

Time for post operator:                 27.062s
  Time for path formula creation:       26.260s
Time for strengthen operator:            1.570s
Time for prec operator:                190.860s
  Time for abstraction:                187.063s (Max:     0.648s, Count: 234100)
    Boolean abstraction:                67.674s
    Solving time:                       41.561s (Max:     0.019s)
    Model enumeration time:             16.740s
    Time for BDD construction:           3.832s (Max:     0.041s)
Time for merge operator:                 1.449s
Time for coverage check:                 0.368s
  Time for BDD entailment checks:        0.283s
Total time for SMT solver (w/o itp):    58.301s

Number of path formula cache hits:   881992 (65%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    23.093s

Total number of created targets for pointer analysis: 33641
   Number of created targets for uf: *(void)* is 7921
   Number of created targets for uf: *(unsigned_char)* is 651
   Number of created targets for uf: *unsigned_int is 1957


Number of BDD nodes:                               113930
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       86674 (count: 385989, min: 0, max: 2562, avg: 0.22)
Time for BDD node cleanup:                             0.117s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  2.111s
  Time for transition matches:                         1.075s
  Time for transition assertions:                      0.007s
  Time for transition actions:                         0.009s
Automaton transfers with branching:                0
Automaton transfer successors:                      1183081 (count: 1183081, min: 1, max: 1, avg: 1.00) [1 x 1183081]

CPA algorithm statistics
------------------------
Number of iterations:            852635
Max size of waitlist:            158
Average size of waitlist:        20
Number of computed successors:   979913
Max successors for one state:    2
Number of times merged:          56029
Number of times stopped:         110373
Number of times breaked:         184

Total time for CPA algorithm:       254.663s (Max:    16.894s)
  Time for choose from waitlist:      0.614s
  Time for precision adjustment:    200.276s
  Time for transfer relation:        43.463s
  Time for merge operator:            2.725s
  Time for stop operator:             1.963s
  Time for adding to reached set:     1.965s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   184
Avg. length of target path (in blocks):               13451 (count: 184, min: 18, max: 152, avg: 73.10)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  10.691s
  Counterexample analysis:                             8.385s (Max:     0.393s, Calls: 184)
    Refinement sat check:                              4.102s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.007s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.166s
  Precision update:                                    0.128s
  ARG update:                                          1.839s

Length of refined path (in blocks):                   11300 (count: 184, min: 10, max: 142, avg: 61.41)
Number of affected states:                             5343 (count: 184, min: 1, max: 114, avg: 29.04)
Length (states) of path with itp 'true':               5773 (count: 184, min: 6, max: 113, avg: 31.38)
Length (states) of path with itp non-trivial itp:      5343 (count: 184, min: 1, max: 114, avg: 29.04)
Length (states) of path with itp 'false':               184 (count: 184, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:         399 (count: 184, min: 0, max: 10, avg: 2.17)
Equal non-trivial interpolants along paths:            4760 (count: 184, min: 0, max: 107, avg: 25.87)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                184
Number of successful refinements:     184
Number of failed refinements:         0
Max. size of reached set before ref.: 31984
Max. size of reached set after ref.:  22996
Avg. size of reached set before ref.: 12767.28
Avg. size of reached set after ref.:  8275.17

Total time for CEGAR algorithm:     269.084s
Time for refinements:                13.192s
Average time for refinement:          0.071s
Max time for refinement:              0.429s

Code Coverage
-----------------------------
  Function coverage:      0.657
  Visited lines:          1344
  Total lines:            1443
  Line coverage:          0.931
  Visited conditions:     162
  Total conditions:       186
  Condition coverage:     0.871

CPAchecker general statistics
-----------------------------
Number of program locations:     1837
Number of CFA edges:             1923
Number of relevant variables:    200
Number of functions:             67
Number of loops:                 7
Size of reached set:             22662
  Number of reached locations:   486 (26%)
    Avg states per location:     46
    Max states per location:     548 (at node N343)
  Number of reached functions:   44 (66%)
  Number of partitions:          22325
    Avg size of partitions:      1
    Max size of partitions:      25 (with key [N535 (before line 6233), Function main called from node N512, stack depth 1 [47da3952], stack [main]])
  Number of target states:       0

Time for analysis setup:          5.137s
  Time for loading CPAs:          0.997s
  Time for loading parser:        0.691s
  Time for CFA construction:      3.311s
    Time for parsing file(s):     0.996s
    Time for AST to CFA:          1.114s
    Time for CFA sanity check:    0.180s
    Time for post-processing:     0.820s
      Time for var class.:        0.278s
Time for Analysis:              269.084s
CPU time for analysis:          269.020s
Time for analyzing result:        0.020s
Total time for CPAchecker:      274.225s
Total CPU time for CPAchecker:  274.160s
Time for statistics:              0.477s

Time for Garbage Collector:      12.997s (in 501 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                349MB (   332 MiB) max;    172MB (   164 MiB) avg;    394MB (   376 MiB) peak
Used non-heap memory:             40MB (    38 MiB) max;     39MB (    37 MiB) avg;     40MB (    38 MiB) peak
Allocated heap memory:           486MB (   463 MiB) max;    257MB (   245 MiB) avg
Allocated non-heap memory:        42MB (    40 MiB) max;     41MB (    39 MiB) avg
Total process virtual memory:   8896MB (  8483 MiB) max;   8378MB (  7990 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
