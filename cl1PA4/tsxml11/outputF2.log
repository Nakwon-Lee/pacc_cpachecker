scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.16-rc1/205_9a_array_safes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--usb--cdc_eem.ko-entry_point_true-unreach-call.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_30ptcv7a/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_release_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_reset_resume_1 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usbnet_resume to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usbnet_suspend to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usbnet_disconnect to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usbnet_probe to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_deregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usbnet_get_endpoints to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_driver_release_interface to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function skb_copy_expand to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dev_kfree_skb_any to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function crc32_le to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function skb_put to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function skb_push to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memmove to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function skb_pull to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function skb_clone to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netdev_warn to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usbnet_device_suggests_idle to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_netdev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function skb_trim to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_alloc_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_submit_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_free_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usbnet_skb_return to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            77087 (19% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  66681 (87%)
  Because of loop head:            10314 (13%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         92 (0%)
  Times precision was empty:       12982 (17%)
  Times precision was {false}:     734 (1%)
  Times result was cached:         51106 (66%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      12265 (16%)
  Times result was 'false':        8261 (11%)
Number of strengthen sat checks:   0
Number of coverage checks:         91315
  BDD entailment checks:           48789
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       30
Number of predicates discovered:          77
Number of abstraction locations:          96
Max number of predicates per location:    23
Avg number of predicates per location:    8
Total predicates per abstraction:         545448
Max number of predicates per abstraction: 23
Avg number of predicates per abstraction: 41.96
Number of irrelevant predicates:          138669 (25%)
Number of preds handled by boolean abs:   99333 (18%)
  Total number of models for allsat:      69533
  Max number of models for allsat:        324
  Avg number of models for allsat:        5.67

Time for post operator:                 11.108s
  Time for path formula creation:       10.650s
Time for strengthen operator:            0.594s
Time for prec operator:                 94.663s
  Time for abstraction:                 92.939s (Max:     0.206s, Count: 77087)
    Boolean abstraction:                39.490s
    Solving time:                       22.010s (Max:     0.020s)
    Model enumeration time:             10.916s
    Time for BDD construction:           2.647s (Max:     0.035s)
Time for merge operator:                 0.672s
Time for coverage check:                 0.134s
  Time for BDD entailment checks:        0.115s
Total time for SMT solver (w/o itp):    32.926s

Number of path formula cache hits:   364414 (77%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     9.183s

Total number of created targets for pointer analysis: 6672
   Number of created targets for uf: *(void)* is 1096
   Number of created targets for uf: *(unsigned_char)* is 231
   Number of created targets for uf: *unsigned_int is 696


Number of BDD nodes:                               224736
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       64276 (count: 156879, min: 0, max: 1977, avg: 0.41)
Time for BDD node cleanup:                             0.047s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  1.138s
  Time for transition matches:                         0.540s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.000s
Automaton transfers with branching:                0
Automaton transfer successors:                       409471 (count: 409471, min: 1, max: 1, avg: 1.00) [1 x 409471]

CPA algorithm statistics
------------------------
Number of iterations:            292126
Max size of waitlist:            31
Average size of waitlist:        12
Number of computed successors:   337521
Max successors for one state:    2
Number of times merged:          21263
Number of times stopped:         36600
Number of times breaked:         92

Total time for CPA algorithm:       122.184s (Max:     8.800s)
  Time for choose from waitlist:      0.366s
  Time for precision adjustment:     98.058s
  Time for transfer relation:        18.394s
  Time for merge operator:            1.282s
  Time for stop operator:             0.871s
  Time for adding to reached set:     0.977s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   92
Avg. length of target path (in blocks):                6524 (count: 92, min: 18, max: 113, avg: 70.91)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   5.119s
  Counterexample analysis:                             4.038s (Max:     0.119s, Calls: 92)
    Refinement sat check:                              1.944s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.006s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.111s
  Precision update:                                    0.117s
  ARG update:                                          0.742s

Length of refined path (in blocks):                    5366 (count: 92, min: 10, max: 86, avg: 58.33)
Number of affected states:                             3039 (count: 92, min: 1, max: 75, avg: 33.03)
Length (states) of path with itp 'true':               2235 (count: 92, min: 6, max: 58, avg: 24.29)
Length (states) of path with itp non-trivial itp:      3039 (count: 92, min: 1, max: 75, avg: 33.03)
Length (states) of path with itp 'false':                92 (count: 92, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:         294 (count: 92, min: 0, max: 11, avg: 3.20)
Equal non-trivial interpolants along paths:            2653 (count: 92, min: 0, max: 71, avg: 28.84)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                92
Number of successful refinements:     92
Number of failed refinements:         0
Max. size of reached set before ref.: 13101
Max. size of reached set after ref.:  3668
Avg. size of reached set before ref.: 4522.63
Avg. size of reached set after ref.:  1563.62

Total time for CEGAR algorithm:     127.936s
Time for refinements:                 5.627s
Average time for refinement:          0.061s
Max time for refinement:              0.135s

Code Coverage
-----------------------------
  Function coverage:      0.657
  Visited lines:          1344
  Total lines:            1443
  Line coverage:          0.931
  Visited conditions:     162
  Total conditions:       186
  Condition coverage:     0.871

CPAchecker general statistics
-----------------------------
Number of program locations:     1837
Number of CFA edges:             1923
Number of relevant variables:    200
Number of functions:             67
Number of loops:                 7
Size of reached set:             20432
  Number of reached locations:   486 (26%)
    Avg states per location:     42
    Max states per location:     508 (at node N343)
  Number of reached functions:   44 (66%)
  Number of partitions:          20087
    Avg size of partitions:      1
    Max size of partitions:      25 (with key [N535 (before line 6233), Function main called from node N512, stack depth 1 [47da3952], stack [main]])
  Number of target states:       0

Time for analysis setup:          5.161s
  Time for loading CPAs:          0.972s
  Time for loading parser:        0.699s
  Time for CFA construction:      3.351s
    Time for parsing file(s):     1.055s
    Time for AST to CFA:          1.134s
    Time for CFA sanity check:    0.152s
    Time for post-processing:     0.778s
      Time for var class.:        0.289s
Time for Analysis:              127.937s
CPU time for analysis:          127.920s
Time for analyzing result:        0.016s
Total time for CPAchecker:      133.102s
Total CPU time for CPAchecker:  133.070s
Time for statistics:              0.374s

Time for Garbage Collector:       3.806s (in 346 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                129MB (   123 MiB) max;     76MB (    73 MiB) avg;    136MB (   130 MiB) peak
Used non-heap memory:             40MB (    38 MiB) max;     38MB (    37 MiB) avg;     41MB (    39 MiB) peak
Allocated heap memory:           159MB (   152 MiB) max;    130MB (   124 MiB) avg
Allocated non-heap memory:        43MB (    41 MiB) max;     41MB (    39 MiB) avg
Total process virtual memory:   8360MB (  7973 MiB) max;   8167MB (  7788 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
