scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.16-rc1/205_9a_array_safes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--usb--cdc_eem.ko-entry_point_true-unreach-call.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_wiw95kto/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_release_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_reset_resume_1 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usbnet_resume to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usbnet_suspend to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usbnet_disconnect to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usbnet_probe to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function skb_pull to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function skb_clone to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netdev_warn to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usbnet_device_suggests_idle to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function skb_trim to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function crc32_le to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usbnet_skb_return to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dev_kfree_skb_any to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function skb_copy_expand to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memmove to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function skb_put to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function skb_push to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_alloc_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_submit_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_free_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usbnet_get_endpoints to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_netdev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_deregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_driver_release_interface to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            85519 (19% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  73129 (86%)
  Because of loop head:            12299 (14%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         91 (0%)
  Times precision was empty:       28866 (34%)
  Times precision was {false}:     638 (1%)
  Times result was cached:         54240 (63%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      1775 (2%)
  Times result was 'false':        2498 (3%)
Number of strengthen sat checks:   0
Number of coverage checks:         70523
  BDD entailment checks:           32525
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       30
Number of predicates discovered:          17
Number of abstraction locations:          96
Max number of predicates per location:    7
Avg number of predicates per location:    3
Total predicates per abstraction:         108903
Max number of predicates per abstraction: 7
Avg number of predicates per abstraction: 45.13
Number of irrelevant predicates:          49896 (46%)
Number of preds handled by boolean abs:   3821 (4%)
  Total number of models for allsat:      2035
  Max number of models for allsat:        12
  Avg number of models for allsat:        1.15

Time for post operator:                  9.154s
  Time for path formula creation:        8.768s
Time for strengthen operator:            0.599s
Time for prec operator:                 14.473s
  Time for abstraction:                 12.919s (Max:     0.031s, Count: 85519)
    Boolean abstraction:                 2.007s
    Solving time:                        1.767s (Max:     0.017s)
    Model enumeration time:              0.230s
    Time for BDD construction:           0.135s (Max:     0.009s)
Time for merge operator:                 0.522s
Time for coverage check:                 0.095s
  Time for BDD entailment checks:        0.069s
Total time for SMT solver (w/o itp):     1.997s

Number of path formula cache hits:   448800 (86%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     7.464s

Total number of created targets for pointer analysis: 6083
   Number of created targets for uf: *(void)* is 1306
   Number of created targets for uf: *(unsigned_char)* is 135
   Number of created targets for uf: *unsigned_int is 409


Number of BDD nodes:                               962
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        4174 (count: 76163, min: 0, max: 540, avg: 0.05)
Time for BDD node cleanup:                             0.035s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.983s
  Time for transition matches:                         0.509s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.001s
Automaton transfers with branching:                0
Automaton transfer successors:                       438849 (count: 438849, min: 1, max: 1, avg: 1.00) [1 x 438849]

CPA algorithm statistics
------------------------
Number of iterations:            310546
Max size of waitlist:            41
Average size of waitlist:        18
Number of computed successors:   354299
Max successors for one state:    2
Number of times merged:          18999
Number of times stopped:         41255
Number of times breaked:         91

Total time for CPA algorithm:        39.122s (Max:     2.358s)
  Time for choose from waitlist:      0.271s
  Time for precision adjustment:     17.987s
  Time for transfer relation:        16.462s
  Time for merge operator:            1.050s
  Time for stop operator:             0.708s
  Time for adding to reached set:     0.848s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   91
Avg. length of target path (in blocks):                4260 (count: 91, min: 18, max: 61, avg: 46.81)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   2.961s
  Counterexample analysis:                             1.927s (Max:     0.048s, Calls: 91)
    Refinement sat check:                              1.120s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.006s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.057s
  Precision update:                                    0.056s
  ARG update:                                          0.850s

Length of refined path (in blocks):                    3392 (count: 91, min: 10, max: 56, avg: 37.27)
Number of affected states:                             1935 (count: 91, min: 1, max: 49, avg: 21.26)
Length (states) of path with itp 'true':               1366 (count: 91, min: 6, max: 30, avg: 15.01)
Length (states) of path with itp non-trivial itp:      1935 (count: 91, min: 1, max: 49, avg: 21.26)
Length (states) of path with itp 'false':                91 (count: 91, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:          26 (count: 91, min: 0, max: 2, avg: 0.29)
Equal non-trivial interpolants along paths:            1818 (count: 91, min: 0, max: 47, avg: 19.98)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                91
Number of successful refinements:     91
Number of failed refinements:         0
Max. size of reached set before ref.: 10688
Max. size of reached set after ref.:  2282
Avg. size of reached set before ref.: 3771.29
Avg. size of reached set after ref.:  408.99

Total time for CEGAR algorithm:      42.550s
Time for refinements:                 3.388s
Average time for refinement:          0.037s
Max time for refinement:              0.105s

Code Coverage
-----------------------------
  Function coverage:      0.657
  Visited lines:          1344
  Total lines:            1443
  Line coverage:          0.931
  Visited conditions:     162
  Total conditions:       186
  Condition coverage:     0.871

CPAchecker general statistics
-----------------------------
Number of program locations:     1837
Number of CFA edges:             1923
Number of relevant variables:    200
Number of functions:             67
Number of loops:                 7
Size of reached set:             4578
  Number of reached locations:   486 (26%)
    Avg states per location:     9
    Max states per location:     83 (at node N343)
  Number of reached functions:   44 (66%)
  Number of partitions:          4537
    Avg size of partitions:      1
    Max size of partitions:      7 (with key [N535 (before line 6233), Function main called from node N512, stack depth 1 [5fd62371], stack [main]])
  Number of target states:       0

Time for analysis setup:          5.012s
  Time for loading CPAs:          0.952s
  Time for loading parser:        0.779s
  Time for CFA construction:      3.116s
    Time for parsing file(s):     0.954s
    Time for AST to CFA:          1.085s
    Time for CFA sanity check:    0.167s
    Time for post-processing:     0.692s
      Time for var class.:        0.273s
Time for Analysis:               42.551s
CPU time for analysis:           42.550s
Time for analyzing result:        0.003s
Total time for CPAchecker:       47.568s
Total CPU time for CPAchecker:   47.550s
Time for statistics:              0.177s

Time for Garbage Collector:       1.476s (in 139 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                101MB (    96 MiB) max;     60MB (    57 MiB) avg;    110MB (   105 MiB) peak
Used non-heap memory:             40MB (    38 MiB) max;     36MB (    35 MiB) avg;     40MB (    38 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        42MB (    40 MiB) max;     39MB (    37 MiB) avg
Total process virtual memory:   8018MB (  7647 MiB) max;   8012MB (  7640 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
