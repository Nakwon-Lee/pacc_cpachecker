scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.16-rc1/205_9a_array_safes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--usb--cdc_eem.ko-entry_point_true-unreach-call.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_jvs5j0gi/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_release_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_reset_resume_1 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usbnet_resume to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usbnet_suspend to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usbnet_disconnect to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usbnet_probe to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usbnet_get_endpoints to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_deregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function skb_copy_expand to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dev_kfree_skb_any to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function crc32_le to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function skb_put to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function skb_pull to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function skb_clone to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netdev_warn to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usbnet_device_suggests_idle to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function skb_push to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_driver_release_interface to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function skb_trim to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_netdev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memmove to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_alloc_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usbnet_skb_return to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_submit_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_free_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            23254 (18% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  19760 (85%)
  Because of loop head:            3451 (15%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         43 (0%)
  Times precision was empty:       9642 (41%)
  Times precision was {false}:     543 (2%)
  Times result was cached:         12531 (54%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      538 (2%)
  Times result was 'false':        919 (4%)
Number of strengthen sat checks:   0
Number of coverage checks:         23370
  BDD entailment checks:           8260
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       30
Number of predicates discovered:          14
Number of abstraction locations:          96
Max number of predicates per location:    5
Avg number of predicates per location:    1
Total predicates per abstraction:         20529
Max number of predicates per abstraction: 5
Avg number of predicates per abstraction: 18.99
Number of irrelevant predicates:          11309 (55%)
Number of preds handled by boolean abs:   918 (4%)
  Total number of models for allsat:      617
  Max number of models for allsat:        6
  Avg number of models for allsat:        1.15

Time for post operator:                  6.239s
  Time for path formula creation:        6.048s
Time for strengthen operator:            0.348s
Time for prec operator:                  7.079s
  Time for abstraction:                  6.296s (Max:     0.027s, Count: 23254)
    Boolean abstraction:                 0.943s
    Solving time:                        1.033s (Max:     0.016s)
    Model enumeration time:              0.100s
    Time for BDD construction:           0.100s (Max:     0.012s)
Time for merge operator:                 0.421s
Time for coverage check:                 0.071s
  Time for BDD entailment checks:        0.063s
Total time for SMT solver (w/o itp):     1.133s

Number of path formula cache hits:   113824 (74%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     5.464s

Total number of created targets for pointer analysis: 480
   Number of created targets for uf: *(void)* is 106
   Number of created targets for uf: *(unsigned_char)* is 23
   Number of created targets for uf: *unsigned_int is 32


Number of BDD nodes:                               320
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        1105 (count: 24129, min: 0, max: 148, avg: 0.05)
Time for BDD node cleanup:                             0.014s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.697s
  Time for transition matches:                         0.309s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.000s
Automaton transfers with branching:                0
Automaton transfer successors:                       131807 (count: 131807, min: 1, max: 1, avg: 1.00) [1 x 131807]

CPA algorithm statistics
------------------------
Number of iterations:            89817
Max size of waitlist:            76
Average size of waitlist:        30
Number of computed successors:   104415
Max successors for one state:    2
Number of times merged:          7555
Number of times stopped:         12379
Number of times breaked:         43

Total time for CPA algorithm:        22.458s (Max:     1.506s)
  Time for choose from waitlist:      0.298s
  Time for precision adjustment:      8.769s
  Time for transfer relation:        10.282s
  Time for merge operator:            0.823s
  Time for stop operator:             0.472s
  Time for adding to reached set:     0.539s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   43
Avg. length of target path (in blocks):                1889 (count: 43, min: 18, max: 58, avg: 43.93)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   1.833s
  Counterexample analysis:                             1.137s (Max:     0.047s, Calls: 43)
    Refinement sat check:                              0.691s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.007s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.062s
  Precision update:                                    0.105s
  ARG update:                                          0.470s

Length of refined path (in blocks):                    1638 (count: 43, min: 10, max: 51, avg: 38.09)
Number of affected states:                              995 (count: 43, min: 1, max: 44, avg: 23.14)
Length (states) of path with itp 'true':                600 (count: 43, min: 6, max: 33, avg: 13.95)
Length (states) of path with itp non-trivial itp:       995 (count: 43, min: 1, max: 44, avg: 23.14)
Length (states) of path with itp 'false':                43 (count: 43, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:          23 (count: 43, min: 0, max: 1, avg: 0.53)
Equal non-trivial interpolants along paths:             929 (count: 43, min: 0, max: 42, avg: 21.60)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                43
Number of successful refinements:     43
Number of failed refinements:         0
Max. size of reached set before ref.: 3758
Max. size of reached set after ref.:  2466
Avg. size of reached set before ref.: 2712.44
Avg. size of reached set after ref.:  637.72

Total time for CEGAR algorithm:      24.676s
Time for refinements:                 2.187s
Average time for refinement:          0.050s
Max time for refinement:              0.100s

Code Coverage
-----------------------------
  Function coverage:      0.657
  Visited lines:          1344
  Total lines:            1443
  Line coverage:          0.931
  Visited conditions:     162
  Total conditions:       186
  Condition coverage:     0.871

CPAchecker general statistics
-----------------------------
Number of program locations:     1837
Number of CFA edges:             1923
Number of relevant variables:    200
Number of functions:             67
Number of loops:                 7
Size of reached set:             1905
  Number of reached locations:   486 (26%)
    Avg states per location:     3
    Max states per location:     33 (at node N343)
  Number of reached functions:   44 (66%)
  Number of partitions:          1897
    Avg size of partitions:      1
    Max size of partitions:      3 (with key [N535 (before line 6233), Function main called from node N512, stack depth 1 [47da3952], stack [main]])
  Number of target states:       0

Time for analysis setup:          5.088s
  Time for loading CPAs:          1.052s
  Time for loading parser:        0.734s
  Time for CFA construction:      3.156s
    Time for parsing file(s):     0.993s
    Time for AST to CFA:          1.092s
    Time for CFA sanity check:    0.156s
    Time for post-processing:     0.693s
      Time for var class.:        0.295s
Time for Analysis:               24.677s
CPU time for analysis:           24.680s
Time for analyzing result:        0.003s
Total time for CPAchecker:       29.769s
Total CPU time for CPAchecker:   29.760s
Time for statistics:              0.135s

Time for Garbage Collector:       0.612s (in 45 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 75MB (    72 MiB) max;     48MB (    46 MiB) avg;     80MB (    77 MiB) peak
Used non-heap memory:             40MB (    38 MiB) max;     35MB (    33 MiB) avg;     41MB (    39 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        42MB (    40 MiB) max;     37MB (    35 MiB) avg
Total process virtual memory:   8086MB (  7712 MiB) max;   8072MB (  7698 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
