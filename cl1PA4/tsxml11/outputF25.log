scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.16-rc1/205_9a_array_safes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--usb--cdc_eem.ko-entry_point_true-unreach-call.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_tw8qvv31/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_release_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_reset_resume_1 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usbnet_resume to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usbnet_suspend to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usbnet_disconnect to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usbnet_probe to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_deregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function skb_pull to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function skb_clone to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netdev_warn to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usbnet_device_suggests_idle to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_netdev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function skb_trim to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function skb_push to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_alloc_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_submit_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_free_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function crc32_le to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usbnet_skb_return to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dev_kfree_skb_any to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usbnet_get_endpoints to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_driver_release_interface to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function skb_copy_expand to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memmove to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function skb_put to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            7273 (15% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  6094 (84%)
  Because of loop head:            1142 (16%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         37 (1%)
  Times precision was empty:       1326 (18%)
  Times precision was {false}:     124 (2%)
  Times result was cached:         5436 (75%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      387 (5%)
  Times result was 'false':        551 (8%)
Number of strengthen sat checks:   0
Number of coverage checks:         10145
  BDD entailment checks:           1973
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       30
Number of predicates discovered:          12
Number of abstraction locations:          96
Max number of predicates per location:    5
Avg number of predicates per location:    1
Total predicates per abstraction:         12516
Max number of predicates per abstraction: 5
Avg number of predicates per abstraction: 24.49
Number of irrelevant predicates:          2881 (23%)
Number of preds handled by boolean abs:   650 (5%)
  Total number of models for allsat:      407
  Max number of models for allsat:        4
  Avg number of models for allsat:        1.05

Time for post operator:                  2.836s
  Time for path formula creation:        2.748s
Time for strengthen operator:            0.155s
Time for prec operator:                  4.396s
  Time for abstraction:                  4.044s (Max:     0.029s, Count: 7273)
    Boolean abstraction:                 0.769s
    Solving time:                        0.469s (Max:     0.021s)
    Model enumeration time:              0.110s
    Time for BDD construction:           0.099s (Max:     0.012s)
Time for merge operator:                 0.301s
Time for coverage check:                 0.067s
  Time for BDD entailment checks:        0.060s
Total time for SMT solver (w/o itp):     0.579s

Number of path formula cache hits:   44546 (78%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     2.438s

Total number of created targets for pointer analysis: 149
   Number of created targets for uf: *(void)* is 61
   Number of created targets for uf: *(unsigned_char)* is 5
   Number of created targets for uf: *unsigned_int is 15


Number of BDD nodes:                               278
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         875 (count: 6352, min: 0, max: 313, avg: 0.14)
Time for BDD node cleanup:                             0.017s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.331s
Automaton transfers with branching:                0
Automaton transfer successors:                        48563 (count: 48563, min: 1, max: 1, avg: 1.00) [1 x 48563]

CPA algorithm statistics
------------------------
Number of iterations:            34000
Max size of waitlist:            58
Average size of waitlist:        26
Number of computed successors:   40828
Max successors for one state:    2
Number of times merged:          4086
Number of times stopped:         5283
Number of times breaked:         37

Total time for CPA algorithm:        11.818s (Max:     0.973s)
  Time for choose from waitlist:      0.097s
  Time for precision adjustment:      5.266s
  Time for transfer relation:         4.808s
  Time for merge operator:            0.586s
  Time for stop operator:             0.236s
  Time for adding to reached set:     0.207s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   37
Avg. length of target path (in blocks):                1724 (count: 37, min: 18, max: 59, avg: 46.59)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   1.763s
  Counterexample analysis:                             1.340s (Max:     0.065s, Calls: 37)
    Refinement sat check:                              0.828s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.001s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.062s
  Precision update:                                    0.039s
  ARG update:                                          0.231s

Length of refined path (in blocks):                    1533 (count: 37, min: 10, max: 56, avg: 41.43)
Number of affected states:                              996 (count: 37, min: 1, max: 49, avg: 26.92)
Length (states) of path with itp 'true':                500 (count: 37, min: 6, max: 31, avg: 13.51)
Length (states) of path with itp non-trivial itp:       996 (count: 37, min: 1, max: 49, avg: 26.92)
Length (states) of path with itp 'false':                37 (count: 37, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:          24 (count: 37, min: 0, max: 1, avg: 0.65)
Equal non-trivial interpolants along paths:             935 (count: 37, min: 0, max: 47, avg: 25.27)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                37
Number of successful refinements:     37
Number of failed refinements:         0
Max. size of reached set before ref.: 2041
Max. size of reached set after ref.:  1771
Avg. size of reached set before ref.: 1142.27
Avg. size of reached set after ref.:  287.62

Total time for CEGAR algorithm:      13.779s
Time for refinements:                 1.948s
Average time for refinement:          0.052s
Max time for refinement:              0.085s

Code Coverage
-----------------------------
  Function coverage:      0.657
  Visited lines:          1344
  Total lines:            1443
  Line coverage:          0.931
  Visited conditions:     162
  Total conditions:       186
  Condition coverage:     0.871

CPAchecker general statistics
-----------------------------
Number of program locations:     1837
Number of CFA edges:             1923
Number of relevant variables:    200
Number of functions:             67
Number of loops:                 7
Size of reached set:             3373
  Number of reached locations:   486 (26%)
    Avg states per location:     6
    Max states per location:     66 (at node N343)
  Number of reached functions:   44 (66%)
  Number of partitions:          3352
    Avg size of partitions:      1
    Max size of partitions:      4 (with key [N535 (before line 6233), Function main called from node N512, stack depth 1 [47da3952], stack [main]])
  Number of target states:       0

Time for analysis setup:          5.054s
  Time for loading CPAs:          0.979s
  Time for loading parser:        0.735s
  Time for CFA construction:      3.180s
    Time for parsing file(s):     0.991s
    Time for AST to CFA:          1.070s
    Time for CFA sanity check:    0.171s
    Time for post-processing:     0.738s
      Time for var class.:        0.286s
Time for Analysis:               13.779s
CPU time for analysis:           13.790s
Time for analyzing result:        0.009s
Total time for CPAchecker:       18.837s
Total CPU time for CPAchecker:   18.840s
Time for statistics:              0.155s

Time for Garbage Collector:       0.331s (in 23 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 66MB (    63 MiB) max;     42MB (    40 MiB) avg;     70MB (    67 MiB) peak
Used non-heap memory:             38MB (    37 MiB) max;     33MB (    31 MiB) avg;     39MB (    37 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        40MB (    38 MiB) max;     34MB (    33 MiB) avg
Total process virtual memory:   8086MB (  7712 MiB) max;   8066MB (  7692 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
