scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.16-rc1/205_9a_array_safes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--usb--cdc_eem.ko-entry_point_true-unreach-call.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_9belh7z5/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_release_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_reset_resume_1 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usbnet_resume to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usbnet_suspend to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usbnet_disconnect to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usbnet_probe to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function skb_copy_expand to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usbnet_get_endpoints to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memmove to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function crc32_le to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function skb_put to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dev_kfree_skb_any to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function skb_push to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_deregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_driver_release_interface to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function skb_pull to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function skb_clone to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netdev_warn to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usbnet_device_suggests_idle to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function skb_trim to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_alloc_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_submit_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_free_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_netdev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usbnet_skb_return to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            39767 (19% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  34560 (87%)
  Because of loop head:            5158 (13%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         49 (0%)
  Times precision was empty:       19550 (49%)
  Times precision was {false}:     609 (2%)
  Times result was cached:         18995 (48%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      613 (2%)
  Times result was 'false':        1089 (3%)
Number of strengthen sat checks:   0
Number of coverage checks:         33884
  BDD entailment checks:           15398
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       30
Number of predicates discovered:          14
Number of abstraction locations:          96
Max number of predicates per location:    5
Avg number of predicates per location:    1
Total predicates per abstraction:         34503
Max number of predicates per abstraction: 5
Avg number of predicates per abstraction: 28.23
Number of irrelevant predicates:          20250 (59%)
Number of preds handled by boolean abs:   1100 (3%)
  Total number of models for allsat:      726
  Max number of models for allsat:        6
  Avg number of models for allsat:        1.18

Time for post operator:                  9.593s
  Time for path formula creation:        9.373s
Time for strengthen operator:            0.464s
Time for prec operator:                  8.029s
  Time for abstraction:                  6.997s (Max:     0.034s, Count: 39767)
    Boolean abstraction:                 0.876s
    Solving time:                        0.967s (Max:     0.016s)
    Model enumeration time:              0.117s
    Time for BDD construction:           0.058s (Max:     0.012s)
Time for merge operator:                 0.451s
Time for coverage check:                 0.067s
  Time for BDD entailment checks:        0.060s
Total time for SMT solver (w/o itp):     1.084s

Number of path formula cache hits:   164316 (69%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     8.547s

Total number of created targets for pointer analysis: 6228
   Number of created targets for uf: *(void)* is 1321
   Number of created targets for uf: *(unsigned_char)* is 147
   Number of created targets for uf: *unsigned_int is 444


Number of BDD nodes:                               350
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        1402 (count: 42029, min: 0, max: 177, avg: 0.03)
Time for BDD node cleanup:                             0.022s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.756s
  Time for transition matches:                         0.384s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.001s
Automaton transfers with branching:                0
Automaton transfer successors:                       207333 (count: 207333, min: 1, max: 1, avg: 1.00) [1 x 207333]

CPA algorithm statistics
------------------------
Number of iterations:            145410
Max size of waitlist:            100
Average size of waitlist:        43
Number of computed successors:   165994
Max successors for one state:    2
Number of times merged:          9243
Number of times stopped:         19107
Number of times breaked:         49

Total time for CPA algorithm:        28.639s (Max:     2.209s)
  Time for choose from waitlist:      0.246s
  Time for precision adjustment:     10.174s
  Time for transfer relation:        14.680s
  Time for merge operator:            0.865s
  Time for stop operator:             0.644s
  Time for adding to reached set:     0.556s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   49
Avg. length of target path (in blocks):                2140 (count: 49, min: 18, max: 58, avg: 43.67)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   2.030s
  Counterexample analysis:                             1.229s (Max:     0.040s, Calls: 49)
    Refinement sat check:                              0.690s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.008s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.088s
  Precision update:                                    0.053s
  ARG update:                                          0.571s

Length of refined path (in blocks):                    1828 (count: 49, min: 10, max: 51, avg: 37.31)
Number of affected states:                             1041 (count: 49, min: 1, max: 44, avg: 21.24)
Length (states) of path with itp 'true':                738 (count: 49, min: 6, max: 30, avg: 15.06)
Length (states) of path with itp non-trivial itp:      1041 (count: 49, min: 1, max: 44, avg: 21.24)
Length (states) of path with itp 'false':                49 (count: 49, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:          24 (count: 49, min: 0, max: 1, avg: 0.49)
Equal non-trivial interpolants along paths:             968 (count: 49, min: 0, max: 42, avg: 19.76)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                49
Number of successful refinements:     49
Number of failed refinements:         0
Max. size of reached set before ref.: 6086
Max. size of reached set after ref.:  3828
Avg. size of reached set before ref.: 3982.96
Avg. size of reached set after ref.:  1046.35

Total time for CEGAR algorithm:      31.081s
Time for refinements:                 2.397s
Average time for refinement:          0.048s
Max time for refinement:              0.106s

Code Coverage
-----------------------------
  Function coverage:      0.657
  Visited lines:          1344
  Total lines:            1443
  Line coverage:          0.931
  Visited conditions:     162
  Total conditions:       186
  Condition coverage:     0.871

CPAchecker general statistics
-----------------------------
Number of program locations:     1837
Number of CFA edges:             1923
Number of relevant variables:    200
Number of functions:             67
Number of loops:                 7
Size of reached set:             1905
  Number of reached locations:   486 (26%)
    Avg states per location:     3
    Max states per location:     33 (at node N343)
  Number of reached functions:   44 (66%)
  Number of partitions:          1897
    Avg size of partitions:      1
    Max size of partitions:      3 (with key [N535 (before line 6233), Function main called from node N512, stack depth 1 [5fd62371], stack [main]])
  Number of target states:       0

Time for analysis setup:          5.016s
  Time for loading CPAs:          0.895s
  Time for loading parser:        0.680s
  Time for CFA construction:      3.280s
    Time for parsing file(s):     1.028s
    Time for AST to CFA:          1.127s
    Time for CFA sanity check:    0.157s
    Time for post-processing:     0.763s
      Time for var class.:        0.279s
Time for Analysis:               31.083s
CPU time for analysis:           31.080s
Time for analyzing result:        0.002s
Total time for CPAchecker:       36.103s
Total CPU time for CPAchecker:   36.080s
Time for statistics:              0.108s

Time for Garbage Collector:       1.033s (in 70 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 97MB (    93 MiB) max;     54MB (    52 MiB) avg;    103MB (    98 MiB) peak
Used non-heap memory:             39MB (    38 MiB) max;     35MB (    34 MiB) avg;     40MB (    38 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        42MB (    40 MiB) max;     37MB (    36 MiB) avg
Total process virtual memory:   8020MB (  7649 MiB) max;   8010MB (  7639 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
