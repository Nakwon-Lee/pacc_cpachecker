scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.16-rc1/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--batman-adv--batman-adv.ko-entry_point_true-unreach-call.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_zyggh6lq/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 6780: Dead code detected: __ptr = (u8 volatile *)(& v->counter); (CFACreationUtils.addEdgeToCFA, INFO)

line 6785: Dead code detected: __ptr___0 = (u16 volatile *)(& v->counter); (CFACreationUtils.addEdgeToCFA, INFO)

line 6795: Dead code detected: __ptr___2 = (u64 volatile *)(& v->counter); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (4UL) {
  case 1UL:
  __ptr = (u8 volatile *)(& v->counter);
  __asm__ volatile (".pushsection .smp_locks,\"a\"\n.balign 4\n.long 671f - .\n.popsection\n671:\n\tlock; cmpxchgb %2,%1": "=a" (__ret),
                       "+m" (*__ptr): "q" (__new), "0" (__old): "memory");
  goto ldv_5646;
  case 2UL:
  __ptr___0 = (u16 volatile *)(& v->counter);
  __asm__ volatile (".pushsection .smp_locks,\"a\"\n.balign 4\n.long 671f - .\n.popsection\n671:\n\tlock; cmpxchgw %2,%1": "=a" (__ret),
                       "+m" (*__ptr___0): "r" (__new), "0" (__old): "memory");
  goto ldv_5646;
  case 4UL:
  __ptr___1 = (u32 volatile *)(& v->counter);
  __asm__ volatile (".pushsection .smp_locks,\"a\"\n.balign 4\n.long 671f - .\n.popsection\n671:\n\tlock; cmpxchgl %2,%1": "=a" (__ret),
                       "+m" (*__ptr___1): "r" (__new), "0" (__old): "memory");
  goto ldv_5646;
  case 8UL:
  __ptr___2 = (u64 volatile *)(& v->counter);
  __asm__ volatile (".pushsection .smp_locks,\"a\"\n.balign 4\n.long 671f - .\n.popsection\n671:\n\tlock; cmpxchgq %2,%1": "=a" (__ret),
                       "+m" (*__ptr___2): "r" (__new), "0" (__old): "memory");
  goto ldv_5646;
  default:
  __cmpxchg_wrong_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 6853: Dead code detected: [pao_ID__ == 1] (CFACreationUtils.addEdgeToCFA, INFO)

line 6853: Dead code detected: [!(pao_ID__ == 1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 6854: Dead code detected: __asm__ ("incb %%gs:%P0": "+m" (__preempt_count)); (CFACreationUtils.addEdgeToCFA, INFO)

line 6856: Dead code detected: [pao_ID__ == -1] (CFACreationUtils.addEdgeToCFA, INFO)

line 6856: Dead code detected: [!(pao_ID__ == -1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 6857: Dead code detected: __asm__ ("decb %%gs:%P0": "+m" (__preempt_count)); (CFACreationUtils.addEdgeToCFA, INFO)

line 6859: Dead code detected: __asm__ ("addb %1, %%gs:%P0": "+m" (__preempt_count): "qi" (val)); (CFACreationUtils.addEdgeToCFA, INFO)

line 6863: Dead code detected: [pao_ID__ == 1] (CFACreationUtils.addEdgeToCFA, INFO)

line 6863: Dead code detected: [!(pao_ID__ == 1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 6864: Dead code detected: __asm__ ("incw %%gs:%P0": "+m" (__preempt_count)); (CFACreationUtils.addEdgeToCFA, INFO)

line 6866: Dead code detected: [pao_ID__ == -1] (CFACreationUtils.addEdgeToCFA, INFO)

line 6866: Dead code detected: [!(pao_ID__ == -1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 6867: Dead code detected: __asm__ ("decw %%gs:%P0": "+m" (__preempt_count)); (CFACreationUtils.addEdgeToCFA, INFO)

line 6869: Dead code detected: __asm__ ("addw %1, %%gs:%P0": "+m" (__preempt_count): "ri" (val)); (CFACreationUtils.addEdgeToCFA, INFO)

line 6883: Dead code detected: [pao_ID__ == 1] (CFACreationUtils.addEdgeToCFA, INFO)

line 6883: Dead code detected: [!(pao_ID__ == 1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 6884: Dead code detected: __asm__ ("incq %%gs:%P0": "+m" (__preempt_count)); (CFACreationUtils.addEdgeToCFA, INFO)

line 6886: Dead code detected: [pao_ID__ == -1] (CFACreationUtils.addEdgeToCFA, INFO)

line 6886: Dead code detected: [!(pao_ID__ == -1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 6887: Dead code detected: __asm__ ("decq %%gs:%P0": "+m" (__preempt_count)); (CFACreationUtils.addEdgeToCFA, INFO)

line 6889: Dead code detected: __asm__ ("addq %1, %%gs:%P0": "+m" (__preempt_count): "re" (val)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (4UL) {
  case 1UL: ;
  if (pao_ID__ == 1) {
    __asm__ ("incb %%gs:%P0": "+m" (__preempt_count));
  } else
  if (pao_ID__ == -1) {
    __asm__ ("decb %%gs:%P0": "+m" (__preempt_count));
  } else {
    __asm__ ("addb %1, %%gs:%P0": "+m" (__preempt_count): "qi" (val));
  }
  goto ldv_6061;
  case 2UL: ;
  if (pao_ID__ == 1) {
    __asm__ ("incw %%gs:%P0": "+m" (__preempt_count));
  } else
  if (pao_ID__ == -1) {
    __asm__ ("decw %%gs:%P0": "+m" (__preempt_count));
  } else {
    __asm__ ("addw %1, %%gs:%P0": "+m" (__preempt_count): "ri" (val));
  }
  goto ldv_6061;
  case 4UL: ;
  if (pao_ID__ == 1) {
    __asm__ ("incl %%gs:%P0": "+m" (__preempt_count));
  } else
  if (pao_ID__ == -1) {
    __asm__ ("decl %%gs:%P0": "+m" (__preempt_count));
  } else {
    __asm__ ("addl %1, %%gs:%P0": "+m" (__preempt_count): "ri" (val));
  }
  goto ldv_6061;
  case 8UL: ;
  if (pao_ID__ == 1) {
    __asm__ ("incq %%gs:%P0": "+m" (__preempt_count));
  } else
  if (pao_ID__ == -1) {
    __asm__ ("decq %%gs:%P0": "+m" (__preempt_count));
  } else {
    __asm__ ("addq %1, %%gs:%P0": "+m" (__preempt_count): "re" (val));
  }
  goto ldv_6061;
  default:
  __bad_percpu_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 6907: Dead code detected: [pao_ID__ == 1] (CFACreationUtils.addEdgeToCFA, INFO)

line 6907: Dead code detected: [!(pao_ID__ == 1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 6908: Dead code detected: __asm__ ("incb %%gs:%P0": "+m" (__preempt_count)); (CFACreationUtils.addEdgeToCFA, INFO)

line 6910: Dead code detected: [pao_ID__ == -1] (CFACreationUtils.addEdgeToCFA, INFO)

line 6910: Dead code detected: [!(pao_ID__ == -1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 6911: Dead code detected: __asm__ ("decb %%gs:%P0": "+m" (__preempt_count)); (CFACreationUtils.addEdgeToCFA, INFO)

line 6913: Dead code detected: __asm__ ("addb %1, %%gs:%P0": "+m" (__preempt_count): "qi" (- val)); (CFACreationUtils.addEdgeToCFA, INFO)

line 6917: Dead code detected: [pao_ID__ == 1] (CFACreationUtils.addEdgeToCFA, INFO)

line 6917: Dead code detected: [!(pao_ID__ == 1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 6918: Dead code detected: __asm__ ("incw %%gs:%P0": "+m" (__preempt_count)); (CFACreationUtils.addEdgeToCFA, INFO)

line 6920: Dead code detected: [pao_ID__ == -1] (CFACreationUtils.addEdgeToCFA, INFO)

line 6920: Dead code detected: [!(pao_ID__ == -1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 6921: Dead code detected: __asm__ ("decw %%gs:%P0": "+m" (__preempt_count)); (CFACreationUtils.addEdgeToCFA, INFO)

line 6923: Dead code detected: __asm__ ("addw %1, %%gs:%P0": "+m" (__preempt_count): "ri" (- val)); (CFACreationUtils.addEdgeToCFA, INFO)

line 6937: Dead code detected: [pao_ID__ == 1] (CFACreationUtils.addEdgeToCFA, INFO)

line 6937: Dead code detected: [!(pao_ID__ == 1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 6938: Dead code detected: __asm__ ("incq %%gs:%P0": "+m" (__preempt_count)); (CFACreationUtils.addEdgeToCFA, INFO)

line 6940: Dead code detected: [pao_ID__ == -1] (CFACreationUtils.addEdgeToCFA, INFO)

line 6940: Dead code detected: [!(pao_ID__ == -1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 6941: Dead code detected: __asm__ ("decq %%gs:%P0": "+m" (__preempt_count)); (CFACreationUtils.addEdgeToCFA, INFO)

line 6943: Dead code detected: __asm__ ("addq %1, %%gs:%P0": "+m" (__preempt_count): "re" (- val)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (4UL) {
  case 1UL: ;
  if (pao_ID__ == 1) {
    __asm__ ("incb %%gs:%P0": "+m" (__preempt_count));
  } else
  if (pao_ID__ == -1) {
    __asm__ ("decb %%gs:%P0": "+m" (__preempt_count));
  } else {
    __asm__ ("addb %1, %%gs:%P0": "+m" (__preempt_count): "qi" (- val));
  }
  goto ldv_6073;
  case 2UL: ;
  if (pao_ID__ == 1) {
    __asm__ ("incw %%gs:%P0": "+m" (__preempt_count));
  } else
  if (pao_ID__ == -1) {
    __asm__ ("decw %%gs:%P0": "+m" (__preempt_count));
  } else {
    __asm__ ("addw %1, %%gs:%P0": "+m" (__preempt_count): "ri" (- val));
  }
  goto ldv_6073;
  case 4UL: ;
  if (pao_ID__ == 1) {
    __asm__ ("incl %%gs:%P0": "+m" (__preempt_count));
  } else
  if (pao_ID__ == -1) {
    __asm__ ("decl %%gs:%P0": "+m" (__preempt_count));
  } else {
    __asm__ ("addl %1, %%gs:%P0": "+m" (__preempt_count): "ri" (- val));
  }
  goto ldv_6073;
  case 8UL: ;
  if (pao_ID__ == 1) {
    __asm__ ("incq %%gs:%P0": "+m" (__preempt_count));
  } else
  if (pao_ID__ == -1) {
    __asm__ ("decq %%gs:%P0": "+m" (__preempt_count));
  } else {
    __asm__ ("addq %1, %%gs:%P0": "+m" (__preempt_count): "re" (- val));
  }
  goto ldv_6073;
  default:
  __bad_percpu_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 7494: Dead code detected: pao_ID__ = 0; (CFACreationUtils.addEdgeToCFA, INFO)

line 7497: Dead code detected: [pao_ID__ == 1] (CFACreationUtils.addEdgeToCFA, INFO)

line 7497: Dead code detected: [!(pao_ID__ == 1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 7498: Dead code detected: __asm__ ("incb %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx))); (CFACreationUtils.addEdgeToCFA, INFO)

line 7500: Dead code detected: [pao_ID__ == -1] (CFACreationUtils.addEdgeToCFA, INFO)

line 7500: Dead code detected: [!(pao_ID__ == -1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 7501: Dead code detected: __asm__ ("decb %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx))); (CFACreationUtils.addEdgeToCFA, INFO)

line 7503: Dead code detected: __asm__ ("addb %1, %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)): "qi" ((unsigned long long )count)); (CFACreationUtils.addEdgeToCFA, INFO)

line 7507: Dead code detected: [pao_ID__ == 1] (CFACreationUtils.addEdgeToCFA, INFO)

line 7507: Dead code detected: [!(pao_ID__ == 1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 7508: Dead code detected: __asm__ ("incw %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx))); (CFACreationUtils.addEdgeToCFA, INFO)

line 7510: Dead code detected: [pao_ID__ == -1] (CFACreationUtils.addEdgeToCFA, INFO)

line 7510: Dead code detected: [!(pao_ID__ == -1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 7511: Dead code detected: __asm__ ("decw %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx))); (CFACreationUtils.addEdgeToCFA, INFO)

line 7513: Dead code detected: __asm__ ("addw %1, %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)): "ri" ((unsigned long long )count)); (CFACreationUtils.addEdgeToCFA, INFO)

line 7517: Dead code detected: [pao_ID__ == 1] (CFACreationUtils.addEdgeToCFA, INFO)

line 7517: Dead code detected: [!(pao_ID__ == 1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 7518: Dead code detected: __asm__ ("incl %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx))); (CFACreationUtils.addEdgeToCFA, INFO)

line 7520: Dead code detected: [pao_ID__ == -1] (CFACreationUtils.addEdgeToCFA, INFO)

line 7520: Dead code detected: [!(pao_ID__ == -1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 7521: Dead code detected: __asm__ ("decl %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx))); (CFACreationUtils.addEdgeToCFA, INFO)

line 7523: Dead code detected: __asm__ ("addl %1, %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)): "ri" ((unsigned long long )count)); (CFACreationUtils.addEdgeToCFA, INFO)

line 7526: Dead code detected:  (CFACreationUtils.addEdgeToCFA, INFO)

line 7527: Dead code detected: [!(pao_ID__ == 1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 7528: Dead code detected: __asm__ ("incq %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx))); (CFACreationUtils.addEdgeToCFA, INFO)

line 7530: Dead code detected: [pao_ID__ == -1] (CFACreationUtils.addEdgeToCFA, INFO)

line 7530: Dead code detected: [!(pao_ID__ == -1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 7531: Dead code detected: __asm__ ("decq %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx))); (CFACreationUtils.addEdgeToCFA, INFO)

line 7533: Dead code detected: __asm__ ("addq %1, %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)): "re" ((unsigned long long )count)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (8UL) {
  case 1UL: ;
  if (pao_ID__ == 1) {
    __asm__ ("incb %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)));
  } else
  if (pao_ID__ == -1) {
    __asm__ ("decb %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)));
  } else {
    __asm__ ("addb %1, %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)): "qi" ((unsigned long long )count));
  }
  goto ldv_49259;
  case 2UL: ;
  if (pao_ID__ == 1) {
    __asm__ ("incw %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)));
  } else
  if (pao_ID__ == -1) {
    __asm__ ("decw %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)));
  } else {
    __asm__ ("addw %1, %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)): "ri" ((unsigned long long )count));
  }
  goto ldv_49259;
  case 4UL: ;
  if (pao_ID__ == 1) {
    __asm__ ("incl %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)));
  } else
  if (pao_ID__ == -1) {
    __asm__ ("decl %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)));
  } else {
    __asm__ ("addl %1, %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)): "ri" ((unsigned long long )count));
  }
  goto ldv_49259;
  case 8UL: ;
  if (pao_ID__ == 1) {
    __asm__ ("incq %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)));
  } else
  if (pao_ID__ == -1) {
    __asm__ ("decq %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)));
  } else {
    __asm__ ("addq %1, %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)): "re" ((unsigned long long )count));
  }
  goto ldv_49259;
  default:
  __bad_percpu_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 7542: Dead code detected: pao_ID_____0 = 0; (CFACreationUtils.addEdgeToCFA, INFO)

line 7545: Dead code detected: [pao_ID_____0 == 1] (CFACreationUtils.addEdgeToCFA, INFO)

line 7545: Dead code detected: [!(pao_ID_____0 == 1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 7546: Dead code detected: __asm__ ("incb %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx))); (CFACreationUtils.addEdgeToCFA, INFO)

line 7548: Dead code detected: [pao_ID_____0 == -1] (CFACreationUtils.addEdgeToCFA, INFO)

line 7548: Dead code detected: [!(pao_ID_____0 == -1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 7549: Dead code detected: __asm__ ("decb %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx))); (CFACreationUtils.addEdgeToCFA, INFO)

line 7551: Dead code detected: __asm__ ("addb %1, %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)): "qi" ((unsigned long long )count)); (CFACreationUtils.addEdgeToCFA, INFO)

line 7555: Dead code detected: [pao_ID_____0 == 1] (CFACreationUtils.addEdgeToCFA, INFO)

line 7555: Dead code detected: [!(pao_ID_____0 == 1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 7556: Dead code detected: __asm__ ("incw %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx))); (CFACreationUtils.addEdgeToCFA, INFO)

line 7558: Dead code detected: [pao_ID_____0 == -1] (CFACreationUtils.addEdgeToCFA, INFO)

line 7558: Dead code detected: [!(pao_ID_____0 == -1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 7559: Dead code detected: __asm__ ("decw %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx))); (CFACreationUtils.addEdgeToCFA, INFO)

line 7561: Dead code detected: __asm__ ("addw %1, %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)): "ri" ((unsigned long long )count)); (CFACreationUtils.addEdgeToCFA, INFO)

line 7565: Dead code detected: [pao_ID_____0 == 1] (CFACreationUtils.addEdgeToCFA, INFO)

line 7565: Dead code detected: [!(pao_ID_____0 == 1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 7566: Dead code detected: __asm__ ("incl %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx))); (CFACreationUtils.addEdgeToCFA, INFO)

line 7568: Dead code detected: [pao_ID_____0 == -1] (CFACreationUtils.addEdgeToCFA, INFO)

line 7568: Dead code detected: [!(pao_ID_____0 == -1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 7569: Dead code detected: __asm__ ("decl %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx))); (CFACreationUtils.addEdgeToCFA, INFO)

line 7571: Dead code detected: __asm__ ("addl %1, %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)): "ri" ((unsigned long long )count)); (CFACreationUtils.addEdgeToCFA, INFO)

line 7574: Dead code detected:  (CFACreationUtils.addEdgeToCFA, INFO)

line 7575: Dead code detected: [!(pao_ID_____0 == 1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 7576: Dead code detected: __asm__ ("incq %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx))); (CFACreationUtils.addEdgeToCFA, INFO)

line 7578: Dead code detected: [pao_ID_____0 == -1] (CFACreationUtils.addEdgeToCFA, INFO)

line 7578: Dead code detected: [!(pao_ID_____0 == -1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 7579: Dead code detected: __asm__ ("decq %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx))); (CFACreationUtils.addEdgeToCFA, INFO)

line 7581: Dead code detected: __asm__ ("addq %1, %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)): "re" ((unsigned long long )count)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (8UL) {
  case 1UL: ;
  if (pao_ID_____0 == 1) {
    __asm__ ("incb %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)));
  } else
  if (pao_ID_____0 == -1) {
    __asm__ ("decb %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)));
  } else {
    __asm__ ("addb %1, %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)): "qi" ((unsigned long long )count));
  }
  goto ldv_49270;
  case 2UL: ;
  if (pao_ID_____0 == 1) {
    __asm__ ("incw %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)));
  } else
  if (pao_ID_____0 == -1) {
    __asm__ ("decw %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)));
  } else {
    __asm__ ("addw %1, %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)): "ri" ((unsigned long long )count));
  }
  goto ldv_49270;
  case 4UL: ;
  if (pao_ID_____0 == 1) {
    __asm__ ("incl %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)));
  } else
  if (pao_ID_____0 == -1) {
    __asm__ ("decl %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)));
  } else {
    __asm__ ("addl %1, %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)): "ri" ((unsigned long long )count));
  }
  goto ldv_49270;
  case 8UL: ;
  if (pao_ID_____0 == 1) {
    __asm__ ("incq %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)));
  } else
  if (pao_ID_____0 == -1) {
    __asm__ ("decq %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)));
  } else {
    __asm__ ("addq %1, %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)): "re" ((unsigned long long )count));
  }
  goto ldv_49270;
  default:
  __bad_percpu_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 7590: Dead code detected: pao_ID_____1 = 0; (CFACreationUtils.addEdgeToCFA, INFO)

line 7593: Dead code detected: [pao_ID_____1 == 1] (CFACreationUtils.addEdgeToCFA, INFO)

line 7593: Dead code detected: [!(pao_ID_____1 == 1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 7594: Dead code detected: __asm__ ("incb %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx))); (CFACreationUtils.addEdgeToCFA, INFO)

line 7596: Dead code detected: [pao_ID_____1 == -1] (CFACreationUtils.addEdgeToCFA, INFO)

line 7596: Dead code detected: [!(pao_ID_____1 == -1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 7597: Dead code detected: __asm__ ("decb %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx))); (CFACreationUtils.addEdgeToCFA, INFO)

line 7599: Dead code detected: __asm__ ("addb %1, %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)): "qi" ((unsigned long long )count)); (CFACreationUtils.addEdgeToCFA, INFO)

line 7603: Dead code detected: [pao_ID_____1 == 1] (CFACreationUtils.addEdgeToCFA, INFO)

line 7603: Dead code detected: [!(pao_ID_____1 == 1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 7604: Dead code detected: __asm__ ("incw %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx))); (CFACreationUtils.addEdgeToCFA, INFO)

line 7606: Dead code detected: [pao_ID_____1 == -1] (CFACreationUtils.addEdgeToCFA, INFO)

line 7606: Dead code detected: [!(pao_ID_____1 == -1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 7607: Dead code detected: __asm__ ("decw %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx))); (CFACreationUtils.addEdgeToCFA, INFO)

line 7609: Dead code detected: __asm__ ("addw %1, %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)): "ri" ((unsigned long long )count)); (CFACreationUtils.addEdgeToCFA, INFO)

line 7613: Dead code detected: [pao_ID_____1 == 1] (CFACreationUtils.addEdgeToCFA, INFO)

line 7613: Dead code detected: [!(pao_ID_____1 == 1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 7614: Dead code detected: __asm__ ("incl %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx))); (CFACreationUtils.addEdgeToCFA, INFO)

line 7616: Dead code detected: [pao_ID_____1 == -1] (CFACreationUtils.addEdgeToCFA, INFO)

line 7616: Dead code detected: [!(pao_ID_____1 == -1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 7617: Dead code detected: __asm__ ("decl %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx))); (CFACreationUtils.addEdgeToCFA, INFO)

line 7619: Dead code detected: __asm__ ("addl %1, %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)): "ri" ((unsigned long long )count)); (CFACreationUtils.addEdgeToCFA, INFO)

line 7622: Dead code detected:  (CFACreationUtils.addEdgeToCFA, INFO)

line 7623: Dead code detected: [!(pao_ID_____1 == 1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 7624: Dead code detected: __asm__ ("incq %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx))); (CFACreationUtils.addEdgeToCFA, INFO)

line 7626: Dead code detected: [pao_ID_____1 == -1] (CFACreationUtils.addEdgeToCFA, INFO)

line 7626: Dead code detected: [!(pao_ID_____1 == -1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 7627: Dead code detected: __asm__ ("decq %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx))); (CFACreationUtils.addEdgeToCFA, INFO)

line 7629: Dead code detected: __asm__ ("addq %1, %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)): "re" ((unsigned long long )count)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (8UL) {
  case 1UL: ;
  if (pao_ID_____1 == 1) {
    __asm__ ("incb %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)));
  } else
  if (pao_ID_____1 == -1) {
    __asm__ ("decb %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)));
  } else {
    __asm__ ("addb %1, %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)): "qi" ((unsigned long long )count));
  }
  goto ldv_49280;
  case 2UL: ;
  if (pao_ID_____1 == 1) {
    __asm__ ("incw %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)));
  } else
  if (pao_ID_____1 == -1) {
    __asm__ ("decw %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)));
  } else {
    __asm__ ("addw %1, %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)): "ri" ((unsigned long long )count));
  }
  goto ldv_49280;
  case 4UL: ;
  if (pao_ID_____1 == 1) {
    __asm__ ("incl %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)));
  } else
  if (pao_ID_____1 == -1) {
    __asm__ ("decl %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)));
  } else {
    __asm__ ("addl %1, %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)): "ri" ((unsigned long long )count));
  }
  goto ldv_49280;
  case 8UL: ;
  if (pao_ID_____1 == 1) {
    __asm__ ("incq %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)));
  } else
  if (pao_ID_____1 == -1) {
    __asm__ ("decq %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)));
  } else {
    __asm__ ("addq %1, %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)): "re" ((unsigned long long )count));
  }
  goto ldv_49280;
  default:
  __bad_percpu_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 7641: Dead code detected: [pao_ID_____2 == 1] (CFACreationUtils.addEdgeToCFA, INFO)

line 7641: Dead code detected: [!(pao_ID_____2 == 1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 7642: Dead code detected: __asm__ ("incb %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx))); (CFACreationUtils.addEdgeToCFA, INFO)

line 7644: Dead code detected: [pao_ID_____2 == -1] (CFACreationUtils.addEdgeToCFA, INFO)

line 7644: Dead code detected: [!(pao_ID_____2 == -1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 7645: Dead code detected: __asm__ ("decb %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx))); (CFACreationUtils.addEdgeToCFA, INFO)

line 7647: Dead code detected: __asm__ ("addb %1, %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)): "qi" ((unsigned long long )count)); (CFACreationUtils.addEdgeToCFA, INFO)

line 7651: Dead code detected: [pao_ID_____2 == 1] (CFACreationUtils.addEdgeToCFA, INFO)

line 7651: Dead code detected: [!(pao_ID_____2 == 1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 7652: Dead code detected: __asm__ ("incw %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx))); (CFACreationUtils.addEdgeToCFA, INFO)

line 7654: Dead code detected: [pao_ID_____2 == -1] (CFACreationUtils.addEdgeToCFA, INFO)

line 7654: Dead code detected: [!(pao_ID_____2 == -1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 7655: Dead code detected: __asm__ ("decw %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx))); (CFACreationUtils.addEdgeToCFA, INFO)

line 7657: Dead code detected: __asm__ ("addw %1, %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)): "ri" ((unsigned long long )count)); (CFACreationUtils.addEdgeToCFA, INFO)

line 7661: Dead code detected: [pao_ID_____2 == 1] (CFACreationUtils.addEdgeToCFA, INFO)

line 7661: Dead code detected: [!(pao_ID_____2 == 1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 7662: Dead code detected: __asm__ ("incl %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx))); (CFACreationUtils.addEdgeToCFA, INFO)

line 7664: Dead code detected: [pao_ID_____2 == -1] (CFACreationUtils.addEdgeToCFA, INFO)

line 7664: Dead code detected: [!(pao_ID_____2 == -1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 7665: Dead code detected: __asm__ ("decl %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx))); (CFACreationUtils.addEdgeToCFA, INFO)

line 7667: Dead code detected: __asm__ ("addl %1, %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)): "ri" ((unsigned long long )count)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (8UL) {
  case 1UL: ;
  if (pao_ID_____2 == 1) {
    __asm__ ("incb %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)));
  } else
  if (pao_ID_____2 == -1) {
    __asm__ ("decb %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)));
  } else {
    __asm__ ("addb %1, %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)): "qi" ((unsigned long long )count));
  }
  goto ldv_49290;
  case 2UL: ;
  if (pao_ID_____2 == 1) {
    __asm__ ("incw %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)));
  } else
  if (pao_ID_____2 == -1) {
    __asm__ ("decw %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)));
  } else {
    __asm__ ("addw %1, %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)): "ri" ((unsigned long long )count));
  }
  goto ldv_49290;
  case 4UL: ;
  if (pao_ID_____2 == 1) {
    __asm__ ("incl %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)));
  } else
  if (pao_ID_____2 == -1) {
    __asm__ ("decl %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)));
  } else {
    __asm__ ("addl %1, %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)): "ri" ((unsigned long long )count));
  }
  goto ldv_49290;
  case 8UL: ;
  if (pao_ID_____2 == 1) {
    __asm__ ("incq %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)));
  } else
  if (pao_ID_____2 == -1) {
    __asm__ ("decq %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)));
  } else {
    __asm__ ("addq %1, %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)): "re" ((unsigned long long )count));
  }
  goto ldv_49290;
  default:
  __bad_percpu_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (8UL) {
  case 1UL:
  pao_ID__ = 0;
  switch (8UL) {
  case 1UL: ;
  if (pao_ID__ == 1) {
    __asm__ ("incb %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)));
  } else
  if (pao_ID__ == -1) {
    __asm__ ("decb %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)));
  } else {
    __asm__ ("addb %1, %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)): "qi" ((unsigned long long )count));
  }
  goto ldv_49259;
  case 2UL: ;
  if (pao_ID__ == 1) {
    __asm__ ("incw %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)));
  } else
  if (pao_ID__ == -1) {
    __asm__ ("decw %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)));
  } else {
    __asm__ ("addw %1, %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)): "ri" ((unsigned long long )count));
  }
  goto ldv_49259;
  case 4UL: ;
  if (pao_ID__ == 1) {
    __asm__ ("incl %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)));
  } else
  if (pao_ID__ == -1) {
    __asm__ ("decl %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)));
  } else {
    __asm__ ("addl %1, %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)): "ri" ((unsigned long long )count));
  }
  goto ldv_49259;
  case 8UL: ;
  if (pao_ID__ == 1) {
    __asm__ ("incq %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)));
  } else
  if (pao_ID__ == -1) {
    __asm__ ("decq %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)));
  } else {
    __asm__ ("addq %1, %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)): "re" ((unsigned long long )count));
  }
  goto ldv_49259;
  default:
  __bad_percpu_size();
  }
  ldv_49259: ;
  goto ldv_49264;
  case 2UL:
  pao_ID_____0 = 0;
  switch (8UL) {
  case 1UL: ;
  if (pao_ID_____0 == 1) {
    __asm__ ("incb %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)));
  } else
  if (pao_ID_____0 == -1) {
    __asm__ ("decb %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)));
  } else {
    __asm__ ("addb %1, %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)): "qi" ((unsigned long long )count));
  }
  goto ldv_49270;
  case 2UL: ;
  if (pao_ID_____0 == 1) {
    __asm__ ("incw %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)));
  } else
  if (pao_ID_____0 == -1) {
    __asm__ ("decw %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)));
  } else {
    __asm__ ("addw %1, %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)): "ri" ((unsigned long long )count));
  }
  goto ldv_49270;
  case 4UL: ;
  if (pao_ID_____0 == 1) {
    __asm__ ("incl %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)));
  } else
  if (pao_ID_____0 == -1) {
    __asm__ ("decl %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)));
  } else {
    __asm__ ("addl %1, %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)): "ri" ((unsigned long long )count));
  }
  goto ldv_49270;
  case 8UL: ;
  if (pao_ID_____0 == 1) {
    __asm__ ("incq %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)));
  } else
  if (pao_ID_____0 == -1) {
    __asm__ ("decq %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)));
  } else {
    __asm__ ("addq %1, %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)): "re" ((unsigned long long )count));
  }
  goto ldv_49270;
  default:
  __bad_percpu_size();
  }
  ldv_49270: ;
  goto ldv_49264;
  case 4UL:
  pao_ID_____1 = 0;
  switch (8UL) {
  case 1UL: ;
  if (pao_ID_____1 == 1) {
    __asm__ ("incb %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)));
  } else
  if (pao_ID_____1 == -1) {
    __asm__ ("decb %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)));
  } else {
    __asm__ ("addb %1, %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)): "qi" ((unsigned long long )count));
  }
  goto ldv_49280;
  case 2UL: ;
  if (pao_ID_____1 == 1) {
    __asm__ ("incw %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)));
  } else
  if (pao_ID_____1 == -1) {
    __asm__ ("decw %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)));
  } else {
    __asm__ ("addw %1, %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)): "ri" ((unsigned long long )count));
  }
  goto ldv_49280;
  case 4UL: ;
  if (pao_ID_____1 == 1) {
    __asm__ ("incl %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)));
  } else
  if (pao_ID_____1 == -1) {
    __asm__ ("decl %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)));
  } else {
    __asm__ ("addl %1, %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)): "ri" ((unsigned long long )count));
  }
  goto ldv_49280;
  case 8UL: ;
  if (pao_ID_____1 == 1) {
    __asm__ ("incq %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)));
  } else
  if (pao_ID_____1 == -1) {
    __asm__ ("decq %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)));
  } else {
    __asm__ ("addq %1, %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)): "re" ((unsigned long long )count));
  }
  goto ldv_49280;
  default:
  __bad_percpu_size();
  }
  ldv_49280: ;
  goto ldv_49264;
  case 8UL:
  pao_ID_____2 = 0;
  switch (8UL) {
  case 1UL: ;
  if (pao_ID_____2 == 1) {
    __asm__ ("incb %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)));
  } else
  if (pao_ID_____2 == -1) {
    __asm__ ("decb %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)));
  } else {
    __asm__ ("addb %1, %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)): "qi" ((unsigned long long )count));
  }
  goto ldv_49290;
  case 2UL: ;
  if (pao_ID_____2 == 1) {
    __asm__ ("incw %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)));
  } else
  if (pao_ID_____2 == -1) {
    __asm__ ("decw %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)));
  } else {
    __asm__ ("addw %1, %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)): "ri" ((unsigned long long )count));
  }
  goto ldv_49290;
  case 4UL: ;
  if (pao_ID_____2 == 1) {
    __asm__ ("incl %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)));
  } else
  if (pao_ID_____2 == -1) {
    __asm__ ("decl %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)));
  } else {
    __asm__ ("addl %1, %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)): "ri" ((unsigned long long )count));
  }
  goto ldv_49290;
  case 8UL: ;
  if (pao_ID_____2 == 1) {
    __asm__ ("incq %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)));
  } else
  if (pao_ID_____2 == -1) {
    __asm__ ("decq %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)));
  } else {
    __asm__ ("addq %1, %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)): "re" ((unsigned long long )count));
  }
  goto ldv_49290;
  default:
  __bad_percpu_size();
  }
  ldv_49290: ;
  goto ldv_49264;
  default:
  __bad_size_call_parameter();
  goto ldv_49264;
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 11417: Dead code detected: pao_ID__ = 0; (CFACreationUtils.addEdgeToCFA, INFO)

line 11420: Dead code detected: [pao_ID__ == 1] (CFACreationUtils.addEdgeToCFA, INFO)

line 11420: Dead code detected: [!(pao_ID__ == 1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 11421: Dead code detected: __asm__ ("incb %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx))); (CFACreationUtils.addEdgeToCFA, INFO)

line 11423: Dead code detected: [pao_ID__ == -1] (CFACreationUtils.addEdgeToCFA, INFO)

line 11423: Dead code detected: [!(pao_ID__ == -1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 11424: Dead code detected: __asm__ ("decb %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx))); (CFACreationUtils.addEdgeToCFA, INFO)

line 11426: Dead code detected: __asm__ ("addb %1, %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)): "qi" ((unsigned long long )count)); (CFACreationUtils.addEdgeToCFA, INFO)

line 11430: Dead code detected: [pao_ID__ == 1] (CFACreationUtils.addEdgeToCFA, INFO)

line 11430: Dead code detected: [!(pao_ID__ == 1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 11431: Dead code detected: __asm__ ("incw %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx))); (CFACreationUtils.addEdgeToCFA, INFO)

line 11433: Dead code detected: [pao_ID__ == -1] (CFACreationUtils.addEdgeToCFA, INFO)

line 11433: Dead code detected: [!(pao_ID__ == -1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 11434: Dead code detected: __asm__ ("decw %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx))); (CFACreationUtils.addEdgeToCFA, INFO)

line 11436: Dead code detected: __asm__ ("addw %1, %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)): "ri" ((unsigned long long )count)); (CFACreationUtils.addEdgeToCFA, INFO)

line 11440: Dead code detected: [pao_ID__ == 1] (CFACreationUtils.addEdgeToCFA, INFO)

line 11440: Dead code detected: [!(pao_ID__ == 1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 11441: Dead code detected: __asm__ ("incl %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx))); (CFACreationUtils.addEdgeToCFA, INFO)

line 11443: Dead code detected: [pao_ID__ == -1] (CFACreationUtils.addEdgeToCFA, INFO)

line 11443: Dead code detected: [!(pao_ID__ == -1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 11444: Dead code detected: __asm__ ("decl %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx))); (CFACreationUtils.addEdgeToCFA, INFO)

line 11446: Dead code detected: __asm__ ("addl %1, %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)): "ri" ((unsigned long long )count)); (CFACreationUtils.addEdgeToCFA, INFO)

line 11449: Dead code detected:  (CFACreationUtils.addEdgeToCFA, INFO)

line 11450: Dead code detected: [!(pao_ID__ == 1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 11451: Dead code detected: __asm__ ("incq %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx))); (CFACreationUtils.addEdgeToCFA, INFO)

line 11453: Dead code detected: [pao_ID__ == -1] (CFACreationUtils.addEdgeToCFA, INFO)

line 11453: Dead code detected: [!(pao_ID__ == -1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 11454: Dead code detected: __asm__ ("decq %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx))); (CFACreationUtils.addEdgeToCFA, INFO)

line 11456: Dead code detected: __asm__ ("addq %1, %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)): "re" ((unsigned long long )count)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (8UL) {
  case 1UL: ;
  if (pao_ID__ == 1) {
    __asm__ ("incb %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)));
  } else
  if (pao_ID__ == -1) {
    __asm__ ("decb %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)));
  } else {
    __asm__ ("addb %1, %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)): "qi" ((unsigned long long )count));
  }
  goto ldv_49247;
  case 2UL: ;
  if (pao_ID__ == 1) {
    __asm__ ("incw %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)));
  } else
  if (pao_ID__ == -1) {
    __asm__ ("decw %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)));
  } else {
    __asm__ ("addw %1, %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)): "ri" ((unsigned long long )count));
  }
  goto ldv_49247;
  case 4UL: ;
  if (pao_ID__ == 1) {
    __asm__ ("incl %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)));
  } else
  if (pao_ID__ == -1) {
    __asm__ ("decl %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)));
  } else {
    __asm__ ("addl %1, %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)): "ri" ((unsigned long long )count));
  }
  goto ldv_49247;
  case 8UL: ;
  if (pao_ID__ == 1) {
    __asm__ ("incq %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)));
  } else
  if (pao_ID__ == -1) {
    __asm__ ("decq %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)));
  } else {
    __asm__ ("addq %1, %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)): "re" ((unsigned long long )count));
  }
  goto ldv_49247;
  default:
  __bad_percpu_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 11465: Dead code detected: pao_ID_____0 = 0; (CFACreationUtils.addEdgeToCFA, INFO)

line 11468: Dead code detected: [pao_ID_____0 == 1] (CFACreationUtils.addEdgeToCFA, INFO)

line 11468: Dead code detected: [!(pao_ID_____0 == 1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 11469: Dead code detected: __asm__ ("incb %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx))); (CFACreationUtils.addEdgeToCFA, INFO)

line 11471: Dead code detected: [pao_ID_____0 == -1] (CFACreationUtils.addEdgeToCFA, INFO)

line 11471: Dead code detected: [!(pao_ID_____0 == -1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 11472: Dead code detected: __asm__ ("decb %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx))); (CFACreationUtils.addEdgeToCFA, INFO)

line 11474: Dead code detected: __asm__ ("addb %1, %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)): "qi" ((unsigned long long )count)); (CFACreationUtils.addEdgeToCFA, INFO)

line 11478: Dead code detected: [pao_ID_____0 == 1] (CFACreationUtils.addEdgeToCFA, INFO)

line 11478: Dead code detected: [!(pao_ID_____0 == 1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 11479: Dead code detected: __asm__ ("incw %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx))); (CFACreationUtils.addEdgeToCFA, INFO)

line 11481: Dead code detected: [pao_ID_____0 == -1] (CFACreationUtils.addEdgeToCFA, INFO)

line 11481: Dead code detected: [!(pao_ID_____0 == -1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 11482: Dead code detected: __asm__ ("decw %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx))); (CFACreationUtils.addEdgeToCFA, INFO)

line 11484: Dead code detected: __asm__ ("addw %1, %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)): "ri" ((unsigned long long )count)); (CFACreationUtils.addEdgeToCFA, INFO)

line 11488: Dead code detected: [pao_ID_____0 == 1] (CFACreationUtils.addEdgeToCFA, INFO)

line 11488: Dead code detected: [!(pao_ID_____0 == 1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 11489: Dead code detected: __asm__ ("incl %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx))); (CFACreationUtils.addEdgeToCFA, INFO)

line 11491: Dead code detected: [pao_ID_____0 == -1] (CFACreationUtils.addEdgeToCFA, INFO)

line 11491: Dead code detected: [!(pao_ID_____0 == -1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 11492: Dead code detected: __asm__ ("decl %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx))); (CFACreationUtils.addEdgeToCFA, INFO)

line 11494: Dead code detected: __asm__ ("addl %1, %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)): "ri" ((unsigned long long )count)); (CFACreationUtils.addEdgeToCFA, INFO)

line 11497: Dead code detected:  (CFACreationUtils.addEdgeToCFA, INFO)

line 11498: Dead code detected: [!(pao_ID_____0 == 1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 11499: Dead code detected: __asm__ ("incq %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx))); (CFACreationUtils.addEdgeToCFA, INFO)

line 11501: Dead code detected: [pao_ID_____0 == -1] (CFACreationUtils.addEdgeToCFA, INFO)

line 11501: Dead code detected: [!(pao_ID_____0 == -1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 11502: Dead code detected: __asm__ ("decq %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx))); (CFACreationUtils.addEdgeToCFA, INFO)

line 11504: Dead code detected: __asm__ ("addq %1, %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)): "re" ((unsigned long long )count)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (8UL) {
  case 1UL: ;
  if (pao_ID_____0 == 1) {
    __asm__ ("incb %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)));
  } else
  if (pao_ID_____0 == -1) {
    __asm__ ("decb %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)));
  } else {
    __asm__ ("addb %1, %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)): "qi" ((unsigned long long )count));
  }
  goto ldv_49258;
  case 2UL: ;
  if (pao_ID_____0 == 1) {
    __asm__ ("incw %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)));
  } else
  if (pao_ID_____0 == -1) {
    __asm__ ("decw %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)));
  } else {
    __asm__ ("addw %1, %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)): "ri" ((unsigned long long )count));
  }
  goto ldv_49258;
  case 4UL: ;
  if (pao_ID_____0 == 1) {
    __asm__ ("incl %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)));
  } else
  if (pao_ID_____0 == -1) {
    __asm__ ("decl %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)));
  } else {
    __asm__ ("addl %1, %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)): "ri" ((unsigned long long )count));
  }
  goto ldv_49258;
  case 8UL: ;
  if (pao_ID_____0 == 1) {
    __asm__ ("incq %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)));
  } else
  if (pao_ID_____0 == -1) {
    __asm__ ("decq %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)));
  } else {
    __asm__ ("addq %1, %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)): "re" ((unsigned long long )count));
  }
  goto ldv_49258;
  default:
  __bad_percpu_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 11513: Dead code detected: pao_ID_____1 = 0; (CFACreationUtils.addEdgeToCFA, INFO)

line 11516: Dead code detected: [pao_ID_____1 == 1] (CFACreationUtils.addEdgeToCFA, INFO)

line 11516: Dead code detected: [!(pao_ID_____1 == 1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 11517: Dead code detected: __asm__ ("incb %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx))); (CFACreationUtils.addEdgeToCFA, INFO)

line 11519: Dead code detected: [pao_ID_____1 == -1] (CFACreationUtils.addEdgeToCFA, INFO)

line 11519: Dead code detected: [!(pao_ID_____1 == -1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 11520: Dead code detected: __asm__ ("decb %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx))); (CFACreationUtils.addEdgeToCFA, INFO)

line 11522: Dead code detected: __asm__ ("addb %1, %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)): "qi" ((unsigned long long )count)); (CFACreationUtils.addEdgeToCFA, INFO)

line 11526: Dead code detected: [pao_ID_____1 == 1] (CFACreationUtils.addEdgeToCFA, INFO)

line 11526: Dead code detected: [!(pao_ID_____1 == 1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 11527: Dead code detected: __asm__ ("incw %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx))); (CFACreationUtils.addEdgeToCFA, INFO)

line 11529: Dead code detected: [pao_ID_____1 == -1] (CFACreationUtils.addEdgeToCFA, INFO)

line 11529: Dead code detected: [!(pao_ID_____1 == -1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 11530: Dead code detected: __asm__ ("decw %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx))); (CFACreationUtils.addEdgeToCFA, INFO)

line 11532: Dead code detected: __asm__ ("addw %1, %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)): "ri" ((unsigned long long )count)); (CFACreationUtils.addEdgeToCFA, INFO)

line 11536: Dead code detected: [pao_ID_____1 == 1] (CFACreationUtils.addEdgeToCFA, INFO)

line 11536: Dead code detected: [!(pao_ID_____1 == 1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 11537: Dead code detected: __asm__ ("incl %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx))); (CFACreationUtils.addEdgeToCFA, INFO)

line 11539: Dead code detected: [pao_ID_____1 == -1] (CFACreationUtils.addEdgeToCFA, INFO)

line 11539: Dead code detected: [!(pao_ID_____1 == -1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 11540: Dead code detected: __asm__ ("decl %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx))); (CFACreationUtils.addEdgeToCFA, INFO)

line 11542: Dead code detected: __asm__ ("addl %1, %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)): "ri" ((unsigned long long )count)); (CFACreationUtils.addEdgeToCFA, INFO)

line 11545: Dead code detected:  (CFACreationUtils.addEdgeToCFA, INFO)

line 11546: Dead code detected: [!(pao_ID_____1 == 1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 11547: Dead code detected: __asm__ ("incq %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx))); (CFACreationUtils.addEdgeToCFA, INFO)

line 11549: Dead code detected: [pao_ID_____1 == -1] (CFACreationUtils.addEdgeToCFA, INFO)

line 11549: Dead code detected: [!(pao_ID_____1 == -1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 11550: Dead code detected: __asm__ ("decq %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx))); (CFACreationUtils.addEdgeToCFA, INFO)

line 11552: Dead code detected: __asm__ ("addq %1, %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)): "re" ((unsigned long long )count)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (8UL) {
  case 1UL: ;
  if (pao_ID_____1 == 1) {
    __asm__ ("incb %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)));
  } else
  if (pao_ID_____1 == -1) {
    __asm__ ("decb %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)));
  } else {
    __asm__ ("addb %1, %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)): "qi" ((unsigned long long )count));
  }
  goto ldv_49268;
  case 2UL: ;
  if (pao_ID_____1 == 1) {
    __asm__ ("incw %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)));
  } else
  if (pao_ID_____1 == -1) {
    __asm__ ("decw %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)));
  } else {
    __asm__ ("addw %1, %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)): "ri" ((unsigned long long )count));
  }
  goto ldv_49268;
  case 4UL: ;
  if (pao_ID_____1 == 1) {
    __asm__ ("incl %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)));
  } else
  if (pao_ID_____1 == -1) {
    __asm__ ("decl %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)));
  } else {
    __asm__ ("addl %1, %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)): "ri" ((unsigned long long )count));
  }
  goto ldv_49268;
  case 8UL: ;
  if (pao_ID_____1 == 1) {
    __asm__ ("incq %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)));
  } else
  if (pao_ID_____1 == -1) {
    __asm__ ("decq %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)));
  } else {
    __asm__ ("addq %1, %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)): "re" ((unsigned long long )count));
  }
  goto ldv_49268;
  default:
  __bad_percpu_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 11564: Dead code detected: [pao_ID_____2 == 1] (CFACreationUtils.addEdgeToCFA, INFO)

line 11564: Dead code detected: [!(pao_ID_____2 == 1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 11565: Dead code detected: __asm__ ("incb %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx))); (CFACreationUtils.addEdgeToCFA, INFO)

line 11567: Dead code detected: [pao_ID_____2 == -1] (CFACreationUtils.addEdgeToCFA, INFO)

line 11567: Dead code detected: [!(pao_ID_____2 == -1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 11568: Dead code detected: __asm__ ("decb %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx))); (CFACreationUtils.addEdgeToCFA, INFO)

line 11570: Dead code detected: __asm__ ("addb %1, %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)): "qi" ((unsigned long long )count)); (CFACreationUtils.addEdgeToCFA, INFO)

line 11574: Dead code detected: [pao_ID_____2 == 1] (CFACreationUtils.addEdgeToCFA, INFO)

line 11574: Dead code detected: [!(pao_ID_____2 == 1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 11575: Dead code detected: __asm__ ("incw %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx))); (CFACreationUtils.addEdgeToCFA, INFO)

line 11577: Dead code detected: [pao_ID_____2 == -1] (CFACreationUtils.addEdgeToCFA, INFO)

line 11577: Dead code detected: [!(pao_ID_____2 == -1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 11578: Dead code detected: __asm__ ("decw %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx))); (CFACreationUtils.addEdgeToCFA, INFO)

line 11580: Dead code detected: __asm__ ("addw %1, %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)): "ri" ((unsigned long long )count)); (CFACreationUtils.addEdgeToCFA, INFO)

line 11584: Dead code detected: [pao_ID_____2 == 1] (CFACreationUtils.addEdgeToCFA, INFO)

line 11584: Dead code detected: [!(pao_ID_____2 == 1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 11585: Dead code detected: __asm__ ("incl %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx))); (CFACreationUtils.addEdgeToCFA, INFO)

line 11587: Dead code detected: [pao_ID_____2 == -1] (CFACreationUtils.addEdgeToCFA, INFO)

line 11587: Dead code detected: [!(pao_ID_____2 == -1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 11588: Dead code detected: __asm__ ("decl %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx))); (CFACreationUtils.addEdgeToCFA, INFO)

line 11590: Dead code detected: __asm__ ("addl %1, %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)): "ri" ((unsigned long long )count)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (8UL) {
  case 1UL: ;
  if (pao_ID_____2 == 1) {
    __asm__ ("incb %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)));
  } else
  if (pao_ID_____2 == -1) {
    __asm__ ("decb %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)));
  } else {
    __asm__ ("addb %1, %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)): "qi" ((unsigned long long )count));
  }
  goto ldv_49278;
  case 2UL: ;
  if (pao_ID_____2 == 1) {
    __asm__ ("incw %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)));
  } else
  if (pao_ID_____2 == -1) {
    __asm__ ("decw %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)));
  } else {
    __asm__ ("addw %1, %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)): "ri" ((unsigned long long )count));
  }
  goto ldv_49278;
  case 4UL: ;
  if (pao_ID_____2 == 1) {
    __asm__ ("incl %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)));
  } else
  if (pao_ID_____2 == -1) {
    __asm__ ("decl %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)));
  } else {
    __asm__ ("addl %1, %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)): "ri" ((unsigned long long )count));
  }
  goto ldv_49278;
  case 8UL: ;
  if (pao_ID_____2 == 1) {
    __asm__ ("incq %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)));
  } else
  if (pao_ID_____2 == -1) {
    __asm__ ("decq %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)));
  } else {
    __asm__ ("addq %1, %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)): "re" ((unsigned long long )count));
  }
  goto ldv_49278;
  default:
  __bad_percpu_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (8UL) {
  case 1UL:
  pao_ID__ = 0;
  switch (8UL) {
  case 1UL: ;
  if (pao_ID__ == 1) {
    __asm__ ("incb %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)));
  } else
  if (pao_ID__ == -1) {
    __asm__ ("decb %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)));
  } else {
    __asm__ ("addb %1, %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)): "qi" ((unsigned long long )count));
  }
  goto ldv_49247;
  case 2UL: ;
  if (pao_ID__ == 1) {
    __asm__ ("incw %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)));
  } else
  if (pao_ID__ == -1) {
    __asm__ ("decw %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)));
  } else {
    __asm__ ("addw %1, %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)): "ri" ((unsigned long long )count));
  }
  goto ldv_49247;
  case 4UL: ;
  if (pao_ID__ == 1) {
    __asm__ ("incl %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)));
  } else
  if (pao_ID__ == -1) {
    __asm__ ("decl %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)));
  } else {
    __asm__ ("addl %1, %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)): "ri" ((unsigned long long )count));
  }
  goto ldv_49247;
  case 8UL: ;
  if (pao_ID__ == 1) {
    __asm__ ("incq %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)));
  } else
  if (pao_ID__ == -1) {
    __asm__ ("decq %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)));
  } else {
    __asm__ ("addq %1, %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)): "re" ((unsigned long long )count));
  }
  goto ldv_49247;
  default:
  __bad_percpu_size();
  }
  ldv_49247: ;
  goto ldv_49252;
  case 2UL:
  pao_ID_____0 = 0;
  switch (8UL) {
  case 1UL: ;
  if (pao_ID_____0 == 1) {
    __asm__ ("incb %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)));
  } else
  if (pao_ID_____0 == -1) {
    __asm__ ("decb %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)));
  } else {
    __asm__ ("addb %1, %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)): "qi" ((unsigned long long )count));
  }
  goto ldv_49258;
  case 2UL: ;
  if (pao_ID_____0 == 1) {
    __asm__ ("incw %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)));
  } else
  if (pao_ID_____0 == -1) {
    __asm__ ("decw %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)));
  } else {
    __asm__ ("addw %1, %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)): "ri" ((unsigned long long )count));
  }
  goto ldv_49258;
  case 4UL: ;
  if (pao_ID_____0 == 1) {
    __asm__ ("incl %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)));
  } else
  if (pao_ID_____0 == -1) {
    __asm__ ("decl %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)));
  } else {
    __asm__ ("addl %1, %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)): "ri" ((unsigned long long )count));
  }
  goto ldv_49258;
  case 8UL: ;
  if (pao_ID_____0 == 1) {
    __asm__ ("incq %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)));
  } else
  if (pao_ID_____0 == -1) {
    __asm__ ("decq %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)));
  } else {
    __asm__ ("addq %1, %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)): "re" ((unsigned long long )count));
  }
  goto ldv_49258;
  default:
  __bad_percpu_size();
  }
  ldv_49258: ;
  goto ldv_49252;
  case 4UL:
  pao_ID_____1 = 0;
  switch (8UL) {
  case 1UL: ;
  if (pao_ID_____1 == 1) {
    __asm__ ("incb %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)));
  } else
  if (pao_ID_____1 == -1) {
    __asm__ ("decb %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)));
  } else {
    __asm__ ("addb %1, %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)): "qi" ((unsigned long long )count));
  }
  goto ldv_49268;
  case 2UL: ;
  if (pao_ID_____1 == 1) {
    __asm__ ("incw %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)));
  } else
  if (pao_ID_____1 == -1) {
    __asm__ ("decw %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)));
  } else {
    __asm__ ("addw %1, %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)): "ri" ((unsigned long long )count));
  }
  goto ldv_49268;
  case 4UL: ;
  if (pao_ID_____1 == 1) {
    __asm__ ("incl %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)));
  } else
  if (pao_ID_____1 == -1) {
    __asm__ ("decl %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)));
  } else {
    __asm__ ("addl %1, %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)): "ri" ((unsigned long long )count));
  }
  goto ldv_49268;
  case 8UL: ;
  if (pao_ID_____1 == 1) {
    __asm__ ("incq %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)));
  } else
  if (pao_ID_____1 == -1) {
    __asm__ ("decq %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)));
  } else {
    __asm__ ("addq %1, %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)): "re" ((unsigned long long )count));
  }
  goto ldv_49268;
  default:
  __bad_percpu_size();
  }
  ldv_49268: ;
  goto ldv_49252;
  case 8UL:
  pao_ID_____2 = 0;
  switch (8UL) {
  case 1UL: ;
  if (pao_ID_____2 == 1) {
    __asm__ ("incb %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)));
  } else
  if (pao_ID_____2 == -1) {
    __asm__ ("decb %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)));
  } else {
    __asm__ ("addb %1, %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)): "qi" ((unsigned long long )count));
  }
  goto ldv_49278;
  case 2UL: ;
  if (pao_ID_____2 == 1) {
    __asm__ ("incw %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)));
  } else
  if (pao_ID_____2 == -1) {
    __asm__ ("decw %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)));
  } else {
    __asm__ ("addw %1, %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)): "ri" ((unsigned long long )count));
  }
  goto ldv_49278;
  case 4UL: ;
  if (pao_ID_____2 == 1) {
    __asm__ ("incl %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)));
  } else
  if (pao_ID_____2 == -1) {
    __asm__ ("decl %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)));
  } else {
    __asm__ ("addl %1, %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)): "ri" ((unsigned long long )count));
  }
  goto ldv_49278;
  case 8UL: ;
  if (pao_ID_____2 == 1) {
    __asm__ ("incq %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)));
  } else
  if (pao_ID_____2 == -1) {
    __asm__ ("decq %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)));
  } else {
    __asm__ ("addq %1, %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)): "re" ((unsigned long long )count));
  }
  goto ldv_49278;
  default:
  __bad_percpu_size();
  }
  ldv_49278: ;
  goto ldv_49252;
  default:
  __bad_size_call_parameter();
  goto ldv_49252;
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 14455: Dead code detected: __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& kernel_stack)); (CFACreationUtils.addEdgeToCFA, INFO)

line 14458: Dead code detected: __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack)); (CFACreationUtils.addEdgeToCFA, INFO)

line 14461: Dead code detected: __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (8UL) {
  case 1UL:
  __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& kernel_stack));
  goto ldv_5945;
  case 2UL:
  __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack));
  goto ldv_5945;
  case 4UL:
  __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack));
  goto ldv_5945;
  case 8UL:
  __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack));
  goto ldv_5945;
  default:
  __bad_percpu_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

lines 14827-14828: Dead code detected: __asm__ volatile ("661:\n\t.byte 0x66,0x66,0x90\n\n662:\n.pushsection .altinstructions,\"a\"\n .long 661b - .\n .long 6631f - .\n .word (9*32+20)\n .byte 662b-661b\n .byte 6641f-6631f\n.popsection\n.pushsection .discard,\"aw\",@progbits\n .byte 0xff + (6641f-6631f) - (662b-661b)\n.popsection\n.pushsection .altinstr_replacement, \"ax\"\n6631:\n\t.byte 0x0f,0x01,0xcb\n6641:\n\t.popsection\n1:\tmovw %w1,%2\n2: 661:\n\t.byte 0x66,0x66,0x90\n\n662:\n.pushsection .altinstructions,\"a\"\n .long 661b - .\n .long 6631f - .\n .word (9*32+20)\n .byte 662b-661b\n .byte 6641f-6631f\n.popsection\n.pushsection .discard,\"aw\",@progbits\n .byte 0xff + (6641f-6631f) - (662b-661b)\n.popsection\n.pushsection .altinstr_replacement, \"ax\"\n6631:\n\t.byte 0x0f,0x01,0xca\n6641:\n\t.popsection\n.section .fixup,\"ax\"\n3:\tmov %3,%0\n\tjmp 2b\n.previous\n .pushsection \"__ex_table\",\"a\"\n .balign 8\n .long (1b) - .\n .long (3b) - .\n .popsection\n": "=r" (__pu_err): "ir" (c),
                       "m" (*((struct __large_struct *)buf)), "i" (-14), "0" (__pu_err)); (CFACreationUtils.addEdgeToCFA, INFO)

lines 14831-14832: Dead code detected: __asm__ volatile ("661:\n\t.byte 0x66,0x66,0x90\n\n662:\n.pushsection .altinstructions,\"a\"\n .long 661b - .\n .long 6631f - .\n .word (9*32+20)\n .byte 662b-661b\n .byte 6641f-6631f\n.popsection\n.pushsection .discard,\"aw\",@progbits\n .byte 0xff + (6641f-6631f) - (662b-661b)\n.popsection\n.pushsection .altinstr_replacement, \"ax\"\n6631:\n\t.byte 0x0f,0x01,0xcb\n6641:\n\t.popsection\n1:\tmovl %k1,%2\n2: 661:\n\t.byte 0x66,0x66,0x90\n\n662:\n.pushsection .altinstructions,\"a\"\n .long 661b - .\n .long 6631f - .\n .word (9*32+20)\n .byte 662b-661b\n .byte 6641f-6631f\n.popsection\n.pushsection .discard,\"aw\",@progbits\n .byte 0xff + (6641f-6631f) - (662b-661b)\n.popsection\n.pushsection .altinstr_replacement, \"ax\"\n6631:\n\t.byte 0x0f,0x01,0xca\n6641:\n\t.popsection\n.section .fixup,\"ax\"\n3:\tmov %3,%0\n\tjmp 2b\n.previous\n .pushsection \"__ex_table\",\"a\"\n .balign 8\n .long (1b) - .\n .long (3b) - .\n .popsection\n": "=r" (__pu_err): "ir" (c),
                       "m" (*((struct __large_struct *)buf)), "i" (-14), "0" (__pu_err)); (CFACreationUtils.addEdgeToCFA, INFO)

lines 14835-14836: Dead code detected: __asm__ volatile ("661:\n\t.byte 0x66,0x66,0x90\n\n662:\n.pushsection .altinstructions,\"a\"\n .long 661b - .\n .long 6631f - .\n .word (9*32+20)\n .byte 662b-661b\n .byte 6641f-6631f\n.popsection\n.pushsection .discard,\"aw\",@progbits\n .byte 0xff + (6641f-6631f) - (662b-661b)\n.popsection\n.pushsection .altinstr_replacement, \"ax\"\n6631:\n\t.byte 0x0f,0x01,0xcb\n6641:\n\t.popsection\n1:\tmovq %1,%2\n2: 661:\n\t.byte 0x66,0x66,0x90\n\n662:\n.pushsection .altinstructions,\"a\"\n .long 661b - .\n .long 6631f - .\n .word (9*32+20)\n .byte 662b-661b\n .byte 6641f-6631f\n.popsection\n.pushsection .discard,\"aw\",@progbits\n .byte 0xff + (6641f-6631f) - (662b-661b)\n.popsection\n.pushsection .altinstr_replacement, \"ax\"\n6631:\n\t.byte 0x0f,0x01,0xca\n6641:\n\t.popsection\n.section .fixup,\"ax\"\n3:\tmov %3,%0\n\tjmp 2b\n.previous\n .pushsection \"__ex_table\",\"a\"\n .balign 8\n .long (1b) - .\n .long (3b) - .\n .popsection\n": "=r" (__pu_err): "er" (c),
                       "m" (*((struct __large_struct *)buf)), "i" (-14), "0" (__pu_err)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (1UL) {
  case 1UL:
  __asm__ volatile ("661:\n\t.byte 0x66,0x66,0x90\n\n662:\n.pushsection .altinstructions,\"a\"\n .long 661b - .\n .long 6631f - .\n .word (9*32+20)\n .byte 662b-661b\n .byte 6641f-6631f\n.popsection\n.pushsection .discard,\"aw\",@progbits\n .byte 0xff + (6641f-6631f) - (662b-661b)\n.popsection\n.pushsection .altinstr_replacement, \"ax\"\n6631:\n\t.byte 0x0f,0x01,0xcb\n6641:\n\t.popsection\n1:\tmovb %b1,%2\n2: 661:\n\t.byte 0x66,0x66,0x90\n\n662:\n.pushsection .altinstructions,\"a\"\n .long 661b - .\n .long 6631f - .\n .word (9*32+20)\n .byte 662b-661b\n .byte 6641f-6631f\n.popsection\n.pushsection .discard,\"aw\",@progbits\n .byte 0xff + (6641f-6631f) - (662b-661b)\n.popsection\n.pushsection .altinstr_replacement, \"ax\"\n6631:\n\t.byte 0x0f,0x01,0xca\n6641:\n\t.popsection\n.section .fixup,\"ax\"\n3:\tmov %3,%0\n\tjmp 2b\n.previous\n .pushsection \"__ex_table\",\"a\"\n .balign 8\n .long (1b) - .\n .long (3b) - .\n .popsection\n": "=r" (__pu_err): "iq" (c),
                       "m" (*((struct __large_struct *)buf)), "i" (-14), "0" (__pu_err));
  goto ldv_50037;
  case 2UL:
  __asm__ volatile ("661:\n\t.byte 0x66,0x66,0x90\n\n662:\n.pushsection .altinstructions,\"a\"\n .long 661b - .\n .long 6631f - .\n .word (9*32+20)\n .byte 662b-661b\n .byte 6641f-6631f\n.popsection\n.pushsection .discard,\"aw\",@progbits\n .byte 0xff + (6641f-6631f) - (662b-661b)\n.popsection\n.pushsection .altinstr_replacement, \"ax\"\n6631:\n\t.byte 0x0f,0x01,0xcb\n6641:\n\t.popsection\n1:\tmovw %w1,%2\n2: 661:\n\t.byte 0x66,0x66,0x90\n\n662:\n.pushsection .altinstructions,\"a\"\n .long 661b - .\n .long 6631f - .\n .word (9*32+20)\n .byte 662b-661b\n .byte 6641f-6631f\n.popsection\n.pushsection .discard,\"aw\",@progbits\n .byte 0xff + (6641f-6631f) - (662b-661b)\n.popsection\n.pushsection .altinstr_replacement, \"ax\"\n6631:\n\t.byte 0x0f,0x01,0xca\n6641:\n\t.popsection\n.section .fixup,\"ax\"\n3:\tmov %3,%0\n\tjmp 2b\n.previous\n .pushsection \"__ex_table\",\"a\"\n .balign 8\n .long (1b) - .\n .long (3b) - .\n .popsection\n": "=r" (__pu_err): "ir" (c),
                       "m" (*((struct __large_struct *)buf)), "i" (-14), "0" (__pu_err));
  goto ldv_50037;
  case 4UL:
  __asm__ volatile ("661:\n\t.byte 0x66,0x66,0x90\n\n662:\n.pushsection .altinstructions,\"a\"\n .long 661b - .\n .long 6631f - .\n .word (9*32+20)\n .byte 662b-661b\n .byte 6641f-6631f\n.popsection\n.pushsection .discard,\"aw\",@progbits\n .byte 0xff + (6641f-6631f) - (662b-661b)\n.popsection\n.pushsection .altinstr_replacement, \"ax\"\n6631:\n\t.byte 0x0f,0x01,0xcb\n6641:\n\t.popsection\n1:\tmovl %k1,%2\n2: 661:\n\t.byte 0x66,0x66,0x90\n\n662:\n.pushsection .altinstructions,\"a\"\n .long 661b - .\n .long 6631f - .\n .word (9*32+20)\n .byte 662b-661b\n .byte 6641f-6631f\n.popsection\n.pushsection .discard,\"aw\",@progbits\n .byte 0xff + (6641f-6631f) - (662b-661b)\n.popsection\n.pushsection .altinstr_replacement, \"ax\"\n6631:\n\t.byte 0x0f,0x01,0xca\n6641:\n\t.popsection\n.section .fixup,\"ax\"\n3:\tmov %3,%0\n\tjmp 2b\n.previous\n .pushsection \"__ex_table\",\"a\"\n .balign 8\n .long (1b) - .\n .long (3b) - .\n .popsection\n": "=r" (__pu_err): "ir" (c),
                       "m" (*((struct __large_struct *)buf)), "i" (-14), "0" (__pu_err));
  goto ldv_50037;
  case 8UL:
  __asm__ volatile ("661:\n\t.byte 0x66,0x66,0x90\n\n662:\n.pushsection .altinstructions,\"a\"\n .long 661b - .\n .long 6631f - .\n .word (9*32+20)\n .byte 662b-661b\n .byte 6641f-6631f\n.popsection\n.pushsection .discard,\"aw\",@progbits\n .byte 0xff + (6641f-6631f) - (662b-661b)\n.popsection\n.pushsection .altinstr_replacement, \"ax\"\n6631:\n\t.byte 0x0f,0x01,0xcb\n6641:\n\t.popsection\n1:\tmovq %1,%2\n2: 661:\n\t.byte 0x66,0x66,0x90\n\n662:\n.pushsection .altinstructions,\"a\"\n .long 661b - .\n .long 6631f - .\n .word (9*32+20)\n .byte 662b-661b\n .byte 6641f-6631f\n.popsection\n.pushsection .discard,\"aw\",@progbits\n .byte 0xff + (6641f-6631f) - (662b-661b)\n.popsection\n.pushsection .altinstr_replacement, \"ax\"\n6631:\n\t.byte 0x0f,0x01,0xca\n6641:\n\t.popsection\n.section .fixup,\"ax\"\n3:\tmov %3,%0\n\tjmp 2b\n.previous\n .pushsection \"__ex_table\",\"a\"\n .balign 8\n .long (1b) - .\n .long (3b) - .\n .popsection\n": "=r" (__pu_err): "er" (c),
                       "m" (*((struct __large_struct *)buf)), "i" (-14), "0" (__pu_err));
  goto ldv_50037;
  default:
  __put_user_bad();
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 16600: Dead code detected: pao_ID__ = 0; (CFACreationUtils.addEdgeToCFA, INFO)

line 16603: Dead code detected: [pao_ID__ == 1] (CFACreationUtils.addEdgeToCFA, INFO)

line 16603: Dead code detected: [!(pao_ID__ == 1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 16604: Dead code detected: __asm__ ("incb %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx))); (CFACreationUtils.addEdgeToCFA, INFO)

line 16606: Dead code detected: [pao_ID__ == -1] (CFACreationUtils.addEdgeToCFA, INFO)

line 16606: Dead code detected: [!(pao_ID__ == -1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 16607: Dead code detected: __asm__ ("decb %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx))); (CFACreationUtils.addEdgeToCFA, INFO)

line 16609: Dead code detected: __asm__ ("addb %1, %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)): "qi" ((unsigned long long )count)); (CFACreationUtils.addEdgeToCFA, INFO)

line 16613: Dead code detected: [pao_ID__ == 1] (CFACreationUtils.addEdgeToCFA, INFO)

line 16613: Dead code detected: [!(pao_ID__ == 1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 16614: Dead code detected: __asm__ ("incw %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx))); (CFACreationUtils.addEdgeToCFA, INFO)

line 16616: Dead code detected: [pao_ID__ == -1] (CFACreationUtils.addEdgeToCFA, INFO)

line 16616: Dead code detected: [!(pao_ID__ == -1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 16617: Dead code detected: __asm__ ("decw %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx))); (CFACreationUtils.addEdgeToCFA, INFO)

line 16619: Dead code detected: __asm__ ("addw %1, %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)): "ri" ((unsigned long long )count)); (CFACreationUtils.addEdgeToCFA, INFO)

line 16623: Dead code detected: [pao_ID__ == 1] (CFACreationUtils.addEdgeToCFA, INFO)

line 16623: Dead code detected: [!(pao_ID__ == 1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 16624: Dead code detected: __asm__ ("incl %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx))); (CFACreationUtils.addEdgeToCFA, INFO)

line 16626: Dead code detected: [pao_ID__ == -1] (CFACreationUtils.addEdgeToCFA, INFO)

line 16626: Dead code detected: [!(pao_ID__ == -1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 16627: Dead code detected: __asm__ ("decl %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx))); (CFACreationUtils.addEdgeToCFA, INFO)

line 16629: Dead code detected: __asm__ ("addl %1, %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)): "ri" ((unsigned long long )count)); (CFACreationUtils.addEdgeToCFA, INFO)

line 16632: Dead code detected:  (CFACreationUtils.addEdgeToCFA, INFO)

line 16633: Dead code detected: [!(pao_ID__ == 1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 16634: Dead code detected: __asm__ ("incq %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx))); (CFACreationUtils.addEdgeToCFA, INFO)

line 16636: Dead code detected: [pao_ID__ == -1] (CFACreationUtils.addEdgeToCFA, INFO)

line 16636: Dead code detected: [!(pao_ID__ == -1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 16637: Dead code detected: __asm__ ("decq %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx))); (CFACreationUtils.addEdgeToCFA, INFO)

line 16639: Dead code detected: __asm__ ("addq %1, %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)): "re" ((unsigned long long )count)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (8UL) {
  case 1UL: ;
  if (pao_ID__ == 1) {
    __asm__ ("incb %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)));
  } else
  if (pao_ID__ == -1) {
    __asm__ ("decb %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)));
  } else {
    __asm__ ("addb %1, %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)): "qi" ((unsigned long long )count));
  }
  goto ldv_49314;
  case 2UL: ;
  if (pao_ID__ == 1) {
    __asm__ ("incw %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)));
  } else
  if (pao_ID__ == -1) {
    __asm__ ("decw %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)));
  } else {
    __asm__ ("addw %1, %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)): "ri" ((unsigned long long )count));
  }
  goto ldv_49314;
  case 4UL: ;
  if (pao_ID__ == 1) {
    __asm__ ("incl %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)));
  } else
  if (pao_ID__ == -1) {
    __asm__ ("decl %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)));
  } else {
    __asm__ ("addl %1, %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)): "ri" ((unsigned long long )count));
  }
  goto ldv_49314;
  case 8UL: ;
  if (pao_ID__ == 1) {
    __asm__ ("incq %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)));
  } else
  if (pao_ID__ == -1) {
    __asm__ ("decq %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)));
  } else {
    __asm__ ("addq %1, %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)): "re" ((unsigned long long )count));
  }
  goto ldv_49314;
  default:
  __bad_percpu_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 16648: Dead code detected: pao_ID_____0 = 0; (CFACreationUtils.addEdgeToCFA, INFO)

line 16651: Dead code detected: [pao_ID_____0 == 1] (CFACreationUtils.addEdgeToCFA, INFO)

line 16651: Dead code detected: [!(pao_ID_____0 == 1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 16652: Dead code detected: __asm__ ("incb %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx))); (CFACreationUtils.addEdgeToCFA, INFO)

line 16654: Dead code detected: [pao_ID_____0 == -1] (CFACreationUtils.addEdgeToCFA, INFO)

line 16654: Dead code detected: [!(pao_ID_____0 == -1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 16655: Dead code detected: __asm__ ("decb %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx))); (CFACreationUtils.addEdgeToCFA, INFO)

line 16657: Dead code detected: __asm__ ("addb %1, %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)): "qi" ((unsigned long long )count)); (CFACreationUtils.addEdgeToCFA, INFO)

line 16661: Dead code detected: [pao_ID_____0 == 1] (CFACreationUtils.addEdgeToCFA, INFO)

line 16661: Dead code detected: [!(pao_ID_____0 == 1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 16662: Dead code detected: __asm__ ("incw %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx))); (CFACreationUtils.addEdgeToCFA, INFO)

line 16664: Dead code detected: [pao_ID_____0 == -1] (CFACreationUtils.addEdgeToCFA, INFO)

line 16664: Dead code detected: [!(pao_ID_____0 == -1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 16665: Dead code detected: __asm__ ("decw %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx))); (CFACreationUtils.addEdgeToCFA, INFO)

line 16667: Dead code detected: __asm__ ("addw %1, %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)): "ri" ((unsigned long long )count)); (CFACreationUtils.addEdgeToCFA, INFO)

line 16671: Dead code detected: [pao_ID_____0 == 1] (CFACreationUtils.addEdgeToCFA, INFO)

line 16671: Dead code detected: [!(pao_ID_____0 == 1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 16672: Dead code detected: __asm__ ("incl %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx))); (CFACreationUtils.addEdgeToCFA, INFO)

line 16674: Dead code detected: [pao_ID_____0 == -1] (CFACreationUtils.addEdgeToCFA, INFO)

line 16674: Dead code detected: [!(pao_ID_____0 == -1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 16675: Dead code detected: __asm__ ("decl %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx))); (CFACreationUtils.addEdgeToCFA, INFO)

line 16677: Dead code detected: __asm__ ("addl %1, %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)): "ri" ((unsigned long long )count)); (CFACreationUtils.addEdgeToCFA, INFO)

line 16680: Dead code detected:  (CFACreationUtils.addEdgeToCFA, INFO)

line 16681: Dead code detected: [!(pao_ID_____0 == 1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 16682: Dead code detected: __asm__ ("incq %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx))); (CFACreationUtils.addEdgeToCFA, INFO)

line 16684: Dead code detected: [pao_ID_____0 == -1] (CFACreationUtils.addEdgeToCFA, INFO)

line 16684: Dead code detected: [!(pao_ID_____0 == -1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 16685: Dead code detected: __asm__ ("decq %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx))); (CFACreationUtils.addEdgeToCFA, INFO)

line 16687: Dead code detected: __asm__ ("addq %1, %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)): "re" ((unsigned long long )count)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (8UL) {
  case 1UL: ;
  if (pao_ID_____0 == 1) {
    __asm__ ("incb %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)));
  } else
  if (pao_ID_____0 == -1) {
    __asm__ ("decb %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)));
  } else {
    __asm__ ("addb %1, %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)): "qi" ((unsigned long long )count));
  }
  goto ldv_49325;
  case 2UL: ;
  if (pao_ID_____0 == 1) {
    __asm__ ("incw %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)));
  } else
  if (pao_ID_____0 == -1) {
    __asm__ ("decw %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)));
  } else {
    __asm__ ("addw %1, %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)): "ri" ((unsigned long long )count));
  }
  goto ldv_49325;
  case 4UL: ;
  if (pao_ID_____0 == 1) {
    __asm__ ("incl %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)));
  } else
  if (pao_ID_____0 == -1) {
    __asm__ ("decl %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)));
  } else {
    __asm__ ("addl %1, %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)): "ri" ((unsigned long long )count));
  }
  goto ldv_49325;
  case 8UL: ;
  if (pao_ID_____0 == 1) {
    __asm__ ("incq %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)));
  } else
  if (pao_ID_____0 == -1) {
    __asm__ ("decq %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)));
  } else {
    __asm__ ("addq %1, %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)): "re" ((unsigned long long )count));
  }
  goto ldv_49325;
  default:
  __bad_percpu_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 16696: Dead code detected: pao_ID_____1 = 0; (CFACreationUtils.addEdgeToCFA, INFO)

line 16699: Dead code detected: [pao_ID_____1 == 1] (CFACreationUtils.addEdgeToCFA, INFO)

line 16699: Dead code detected: [!(pao_ID_____1 == 1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 16700: Dead code detected: __asm__ ("incb %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx))); (CFACreationUtils.addEdgeToCFA, INFO)

line 16702: Dead code detected: [pao_ID_____1 == -1] (CFACreationUtils.addEdgeToCFA, INFO)

line 16702: Dead code detected: [!(pao_ID_____1 == -1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 16703: Dead code detected: __asm__ ("decb %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx))); (CFACreationUtils.addEdgeToCFA, INFO)

line 16705: Dead code detected: __asm__ ("addb %1, %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)): "qi" ((unsigned long long )count)); (CFACreationUtils.addEdgeToCFA, INFO)

line 16709: Dead code detected: [pao_ID_____1 == 1] (CFACreationUtils.addEdgeToCFA, INFO)

line 16709: Dead code detected: [!(pao_ID_____1 == 1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 16710: Dead code detected: __asm__ ("incw %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx))); (CFACreationUtils.addEdgeToCFA, INFO)

line 16712: Dead code detected: [pao_ID_____1 == -1] (CFACreationUtils.addEdgeToCFA, INFO)

line 16712: Dead code detected: [!(pao_ID_____1 == -1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 16713: Dead code detected: __asm__ ("decw %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx))); (CFACreationUtils.addEdgeToCFA, INFO)

line 16715: Dead code detected: __asm__ ("addw %1, %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)): "ri" ((unsigned long long )count)); (CFACreationUtils.addEdgeToCFA, INFO)

line 16719: Dead code detected: [pao_ID_____1 == 1] (CFACreationUtils.addEdgeToCFA, INFO)

line 16719: Dead code detected: [!(pao_ID_____1 == 1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 16720: Dead code detected: __asm__ ("incl %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx))); (CFACreationUtils.addEdgeToCFA, INFO)

line 16722: Dead code detected: [pao_ID_____1 == -1] (CFACreationUtils.addEdgeToCFA, INFO)

line 16722: Dead code detected: [!(pao_ID_____1 == -1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 16723: Dead code detected: __asm__ ("decl %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx))); (CFACreationUtils.addEdgeToCFA, INFO)

line 16725: Dead code detected: __asm__ ("addl %1, %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)): "ri" ((unsigned long long )count)); (CFACreationUtils.addEdgeToCFA, INFO)

line 16728: Dead code detected:  (CFACreationUtils.addEdgeToCFA, INFO)

line 16729: Dead code detected: [!(pao_ID_____1 == 1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 16730: Dead code detected: __asm__ ("incq %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx))); (CFACreationUtils.addEdgeToCFA, INFO)

line 16732: Dead code detected: [pao_ID_____1 == -1] (CFACreationUtils.addEdgeToCFA, INFO)

line 16732: Dead code detected: [!(pao_ID_____1 == -1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 16733: Dead code detected: __asm__ ("decq %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx))); (CFACreationUtils.addEdgeToCFA, INFO)

line 16735: Dead code detected: __asm__ ("addq %1, %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)): "re" ((unsigned long long )count)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (8UL) {
  case 1UL: ;
  if (pao_ID_____1 == 1) {
    __asm__ ("incb %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)));
  } else
  if (pao_ID_____1 == -1) {
    __asm__ ("decb %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)));
  } else {
    __asm__ ("addb %1, %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)): "qi" ((unsigned long long )count));
  }
  goto ldv_49335;
  case 2UL: ;
  if (pao_ID_____1 == 1) {
    __asm__ ("incw %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)));
  } else
  if (pao_ID_____1 == -1) {
    __asm__ ("decw %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)));
  } else {
    __asm__ ("addw %1, %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)): "ri" ((unsigned long long )count));
  }
  goto ldv_49335;
  case 4UL: ;
  if (pao_ID_____1 == 1) {
    __asm__ ("incl %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)));
  } else
  if (pao_ID_____1 == -1) {
    __asm__ ("decl %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)));
  } else {
    __asm__ ("addl %1, %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)): "ri" ((unsigned long long )count));
  }
  goto ldv_49335;
  case 8UL: ;
  if (pao_ID_____1 == 1) {
    __asm__ ("incq %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)));
  } else
  if (pao_ID_____1 == -1) {
    __asm__ ("decq %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)));
  } else {
    __asm__ ("addq %1, %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)): "re" ((unsigned long long )count));
  }
  goto ldv_49335;
  default:
  __bad_percpu_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 16747: Dead code detected: [pao_ID_____2 == 1] (CFACreationUtils.addEdgeToCFA, INFO)

line 16747: Dead code detected: [!(pao_ID_____2 == 1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 16748: Dead code detected: __asm__ ("incb %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx))); (CFACreationUtils.addEdgeToCFA, INFO)

line 16750: Dead code detected: [pao_ID_____2 == -1] (CFACreationUtils.addEdgeToCFA, INFO)

line 16750: Dead code detected: [!(pao_ID_____2 == -1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 16751: Dead code detected: __asm__ ("decb %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx))); (CFACreationUtils.addEdgeToCFA, INFO)

line 16753: Dead code detected: __asm__ ("addb %1, %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)): "qi" ((unsigned long long )count)); (CFACreationUtils.addEdgeToCFA, INFO)

line 16757: Dead code detected: [pao_ID_____2 == 1] (CFACreationUtils.addEdgeToCFA, INFO)

line 16757: Dead code detected: [!(pao_ID_____2 == 1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 16758: Dead code detected: __asm__ ("incw %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx))); (CFACreationUtils.addEdgeToCFA, INFO)

line 16760: Dead code detected: [pao_ID_____2 == -1] (CFACreationUtils.addEdgeToCFA, INFO)

line 16760: Dead code detected: [!(pao_ID_____2 == -1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 16761: Dead code detected: __asm__ ("decw %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx))); (CFACreationUtils.addEdgeToCFA, INFO)

line 16763: Dead code detected: __asm__ ("addw %1, %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)): "ri" ((unsigned long long )count)); (CFACreationUtils.addEdgeToCFA, INFO)

line 16767: Dead code detected: [pao_ID_____2 == 1] (CFACreationUtils.addEdgeToCFA, INFO)

line 16767: Dead code detected: [!(pao_ID_____2 == 1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 16768: Dead code detected: __asm__ ("incl %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx))); (CFACreationUtils.addEdgeToCFA, INFO)

line 16770: Dead code detected: [pao_ID_____2 == -1] (CFACreationUtils.addEdgeToCFA, INFO)

line 16770: Dead code detected: [!(pao_ID_____2 == -1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 16771: Dead code detected: __asm__ ("decl %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx))); (CFACreationUtils.addEdgeToCFA, INFO)

line 16773: Dead code detected: __asm__ ("addl %1, %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)): "ri" ((unsigned long long )count)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (8UL) {
  case 1UL: ;
  if (pao_ID_____2 == 1) {
    __asm__ ("incb %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)));
  } else
  if (pao_ID_____2 == -1) {
    __asm__ ("decb %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)));
  } else {
    __asm__ ("addb %1, %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)): "qi" ((unsigned long long )count));
  }
  goto ldv_49345;
  case 2UL: ;
  if (pao_ID_____2 == 1) {
    __asm__ ("incw %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)));
  } else
  if (pao_ID_____2 == -1) {
    __asm__ ("decw %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)));
  } else {
    __asm__ ("addw %1, %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)): "ri" ((unsigned long long )count));
  }
  goto ldv_49345;
  case 4UL: ;
  if (pao_ID_____2 == 1) {
    __asm__ ("incl %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)));
  } else
  if (pao_ID_____2 == -1) {
    __asm__ ("decl %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)));
  } else {
    __asm__ ("addl %1, %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)): "ri" ((unsigned long long )count));
  }
  goto ldv_49345;
  case 8UL: ;
  if (pao_ID_____2 == 1) {
    __asm__ ("incq %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)));
  } else
  if (pao_ID_____2 == -1) {
    __asm__ ("decq %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)));
  } else {
    __asm__ ("addq %1, %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)): "re" ((unsigned long long )count));
  }
  goto ldv_49345;
  default:
  __bad_percpu_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (8UL) {
  case 1UL:
  pao_ID__ = 0;
  switch (8UL) {
  case 1UL: ;
  if (pao_ID__ == 1) {
    __asm__ ("incb %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)));
  } else
  if (pao_ID__ == -1) {
    __asm__ ("decb %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)));
  } else {
    __asm__ ("addb %1, %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)): "qi" ((unsigned long long )count));
  }
  goto ldv_49314;
  case 2UL: ;
  if (pao_ID__ == 1) {
    __asm__ ("incw %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)));
  } else
  if (pao_ID__ == -1) {
    __asm__ ("decw %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)));
  } else {
    __asm__ ("addw %1, %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)): "ri" ((unsigned long long )count));
  }
  goto ldv_49314;
  case 4UL: ;
  if (pao_ID__ == 1) {
    __asm__ ("incl %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)));
  } else
  if (pao_ID__ == -1) {
    __asm__ ("decl %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)));
  } else {
    __asm__ ("addl %1, %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)): "ri" ((unsigned long long )count));
  }
  goto ldv_49314;
  case 8UL: ;
  if (pao_ID__ == 1) {
    __asm__ ("incq %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)));
  } else
  if (pao_ID__ == -1) {
    __asm__ ("decq %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)));
  } else {
    __asm__ ("addq %1, %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)): "re" ((unsigned long long )count));
  }
  goto ldv_49314;
  default:
  __bad_percpu_size();
  }
  ldv_49314: ;
  goto ldv_49319;
  case 2UL:
  pao_ID_____0 = 0;
  switch (8UL) {
  case 1UL: ;
  if (pao_ID_____0 == 1) {
    __asm__ ("incb %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)));
  } else
  if (pao_ID_____0 == -1) {
    __asm__ ("decb %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)));
  } else {
    __asm__ ("addb %1, %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)): "qi" ((unsigned long long )count));
  }
  goto ldv_49325;
  case 2UL: ;
  if (pao_ID_____0 == 1) {
    __asm__ ("incw %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)));
  } else
  if (pao_ID_____0 == -1) {
    __asm__ ("decw %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)));
  } else {
    __asm__ ("addw %1, %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)): "ri" ((unsigned long long )count));
  }
  goto ldv_49325;
  case 4UL: ;
  if (pao_ID_____0 == 1) {
    __asm__ ("incl %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)));
  } else
  if (pao_ID_____0 == -1) {
    __asm__ ("decl %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)));
  } else {
    __asm__ ("addl %1, %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)): "ri" ((unsigned long long )count));
  }
  goto ldv_49325;
  case 8UL: ;
  if (pao_ID_____0 == 1) {
    __asm__ ("incq %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)));
  } else
  if (pao_ID_____0 == -1) {
    __asm__ ("decq %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)));
  } else {
    __asm__ ("addq %1, %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)): "re" ((unsigned long long )count));
  }
  goto ldv_49325;
  default:
  __bad_percpu_size();
  }
  ldv_49325: ;
  goto ldv_49319;
  case 4UL:
  pao_ID_____1 = 0;
  switch (8UL) {
  case 1UL: ;
  if (pao_ID_____1 == 1) {
    __asm__ ("incb %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)));
  } else
  if (pao_ID_____1 == -1) {
    __asm__ ("decb %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)));
  } else {
    __asm__ ("addb %1, %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)): "qi" ((unsigned long long )count));
  }
  goto ldv_49335;
  case 2UL: ;
  if (pao_ID_____1 == 1) {
    __asm__ ("incw %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)));
  } else
  if (pao_ID_____1 == -1) {
    __asm__ ("decw %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)));
  } else {
    __asm__ ("addw %1, %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)): "ri" ((unsigned long long )count));
  }
  goto ldv_49335;
  case 4UL: ;
  if (pao_ID_____1 == 1) {
    __asm__ ("incl %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)));
  } else
  if (pao_ID_____1 == -1) {
    __asm__ ("decl %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)));
  } else {
    __asm__ ("addl %1, %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)): "ri" ((unsigned long long )count));
  }
  goto ldv_49335;
  case 8UL: ;
  if (pao_ID_____1 == 1) {
    __asm__ ("incq %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)));
  } else
  if (pao_ID_____1 == -1) {
    __asm__ ("decq %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)));
  } else {
    __asm__ ("addq %1, %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)): "re" ((unsigned long long )count));
  }
  goto ldv_49335;
  default:
  __bad_percpu_size();
  }
  ldv_49335: ;
  goto ldv_49319;
  case 8UL:
  pao_ID_____2 = 0;
  switch (8UL) {
  case 1UL: ;
  if (pao_ID_____2 == 1) {
    __asm__ ("incb %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)));
  } else
  if (pao_ID_____2 == -1) {
    __asm__ ("decb %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)));
  } else {
    __asm__ ("addb %1, %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)): "qi" ((unsigned long long )count));
  }
  goto ldv_49345;
  case 2UL: ;
  if (pao_ID_____2 == 1) {
    __asm__ ("incw %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)));
  } else
  if (pao_ID_____2 == -1) {
    __asm__ ("decw %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)));
  } else {
    __asm__ ("addw %1, %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)): "ri" ((unsigned long long )count));
  }
  goto ldv_49345;
  case 4UL: ;
  if (pao_ID_____2 == 1) {
    __asm__ ("incl %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)));
  } else
  if (pao_ID_____2 == -1) {
    __asm__ ("decl %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)));
  } else {
    __asm__ ("addl %1, %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)): "ri" ((unsigned long long )count));
  }
  goto ldv_49345;
  case 8UL: ;
  if (pao_ID_____2 == 1) {
    __asm__ ("incq %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)));
  } else
  if (pao_ID_____2 == -1) {
    __asm__ ("decq %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)));
  } else {
    __asm__ ("addq %1, %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)): "re" ((unsigned long long )count));
  }
  goto ldv_49345;
  default:
  __bad_percpu_size();
  }
  ldv_49345: ;
  goto ldv_49319;
  default:
  __bad_size_call_parameter();
  goto ldv_49319;
  } (CFACreationUtils.addEdgeToCFA, INFO)

lines 18642-18643: Dead code detected: __asm__ volatile (".pushsection .smp_locks,\"a\"\n.balign 4\n.long 671f - .\n.popsection\n671:\n\tlock; xaddb %b0, %1\n": "+q" (__ret),
                       "+m" (v->counter): : "memory", "cc"); (CFACreationUtils.addEdgeToCFA, INFO)

lines 18646-18647: Dead code detected: __asm__ volatile (".pushsection .smp_locks,\"a\"\n.balign 4\n.long 671f - .\n.popsection\n671:\n\tlock; xaddw %w0, %1\n": "+r" (__ret),
                       "+m" (v->counter): : "memory", "cc"); (CFACreationUtils.addEdgeToCFA, INFO)

lines 18654-18655: Dead code detected: __asm__ volatile (".pushsection .smp_locks,\"a\"\n.balign 4\n.long 671f - .\n.popsection\n671:\n\tlock; xaddq %q0, %1\n": "+r" (__ret),
                       "+m" (v->counter): : "memory", "cc"); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (4UL) {
  case 1UL:
  __asm__ volatile (".pushsection .smp_locks,\"a\"\n.balign 4\n.long 671f - .\n.popsection\n671:\n\tlock; xaddb %b0, %1\n": "+q" (__ret),
                       "+m" (v->counter): : "memory", "cc");
  goto ldv_5626;
  case 2UL:
  __asm__ volatile (".pushsection .smp_locks,\"a\"\n.balign 4\n.long 671f - .\n.popsection\n671:\n\tlock; xaddw %w0, %1\n": "+r" (__ret),
                       "+m" (v->counter): : "memory", "cc");
  goto ldv_5626;
  case 4UL:
  __asm__ volatile (".pushsection .smp_locks,\"a\"\n.balign 4\n.long 671f - .\n.popsection\n671:\n\tlock; xaddl %0, %1\n": "+r" (__ret),
                       "+m" (v->counter): : "memory", "cc");
  goto ldv_5626;
  case 8UL:
  __asm__ volatile (".pushsection .smp_locks,\"a\"\n.balign 4\n.long 671f - .\n.popsection\n671:\n\tlock; xaddq %q0, %1\n": "+r" (__ret),
                       "+m" (v->counter): : "memory", "cc");
  goto ldv_5626;
  default:
  __xadd_wrong_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 18774: Dead code detected: pao_ID__ = 0; (CFACreationUtils.addEdgeToCFA, INFO)

line 18777: Dead code detected: [pao_ID__ == 1] (CFACreationUtils.addEdgeToCFA, INFO)

line 18777: Dead code detected: [!(pao_ID__ == 1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 18778: Dead code detected: __asm__ ("incb %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx))); (CFACreationUtils.addEdgeToCFA, INFO)

line 18780: Dead code detected: [pao_ID__ == -1] (CFACreationUtils.addEdgeToCFA, INFO)

line 18780: Dead code detected: [!(pao_ID__ == -1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 18781: Dead code detected: __asm__ ("decb %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx))); (CFACreationUtils.addEdgeToCFA, INFO)

line 18783: Dead code detected: __asm__ ("addb %1, %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)): "qi" ((unsigned long long )count)); (CFACreationUtils.addEdgeToCFA, INFO)

line 18787: Dead code detected: [pao_ID__ == 1] (CFACreationUtils.addEdgeToCFA, INFO)

line 18787: Dead code detected: [!(pao_ID__ == 1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 18788: Dead code detected: __asm__ ("incw %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx))); (CFACreationUtils.addEdgeToCFA, INFO)

line 18790: Dead code detected: [pao_ID__ == -1] (CFACreationUtils.addEdgeToCFA, INFO)

line 18790: Dead code detected: [!(pao_ID__ == -1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 18791: Dead code detected: __asm__ ("decw %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx))); (CFACreationUtils.addEdgeToCFA, INFO)

line 18793: Dead code detected: __asm__ ("addw %1, %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)): "ri" ((unsigned long long )count)); (CFACreationUtils.addEdgeToCFA, INFO)

line 18797: Dead code detected: [pao_ID__ == 1] (CFACreationUtils.addEdgeToCFA, INFO)

line 18797: Dead code detected: [!(pao_ID__ == 1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 18798: Dead code detected: __asm__ ("incl %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx))); (CFACreationUtils.addEdgeToCFA, INFO)

line 18800: Dead code detected: [pao_ID__ == -1] (CFACreationUtils.addEdgeToCFA, INFO)

line 18800: Dead code detected: [!(pao_ID__ == -1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 18801: Dead code detected: __asm__ ("decl %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx))); (CFACreationUtils.addEdgeToCFA, INFO)

line 18803: Dead code detected: __asm__ ("addl %1, %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)): "ri" ((unsigned long long )count)); (CFACreationUtils.addEdgeToCFA, INFO)

line 18806: Dead code detected:  (CFACreationUtils.addEdgeToCFA, INFO)

line 18807: Dead code detected: [!(pao_ID__ == 1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 18808: Dead code detected: __asm__ ("incq %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx))); (CFACreationUtils.addEdgeToCFA, INFO)

line 18810: Dead code detected: [pao_ID__ == -1] (CFACreationUtils.addEdgeToCFA, INFO)

line 18810: Dead code detected: [!(pao_ID__ == -1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 18811: Dead code detected: __asm__ ("decq %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx))); (CFACreationUtils.addEdgeToCFA, INFO)

line 18813: Dead code detected: __asm__ ("addq %1, %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)): "re" ((unsigned long long )count)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (8UL) {
  case 1UL: ;
  if (pao_ID__ == 1) {
    __asm__ ("incb %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)));
  } else
  if (pao_ID__ == -1) {
    __asm__ ("decb %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)));
  } else {
    __asm__ ("addb %1, %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)): "qi" ((unsigned long long )count));
  }
  goto ldv_49267;
  case 2UL: ;
  if (pao_ID__ == 1) {
    __asm__ ("incw %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)));
  } else
  if (pao_ID__ == -1) {
    __asm__ ("decw %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)));
  } else {
    __asm__ ("addw %1, %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)): "ri" ((unsigned long long )count));
  }
  goto ldv_49267;
  case 4UL: ;
  if (pao_ID__ == 1) {
    __asm__ ("incl %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)));
  } else
  if (pao_ID__ == -1) {
    __asm__ ("decl %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)));
  } else {
    __asm__ ("addl %1, %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)): "ri" ((unsigned long long )count));
  }
  goto ldv_49267;
  case 8UL: ;
  if (pao_ID__ == 1) {
    __asm__ ("incq %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)));
  } else
  if (pao_ID__ == -1) {
    __asm__ ("decq %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)));
  } else {
    __asm__ ("addq %1, %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)): "re" ((unsigned long long )count));
  }
  goto ldv_49267;
  default:
  __bad_percpu_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 18822: Dead code detected: pao_ID_____0 = 0; (CFACreationUtils.addEdgeToCFA, INFO)

line 18825: Dead code detected: [pao_ID_____0 == 1] (CFACreationUtils.addEdgeToCFA, INFO)

line 18825: Dead code detected: [!(pao_ID_____0 == 1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 18826: Dead code detected: __asm__ ("incb %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx))); (CFACreationUtils.addEdgeToCFA, INFO)

line 18828: Dead code detected: [pao_ID_____0 == -1] (CFACreationUtils.addEdgeToCFA, INFO)

line 18828: Dead code detected: [!(pao_ID_____0 == -1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 18829: Dead code detected: __asm__ ("decb %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx))); (CFACreationUtils.addEdgeToCFA, INFO)

line 18831: Dead code detected: __asm__ ("addb %1, %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)): "qi" ((unsigned long long )count)); (CFACreationUtils.addEdgeToCFA, INFO)

line 18835: Dead code detected: [pao_ID_____0 == 1] (CFACreationUtils.addEdgeToCFA, INFO)

line 18835: Dead code detected: [!(pao_ID_____0 == 1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 18836: Dead code detected: __asm__ ("incw %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx))); (CFACreationUtils.addEdgeToCFA, INFO)

line 18838: Dead code detected: [pao_ID_____0 == -1] (CFACreationUtils.addEdgeToCFA, INFO)

line 18838: Dead code detected: [!(pao_ID_____0 == -1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 18839: Dead code detected: __asm__ ("decw %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx))); (CFACreationUtils.addEdgeToCFA, INFO)

line 18841: Dead code detected: __asm__ ("addw %1, %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)): "ri" ((unsigned long long )count)); (CFACreationUtils.addEdgeToCFA, INFO)

line 18845: Dead code detected: [pao_ID_____0 == 1] (CFACreationUtils.addEdgeToCFA, INFO)

line 18845: Dead code detected: [!(pao_ID_____0 == 1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 18846: Dead code detected: __asm__ ("incl %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx))); (CFACreationUtils.addEdgeToCFA, INFO)

line 18848: Dead code detected: [pao_ID_____0 == -1] (CFACreationUtils.addEdgeToCFA, INFO)

line 18848: Dead code detected: [!(pao_ID_____0 == -1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 18849: Dead code detected: __asm__ ("decl %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx))); (CFACreationUtils.addEdgeToCFA, INFO)

line 18851: Dead code detected: __asm__ ("addl %1, %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)): "ri" ((unsigned long long )count)); (CFACreationUtils.addEdgeToCFA, INFO)

line 18854: Dead code detected:  (CFACreationUtils.addEdgeToCFA, INFO)

line 18855: Dead code detected: [!(pao_ID_____0 == 1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 18856: Dead code detected: __asm__ ("incq %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx))); (CFACreationUtils.addEdgeToCFA, INFO)

line 18858: Dead code detected: [pao_ID_____0 == -1] (CFACreationUtils.addEdgeToCFA, INFO)

line 18858: Dead code detected: [!(pao_ID_____0 == -1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 18859: Dead code detected: __asm__ ("decq %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx))); (CFACreationUtils.addEdgeToCFA, INFO)

line 18861: Dead code detected: __asm__ ("addq %1, %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)): "re" ((unsigned long long )count)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (8UL) {
  case 1UL: ;
  if (pao_ID_____0 == 1) {
    __asm__ ("incb %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)));
  } else
  if (pao_ID_____0 == -1) {
    __asm__ ("decb %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)));
  } else {
    __asm__ ("addb %1, %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)): "qi" ((unsigned long long )count));
  }
  goto ldv_49278;
  case 2UL: ;
  if (pao_ID_____0 == 1) {
    __asm__ ("incw %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)));
  } else
  if (pao_ID_____0 == -1) {
    __asm__ ("decw %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)));
  } else {
    __asm__ ("addw %1, %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)): "ri" ((unsigned long long )count));
  }
  goto ldv_49278;
  case 4UL: ;
  if (pao_ID_____0 == 1) {
    __asm__ ("incl %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)));
  } else
  if (pao_ID_____0 == -1) {
    __asm__ ("decl %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)));
  } else {
    __asm__ ("addl %1, %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)): "ri" ((unsigned long long )count));
  }
  goto ldv_49278;
  case 8UL: ;
  if (pao_ID_____0 == 1) {
    __asm__ ("incq %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)));
  } else
  if (pao_ID_____0 == -1) {
    __asm__ ("decq %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)));
  } else {
    __asm__ ("addq %1, %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)): "re" ((unsigned long long )count));
  }
  goto ldv_49278;
  default:
  __bad_percpu_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 18870: Dead code detected: pao_ID_____1 = 0; (CFACreationUtils.addEdgeToCFA, INFO)

line 18873: Dead code detected: [pao_ID_____1 == 1] (CFACreationUtils.addEdgeToCFA, INFO)

line 18873: Dead code detected: [!(pao_ID_____1 == 1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 18874: Dead code detected: __asm__ ("incb %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx))); (CFACreationUtils.addEdgeToCFA, INFO)

line 18876: Dead code detected: [pao_ID_____1 == -1] (CFACreationUtils.addEdgeToCFA, INFO)

line 18876: Dead code detected: [!(pao_ID_____1 == -1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 18877: Dead code detected: __asm__ ("decb %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx))); (CFACreationUtils.addEdgeToCFA, INFO)

line 18879: Dead code detected: __asm__ ("addb %1, %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)): "qi" ((unsigned long long )count)); (CFACreationUtils.addEdgeToCFA, INFO)

line 18883: Dead code detected: [pao_ID_____1 == 1] (CFACreationUtils.addEdgeToCFA, INFO)

line 18883: Dead code detected: [!(pao_ID_____1 == 1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 18884: Dead code detected: __asm__ ("incw %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx))); (CFACreationUtils.addEdgeToCFA, INFO)

line 18886: Dead code detected: [pao_ID_____1 == -1] (CFACreationUtils.addEdgeToCFA, INFO)

line 18886: Dead code detected: [!(pao_ID_____1 == -1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 18887: Dead code detected: __asm__ ("decw %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx))); (CFACreationUtils.addEdgeToCFA, INFO)

line 18889: Dead code detected: __asm__ ("addw %1, %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)): "ri" ((unsigned long long )count)); (CFACreationUtils.addEdgeToCFA, INFO)

line 18893: Dead code detected: [pao_ID_____1 == 1] (CFACreationUtils.addEdgeToCFA, INFO)

line 18893: Dead code detected: [!(pao_ID_____1 == 1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 18894: Dead code detected: __asm__ ("incl %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx))); (CFACreationUtils.addEdgeToCFA, INFO)

line 18896: Dead code detected: [pao_ID_____1 == -1] (CFACreationUtils.addEdgeToCFA, INFO)

line 18896: Dead code detected: [!(pao_ID_____1 == -1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 18897: Dead code detected: __asm__ ("decl %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx))); (CFACreationUtils.addEdgeToCFA, INFO)

line 18899: Dead code detected: __asm__ ("addl %1, %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)): "ri" ((unsigned long long )count)); (CFACreationUtils.addEdgeToCFA, INFO)

line 18902: Dead code detected:  (CFACreationUtils.addEdgeToCFA, INFO)

line 18903: Dead code detected: [!(pao_ID_____1 == 1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 18904: Dead code detected: __asm__ ("incq %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx))); (CFACreationUtils.addEdgeToCFA, INFO)

line 18906: Dead code detected: [pao_ID_____1 == -1] (CFACreationUtils.addEdgeToCFA, INFO)

line 18906: Dead code detected: [!(pao_ID_____1 == -1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 18907: Dead code detected: __asm__ ("decq %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx))); (CFACreationUtils.addEdgeToCFA, INFO)

line 18909: Dead code detected: __asm__ ("addq %1, %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)): "re" ((unsigned long long )count)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (8UL) {
  case 1UL: ;
  if (pao_ID_____1 == 1) {
    __asm__ ("incb %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)));
  } else
  if (pao_ID_____1 == -1) {
    __asm__ ("decb %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)));
  } else {
    __asm__ ("addb %1, %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)): "qi" ((unsigned long long )count));
  }
  goto ldv_49288;
  case 2UL: ;
  if (pao_ID_____1 == 1) {
    __asm__ ("incw %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)));
  } else
  if (pao_ID_____1 == -1) {
    __asm__ ("decw %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)));
  } else {
    __asm__ ("addw %1, %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)): "ri" ((unsigned long long )count));
  }
  goto ldv_49288;
  case 4UL: ;
  if (pao_ID_____1 == 1) {
    __asm__ ("incl %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)));
  } else
  if (pao_ID_____1 == -1) {
    __asm__ ("decl %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)));
  } else {
    __asm__ ("addl %1, %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)): "ri" ((unsigned long long )count));
  }
  goto ldv_49288;
  case 8UL: ;
  if (pao_ID_____1 == 1) {
    __asm__ ("incq %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)));
  } else
  if (pao_ID_____1 == -1) {
    __asm__ ("decq %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)));
  } else {
    __asm__ ("addq %1, %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)): "re" ((unsigned long long )count));
  }
  goto ldv_49288;
  default:
  __bad_percpu_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 18921: Dead code detected: [pao_ID_____2 == 1] (CFACreationUtils.addEdgeToCFA, INFO)

line 18921: Dead code detected: [!(pao_ID_____2 == 1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 18922: Dead code detected: __asm__ ("incb %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx))); (CFACreationUtils.addEdgeToCFA, INFO)

line 18924: Dead code detected: [pao_ID_____2 == -1] (CFACreationUtils.addEdgeToCFA, INFO)

line 18924: Dead code detected: [!(pao_ID_____2 == -1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 18925: Dead code detected: __asm__ ("decb %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx))); (CFACreationUtils.addEdgeToCFA, INFO)

line 18927: Dead code detected: __asm__ ("addb %1, %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)): "qi" ((unsigned long long )count)); (CFACreationUtils.addEdgeToCFA, INFO)

line 18931: Dead code detected: [pao_ID_____2 == 1] (CFACreationUtils.addEdgeToCFA, INFO)

line 18931: Dead code detected: [!(pao_ID_____2 == 1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 18932: Dead code detected: __asm__ ("incw %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx))); (CFACreationUtils.addEdgeToCFA, INFO)

line 18934: Dead code detected: [pao_ID_____2 == -1] (CFACreationUtils.addEdgeToCFA, INFO)

line 18934: Dead code detected: [!(pao_ID_____2 == -1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 18935: Dead code detected: __asm__ ("decw %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx))); (CFACreationUtils.addEdgeToCFA, INFO)

line 18937: Dead code detected: __asm__ ("addw %1, %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)): "ri" ((unsigned long long )count)); (CFACreationUtils.addEdgeToCFA, INFO)

line 18941: Dead code detected: [pao_ID_____2 == 1] (CFACreationUtils.addEdgeToCFA, INFO)

line 18941: Dead code detected: [!(pao_ID_____2 == 1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 18942: Dead code detected: __asm__ ("incl %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx))); (CFACreationUtils.addEdgeToCFA, INFO)

line 18944: Dead code detected: [pao_ID_____2 == -1] (CFACreationUtils.addEdgeToCFA, INFO)

line 18944: Dead code detected: [!(pao_ID_____2 == -1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 18945: Dead code detected: __asm__ ("decl %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx))); (CFACreationUtils.addEdgeToCFA, INFO)

line 18947: Dead code detected: __asm__ ("addl %1, %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)): "ri" ((unsigned long long )count)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (8UL) {
  case 1UL: ;
  if (pao_ID_____2 == 1) {
    __asm__ ("incb %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)));
  } else
  if (pao_ID_____2 == -1) {
    __asm__ ("decb %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)));
  } else {
    __asm__ ("addb %1, %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)): "qi" ((unsigned long long )count));
  }
  goto ldv_49298;
  case 2UL: ;
  if (pao_ID_____2 == 1) {
    __asm__ ("incw %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)));
  } else
  if (pao_ID_____2 == -1) {
    __asm__ ("decw %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)));
  } else {
    __asm__ ("addw %1, %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)): "ri" ((unsigned long long )count));
  }
  goto ldv_49298;
  case 4UL: ;
  if (pao_ID_____2 == 1) {
    __asm__ ("incl %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)));
  } else
  if (pao_ID_____2 == -1) {
    __asm__ ("decl %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)));
  } else {
    __asm__ ("addl %1, %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)): "ri" ((unsigned long long )count));
  }
  goto ldv_49298;
  case 8UL: ;
  if (pao_ID_____2 == 1) {
    __asm__ ("incq %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)));
  } else
  if (pao_ID_____2 == -1) {
    __asm__ ("decq %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)));
  } else {
    __asm__ ("addq %1, %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)): "re" ((unsigned long long )count));
  }
  goto ldv_49298;
  default:
  __bad_percpu_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (8UL) {
  case 1UL:
  pao_ID__ = 0;
  switch (8UL) {
  case 1UL: ;
  if (pao_ID__ == 1) {
    __asm__ ("incb %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)));
  } else
  if (pao_ID__ == -1) {
    __asm__ ("decb %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)));
  } else {
    __asm__ ("addb %1, %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)): "qi" ((unsigned long long )count));
  }
  goto ldv_49267;
  case 2UL: ;
  if (pao_ID__ == 1) {
    __asm__ ("incw %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)));
  } else
  if (pao_ID__ == -1) {
    __asm__ ("decw %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)));
  } else {
    __asm__ ("addw %1, %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)): "ri" ((unsigned long long )count));
  }
  goto ldv_49267;
  case 4UL: ;
  if (pao_ID__ == 1) {
    __asm__ ("incl %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)));
  } else
  if (pao_ID__ == -1) {
    __asm__ ("decl %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)));
  } else {
    __asm__ ("addl %1, %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)): "ri" ((unsigned long long )count));
  }
  goto ldv_49267;
  case 8UL: ;
  if (pao_ID__ == 1) {
    __asm__ ("incq %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)));
  } else
  if (pao_ID__ == -1) {
    __asm__ ("decq %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)));
  } else {
    __asm__ ("addq %1, %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)): "re" ((unsigned long long )count));
  }
  goto ldv_49267;
  default:
  __bad_percpu_size();
  }
  ldv_49267: ;
  goto ldv_49272;
  case 2UL:
  pao_ID_____0 = 0;
  switch (8UL) {
  case 1UL: ;
  if (pao_ID_____0 == 1) {
    __asm__ ("incb %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)));
  } else
  if (pao_ID_____0 == -1) {
    __asm__ ("decb %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)));
  } else {
    __asm__ ("addb %1, %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)): "qi" ((unsigned long long )count));
  }
  goto ldv_49278;
  case 2UL: ;
  if (pao_ID_____0 == 1) {
    __asm__ ("incw %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)));
  } else
  if (pao_ID_____0 == -1) {
    __asm__ ("decw %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)));
  } else {
    __asm__ ("addw %1, %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)): "ri" ((unsigned long long )count));
  }
  goto ldv_49278;
  case 4UL: ;
  if (pao_ID_____0 == 1) {
    __asm__ ("incl %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)));
  } else
  if (pao_ID_____0 == -1) {
    __asm__ ("decl %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)));
  } else {
    __asm__ ("addl %1, %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)): "ri" ((unsigned long long )count));
  }
  goto ldv_49278;
  case 8UL: ;
  if (pao_ID_____0 == 1) {
    __asm__ ("incq %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)));
  } else
  if (pao_ID_____0 == -1) {
    __asm__ ("decq %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)));
  } else {
    __asm__ ("addq %1, %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)): "re" ((unsigned long long )count));
  }
  goto ldv_49278;
  default:
  __bad_percpu_size();
  }
  ldv_49278: ;
  goto ldv_49272;
  case 4UL:
  pao_ID_____1 = 0;
  switch (8UL) {
  case 1UL: ;
  if (pao_ID_____1 == 1) {
    __asm__ ("incb %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)));
  } else
  if (pao_ID_____1 == -1) {
    __asm__ ("decb %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)));
  } else {
    __asm__ ("addb %1, %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)): "qi" ((unsigned long long )count));
  }
  goto ldv_49288;
  case 2UL: ;
  if (pao_ID_____1 == 1) {
    __asm__ ("incw %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)));
  } else
  if (pao_ID_____1 == -1) {
    __asm__ ("decw %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)));
  } else {
    __asm__ ("addw %1, %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)): "ri" ((unsigned long long )count));
  }
  goto ldv_49288;
  case 4UL: ;
  if (pao_ID_____1 == 1) {
    __asm__ ("incl %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)));
  } else
  if (pao_ID_____1 == -1) {
    __asm__ ("decl %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)));
  } else {
    __asm__ ("addl %1, %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)): "ri" ((unsigned long long )count));
  }
  goto ldv_49288;
  case 8UL: ;
  if (pao_ID_____1 == 1) {
    __asm__ ("incq %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)));
  } else
  if (pao_ID_____1 == -1) {
    __asm__ ("decq %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)));
  } else {
    __asm__ ("addq %1, %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)): "re" ((unsigned long long )count));
  }
  goto ldv_49288;
  default:
  __bad_percpu_size();
  }
  ldv_49288: ;
  goto ldv_49272;
  case 8UL:
  pao_ID_____2 = 0;
  switch (8UL) {
  case 1UL: ;
  if (pao_ID_____2 == 1) {
    __asm__ ("incb %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)));
  } else
  if (pao_ID_____2 == -1) {
    __asm__ ("decb %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)));
  } else {
    __asm__ ("addb %1, %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)): "qi" ((unsigned long long )count));
  }
  goto ldv_49298;
  case 2UL: ;
  if (pao_ID_____2 == 1) {
    __asm__ ("incw %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)));
  } else
  if (pao_ID_____2 == -1) {
    __asm__ ("decw %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)));
  } else {
    __asm__ ("addw %1, %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)): "ri" ((unsigned long long )count));
  }
  goto ldv_49298;
  case 4UL: ;
  if (pao_ID_____2 == 1) {
    __asm__ ("incl %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)));
  } else
  if (pao_ID_____2 == -1) {
    __asm__ ("decl %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)));
  } else {
    __asm__ ("addl %1, %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)): "ri" ((unsigned long long )count));
  }
  goto ldv_49298;
  case 8UL: ;
  if (pao_ID_____2 == 1) {
    __asm__ ("incq %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)));
  } else
  if (pao_ID_____2 == -1) {
    __asm__ ("decq %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)));
  } else {
    __asm__ ("addq %1, %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)): "re" ((unsigned long long )count));
  }
  goto ldv_49298;
  default:
  __bad_percpu_size();
  }
  ldv_49298: ;
  goto ldv_49272;
  default:
  __bad_size_call_parameter();
  goto ldv_49272;
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 21803: Dead code detected: pao_ID__ = -1; (CFACreationUtils.addEdgeToCFA, INFO)

line 21806: Dead code detected: [pao_ID__ == 1] (CFACreationUtils.addEdgeToCFA, INFO)

line 21806: Dead code detected: [!(pao_ID__ == 1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 21807: Dead code detected: __asm__ ("incb %%gs:%P0": "+m" (*(dev->pcpu_refcnt))); (CFACreationUtils.addEdgeToCFA, INFO)

line 21809: Dead code detected: [pao_ID__ == -1] (CFACreationUtils.addEdgeToCFA, INFO)

line 21809: Dead code detected: [!(pao_ID__ == -1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 21810: Dead code detected: __asm__ ("decb %%gs:%P0": "+m" (*(dev->pcpu_refcnt))); (CFACreationUtils.addEdgeToCFA, INFO)

line 21812: Dead code detected: __asm__ ("addb %1, %%gs:%P0": "+m" (*(dev->pcpu_refcnt)): "qi" (-1)); (CFACreationUtils.addEdgeToCFA, INFO)

line 21816: Dead code detected: [pao_ID__ == 1] (CFACreationUtils.addEdgeToCFA, INFO)

line 21816: Dead code detected: [!(pao_ID__ == 1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 21817: Dead code detected: __asm__ ("incw %%gs:%P0": "+m" (*(dev->pcpu_refcnt))); (CFACreationUtils.addEdgeToCFA, INFO)

line 21819: Dead code detected: [pao_ID__ == -1] (CFACreationUtils.addEdgeToCFA, INFO)

line 21819: Dead code detected: [!(pao_ID__ == -1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 21820: Dead code detected: __asm__ ("decw %%gs:%P0": "+m" (*(dev->pcpu_refcnt))); (CFACreationUtils.addEdgeToCFA, INFO)

line 21822: Dead code detected: __asm__ ("addw %1, %%gs:%P0": "+m" (*(dev->pcpu_refcnt)): "ri" (-1)); (CFACreationUtils.addEdgeToCFA, INFO)

line 21825: Dead code detected:  (CFACreationUtils.addEdgeToCFA, INFO)

line 21826: Dead code detected: [!(pao_ID__ == 1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 21827: Dead code detected: __asm__ ("incl %%gs:%P0": "+m" (*(dev->pcpu_refcnt))); (CFACreationUtils.addEdgeToCFA, INFO)

line 21829: Dead code detected: [pao_ID__ == -1] (CFACreationUtils.addEdgeToCFA, INFO)

line 21829: Dead code detected: [!(pao_ID__ == -1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 21830: Dead code detected: __asm__ ("decl %%gs:%P0": "+m" (*(dev->pcpu_refcnt))); (CFACreationUtils.addEdgeToCFA, INFO)

line 21832: Dead code detected: __asm__ ("addl %1, %%gs:%P0": "+m" (*(dev->pcpu_refcnt)): "ri" (-1)); (CFACreationUtils.addEdgeToCFA, INFO)

line 21836: Dead code detected: [pao_ID__ == 1] (CFACreationUtils.addEdgeToCFA, INFO)

line 21836: Dead code detected: [!(pao_ID__ == 1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 21837: Dead code detected: __asm__ ("incq %%gs:%P0": "+m" (*(dev->pcpu_refcnt))); (CFACreationUtils.addEdgeToCFA, INFO)

line 21839: Dead code detected: [pao_ID__ == -1] (CFACreationUtils.addEdgeToCFA, INFO)

line 21839: Dead code detected: [!(pao_ID__ == -1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 21840: Dead code detected: __asm__ ("decq %%gs:%P0": "+m" (*(dev->pcpu_refcnt))); (CFACreationUtils.addEdgeToCFA, INFO)

line 21842: Dead code detected: __asm__ ("addq %1, %%gs:%P0": "+m" (*(dev->pcpu_refcnt)): "re" (-1)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (4UL) {
  case 1UL: ;
  if (pao_ID__ == 1) {
    __asm__ ("incb %%gs:%P0": "+m" (*(dev->pcpu_refcnt)));
  } else
  if (pao_ID__ == -1) {
    __asm__ ("decb %%gs:%P0": "+m" (*(dev->pcpu_refcnt)));
  } else {
    __asm__ ("addb %1, %%gs:%P0": "+m" (*(dev->pcpu_refcnt)): "qi" (-1));
  }
  goto ldv_40955;
  case 2UL: ;
  if (pao_ID__ == 1) {
    __asm__ ("incw %%gs:%P0": "+m" (*(dev->pcpu_refcnt)));
  } else
  if (pao_ID__ == -1) {
    __asm__ ("decw %%gs:%P0": "+m" (*(dev->pcpu_refcnt)));
  } else {
    __asm__ ("addw %1, %%gs:%P0": "+m" (*(dev->pcpu_refcnt)): "ri" (-1));
  }
  goto ldv_40955;
  case 4UL: ;
  if (pao_ID__ == 1) {
    __asm__ ("incl %%gs:%P0": "+m" (*(dev->pcpu_refcnt)));
  } else
  if (pao_ID__ == -1) {
    __asm__ ("decl %%gs:%P0": "+m" (*(dev->pcpu_refcnt)));
  } else {
    __asm__ ("addl %1, %%gs:%P0": "+m" (*(dev->pcpu_refcnt)): "ri" (-1));
  }
  goto ldv_40955;
  case 8UL: ;
  if (pao_ID__ == 1) {
    __asm__ ("incq %%gs:%P0": "+m" (*(dev->pcpu_refcnt)));
  } else
  if (pao_ID__ == -1) {
    __asm__ ("decq %%gs:%P0": "+m" (*(dev->pcpu_refcnt)));
  } else {
    __asm__ ("addq %1, %%gs:%P0": "+m" (*(dev->pcpu_refcnt)): "re" (-1));
  }
  goto ldv_40955;
  default:
  __bad_percpu_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 21851: Dead code detected: pao_ID_____0 = -1; (CFACreationUtils.addEdgeToCFA, INFO)

line 21854: Dead code detected: [pao_ID_____0 == 1] (CFACreationUtils.addEdgeToCFA, INFO)

line 21854: Dead code detected: [!(pao_ID_____0 == 1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 21855: Dead code detected: __asm__ ("incb %%gs:%P0": "+m" (*(dev->pcpu_refcnt))); (CFACreationUtils.addEdgeToCFA, INFO)

line 21857: Dead code detected: [pao_ID_____0 == -1] (CFACreationUtils.addEdgeToCFA, INFO)

line 21857: Dead code detected: [!(pao_ID_____0 == -1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 21858: Dead code detected: __asm__ ("decb %%gs:%P0": "+m" (*(dev->pcpu_refcnt))); (CFACreationUtils.addEdgeToCFA, INFO)

line 21860: Dead code detected: __asm__ ("addb %1, %%gs:%P0": "+m" (*(dev->pcpu_refcnt)): "qi" (-1)); (CFACreationUtils.addEdgeToCFA, INFO)

line 21864: Dead code detected: [pao_ID_____0 == 1] (CFACreationUtils.addEdgeToCFA, INFO)

line 21864: Dead code detected: [!(pao_ID_____0 == 1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 21865: Dead code detected: __asm__ ("incw %%gs:%P0": "+m" (*(dev->pcpu_refcnt))); (CFACreationUtils.addEdgeToCFA, INFO)

line 21867: Dead code detected: [pao_ID_____0 == -1] (CFACreationUtils.addEdgeToCFA, INFO)

line 21867: Dead code detected: [!(pao_ID_____0 == -1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 21868: Dead code detected: __asm__ ("decw %%gs:%P0": "+m" (*(dev->pcpu_refcnt))); (CFACreationUtils.addEdgeToCFA, INFO)

line 21870: Dead code detected: __asm__ ("addw %1, %%gs:%P0": "+m" (*(dev->pcpu_refcnt)): "ri" (-1)); (CFACreationUtils.addEdgeToCFA, INFO)

line 21873: Dead code detected:  (CFACreationUtils.addEdgeToCFA, INFO)

line 21874: Dead code detected: [!(pao_ID_____0 == 1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 21875: Dead code detected: __asm__ ("incl %%gs:%P0": "+m" (*(dev->pcpu_refcnt))); (CFACreationUtils.addEdgeToCFA, INFO)

line 21877: Dead code detected: [pao_ID_____0 == -1] (CFACreationUtils.addEdgeToCFA, INFO)

line 21877: Dead code detected: [!(pao_ID_____0 == -1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 21878: Dead code detected: __asm__ ("decl %%gs:%P0": "+m" (*(dev->pcpu_refcnt))); (CFACreationUtils.addEdgeToCFA, INFO)

line 21880: Dead code detected: __asm__ ("addl %1, %%gs:%P0": "+m" (*(dev->pcpu_refcnt)): "ri" (-1)); (CFACreationUtils.addEdgeToCFA, INFO)

line 21884: Dead code detected: [pao_ID_____0 == 1] (CFACreationUtils.addEdgeToCFA, INFO)

line 21884: Dead code detected: [!(pao_ID_____0 == 1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 21885: Dead code detected: __asm__ ("incq %%gs:%P0": "+m" (*(dev->pcpu_refcnt))); (CFACreationUtils.addEdgeToCFA, INFO)

line 21887: Dead code detected: [pao_ID_____0 == -1] (CFACreationUtils.addEdgeToCFA, INFO)

line 21887: Dead code detected: [!(pao_ID_____0 == -1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 21888: Dead code detected: __asm__ ("decq %%gs:%P0": "+m" (*(dev->pcpu_refcnt))); (CFACreationUtils.addEdgeToCFA, INFO)

line 21890: Dead code detected: __asm__ ("addq %1, %%gs:%P0": "+m" (*(dev->pcpu_refcnt)): "re" (-1)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (4UL) {
  case 1UL: ;
  if (pao_ID_____0 == 1) {
    __asm__ ("incb %%gs:%P0": "+m" (*(dev->pcpu_refcnt)));
  } else
  if (pao_ID_____0 == -1) {
    __asm__ ("decb %%gs:%P0": "+m" (*(dev->pcpu_refcnt)));
  } else {
    __asm__ ("addb %1, %%gs:%P0": "+m" (*(dev->pcpu_refcnt)): "qi" (-1));
  }
  goto ldv_40966;
  case 2UL: ;
  if (pao_ID_____0 == 1) {
    __asm__ ("incw %%gs:%P0": "+m" (*(dev->pcpu_refcnt)));
  } else
  if (pao_ID_____0 == -1) {
    __asm__ ("decw %%gs:%P0": "+m" (*(dev->pcpu_refcnt)));
  } else {
    __asm__ ("addw %1, %%gs:%P0": "+m" (*(dev->pcpu_refcnt)): "ri" (-1));
  }
  goto ldv_40966;
  case 4UL: ;
  if (pao_ID_____0 == 1) {
    __asm__ ("incl %%gs:%P0": "+m" (*(dev->pcpu_refcnt)));
  } else
  if (pao_ID_____0 == -1) {
    __asm__ ("decl %%gs:%P0": "+m" (*(dev->pcpu_refcnt)));
  } else {
    __asm__ ("addl %1, %%gs:%P0": "+m" (*(dev->pcpu_refcnt)): "ri" (-1));
  }
  goto ldv_40966;
  case 8UL: ;
  if (pao_ID_____0 == 1) {
    __asm__ ("incq %%gs:%P0": "+m" (*(dev->pcpu_refcnt)));
  } else
  if (pao_ID_____0 == -1) {
    __asm__ ("decq %%gs:%P0": "+m" (*(dev->pcpu_refcnt)));
  } else {
    __asm__ ("addq %1, %%gs:%P0": "+m" (*(dev->pcpu_refcnt)): "re" (-1));
  }
  goto ldv_40966;
  default:
  __bad_percpu_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 21902: Dead code detected: [pao_ID_____1 == 1] (CFACreationUtils.addEdgeToCFA, INFO)

line 21902: Dead code detected: [!(pao_ID_____1 == 1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 21903: Dead code detected: __asm__ ("incb %%gs:%P0": "+m" (*(dev->pcpu_refcnt))); (CFACreationUtils.addEdgeToCFA, INFO)

line 21905: Dead code detected: [pao_ID_____1 == -1] (CFACreationUtils.addEdgeToCFA, INFO)

line 21905: Dead code detected: [!(pao_ID_____1 == -1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 21906: Dead code detected: __asm__ ("decb %%gs:%P0": "+m" (*(dev->pcpu_refcnt))); (CFACreationUtils.addEdgeToCFA, INFO)

line 21908: Dead code detected: __asm__ ("addb %1, %%gs:%P0": "+m" (*(dev->pcpu_refcnt)): "qi" (-1)); (CFACreationUtils.addEdgeToCFA, INFO)

line 21912: Dead code detected: [pao_ID_____1 == 1] (CFACreationUtils.addEdgeToCFA, INFO)

line 21912: Dead code detected: [!(pao_ID_____1 == 1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 21913: Dead code detected: __asm__ ("incw %%gs:%P0": "+m" (*(dev->pcpu_refcnt))); (CFACreationUtils.addEdgeToCFA, INFO)

line 21915: Dead code detected: [pao_ID_____1 == -1] (CFACreationUtils.addEdgeToCFA, INFO)

line 21915: Dead code detected: [!(pao_ID_____1 == -1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 21916: Dead code detected: __asm__ ("decw %%gs:%P0": "+m" (*(dev->pcpu_refcnt))); (CFACreationUtils.addEdgeToCFA, INFO)

line 21918: Dead code detected: __asm__ ("addw %1, %%gs:%P0": "+m" (*(dev->pcpu_refcnt)): "ri" (-1)); (CFACreationUtils.addEdgeToCFA, INFO)

line 21932: Dead code detected: [pao_ID_____1 == 1] (CFACreationUtils.addEdgeToCFA, INFO)

line 21932: Dead code detected: [!(pao_ID_____1 == 1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 21933: Dead code detected: __asm__ ("incq %%gs:%P0": "+m" (*(dev->pcpu_refcnt))); (CFACreationUtils.addEdgeToCFA, INFO)

line 21935: Dead code detected: [pao_ID_____1 == -1] (CFACreationUtils.addEdgeToCFA, INFO)

line 21935: Dead code detected: [!(pao_ID_____1 == -1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 21936: Dead code detected: __asm__ ("decq %%gs:%P0": "+m" (*(dev->pcpu_refcnt))); (CFACreationUtils.addEdgeToCFA, INFO)

line 21938: Dead code detected: __asm__ ("addq %1, %%gs:%P0": "+m" (*(dev->pcpu_refcnt)): "re" (-1)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (4UL) {
  case 1UL: ;
  if (pao_ID_____1 == 1) {
    __asm__ ("incb %%gs:%P0": "+m" (*(dev->pcpu_refcnt)));
  } else
  if (pao_ID_____1 == -1) {
    __asm__ ("decb %%gs:%P0": "+m" (*(dev->pcpu_refcnt)));
  } else {
    __asm__ ("addb %1, %%gs:%P0": "+m" (*(dev->pcpu_refcnt)): "qi" (-1));
  }
  goto ldv_40976;
  case 2UL: ;
  if (pao_ID_____1 == 1) {
    __asm__ ("incw %%gs:%P0": "+m" (*(dev->pcpu_refcnt)));
  } else
  if (pao_ID_____1 == -1) {
    __asm__ ("decw %%gs:%P0": "+m" (*(dev->pcpu_refcnt)));
  } else {
    __asm__ ("addw %1, %%gs:%P0": "+m" (*(dev->pcpu_refcnt)): "ri" (-1));
  }
  goto ldv_40976;
  case 4UL: ;
  if (pao_ID_____1 == 1) {
    __asm__ ("incl %%gs:%P0": "+m" (*(dev->pcpu_refcnt)));
  } else
  if (pao_ID_____1 == -1) {
    __asm__ ("decl %%gs:%P0": "+m" (*(dev->pcpu_refcnt)));
  } else {
    __asm__ ("addl %1, %%gs:%P0": "+m" (*(dev->pcpu_refcnt)): "ri" (-1));
  }
  goto ldv_40976;
  case 8UL: ;
  if (pao_ID_____1 == 1) {
    __asm__ ("incq %%gs:%P0": "+m" (*(dev->pcpu_refcnt)));
  } else
  if (pao_ID_____1 == -1) {
    __asm__ ("decq %%gs:%P0": "+m" (*(dev->pcpu_refcnt)));
  } else {
    __asm__ ("addq %1, %%gs:%P0": "+m" (*(dev->pcpu_refcnt)): "re" (-1));
  }
  goto ldv_40976;
  default:
  __bad_percpu_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 21947: Dead code detected: pao_ID_____2 = -1; (CFACreationUtils.addEdgeToCFA, INFO)

line 21950: Dead code detected: [pao_ID_____2 == 1] (CFACreationUtils.addEdgeToCFA, INFO)

line 21950: Dead code detected: [!(pao_ID_____2 == 1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 21951: Dead code detected: __asm__ ("incb %%gs:%P0": "+m" (*(dev->pcpu_refcnt))); (CFACreationUtils.addEdgeToCFA, INFO)

line 21953: Dead code detected: [pao_ID_____2 == -1] (CFACreationUtils.addEdgeToCFA, INFO)

line 21953: Dead code detected: [!(pao_ID_____2 == -1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 21954: Dead code detected: __asm__ ("decb %%gs:%P0": "+m" (*(dev->pcpu_refcnt))); (CFACreationUtils.addEdgeToCFA, INFO)

line 21956: Dead code detected: __asm__ ("addb %1, %%gs:%P0": "+m" (*(dev->pcpu_refcnt)): "qi" (-1)); (CFACreationUtils.addEdgeToCFA, INFO)

line 21960: Dead code detected: [pao_ID_____2 == 1] (CFACreationUtils.addEdgeToCFA, INFO)

line 21960: Dead code detected: [!(pao_ID_____2 == 1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 21961: Dead code detected: __asm__ ("incw %%gs:%P0": "+m" (*(dev->pcpu_refcnt))); (CFACreationUtils.addEdgeToCFA, INFO)

line 21963: Dead code detected: [pao_ID_____2 == -1] (CFACreationUtils.addEdgeToCFA, INFO)

line 21963: Dead code detected: [!(pao_ID_____2 == -1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 21964: Dead code detected: __asm__ ("decw %%gs:%P0": "+m" (*(dev->pcpu_refcnt))); (CFACreationUtils.addEdgeToCFA, INFO)

line 21966: Dead code detected: __asm__ ("addw %1, %%gs:%P0": "+m" (*(dev->pcpu_refcnt)): "ri" (-1)); (CFACreationUtils.addEdgeToCFA, INFO)

line 21969: Dead code detected:  (CFACreationUtils.addEdgeToCFA, INFO)

line 21970: Dead code detected: [!(pao_ID_____2 == 1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 21971: Dead code detected: __asm__ ("incl %%gs:%P0": "+m" (*(dev->pcpu_refcnt))); (CFACreationUtils.addEdgeToCFA, INFO)

line 21973: Dead code detected: [pao_ID_____2 == -1] (CFACreationUtils.addEdgeToCFA, INFO)

line 21973: Dead code detected: [!(pao_ID_____2 == -1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 21974: Dead code detected: __asm__ ("decl %%gs:%P0": "+m" (*(dev->pcpu_refcnt))); (CFACreationUtils.addEdgeToCFA, INFO)

line 21976: Dead code detected: __asm__ ("addl %1, %%gs:%P0": "+m" (*(dev->pcpu_refcnt)): "ri" (-1)); (CFACreationUtils.addEdgeToCFA, INFO)

line 21980: Dead code detected: [pao_ID_____2 == 1] (CFACreationUtils.addEdgeToCFA, INFO)

line 21980: Dead code detected: [!(pao_ID_____2 == 1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 21981: Dead code detected: __asm__ ("incq %%gs:%P0": "+m" (*(dev->pcpu_refcnt))); (CFACreationUtils.addEdgeToCFA, INFO)

line 21983: Dead code detected: [pao_ID_____2 == -1] (CFACreationUtils.addEdgeToCFA, INFO)

line 21983: Dead code detected: [!(pao_ID_____2 == -1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 21984: Dead code detected: __asm__ ("decq %%gs:%P0": "+m" (*(dev->pcpu_refcnt))); (CFACreationUtils.addEdgeToCFA, INFO)

line 21986: Dead code detected: __asm__ ("addq %1, %%gs:%P0": "+m" (*(dev->pcpu_refcnt)): "re" (-1)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (4UL) {
  case 1UL: ;
  if (pao_ID_____2 == 1) {
    __asm__ ("incb %%gs:%P0": "+m" (*(dev->pcpu_refcnt)));
  } else
  if (pao_ID_____2 == -1) {
    __asm__ ("decb %%gs:%P0": "+m" (*(dev->pcpu_refcnt)));
  } else {
    __asm__ ("addb %1, %%gs:%P0": "+m" (*(dev->pcpu_refcnt)): "qi" (-1));
  }
  goto ldv_40986;
  case 2UL: ;
  if (pao_ID_____2 == 1) {
    __asm__ ("incw %%gs:%P0": "+m" (*(dev->pcpu_refcnt)));
  } else
  if (pao_ID_____2 == -1) {
    __asm__ ("decw %%gs:%P0": "+m" (*(dev->pcpu_refcnt)));
  } else {
    __asm__ ("addw %1, %%gs:%P0": "+m" (*(dev->pcpu_refcnt)): "ri" (-1));
  }
  goto ldv_40986;
  case 4UL: ;
  if (pao_ID_____2 == 1) {
    __asm__ ("incl %%gs:%P0": "+m" (*(dev->pcpu_refcnt)));
  } else
  if (pao_ID_____2 == -1) {
    __asm__ ("decl %%gs:%P0": "+m" (*(dev->pcpu_refcnt)));
  } else {
    __asm__ ("addl %1, %%gs:%P0": "+m" (*(dev->pcpu_refcnt)): "ri" (-1));
  }
  goto ldv_40986;
  case 8UL: ;
  if (pao_ID_____2 == 1) {
    __asm__ ("incq %%gs:%P0": "+m" (*(dev->pcpu_refcnt)));
  } else
  if (pao_ID_____2 == -1) {
    __asm__ ("decq %%gs:%P0": "+m" (*(dev->pcpu_refcnt)));
  } else {
    __asm__ ("addq %1, %%gs:%P0": "+m" (*(dev->pcpu_refcnt)): "re" (-1));
  }
  goto ldv_40986;
  default:
  __bad_percpu_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (4UL) {
  case 1UL:
  pao_ID__ = -1;
  switch (4UL) {
  case 1UL: ;
  if (pao_ID__ == 1) {
    __asm__ ("incb %%gs:%P0": "+m" (*(dev->pcpu_refcnt)));
  } else
  if (pao_ID__ == -1) {
    __asm__ ("decb %%gs:%P0": "+m" (*(dev->pcpu_refcnt)));
  } else {
    __asm__ ("addb %1, %%gs:%P0": "+m" (*(dev->pcpu_refcnt)): "qi" (-1));
  }
  goto ldv_40955;
  case 2UL: ;
  if (pao_ID__ == 1) {
    __asm__ ("incw %%gs:%P0": "+m" (*(dev->pcpu_refcnt)));
  } else
  if (pao_ID__ == -1) {
    __asm__ ("decw %%gs:%P0": "+m" (*(dev->pcpu_refcnt)));
  } else {
    __asm__ ("addw %1, %%gs:%P0": "+m" (*(dev->pcpu_refcnt)): "ri" (-1));
  }
  goto ldv_40955;
  case 4UL: ;
  if (pao_ID__ == 1) {
    __asm__ ("incl %%gs:%P0": "+m" (*(dev->pcpu_refcnt)));
  } else
  if (pao_ID__ == -1) {
    __asm__ ("decl %%gs:%P0": "+m" (*(dev->pcpu_refcnt)));
  } else {
    __asm__ ("addl %1, %%gs:%P0": "+m" (*(dev->pcpu_refcnt)): "ri" (-1));
  }
  goto ldv_40955;
  case 8UL: ;
  if (pao_ID__ == 1) {
    __asm__ ("incq %%gs:%P0": "+m" (*(dev->pcpu_refcnt)));
  } else
  if (pao_ID__ == -1) {
    __asm__ ("decq %%gs:%P0": "+m" (*(dev->pcpu_refcnt)));
  } else {
    __asm__ ("addq %1, %%gs:%P0": "+m" (*(dev->pcpu_refcnt)): "re" (-1));
  }
  goto ldv_40955;
  default:
  __bad_percpu_size();
  }
  ldv_40955: ;
  goto ldv_40960;
  case 2UL:
  pao_ID_____0 = -1;
  switch (4UL) {
  case 1UL: ;
  if (pao_ID_____0 == 1) {
    __asm__ ("incb %%gs:%P0": "+m" (*(dev->pcpu_refcnt)));
  } else
  if (pao_ID_____0 == -1) {
    __asm__ ("decb %%gs:%P0": "+m" (*(dev->pcpu_refcnt)));
  } else {
    __asm__ ("addb %1, %%gs:%P0": "+m" (*(dev->pcpu_refcnt)): "qi" (-1));
  }
  goto ldv_40966;
  case 2UL: ;
  if (pao_ID_____0 == 1) {
    __asm__ ("incw %%gs:%P0": "+m" (*(dev->pcpu_refcnt)));
  } else
  if (pao_ID_____0 == -1) {
    __asm__ ("decw %%gs:%P0": "+m" (*(dev->pcpu_refcnt)));
  } else {
    __asm__ ("addw %1, %%gs:%P0": "+m" (*(dev->pcpu_refcnt)): "ri" (-1));
  }
  goto ldv_40966;
  case 4UL: ;
  if (pao_ID_____0 == 1) {
    __asm__ ("incl %%gs:%P0": "+m" (*(dev->pcpu_refcnt)));
  } else
  if (pao_ID_____0 == -1) {
    __asm__ ("decl %%gs:%P0": "+m" (*(dev->pcpu_refcnt)));
  } else {
    __asm__ ("addl %1, %%gs:%P0": "+m" (*(dev->pcpu_refcnt)): "ri" (-1));
  }
  goto ldv_40966;
  case 8UL: ;
  if (pao_ID_____0 == 1) {
    __asm__ ("incq %%gs:%P0": "+m" (*(dev->pcpu_refcnt)));
  } else
  if (pao_ID_____0 == -1) {
    __asm__ ("decq %%gs:%P0": "+m" (*(dev->pcpu_refcnt)));
  } else {
    __asm__ ("addq %1, %%gs:%P0": "+m" (*(dev->pcpu_refcnt)): "re" (-1));
  }
  goto ldv_40966;
  default:
  __bad_percpu_size();
  }
  ldv_40966: ;
  goto ldv_40960;
  case 4UL:
  pao_ID_____1 = -1;
  switch (4UL) {
  case 1UL: ;
  if (pao_ID_____1 == 1) {
    __asm__ ("incb %%gs:%P0": "+m" (*(dev->pcpu_refcnt)));
  } else
  if (pao_ID_____1 == -1) {
    __asm__ ("decb %%gs:%P0": "+m" (*(dev->pcpu_refcnt)));
  } else {
    __asm__ ("addb %1, %%gs:%P0": "+m" (*(dev->pcpu_refcnt)): "qi" (-1));
  }
  goto ldv_40976;
  case 2UL: ;
  if (pao_ID_____1 == 1) {
    __asm__ ("incw %%gs:%P0": "+m" (*(dev->pcpu_refcnt)));
  } else
  if (pao_ID_____1 == -1) {
    __asm__ ("decw %%gs:%P0": "+m" (*(dev->pcpu_refcnt)));
  } else {
    __asm__ ("addw %1, %%gs:%P0": "+m" (*(dev->pcpu_refcnt)): "ri" (-1));
  }
  goto ldv_40976;
  case 4UL: ;
  if (pao_ID_____1 == 1) {
    __asm__ ("incl %%gs:%P0": "+m" (*(dev->pcpu_refcnt)));
  } else
  if (pao_ID_____1 == -1) {
    __asm__ ("decl %%gs:%P0": "+m" (*(dev->pcpu_refcnt)));
  } else {
    __asm__ ("addl %1, %%gs:%P0": "+m" (*(dev->pcpu_refcnt)): "ri" (-1));
  }
  goto ldv_40976;
  case 8UL: ;
  if (pao_ID_____1 == 1) {
    __asm__ ("incq %%gs:%P0": "+m" (*(dev->pcpu_refcnt)));
  } else
  if (pao_ID_____1 == -1) {
    __asm__ ("decq %%gs:%P0": "+m" (*(dev->pcpu_refcnt)));
  } else {
    __asm__ ("addq %1, %%gs:%P0": "+m" (*(dev->pcpu_refcnt)): "re" (-1));
  }
  goto ldv_40976;
  default:
  __bad_percpu_size();
  }
  ldv_40976: ;
  goto ldv_40960;
  case 8UL:
  pao_ID_____2 = -1;
  switch (4UL) {
  case 1UL: ;
  if (pao_ID_____2 == 1) {
    __asm__ ("incb %%gs:%P0": "+m" (*(dev->pcpu_refcnt)));
  } else
  if (pao_ID_____2 == -1) {
    __asm__ ("decb %%gs:%P0": "+m" (*(dev->pcpu_refcnt)));
  } else {
    __asm__ ("addb %1, %%gs:%P0": "+m" (*(dev->pcpu_refcnt)): "qi" (-1));
  }
  goto ldv_40986;
  case 2UL: ;
  if (pao_ID_____2 == 1) {
    __asm__ ("incw %%gs:%P0": "+m" (*(dev->pcpu_refcnt)));
  } else
  if (pao_ID_____2 == -1) {
    __asm__ ("decw %%gs:%P0": "+m" (*(dev->pcpu_refcnt)));
  } else {
    __asm__ ("addw %1, %%gs:%P0": "+m" (*(dev->pcpu_refcnt)): "ri" (-1));
  }
  goto ldv_40986;
  case 4UL: ;
  if (pao_ID_____2 == 1) {
    __asm__ ("incl %%gs:%P0": "+m" (*(dev->pcpu_refcnt)));
  } else
  if (pao_ID_____2 == -1) {
    __asm__ ("decl %%gs:%P0": "+m" (*(dev->pcpu_refcnt)));
  } else {
    __asm__ ("addl %1, %%gs:%P0": "+m" (*(dev->pcpu_refcnt)): "ri" (-1));
  }
  goto ldv_40986;
  case 8UL: ;
  if (pao_ID_____2 == 1) {
    __asm__ ("incq %%gs:%P0": "+m" (*(dev->pcpu_refcnt)));
  } else
  if (pao_ID_____2 == -1) {
    __asm__ ("decq %%gs:%P0": "+m" (*(dev->pcpu_refcnt)));
  } else {
    __asm__ ("addq %1, %%gs:%P0": "+m" (*(dev->pcpu_refcnt)): "re" (-1));
  }
  goto ldv_40986;
  default:
  __bad_percpu_size();
  }
  ldv_40986: ;
  goto ldv_40960;
  default:
  __bad_size_call_parameter();
  goto ldv_40960;
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 22014: Dead code detected: pao_ID__ = 1; (CFACreationUtils.addEdgeToCFA, INFO)

line 22017: Dead code detected: [pao_ID__ == 1] (CFACreationUtils.addEdgeToCFA, INFO)

line 22017: Dead code detected: [!(pao_ID__ == 1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 22018: Dead code detected: __asm__ ("incb %%gs:%P0": "+m" (*(dev->pcpu_refcnt))); (CFACreationUtils.addEdgeToCFA, INFO)

line 22020: Dead code detected: [pao_ID__ == -1] (CFACreationUtils.addEdgeToCFA, INFO)

line 22020: Dead code detected: [!(pao_ID__ == -1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 22021: Dead code detected: __asm__ ("decb %%gs:%P0": "+m" (*(dev->pcpu_refcnt))); (CFACreationUtils.addEdgeToCFA, INFO)

line 22023: Dead code detected: __asm__ ("addb %1, %%gs:%P0": "+m" (*(dev->pcpu_refcnt)): "qi" (1)); (CFACreationUtils.addEdgeToCFA, INFO)

line 22027: Dead code detected: [pao_ID__ == 1] (CFACreationUtils.addEdgeToCFA, INFO)

line 22027: Dead code detected: [!(pao_ID__ == 1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 22028: Dead code detected: __asm__ ("incw %%gs:%P0": "+m" (*(dev->pcpu_refcnt))); (CFACreationUtils.addEdgeToCFA, INFO)

line 22030: Dead code detected: [pao_ID__ == -1] (CFACreationUtils.addEdgeToCFA, INFO)

line 22030: Dead code detected: [!(pao_ID__ == -1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 22031: Dead code detected: __asm__ ("decw %%gs:%P0": "+m" (*(dev->pcpu_refcnt))); (CFACreationUtils.addEdgeToCFA, INFO)

line 22033: Dead code detected: __asm__ ("addw %1, %%gs:%P0": "+m" (*(dev->pcpu_refcnt)): "ri" (1)); (CFACreationUtils.addEdgeToCFA, INFO)

line 22036: Dead code detected:  (CFACreationUtils.addEdgeToCFA, INFO)

line 22037: Dead code detected: [!(pao_ID__ == 1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 22038: Dead code detected: __asm__ ("incl %%gs:%P0": "+m" (*(dev->pcpu_refcnt))); (CFACreationUtils.addEdgeToCFA, INFO)

line 22040: Dead code detected: [pao_ID__ == -1] (CFACreationUtils.addEdgeToCFA, INFO)

line 22040: Dead code detected: [!(pao_ID__ == -1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 22041: Dead code detected: __asm__ ("decl %%gs:%P0": "+m" (*(dev->pcpu_refcnt))); (CFACreationUtils.addEdgeToCFA, INFO)

line 22043: Dead code detected: __asm__ ("addl %1, %%gs:%P0": "+m" (*(dev->pcpu_refcnt)): "ri" (1)); (CFACreationUtils.addEdgeToCFA, INFO)

line 22047: Dead code detected: [pao_ID__ == 1] (CFACreationUtils.addEdgeToCFA, INFO)

line 22047: Dead code detected: [!(pao_ID__ == 1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 22048: Dead code detected: __asm__ ("incq %%gs:%P0": "+m" (*(dev->pcpu_refcnt))); (CFACreationUtils.addEdgeToCFA, INFO)

line 22050: Dead code detected: [pao_ID__ == -1] (CFACreationUtils.addEdgeToCFA, INFO)

line 22050: Dead code detected: [!(pao_ID__ == -1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 22051: Dead code detected: __asm__ ("decq %%gs:%P0": "+m" (*(dev->pcpu_refcnt))); (CFACreationUtils.addEdgeToCFA, INFO)

line 22053: Dead code detected: __asm__ ("addq %1, %%gs:%P0": "+m" (*(dev->pcpu_refcnt)): "re" (1)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (4UL) {
  case 1UL: ;
  if (pao_ID__ == 1) {
    __asm__ ("incb %%gs:%P0": "+m" (*(dev->pcpu_refcnt)));
  } else
  if (pao_ID__ == -1) {
    __asm__ ("decb %%gs:%P0": "+m" (*(dev->pcpu_refcnt)));
  } else {
    __asm__ ("addb %1, %%gs:%P0": "+m" (*(dev->pcpu_refcnt)): "qi" (1));
  }
  goto ldv_41001;
  case 2UL: ;
  if (pao_ID__ == 1) {
    __asm__ ("incw %%gs:%P0": "+m" (*(dev->pcpu_refcnt)));
  } else
  if (pao_ID__ == -1) {
    __asm__ ("decw %%gs:%P0": "+m" (*(dev->pcpu_refcnt)));
  } else {
    __asm__ ("addw %1, %%gs:%P0": "+m" (*(dev->pcpu_refcnt)): "ri" (1));
  }
  goto ldv_41001;
  case 4UL: ;
  if (pao_ID__ == 1) {
    __asm__ ("incl %%gs:%P0": "+m" (*(dev->pcpu_refcnt)));
  } else
  if (pao_ID__ == -1) {
    __asm__ ("decl %%gs:%P0": "+m" (*(dev->pcpu_refcnt)));
  } else {
    __asm__ ("addl %1, %%gs:%P0": "+m" (*(dev->pcpu_refcnt)): "ri" (1));
  }
  goto ldv_41001;
  case 8UL: ;
  if (pao_ID__ == 1) {
    __asm__ ("incq %%gs:%P0": "+m" (*(dev->pcpu_refcnt)));
  } else
  if (pao_ID__ == -1) {
    __asm__ ("decq %%gs:%P0": "+m" (*(dev->pcpu_refcnt)));
  } else {
    __asm__ ("addq %1, %%gs:%P0": "+m" (*(dev->pcpu_refcnt)): "re" (1));
  }
  goto ldv_41001;
  default:
  __bad_percpu_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 22062: Dead code detected: pao_ID_____0 = 1; (CFACreationUtils.addEdgeToCFA, INFO)

line 22065: Dead code detected: [pao_ID_____0 == 1] (CFACreationUtils.addEdgeToCFA, INFO)

line 22065: Dead code detected: [!(pao_ID_____0 == 1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 22066: Dead code detected: __asm__ ("incb %%gs:%P0": "+m" (*(dev->pcpu_refcnt))); (CFACreationUtils.addEdgeToCFA, INFO)

line 22068: Dead code detected: [pao_ID_____0 == -1] (CFACreationUtils.addEdgeToCFA, INFO)

line 22068: Dead code detected: [!(pao_ID_____0 == -1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 22069: Dead code detected: __asm__ ("decb %%gs:%P0": "+m" (*(dev->pcpu_refcnt))); (CFACreationUtils.addEdgeToCFA, INFO)

line 22071: Dead code detected: __asm__ ("addb %1, %%gs:%P0": "+m" (*(dev->pcpu_refcnt)): "qi" (1)); (CFACreationUtils.addEdgeToCFA, INFO)

line 22075: Dead code detected: [pao_ID_____0 == 1] (CFACreationUtils.addEdgeToCFA, INFO)

line 22075: Dead code detected: [!(pao_ID_____0 == 1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 22076: Dead code detected: __asm__ ("incw %%gs:%P0": "+m" (*(dev->pcpu_refcnt))); (CFACreationUtils.addEdgeToCFA, INFO)

line 22078: Dead code detected: [pao_ID_____0 == -1] (CFACreationUtils.addEdgeToCFA, INFO)

line 22078: Dead code detected: [!(pao_ID_____0 == -1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 22079: Dead code detected: __asm__ ("decw %%gs:%P0": "+m" (*(dev->pcpu_refcnt))); (CFACreationUtils.addEdgeToCFA, INFO)

line 22081: Dead code detected: __asm__ ("addw %1, %%gs:%P0": "+m" (*(dev->pcpu_refcnt)): "ri" (1)); (CFACreationUtils.addEdgeToCFA, INFO)

line 22084: Dead code detected:  (CFACreationUtils.addEdgeToCFA, INFO)

line 22085: Dead code detected: [!(pao_ID_____0 == 1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 22086: Dead code detected: __asm__ ("incl %%gs:%P0": "+m" (*(dev->pcpu_refcnt))); (CFACreationUtils.addEdgeToCFA, INFO)

line 22088: Dead code detected: [pao_ID_____0 == -1] (CFACreationUtils.addEdgeToCFA, INFO)

line 22088: Dead code detected: [!(pao_ID_____0 == -1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 22089: Dead code detected: __asm__ ("decl %%gs:%P0": "+m" (*(dev->pcpu_refcnt))); (CFACreationUtils.addEdgeToCFA, INFO)

line 22091: Dead code detected: __asm__ ("addl %1, %%gs:%P0": "+m" (*(dev->pcpu_refcnt)): "ri" (1)); (CFACreationUtils.addEdgeToCFA, INFO)

line 22095: Dead code detected: [pao_ID_____0 == 1] (CFACreationUtils.addEdgeToCFA, INFO)

line 22095: Dead code detected: [!(pao_ID_____0 == 1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 22096: Dead code detected: __asm__ ("incq %%gs:%P0": "+m" (*(dev->pcpu_refcnt))); (CFACreationUtils.addEdgeToCFA, INFO)

line 22098: Dead code detected: [pao_ID_____0 == -1] (CFACreationUtils.addEdgeToCFA, INFO)

line 22098: Dead code detected: [!(pao_ID_____0 == -1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 22099: Dead code detected: __asm__ ("decq %%gs:%P0": "+m" (*(dev->pcpu_refcnt))); (CFACreationUtils.addEdgeToCFA, INFO)

line 22101: Dead code detected: __asm__ ("addq %1, %%gs:%P0": "+m" (*(dev->pcpu_refcnt)): "re" (1)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (4UL) {
  case 1UL: ;
  if (pao_ID_____0 == 1) {
    __asm__ ("incb %%gs:%P0": "+m" (*(dev->pcpu_refcnt)));
  } else
  if (pao_ID_____0 == -1) {
    __asm__ ("decb %%gs:%P0": "+m" (*(dev->pcpu_refcnt)));
  } else {
    __asm__ ("addb %1, %%gs:%P0": "+m" (*(dev->pcpu_refcnt)): "qi" (1));
  }
  goto ldv_41012;
  case 2UL: ;
  if (pao_ID_____0 == 1) {
    __asm__ ("incw %%gs:%P0": "+m" (*(dev->pcpu_refcnt)));
  } else
  if (pao_ID_____0 == -1) {
    __asm__ ("decw %%gs:%P0": "+m" (*(dev->pcpu_refcnt)));
  } else {
    __asm__ ("addw %1, %%gs:%P0": "+m" (*(dev->pcpu_refcnt)): "ri" (1));
  }
  goto ldv_41012;
  case 4UL: ;
  if (pao_ID_____0 == 1) {
    __asm__ ("incl %%gs:%P0": "+m" (*(dev->pcpu_refcnt)));
  } else
  if (pao_ID_____0 == -1) {
    __asm__ ("decl %%gs:%P0": "+m" (*(dev->pcpu_refcnt)));
  } else {
    __asm__ ("addl %1, %%gs:%P0": "+m" (*(dev->pcpu_refcnt)): "ri" (1));
  }
  goto ldv_41012;
  case 8UL: ;
  if (pao_ID_____0 == 1) {
    __asm__ ("incq %%gs:%P0": "+m" (*(dev->pcpu_refcnt)));
  } else
  if (pao_ID_____0 == -1) {
    __asm__ ("decq %%gs:%P0": "+m" (*(dev->pcpu_refcnt)));
  } else {
    __asm__ ("addq %1, %%gs:%P0": "+m" (*(dev->pcpu_refcnt)): "re" (1));
  }
  goto ldv_41012;
  default:
  __bad_percpu_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 22113: Dead code detected: [pao_ID_____1 == 1] (CFACreationUtils.addEdgeToCFA, INFO)

line 22113: Dead code detected: [!(pao_ID_____1 == 1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 22114: Dead code detected: __asm__ ("incb %%gs:%P0": "+m" (*(dev->pcpu_refcnt))); (CFACreationUtils.addEdgeToCFA, INFO)

line 22116: Dead code detected: [pao_ID_____1 == -1] (CFACreationUtils.addEdgeToCFA, INFO)

line 22116: Dead code detected: [!(pao_ID_____1 == -1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 22117: Dead code detected: __asm__ ("decb %%gs:%P0": "+m" (*(dev->pcpu_refcnt))); (CFACreationUtils.addEdgeToCFA, INFO)

line 22119: Dead code detected: __asm__ ("addb %1, %%gs:%P0": "+m" (*(dev->pcpu_refcnt)): "qi" (1)); (CFACreationUtils.addEdgeToCFA, INFO)

line 22123: Dead code detected: [pao_ID_____1 == 1] (CFACreationUtils.addEdgeToCFA, INFO)

line 22123: Dead code detected: [!(pao_ID_____1 == 1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 22124: Dead code detected: __asm__ ("incw %%gs:%P0": "+m" (*(dev->pcpu_refcnt))); (CFACreationUtils.addEdgeToCFA, INFO)

line 22126: Dead code detected: [pao_ID_____1 == -1] (CFACreationUtils.addEdgeToCFA, INFO)

line 22126: Dead code detected: [!(pao_ID_____1 == -1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 22127: Dead code detected: __asm__ ("decw %%gs:%P0": "+m" (*(dev->pcpu_refcnt))); (CFACreationUtils.addEdgeToCFA, INFO)

line 22129: Dead code detected: __asm__ ("addw %1, %%gs:%P0": "+m" (*(dev->pcpu_refcnt)): "ri" (1)); (CFACreationUtils.addEdgeToCFA, INFO)

line 22143: Dead code detected: [pao_ID_____1 == 1] (CFACreationUtils.addEdgeToCFA, INFO)

line 22143: Dead code detected: [!(pao_ID_____1 == 1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 22144: Dead code detected: __asm__ ("incq %%gs:%P0": "+m" (*(dev->pcpu_refcnt))); (CFACreationUtils.addEdgeToCFA, INFO)

line 22146: Dead code detected: [pao_ID_____1 == -1] (CFACreationUtils.addEdgeToCFA, INFO)

line 22146: Dead code detected: [!(pao_ID_____1 == -1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 22147: Dead code detected: __asm__ ("decq %%gs:%P0": "+m" (*(dev->pcpu_refcnt))); (CFACreationUtils.addEdgeToCFA, INFO)

line 22149: Dead code detected: __asm__ ("addq %1, %%gs:%P0": "+m" (*(dev->pcpu_refcnt)): "re" (1)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (4UL) {
  case 1UL: ;
  if (pao_ID_____1 == 1) {
    __asm__ ("incb %%gs:%P0": "+m" (*(dev->pcpu_refcnt)));
  } else
  if (pao_ID_____1 == -1) {
    __asm__ ("decb %%gs:%P0": "+m" (*(dev->pcpu_refcnt)));
  } else {
    __asm__ ("addb %1, %%gs:%P0": "+m" (*(dev->pcpu_refcnt)): "qi" (1));
  }
  goto ldv_41022;
  case 2UL: ;
  if (pao_ID_____1 == 1) {
    __asm__ ("incw %%gs:%P0": "+m" (*(dev->pcpu_refcnt)));
  } else
  if (pao_ID_____1 == -1) {
    __asm__ ("decw %%gs:%P0": "+m" (*(dev->pcpu_refcnt)));
  } else {
    __asm__ ("addw %1, %%gs:%P0": "+m" (*(dev->pcpu_refcnt)): "ri" (1));
  }
  goto ldv_41022;
  case 4UL: ;
  if (pao_ID_____1 == 1) {
    __asm__ ("incl %%gs:%P0": "+m" (*(dev->pcpu_refcnt)));
  } else
  if (pao_ID_____1 == -1) {
    __asm__ ("decl %%gs:%P0": "+m" (*(dev->pcpu_refcnt)));
  } else {
    __asm__ ("addl %1, %%gs:%P0": "+m" (*(dev->pcpu_refcnt)): "ri" (1));
  }
  goto ldv_41022;
  case 8UL: ;
  if (pao_ID_____1 == 1) {
    __asm__ ("incq %%gs:%P0": "+m" (*(dev->pcpu_refcnt)));
  } else
  if (pao_ID_____1 == -1) {
    __asm__ ("decq %%gs:%P0": "+m" (*(dev->pcpu_refcnt)));
  } else {
    __asm__ ("addq %1, %%gs:%P0": "+m" (*(dev->pcpu_refcnt)): "re" (1));
  }
  goto ldv_41022;
  default:
  __bad_percpu_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 22158: Dead code detected: pao_ID_____2 = 1; (CFACreationUtils.addEdgeToCFA, INFO)

line 22161: Dead code detected: [pao_ID_____2 == 1] (CFACreationUtils.addEdgeToCFA, INFO)

line 22161: Dead code detected: [!(pao_ID_____2 == 1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 22162: Dead code detected: __asm__ ("incb %%gs:%P0": "+m" (*(dev->pcpu_refcnt))); (CFACreationUtils.addEdgeToCFA, INFO)

line 22164: Dead code detected: [pao_ID_____2 == -1] (CFACreationUtils.addEdgeToCFA, INFO)

line 22164: Dead code detected: [!(pao_ID_____2 == -1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 22165: Dead code detected: __asm__ ("decb %%gs:%P0": "+m" (*(dev->pcpu_refcnt))); (CFACreationUtils.addEdgeToCFA, INFO)

line 22167: Dead code detected: __asm__ ("addb %1, %%gs:%P0": "+m" (*(dev->pcpu_refcnt)): "qi" (1)); (CFACreationUtils.addEdgeToCFA, INFO)

line 22171: Dead code detected: [pao_ID_____2 == 1] (CFACreationUtils.addEdgeToCFA, INFO)

line 22171: Dead code detected: [!(pao_ID_____2 == 1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 22172: Dead code detected: __asm__ ("incw %%gs:%P0": "+m" (*(dev->pcpu_refcnt))); (CFACreationUtils.addEdgeToCFA, INFO)

line 22174: Dead code detected: [pao_ID_____2 == -1] (CFACreationUtils.addEdgeToCFA, INFO)

line 22174: Dead code detected: [!(pao_ID_____2 == -1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 22175: Dead code detected: __asm__ ("decw %%gs:%P0": "+m" (*(dev->pcpu_refcnt))); (CFACreationUtils.addEdgeToCFA, INFO)

line 22177: Dead code detected: __asm__ ("addw %1, %%gs:%P0": "+m" (*(dev->pcpu_refcnt)): "ri" (1)); (CFACreationUtils.addEdgeToCFA, INFO)

line 22180: Dead code detected:  (CFACreationUtils.addEdgeToCFA, INFO)

line 22181: Dead code detected: [!(pao_ID_____2 == 1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 22182: Dead code detected: __asm__ ("incl %%gs:%P0": "+m" (*(dev->pcpu_refcnt))); (CFACreationUtils.addEdgeToCFA, INFO)

line 22184: Dead code detected: [pao_ID_____2 == -1] (CFACreationUtils.addEdgeToCFA, INFO)

line 22184: Dead code detected: [!(pao_ID_____2 == -1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 22185: Dead code detected: __asm__ ("decl %%gs:%P0": "+m" (*(dev->pcpu_refcnt))); (CFACreationUtils.addEdgeToCFA, INFO)

line 22187: Dead code detected: __asm__ ("addl %1, %%gs:%P0": "+m" (*(dev->pcpu_refcnt)): "ri" (1)); (CFACreationUtils.addEdgeToCFA, INFO)

line 22191: Dead code detected: [pao_ID_____2 == 1] (CFACreationUtils.addEdgeToCFA, INFO)

line 22191: Dead code detected: [!(pao_ID_____2 == 1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 22192: Dead code detected: __asm__ ("incq %%gs:%P0": "+m" (*(dev->pcpu_refcnt))); (CFACreationUtils.addEdgeToCFA, INFO)

line 22194: Dead code detected: [pao_ID_____2 == -1] (CFACreationUtils.addEdgeToCFA, INFO)

line 22194: Dead code detected: [!(pao_ID_____2 == -1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 22195: Dead code detected: __asm__ ("decq %%gs:%P0": "+m" (*(dev->pcpu_refcnt))); (CFACreationUtils.addEdgeToCFA, INFO)

line 22197: Dead code detected: __asm__ ("addq %1, %%gs:%P0": "+m" (*(dev->pcpu_refcnt)): "re" (1)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (4UL) {
  case 1UL: ;
  if (pao_ID_____2 == 1) {
    __asm__ ("incb %%gs:%P0": "+m" (*(dev->pcpu_refcnt)));
  } else
  if (pao_ID_____2 == -1) {
    __asm__ ("decb %%gs:%P0": "+m" (*(dev->pcpu_refcnt)));
  } else {
    __asm__ ("addb %1, %%gs:%P0": "+m" (*(dev->pcpu_refcnt)): "qi" (1));
  }
  goto ldv_41032;
  case 2UL: ;
  if (pao_ID_____2 == 1) {
    __asm__ ("incw %%gs:%P0": "+m" (*(dev->pcpu_refcnt)));
  } else
  if (pao_ID_____2 == -1) {
    __asm__ ("decw %%gs:%P0": "+m" (*(dev->pcpu_refcnt)));
  } else {
    __asm__ ("addw %1, %%gs:%P0": "+m" (*(dev->pcpu_refcnt)): "ri" (1));
  }
  goto ldv_41032;
  case 4UL: ;
  if (pao_ID_____2 == 1) {
    __asm__ ("incl %%gs:%P0": "+m" (*(dev->pcpu_refcnt)));
  } else
  if (pao_ID_____2 == -1) {
    __asm__ ("decl %%gs:%P0": "+m" (*(dev->pcpu_refcnt)));
  } else {
    __asm__ ("addl %1, %%gs:%P0": "+m" (*(dev->pcpu_refcnt)): "ri" (1));
  }
  goto ldv_41032;
  case 8UL: ;
  if (pao_ID_____2 == 1) {
    __asm__ ("incq %%gs:%P0": "+m" (*(dev->pcpu_refcnt)));
  } else
  if (pao_ID_____2 == -1) {
    __asm__ ("decq %%gs:%P0": "+m" (*(dev->pcpu_refcnt)));
  } else {
    __asm__ ("addq %1, %%gs:%P0": "+m" (*(dev->pcpu_refcnt)): "re" (1));
  }
  goto ldv_41032;
  default:
  __bad_percpu_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (4UL) {
  case 1UL:
  pao_ID__ = 1;
  switch (4UL) {
  case 1UL: ;
  if (pao_ID__ == 1) {
    __asm__ ("incb %%gs:%P0": "+m" (*(dev->pcpu_refcnt)));
  } else
  if (pao_ID__ == -1) {
    __asm__ ("decb %%gs:%P0": "+m" (*(dev->pcpu_refcnt)));
  } else {
    __asm__ ("addb %1, %%gs:%P0": "+m" (*(dev->pcpu_refcnt)): "qi" (1));
  }
  goto ldv_41001;
  case 2UL: ;
  if (pao_ID__ == 1) {
    __asm__ ("incw %%gs:%P0": "+m" (*(dev->pcpu_refcnt)));
  } else
  if (pao_ID__ == -1) {
    __asm__ ("decw %%gs:%P0": "+m" (*(dev->pcpu_refcnt)));
  } else {
    __asm__ ("addw %1, %%gs:%P0": "+m" (*(dev->pcpu_refcnt)): "ri" (1));
  }
  goto ldv_41001;
  case 4UL: ;
  if (pao_ID__ == 1) {
    __asm__ ("incl %%gs:%P0": "+m" (*(dev->pcpu_refcnt)));
  } else
  if (pao_ID__ == -1) {
    __asm__ ("decl %%gs:%P0": "+m" (*(dev->pcpu_refcnt)));
  } else {
    __asm__ ("addl %1, %%gs:%P0": "+m" (*(dev->pcpu_refcnt)): "ri" (1));
  }
  goto ldv_41001;
  case 8UL: ;
  if (pao_ID__ == 1) {
    __asm__ ("incq %%gs:%P0": "+m" (*(dev->pcpu_refcnt)));
  } else
  if (pao_ID__ == -1) {
    __asm__ ("decq %%gs:%P0": "+m" (*(dev->pcpu_refcnt)));
  } else {
    __asm__ ("addq %1, %%gs:%P0": "+m" (*(dev->pcpu_refcnt)): "re" (1));
  }
  goto ldv_41001;
  default:
  __bad_percpu_size();
  }
  ldv_41001: ;
  goto ldv_41006;
  case 2UL:
  pao_ID_____0 = 1;
  switch (4UL) {
  case 1UL: ;
  if (pao_ID_____0 == 1) {
    __asm__ ("incb %%gs:%P0": "+m" (*(dev->pcpu_refcnt)));
  } else
  if (pao_ID_____0 == -1) {
    __asm__ ("decb %%gs:%P0": "+m" (*(dev->pcpu_refcnt)));
  } else {
    __asm__ ("addb %1, %%gs:%P0": "+m" (*(dev->pcpu_refcnt)): "qi" (1));
  }
  goto ldv_41012;
  case 2UL: ;
  if (pao_ID_____0 == 1) {
    __asm__ ("incw %%gs:%P0": "+m" (*(dev->pcpu_refcnt)));
  } else
  if (pao_ID_____0 == -1) {
    __asm__ ("decw %%gs:%P0": "+m" (*(dev->pcpu_refcnt)));
  } else {
    __asm__ ("addw %1, %%gs:%P0": "+m" (*(dev->pcpu_refcnt)): "ri" (1));
  }
  goto ldv_41012;
  case 4UL: ;
  if (pao_ID_____0 == 1) {
    __asm__ ("incl %%gs:%P0": "+m" (*(dev->pcpu_refcnt)));
  } else
  if (pao_ID_____0 == -1) {
    __asm__ ("decl %%gs:%P0": "+m" (*(dev->pcpu_refcnt)));
  } else {
    __asm__ ("addl %1, %%gs:%P0": "+m" (*(dev->pcpu_refcnt)): "ri" (1));
  }
  goto ldv_41012;
  case 8UL: ;
  if (pao_ID_____0 == 1) {
    __asm__ ("incq %%gs:%P0": "+m" (*(dev->pcpu_refcnt)));
  } else
  if (pao_ID_____0 == -1) {
    __asm__ ("decq %%gs:%P0": "+m" (*(dev->pcpu_refcnt)));
  } else {
    __asm__ ("addq %1, %%gs:%P0": "+m" (*(dev->pcpu_refcnt)): "re" (1));
  }
  goto ldv_41012;
  default:
  __bad_percpu_size();
  }
  ldv_41012: ;
  goto ldv_41006;
  case 4UL:
  pao_ID_____1 = 1;
  switch (4UL) {
  case 1UL: ;
  if (pao_ID_____1 == 1) {
    __asm__ ("incb %%gs:%P0": "+m" (*(dev->pcpu_refcnt)));
  } else
  if (pao_ID_____1 == -1) {
    __asm__ ("decb %%gs:%P0": "+m" (*(dev->pcpu_refcnt)));
  } else {
    __asm__ ("addb %1, %%gs:%P0": "+m" (*(dev->pcpu_refcnt)): "qi" (1));
  }
  goto ldv_41022;
  case 2UL: ;
  if (pao_ID_____1 == 1) {
    __asm__ ("incw %%gs:%P0": "+m" (*(dev->pcpu_refcnt)));
  } else
  if (pao_ID_____1 == -1) {
    __asm__ ("decw %%gs:%P0": "+m" (*(dev->pcpu_refcnt)));
  } else {
    __asm__ ("addw %1, %%gs:%P0": "+m" (*(dev->pcpu_refcnt)): "ri" (1));
  }
  goto ldv_41022;
  case 4UL: ;
  if (pao_ID_____1 == 1) {
    __asm__ ("incl %%gs:%P0": "+m" (*(dev->pcpu_refcnt)));
  } else
  if (pao_ID_____1 == -1) {
    __asm__ ("decl %%gs:%P0": "+m" (*(dev->pcpu_refcnt)));
  } else {
    __asm__ ("addl %1, %%gs:%P0": "+m" (*(dev->pcpu_refcnt)): "ri" (1));
  }
  goto ldv_41022;
  case 8UL: ;
  if (pao_ID_____1 == 1) {
    __asm__ ("incq %%gs:%P0": "+m" (*(dev->pcpu_refcnt)));
  } else
  if (pao_ID_____1 == -1) {
    __asm__ ("decq %%gs:%P0": "+m" (*(dev->pcpu_refcnt)));
  } else {
    __asm__ ("addq %1, %%gs:%P0": "+m" (*(dev->pcpu_refcnt)): "re" (1));
  }
  goto ldv_41022;
  default:
  __bad_percpu_size();
  }
  ldv_41022: ;
  goto ldv_41006;
  case 8UL:
  pao_ID_____2 = 1;
  switch (4UL) {
  case 1UL: ;
  if (pao_ID_____2 == 1) {
    __asm__ ("incb %%gs:%P0": "+m" (*(dev->pcpu_refcnt)));
  } else
  if (pao_ID_____2 == -1) {
    __asm__ ("decb %%gs:%P0": "+m" (*(dev->pcpu_refcnt)));
  } else {
    __asm__ ("addb %1, %%gs:%P0": "+m" (*(dev->pcpu_refcnt)): "qi" (1));
  }
  goto ldv_41032;
  case 2UL: ;
  if (pao_ID_____2 == 1) {
    __asm__ ("incw %%gs:%P0": "+m" (*(dev->pcpu_refcnt)));
  } else
  if (pao_ID_____2 == -1) {
    __asm__ ("decw %%gs:%P0": "+m" (*(dev->pcpu_refcnt)));
  } else {
    __asm__ ("addw %1, %%gs:%P0": "+m" (*(dev->pcpu_refcnt)): "ri" (1));
  }
  goto ldv_41032;
  case 4UL: ;
  if (pao_ID_____2 == 1) {
    __asm__ ("incl %%gs:%P0": "+m" (*(dev->pcpu_refcnt)));
  } else
  if (pao_ID_____2 == -1) {
    __asm__ ("decl %%gs:%P0": "+m" (*(dev->pcpu_refcnt)));
  } else {
    __asm__ ("addl %1, %%gs:%P0": "+m" (*(dev->pcpu_refcnt)): "ri" (1));
  }
  goto ldv_41032;
  case 8UL: ;
  if (pao_ID_____2 == 1) {
    __asm__ ("incq %%gs:%P0": "+m" (*(dev->pcpu_refcnt)));
  } else
  if (pao_ID_____2 == -1) {
    __asm__ ("decq %%gs:%P0": "+m" (*(dev->pcpu_refcnt)));
  } else {
    __asm__ ("addq %1, %%gs:%P0": "+m" (*(dev->pcpu_refcnt)): "re" (1));
  }
  goto ldv_41032;
  default:
  __bad_percpu_size();
  }
  ldv_41032: ;
  goto ldv_41006;
  default:
  __bad_size_call_parameter();
  goto ldv_41006;
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 27517: Dead code detected: pao_ID__ = 0; (CFACreationUtils.addEdgeToCFA, INFO)

line 27520: Dead code detected: [pao_ID__ == 1] (CFACreationUtils.addEdgeToCFA, INFO)

line 27520: Dead code detected: [!(pao_ID__ == 1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 27521: Dead code detected: __asm__ ("incb %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx))); (CFACreationUtils.addEdgeToCFA, INFO)

line 27523: Dead code detected: [pao_ID__ == -1] (CFACreationUtils.addEdgeToCFA, INFO)

line 27523: Dead code detected: [!(pao_ID__ == -1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 27524: Dead code detected: __asm__ ("decb %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx))); (CFACreationUtils.addEdgeToCFA, INFO)

line 27526: Dead code detected: __asm__ ("addb %1, %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)): "qi" ((unsigned long long )count)); (CFACreationUtils.addEdgeToCFA, INFO)

line 27530: Dead code detected: [pao_ID__ == 1] (CFACreationUtils.addEdgeToCFA, INFO)

line 27530: Dead code detected: [!(pao_ID__ == 1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 27531: Dead code detected: __asm__ ("incw %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx))); (CFACreationUtils.addEdgeToCFA, INFO)

line 27533: Dead code detected: [pao_ID__ == -1] (CFACreationUtils.addEdgeToCFA, INFO)

line 27533: Dead code detected: [!(pao_ID__ == -1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 27534: Dead code detected: __asm__ ("decw %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx))); (CFACreationUtils.addEdgeToCFA, INFO)

line 27536: Dead code detected: __asm__ ("addw %1, %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)): "ri" ((unsigned long long )count)); (CFACreationUtils.addEdgeToCFA, INFO)

line 27540: Dead code detected: [pao_ID__ == 1] (CFACreationUtils.addEdgeToCFA, INFO)

line 27540: Dead code detected: [!(pao_ID__ == 1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 27541: Dead code detected: __asm__ ("incl %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx))); (CFACreationUtils.addEdgeToCFA, INFO)

line 27543: Dead code detected: [pao_ID__ == -1] (CFACreationUtils.addEdgeToCFA, INFO)

line 27543: Dead code detected: [!(pao_ID__ == -1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 27544: Dead code detected: __asm__ ("decl %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx))); (CFACreationUtils.addEdgeToCFA, INFO)

line 27546: Dead code detected: __asm__ ("addl %1, %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)): "ri" ((unsigned long long )count)); (CFACreationUtils.addEdgeToCFA, INFO)

line 27549: Dead code detected:  (CFACreationUtils.addEdgeToCFA, INFO)

line 27550: Dead code detected: [!(pao_ID__ == 1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 27551: Dead code detected: __asm__ ("incq %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx))); (CFACreationUtils.addEdgeToCFA, INFO)

line 27553: Dead code detected: [pao_ID__ == -1] (CFACreationUtils.addEdgeToCFA, INFO)

line 27553: Dead code detected: [!(pao_ID__ == -1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 27554: Dead code detected: __asm__ ("decq %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx))); (CFACreationUtils.addEdgeToCFA, INFO)

line 27556: Dead code detected: __asm__ ("addq %1, %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)): "re" ((unsigned long long )count)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (8UL) {
  case 1UL: ;
  if (pao_ID__ == 1) {
    __asm__ ("incb %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)));
  } else
  if (pao_ID__ == -1) {
    __asm__ ("decb %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)));
  } else {
    __asm__ ("addb %1, %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)): "qi" ((unsigned long long )count));
  }
  goto ldv_49367;
  case 2UL: ;
  if (pao_ID__ == 1) {
    __asm__ ("incw %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)));
  } else
  if (pao_ID__ == -1) {
    __asm__ ("decw %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)));
  } else {
    __asm__ ("addw %1, %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)): "ri" ((unsigned long long )count));
  }
  goto ldv_49367;
  case 4UL: ;
  if (pao_ID__ == 1) {
    __asm__ ("incl %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)));
  } else
  if (pao_ID__ == -1) {
    __asm__ ("decl %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)));
  } else {
    __asm__ ("addl %1, %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)): "ri" ((unsigned long long )count));
  }
  goto ldv_49367;
  case 8UL: ;
  if (pao_ID__ == 1) {
    __asm__ ("incq %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)));
  } else
  if (pao_ID__ == -1) {
    __asm__ ("decq %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)));
  } else {
    __asm__ ("addq %1, %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)): "re" ((unsigned long long )count));
  }
  goto ldv_49367;
  default:
  __bad_percpu_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 27565: Dead code detected: pao_ID_____0 = 0; (CFACreationUtils.addEdgeToCFA, INFO)

line 27568: Dead code detected: [pao_ID_____0 == 1] (CFACreationUtils.addEdgeToCFA, INFO)

line 27568: Dead code detected: [!(pao_ID_____0 == 1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 27569: Dead code detected: __asm__ ("incb %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx))); (CFACreationUtils.addEdgeToCFA, INFO)

line 27571: Dead code detected: [pao_ID_____0 == -1] (CFACreationUtils.addEdgeToCFA, INFO)

line 27571: Dead code detected: [!(pao_ID_____0 == -1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 27572: Dead code detected: __asm__ ("decb %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx))); (CFACreationUtils.addEdgeToCFA, INFO)

line 27574: Dead code detected: __asm__ ("addb %1, %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)): "qi" ((unsigned long long )count)); (CFACreationUtils.addEdgeToCFA, INFO)

line 27578: Dead code detected: [pao_ID_____0 == 1] (CFACreationUtils.addEdgeToCFA, INFO)

line 27578: Dead code detected: [!(pao_ID_____0 == 1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 27579: Dead code detected: __asm__ ("incw %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx))); (CFACreationUtils.addEdgeToCFA, INFO)

line 27581: Dead code detected: [pao_ID_____0 == -1] (CFACreationUtils.addEdgeToCFA, INFO)

line 27581: Dead code detected: [!(pao_ID_____0 == -1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 27582: Dead code detected: __asm__ ("decw %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx))); (CFACreationUtils.addEdgeToCFA, INFO)

line 27584: Dead code detected: __asm__ ("addw %1, %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)): "ri" ((unsigned long long )count)); (CFACreationUtils.addEdgeToCFA, INFO)

line 27588: Dead code detected: [pao_ID_____0 == 1] (CFACreationUtils.addEdgeToCFA, INFO)

line 27588: Dead code detected: [!(pao_ID_____0 == 1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 27589: Dead code detected: __asm__ ("incl %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx))); (CFACreationUtils.addEdgeToCFA, INFO)

line 27591: Dead code detected: [pao_ID_____0 == -1] (CFACreationUtils.addEdgeToCFA, INFO)

line 27591: Dead code detected: [!(pao_ID_____0 == -1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 27592: Dead code detected: __asm__ ("decl %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx))); (CFACreationUtils.addEdgeToCFA, INFO)

line 27594: Dead code detected: __asm__ ("addl %1, %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)): "ri" ((unsigned long long )count)); (CFACreationUtils.addEdgeToCFA, INFO)

line 27597: Dead code detected:  (CFACreationUtils.addEdgeToCFA, INFO)

line 27598: Dead code detected: [!(pao_ID_____0 == 1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 27599: Dead code detected: __asm__ ("incq %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx))); (CFACreationUtils.addEdgeToCFA, INFO)

line 27601: Dead code detected: [pao_ID_____0 == -1] (CFACreationUtils.addEdgeToCFA, INFO)

line 27601: Dead code detected: [!(pao_ID_____0 == -1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 27602: Dead code detected: __asm__ ("decq %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx))); (CFACreationUtils.addEdgeToCFA, INFO)

line 27604: Dead code detected: __asm__ ("addq %1, %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)): "re" ((unsigned long long )count)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (8UL) {
  case 1UL: ;
  if (pao_ID_____0 == 1) {
    __asm__ ("incb %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)));
  } else
  if (pao_ID_____0 == -1) {
    __asm__ ("decb %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)));
  } else {
    __asm__ ("addb %1, %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)): "qi" ((unsigned long long )count));
  }
  goto ldv_49378;
  case 2UL: ;
  if (pao_ID_____0 == 1) {
    __asm__ ("incw %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)));
  } else
  if (pao_ID_____0 == -1) {
    __asm__ ("decw %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)));
  } else {
    __asm__ ("addw %1, %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)): "ri" ((unsigned long long )count));
  }
  goto ldv_49378;
  case 4UL: ;
  if (pao_ID_____0 == 1) {
    __asm__ ("incl %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)));
  } else
  if (pao_ID_____0 == -1) {
    __asm__ ("decl %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)));
  } else {
    __asm__ ("addl %1, %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)): "ri" ((unsigned long long )count));
  }
  goto ldv_49378;
  case 8UL: ;
  if (pao_ID_____0 == 1) {
    __asm__ ("incq %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)));
  } else
  if (pao_ID_____0 == -1) {
    __asm__ ("decq %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)));
  } else {
    __asm__ ("addq %1, %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)): "re" ((unsigned long long )count));
  }
  goto ldv_49378;
  default:
  __bad_percpu_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 27613: Dead code detected: pao_ID_____1 = 0; (CFACreationUtils.addEdgeToCFA, INFO)

line 27616: Dead code detected: [pao_ID_____1 == 1] (CFACreationUtils.addEdgeToCFA, INFO)

line 27616: Dead code detected: [!(pao_ID_____1 == 1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 27617: Dead code detected: __asm__ ("incb %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx))); (CFACreationUtils.addEdgeToCFA, INFO)

line 27619: Dead code detected: [pao_ID_____1 == -1] (CFACreationUtils.addEdgeToCFA, INFO)

line 27619: Dead code detected: [!(pao_ID_____1 == -1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 27620: Dead code detected: __asm__ ("decb %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx))); (CFACreationUtils.addEdgeToCFA, INFO)

line 27622: Dead code detected: __asm__ ("addb %1, %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)): "qi" ((unsigned long long )count)); (CFACreationUtils.addEdgeToCFA, INFO)

line 27626: Dead code detected: [pao_ID_____1 == 1] (CFACreationUtils.addEdgeToCFA, INFO)

line 27626: Dead code detected: [!(pao_ID_____1 == 1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 27627: Dead code detected: __asm__ ("incw %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx))); (CFACreationUtils.addEdgeToCFA, INFO)

line 27629: Dead code detected: [pao_ID_____1 == -1] (CFACreationUtils.addEdgeToCFA, INFO)

line 27629: Dead code detected: [!(pao_ID_____1 == -1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 27630: Dead code detected: __asm__ ("decw %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx))); (CFACreationUtils.addEdgeToCFA, INFO)

line 27632: Dead code detected: __asm__ ("addw %1, %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)): "ri" ((unsigned long long )count)); (CFACreationUtils.addEdgeToCFA, INFO)

line 27636: Dead code detected: [pao_ID_____1 == 1] (CFACreationUtils.addEdgeToCFA, INFO)

line 27636: Dead code detected: [!(pao_ID_____1 == 1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 27637: Dead code detected: __asm__ ("incl %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx))); (CFACreationUtils.addEdgeToCFA, INFO)

line 27639: Dead code detected: [pao_ID_____1 == -1] (CFACreationUtils.addEdgeToCFA, INFO)

line 27639: Dead code detected: [!(pao_ID_____1 == -1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 27640: Dead code detected: __asm__ ("decl %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx))); (CFACreationUtils.addEdgeToCFA, INFO)

line 27642: Dead code detected: __asm__ ("addl %1, %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)): "ri" ((unsigned long long )count)); (CFACreationUtils.addEdgeToCFA, INFO)

line 27645: Dead code detected:  (CFACreationUtils.addEdgeToCFA, INFO)

line 27646: Dead code detected: [!(pao_ID_____1 == 1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 27647: Dead code detected: __asm__ ("incq %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx))); (CFACreationUtils.addEdgeToCFA, INFO)

line 27649: Dead code detected: [pao_ID_____1 == -1] (CFACreationUtils.addEdgeToCFA, INFO)

line 27649: Dead code detected: [!(pao_ID_____1 == -1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 27650: Dead code detected: __asm__ ("decq %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx))); (CFACreationUtils.addEdgeToCFA, INFO)

line 27652: Dead code detected: __asm__ ("addq %1, %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)): "re" ((unsigned long long )count)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (8UL) {
  case 1UL: ;
  if (pao_ID_____1 == 1) {
    __asm__ ("incb %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)));
  } else
  if (pao_ID_____1 == -1) {
    __asm__ ("decb %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)));
  } else {
    __asm__ ("addb %1, %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)): "qi" ((unsigned long long )count));
  }
  goto ldv_49388;
  case 2UL: ;
  if (pao_ID_____1 == 1) {
    __asm__ ("incw %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)));
  } else
  if (pao_ID_____1 == -1) {
    __asm__ ("decw %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)));
  } else {
    __asm__ ("addw %1, %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)): "ri" ((unsigned long long )count));
  }
  goto ldv_49388;
  case 4UL: ;
  if (pao_ID_____1 == 1) {
    __asm__ ("incl %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)));
  } else
  if (pao_ID_____1 == -1) {
    __asm__ ("decl %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)));
  } else {
    __asm__ ("addl %1, %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)): "ri" ((unsigned long long )count));
  }
  goto ldv_49388;
  case 8UL: ;
  if (pao_ID_____1 == 1) {
    __asm__ ("incq %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)));
  } else
  if (pao_ID_____1 == -1) {
    __asm__ ("decq %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)));
  } else {
    __asm__ ("addq %1, %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)): "re" ((unsigned long long )count));
  }
  goto ldv_49388;
  default:
  __bad_percpu_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 27664: Dead code detected: [pao_ID_____2 == 1] (CFACreationUtils.addEdgeToCFA, INFO)

line 27664: Dead code detected: [!(pao_ID_____2 == 1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 27665: Dead code detected: __asm__ ("incb %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx))); (CFACreationUtils.addEdgeToCFA, INFO)

line 27667: Dead code detected: [pao_ID_____2 == -1] (CFACreationUtils.addEdgeToCFA, INFO)

line 27667: Dead code detected: [!(pao_ID_____2 == -1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 27668: Dead code detected: __asm__ ("decb %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx))); (CFACreationUtils.addEdgeToCFA, INFO)

line 27670: Dead code detected: __asm__ ("addb %1, %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)): "qi" ((unsigned long long )count)); (CFACreationUtils.addEdgeToCFA, INFO)

line 27674: Dead code detected: [pao_ID_____2 == 1] (CFACreationUtils.addEdgeToCFA, INFO)

line 27674: Dead code detected: [!(pao_ID_____2 == 1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 27675: Dead code detected: __asm__ ("incw %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx))); (CFACreationUtils.addEdgeToCFA, INFO)

line 27677: Dead code detected: [pao_ID_____2 == -1] (CFACreationUtils.addEdgeToCFA, INFO)

line 27677: Dead code detected: [!(pao_ID_____2 == -1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 27678: Dead code detected: __asm__ ("decw %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx))); (CFACreationUtils.addEdgeToCFA, INFO)

line 27680: Dead code detected: __asm__ ("addw %1, %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)): "ri" ((unsigned long long )count)); (CFACreationUtils.addEdgeToCFA, INFO)

line 27684: Dead code detected: [pao_ID_____2 == 1] (CFACreationUtils.addEdgeToCFA, INFO)

line 27684: Dead code detected: [!(pao_ID_____2 == 1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 27685: Dead code detected: __asm__ ("incl %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx))); (CFACreationUtils.addEdgeToCFA, INFO)

line 27687: Dead code detected: [pao_ID_____2 == -1] (CFACreationUtils.addEdgeToCFA, INFO)

line 27687: Dead code detected: [!(pao_ID_____2 == -1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 27688: Dead code detected: __asm__ ("decl %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx))); (CFACreationUtils.addEdgeToCFA, INFO)

line 27690: Dead code detected: __asm__ ("addl %1, %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)): "ri" ((unsigned long long )count)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (8UL) {
  case 1UL: ;
  if (pao_ID_____2 == 1) {
    __asm__ ("incb %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)));
  } else
  if (pao_ID_____2 == -1) {
    __asm__ ("decb %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)));
  } else {
    __asm__ ("addb %1, %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)): "qi" ((unsigned long long )count));
  }
  goto ldv_49398;
  case 2UL: ;
  if (pao_ID_____2 == 1) {
    __asm__ ("incw %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)));
  } else
  if (pao_ID_____2 == -1) {
    __asm__ ("decw %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)));
  } else {
    __asm__ ("addw %1, %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)): "ri" ((unsigned long long )count));
  }
  goto ldv_49398;
  case 4UL: ;
  if (pao_ID_____2 == 1) {
    __asm__ ("incl %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)));
  } else
  if (pao_ID_____2 == -1) {
    __asm__ ("decl %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)));
  } else {
    __asm__ ("addl %1, %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)): "ri" ((unsigned long long )count));
  }
  goto ldv_49398;
  case 8UL: ;
  if (pao_ID_____2 == 1) {
    __asm__ ("incq %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)));
  } else
  if (pao_ID_____2 == -1) {
    __asm__ ("decq %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)));
  } else {
    __asm__ ("addq %1, %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)): "re" ((unsigned long long )count));
  }
  goto ldv_49398;
  default:
  __bad_percpu_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (8UL) {
  case 1UL:
  pao_ID__ = 0;
  switch (8UL) {
  case 1UL: ;
  if (pao_ID__ == 1) {
    __asm__ ("incb %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)));
  } else
  if (pao_ID__ == -1) {
    __asm__ ("decb %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)));
  } else {
    __asm__ ("addb %1, %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)): "qi" ((unsigned long long )count));
  }
  goto ldv_49367;
  case 2UL: ;
  if (pao_ID__ == 1) {
    __asm__ ("incw %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)));
  } else
  if (pao_ID__ == -1) {
    __asm__ ("decw %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)));
  } else {
    __asm__ ("addw %1, %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)): "ri" ((unsigned long long )count));
  }
  goto ldv_49367;
  case 4UL: ;
  if (pao_ID__ == 1) {
    __asm__ ("incl %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)));
  } else
  if (pao_ID__ == -1) {
    __asm__ ("decl %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)));
  } else {
    __asm__ ("addl %1, %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)): "ri" ((unsigned long long )count));
  }
  goto ldv_49367;
  case 8UL: ;
  if (pao_ID__ == 1) {
    __asm__ ("incq %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)));
  } else
  if (pao_ID__ == -1) {
    __asm__ ("decq %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)));
  } else {
    __asm__ ("addq %1, %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)): "re" ((unsigned long long )count));
  }
  goto ldv_49367;
  default:
  __bad_percpu_size();
  }
  ldv_49367: ;
  goto ldv_49372;
  case 2UL:
  pao_ID_____0 = 0;
  switch (8UL) {
  case 1UL: ;
  if (pao_ID_____0 == 1) {
    __asm__ ("incb %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)));
  } else
  if (pao_ID_____0 == -1) {
    __asm__ ("decb %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)));
  } else {
    __asm__ ("addb %1, %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)): "qi" ((unsigned long long )count));
  }
  goto ldv_49378;
  case 2UL: ;
  if (pao_ID_____0 == 1) {
    __asm__ ("incw %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)));
  } else
  if (pao_ID_____0 == -1) {
    __asm__ ("decw %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)));
  } else {
    __asm__ ("addw %1, %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)): "ri" ((unsigned long long )count));
  }
  goto ldv_49378;
  case 4UL: ;
  if (pao_ID_____0 == 1) {
    __asm__ ("incl %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)));
  } else
  if (pao_ID_____0 == -1) {
    __asm__ ("decl %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)));
  } else {
    __asm__ ("addl %1, %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)): "ri" ((unsigned long long )count));
  }
  goto ldv_49378;
  case 8UL: ;
  if (pao_ID_____0 == 1) {
    __asm__ ("incq %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)));
  } else
  if (pao_ID_____0 == -1) {
    __asm__ ("decq %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)));
  } else {
    __asm__ ("addq %1, %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)): "re" ((unsigned long long )count));
  }
  goto ldv_49378;
  default:
  __bad_percpu_size();
  }
  ldv_49378: ;
  goto ldv_49372;
  case 4UL:
  pao_ID_____1 = 0;
  switch (8UL) {
  case 1UL: ;
  if (pao_ID_____1 == 1) {
    __asm__ ("incb %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)));
  } else
  if (pao_ID_____1 == -1) {
    __asm__ ("decb %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)));
  } else {
    __asm__ ("addb %1, %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)): "qi" ((unsigned long long )count));
  }
  goto ldv_49388;
  case 2UL: ;
  if (pao_ID_____1 == 1) {
    __asm__ ("incw %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)));
  } else
  if (pao_ID_____1 == -1) {
    __asm__ ("decw %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)));
  } else {
    __asm__ ("addw %1, %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)): "ri" ((unsigned long long )count));
  }
  goto ldv_49388;
  case 4UL: ;
  if (pao_ID_____1 == 1) {
    __asm__ ("incl %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)));
  } else
  if (pao_ID_____1 == -1) {
    __asm__ ("decl %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)));
  } else {
    __asm__ ("addl %1, %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)): "ri" ((unsigned long long )count));
  }
  goto ldv_49388;
  case 8UL: ;
  if (pao_ID_____1 == 1) {
    __asm__ ("incq %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)));
  } else
  if (pao_ID_____1 == -1) {
    __asm__ ("decq %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)));
  } else {
    __asm__ ("addq %1, %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)): "re" ((unsigned long long )count));
  }
  goto ldv_49388;
  default:
  __bad_percpu_size();
  }
  ldv_49388: ;
  goto ldv_49372;
  case 8UL:
  pao_ID_____2 = 0;
  switch (8UL) {
  case 1UL: ;
  if (pao_ID_____2 == 1) {
    __asm__ ("incb %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)));
  } else
  if (pao_ID_____2 == -1) {
    __asm__ ("decb %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)));
  } else {
    __asm__ ("addb %1, %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)): "qi" ((unsigned long long )count));
  }
  goto ldv_49398;
  case 2UL: ;
  if (pao_ID_____2 == 1) {
    __asm__ ("incw %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)));
  } else
  if (pao_ID_____2 == -1) {
    __asm__ ("decw %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)));
  } else {
    __asm__ ("addw %1, %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)): "ri" ((unsigned long long )count));
  }
  goto ldv_49398;
  case 4UL: ;
  if (pao_ID_____2 == 1) {
    __asm__ ("incl %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)));
  } else
  if (pao_ID_____2 == -1) {
    __asm__ ("decl %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)));
  } else {
    __asm__ ("addl %1, %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)): "ri" ((unsigned long long )count));
  }
  goto ldv_49398;
  case 8UL: ;
  if (pao_ID_____2 == 1) {
    __asm__ ("incq %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)));
  } else
  if (pao_ID_____2 == -1) {
    __asm__ ("decq %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)));
  } else {
    __asm__ ("addq %1, %%gs:%P0": "+m" (*(bat_priv->bat_counters + idx)): "re" ((unsigned long long )count));
  }
  goto ldv_49398;
  default:
  __bad_percpu_size();
  }
  ldv_49398: ;
  goto ldv_49372;
  default:
  __bad_size_call_parameter();
  goto ldv_49372;
  } (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 26326: Function pointer *(tvlv_handler->ogm_handler) with type void (*)(struct batadv_priv *, struct batadv_orig_node *, uint8_t , void *, uint16_t ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 26348: Function pointer *(tvlv_handler->unicast_handler) with type int (*)(struct batadv_priv *, uint8_t *, uint8_t *, void *, uint16_t ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 26435-26436: Function pointer *(tvlv_handler->ogm_handler) with type void (*)(struct batadv_priv *, struct batadv_orig_node *, uint8_t , void *, uint16_t ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 14579: Function pointer *(p->_qproc) with type void (*)(struct file *, wait_queue_head_t *, struct poll_table_struct *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

line 26749: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp = ldv_zalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function param_get_string to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 40252: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___0 = ldv_zalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 37105: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp = ldv_zalloc(16UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function ldv_init_19 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_release_19 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 16027: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp = ldv_zalloc(8UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 40164: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___0 = ldv_zalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 40074: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp = ldv_zalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 39989: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___0 = ldv_zalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 39943: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp = ldv_zalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 39899: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp = ldv_zalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 16185: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp = ldv_zalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 24541: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___0 = ldv_zalloc(8UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 39821: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp = ldv_zalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function debugfs_remove_recursive to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rtnl_link_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function unregister_netdevice_notifier to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 16268: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___1 = ldv_zalloc(8UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 40208: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___0 = ldv_zalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 40032: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___0 = ldv_zalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 15875: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___1 = ldv_zalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 15638: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___0 = ldv_zalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 15561: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___1 = ldv_zalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 39779: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___0 = ldv_zalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 16108: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___0 = ldv_zalloc(8UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 39735: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___0 = ldv_zalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 39699: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp = ldv_zalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 39657: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___0 = ldv_zalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 15951: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___0 = ldv_zalloc(8UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 37009: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp = ldv_zalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 15797: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___1 = ldv_zalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 15715: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp = ldv_zalloc(8UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 16029: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___0 = ldv_zalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function seq_lseek to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function single_release to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function seq_read to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 40122: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___1 = ldv_zalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 10628: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___2 = ldv_zalloc(264UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 39857: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___0 = ldv_zalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 16187: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___0 = ldv_zalloc(8UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 24545: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___2 = ldv_zalloc(8UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 39823: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___0 = ldv_zalloc(32UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function rtnl_lock to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 39528: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___1 = ldv_zalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 16272: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___3 = ldv_zalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 23399: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___0 = ldv_zalloc(24UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 26909: Destroying the void* pointer ldv_main_exported_24::tmp produces garbage or the memory pointed by it is unused: ldv_main_exported_24(); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ndo_uninit_20 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function eth_validate_addr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 26895: Destroying the void* pointer ldv_main_exported_20::tmp___2 produces garbage or the memory pointed by it is unused: ldv_main_exported_20(); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 15877: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___2 = ldv_zalloc(8UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 15640: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___1 = ldv_zalloc(8UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 15565: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___3 = ldv_zalloc(8UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 16110: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___1 = ldv_zalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 39701: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___0 = ldv_zalloc(32UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 39614: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___0 = ldv_zalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 15953: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___1 = ldv_zalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 39572: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___1 = ldv_zalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 37011: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___0 = ldv_zalloc(8UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 15799: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___2 = ldv_zalloc(8UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 15721: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___2 = ldv_zalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function single_open to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rtnl_unlock to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function flush_workqueue to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function destroy_workqueue to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rcu_barrier to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_final_state to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 15479: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___4 = ldv_zalloc(8UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function no_llseek to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 37013: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___1 = ldv_zalloc(44UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function get_random_bytes to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function seq_printf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function module_put to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function try_module_get to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function nonseekable_open to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 37017: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___3 = ldv_zalloc(196UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function seq_puts to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strlcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ether_setup to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __list_del_entry to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function lockdep_init_map to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 14579: Ignoring function call through function pointer *(p->_qproc): (*(p->_qproc))(filp, wait_address, p); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 24247: Ignoring parameters passed as varargs to function batadv_debug_log: batadv_debug_log(bat_priv, "Error - can\'t send packet from char device: invalid packet size\n") (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

Assuming external function rtnl_is_locked to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function kfree_skb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __alloc_workqueue_key to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function debugfs_create_dir to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 39313: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___0 = ldv_zalloc(32UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 15434: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___0 = ldv_zalloc(1032UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 39417: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___0 = ldv_zalloc(32UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 39391: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___0 = ldv_zalloc(32UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 39508: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___0 = ldv_zalloc(32UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 39404: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___0 = ldv_zalloc(32UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 39326: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___0 = ldv_zalloc(32UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 39339: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___0 = ldv_zalloc(32UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 39495: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___0 = ldv_zalloc(32UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 26712: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp = ldv_zalloc(32UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 39378: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___0 = ldv_zalloc(32UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 39430: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___0 = ldv_zalloc(32UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 39352: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___0 = ldv_zalloc(32UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 39469: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___0 = ldv_zalloc(32UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 39482: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___0 = ldv_zalloc(32UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 39443: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___0 = ldv_zalloc(32UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 39456: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___0 = ldv_zalloc(32UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 39365: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___0 = ldv_zalloc(32UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function ldv__builtin_va_start to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function vscnprintf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 14675: Ignoring parameters passed as varargs to function batadv_fdebug_log: batadv_fdebug_log(bat_priv->debug_log, "[%10u] %s", tmp, (char *)(&tmp_log_buf)) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

Assuming external function kstrtouint to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function register_netdevice_notifier to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rtnl_link_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function debugfs_create_file to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

lines 38091-38092: Ignoring parameters passed as varargs to function batadv_debug_log: batadv_debug_log(_batpriv, "Invalid parameter for \'gw mode\' setting received: %s\n", buff) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

Assuming external function prepare_to_wait_event to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function schedule to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function finish_wait to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

lines 38245-38246: Ignoring parameters passed as varargs to function batadv_debug_log: batadv_debug_log(_batpriv, "New skb mark for extended isolation: %#.8x/%#.8x\n", bat_priv->isolation_mark, bat_priv->isolation_mark_mask) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

lines 38126-38127: Ignoring parameters passed as varargs to function batadv_debug_log: batadv_debug_log(_batpriv___0, "Changing gw mode from: %s to: %s\n", curr_gw_mode_str, buff) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

Assuming external function kobject_put to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function unregister_netdevice_queue to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function call_rcu_sched to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dump_stack to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv__builtin_va_end to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function kobject_create_and_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function find_next_bit to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sysfs_remove_file_ns to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __init_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __alloc_percpu to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock_bh to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function list_del to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __raw_spin_lock_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __init_waitqueue_head to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sysfs_create_file_ns to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 23089: Ignoring parameters passed as varargs to function batadv_debug_log: batadv_debug_log(_batpriv, "Removing interface: %s\n", (char *)(&(hard_iface->net_dev->name))) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

Assuming external function dev_remove_pack to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

lines 38773-38774: Ignoring parameters passed as varargs to function batadv_debug_log: batadv_debug_log(_batpriv, "Can\'t add sysfs directory: %s/%s\n", (char *)(&(dev->name)), (char *)"mesh") (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

Assuming external function _raw_spin_unlock_bh to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strnicmp to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

lines 38794-38795: Ignoring parameters passed as varargs to function batadv_debug_log: batadv_debug_log(_batpriv___0, "Can\'t add sysfs file: %s/%s/%s\n", (char *)(&(dev->name)), (char *)"mesh", (*bat_attr)->attr.name) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

line 23823: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size(from, 0); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function __builtin_object_size to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function might_fault to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_percpu to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _copy_to_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __copy_to_user_overflow to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function debugfs_create_u8 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function debugfs_create_u32 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

lines 15248-15249: Ignoring parameters passed as varargs to function batadv_debug_log: batadv_debug_log(_batpriv, "Can\'t add debugfs file: %s/%s\n", (char *)(&(dev->name)), (*bat_debug)->attr.name) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

Assuming external function lock_acquire to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function debug_lockdep_rcu_enabled to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rcu_is_watching to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function lockdep_rcu_suspicious to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rcu_lockdep_current_cpu_online to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function lock_is_held to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function lock_release to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            7354 (15% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  6646 (90%)
  Because of loop head:            706 (10%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         2 (0%)
  Times precision was empty:       7299 (99%)
  Times precision was {false}:     9 (0%)
  Times result was cached:         40 (1%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      6 (0%)
  Times result was 'false':        4 (0%)
Number of strengthen sat checks:   0
Number of coverage checks:         4463
  BDD entailment checks:           989
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       175
Number of predicates discovered:          3
Number of abstraction locations:          3
Max number of predicates per location:    2
Avg number of predicates per location:    1
Total predicates per abstraction:         63
Max number of predicates per abstraction: 2
Avg number of predicates per abstraction: 4.20
Number of irrelevant predicates:          54 (86%)
Number of preds handled by boolean abs:   9 (14%)
  Total number of models for allsat:      10
  Max number of models for allsat:        4
  Avg number of models for allsat:        1.67

Time for post operator:                  7.831s
  Time for path formula creation:        7.667s
Time for strengthen operator:            0.197s
Time for prec operator:                  0.692s
  Time for abstraction:                  0.251s (Max:     0.023s, Count: 7354)
    Boolean abstraction:                 0.035s
    Solving time:                        0.035s (Max:     0.012s)
    Model enumeration time:              0.001s
    Time for BDD construction:           0.003s (Max:     0.001s)
Time for merge operator:                 0.470s
Time for coverage check:                 0.045s
  Time for BDD entailment checks:        0.034s
Total time for SMT solver (w/o itp):     0.036s

Number of path formula cache hits:   25016 (48%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     6.759s

Total number of created targets for pointer analysis: 6660
   Number of created targets for uf: *(struct_hlist_node)* is 5
   Number of created targets for uf: *(struct_net_device)* is 3
   Number of created targets for uf: *(struct_batadv_socket_client)* is 41
   Number of created targets for uf: *(unsigned_char)* is 7
   Number of created targets for uf: *((struct_hlist_node)*)* is 3
   Number of created targets for uf: *unsigned_long_int is 81
   Number of created targets for uf: *unsigned_short_int is 133
   Number of created targets for uf: *signed_int is 61
   Number of created targets for uf: *unsigned_char is 241
   Number of created targets for uf: *(struct_list_head)* is 7
   Number of created targets for uf: *(Return_type:_[signed_int],_Parameters:_2,_Parameter_1_type:_[(struct_sk_buff)*],_Parameter_2_type:_[(struct_batadv_hard_iface)*],_VarArgs:_false)* is 41
   Number of created targets for uf: *unsigned_long_long_int is 3
   Number of created targets for uf: *unsigned_int is 11
   Number of created targets for uf: *char is 85


Number of BDD nodes:                               206
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                          21 (count: 8381, min: 0, max: 12, avg: 0.00)
Time for BDD node cleanup:                             0.005s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.369s
Automaton transfers with branching:                0
Automaton transfer successors:                        47529 (count: 47529, min: 1, max: 1, avg: 1.00) [1 x 47529]

CPA algorithm statistics
------------------------
Number of iterations:            26026
Max size of waitlist:            307
Average size of waitlist:        171
Number of computed successors:   29253
Max successors for one state:    2
Number of times merged:          1737
Number of times stopped:         2682
Number of times breaked:         2

Total time for CPA algorithm:        14.066s (Max:     7.896s)
  Time for choose from waitlist:      0.099s
  Time for precision adjustment:      1.450s
  Time for transfer relation:        10.751s
  Time for merge operator:            0.677s
  Time for stop operator:             0.222s
  Time for adding to reached set:     0.241s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   2
Avg. length of target path (in blocks):                  47 (count: 2, min: 21, max: 26, avg: 23.50)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.313s
  Counterexample analysis:                             0.119s (Max:     0.064s, Calls: 2)
    Refinement sat check:                              0.096s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.013s
  Precision update:                                    0.017s
  ARG update:                                          0.161s

Length of refined path (in blocks):                      12 (count: 2, min: 6, max: 6, avg: 6.00)
Number of affected states:                                2 (count: 2, min: 1, max: 1, avg: 1.00)
Length (states) of path with itp 'true':                  8 (count: 2, min: 4, max: 4, avg: 4.00)
Length (states) of path with itp non-trivial itp:         2 (count: 2, min: 1, max: 1, avg: 1.00)
Length (states) of path with itp 'false':                 2 (count: 2, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 2, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:               0 (count: 2, min: 0, max: 0, avg: 0.00)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                2
Number of successful refinements:     2
Number of failed refinements:         0
Max. size of reached set before ref.: 16423
Max. size of reached set after ref.:  23
Avg. size of reached set before ref.: 12692.00
Avg. size of reached set after ref.:  23.00

Total time for CEGAR algorithm:      14.495s
Time for refinements:                 0.429s
Average time for refinement:          0.214s
Max time for refinement:              0.221s

Code Coverage
-----------------------------
  Function coverage:      0.052
  Visited lines:          2138
  Total lines:            23453
  Line coverage:          0.091
  Visited conditions:     232
  Total conditions:       7048
  Condition coverage:     0.033

CPAchecker general statistics
-----------------------------
Number of program locations:     32905
Number of CFA edges:             39383
Number of relevant variables:    7610
Number of functions:             1075
Number of loops:                 237
Size of reached set:             1230
  Number of reached locations:   520 (2%)
    Avg states per location:     2
    Max states per location:     103 (at node N418)
  Number of reached functions:   56 (5%)
  Number of partitions:          1229
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N17173 (before line 26793), Function main called from node N17121, stack depth 1 [7da660a1], stack [main]])
  Number of target states:       0
  Size of final wait list        86

Time for analysis setup:         15.725s
  Time for loading CPAs:          1.275s
  Time for loading parser:        0.747s
  Time for CFA construction:     13.534s
    Time for parsing file(s):     2.413s
    Time for AST to CFA:          4.952s
    Time for CFA sanity check:    1.711s
    Time for post-processing:     4.471s
      Time for var class.:        1.900s
Time for Analysis:               14.495s
CPU time for analysis:           14.480s
Total time for CPAchecker:       30.225s
Total CPU time for CPAchecker:   30.160s
Time for statistics:              0.209s

Time for Garbage Collector:       1.343s (in 45 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                224MB (   213 MiB) max;    130MB (   124 MiB) avg;    230MB (   219 MiB) peak
Used non-heap memory:             49MB (    47 MiB) max;     37MB (    35 MiB) avg;     49MB (    47 MiB) peak
Allocated heap memory:           249MB (   237 MiB) max;    204MB (   195 MiB) avg
Allocated non-heap memory:        50MB (    48 MiB) max;     38MB (    36 MiB) avg
Total process virtual memory:   8085MB (  7711 MiB) max;   8065MB (  7691 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
