scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.16-rc1/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--media--pci--cx18--cx18.ko-entry_point_true-unreach-call.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_s18_dop9/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 8827: Dead code detected: __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

line 8830: Dead code detected: __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

line 8833: Dead code detected: __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (8UL) {
  case 1UL:
  __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& current_task));
  goto ldv_3067;
  case 2UL:
  __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_3067;
  case 4UL:
  __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_3067;
  case 8UL:
  __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_3067;
  default:
  __bad_percpu_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

lines 8865-8866: Dead code detected: __asm__ volatile (".pushsection .smp_locks,\"a\"\n.balign 4\n.long 671f - .\n.popsection\n671:\n\tlock; xaddb %b0, %1\n": "+q" (__ret),
                       "+m" (v->counter): : "memory", "cc"); (CFACreationUtils.addEdgeToCFA, INFO)

lines 8869-8870: Dead code detected: __asm__ volatile (".pushsection .smp_locks,\"a\"\n.balign 4\n.long 671f - .\n.popsection\n671:\n\tlock; xaddw %w0, %1\n": "+r" (__ret),
                       "+m" (v->counter): : "memory", "cc"); (CFACreationUtils.addEdgeToCFA, INFO)

lines 8877-8878: Dead code detected: __asm__ volatile (".pushsection .smp_locks,\"a\"\n.balign 4\n.long 671f - .\n.popsection\n671:\n\tlock; xaddq %q0, %1\n": "+r" (__ret),
                       "+m" (v->counter): : "memory", "cc"); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (4UL) {
  case 1UL:
  __asm__ volatile (".pushsection .smp_locks,\"a\"\n.balign 4\n.long 671f - .\n.popsection\n671:\n\tlock; xaddb %b0, %1\n": "+q" (__ret),
                       "+m" (v->counter): : "memory", "cc");
  goto ldv_5626;
  case 2UL:
  __asm__ volatile (".pushsection .smp_locks,\"a\"\n.balign 4\n.long 671f - .\n.popsection\n671:\n\tlock; xaddw %w0, %1\n": "+r" (__ret),
                       "+m" (v->counter): : "memory", "cc");
  goto ldv_5626;
  case 4UL:
  __asm__ volatile (".pushsection .smp_locks,\"a\"\n.balign 4\n.long 671f - .\n.popsection\n671:\n\tlock; xaddl %0, %1\n": "+r" (__ret),
                       "+m" (v->counter): : "memory", "cc");
  goto ldv_5626;
  case 8UL:
  __asm__ volatile (".pushsection .smp_locks,\"a\"\n.balign 4\n.long 671f - .\n.popsection\n671:\n\tlock; xaddq %q0, %1\n": "+r" (__ret),
                       "+m" (v->counter): : "memory", "cc");
  goto ldv_5626;
  default:
  __xadd_wrong_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 9443: Dead code detected: tmp___0 = get_current(); (CFACreationUtils.addEdgeToCFA, INFO)

line 9448: Dead code detected: tmp___1 = get_current(); (CFACreationUtils.addEdgeToCFA, INFO)

line 9453: Dead code detected: tmp___2 = get_current(); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (8UL) {
  case 1UL:
  tmp___0 = get_current();
  __asm__ volatile ("xchgb %b0, %1\n": "+q" (__ret), "+m" (tmp___0->state): : "memory",
                       "cc");
  goto ldv_52338;
  case 2UL:
  tmp___1 = get_current();
  __asm__ volatile ("xchgw %w0, %1\n": "+r" (__ret), "+m" (tmp___1->state): : "memory",
                       "cc");
  goto ldv_52338;
  case 4UL:
  tmp___2 = get_current();
  __asm__ volatile ("xchgl %0, %1\n": "+r" (__ret), "+m" (tmp___2->state): : "memory",
                       "cc");
  goto ldv_52338;
  case 8UL:
  tmp___3 = get_current();
  __asm__ volatile ("xchgq %q0, %1\n": "+r" (__ret), "+m" (tmp___3->state): : "memory",
                       "cc");
  goto ldv_52338;
  default:
  __xchg_wrong_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 28074: Function pointer *(dmx->add_frontend) with type int (*)(struct dmx_demux *, struct dmx_frontend *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 28080: Function pointer *(dmx->add_frontend) with type int (*)(struct dmx_demux *, struct dmx_frontend *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 28086: Function pointer *(dmx->connect_frontend) with type int (*)(struct dmx_demux *, struct dmx_frontend *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 28109: Function pointer *(dmx->remove_frontend) with type int (*)(struct dmx_demux *, struct dmx_frontend *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 28111: Function pointer *(dmx->remove_frontend) with type int (*)(struct dmx_demux *, struct dmx_frontend *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 28144: Function pointer *(dmx->remove_frontend) with type int (*)(struct dmx_demux *, struct dmx_frontend *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 28145: Function pointer *(dmx->remove_frontend) with type int (*)(struct dmx_demux *, struct dmx_frontend *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 19372: Function pointer *(__sd->ops->tuner->g_frequency) with type int (*)(struct v4l2_subdev *, struct v4l2_frequency *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 21776: Function pointer *(cx->pcm_announce_callback) with type void (*)(struct snd_cx18_card *, u8 *, size_t ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 21759: Function pointer *(cx->pcm_announce_callback) with type void (*)(struct snd_cx18_card *, u8 *, size_t ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 10586: Function pointer *(__sd___1->ops->tuner->s_config) with type int (*)(struct v4l2_subdev *, const struct v4l2_priv_tun_config *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 10552: Function pointer *(__sd___0->ops->tuner->s_type_addr) with type int (*)(struct v4l2_subdev *, struct tuner_setup *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 14058-14059: Function pointer *(ops->map_page) with type dma_addr_t (*)(struct device *, struct page *, unsigned long, size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 14125: Function pointer *(ops->sync_single_for_cpu) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 14158: Function pointer *(ops->sync_single_for_device) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 14092: Function pointer *(ops->unmap_page) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 28632: Function pointer *(fe___1->ops.tuner_ops.set_config) with type int (*)(struct dvb_frontend *, void *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 28619: Function pointer *__a___9 with type struct dvb_frontend *(*)(struct dvb_frontend *, struct xc2028_config *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 28576-28577: Function pointer *__a___8 with type struct dvb_frontend *(*)(const struct zl10353_config *, struct i2c_adapter *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 28552: Function pointer *(fe___0->ops.tuner_ops.set_config) with type int (*)(struct dvb_frontend *, void *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 28539: Function pointer *__a___7 with type struct dvb_frontend *(*)(struct dvb_frontend *, struct xc2028_config *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 28493-28494: Function pointer *__a___6 with type struct dvb_frontend *(*)(const struct zl10353_config *, struct i2c_adapter *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 28465-28466: Function pointer *__a___5 with type struct dvb_frontend *(*)(const struct mt352_config *, struct i2c_adapter *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 28441: Function pointer *(fe->ops.tuner_ops.set_config) with type int (*)(struct dvb_frontend *, void *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 28428: Function pointer *__a___4 with type struct dvb_frontend *(*)(struct dvb_frontend *, struct xc2028_config *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 28385-28386: Function pointer *__a___3 with type struct dvb_frontend *(*)(const struct zl10353_config *, struct i2c_adapter *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 28355: Function pointer *__a___2 with type struct dvb_frontend *(*)(struct dvb_frontend *, u8 , struct i2c_adapter *, struct tda18271_config *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 28321-28322: Function pointer *__a___1 with type struct dvb_frontend *(*)(const struct s5h1411_config *, struct i2c_adapter *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 28290: Function pointer *__a___0 with type struct dvb_frontend *(*)(struct dvb_frontend *, struct i2c_adapter *, struct mxl5005s_config *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 28259-28260: Function pointer *__a with type struct dvb_frontend *(*)(const struct s5h1409_config *, struct i2c_adapter *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 27733: Function pointer *(fe->ops.write) with type int (*)(struct dvb_frontend *, u8 *, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 16773: Function pointer *(p->_qproc) with type void (*)(struct file *, wait_queue_head_t *, struct poll_table_struct *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

line 11108: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp = ldv_zalloc(32UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_final_state to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __pci_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 25756: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp = ldv_zalloc(44UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 25494: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp = ldv_zalloc(44UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 16506: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp = ldv_zalloc(8UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 16514: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___3 = ldv_zalloc(184UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function video_ioctl2 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function video_devdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 11321: Destroying the void* pointer ldv_main_exported_20::tmp produces garbage or the memory pointed by it is unused: ldv_main_exported_20(); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 11321: Destroying the void* pointer ldv_main_exported_20::tmp___0 produces garbage or the memory pointed by it is unused: ldv_main_exported_20(); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 11321: Destroying the void* pointer ldv_main_exported_20::tmp___1 produces garbage or the memory pointed by it is unused: ldv_main_exported_20(); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 11321: Destroying the void* pointer ldv_main_exported_20::tmp___4 produces garbage or the memory pointed by it is unused: ldv_main_exported_20(); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 20453: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp = ldv_zalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 20473: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___9 = ldv_zalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 20507: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___26 = ldv_zalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 20517: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___31 = ldv_zalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 20539: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___42 = ldv_zalloc(20UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 20541: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___43 = ldv_zalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 20553: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___49 = ldv_zalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 20555: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___50 = ldv_zalloc(104UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 20571: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___58 = ldv_zalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 11314: Destroying the void* pointer ldv_main_exported_12::tmp___0 produces garbage or the memory pointed by it is unused: ldv_main_exported_12(); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 11314: Destroying the void* pointer ldv_main_exported_12::tmp___1 produces garbage or the memory pointed by it is unused: ldv_main_exported_12(); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 11314: Destroying the void* pointer ldv_main_exported_12::tmp___10 produces garbage or the memory pointed by it is unused: ldv_main_exported_12(); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 11314: Destroying the void* pointer ldv_main_exported_12::tmp___11 produces garbage or the memory pointed by it is unused: ldv_main_exported_12(); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 11314: Destroying the void* pointer ldv_main_exported_12::tmp___13 produces garbage or the memory pointed by it is unused: ldv_main_exported_12(); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 11314: Destroying the void* pointer ldv_main_exported_12::tmp___14 produces garbage or the memory pointed by it is unused: ldv_main_exported_12(); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 11314: Destroying the void* pointer ldv_main_exported_12::tmp___15 produces garbage or the memory pointed by it is unused: ldv_main_exported_12(); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 11314: Destroying the void* pointer ldv_main_exported_12::tmp___17 produces garbage or the memory pointed by it is unused: ldv_main_exported_12(); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 11314: Destroying the void* pointer ldv_main_exported_12::tmp___18 produces garbage or the memory pointed by it is unused: ldv_main_exported_12(); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 11314: Destroying the void* pointer ldv_main_exported_12::tmp___19 produces garbage or the memory pointed by it is unused: ldv_main_exported_12(); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 11314: Destroying the void* pointer ldv_main_exported_12::tmp___20 produces garbage or the memory pointed by it is unused: ldv_main_exported_12(); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 11314: Destroying the void* pointer ldv_main_exported_12::tmp___22 produces garbage or the memory pointed by it is unused: ldv_main_exported_12(); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 11314: Destroying the void* pointer ldv_main_exported_12::tmp___23 produces garbage or the memory pointed by it is unused: ldv_main_exported_12(); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 11314: Destroying the void* pointer ldv_main_exported_12::tmp___25 produces garbage or the memory pointed by it is unused: ldv_main_exported_12(); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 11314: Destroying the void* pointer ldv_main_exported_12::tmp___29 produces garbage or the memory pointed by it is unused: ldv_main_exported_12(); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 11314: Destroying the void* pointer ldv_main_exported_12::tmp___30 produces garbage or the memory pointed by it is unused: ldv_main_exported_12(); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 11314: Destroying the void* pointer ldv_main_exported_12::tmp___32 produces garbage or the memory pointed by it is unused: ldv_main_exported_12(); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 11314: Destroying the void* pointer ldv_main_exported_12::tmp___33 produces garbage or the memory pointed by it is unused: ldv_main_exported_12(); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 11314: Destroying the void* pointer ldv_main_exported_12::tmp___34 produces garbage or the memory pointed by it is unused: ldv_main_exported_12(); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 11314: Destroying the void* pointer ldv_main_exported_12::tmp___35 produces garbage or the memory pointed by it is unused: ldv_main_exported_12(); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 11314: Destroying the void* pointer ldv_main_exported_12::tmp___36 produces garbage or the memory pointed by it is unused: ldv_main_exported_12(); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 11314: Destroying the void* pointer ldv_main_exported_12::tmp___37 produces garbage or the memory pointed by it is unused: ldv_main_exported_12(); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 11314: Destroying the void* pointer ldv_main_exported_12::tmp___39 produces garbage or the memory pointed by it is unused: ldv_main_exported_12(); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 11314: Destroying the void* pointer ldv_main_exported_12::tmp___40 produces garbage or the memory pointed by it is unused: ldv_main_exported_12(); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 11314: Destroying the void* pointer ldv_main_exported_12::tmp___44 produces garbage or the memory pointed by it is unused: ldv_main_exported_12(); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 11314: Destroying the void* pointer ldv_main_exported_12::tmp___46 produces garbage or the memory pointed by it is unused: ldv_main_exported_12(); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 11314: Destroying the void* pointer ldv_main_exported_12::tmp___47 produces garbage or the memory pointed by it is unused: ldv_main_exported_12(); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 11314: Destroying the void* pointer ldv_main_exported_12::tmp___5 produces garbage or the memory pointed by it is unused: ldv_main_exported_12(); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 11314: Destroying the void* pointer ldv_main_exported_12::tmp___51 produces garbage or the memory pointed by it is unused: ldv_main_exported_12(); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 11314: Destroying the void* pointer ldv_main_exported_12::tmp___52 produces garbage or the memory pointed by it is unused: ldv_main_exported_12(); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 11314: Destroying the void* pointer ldv_main_exported_12::tmp___53 produces garbage or the memory pointed by it is unused: ldv_main_exported_12(); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 11314: Destroying the void* pointer ldv_main_exported_12::tmp___54 produces garbage or the memory pointed by it is unused: ldv_main_exported_12(); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 11314: Destroying the void* pointer ldv_main_exported_12::tmp___55 produces garbage or the memory pointed by it is unused: ldv_main_exported_12(); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 11314: Destroying the void* pointer ldv_main_exported_12::tmp___57 produces garbage or the memory pointed by it is unused: ldv_main_exported_12(); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function msecs_to_jiffies to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 20317: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___3 = ldv_zalloc(88UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 21148: Ignoring function call through function pointer *(cx->sd_av->ops->video->s_mbus_fmt): (*(cx->sd_av->ops->video->s_mbus_fmt))(cx->sd_av, &fmt); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 21180: Ignoring function call through function pointer *(__sd->ops->audio->s_clock_freq): (*(__sd->ops->audio->s_clock_freq))(__sd, freqs[idx]); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function v4l2_device_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snprintf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function v4l2_device_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __mutex_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __alloc_workqueue_key to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_enable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ioremap_nocache to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __release_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function destroy_workqueue to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dma_set_mask to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __request_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __init_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function lockdep_init_map to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function cx2341x_handler_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __init_waitqueue_head to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __list_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function flush_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock_nested to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function videobuf_iolock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function videobuf_waiton to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function videobuf_vmalloc_free to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function request_firmware to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function release_firmware to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 20254: Ignoring function call through function pointer *(__sd->ops->core->reset): (*(__sd->ops->core->reset))(__sd, 1U); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function strlcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 20181: Ignoring function call through function pointer *(__sd->ops->core->log_status): (*(__sd->ops->core->log_status))(__sd); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function v4l2_ctrl_handler_log_status to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function cx2341x_handler_set_50hz to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 19504: Ignoring function call through function pointer *(__sd->ops->video->s_std): (*(__sd->ops->video->s_std))(__sd, cx->std); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 19582: Ignoring function call through function pointer *(__sd->ops->tuner->g_tuner): (*(__sd->ops->tuner->g_tuner))(__sd, vt); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 18727: Ignoring function call through function pointer *(cx->sd_av->ops->vbi->g_sliced_fmt): tmp___0 = (*(cx->sd_av->ops->vbi->g_sliced_fmt))(cx->sd_av, &(fmt->fmt.sliced)); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 19372: Ignoring function call through function pointer *(__sd->ops->tuner->g_frequency): (*(__sd->ops->tuner->g_frequency))(__sd, vf); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 20083: Ignoring parameters passed as varargs to function cx18_vapi: cx18_vapi(cx, 537001992U, 1, h) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

Assuming external function ldv__builtin_va_start to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv__builtin_va_end to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv__builtin_va_arg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 19544: Ignoring function call through function pointer *(__sd->ops->tuner->s_tuner): (*(__sd->ops->tuner->s_tuner))(__sd, vt); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 18918: Ignoring function call through function pointer *(cx->sd_av->ops->vbi->s_raw_fmt): tmp___2 = (*(cx->sd_av->ops->vbi->s_raw_fmt))(cx->sd_av, &(fmt->fmt.vbi)); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function v4l2_fh_del to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function v4l2_fh_exit to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function v4l2_fh_is_singular to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 20055: Ignoring parameters passed as varargs to function cx18_vapi: cx18_vapi(cx, 537001991U, 1, h) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

line 18214: Ignoring parameters passed as varargs to function cx18_vapi: cx18_vapi(cx, 537002004U, 2, h, 1) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

line 16223: Ignoring parameters passed as varargs to function cx18_vapi: cx18_vapi(cx, 537001987U, 1, s->handle) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

line 16221: Ignoring parameters passed as varargs to function cx18_vapi: cx18_vapi(cx, 537001987U, 2, s->handle, gop_end == 0) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

line 16237: Ignoring parameters passed as varargs to function cx18_vapi: cx18_vapi(cx, 537133062U, 1, s->handle) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

line 16238: Ignoring parameters passed as varargs to function cx18_vapi: cx18_vapi(cx, 1073741826U, 1, s->handle) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

Assuming external function cx2341x_handler_set_busy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function schedule_timeout_uninterruptible to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 18045: Ignoring function call through function pointer *(__sd->ops->video->s_std): (*(__sd->ops->video->s_std))(__sd, cx->std); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

lines 23344-23345: Ignoring function call through function pointer *(cx->sd_extmux->ops->audio->s_routing): (*(cx->sd_extmux->ops->audio->s_routing))(cx->sd_extmux, __CPAchecker_TMP_4, 0U, 0U); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 23361: Ignoring function call through function pointer *(__sd->ops->audio->s_routing): tmp___0 = (*(__sd->ops->audio->s_routing))(__sd, in->audio_input, 0U, 0U); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 18062: Ignoring parameters passed as varargs to function cx18_vapi: cx18_vapi(cx, 537002003U, 2, s->handle, tmp___0 | (tmp___1 << 8)) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

line 13587: Ignoring function call through function pointer *(cx->sd_resetctrl.ops->core->reset): tmp = (*(cx->sd_resetctrl.ops->core->reset))(&(cx->sd_resetctrl), 2U); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function videobuf_poll_stream to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 16773: Ignoring function call through function pointer *(p->_qproc): (*(p->_qproc))(filp, wait_address, p); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 10708: Ignoring parameters passed as varargs to function cx18_vapi: cx18_vapi(cx, 268435457U, 2, 185, 0) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

line 10709: Ignoring parameters passed as varargs to function cx18_vapi: cx18_vapi(cx, 268435461U, 0) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

line 10710: Ignoring parameters passed as varargs to function cx18_vapi: cx18_vapi(cx, 268435458U, 1, 0) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

line 10739: Ignoring parameters passed as varargs to function cx18_vapi: cx18_vapi(cx, 268435457U, 2, 185, 0) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

line 10740: Ignoring parameters passed as varargs to function cx18_vapi: cx18_vapi(cx, 268435461U, 0) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

line 10741: Ignoring parameters passed as varargs to function cx18_vapi: cx18_vapi(cx, 268435458U, 1, 0) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

line 10744: Ignoring function call through function pointer *(cx->sd_av->ops->core->load_fw): (*(cx->sd_av->ops->core->load_fw))(cx->sd_av); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 18877: Ignoring function call through function pointer *(cx->sd_av->ops->video->s_mbus_fmt): (*(cx->sd_av->ops->video->s_mbus_fmt))(cx->sd_av, &mbus_fmt); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

lines 23555-23556: Ignoring function call through function pointer *(cx->sd_av->ops->video->s_routing): (*(cx->sd_av->ops->video->s_routing))(cx->sd_av, ((cx->card->video_inputs)[inp]).video_input, 0U, 0U); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 18972: Ignoring function call through function pointer *(cx->sd_av->ops->vbi->s_sliced_fmt): tmp___2 = (*(cx->sd_av->ops->vbi->s_sliced_fmt))(cx->sd_av, &(fmt->fmt.sliced)); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 19419: Ignoring function call through function pointer *(__sd->ops->tuner->s_frequency): (*(__sd->ops->tuner->s_frequency))(__sd, vf); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function schedule_timeout to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            82756 (15% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  72938 (88%)
  Because of loop head:            9797 (12%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         21 (0%)
  Times precision was empty:       81008 (98%)
  Times precision was {false}:     622 (1%)
  Times result was cached:         969 (1%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      157 (0%)
  Times result was 'false':        213 (0%)
Number of strengthen sat checks:   0
Number of coverage checks:         69498
  BDD entailment checks:           13582
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       262
Number of predicates discovered:          22
Number of abstraction locations:          69
Max number of predicates per location:    21
Avg number of predicates per location:    1
Total predicates per abstraction:         6960
Max number of predicates per abstraction: 21
Avg number of predicates per abstraction: 8.93
Number of irrelevant predicates:          6120 (88%)
Number of preds handled by boolean abs:   752 (11%)
  Total number of models for allsat:      1245318
  Max number of models for allsat:        393216
  Avg number of models for allsat:        7931.96

Time for post operator:                113.569s
  Time for path formula creation:      113.111s
Time for strengthen operator:            0.834s
Time for prec operator:                747.481s
  Time for abstraction:                744.854s (Max:   302.778s, Count: 82756)
    Boolean abstraction:               742.823s
    Solving time:                        0.807s (Max:     0.052s)
    Model enumeration time:            684.979s
    Time for BDD construction:          57.501s (Max:    15.366s)
Time for merge operator:                 5.043s
Time for coverage check:                 0.065s
  Time for BDD entailment checks:        0.054s
Total time for SMT solver (w/o itp):   685.786s

Number of path formula cache hits:   223626 (38%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:   106.309s

Total number of created targets for pointer analysis: 1558759
   Number of created targets for uf: *(void)* is 55
   Number of created targets for uf: *enum_v4l2_field is 25
   Number of created targets for uf: *(unsigned_char)* is 89
   Number of created targets for uf: *(struct_firmware)* is 22
   Number of created targets for uf: *enum_analog_signal_type is 85
   Number of created targets for uf: *(struct_cx18_card_tuner_i2c)* is 1051
   Number of created targets for uf: *unsigned_long_int is 40
   Number of created targets for uf: *unsigned_short_int is 7177
   Number of created targets for uf: *enum_videobuf_state is 13
   Number of created targets for uf: *signed_int is 1754
   Number of created targets for uf: *(char)* is 214
   Number of created targets for uf: *unsigned_char is 1345
   Number of created targets for uf: *(struct_list_head)* is 1513
   Number of created targets for uf: *(struct_cx18_card)* is 211
   Number of created targets for uf: *unsigned_long_long_int is 127
   Number of created targets for uf: *unsigned_int is 99721


Number of BDD nodes:                               185517
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        1241 (count: 99222, min: 0, max: 217, avg: 0.01)
Time for BDD node cleanup:                             0.034s
Time for BDD garbage collection:                       0.258s (in 74 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  1.354s
  Time for transition matches:                         0.768s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.000s
Automaton transfers with branching:                0
Automaton transfer successors:                       556542 (count: 556542, min: 1, max: 1, avg: 1.00) [1 x 556542]

CPA algorithm statistics
------------------------
Number of iterations:            317682
Max size of waitlist:            683
Average size of waitlist:        213
Number of computed successors:   368077
Max successors for one state:    2
Number of times merged:          27958
Number of times stopped:         41014
Number of times breaked:         21

Total time for CPA algorithm:       885.330s (Max:   361.097s)
  Time for choose from waitlist:      0.394s
  Time for precision adjustment:    752.024s
  Time for transfer relation:       123.145s
  Time for merge operator:            5.878s
  Time for stop operator:             0.735s
  Time for adding to reached set:     1.154s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   21
Avg. length of target path (in blocks):                 610 (count: 21, min: 10, max: 131, avg: 29.05)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   2.447s
  Counterexample analysis:                             1.515s (Max:     0.140s, Calls: 21)
    Refinement sat check:                              1.311s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.007s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.021s
  Precision update:                                    0.009s
  ARG update:                                          0.882s

Length of refined path (in blocks):                     268 (count: 21, min: 4, max: 68, avg: 12.76)
Number of affected states:                              105 (count: 21, min: 1, max: 67, avg: 5.00)
Length (states) of path with itp 'true':                142 (count: 21, min: 0, max: 57, avg: 6.76)
Length (states) of path with itp non-trivial itp:       105 (count: 21, min: 1, max: 67, avg: 5.00)
Length (states) of path with itp 'false':                21 (count: 21, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 21, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:              84 (count: 21, min: 0, max: 66, avg: 4.00)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                21
Number of successful refinements:     21
Number of failed refinements:         0
Max. size of reached set before ref.: 23161
Max. size of reached set after ref.:  891
Avg. size of reached set before ref.: 15609.95
Avg. size of reached set after ref.:  92.00

Total time for CEGAR algorithm:     888.066s
Time for refinements:                 2.733s
Average time for refinement:          0.130s
Max time for refinement:              0.307s

Code Coverage
-----------------------------
  Function coverage:      0.090
  Visited lines:          1945
  Total lines:            12602
  Line coverage:          0.154
  Visited conditions:     190
  Total conditions:       3860
  Condition coverage:     0.049

CPAchecker general statistics
-----------------------------
Number of program locations:     17835
Number of CFA edges:             20865
Number of relevant variables:    2904
Number of functions:             666
Number of loops:                 145
Size of reached set:             973
  Number of reached locations:   498 (3%)
    Avg states per location:     1
    Max states per location:     16 (at node N130)
  Number of reached functions:   60 (9%)
  Number of partitions:          972
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N1914 (before line 11135), Function main called from node N1881, stack depth 1 [1cd4082a], stack [main]])
  Number of target states:       0
  Size of final wait list        41

Time for analysis setup:         12.212s
  Time for loading CPAs:          1.229s
  Time for loading parser:        0.738s
  Time for CFA construction:     10.058s
    Time for parsing file(s):     1.738s
    Time for AST to CFA:          3.801s
    Time for CFA sanity check:    1.111s
    Time for post-processing:     3.249s
      Time for var class.:        1.309s
Time for Analysis:              888.066s
CPU time for analysis:          888.000s
Total time for CPAchecker:      900.284s
Total CPU time for CPAchecker:  900.190s
Time for statistics:              0.205s

Time for Garbage Collector:       9.285s (in 300 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                454MB (   433 MiB) max;    326MB (   311 MiB) avg;    463MB (   441 MiB) peak
Used non-heap memory:             43MB (    41 MiB) max;     41MB (    39 MiB) avg;     43MB (    41 MiB) peak
Allocated heap memory:           492MB (   469 MiB) max;    456MB (   435 MiB) avg
Allocated non-heap memory:        46MB (    44 MiB) max;     45MB (    43 MiB) avg
Total process virtual memory:   8218MB (  7837 MiB) max;   8148MB (  7770 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
