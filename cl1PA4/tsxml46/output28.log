scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.16-rc1/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--fmc--fmc-fakedev.ko-entry_point_true-unreach-call.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_d0_i4p5_/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

line 2172: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp = ldv_zalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 2180: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___3 = ldv_zalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 2184: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___5 = ldv_zalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 2194: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___10 = ldv_zalloc(80UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function delayed_work_timer_fn to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_probe_1 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_release_1 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fmc_device_unregister_n to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function cancel_delayed_work_sync to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_final_state to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _dev_info to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function request_firmware to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_warn to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function release_firmware to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_name to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function put_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function kmemdup to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fmc_device_register_n to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            15119 (16% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  11496 (76%)
  Because of loop head:            3589 (24%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         34 (0%)
  Times precision was empty:       5931 (39%)
  Times precision was {false}:     441 (3%)
  Times result was cached:         8494 (56%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      253 (2%)
  Times result was 'false':        920 (6%)
Number of strengthen sat checks:   0
Number of coverage checks:         17571
  BDD entailment checks:           6633
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       33
Number of predicates discovered:          5
Number of abstraction locations:          64
Max number of predicates per location:    4
Avg number of predicates per location:    1
Total predicates per abstraction:         12999
Max number of predicates per abstraction: 4
Avg number of predicates per abstraction: 18.73
Number of irrelevant predicates:          7464 (57%)
Number of preds handled by boolean abs:   323 (2%)
  Total number of models for allsat:      294
  Max number of models for allsat:        4
  Avg number of models for allsat:        1.16

Time for post operator:                  4.895s
  Time for path formula creation:        4.732s
Time for strengthen operator:            0.250s
Time for prec operator:                  4.925s
  Time for abstraction:                  4.279s (Max:     0.026s, Count: 15119)
    Boolean abstraction:                 0.461s
    Solving time:                        0.522s (Max:     0.013s)
    Model enumeration time:              0.045s
    Time for BDD construction:           0.072s (Max:     0.012s)
Time for merge operator:                 0.371s
Time for coverage check:                 0.138s
  Time for BDD entailment checks:        0.119s
Total time for SMT solver (w/o itp):     0.567s

Number of path formula cache hits:   75224 (71%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     4.309s

Total number of created targets for pointer analysis: 514
   Number of created targets for uf: *unsigned_int is 171
   Number of created targets for uf: *unsigned_long_int is 87


Number of BDD nodes:                               284
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         583 (count: 16660, min: 0, max: 81, avg: 0.03)
Time for BDD node cleanup:                             0.006s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.574s
  Time for transition matches:                         0.210s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.000s
Automaton transfers with branching:                0
Automaton transfer successors:                        91783 (count: 91783, min: 1, max: 1, avg: 1.00) [1 x 91783]

CPA algorithm statistics
------------------------
Number of iterations:            62501
Max size of waitlist:            63
Average size of waitlist:        17
Number of computed successors:   73236
Max successors for one state:    2
Number of times merged:          5469
Number of times stopped:         9738
Number of times breaked:         34

Total time for CPA algorithm:        17.091s (Max:     1.321s)
  Time for choose from waitlist:      0.204s
  Time for precision adjustment:      6.285s
  Time for transfer relation:         8.014s
  Time for merge operator:            0.686s
  Time for stop operator:             0.460s
  Time for adding to reached set:     0.461s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   34
Avg. length of target path (in blocks):                1248 (count: 34, min: 17, max: 53, avg: 36.71)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   1.430s
  Counterexample analysis:                             0.817s (Max:     0.040s, Calls: 34)
    Refinement sat check:                              0.511s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.004s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.055s
  Precision update:                                    0.029s
  ARG update:                                          0.454s

Length of refined path (in blocks):                    1133 (count: 34, min: 12, max: 52, avg: 33.32)
Number of affected states:                              915 (count: 34, min: 1, max: 51, avg: 26.91)
Length (states) of path with itp 'true':                184 (count: 34, min: 0, max: 26, avg: 5.41)
Length (states) of path with itp non-trivial itp:       915 (count: 34, min: 1, max: 51, avg: 26.91)
Length (states) of path with itp 'false':                34 (count: 34, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 34, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:             881 (count: 34, min: 0, max: 50, avg: 25.91)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                34
Number of successful refinements:     34
Number of failed refinements:         0
Max. size of reached set before ref.: 2971
Max. size of reached set after ref.:  822
Avg. size of reached set before ref.: 1889.41
Avg. size of reached set after ref.:  95.91

Total time for CEGAR algorithm:      18.685s
Time for refinements:                 1.588s
Average time for refinement:          0.046s
Max time for refinement:              0.108s

Code Coverage
-----------------------------
  Function coverage:      0.658
  Visited lines:          706
  Total lines:            757
  Line coverage:          0.933
  Visited conditions:     140
  Total conditions:       152
  Condition coverage:     0.921

CPAchecker general statistics
-----------------------------
Number of program locations:     1011
Number of CFA edges:             1083
Number of relevant variables:    103
Number of functions:             38
Number of loops:                 6
Size of reached set:             1600
  Number of reached locations:   383 (38%)
    Avg states per location:     4
    Max states per location:     21 (at node N242)
  Number of reached functions:   25 (66%)
  Number of partitions:          1597
    Avg size of partitions:      1
    Max size of partitions:      4 (with key [N462 (before line 2205), Function main called from node N397, stack depth 1 [5bfa8cc5], stack [main]])
  Number of target states:       0

Time for analysis setup:          4.074s
  Time for loading CPAs:          0.838s
  Time for loading parser:        0.668s
  Time for CFA construction:      2.413s
    Time for parsing file(s):     0.749s
    Time for AST to CFA:          0.771s
    Time for CFA sanity check:    0.149s
    Time for post-processing:     0.569s
      Time for var class.:        0.308s
Time for Analysis:               18.685s
CPU time for analysis:           18.680s
Time for analyzing result:        0.002s
Total time for CPAchecker:       22.771s
Total CPU time for CPAchecker:   22.760s
Time for statistics:              0.113s

Time for Garbage Collector:       0.412s (in 31 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 70MB (    67 MiB) max;     43MB (    41 MiB) avg;     73MB (    69 MiB) peak
Used non-heap memory:             39MB (    37 MiB) max;     34MB (    32 MiB) avg;     39MB (    37 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        40MB (    38 MiB) max;     36MB (    34 MiB) avg
Total process virtual memory:   8087MB (  7712 MiB) max;   8071MB (  7697 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
