scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.16-rc1/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--fmc--fmc-fakedev.ko-entry_point_true-unreach-call.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_rqitew5z/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

line 2172: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp = ldv_zalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 2180: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___3 = ldv_zalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 2184: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___5 = ldv_zalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 2194: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___10 = ldv_zalloc(80UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function delayed_work_timer_fn to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_probe_1 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_release_1 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _dev_info to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function request_firmware to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_warn to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function release_firmware to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fmc_device_unregister_n to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function cancel_delayed_work_sync to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_final_state to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_name to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function put_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function kmemdup to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fmc_device_register_n to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            16809 (16% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  12865 (77%)
  Because of loop head:            3909 (23%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         35 (0%)
  Times precision was empty:       6023 (36%)
  Times precision was {false}:     623 (4%)
  Times result was cached:         9827 (58%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      336 (2%)
  Times result was 'false':        950 (6%)
Number of strengthen sat checks:   0
Number of coverage checks:         19731
  BDD entailment checks:           7535
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       33
Number of predicates discovered:          5
Number of abstraction locations:          64
Max number of predicates per location:    4
Avg number of predicates per location:    1
Total predicates per abstraction:         14992
Max number of predicates per abstraction: 4
Avg number of predicates per abstraction: 15.63
Number of irrelevant predicates:          9234 (62%)
Number of preds handled by boolean abs:   442 (3%)
  Total number of models for allsat:      400
  Max number of models for allsat:        4
  Avg number of models for allsat:        1.19

Time for post operator:                  5.254s
  Time for path formula creation:        5.093s
Time for strengthen operator:            0.159s
Time for prec operator:                  5.379s
  Time for abstraction:                  4.677s (Max:     0.031s, Count: 16809)
    Boolean abstraction:                 0.594s
    Solving time:                        0.602s (Max:     0.015s)
    Model enumeration time:              0.049s
    Time for BDD construction:           0.110s (Max:     0.012s)
Time for merge operator:                 0.468s
Time for coverage check:                 0.035s
  Time for BDD entailment checks:        0.028s
Total time for SMT solver (w/o itp):     0.651s

Number of path formula cache hits:   85844 (73%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     4.547s

Total number of created targets for pointer analysis: 552
   Number of created targets for uf: *unsigned_int is 177
   Number of created targets for uf: *unsigned_long_int is 95


Number of BDD nodes:                               292
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         772 (count: 19103, min: 0, max: 129, avg: 0.04)
Time for BDD node cleanup:                             0.006s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.544s
  Time for transition matches:                         0.228s
  Time for transition assertions:                      0.001s
  Time for transition actions:                         0.001s
Automaton transfers with branching:                0
Automaton transfer successors:                       101910 (count: 101910, min: 1, max: 1, avg: 1.00) [1 x 101910]

CPA algorithm statistics
------------------------
Number of iterations:            69239
Max size of waitlist:            74
Average size of waitlist:        21
Number of computed successors:   81157
Max successors for one state:    2
Number of times merged:          6098
Number of times stopped:         10789
Number of times breaked:         35

Total time for CPA algorithm:        17.597s (Max:     1.252s)
  Time for choose from waitlist:      0.205s
  Time for precision adjustment:      6.645s
  Time for transfer relation:         8.223s
  Time for merge operator:            0.828s
  Time for stop operator:             0.399s
  Time for adding to reached set:     0.364s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   35
Avg. length of target path (in blocks):                1391 (count: 35, min: 18, max: 65, avg: 39.74)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   1.446s
  Counterexample analysis:                             0.902s (Max:     0.042s, Calls: 35)
    Refinement sat check:                              0.642s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.006s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.079s
  Precision update:                                    0.049s
  ARG update:                                          0.344s

Length of refined path (in blocks):                    1248 (count: 35, min: 12, max: 64, avg: 35.66)
Number of affected states:                             1029 (count: 35, min: 1, max: 63, avg: 29.40)
Length (states) of path with itp 'true':                184 (count: 35, min: 0, max: 26, avg: 5.26)
Length (states) of path with itp non-trivial itp:      1029 (count: 35, min: 1, max: 63, avg: 29.40)
Length (states) of path with itp 'false':                35 (count: 35, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 35, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:             994 (count: 35, min: 0, max: 62, avg: 28.40)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                35
Number of successful refinements:     35
Number of failed refinements:         0
Max. size of reached set before ref.: 3837
Max. size of reached set after ref.:  828
Avg. size of reached set before ref.: 2015.94
Avg. size of reached set after ref.:  78.94

Total time for CEGAR algorithm:      19.268s
Time for refinements:                 1.648s
Average time for refinement:          0.047s
Max time for refinement:              0.111s

Code Coverage
-----------------------------
  Function coverage:      0.658
  Visited lines:          706
  Total lines:            757
  Line coverage:          0.933
  Visited conditions:     140
  Total conditions:       152
  Condition coverage:     0.921

CPAchecker general statistics
-----------------------------
Number of program locations:     1011
Number of CFA edges:             1083
Number of relevant variables:    103
Number of functions:             38
Number of loops:                 6
Size of reached set:             1624
  Number of reached locations:   383 (38%)
    Avg states per location:     4
    Max states per location:     21 (at node N242)
  Number of reached functions:   25 (66%)
  Number of partitions:          1618
    Avg size of partitions:      1
    Max size of partitions:      4 (with key [N462 (before line 2205), Function main called from node N397, stack depth 1 [5bfa8cc5], stack [main]])
  Number of target states:       0

Time for analysis setup:          4.108s
  Time for loading CPAs:          0.865s
  Time for loading parser:        0.733s
  Time for CFA construction:      2.402s
    Time for parsing file(s):     0.790s
    Time for AST to CFA:          0.699s
    Time for CFA sanity check:    0.155s
    Time for post-processing:     0.592s
      Time for var class.:        0.308s
Time for Analysis:               19.268s
CPU time for analysis:           19.270s
Time for analyzing result:        0.001s
Total time for CPAchecker:       23.380s
Total CPU time for CPAchecker:   23.370s
Time for statistics:              0.137s

Time for Garbage Collector:       0.421s (in 34 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 69MB (    66 MiB) max;     44MB (    42 MiB) avg;     74MB (    70 MiB) peak
Used non-heap memory:             39MB (    37 MiB) max;     34MB (    33 MiB) avg;     40MB (    38 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        41MB (    39 MiB) max;     36MB (    34 MiB) avg
Total process virtual memory:   8087MB (  7712 MiB) max;   8070MB (  7696 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
