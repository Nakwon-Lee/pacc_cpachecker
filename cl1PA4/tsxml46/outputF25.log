scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.16-rc1/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--fmc--fmc-fakedev.ko-entry_point_true-unreach-call.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_71t08las/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

line 2172: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp = ldv_zalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 2180: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___3 = ldv_zalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 2184: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___5 = ldv_zalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 2194: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___10 = ldv_zalloc(80UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function delayed_work_timer_fn to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_probe_1 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_release_1 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fmc_device_unregister_n to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _dev_info to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function request_firmware to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_warn to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function release_firmware to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function cancel_delayed_work_sync to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_final_state to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_name to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function put_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function kmemdup to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fmc_device_register_n to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            7311 (13% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  5785 (79%)
  Because of loop head:            1493 (20%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         33 (0%)
  Times precision was empty:       2131 (29%)
  Times precision was {false}:     332 (5%)
  Times result was cached:         4618 (63%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      230 (3%)
  Times result was 'false':        852 (12%)
Number of strengthen sat checks:   0
Number of coverage checks:         10455
  BDD entailment checks:           2619
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       33
Number of predicates discovered:          5
Number of abstraction locations:          64
Max number of predicates per location:    4
Avg number of predicates per location:    1
Total predicates per abstraction:         7986
Max number of predicates per abstraction: 4
Avg number of predicates per abstraction: 14.21
Number of irrelevant predicates:          3860 (48%)
Number of preds handled by boolean abs:   296 (4%)
  Total number of models for allsat:      271
  Max number of models for allsat:        4
  Avg number of models for allsat:        1.18

Time for post operator:                  3.804s
  Time for path formula creation:        3.606s
Time for strengthen operator:            0.132s
Time for prec operator:                  3.747s
  Time for abstraction:                  3.315s (Max:     0.022s, Count: 7311)
    Boolean abstraction:                 0.411s
    Solving time:                        0.472s (Max:     0.015s)
    Model enumeration time:              0.029s
    Time for BDD construction:           0.028s (Max:     0.008s)
Time for merge operator:                 0.374s
Time for coverage check:                 0.039s
  Time for BDD entailment checks:        0.025s
Total time for SMT solver (w/o itp):     0.501s

Number of path formula cache hits:   43044 (70%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     3.189s

Total number of created targets for pointer analysis: 345
   Number of created targets for uf: *unsigned_int is 14
   Number of created targets for uf: *unsigned_long_int is 84


Number of BDD nodes:                               266
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         442 (count: 8189, min: 0, max: 86, avg: 0.05)
Time for BDD node cleanup:                             0.006s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.477s
Automaton transfers with branching:                0
Automaton transfer successors:                        54306 (count: 54306, min: 1, max: 1, avg: 1.00) [1 x 54306]

CPA algorithm statistics
------------------------
Number of iterations:            35671
Max size of waitlist:            70
Average size of waitlist:        28
Number of computed successors:   43090
Max successors for one state:    2
Number of times merged:          3918
Number of times stopped:         5260
Number of times breaked:         33

Total time for CPA algorithm:        12.920s (Max:     1.072s)
  Time for choose from waitlist:      0.264s
  Time for precision adjustment:      4.627s
  Time for transfer relation:         6.032s
  Time for merge operator:            0.705s
  Time for stop operator:             0.252s
  Time for adding to reached set:     0.262s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   33
Avg. length of target path (in blocks):                1233 (count: 33, min: 17, max: 54, avg: 37.36)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   1.207s
  Counterexample analysis:                             0.802s (Max:     0.038s, Calls: 33)
    Refinement sat check:                              0.573s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.099s
  Precision update:                                    0.037s
  ARG update:                                          0.214s

Length of refined path (in blocks):                    1124 (count: 33, min: 12, max: 53, avg: 34.06)
Number of affected states:                              959 (count: 33, min: 1, max: 52, avg: 29.06)
Length (states) of path with itp 'true':                132 (count: 33, min: 0, max: 26, avg: 4.00)
Length (states) of path with itp non-trivial itp:       959 (count: 33, min: 1, max: 52, avg: 29.06)
Length (states) of path with itp 'false':                33 (count: 33, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 33, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:             926 (count: 33, min: 0, max: 51, avg: 28.06)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                33
Number of successful refinements:     33
Number of failed refinements:         0
Max. size of reached set before ref.: 1924
Max. size of reached set after ref.:  351
Avg. size of reached set before ref.: 1107.18
Avg. size of reached set after ref.:  35.09

Total time for CEGAR algorithm:      14.300s
Time for refinements:                 1.377s
Average time for refinement:          0.041s
Max time for refinement:              0.078s

Code Coverage
-----------------------------
  Function coverage:      0.658
  Visited lines:          706
  Total lines:            757
  Line coverage:          0.933
  Visited conditions:     140
  Total conditions:       152
  Condition coverage:     0.921

CPAchecker general statistics
-----------------------------
Number of program locations:     1011
Number of CFA edges:             1083
Number of relevant variables:    103
Number of functions:             38
Number of loops:                 6
Size of reached set:             1600
  Number of reached locations:   383 (38%)
    Avg states per location:     4
    Max states per location:     21 (at node N242)
  Number of reached functions:   25 (66%)
  Number of partitions:          1597
    Avg size of partitions:      1
    Max size of partitions:      4 (with key [N462 (before line 2205), Function main called from node N397, stack depth 1 [5bfa8cc5], stack [main]])
  Number of target states:       0

Time for analysis setup:          4.266s
  Time for loading CPAs:          0.957s
  Time for loading parser:        0.733s
  Time for CFA construction:      2.468s
    Time for parsing file(s):     0.811s
    Time for AST to CFA:          0.782s
    Time for CFA sanity check:    0.157s
    Time for post-processing:     0.544s
      Time for var class.:        0.301s
Time for Analysis:               14.302s
CPU time for analysis:           14.290s
Time for analyzing result:        0.001s
Total time for CPAchecker:       18.572s
Total CPU time for CPAchecker:   18.560s
Time for statistics:              0.132s

Time for Garbage Collector:       0.251s (in 21 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 64MB (    61 MiB) max;     41MB (    39 MiB) avg;     68MB (    65 MiB) peak
Used non-heap memory:             38MB (    36 MiB) max;     33MB (    31 MiB) avg;     38MB (    36 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        39MB (    38 MiB) max;     35MB (    33 MiB) avg
Total process virtual memory:   8087MB (  7713 MiB) max;   8067MB (  7693 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
