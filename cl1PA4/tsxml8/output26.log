scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.16-rc1/205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--virtio_net.ko-entry_point_true-unreach-call.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_0pmy0rg9/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 8804: Dead code detected: tmp = virtio_cread8(vi->vdev, 6U); (CFACreationUtils.addEdgeToCFA, INFO)

line 8811: Dead code detected: tmp___0 = virtio_cread32(vi->vdev, 6U); (CFACreationUtils.addEdgeToCFA, INFO)

line 8815: Dead code detected: tmp___1 = virtio_cread64(vi->vdev, 6U); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (2UL) {
    case 1UL:
    tmp = virtio_cread8(vi->vdev, 6U);
    v = (u16 )tmp;
    goto ldv_43424;
    case 2UL:
    v = virtio_cread16(vi->vdev, 6U);
    goto ldv_43424;
    case 4UL:
    tmp___0 = virtio_cread32(vi->vdev, 6U);
    v = (u16 )tmp___0;
    goto ldv_43424;
    case 8UL:
    tmp___1 = virtio_cread64(vi->vdev, 6U);
    v = (u16 )tmp___1;
    goto ldv_43424;
    default:
    __asm__ volatile ("1:\tud2\n.pushsection __bug_table,\"a\"\n2:\t.long 1b - 2b, %c0 - 2b\n\t.word %c1, 0\n\t.org 2b+%c2\n.popsection": : "i" ((char *)"/work/ldvuser/mutilin/launch/work/current--X--drivers/net/--X--defaultlinux-3.16-rc1.tar.xz--X--205_9a--X--cpachecker/linux-3.16-rc1.tar.xz/csd_deg_dscv/1796/dscv_tempdir/dscv/ri/205_9a/drivers/net/virtio_net.o.c.prepared"),
                         "i" (1400), "i" (12UL));
    ldv_43429: ;
    goto ldv_43429;
    } (CFACreationUtils.addEdgeToCFA, INFO)

line 9322: Dead code detected: tmp = virtio_cread8(vdev, 8U); (CFACreationUtils.addEdgeToCFA, INFO)

line 9329: Dead code detected: tmp___0 = virtio_cread32(vdev, 8U); (CFACreationUtils.addEdgeToCFA, INFO)

line 9333: Dead code detected: tmp___1 = virtio_cread64(vdev, 8U); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (2UL) {
    case 1UL:
    tmp = virtio_cread8(vdev, 8U);
    max_queue_pairs = (u16 )tmp;
    goto ldv_43550;
    case 2UL:
    max_queue_pairs = virtio_cread16(vdev, 8U);
    goto ldv_43550;
    case 4UL:
    tmp___0 = virtio_cread32(vdev, 8U);
    max_queue_pairs = (u16 )tmp___0;
    goto ldv_43550;
    case 8UL:
    tmp___1 = virtio_cread64(vdev, 8U);
    max_queue_pairs = (u16 )tmp___1;
    goto ldv_43550;
    default:
    __asm__ volatile ("1:\tud2\n.pushsection __bug_table,\"a\"\n2:\t.long 1b - 2b, %c0 - 2b\n\t.word %c1, 0\n\t.org 2b+%c2\n.popsection": : "i" ((char *)"/work/ldvuser/mutilin/launch/work/current--X--drivers/net/--X--defaultlinux-3.16-rc1.tar.xz--X--205_9a--X--cpachecker/linux-3.16-rc1.tar.xz/csd_deg_dscv/1796/dscv_tempdir/dscv/ri/205_9a/drivers/net/virtio_net.o.c.prepared"),
                         "i" (1668), "i" (12UL));
    ldv_43555: ;
    goto ldv_43555;
    } (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 5860: Function pointer *(skb->destructor) with type void (*)(struct sk_buff *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6546: Function pointer *(vdev->config->bus_name) with type const char *(*)(struct virtio_device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6601: Function pointer *(vdev->config->get) with type void (*)(struct virtio_device *, unsigned int, void *, unsigned int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6610: Function pointer *(vdev->config->get) with type void (*)(struct virtio_device *, unsigned int, void *, unsigned int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6619: Function pointer *(vdev->config->get) with type void (*)(struct virtio_device *, unsigned int, void *, unsigned int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6572: Function pointer *(vdev->config->get) with type void (*)(struct virtio_device *, unsigned int, void *, unsigned int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6582: Function pointer *(vdev->config->get) with type void (*)(struct virtio_device *, unsigned int, void *, unsigned int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6592: Function pointer *(vdev->config->set) with type void (*)(struct virtio_device *, unsigned int, const void *, unsigned int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 9093-9094: Function pointer *(vi->vdev->config->find_vqs) with type int (*)(struct virtio_device *, unsigned int, struct virtqueue **, vq_callback_t **, const char **) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6559: Function pointer *(vdev->config->set_vq_affinity) with type int (*)(struct virtqueue *, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

line 9868: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp = ldv_zalloc(36UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 9870: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___0 = ldv_zalloc(196UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 9880: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___5 = ldv_zalloc(184UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 9884: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___7 = ldv_zalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 9888: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___9 = ldv_zalloc(48UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ndo_uninit_3 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ndo_init_3 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function eth_validate_addr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ethtool_op_get_link to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function unregister_cpu_notifier to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock_nested to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netif_device_detach to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function cancel_delayed_work_sync to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function unregister_virtio_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function register_virtio_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function find_next_bit to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function eth_prepare_mac_addr_change to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function virtqueue_get_buf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sg_init_one to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __might_sleep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function unregister_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 9626: Ignoring function call through function pointer *(vi->vdev->config->reset): (*(vi->vdev->config->reset))(vi->vdev); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Recursion detected, aborting. To ignore recursion, add -skipRecursion to the command line. (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, INFO)

Error: line 9626: Unsupported feature (recursion): virtnet_remove(vi->vdev); (line was originally pointer call(virtnet_remove) (*(((vi->vdev)->config)->reset))(vi->vdev);) (CallstackTransferRelation.getAbstractSuccessorsForEdge, SEVERE)

PredicateCPA statistics
-----------------------
Number of abstractions:            1636 (15% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  1320 (81%)
  Because of loop head:            313 (19%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         3 (0%)
  Times precision was empty:       1552 (95%)
  Times precision was {false}:     29 (2%)
  Times result was cached:         22 (1%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      33 (2%)
  Times result was 'false':        8 (0%)
Number of strengthen sat checks:   0
Number of coverage checks:         788
  BDD entailment checks:           244
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       46
Number of predicates discovered:          5
Number of abstraction locations:          10
Max number of predicates per location:    2
Avg number of predicates per location:    1
Total predicates per abstraction:         103
Max number of predicates per abstraction: 2
Avg number of predicates per abstraction: 1.66
Number of irrelevant predicates:          61 (59%)
Number of preds handled by boolean abs:   35 (34%)
  Total number of models for allsat:      36
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.09

Time for post operator:                  2.088s
  Time for path formula creation:        2.056s
Time for strengthen operator:            0.090s
Time for prec operator:                  0.549s
  Time for abstraction:                  0.388s (Max:     0.022s, Count: 1636)
    Boolean abstraction:                 0.081s
    Solving time:                        0.094s (Max:     0.013s)
    Model enumeration time:              0.005s
    Time for BDD construction:           0.001s (Max:     0.001s)
Time for merge operator:                 0.096s
Time for coverage check:                 0.016s
  Time for BDD entailment checks:        0.016s
Total time for SMT solver (w/o itp):     0.099s

Number of path formula cache hits:   6042 (50%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     1.915s

Total number of created targets for pointer analysis: 1600
   Number of created targets for uf: *unsigned_long_int is 1601


Number of BDD nodes:                               203
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                          77 (count: 2156, min: 0, max: 39, avg: 0.04)
Time for BDD node cleanup:                             0.002s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.139s
Automaton transfers with branching:                0
Automaton transfer successors:                        11033 (count: 11033, min: 1, max: 1, avg: 1.00) [1 x 11033]

CPA algorithm statistics
------------------------
Number of iterations:            5092
Max size of waitlist:            129
Average size of waitlist:        67
Number of computed successors:   5840
Max successors for one state:    2
Number of times merged:          272
Number of times stopped:         481
Number of times breaked:         3

Total time for CPA algorithm:         4.168s (Max:     1.992s)
  Time for choose from waitlist:      0.058s
  Time for precision adjustment:      0.798s
  Time for transfer relation:         2.842s
  Time for merge operator:            0.150s
  Time for stop operator:             0.072s
  Time for adding to reached set:     0.081s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   3
Avg. length of target path (in blocks):                 107 (count: 3, min: 28, max: 41, avg: 35.67)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.187s
  Counterexample analysis:                             0.106s (Max:     0.048s, Calls: 3)
    Refinement sat check:                              0.059s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.001s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.019s
  Precision update:                                    0.001s
  ARG update:                                          0.048s

Length of refined path (in blocks):                      83 (count: 3, min: 22, max: 34, avg: 27.67)
Number of affected states:                               19 (count: 3, min: 1, max: 10, avg: 6.33)
Length (states) of path with itp 'true':                 61 (count: 3, min: 18, max: 23, avg: 20.33)
Length (states) of path with itp non-trivial itp:        19 (count: 3, min: 1, max: 10, avg: 6.33)
Length (states) of path with itp 'false':                 3 (count: 3, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           1 (count: 3, min: 0, max: 1, avg: 0.33)
Equal non-trivial interpolants along paths:              15 (count: 3, min: 0, max: 9, avg: 5.00)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                3
Number of successful refinements:     3
Number of failed refinements:         0
Max. size of reached set before ref.: 1919
Max. size of reached set after ref.:  1218
Avg. size of reached set before ref.: 1494.67
Avg. size of reached set after ref.:  466.00

Total time for CEGAR algorithm:       4.425s
Time for refinements:                 0.247s
Average time for refinement:          0.082s
Max time for refinement:              0.115s

Code Coverage
-----------------------------
  Function coverage:      0.292
  Visited lines:          1624
  Total lines:            3839
  Line coverage:          0.423
  Visited conditions:     206
  Total conditions:       820
  Condition coverage:     0.251

CPAchecker general statistics
-----------------------------
Number of program locations:     5307
Number of CFA edges:             5945
Number of relevant variables:    929
Number of functions:             195
Number of loops:                 62
Size of reached set:             2266
  Number of reached locations:   527 (10%)
    Avg states per location:     4
    Max states per location:     87 (at node N668)
  Number of reached functions:   57 (29%)
  Number of partitions:          2263
    Avg size of partitions:      1
    Max size of partitions:      3 (with key [N3913 (before line 9900), Function main called from node N3850, stack depth 1 [10f7918f], stack [main]])
  Number of target states:       0
  Size of final wait list        124

Time for analysis setup:          6.412s
  Time for loading CPAs:          0.988s
  Time for loading parser:        0.724s
  Time for CFA construction:      4.594s
    Time for parsing file(s):     1.154s
    Time for AST to CFA:          1.725s
    Time for CFA sanity check:    0.339s
    Time for post-processing:     1.163s
      Time for var class.:        0.545s
Time for Analysis:                4.425s
CPU time for analysis:            4.420s
Total time for CPAchecker:       10.841s
Total CPU time for CPAchecker:   10.820s
Time for statistics:              0.146s

Time for Garbage Collector:       0.247s (in 13 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 70MB (    67 MiB) max;     41MB (    39 MiB) avg;     73MB (    70 MiB) peak
Used non-heap memory:             36MB (    35 MiB) max;     28MB (    27 MiB) avg;     37MB (    35 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        38MB (    36 MiB) max;     30MB (    28 MiB) avg
Total process virtual memory:   8086MB (  7711 MiB) max;   8049MB (  7676 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
