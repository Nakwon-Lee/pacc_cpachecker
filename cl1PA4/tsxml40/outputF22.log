scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.16-rc1/205_9a_array_safes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--wan--x25_asy.ko-entry_point_true-unreach-call.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_vpjin6ji/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

lines 5859-5860: Dead code detected: __asm__ volatile ("xchgb %b0, %1\n": "+q" (__ret), "+m" (sl->xbuff): : "memory",
                       "cc"); (CFACreationUtils.addEdgeToCFA, INFO)

lines 5863-5864: Dead code detected: __asm__ volatile ("xchgw %w0, %1\n": "+r" (__ret), "+m" (sl->xbuff): : "memory",
                       "cc"); (CFACreationUtils.addEdgeToCFA, INFO)

lines 5867-5868: Dead code detected: __asm__ volatile ("xchgl %0, %1\n": "+r" (__ret), "+m" (sl->xbuff): : "memory",
                       "cc"); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (8UL) {
  case 1UL:
  __asm__ volatile ("xchgb %b0, %1\n": "+q" (__ret), "+m" (sl->xbuff): : "memory",
                       "cc");
  goto ldv_42980;
  case 2UL:
  __asm__ volatile ("xchgw %w0, %1\n": "+r" (__ret), "+m" (sl->xbuff): : "memory",
                       "cc");
  goto ldv_42980;
  case 4UL:
  __asm__ volatile ("xchgl %0, %1\n": "+r" (__ret), "+m" (sl->xbuff): : "memory",
                       "cc");
  goto ldv_42980;
  case 8UL:
  __asm__ volatile ("xchgq %q0, %1\n": "+r" (__ret), "+m" (sl->xbuff): : "memory",
                       "cc");
  goto ldv_42980;
  default:
  __xchg_wrong_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

lines 5894-5895: Dead code detected: __asm__ volatile ("xchgb %b0, %1\n": "+q" (__ret___1), "+m" (sl->rbuff): : "memory",
                       "cc"); (CFACreationUtils.addEdgeToCFA, INFO)

lines 5898-5899: Dead code detected: __asm__ volatile ("xchgw %w0, %1\n": "+r" (__ret___1), "+m" (sl->rbuff): : "memory",
                       "cc"); (CFACreationUtils.addEdgeToCFA, INFO)

lines 5902-5903: Dead code detected: __asm__ volatile ("xchgl %0, %1\n": "+r" (__ret___1), "+m" (sl->rbuff): : "memory",
                       "cc"); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (8UL) {
  case 1UL:
  __asm__ volatile ("xchgb %b0, %1\n": "+q" (__ret___1), "+m" (sl->rbuff): : "memory",
                       "cc");
  goto ldv_42991;
  case 2UL:
  __asm__ volatile ("xchgw %w0, %1\n": "+r" (__ret___1), "+m" (sl->rbuff): : "memory",
                       "cc");
  goto ldv_42991;
  case 4UL:
  __asm__ volatile ("xchgl %0, %1\n": "+r" (__ret___1), "+m" (sl->rbuff): : "memory",
                       "cc");
  goto ldv_42991;
  case 8UL:
  __asm__ volatile ("xchgq %q0, %1\n": "+r" (__ret___1), "+m" (sl->rbuff): : "memory",
                       "cc");
  goto ldv_42991;
  default:
  __xchg_wrong_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

lines 6011-6012: Function pointer *(sl->tty->ops->write) with type int (*)(struct tty_struct *, const unsigned char *, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6051: Function pointer *(tty->ops->write) with type int (*)(struct tty_struct *, const unsigned char *, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

line 6803: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___2 = ldv_zalloc(512UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 6813: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___7 = ldv_zalloc(512UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function ldv_ndo_uninit_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ndo_init_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_probe_3 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tty_register_ldisc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function skb_put to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netdev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 5388: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size(from, 0); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function __builtin_object_size to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function might_fault to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _copy_to_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __copy_to_user_overflow to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tty_chars_in_buffer to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netdev_warn to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __netif_schedule to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rtnl_lock to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_close to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rtnl_unlock to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function lapb_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 6051: Ignoring function call through function pointer *(tty->ops->write): actual = (*(tty->ops->write))(tty, __CPAchecker_TMP_2, sl->xleft); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function tty_unregister_ldisc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock_bh to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tty_hangup to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_bh to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function unregister_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function skb_push to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function lapb_data_received to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function lapb_disconnect_request to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function lapb_connect_request to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function skb_pull to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function lapb_data_request to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

lines 6011-6012: Ignoring function call through function pointer *(sl->tty->ops->write): actual = (*(sl->tty->ops->write))(sl->tty, __CPAchecker_TMP_1, count); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function tty_driver_flush_buffer to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tty_ldisc_flush to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function alloc_netdev_mqs to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function register_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function lapb_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            340339 (22% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  290910 (85%)
  Because of loop head:            49252 (14%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         177 (0%)
  Times precision was empty:       96074 (28%)
  Times precision was {false}:     3269 (1%)
  Times result was cached:         191848 (56%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      49148 (14%)
  Times result was 'false':        18819 (6%)
Number of strengthen sat checks:   0
Number of coverage checks:         1378682
  BDD entailment checks:           1255504
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       45
Number of predicates discovered:          79
Number of abstraction locations:          164
Max number of predicates per location:    65
Avg number of predicates per location:    6
Total predicates per abstraction:         4499441
Max number of predicates per abstraction: 65
Avg number of predicates per abstraction: 85.84
Number of irrelevant predicates:          254777 (6%)
Number of preds handled by boolean abs:   1928145 (43%)
  Total number of models for allsat:      1209067
  Max number of models for allsat:        126
  Avg number of models for allsat:        24.60

Time for post operator:                 16.638s
  Time for path formula creation:       15.759s
Time for strengthen operator:            1.580s
Time for prec operator:                816.011s
  Time for abstraction:                811.206s (Max:     0.460s, Count: 340339)
    Boolean abstraction:               451.611s
    Solving time:                      201.169s (Max:     0.023s)
    Model enumeration time:            117.242s
    Time for BDD construction:          82.824s (Max:     0.268s)
Time for merge operator:                 0.965s
Time for coverage check:                 2.581s
  Time for BDD entailment checks:        2.392s
Total time for SMT solver (w/o itp):   318.412s

Number of path formula cache hits:   1789805 (94%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    11.133s

Total number of created targets for pointer analysis: 13839
   Number of created targets for uf: *(void)* is 757
   Number of created targets for uf: *(struct_net_device)* is 79
   Number of created targets for uf: *unsigned_char is 54
   Number of created targets for uf: *(unsigned_char)* is 77
   Number of created targets for uf: *char is 1101
   Number of created targets for uf: *unsigned_int is 17
   Number of created targets for uf: *unsigned_long_int is 77


Number of BDD nodes:                               231162
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                      326053 (count: 1759408, min: 0, max: 1246, avg: 0.19)
Time for BDD node cleanup:                             0.320s
Time for BDD garbage collection:                       0.071s (in 10 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  2.911s
  Time for transition matches:                         1.794s
  Time for transition assertions:                      0.002s
  Time for transition actions:                         0.000s
Automaton transfers with branching:                0
Automaton transfer successors:                      1557252 (count: 1557252, min: 1, max: 1, avg: 1.00) [1 x 1557252]

CPA algorithm statistics
------------------------
Number of iterations:            1120036
Max size of waitlist:            49
Average size of waitlist:        19
Number of computed successors:   1254865
Max successors for one state:    2
Number of times merged:          61589
Number of times stopped:         113649
Number of times breaked:         177

Total time for CPA algorithm:       875.814s (Max:    25.267s)
  Time for choose from waitlist:      0.641s
  Time for precision adjustment:    825.501s
  Time for transfer relation:        35.069s
  Time for merge operator:            3.143s
  Time for stop operator:             4.877s
  Time for adding to reached set:     2.304s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   177
Avg. length of target path (in blocks):               15391 (count: 177, min: 23, max: 137, avg: 86.95)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  17.692s
  Counterexample analysis:                            15.208s (Max:     0.323s, Calls: 177)
    Refinement sat check:                              4.527s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.011s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.171s
  Precision update:                                    0.174s
  ARG update:                                          1.940s

Length of refined path (in blocks):                   14390 (count: 177, min: 16, max: 132, avg: 81.30)
Number of affected states:                            13519 (count: 177, min: 1, max: 131, avg: 76.38)
Length (states) of path with itp 'true':                694 (count: 177, min: 0, max: 39, avg: 3.92)
Length (states) of path with itp non-trivial itp:     13519 (count: 177, min: 1, max: 131, avg: 76.38)
Length (states) of path with itp 'false':               177 (count: 177, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:        4265 (count: 177, min: 0, max: 65, avg: 24.10)
Equal non-trivial interpolants along paths:            9077 (count: 177, min: 0, max: 80, avg: 51.28)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                177
Number of successful refinements:     177
Number of failed refinements:         0
Max. size of reached set before ref.: 9455
Max. size of reached set after ref.:  2989
Avg. size of reached set before ref.: 6447.02
Avg. size of reached set after ref.:  125.97

Total time for CEGAR algorithm:     894.430s
Time for refinements:                18.588s
Average time for refinement:          0.105s
Max time for refinement:              0.341s

Code Coverage
-----------------------------
  Function coverage:      0.648
  Visited lines:          1575
  Total lines:            2011
  Line coverage:          0.783
  Visited conditions:     268
  Total conditions:       358
  Condition coverage:     0.749

CPAchecker general statistics
-----------------------------
Number of program locations:     2659
Number of CFA edges:             2903
Number of relevant variables:    342
Number of functions:             105
Number of loops:                 10
Size of reached set:             3571
  Number of reached locations:   769 (29%)
    Avg states per location:     4
    Max states per location:     83 (at node N1141)
  Number of reached functions:   68 (65%)
  Number of partitions:          3306
    Avg size of partitions:      1
    Max size of partitions:      42 (with key [N1156 (before line 6706), Function exit_x25_asy called from node N1355, stack depth 2 [3cf530b0], stack [main, exit_x25_asy]])
  Number of target states:       0
  Size of final wait list        18

Time for analysis setup:          5.833s
  Time for loading CPAs:          1.004s
  Time for loading parser:        0.672s
  Time for CFA construction:      3.993s
    Time for parsing file(s):     1.093s
    Time for AST to CFA:          1.428s
    Time for CFA sanity check:    0.260s
    Time for post-processing:     1.022s
      Time for var class.:        0.369s
Time for Analysis:              894.430s
CPU time for analysis:          894.230s
Total time for CPAchecker:      900.267s
Total CPU time for CPAchecker:  900.050s
Time for statistics:              0.121s

Time for Garbage Collector:      21.468s (in 2169 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                246MB (   235 MiB) max;    144MB (   137 MiB) avg;    255MB (   243 MiB) peak
Used non-heap memory:             40MB (    38 MiB) max;     39MB (    37 MiB) avg;     41MB (    39 MiB) peak
Allocated heap memory:           272MB (   259 MiB) max;    210MB (   201 MiB) avg
Allocated non-heap memory:        43MB (    41 MiB) max;     42MB (    40 MiB) avg
Total process virtual memory:  11860MB ( 11311 MiB) max;   9598MB (  9153 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
