scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.16-rc1/205_9a_array_safes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--wan--x25_asy.ko-entry_point_true-unreach-call.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_9o78p8r9/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

lines 5859-5860: Dead code detected: __asm__ volatile ("xchgb %b0, %1\n": "+q" (__ret), "+m" (sl->xbuff): : "memory",
                       "cc"); (CFACreationUtils.addEdgeToCFA, INFO)

lines 5863-5864: Dead code detected: __asm__ volatile ("xchgw %w0, %1\n": "+r" (__ret), "+m" (sl->xbuff): : "memory",
                       "cc"); (CFACreationUtils.addEdgeToCFA, INFO)

lines 5867-5868: Dead code detected: __asm__ volatile ("xchgl %0, %1\n": "+r" (__ret), "+m" (sl->xbuff): : "memory",
                       "cc"); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (8UL) {
  case 1UL:
  __asm__ volatile ("xchgb %b0, %1\n": "+q" (__ret), "+m" (sl->xbuff): : "memory",
                       "cc");
  goto ldv_42980;
  case 2UL:
  __asm__ volatile ("xchgw %w0, %1\n": "+r" (__ret), "+m" (sl->xbuff): : "memory",
                       "cc");
  goto ldv_42980;
  case 4UL:
  __asm__ volatile ("xchgl %0, %1\n": "+r" (__ret), "+m" (sl->xbuff): : "memory",
                       "cc");
  goto ldv_42980;
  case 8UL:
  __asm__ volatile ("xchgq %q0, %1\n": "+r" (__ret), "+m" (sl->xbuff): : "memory",
                       "cc");
  goto ldv_42980;
  default:
  __xchg_wrong_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

lines 5894-5895: Dead code detected: __asm__ volatile ("xchgb %b0, %1\n": "+q" (__ret___1), "+m" (sl->rbuff): : "memory",
                       "cc"); (CFACreationUtils.addEdgeToCFA, INFO)

lines 5898-5899: Dead code detected: __asm__ volatile ("xchgw %w0, %1\n": "+r" (__ret___1), "+m" (sl->rbuff): : "memory",
                       "cc"); (CFACreationUtils.addEdgeToCFA, INFO)

lines 5902-5903: Dead code detected: __asm__ volatile ("xchgl %0, %1\n": "+r" (__ret___1), "+m" (sl->rbuff): : "memory",
                       "cc"); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (8UL) {
  case 1UL:
  __asm__ volatile ("xchgb %b0, %1\n": "+q" (__ret___1), "+m" (sl->rbuff): : "memory",
                       "cc");
  goto ldv_42991;
  case 2UL:
  __asm__ volatile ("xchgw %w0, %1\n": "+r" (__ret___1), "+m" (sl->rbuff): : "memory",
                       "cc");
  goto ldv_42991;
  case 4UL:
  __asm__ volatile ("xchgl %0, %1\n": "+r" (__ret___1), "+m" (sl->rbuff): : "memory",
                       "cc");
  goto ldv_42991;
  case 8UL:
  __asm__ volatile ("xchgq %q0, %1\n": "+r" (__ret___1), "+m" (sl->rbuff): : "memory",
                       "cc");
  goto ldv_42991;
  default:
  __xchg_wrong_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

lines 6011-6012: Function pointer *(sl->tty->ops->write) with type int (*)(struct tty_struct *, const unsigned char *, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6051: Function pointer *(tty->ops->write) with type int (*)(struct tty_struct *, const unsigned char *, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

line 6803: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___2 = ldv_zalloc(512UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 6813: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___7 = ldv_zalloc(512UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function ldv_ndo_uninit_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ndo_init_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_probe_3 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function alloc_netdev_mqs to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rtnl_lock to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_close to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rtnl_unlock to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function lapb_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tty_unregister_ldisc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 5388: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size(from, 0); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function __builtin_object_size to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function might_fault to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tty_driver_flush_buffer to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tty_ldisc_flush to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netdev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _copy_to_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __copy_to_user_overflow to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function register_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock_bh to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_bh to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tty_chars_in_buffer to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netdev_warn to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __netif_schedule to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function lapb_disconnect_request to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function lapb_connect_request to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function skb_pull to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function lapb_data_request to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function skb_put to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tty_register_ldisc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            20523 (17% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  18343 (89%)
  Because of loop head:            2149 (10%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         31 (0%)
  Times precision was empty:       14988 (73%)
  Times precision was {false}:     954 (5%)
  Times result was cached:         4286 (21%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      295 (1%)
  Times result was 'false':        722 (4%)
Number of strengthen sat checks:   0
Number of coverage checks:         19431
  BDD entailment checks:           4903
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       45
Number of predicates discovered:          10
Number of abstraction locations:          58
Max number of predicates per location:    7
Avg number of predicates per location:    1
Total predicates per abstraction:         9892
Max number of predicates per abstraction: 7
Avg number of predicates per abstraction: 7.92
Number of irrelevant predicates:          6336 (64%)
Number of preds handled by boolean abs:   571 (6%)
  Total number of models for allsat:      772
  Max number of models for allsat:        24
  Avg number of models for allsat:        2.62

Time for post operator:                  8.399s
  Time for path formula creation:        8.157s
Time for strengthen operator:            0.247s
Time for prec operator:                  6.082s
  Time for abstraction:                  5.448s (Max:     0.035s, Count: 20523)
    Boolean abstraction:                 0.978s
    Solving time:                        1.191s (Max:     0.016s)
    Model enumeration time:              0.297s
    Time for BDD construction:           0.088s (Max:     0.012s)
Time for merge operator:                 0.546s
Time for coverage check:                 0.045s
  Time for BDD entailment checks:        0.029s
Total time for SMT solver (w/o itp):     1.488s

Number of path formula cache hits:   94597 (67%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     7.451s

Total number of created targets for pointer analysis: 3856
   Number of created targets for uf: *(void)* is 945
   Number of created targets for uf: *(struct_net_device)* is 3
   Number of created targets for uf: *unsigned_char is 2
   Number of created targets for uf: *(unsigned_char)* is 2
   Number of created targets for uf: *unsigned_int is 3
   Number of created targets for uf: *char is 884
   Number of created targets for uf: *unsigned_long_int is 63


Number of BDD nodes:                               651
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         772 (count: 26793, min: 0, max: 141, avg: 0.03)
Time for BDD node cleanup:                             0.010s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.649s
  Time for transition matches:                         0.292s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.013s
Automaton transfers with branching:                0
Automaton transfer successors:                       123224 (count: 123224, min: 1, max: 1, avg: 1.00) [1 x 123224]

CPA algorithm statistics
------------------------
Number of iterations:            78451
Max size of waitlist:            220
Average size of waitlist:        101
Number of computed successors:   93211
Max successors for one state:    2
Number of times merged:          7264
Number of times stopped:         10295
Number of times breaked:         31

Total time for CPA algorithm:        23.096s (Max:     1.797s)
  Time for choose from waitlist:      0.233s
  Time for precision adjustment:      7.738s
  Time for transfer relation:        12.086s
  Time for merge operator:            0.985s
  Time for stop operator:             0.383s
  Time for adding to reached set:     0.511s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   31
Avg. length of target path (in blocks):                1296 (count: 31, min: 23, max: 62, avg: 41.81)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   1.564s
  Counterexample analysis:                             1.017s (Max:     0.057s, Calls: 31)
    Refinement sat check:                              0.664s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.008s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.082s
  Precision update:                                    0.037s
  ARG update:                                          0.366s

Length of refined path (in blocks):                    1038 (count: 31, min: 16, max: 61, avg: 33.48)
Number of affected states:                              569 (count: 31, min: 1, max: 48, avg: 18.35)
Length (states) of path with itp 'true':                438 (count: 31, min: 12, max: 27, avg: 14.13)
Length (states) of path with itp non-trivial itp:       569 (count: 31, min: 1, max: 48, avg: 18.35)
Length (states) of path with itp 'false':                31 (count: 31, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:          16 (count: 31, min: 0, max: 1, avg: 0.52)
Equal non-trivial interpolants along paths:             522 (count: 31, min: 0, max: 46, avg: 16.84)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                31
Number of successful refinements:     31
Number of failed refinements:         0
Max. size of reached set before ref.: 4465
Max. size of reached set after ref.:  715
Avg. size of reached set before ref.: 2667.68
Avg. size of reached set after ref.:  140.29

Total time for CEGAR algorithm:      24.879s
Time for refinements:                 1.781s
Average time for refinement:          0.057s
Max time for refinement:              0.139s

Code Coverage
-----------------------------
  Function coverage:      0.533
  Visited lines:          1500
  Total lines:            2011
  Line coverage:          0.746
  Visited conditions:     238
  Total conditions:       358
  Condition coverage:     0.665

CPAchecker general statistics
-----------------------------
Number of program locations:     2659
Number of CFA edges:             2903
Number of relevant variables:    342
Number of functions:             105
Number of loops:                 10
Size of reached set:             3845
  Number of reached locations:   621 (23%)
    Avg states per location:     6
    Max states per location:     127 (at node N179)
  Number of reached functions:   56 (53%)
  Number of partitions:          3826
    Avg size of partitions:      1
    Max size of partitions:      7 (with key [N1262 (before line 6834), Function main called from node N1189, stack depth 1 [325f7fa9], stack [main]])
  Number of target states:       0
  Size of final wait list        213

Time for analysis setup:          5.410s
  Time for loading CPAs:          0.982s
  Time for loading parser:        0.643s
  Time for CFA construction:      3.681s
    Time for parsing file(s):     1.044s
    Time for AST to CFA:          1.324s
    Time for CFA sanity check:    0.224s
    Time for post-processing:     0.889s
      Time for var class.:        0.391s
Time for Analysis:               24.879s
CPU time for analysis:           24.880s
Total time for CPAchecker:       30.294s
Total CPU time for CPAchecker:   30.280s
Time for statistics:              0.189s

Time for Garbage Collector:       0.663s (in 43 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 83MB (    80 MiB) max;     51MB (    49 MiB) avg;     85MB (    81 MiB) peak
Used non-heap memory:             41MB (    39 MiB) max;     35MB (    33 MiB) avg;     41MB (    39 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        43MB (    41 MiB) max;     37MB (    35 MiB) avg
Total process virtual memory:   8087MB (  7713 MiB) max;   8074MB (  7700 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
