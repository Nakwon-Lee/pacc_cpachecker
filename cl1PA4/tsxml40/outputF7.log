scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.16-rc1/205_9a_array_safes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--wan--x25_asy.ko-entry_point_true-unreach-call.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_xyhgpdm7/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

lines 5859-5860: Dead code detected: __asm__ volatile ("xchgb %b0, %1\n": "+q" (__ret), "+m" (sl->xbuff): : "memory",
                       "cc"); (CFACreationUtils.addEdgeToCFA, INFO)

lines 5863-5864: Dead code detected: __asm__ volatile ("xchgw %w0, %1\n": "+r" (__ret), "+m" (sl->xbuff): : "memory",
                       "cc"); (CFACreationUtils.addEdgeToCFA, INFO)

lines 5867-5868: Dead code detected: __asm__ volatile ("xchgl %0, %1\n": "+r" (__ret), "+m" (sl->xbuff): : "memory",
                       "cc"); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (8UL) {
  case 1UL:
  __asm__ volatile ("xchgb %b0, %1\n": "+q" (__ret), "+m" (sl->xbuff): : "memory",
                       "cc");
  goto ldv_42980;
  case 2UL:
  __asm__ volatile ("xchgw %w0, %1\n": "+r" (__ret), "+m" (sl->xbuff): : "memory",
                       "cc");
  goto ldv_42980;
  case 4UL:
  __asm__ volatile ("xchgl %0, %1\n": "+r" (__ret), "+m" (sl->xbuff): : "memory",
                       "cc");
  goto ldv_42980;
  case 8UL:
  __asm__ volatile ("xchgq %q0, %1\n": "+r" (__ret), "+m" (sl->xbuff): : "memory",
                       "cc");
  goto ldv_42980;
  default:
  __xchg_wrong_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

lines 5894-5895: Dead code detected: __asm__ volatile ("xchgb %b0, %1\n": "+q" (__ret___1), "+m" (sl->rbuff): : "memory",
                       "cc"); (CFACreationUtils.addEdgeToCFA, INFO)

lines 5898-5899: Dead code detected: __asm__ volatile ("xchgw %w0, %1\n": "+r" (__ret___1), "+m" (sl->rbuff): : "memory",
                       "cc"); (CFACreationUtils.addEdgeToCFA, INFO)

lines 5902-5903: Dead code detected: __asm__ volatile ("xchgl %0, %1\n": "+r" (__ret___1), "+m" (sl->rbuff): : "memory",
                       "cc"); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (8UL) {
  case 1UL:
  __asm__ volatile ("xchgb %b0, %1\n": "+q" (__ret___1), "+m" (sl->rbuff): : "memory",
                       "cc");
  goto ldv_42991;
  case 2UL:
  __asm__ volatile ("xchgw %w0, %1\n": "+r" (__ret___1), "+m" (sl->rbuff): : "memory",
                       "cc");
  goto ldv_42991;
  case 4UL:
  __asm__ volatile ("xchgl %0, %1\n": "+r" (__ret___1), "+m" (sl->rbuff): : "memory",
                       "cc");
  goto ldv_42991;
  case 8UL:
  __asm__ volatile ("xchgq %q0, %1\n": "+r" (__ret___1), "+m" (sl->rbuff): : "memory",
                       "cc");
  goto ldv_42991;
  default:
  __xchg_wrong_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

lines 6011-6012: Function pointer *(sl->tty->ops->write) with type int (*)(struct tty_struct *, const unsigned char *, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6051: Function pointer *(tty->ops->write) with type int (*)(struct tty_struct *, const unsigned char *, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

line 6803: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___2 = ldv_zalloc(512UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 6813: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___7 = ldv_zalloc(512UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function ldv_ndo_uninit_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ndo_init_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_probe_3 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function alloc_netdev_mqs to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rtnl_lock to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_close to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rtnl_unlock to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function lapb_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tty_unregister_ldisc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 5388: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size(from, 0); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function __builtin_object_size to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function might_fault to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tty_driver_flush_buffer to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tty_ldisc_flush to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netdev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function register_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock_bh to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tty_hangup to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_bh to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function unregister_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _copy_to_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __copy_to_user_overflow to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tty_register_ldisc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function lapb_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function skb_push to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netdev_warn to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function lapb_data_received to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            837244 (19% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  740389 (88%)
  Because of loop head:            96677 (12%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         178 (0%)
  Times precision was empty:       265083 (32%)
  Times precision was {false}:     5627 (1%)
  Times result was cached:         539845 (64%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      26689 (3%)
  Times result was 'false':        36923 (4%)
Number of strengthen sat checks:   0
Number of coverage checks:         1884948
  BDD entailment checks:           1499788
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       45
Number of predicates discovered:          149
Number of abstraction locations:          141
Max number of predicates per location:    123
Avg number of predicates per location:    4
Total predicates per abstraction:         4600752
Max number of predicates per abstraction: 123
Avg number of predicates per abstraction: 142.37
Number of irrelevant predicates:          1343739 (29%)
Number of preds handled by boolean abs:   699361 (15%)
  Total number of models for allsat:      408169
  Max number of models for allsat:        123
  Avg number of models for allsat:        15.29

Time for post operator:                 56.795s
  Time for path formula creation:       54.464s
Time for strengthen operator:            4.484s
Time for prec operator:                690.834s
  Time for abstraction:                680.076s (Max:     1.717s, Count: 837244)
    Boolean abstraction:               323.089s
    Solving time:                      135.235s (Max:     0.111s)
    Model enumeration time:             65.930s
    Time for BDD construction:         111.365s (Max:     1.683s)
Time for merge operator:                 3.888s
Time for coverage check:                12.459s
  Time for BDD entailment checks:       12.186s
Total time for SMT solver (w/o itp):   201.166s

Number of path formula cache hits:   4561847 (87%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    41.822s

Total number of created targets for pointer analysis: 82606
   Number of created targets for uf: *(void)* is 12551
   Number of created targets for uf: *(struct_net_device)* is 147
   Number of created targets for uf: *unsigned_char is 33
   Number of created targets for uf: *(unsigned_char)* is 2182
   Number of created targets for uf: *unsigned_int is 5477
   Number of created targets for uf: *char is 20495
   Number of created targets for uf: *unsigned_long_int is 3166


Number of BDD nodes:                               135067
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                      603070 (count: 2178441, min: 0, max: 13629, avg: 0.28)
Time for BDD node cleanup:                             0.380s
Time for BDD garbage collection:                       6.820s (in 1453 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  6.401s
  Time for transition matches:                         3.211s
  Time for transition assertions:                      0.002s
  Time for transition actions:                         0.004s
Automaton transfers with branching:                0
Automaton transfer successors:                      4389673 (count: 4389673, min: 1, max: 1, avg: 1.00) [1 x 4389673]

CPA algorithm statistics
------------------------
Number of iterations:            2969702
Max size of waitlist:            1210
Average size of waitlist:        431
Number of computed successors:   3402234
Max successors for one state:    2
Number of times merged:          192580
Number of times stopped:         316056
Number of times breaked:         178

Total time for CPA algorithm:       866.027s (Max:    49.563s)
  Time for choose from waitlist:      1.898s
  Time for precision adjustment:    715.891s
  Time for transfer relation:       104.658s
  Time for merge operator:            8.059s
  Time for stop operator:            17.415s
  Time for adding to reached set:     6.778s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   178
Avg. length of target path (in blocks):               16004 (count: 178, min: 23, max: 222, avg: 89.91)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  25.583s
  Counterexample analysis:                            18.497s (Max:     0.772s, Calls: 178)
    Refinement sat check:                              5.420s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.027s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.183s
  Precision update:                                    0.147s
  ARG update:                                          6.535s

Length of refined path (in blocks):                   14337 (count: 178, min: 16, max: 217, avg: 80.54)
Number of affected states:                            10362 (count: 178, min: 1, max: 216, avg: 58.21)
Length (states) of path with itp 'true':               3797 (count: 178, min: 0, max: 67, avg: 21.33)
Length (states) of path with itp non-trivial itp:     10362 (count: 178, min: 1, max: 216, avg: 58.21)
Length (states) of path with itp 'false':               178 (count: 178, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:        2594 (count: 178, min: 0, max: 121, avg: 14.57)
Equal non-trivial interpolants along paths:            7590 (count: 178, min: 0, max: 101, avg: 42.64)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                178
Number of successful refinements:     178
Number of failed refinements:         0
Max. size of reached set before ref.: 48264
Max. size of reached set after ref.:  16852
Avg. size of reached set before ref.: 19208.74
Avg. size of reached set after ref.:  2199.12

Total time for CEGAR algorithm:     894.418s
Time for refinements:                28.089s
Average time for refinement:          0.157s
Max time for refinement:              0.941s

Code Coverage
-----------------------------
  Function coverage:      0.600
  Visited lines:          1553
  Total lines:            2011
  Line coverage:          0.772
  Visited conditions:     244
  Total conditions:       358
  Condition coverage:     0.682

CPAchecker general statistics
-----------------------------
Number of program locations:     2659
Number of CFA edges:             2903
Number of relevant variables:    342
Number of functions:             105
Number of loops:                 10
Size of reached set:             21542
  Number of reached locations:   675 (25%)
    Avg states per location:     31
    Max states per location:     845 (at node N179)
  Number of reached functions:   63 (60%)
  Number of partitions:          20785
    Avg size of partitions:      1
    Max size of partitions:      123 (with key [N1156 (before line 6706), Function exit_x25_asy called from node N1355, stack depth 2 [fb63361], stack [main, exit_x25_asy]])
  Number of target states:       0
  Size of final wait list        541

Time for analysis setup:          5.843s
  Time for loading CPAs:          1.052s
  Time for loading parser:        0.715s
  Time for CFA construction:      3.913s
    Time for parsing file(s):     1.048s
    Time for AST to CFA:          1.481s
    Time for CFA sanity check:    0.227s
    Time for post-processing:     0.967s
      Time for var class.:        0.353s
Time for Analysis:              894.418s
CPU time for analysis:          894.280s
Total time for CPAchecker:      900.265s
Total CPU time for CPAchecker:  900.110s
Time for statistics:              0.416s

Time for Garbage Collector:      38.917s (in 834 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                749MB (   714 MiB) max;    458MB (   437 MiB) avg;    765MB (   730 MiB) peak
Used non-heap memory:             40MB (    38 MiB) max;     40MB (    38 MiB) avg;     41MB (    39 MiB) peak
Allocated heap memory:           798MB (   761 MiB) max;    659MB (   628 MiB) avg
Allocated non-heap memory:        43MB (    41 MiB) max;     42MB (    40 MiB) avg
Total process virtual memory:  10012MB (  9548 MiB) max;   8823MB (  8414 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
