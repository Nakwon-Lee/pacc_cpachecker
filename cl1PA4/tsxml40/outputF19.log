scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.16-rc1/205_9a_array_safes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--wan--x25_asy.ko-entry_point_true-unreach-call.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_g3715jsu/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

lines 5859-5860: Dead code detected: __asm__ volatile ("xchgb %b0, %1\n": "+q" (__ret), "+m" (sl->xbuff): : "memory",
                       "cc"); (CFACreationUtils.addEdgeToCFA, INFO)

lines 5863-5864: Dead code detected: __asm__ volatile ("xchgw %w0, %1\n": "+r" (__ret), "+m" (sl->xbuff): : "memory",
                       "cc"); (CFACreationUtils.addEdgeToCFA, INFO)

lines 5867-5868: Dead code detected: __asm__ volatile ("xchgl %0, %1\n": "+r" (__ret), "+m" (sl->xbuff): : "memory",
                       "cc"); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (8UL) {
  case 1UL:
  __asm__ volatile ("xchgb %b0, %1\n": "+q" (__ret), "+m" (sl->xbuff): : "memory",
                       "cc");
  goto ldv_42980;
  case 2UL:
  __asm__ volatile ("xchgw %w0, %1\n": "+r" (__ret), "+m" (sl->xbuff): : "memory",
                       "cc");
  goto ldv_42980;
  case 4UL:
  __asm__ volatile ("xchgl %0, %1\n": "+r" (__ret), "+m" (sl->xbuff): : "memory",
                       "cc");
  goto ldv_42980;
  case 8UL:
  __asm__ volatile ("xchgq %q0, %1\n": "+r" (__ret), "+m" (sl->xbuff): : "memory",
                       "cc");
  goto ldv_42980;
  default:
  __xchg_wrong_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

lines 5894-5895: Dead code detected: __asm__ volatile ("xchgb %b0, %1\n": "+q" (__ret___1), "+m" (sl->rbuff): : "memory",
                       "cc"); (CFACreationUtils.addEdgeToCFA, INFO)

lines 5898-5899: Dead code detected: __asm__ volatile ("xchgw %w0, %1\n": "+r" (__ret___1), "+m" (sl->rbuff): : "memory",
                       "cc"); (CFACreationUtils.addEdgeToCFA, INFO)

lines 5902-5903: Dead code detected: __asm__ volatile ("xchgl %0, %1\n": "+r" (__ret___1), "+m" (sl->rbuff): : "memory",
                       "cc"); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (8UL) {
  case 1UL:
  __asm__ volatile ("xchgb %b0, %1\n": "+q" (__ret___1), "+m" (sl->rbuff): : "memory",
                       "cc");
  goto ldv_42991;
  case 2UL:
  __asm__ volatile ("xchgw %w0, %1\n": "+r" (__ret___1), "+m" (sl->rbuff): : "memory",
                       "cc");
  goto ldv_42991;
  case 4UL:
  __asm__ volatile ("xchgl %0, %1\n": "+r" (__ret___1), "+m" (sl->rbuff): : "memory",
                       "cc");
  goto ldv_42991;
  case 8UL:
  __asm__ volatile ("xchgq %q0, %1\n": "+r" (__ret___1), "+m" (sl->rbuff): : "memory",
                       "cc");
  goto ldv_42991;
  default:
  __xchg_wrong_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

lines 6011-6012: Function pointer *(sl->tty->ops->write) with type int (*)(struct tty_struct *, const unsigned char *, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6051: Function pointer *(tty->ops->write) with type int (*)(struct tty_struct *, const unsigned char *, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

line 6803: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___2 = ldv_zalloc(512UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 6813: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___7 = ldv_zalloc(512UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function ldv_ndo_uninit_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ndo_init_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_probe_3 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function alloc_netdev_mqs to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rtnl_lock to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_close to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rtnl_unlock to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function lapb_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tty_unregister_ldisc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 5388: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size(from, 0); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function __builtin_object_size to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function might_fault to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tty_driver_flush_buffer to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tty_ldisc_flush to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netdev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock_bh to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_bh to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function lapb_disconnect_request to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function lapb_connect_request to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function skb_pull to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function lapb_data_request to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tty_chars_in_buffer to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netdev_warn to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __netif_schedule to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function skb_put to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tty_register_ldisc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _copy_to_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __copy_to_user_overflow to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tty_hangup to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function unregister_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function register_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function lapb_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            397994 (18% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  339137 (85%)
  Because of loop head:            58740 (15%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         117 (0%)
  Times precision was empty:       122526 (31%)
  Times precision was {false}:     6007 (2%)
  Times result was cached:         245772 (62%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      23689 (6%)
  Times result was 'false':        31215 (8%)
Number of strengthen sat checks:   0
Number of coverage checks:         1282355
  BDD entailment checks:           1074431
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       45
Number of predicates discovered:          145
Number of abstraction locations:          127
Max number of predicates per location:    128
Avg number of predicates per location:    4
Total predicates per abstraction:         3008907
Max number of predicates per abstraction: 128
Avg number of predicates per abstraction: 101.32
Number of irrelevant predicates:          596519 (20%)
Number of preds handled by boolean abs:   790365 (26%)
  Total number of models for allsat:      854729
  Max number of models for allsat:        252
  Avg number of models for allsat:        36.08

Time for post operator:                 19.385s
  Time for path formula creation:       18.339s
Time for strengthen operator:            2.117s
Time for prec operator:                795.514s
  Time for abstraction:                790.564s (Max:     0.594s, Count: 397994)
    Boolean abstraction:               535.711s
    Solving time:                      143.739s (Max:     0.088s)
    Model enumeration time:            143.225s
    Time for BDD construction:         236.971s (Max:     0.570s)
Time for merge operator:                 1.190s
Time for coverage check:                 9.587s
  Time for BDD entailment checks:        9.390s
Total time for SMT solver (w/o itp):   286.965s

Number of path formula cache hits:   2467044 (94%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    12.203s

Total number of created targets for pointer analysis: 14750
   Number of created targets for uf: *(void)* is 1439
   Number of created targets for uf: *(struct_net_device)* is 3
   Number of created targets for uf: *unsigned_char is 2
   Number of created targets for uf: *(unsigned_char)* is 99
   Number of created targets for uf: *unsigned_int is 347
   Number of created targets for uf: *char is 4548
   Number of created targets for uf: *unsigned_long_int is 120


Number of BDD nodes:                               235957
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                      637611 (count: 1610171, min: 0, max: 3848, avg: 0.40)
Time for BDD node cleanup:                             0.300s
Time for BDD garbage collection:                      17.057s (in 3407 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  3.841s
  Time for transition matches:                         1.937s
  Time for transition assertions:                      0.001s
  Time for transition actions:                         0.001s
Automaton transfers with branching:                0
Automaton transfer successors:                      2190473 (count: 2190473, min: 1, max: 1, avg: 1.00) [1 x 2190473]

CPA algorithm statistics
------------------------
Number of iterations:            1477284
Max size of waitlist:            949
Average size of waitlist:        403
Number of computed successors:   1718629
Max successors for one state:    2
Number of times merged:          103962
Number of times stopped:         168484
Number of times breaked:         117

Total time for CPA algorithm:       876.034s (Max:    66.327s)
  Time for choose from waitlist:      0.890s
  Time for precision adjustment:    807.900s
  Time for transfer relation:        43.060s
  Time for merge operator:            3.548s
  Time for stop operator:            12.091s
  Time for adding to reached set:     3.848s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   117
Avg. length of target path (in blocks):                9952 (count: 117, min: 23, max: 201, avg: 85.06)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  17.339s
  Counterexample analysis:                            14.071s (Max:     0.658s, Calls: 117)
    Refinement sat check:                              3.783s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.006s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.158s
  Precision update:                                    0.135s
  ARG update:                                          2.821s

Length of refined path (in blocks):                    9088 (count: 117, min: 16, max: 196, avg: 77.68)
Number of affected states:                             7743 (count: 117, min: 1, max: 195, avg: 66.18)
Length (states) of path with itp 'true':               1228 (count: 117, min: 0, max: 44, avg: 10.50)
Length (states) of path with itp non-trivial itp:      7743 (count: 117, min: 1, max: 195, avg: 66.18)
Length (states) of path with itp 'false':               117 (count: 117, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:        2678 (count: 117, min: 0, max: 124, avg: 22.89)
Equal non-trivial interpolants along paths:            4948 (count: 117, min: 0, max: 80, avg: 42.29)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                117
Number of successful refinements:     117
Number of failed refinements:         0
Max. size of reached set before ref.: 34822
Max. size of reached set after ref.:  5347
Avg. size of reached set before ref.: 13103.66
Avg. size of reached set after ref.:  389.68

Total time for CEGAR algorithm:     894.463s
Time for refinements:                18.382s
Average time for refinement:          0.157s
Max time for refinement:              0.741s

Code Coverage
-----------------------------
  Function coverage:      0.648
  Visited lines:          1650
  Total lines:            2011
  Line coverage:          0.820
  Visited conditions:     278
  Total conditions:       358
  Condition coverage:     0.777

CPAchecker general statistics
-----------------------------
Number of program locations:     2659
Number of CFA edges:             2903
Number of relevant variables:    342
Number of functions:             105
Number of loops:                 10
Size of reached set:             31395
  Number of reached locations:   788 (30%)
    Avg states per location:     39
    Max states per location:     1103 (at node N179)
  Number of reached functions:   68 (65%)
  Number of partitions:          30484
    Avg size of partitions:      1
    Max size of partitions:      126 (with key [N1156 (before line 6706), Function exit_x25_asy called from node N1355, stack depth 2 [7bc3d79a], stack [main, exit_x25_asy]])
  Number of target states:       0
  Size of final wait list        538

Time for analysis setup:          5.795s
  Time for loading CPAs:          1.174s
  Time for loading parser:        0.741s
  Time for CFA construction:      3.730s
    Time for parsing file(s):     1.074s
    Time for AST to CFA:          1.301s
    Time for CFA sanity check:    0.214s
    Time for post-processing:     0.942s
      Time for var class.:        0.359s
Time for Analysis:              894.463s
CPU time for analysis:          894.270s
Total time for CPAchecker:      900.262s
Total CPU time for CPAchecker:  900.050s
Time for statistics:              0.437s

Time for Garbage Collector:      23.692s (in 1458 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                282MB (   269 MiB) max;    181MB (   173 MiB) avg;    295MB (   281 MiB) peak
Used non-heap memory:             46MB (    44 MiB) max;     39MB (    38 MiB) avg;     46MB (    44 MiB) peak
Allocated heap memory:           308MB (   293 MiB) max;    266MB (   254 MiB) avg
Allocated non-heap memory:        48MB (    46 MiB) max;     48MB (    45 MiB) avg
Total process virtual memory:  10024MB (  9560 MiB) max;   8897MB (  8485 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
