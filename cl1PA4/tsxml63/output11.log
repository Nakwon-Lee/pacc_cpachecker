scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.16-rc1/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--acpi--processor.ko-entry_point_true-unreach-call.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_286kmtl8/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 4681: Dead code detected: __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "m" (*a)); (CFACreationUtils.addEdgeToCFA, INFO)

line 4684: Dead code detected: __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "m" (*a)); (CFACreationUtils.addEdgeToCFA, INFO)

line 4687: Dead code detected: __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "m" (*a)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (8UL) {
  case 1UL:
  __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "m" (*a));
  goto ldv_2775;
  case 2UL:
  __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "m" (*a));
  goto ldv_2775;
  case 4UL:
  __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "m" (*a));
  goto ldv_2775;
  case 8UL:
  __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret__): "m" (*a));
  goto ldv_2775;
  default:
  __bad_percpu_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 4708: Dead code detected: __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

line 4711: Dead code detected: __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

line 4714: Dead code detected: __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (8UL) {
  case 1UL:
  __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& current_task));
  goto ldv_3067;
  case 2UL:
  __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_3067;
  case 4UL:
  __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_3067;
  case 8UL:
  __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_3067;
  default:
  __bad_percpu_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 5865: Dead code detected: __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "m" (cpu_info.x86_vendor)); (CFACreationUtils.addEdgeToCFA, INFO)

line 5868: Dead code detected: __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "m" (cpu_info.x86_vendor)); (CFACreationUtils.addEdgeToCFA, INFO)

line 5871: Dead code detected: __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret__): "m" (cpu_info.x86_vendor)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (1UL) {
  case 1UL:
  __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "m" (cpu_info.x86_vendor));
  goto ldv_29119;
  case 2UL:
  __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "m" (cpu_info.x86_vendor));
  goto ldv_29119;
  case 4UL:
  __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "m" (cpu_info.x86_vendor));
  goto ldv_29119;
  case 8UL:
  __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret__): "m" (cpu_info.x86_vendor));
  goto ldv_29119;
  default:
  __bad_percpu_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

lines 5880-5895: Dead code detected: switch (1UL) (CFACreationUtils.addEdgeToCFA, INFO)

line 5885: Dead code detected: __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret_____0): "m" (cpu_info.x86_vendor)); (CFACreationUtils.addEdgeToCFA, INFO)

line 5888: Dead code detected: __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret_____0): "m" (cpu_info.x86_vendor)); (CFACreationUtils.addEdgeToCFA, INFO)

line 5891: Dead code detected: __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret_____0): "m" (cpu_info.x86_vendor)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (1UL) {
  case 1UL:
  __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret_____0): "m" (cpu_info.x86_vendor));
  goto ldv_29129;
  case 2UL:
  __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret_____0): "m" (cpu_info.x86_vendor));
  goto ldv_29129;
  case 4UL:
  __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret_____0): "m" (cpu_info.x86_vendor));
  goto ldv_29129;
  case 8UL:
  __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret_____0): "m" (cpu_info.x86_vendor));
  goto ldv_29129;
  default:
  __bad_percpu_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

lines 5900-5915: Dead code detected: switch (1UL) (CFACreationUtils.addEdgeToCFA, INFO)

line 5905: Dead code detected: __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret_____1): "m" (cpu_info.x86_vendor)); (CFACreationUtils.addEdgeToCFA, INFO)

line 5908: Dead code detected: __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret_____1): "m" (cpu_info.x86_vendor)); (CFACreationUtils.addEdgeToCFA, INFO)

line 5911: Dead code detected: __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret_____1): "m" (cpu_info.x86_vendor)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (1UL) {
  case 1UL:
  __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret_____1): "m" (cpu_info.x86_vendor));
  goto ldv_29138;
  case 2UL:
  __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret_____1): "m" (cpu_info.x86_vendor));
  goto ldv_29138;
  case 4UL:
  __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret_____1): "m" (cpu_info.x86_vendor));
  goto ldv_29138;
  case 8UL:
  __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret_____1): "m" (cpu_info.x86_vendor));
  goto ldv_29138;
  default:
  __bad_percpu_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

lines 5920-5935: Dead code detected: switch (1UL) (CFACreationUtils.addEdgeToCFA, INFO)

line 5925: Dead code detected: __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret_____2): "m" (cpu_info.x86_vendor)); (CFACreationUtils.addEdgeToCFA, INFO)

line 5928: Dead code detected: __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret_____2): "m" (cpu_info.x86_vendor)); (CFACreationUtils.addEdgeToCFA, INFO)

line 5931: Dead code detected: __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret_____2): "m" (cpu_info.x86_vendor)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (1UL) {
  case 1UL:
  __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret_____2): "m" (cpu_info.x86_vendor));
  goto ldv_29147;
  case 2UL:
  __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret_____2): "m" (cpu_info.x86_vendor));
  goto ldv_29147;
  case 4UL:
  __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret_____2): "m" (cpu_info.x86_vendor));
  goto ldv_29147;
  case 8UL:
  __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret_____2): "m" (cpu_info.x86_vendor));
  goto ldv_29147;
  default:
  __bad_percpu_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (1UL) {
  case 1UL: ;
  switch (1UL) {
  case 1UL:
  __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "m" (cpu_info.x86_vendor));
  goto ldv_29119;
  case 2UL:
  __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "m" (cpu_info.x86_vendor));
  goto ldv_29119;
  case 4UL:
  __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "m" (cpu_info.x86_vendor));
  goto ldv_29119;
  case 8UL:
  __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret__): "m" (cpu_info.x86_vendor));
  goto ldv_29119;
  default:
  __bad_percpu_size();
  }
  ldv_29119:
  pscr_ret__ = pfo_ret__;
  goto ldv_29125;
  case 2UL: ;
  switch (1UL) {
  case 1UL:
  __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret_____0): "m" (cpu_info.x86_vendor));
  goto ldv_29129;
  case 2UL:
  __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret_____0): "m" (cpu_info.x86_vendor));
  goto ldv_29129;
  case 4UL:
  __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret_____0): "m" (cpu_info.x86_vendor));
  goto ldv_29129;
  case 8UL:
  __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret_____0): "m" (cpu_info.x86_vendor));
  goto ldv_29129;
  default:
  __bad_percpu_size();
  }
  ldv_29129:
  pscr_ret__ = pfo_ret_____0;
  goto ldv_29125;
  case 4UL: ;
  switch (1UL) {
  case 1UL:
  __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret_____1): "m" (cpu_info.x86_vendor));
  goto ldv_29138;
  case 2UL:
  __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret_____1): "m" (cpu_info.x86_vendor));
  goto ldv_29138;
  case 4UL:
  __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret_____1): "m" (cpu_info.x86_vendor));
  goto ldv_29138;
  case 8UL:
  __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret_____1): "m" (cpu_info.x86_vendor));
  goto ldv_29138;
  default:
  __bad_percpu_size();
  }
  ldv_29138:
  pscr_ret__ = pfo_ret_____1;
  goto ldv_29125;
  case 8UL: ;
  switch (1UL) {
  case 1UL:
  __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret_____2): "m" (cpu_info.x86_vendor));
  goto ldv_29147;
  case 2UL:
  __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret_____2): "m" (cpu_info.x86_vendor));
  goto ldv_29147;
  case 4UL:
  __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret_____2): "m" (cpu_info.x86_vendor));
  goto ldv_29147;
  case 8UL:
  __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret_____2): "m" (cpu_info.x86_vendor));
  goto ldv_29147;
  default:
  __bad_percpu_size();
  }
  ldv_29147:
  pscr_ret__ = pfo_ret_____2;
  goto ldv_29125;
  default:
  __bad_size_call_parameter();
  goto ldv_29125;
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 5987: Dead code detected: __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "m" (cpu_info.x86_vendor)); (CFACreationUtils.addEdgeToCFA, INFO)

line 5990: Dead code detected: __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "m" (cpu_info.x86_vendor)); (CFACreationUtils.addEdgeToCFA, INFO)

line 5993: Dead code detected: __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret__): "m" (cpu_info.x86_vendor)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (1UL) {
  case 1UL:
  __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "m" (cpu_info.x86_vendor));
  goto ldv_29168;
  case 2UL:
  __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "m" (cpu_info.x86_vendor));
  goto ldv_29168;
  case 4UL:
  __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "m" (cpu_info.x86_vendor));
  goto ldv_29168;
  case 8UL:
  __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret__): "m" (cpu_info.x86_vendor));
  goto ldv_29168;
  default:
  __bad_percpu_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

lines 6002-6017: Dead code detected: switch (1UL) (CFACreationUtils.addEdgeToCFA, INFO)

line 6007: Dead code detected: __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret_____0): "m" (cpu_info.x86_vendor)); (CFACreationUtils.addEdgeToCFA, INFO)

line 6010: Dead code detected: __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret_____0): "m" (cpu_info.x86_vendor)); (CFACreationUtils.addEdgeToCFA, INFO)

line 6013: Dead code detected: __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret_____0): "m" (cpu_info.x86_vendor)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (1UL) {
  case 1UL:
  __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret_____0): "m" (cpu_info.x86_vendor));
  goto ldv_29178;
  case 2UL:
  __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret_____0): "m" (cpu_info.x86_vendor));
  goto ldv_29178;
  case 4UL:
  __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret_____0): "m" (cpu_info.x86_vendor));
  goto ldv_29178;
  case 8UL:
  __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret_____0): "m" (cpu_info.x86_vendor));
  goto ldv_29178;
  default:
  __bad_percpu_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

lines 6022-6037: Dead code detected: switch (1UL) (CFACreationUtils.addEdgeToCFA, INFO)

line 6027: Dead code detected: __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret_____1): "m" (cpu_info.x86_vendor)); (CFACreationUtils.addEdgeToCFA, INFO)

line 6030: Dead code detected: __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret_____1): "m" (cpu_info.x86_vendor)); (CFACreationUtils.addEdgeToCFA, INFO)

line 6033: Dead code detected: __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret_____1): "m" (cpu_info.x86_vendor)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (1UL) {
  case 1UL:
  __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret_____1): "m" (cpu_info.x86_vendor));
  goto ldv_29187;
  case 2UL:
  __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret_____1): "m" (cpu_info.x86_vendor));
  goto ldv_29187;
  case 4UL:
  __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret_____1): "m" (cpu_info.x86_vendor));
  goto ldv_29187;
  case 8UL:
  __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret_____1): "m" (cpu_info.x86_vendor));
  goto ldv_29187;
  default:
  __bad_percpu_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

lines 6042-6057: Dead code detected: switch (1UL) (CFACreationUtils.addEdgeToCFA, INFO)

line 6047: Dead code detected: __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret_____2): "m" (cpu_info.x86_vendor)); (CFACreationUtils.addEdgeToCFA, INFO)

line 6050: Dead code detected: __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret_____2): "m" (cpu_info.x86_vendor)); (CFACreationUtils.addEdgeToCFA, INFO)

line 6053: Dead code detected: __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret_____2): "m" (cpu_info.x86_vendor)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (1UL) {
  case 1UL:
  __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret_____2): "m" (cpu_info.x86_vendor));
  goto ldv_29196;
  case 2UL:
  __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret_____2): "m" (cpu_info.x86_vendor));
  goto ldv_29196;
  case 4UL:
  __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret_____2): "m" (cpu_info.x86_vendor));
  goto ldv_29196;
  case 8UL:
  __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret_____2): "m" (cpu_info.x86_vendor));
  goto ldv_29196;
  default:
  __bad_percpu_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (1UL) {
  case 1UL: ;
  switch (1UL) {
  case 1UL:
  __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "m" (cpu_info.x86_vendor));
  goto ldv_29168;
  case 2UL:
  __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "m" (cpu_info.x86_vendor));
  goto ldv_29168;
  case 4UL:
  __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "m" (cpu_info.x86_vendor));
  goto ldv_29168;
  case 8UL:
  __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret__): "m" (cpu_info.x86_vendor));
  goto ldv_29168;
  default:
  __bad_percpu_size();
  }
  ldv_29168:
  pscr_ret__ = pfo_ret__;
  goto ldv_29174;
  case 2UL: ;
  switch (1UL) {
  case 1UL:
  __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret_____0): "m" (cpu_info.x86_vendor));
  goto ldv_29178;
  case 2UL:
  __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret_____0): "m" (cpu_info.x86_vendor));
  goto ldv_29178;
  case 4UL:
  __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret_____0): "m" (cpu_info.x86_vendor));
  goto ldv_29178;
  case 8UL:
  __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret_____0): "m" (cpu_info.x86_vendor));
  goto ldv_29178;
  default:
  __bad_percpu_size();
  }
  ldv_29178:
  pscr_ret__ = pfo_ret_____0;
  goto ldv_29174;
  case 4UL: ;
  switch (1UL) {
  case 1UL:
  __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret_____1): "m" (cpu_info.x86_vendor));
  goto ldv_29187;
  case 2UL:
  __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret_____1): "m" (cpu_info.x86_vendor));
  goto ldv_29187;
  case 4UL:
  __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret_____1): "m" (cpu_info.x86_vendor));
  goto ldv_29187;
  case 8UL:
  __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret_____1): "m" (cpu_info.x86_vendor));
  goto ldv_29187;
  default:
  __bad_percpu_size();
  }
  ldv_29187:
  pscr_ret__ = pfo_ret_____1;
  goto ldv_29174;
  case 8UL: ;
  switch (1UL) {
  case 1UL:
  __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret_____2): "m" (cpu_info.x86_vendor));
  goto ldv_29196;
  case 2UL:
  __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret_____2): "m" (cpu_info.x86_vendor));
  goto ldv_29196;
  case 4UL:
  __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret_____2): "m" (cpu_info.x86_vendor));
  goto ldv_29196;
  case 8UL:
  __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret_____2): "m" (cpu_info.x86_vendor));
  goto ldv_29196;
  default:
  __bad_percpu_size();
  }
  ldv_29196:
  pscr_ret__ = pfo_ret_____2;
  goto ldv_29174;
  default:
  __bad_size_call_parameter();
  goto ldv_29174;
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 6832: Dead code detected: __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& kernel_stack)); (CFACreationUtils.addEdgeToCFA, INFO)

line 6835: Dead code detected: __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack)); (CFACreationUtils.addEdgeToCFA, INFO)

line 6838: Dead code detected: __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (8UL) {
  case 1UL:
  __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& kernel_stack));
  goto ldv_5945;
  case 2UL:
  __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack));
  goto ldv_5945;
  case 4UL:
  __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack));
  goto ldv_5945;
  case 8UL:
  __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack));
  goto ldv_5945;
  default:
  __bad_percpu_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

lines 7724-7739: Dead code detected: switch (8UL) (CFACreationUtils.addEdgeToCFA, INFO)

line 7726: Dead code detected: __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "m" (processors)); (CFACreationUtils.addEdgeToCFA, INFO)

line 7729: Dead code detected: __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "m" (processors)); (CFACreationUtils.addEdgeToCFA, INFO)

line 7732: Dead code detected: __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "m" (processors)); (CFACreationUtils.addEdgeToCFA, INFO)

line 7734: Dead code detected:  (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (8UL) {
  case 1UL:
  __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "m" (processors));
  goto ldv_28978;
  case 2UL:
  __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "m" (processors));
  goto ldv_28978;
  case 4UL:
  __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "m" (processors));
  goto ldv_28978;
  case 8UL:
  __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret__): "m" (processors));
  goto ldv_28978;
  default:
  __bad_percpu_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

lines 7744-7759: Dead code detected: switch (8UL) (CFACreationUtils.addEdgeToCFA, INFO)

line 7746: Dead code detected: __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret_____0): "m" (processors)); (CFACreationUtils.addEdgeToCFA, INFO)

line 7749: Dead code detected: __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret_____0): "m" (processors)); (CFACreationUtils.addEdgeToCFA, INFO)

line 7752: Dead code detected: __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret_____0): "m" (processors)); (CFACreationUtils.addEdgeToCFA, INFO)

line 7754: Dead code detected:  (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (8UL) {
  case 1UL:
  __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret_____0): "m" (processors));
  goto ldv_28988;
  case 2UL:
  __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret_____0): "m" (processors));
  goto ldv_28988;
  case 4UL:
  __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret_____0): "m" (processors));
  goto ldv_28988;
  case 8UL:
  __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret_____0): "m" (processors));
  goto ldv_28988;
  default:
  __bad_percpu_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

lines 7764-7779: Dead code detected: switch (8UL) (CFACreationUtils.addEdgeToCFA, INFO)

line 7766: Dead code detected: __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret_____1): "m" (processors)); (CFACreationUtils.addEdgeToCFA, INFO)

line 7769: Dead code detected: __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret_____1): "m" (processors)); (CFACreationUtils.addEdgeToCFA, INFO)

line 7772: Dead code detected: __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret_____1): "m" (processors)); (CFACreationUtils.addEdgeToCFA, INFO)

line 7774: Dead code detected:  (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (8UL) {
  case 1UL:
  __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret_____1): "m" (processors));
  goto ldv_28997;
  case 2UL:
  __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret_____1): "m" (processors));
  goto ldv_28997;
  case 4UL:
  __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret_____1): "m" (processors));
  goto ldv_28997;
  case 8UL:
  __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret_____1): "m" (processors));
  goto ldv_28997;
  default:
  __bad_percpu_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 7786: Dead code detected: __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret_____2): "m" (processors)); (CFACreationUtils.addEdgeToCFA, INFO)

line 7789: Dead code detected: __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret_____2): "m" (processors)); (CFACreationUtils.addEdgeToCFA, INFO)

line 7792: Dead code detected: __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret_____2): "m" (processors)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (8UL) {
  case 1UL:
  __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret_____2): "m" (processors));
  goto ldv_29006;
  case 2UL:
  __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret_____2): "m" (processors));
  goto ldv_29006;
  case 4UL:
  __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret_____2): "m" (processors));
  goto ldv_29006;
  case 8UL:
  __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret_____2): "m" (processors));
  goto ldv_29006;
  default:
  __bad_percpu_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (8UL) {
  case 1UL: ;
  switch (8UL) {
  case 1UL:
  __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "m" (processors));
  goto ldv_28978;
  case 2UL:
  __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "m" (processors));
  goto ldv_28978;
  case 4UL:
  __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "m" (processors));
  goto ldv_28978;
  case 8UL:
  __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret__): "m" (processors));
  goto ldv_28978;
  default:
  __bad_percpu_size();
  }
  ldv_28978:
  pscr_ret__ = pfo_ret__;
  goto ldv_28984;
  case 2UL: ;
  switch (8UL) {
  case 1UL:
  __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret_____0): "m" (processors));
  goto ldv_28988;
  case 2UL:
  __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret_____0): "m" (processors));
  goto ldv_28988;
  case 4UL:
  __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret_____0): "m" (processors));
  goto ldv_28988;
  case 8UL:
  __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret_____0): "m" (processors));
  goto ldv_28988;
  default:
  __bad_percpu_size();
  }
  ldv_28988:
  pscr_ret__ = pfo_ret_____0;
  goto ldv_28984;
  case 4UL: ;
  switch (8UL) {
  case 1UL:
  __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret_____1): "m" (processors));
  goto ldv_28997;
  case 2UL:
  __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret_____1): "m" (processors));
  goto ldv_28997;
  case 4UL:
  __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret_____1): "m" (processors));
  goto ldv_28997;
  case 8UL:
  __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret_____1): "m" (processors));
  goto ldv_28997;
  default:
  __bad_percpu_size();
  }
  ldv_28997:
  pscr_ret__ = pfo_ret_____1;
  goto ldv_28984;
  case 8UL: ;
  switch (8UL) {
  case 1UL:
  __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret_____2): "m" (processors));
  goto ldv_29006;
  case 2UL:
  __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret_____2): "m" (processors));
  goto ldv_29006;
  case 4UL:
  __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret_____2): "m" (processors));
  goto ldv_29006;
  case 8UL:
  __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret_____2): "m" (processors));
  goto ldv_29006;
  default:
  __bad_percpu_size();
  }
  ldv_29006:
  pscr_ret__ = pfo_ret_____2;
  goto ldv_28984;
  default:
  __bad_size_call_parameter();
  goto ldv_28984;
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 7845: Dead code detected: return (0); (CFACreationUtils.addEdgeToCFA, INFO)

lines 7873-7888: Dead code detected: switch (8UL) (CFACreationUtils.addEdgeToCFA, INFO)

line 7875: Dead code detected: __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "m" (processors)); (CFACreationUtils.addEdgeToCFA, INFO)

line 7878: Dead code detected: __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "m" (processors)); (CFACreationUtils.addEdgeToCFA, INFO)

line 7881: Dead code detected: __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "m" (processors)); (CFACreationUtils.addEdgeToCFA, INFO)

line 7883: Dead code detected:  (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (8UL) {
  case 1UL:
  __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "m" (processors));
  goto ldv_29040;
  case 2UL:
  __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "m" (processors));
  goto ldv_29040;
  case 4UL:
  __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "m" (processors));
  goto ldv_29040;
  case 8UL:
  __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret__): "m" (processors));
  goto ldv_29040;
  default:
  __bad_percpu_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

lines 7893-7908: Dead code detected: switch (8UL) (CFACreationUtils.addEdgeToCFA, INFO)

line 7895: Dead code detected: __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret_____0): "m" (processors)); (CFACreationUtils.addEdgeToCFA, INFO)

line 7898: Dead code detected: __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret_____0): "m" (processors)); (CFACreationUtils.addEdgeToCFA, INFO)

line 7901: Dead code detected: __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret_____0): "m" (processors)); (CFACreationUtils.addEdgeToCFA, INFO)

line 7903: Dead code detected:  (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (8UL) {
  case 1UL:
  __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret_____0): "m" (processors));
  goto ldv_29050;
  case 2UL:
  __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret_____0): "m" (processors));
  goto ldv_29050;
  case 4UL:
  __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret_____0): "m" (processors));
  goto ldv_29050;
  case 8UL:
  __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret_____0): "m" (processors));
  goto ldv_29050;
  default:
  __bad_percpu_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

lines 7913-7928: Dead code detected: switch (8UL) (CFACreationUtils.addEdgeToCFA, INFO)

line 7915: Dead code detected: __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret_____1): "m" (processors)); (CFACreationUtils.addEdgeToCFA, INFO)

line 7918: Dead code detected: __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret_____1): "m" (processors)); (CFACreationUtils.addEdgeToCFA, INFO)

line 7921: Dead code detected: __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret_____1): "m" (processors)); (CFACreationUtils.addEdgeToCFA, INFO)

line 7923: Dead code detected:  (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (8UL) {
  case 1UL:
  __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret_____1): "m" (processors));
  goto ldv_29059;
  case 2UL:
  __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret_____1): "m" (processors));
  goto ldv_29059;
  case 4UL:
  __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret_____1): "m" (processors));
  goto ldv_29059;
  case 8UL:
  __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret_____1): "m" (processors));
  goto ldv_29059;
  default:
  __bad_percpu_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 7935: Dead code detected: __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret_____2): "m" (processors)); (CFACreationUtils.addEdgeToCFA, INFO)

line 7938: Dead code detected: __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret_____2): "m" (processors)); (CFACreationUtils.addEdgeToCFA, INFO)

line 7941: Dead code detected: __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret_____2): "m" (processors)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (8UL) {
  case 1UL:
  __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret_____2): "m" (processors));
  goto ldv_29068;
  case 2UL:
  __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret_____2): "m" (processors));
  goto ldv_29068;
  case 4UL:
  __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret_____2): "m" (processors));
  goto ldv_29068;
  case 8UL:
  __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret_____2): "m" (processors));
  goto ldv_29068;
  default:
  __bad_percpu_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (8UL) {
  case 1UL: ;
  switch (8UL) {
  case 1UL:
  __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "m" (processors));
  goto ldv_29040;
  case 2UL:
  __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "m" (processors));
  goto ldv_29040;
  case 4UL:
  __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "m" (processors));
  goto ldv_29040;
  case 8UL:
  __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret__): "m" (processors));
  goto ldv_29040;
  default:
  __bad_percpu_size();
  }
  ldv_29040:
  pscr_ret__ = pfo_ret__;
  goto ldv_29046;
  case 2UL: ;
  switch (8UL) {
  case 1UL:
  __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret_____0): "m" (processors));
  goto ldv_29050;
  case 2UL:
  __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret_____0): "m" (processors));
  goto ldv_29050;
  case 4UL:
  __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret_____0): "m" (processors));
  goto ldv_29050;
  case 8UL:
  __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret_____0): "m" (processors));
  goto ldv_29050;
  default:
  __bad_percpu_size();
  }
  ldv_29050:
  pscr_ret__ = pfo_ret_____0;
  goto ldv_29046;
  case 4UL: ;
  switch (8UL) {
  case 1UL:
  __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret_____1): "m" (processors));
  goto ldv_29059;
  case 2UL:
  __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret_____1): "m" (processors));
  goto ldv_29059;
  case 4UL:
  __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret_____1): "m" (processors));
  goto ldv_29059;
  case 8UL:
  __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret_____1): "m" (processors));
  goto ldv_29059;
  default:
  __bad_percpu_size();
  }
  ldv_29059:
  pscr_ret__ = pfo_ret_____1;
  goto ldv_29046;
  case 8UL: ;
  switch (8UL) {
  case 1UL:
  __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret_____2): "m" (processors));
  goto ldv_29068;
  case 2UL:
  __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret_____2): "m" (processors));
  goto ldv_29068;
  case 4UL:
  __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret_____2): "m" (processors));
  goto ldv_29068;
  case 8UL:
  __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret_____2): "m" (processors));
  goto ldv_29068;
  default:
  __bad_percpu_size();
  }
  ldv_29068:
  pscr_ret__ = pfo_ret_____2;
  goto ldv_29046;
  default:
  __bad_size_call_parameter();
  goto ldv_29046;
  } (CFACreationUtils.addEdgeToCFA, INFO)

lines 8033-8048: Dead code detected: switch (8UL) (CFACreationUtils.addEdgeToCFA, INFO)

line 8035: Dead code detected: __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "m" (processors)); (CFACreationUtils.addEdgeToCFA, INFO)

line 8038: Dead code detected: __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "m" (processors)); (CFACreationUtils.addEdgeToCFA, INFO)

line 8041: Dead code detected: __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "m" (processors)); (CFACreationUtils.addEdgeToCFA, INFO)

line 8043: Dead code detected:  (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (8UL) {
  case 1UL:
  __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "m" (processors));
  goto ldv_29095;
  case 2UL:
  __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "m" (processors));
  goto ldv_29095;
  case 4UL:
  __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "m" (processors));
  goto ldv_29095;
  case 8UL:
  __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret__): "m" (processors));
  goto ldv_29095;
  default:
  __bad_percpu_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

lines 8053-8068: Dead code detected: switch (8UL) (CFACreationUtils.addEdgeToCFA, INFO)

line 8055: Dead code detected: __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret_____0): "m" (processors)); (CFACreationUtils.addEdgeToCFA, INFO)

line 8058: Dead code detected: __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret_____0): "m" (processors)); (CFACreationUtils.addEdgeToCFA, INFO)

line 8061: Dead code detected: __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret_____0): "m" (processors)); (CFACreationUtils.addEdgeToCFA, INFO)

line 8063: Dead code detected:  (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (8UL) {
  case 1UL:
  __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret_____0): "m" (processors));
  goto ldv_29105;
  case 2UL:
  __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret_____0): "m" (processors));
  goto ldv_29105;
  case 4UL:
  __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret_____0): "m" (processors));
  goto ldv_29105;
  case 8UL:
  __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret_____0): "m" (processors));
  goto ldv_29105;
  default:
  __bad_percpu_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

lines 8073-8088: Dead code detected: switch (8UL) (CFACreationUtils.addEdgeToCFA, INFO)

line 8075: Dead code detected: __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret_____1): "m" (processors)); (CFACreationUtils.addEdgeToCFA, INFO)

line 8078: Dead code detected: __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret_____1): "m" (processors)); (CFACreationUtils.addEdgeToCFA, INFO)

line 8081: Dead code detected: __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret_____1): "m" (processors)); (CFACreationUtils.addEdgeToCFA, INFO)

line 8083: Dead code detected:  (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (8UL) {
  case 1UL:
  __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret_____1): "m" (processors));
  goto ldv_29114;
  case 2UL:
  __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret_____1): "m" (processors));
  goto ldv_29114;
  case 4UL:
  __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret_____1): "m" (processors));
  goto ldv_29114;
  case 8UL:
  __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret_____1): "m" (processors));
  goto ldv_29114;
  default:
  __bad_percpu_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 8095: Dead code detected: __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret_____2): "m" (processors)); (CFACreationUtils.addEdgeToCFA, INFO)

line 8098: Dead code detected: __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret_____2): "m" (processors)); (CFACreationUtils.addEdgeToCFA, INFO)

line 8101: Dead code detected: __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret_____2): "m" (processors)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (8UL) {
  case 1UL:
  __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret_____2): "m" (processors));
  goto ldv_29123;
  case 2UL:
  __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret_____2): "m" (processors));
  goto ldv_29123;
  case 4UL:
  __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret_____2): "m" (processors));
  goto ldv_29123;
  case 8UL:
  __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret_____2): "m" (processors));
  goto ldv_29123;
  default:
  __bad_percpu_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (8UL) {
  case 1UL: ;
  switch (8UL) {
  case 1UL:
  __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "m" (processors));
  goto ldv_29095;
  case 2UL:
  __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "m" (processors));
  goto ldv_29095;
  case 4UL:
  __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "m" (processors));
  goto ldv_29095;
  case 8UL:
  __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret__): "m" (processors));
  goto ldv_29095;
  default:
  __bad_percpu_size();
  }
  ldv_29095:
  pscr_ret__ = pfo_ret__;
  goto ldv_29101;
  case 2UL: ;
  switch (8UL) {
  case 1UL:
  __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret_____0): "m" (processors));
  goto ldv_29105;
  case 2UL:
  __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret_____0): "m" (processors));
  goto ldv_29105;
  case 4UL:
  __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret_____0): "m" (processors));
  goto ldv_29105;
  case 8UL:
  __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret_____0): "m" (processors));
  goto ldv_29105;
  default:
  __bad_percpu_size();
  }
  ldv_29105:
  pscr_ret__ = pfo_ret_____0;
  goto ldv_29101;
  case 4UL: ;
  switch (8UL) {
  case 1UL:
  __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret_____1): "m" (processors));
  goto ldv_29114;
  case 2UL:
  __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret_____1): "m" (processors));
  goto ldv_29114;
  case 4UL:
  __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret_____1): "m" (processors));
  goto ldv_29114;
  case 8UL:
  __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret_____1): "m" (processors));
  goto ldv_29114;
  default:
  __bad_percpu_size();
  }
  ldv_29114:
  pscr_ret__ = pfo_ret_____1;
  goto ldv_29101;
  case 8UL: ;
  switch (8UL) {
  case 1UL:
  __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret_____2): "m" (processors));
  goto ldv_29123;
  case 2UL:
  __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret_____2): "m" (processors));
  goto ldv_29123;
  case 4UL:
  __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret_____2): "m" (processors));
  goto ldv_29123;
  case 8UL:
  __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret_____2): "m" (processors));
  goto ldv_29123;
  default:
  __bad_percpu_size();
  }
  ldv_29123:
  pscr_ret__ = pfo_ret_____2;
  goto ldv_29101;
  default:
  __bad_size_call_parameter();
  goto ldv_29101;
  } (CFACreationUtils.addEdgeToCFA, INFO)

lines 8163-8178: Dead code detected: switch (4UL) (CFACreationUtils.addEdgeToCFA, INFO)

line 8165: Dead code detected: __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret_____3): "m" (cpu_number)); (CFACreationUtils.addEdgeToCFA, INFO)

line 8168: Dead code detected: __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret_____3): "m" (cpu_number)); (CFACreationUtils.addEdgeToCFA, INFO)

line 8170: Dead code detected:  (CFACreationUtils.addEdgeToCFA, INFO)

line 8174: Dead code detected: __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret_____3): "m" (cpu_number)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (4UL) {
  case 1UL:
  __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret_____3): "m" (cpu_number));
  goto ldv_29136;
  case 2UL:
  __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret_____3): "m" (cpu_number));
  goto ldv_29136;
  case 4UL:
  __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret_____3): "m" (cpu_number));
  goto ldv_29136;
  case 8UL:
  __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret_____3): "m" (cpu_number));
  goto ldv_29136;
  default:
  __bad_percpu_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

lines 8183-8198: Dead code detected: switch (4UL) (CFACreationUtils.addEdgeToCFA, INFO)

line 8185: Dead code detected: __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret_____4): "m" (cpu_number)); (CFACreationUtils.addEdgeToCFA, INFO)

line 8188: Dead code detected: __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret_____4): "m" (cpu_number)); (CFACreationUtils.addEdgeToCFA, INFO)

line 8190: Dead code detected:  (CFACreationUtils.addEdgeToCFA, INFO)

line 8194: Dead code detected: __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret_____4): "m" (cpu_number)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (4UL) {
  case 1UL:
  __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret_____4): "m" (cpu_number));
  goto ldv_29146;
  case 2UL:
  __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret_____4): "m" (cpu_number));
  goto ldv_29146;
  case 4UL:
  __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret_____4): "m" (cpu_number));
  goto ldv_29146;
  case 8UL:
  __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret_____4): "m" (cpu_number));
  goto ldv_29146;
  default:
  __bad_percpu_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 8205: Dead code detected: __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret_____5): "m" (cpu_number)); (CFACreationUtils.addEdgeToCFA, INFO)

line 8208: Dead code detected: __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret_____5): "m" (cpu_number)); (CFACreationUtils.addEdgeToCFA, INFO)

line 8214: Dead code detected: __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret_____5): "m" (cpu_number)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (4UL) {
  case 1UL:
  __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret_____5): "m" (cpu_number));
  goto ldv_29155;
  case 2UL:
  __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret_____5): "m" (cpu_number));
  goto ldv_29155;
  case 4UL:
  __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret_____5): "m" (cpu_number));
  goto ldv_29155;
  case 8UL:
  __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret_____5): "m" (cpu_number));
  goto ldv_29155;
  default:
  __bad_percpu_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

lines 8223-8238: Dead code detected: switch (4UL) (CFACreationUtils.addEdgeToCFA, INFO)

line 8225: Dead code detected: __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret_____6): "m" (cpu_number)); (CFACreationUtils.addEdgeToCFA, INFO)

line 8228: Dead code detected: __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret_____6): "m" (cpu_number)); (CFACreationUtils.addEdgeToCFA, INFO)

line 8230: Dead code detected:  (CFACreationUtils.addEdgeToCFA, INFO)

line 8234: Dead code detected: __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret_____6): "m" (cpu_number)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (4UL) {
  case 1UL:
  __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret_____6): "m" (cpu_number));
  goto ldv_29164;
  case 2UL:
  __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret_____6): "m" (cpu_number));
  goto ldv_29164;
  case 4UL:
  __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret_____6): "m" (cpu_number));
  goto ldv_29164;
  case 8UL:
  __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret_____6): "m" (cpu_number));
  goto ldv_29164;
  default:
  __bad_percpu_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (4UL) {
  case 1UL: ;
  switch (4UL) {
  case 1UL:
  __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret_____3): "m" (cpu_number));
  goto ldv_29136;
  case 2UL:
  __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret_____3): "m" (cpu_number));
  goto ldv_29136;
  case 4UL:
  __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret_____3): "m" (cpu_number));
  goto ldv_29136;
  case 8UL:
  __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret_____3): "m" (cpu_number));
  goto ldv_29136;
  default:
  __bad_percpu_size();
  }
  ldv_29136:
  pscr_ret_____0 = pfo_ret_____3;
  goto ldv_29142;
  case 2UL: ;
  switch (4UL) {
  case 1UL:
  __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret_____4): "m" (cpu_number));
  goto ldv_29146;
  case 2UL:
  __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret_____4): "m" (cpu_number));
  goto ldv_29146;
  case 4UL:
  __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret_____4): "m" (cpu_number));
  goto ldv_29146;
  case 8UL:
  __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret_____4): "m" (cpu_number));
  goto ldv_29146;
  default:
  __bad_percpu_size();
  }
  ldv_29146:
  pscr_ret_____0 = pfo_ret_____4;
  goto ldv_29142;
  case 4UL: ;
  switch (4UL) {
  case 1UL:
  __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret_____5): "m" (cpu_number));
  goto ldv_29155;
  case 2UL:
  __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret_____5): "m" (cpu_number));
  goto ldv_29155;
  case 4UL:
  __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret_____5): "m" (cpu_number));
  goto ldv_29155;
  case 8UL:
  __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret_____5): "m" (cpu_number));
  goto ldv_29155;
  default:
  __bad_percpu_size();
  }
  ldv_29155:
  pscr_ret_____0 = pfo_ret_____5;
  goto ldv_29142;
  case 8UL: ;
  switch (4UL) {
  case 1UL:
  __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret_____6): "m" (cpu_number));
  goto ldv_29164;
  case 2UL:
  __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret_____6): "m" (cpu_number));
  goto ldv_29164;
  case 4UL:
  __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret_____6): "m" (cpu_number));
  goto ldv_29164;
  case 8UL:
  __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret_____6): "m" (cpu_number));
  goto ldv_29164;
  default:
  __bad_percpu_size();
  }
  ldv_29164:
  pscr_ret_____0 = pfo_ret_____6;
  goto ldv_29142;
  default:
  __bad_size_call_parameter();
  goto ldv_29142;
  } (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 6461: Function pointer *(pr->throttling.acpi_processor_set_throttling) with type int (*)(struct acpi_processor *, int, bool ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

line 4486: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___1 = ldv_zalloc(24UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function acpi_bus_get_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_probe_4 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_release_4 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function alloc_cpumask_var to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function acpi_remove_notify_handler to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function acpi_evaluate_integer to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function acpi_exception to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function driver_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_final_state to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 9526: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___0 = ldv_zalloc(24UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 10736: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___0 = ldv_zalloc(24UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 4597: Destroying the void* pointer ldv_main_exported_3::tmp___1 produces garbage or the memory pointed by it is unused: ldv_main_exported_3(); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 4543: Destroying the void* pointer ldv_main_exported_1::tmp___1 produces garbage or the memory pointed by it is unused: ldv_main_exported_1(); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function mutex_lock_nested to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function acpi_has_method to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function acpi_evaluate_ost to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function find_next_bit to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function cpuidle_pause_and_lock to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function cpuidle_disable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function acpi_evaluate_object to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function acpi_debug_print to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snprintf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function acpi_processor_ffh_cstate_probe to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function cpuidle_resume_and_unlock to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function acpi_processor_power_init_bm_check to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function cpufreq_unregister_notifier to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function unregister_cpu_notifier to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function smp_call_function_single to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function register_syscore_ops to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function register_cpu_notifier to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function cpufreq_register_notifier to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function zalloc_cpumask_var to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_cpumask_var to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function unregister_syscore_ops to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function driver_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function acpi_extract_package to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function cpuidle_get_driver to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function thermal_cooling_device_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dmi_check_system to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function acpi_os_write_port to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strncpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function cpuidle_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function cpuidle_unregister_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function cpuidle_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sysfs_remove_link to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function thermal_cooling_device_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            10671 (10% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  9053 (85%)
  Because of loop head:            1605 (15%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         13 (0%)
  Times precision was empty:       9242 (87%)
  Times precision was {false}:     183 (2%)
  Times result was cached:         1120 (10%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      126 (1%)
  Times result was 'false':        112 (1%)
Number of strengthen sat checks:   0
Number of coverage checks:         24488
  BDD entailment checks:           2720
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       69
Number of predicates discovered:          9
Number of abstraction locations:          49
Max number of predicates per location:    8
Avg number of predicates per location:    1
Total predicates per abstraction:         2949
Max number of predicates per abstraction: 8
Avg number of predicates per abstraction: 9.54
Number of irrelevant predicates:          2229 (76%)
Number of preds handled by boolean abs:   264 (9%)
  Total number of models for allsat:      526
  Max number of models for allsat:        64
  Avg number of models for allsat:        4.17

Time for post operator:                 12.295s
  Time for path formula creation:       12.175s
Time for strengthen operator:            0.254s
Time for prec operator:                  2.216s
  Time for abstraction:                  1.743s (Max:     0.048s, Count: 10671)
    Boolean abstraction:                 0.410s
    Solving time:                        0.353s (Max:     0.024s)
    Model enumeration time:              0.142s
    Time for BDD construction:           0.069s (Max:     0.012s)
Time for merge operator:                 1.423s
Time for coverage check:                 0.049s
  Time for BDD entailment checks:        0.038s
Total time for SMT solver (w/o itp):     0.495s

Number of path formula cache hits:   71208 (59%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    11.197s

Total number of created targets for pointer analysis: 7199
   Number of created targets for uf: *(Return_type:_[signed_int],_Parameters:_3,_Parameter_1_type:_[(struct_cpuidle_device)*],_Parameter_2_type:_[(struct_cpuidle_driver)*],_Parameter_3_type:_[signed_int],_VarArgs:_false)* is 441
   Number of created targets for uf: *signed_int is 20
   Number of created targets for uf: *unsigned_char is 319
   Number of created targets for uf: *(struct_acpi_device)* is 3
   Number of created targets for uf: *unsigned_int is 81
   Number of created targets for uf: *unsigned_long_int is 21


Number of BDD nodes:                               949
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         413 (count: 13749, min: 0, max: 85, avg: 0.03)
Time for BDD node cleanup:                             0.008s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.529s
  Time for transition matches:                         0.260s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.001s
Automaton transfers with branching:                0
Automaton transfer successors:                       108694 (count: 108694, min: 1, max: 1, avg: 1.00) [1 x 108694]

CPA algorithm statistics
------------------------
Number of iterations:            66167
Max size of waitlist:            175
Average size of waitlist:        89
Number of computed successors:   80862
Max successors for one state:    2
Number of times merged:          10884
Number of times stopped:         13224
Number of times breaked:         13

Total time for CPA algorithm:        22.329s (Max:     4.300s)
  Time for choose from waitlist:      0.124s
  Time for precision adjustment:      3.443s
  Time for transfer relation:        15.388s
  Time for merge operator:            1.934s
  Time for stop operator:             0.301s
  Time for adding to reached set:     0.350s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   13
Avg. length of target path (in blocks):                 394 (count: 13, min: 19, max: 43, avg: 30.31)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.787s
  Counterexample analysis:                             0.393s (Max:     0.047s, Calls: 13)
    Refinement sat check:                              0.284s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.001s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.022s
  Precision update:                                    0.015s
  ARG update:                                          0.347s

Length of refined path (in blocks):                     264 (count: 13, min: 6, max: 42, avg: 20.31)
Number of affected states:                              223 (count: 13, min: 1, max: 41, avg: 17.15)
Length (states) of path with itp 'true':                 28 (count: 13, min: 0, max: 4, avg: 2.15)
Length (states) of path with itp non-trivial itp:       223 (count: 13, min: 1, max: 41, avg: 17.15)
Length (states) of path with itp 'false':                13 (count: 13, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 13, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:             210 (count: 13, min: 0, max: 40, avg: 16.15)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                13
Number of successful refinements:     13
Number of failed refinements:         0
Max. size of reached set before ref.: 8264
Max. size of reached set after ref.:  23
Avg. size of reached set before ref.: 5207.92
Avg. size of reached set after ref.:  13.77

Total time for CEGAR algorithm:      23.297s
Time for refinements:                 0.968s
Average time for refinement:          0.074s
Max time for refinement:              0.139s

Code Coverage
-----------------------------
  Function coverage:      0.006
  Visited lines:          791
  Total lines:            3890
  Line coverage:          0.203
  Visited conditions:     0
  Total conditions:       1270
  Condition coverage:     0.000

CPAchecker general statistics
-----------------------------
Number of program locations:     5377
Number of CFA edges:             6127
Number of relevant variables:    757
Number of functions:             157
Number of loops:                 35
Size of reached set:             3
  Number of reached locations:   3 (0%)
    Avg states per location:     1
    Max states per location:     1 (at node N378)
  Number of reached functions:   1 (1%)
  Number of partitions:          3
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0
  Size of final wait list        1

Time for analysis setup:          6.974s
  Time for loading CPAs:          1.051s
  Time for loading parser:        0.714s
  Time for CFA construction:      5.032s
    Time for parsing file(s):     1.195s
    Time for AST to CFA:          1.892s
    Time for CFA sanity check:    0.427s
    Time for post-processing:     1.319s
      Time for var class.:        0.695s
Time for Analysis:               23.297s
CPU time for analysis:           23.290s
Total time for CPAchecker:       30.276s
Total CPU time for CPAchecker:   30.250s
Time for statistics:              0.109s

Time for Garbage Collector:       0.902s (in 43 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                101MB (    97 MiB) max;     58MB (    55 MiB) avg;    109MB (   104 MiB) peak
Used non-heap memory:             41MB (    39 MiB) max;     36MB (    34 MiB) avg;     42MB (    40 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        43MB (    41 MiB) max;     38MB (    36 MiB) avg
Total process virtual memory:   8085MB (  7711 MiB) max;   8071MB (  7697 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
