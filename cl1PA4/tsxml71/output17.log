scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.16-rc1/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--gpu--drm--via--via.ko-entry_point_true-unreach-call.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_okom063y/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 4465: Dead code detected: __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

line 4468: Dead code detected: __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

line 4471: Dead code detected: __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (8UL) {
  case 1UL:
  __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& current_task));
  goto ldv_3067;
  case 2UL:
  __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_3067;
  case 4UL:
  __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_3067;
  case 8UL:
  __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_3067;
  default:
  __bad_percpu_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 9338: Function pointer *(ops->map_page) with type dma_addr_t (*)(struct device *, struct page *, unsigned long, size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 9271-9272: Function pointer *(ops->map_page) with type dma_addr_t (*)(struct device *, struct page *, unsigned long, size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9368: Function pointer *(ops->unmap_page) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9305: Function pointer *(ops->unmap_page) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

line 5448: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp = ldv_zalloc(184UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 5460: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___5 = ldv_zalloc(16UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_release_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function drm_ioctl to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function drm_open to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function noop_llseek to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function drm_poll to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function drm_compat_ioctl to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function drm_release to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function drm_mmap to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function drm_idlelock_take to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock_nested to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function drm_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function drm_mm_takedown to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __wake_up to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function idr_destroy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function drm_pci_exit to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_final_state to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function drm_ut_debug_printk to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function drm_pci_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function drm_idlelock_release to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function list_del to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function drm_mm_remove_node to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function drm_irq_uninstall to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function msleep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            12421 (16% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  10011 (81%)
  Because of loop head:            2377 (19%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         33 (0%)
  Times precision was empty:       7163 (58%)
  Times precision was {false}:     414 (3%)
  Times result was cached:         4679 (38%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      165 (1%)
  Times result was 'false':        1578 (13%)
Number of strengthen sat checks:   0
Number of coverage checks:         12095
  BDD entailment checks:           2931
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       60
Number of predicates discovered:          4
Number of abstraction locations:          88
Max number of predicates per location:    3
Avg number of predicates per location:    1
Total predicates per abstraction:         7203
Max number of predicates per abstraction: 3
Avg number of predicates per abstraction: 12.44
Number of irrelevant predicates:          3704 (51%)
Number of preds handled by boolean abs:   194 (3%)
  Total number of models for allsat:      160
  Max number of models for allsat:        2
  Avg number of models for allsat:        0.97

Time for post operator:                  7.801s
  Time for path formula creation:        7.577s
Time for strengthen operator:            0.254s
Time for prec operator:                  5.671s
  Time for abstraction:                  5.124s (Max:     0.108s, Count: 12421)
    Boolean abstraction:                 1.034s
    Solving time:                        1.321s (Max:     0.097s)
    Model enumeration time:              0.037s
    Time for BDD construction:           0.022s (Max:     0.007s)
Time for merge operator:                 0.499s
Time for coverage check:                 0.087s
  Time for BDD entailment checks:        0.075s
Total time for SMT solver (w/o itp):     1.358s

Number of path formula cache hits:   57401 (65%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     6.813s

Total number of created targets for pointer analysis: 17256
   Number of created targets for uf: *enum_ldv_27179 is 6553
   Number of created targets for uf: *signed_int is 13
   Number of created targets for uf: *unsigned_int is 197


Number of BDD nodes:                               216
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         346 (count: 13711, min: 0, max: 106, avg: 0.03)
Time for BDD node cleanup:                             0.009s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.483s
Automaton transfers with branching:                0
Automaton transfer successors:                        79402 (count: 79402, min: 1, max: 1, avg: 1.00) [1 x 79402]

CPA algorithm statistics
------------------------
Number of iterations:            49733
Max size of waitlist:            84
Average size of waitlist:        36
Number of computed successors:   59258
Max successors for one state:    2
Number of times merged:          4582
Number of times stopped:         6552
Number of times breaked:         33

Total time for CPA algorithm:        19.884s (Max:     2.103s)
  Time for choose from waitlist:      0.158s
  Time for precision adjustment:      6.799s
  Time for transfer relation:        10.475s
  Time for merge operator:            0.752s
  Time for stop operator:             0.360s
  Time for adding to reached set:     0.402s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   33
Avg. length of target path (in blocks):                1182 (count: 33, min: 14, max: 57, avg: 35.82)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   3.067s
  Counterexample analysis:                             2.578s (Max:     0.144s, Calls: 33)
    Refinement sat check:                              2.197s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.009s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.046s
  Precision update:                                    0.051s
  ARG update:                                          0.320s

Length of refined path (in blocks):                    1024 (count: 33, min: 10, max: 56, avg: 31.03)
Number of affected states:                              846 (count: 33, min: 1, max: 55, avg: 25.64)
Length (states) of path with itp 'true':                145 (count: 33, min: 0, max: 25, avg: 4.39)
Length (states) of path with itp non-trivial itp:       846 (count: 33, min: 1, max: 55, avg: 25.64)
Length (states) of path with itp 'false':                33 (count: 33, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 33, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:             813 (count: 33, min: 0, max: 54, avg: 24.64)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                33
Number of successful refinements:     33
Number of failed refinements:         0
Max. size of reached set before ref.: 2102
Max. size of reached set after ref.:  348
Avg. size of reached set before ref.: 1541.03
Avg. size of reached set after ref.:  29.36

Total time for CEGAR algorithm:      23.185s
Time for refinements:                 3.297s
Average time for refinement:          0.099s
Max time for refinement:              0.166s

Code Coverage
-----------------------------
  Function coverage:      0.266
  Visited lines:          1537
  Total lines:            4216
  Line coverage:          0.365
  Visited conditions:     262
  Total conditions:       1218
  Condition coverage:     0.215

CPAchecker general statistics
-----------------------------
Number of program locations:     5831
Number of CFA edges:             6642
Number of relevant variables:    923
Number of functions:             184
Number of loops:                 53
Size of reached set:             1243
  Number of reached locations:   667 (11%)
    Avg states per location:     1
    Max states per location:     14 (at node N1126)
  Number of reached functions:   49 (27%)
  Number of partitions:          1242
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N773 (before line 5486), Function main called from node N700, stack depth 1 [270d43a7], stack [main]])
  Number of target states:       0
  Size of final wait list        21

Time for analysis setup:          7.056s
  Time for loading CPAs:          1.168s
  Time for loading parser:        0.676s
  Time for CFA construction:      5.076s
    Time for parsing file(s):     1.183s
    Time for AST to CFA:          1.858s
    Time for CFA sanity check:    0.450s
    Time for post-processing:     1.423s
      Time for var class.:        0.610s
Time for Analysis:               23.185s
CPU time for analysis:           23.180s
Total time for CPAchecker:       30.246s
Total CPU time for CPAchecker:   30.220s
Time for statistics:              0.175s

Time for Garbage Collector:       0.643s (in 40 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 84MB (    80 MiB) max;     56MB (    53 MiB) avg;     87MB (    83 MiB) peak
Used non-heap memory:             48MB (    46 MiB) max;     41MB (    39 MiB) avg;     49MB (    47 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        50MB (    47 MiB) max;     42MB (    40 MiB) avg
Total process virtual memory:   8086MB (  7711 MiB) max;   8073MB (  7699 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
