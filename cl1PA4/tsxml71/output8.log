scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.16-rc1/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--gpu--drm--via--via.ko-entry_point_true-unreach-call.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_p9ae9pzo/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 4465: Dead code detected: __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

line 4468: Dead code detected: __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

line 4471: Dead code detected: __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (8UL) {
  case 1UL:
  __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& current_task));
  goto ldv_3067;
  case 2UL:
  __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_3067;
  case 4UL:
  __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_3067;
  case 8UL:
  __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_3067;
  default:
  __bad_percpu_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 9338: Function pointer *(ops->map_page) with type dma_addr_t (*)(struct device *, struct page *, unsigned long, size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 9271-9272: Function pointer *(ops->map_page) with type dma_addr_t (*)(struct device *, struct page *, unsigned long, size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9368: Function pointer *(ops->unmap_page) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9305: Function pointer *(ops->unmap_page) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

line 5448: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp = ldv_zalloc(184UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 5460: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___5 = ldv_zalloc(16UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_release_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function drm_ioctl to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function drm_open to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function noop_llseek to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function drm_poll to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function drm_compat_ioctl to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function drm_release to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function drm_mmap to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function drm_pci_exit to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function drm_pci_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function drm_ut_debug_printk to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __init_waitqueue_head to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock_nested to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function drm_mm_takedown to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function do_gettimeofday to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function drm_handle_vblank to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __wake_up to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function drm_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function drm_irq_uninstall to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function msleep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function drm_core_ioremapfree to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function idr_destroy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function drm_idlelock_take to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function drm_idlelock_release to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function list_del to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function drm_mm_remove_node to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_final_state to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function idr_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_set_master to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function drm_vblank_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            21278 (21% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  19451 (91%)
  Because of loop head:            1802 (8%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         25 (0%)
  Times precision was empty:       17866 (84%)
  Times precision was {false}:     288 (1%)
  Times result was cached:         2997 (14%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      127 (1%)
  Times result was 'false':        768 (4%)
Number of strengthen sat checks:   0
Number of coverage checks:         13971
  BDD entailment checks:           3037
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       60
Number of predicates discovered:          4
Number of abstraction locations:          74
Max number of predicates per location:    3
Avg number of predicates per location:    1
Total predicates per abstraction:         3883
Max number of predicates per abstraction: 3
Avg number of predicates per abstraction: 9.36
Number of irrelevant predicates:          2594 (67%)
Number of preds handled by boolean abs:   154 (4%)
  Total number of models for allsat:      125
  Max number of models for allsat:        2
  Avg number of models for allsat:        0.98

Time for post operator:                  7.558s
  Time for path formula creation:        7.375s
Time for strengthen operator:            0.146s
Time for prec operator:                  5.521s
  Time for abstraction:                  4.807s (Max:     0.229s, Count: 21278)
    Boolean abstraction:                 0.873s
    Solving time:                        2.061s (Max:     0.222s)
    Model enumeration time:              0.028s
    Time for BDD construction:           0.034s (Max:     0.011s)
Time for merge operator:                 0.347s
Time for coverage check:                 0.096s
  Time for BDD entailment checks:        0.080s
Total time for SMT solver (w/o itp):     2.089s

Number of path formula cache hits:   104854 (84%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     6.666s

Total number of created targets for pointer analysis: 40213
   Number of created targets for uf: *(void)* is 3
   Number of created targets for uf: *enum_ldv_27179 is 6865
   Number of created targets for uf: *signed_int is 277
   Number of created targets for uf: *(struct_list_head)* is 7
   Number of created targets for uf: *signed_long_int is 4
   Number of created targets for uf: *unsigned_int is 589


Number of BDD nodes:                               213
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         276 (count: 23304, min: 0, max: 158, avg: 0.01)
Time for BDD node cleanup:                             0.036s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.590s
  Time for transition matches:                         0.201s
  Time for transition assertions:                      0.001s
  Time for transition actions:                         0.000s
Automaton transfers with branching:                0
Automaton transfer successors:                       102689 (count: 102689, min: 1, max: 1, avg: 1.00) [1 x 102689]

CPA algorithm statistics
------------------------
Number of iterations:            70466
Max size of waitlist:            72
Average size of waitlist:        27
Number of computed successors:   80543
Max successors for one state:    2
Number of times merged:          5467
Number of times stopped:         8401
Number of times breaked:         25

Total time for CPA algorithm:        20.608s (Max:     2.659s)
  Time for choose from waitlist:      0.253s
  Time for precision adjustment:      7.012s
  Time for transfer relation:        10.871s
  Time for merge operator:            0.613s
  Time for stop operator:             0.376s
  Time for adding to reached set:     0.429s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   25
Avg. length of target path (in blocks):                 779 (count: 25, min: 14, max: 59, avg: 31.16)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   2.094s
  Counterexample analysis:                             1.610s (Max:     0.090s, Calls: 25)
    Refinement sat check:                              1.319s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.039s
  Precision update:                                    0.027s
  ARG update:                                          0.400s

Length of refined path (in blocks):                     632 (count: 25, min: 10, max: 58, avg: 25.28)
Number of affected states:                              462 (count: 25, min: 1, max: 57, avg: 18.48)
Length (states) of path with itp 'true':                145 (count: 25, min: 0, max: 25, avg: 5.80)
Length (states) of path with itp non-trivial itp:       462 (count: 25, min: 1, max: 57, avg: 18.48)
Length (states) of path with itp 'false':                25 (count: 25, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 25, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:             437 (count: 25, min: 0, max: 56, avg: 17.48)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                25
Number of successful refinements:     25
Number of failed refinements:         0
Max. size of reached set before ref.: 5901
Max. size of reached set after ref.:  344
Avg. size of reached set before ref.: 2787.80
Avg. size of reached set after ref.:  37.64

Total time for CEGAR algorithm:      22.927s
Time for refinements:                 2.319s
Average time for refinement:          0.092s
Max time for refinement:              0.143s

Code Coverage
-----------------------------
  Function coverage:      0.348
  Visited lines:          1593
  Total lines:            4216
  Line coverage:          0.378
  Visited conditions:     340
  Total conditions:       1218
  Condition coverage:     0.279

CPAchecker general statistics
-----------------------------
Number of program locations:     5831
Number of CFA edges:             6642
Number of relevant variables:    923
Number of functions:             184
Number of loops:                 53
Size of reached set:             2621
  Number of reached locations:   877 (15%)
    Avg states per location:     2
    Max states per location:     92 (at node N70)
  Number of reached functions:   64 (35%)
  Number of partitions:          2619
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N773 (before line 5486), Function main called from node N700, stack depth 1 [270d43a7], stack [main]])
  Number of target states:       0
  Size of final wait list        19

Time for analysis setup:          7.315s
  Time for loading CPAs:          1.044s
  Time for loading parser:        0.736s
  Time for CFA construction:      5.353s
    Time for parsing file(s):     1.303s
    Time for AST to CFA:          1.901s
    Time for CFA sanity check:    0.507s
    Time for post-processing:     1.478s
      Time for var class.:        0.663s
Time for Analysis:               22.927s
CPU time for analysis:           22.930s
Total time for CPAchecker:       30.254s
Total CPU time for CPAchecker:   30.240s
Time for statistics:              0.183s

Time for Garbage Collector:       0.675s (in 45 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 77MB (    74 MiB) max;     52MB (    49 MiB) avg;     81MB (    77 MiB) peak
Used non-heap memory:             41MB (    39 MiB) max;     34MB (    33 MiB) avg;     41MB (    39 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        43MB (    41 MiB) max;     36MB (    34 MiB) avg
Total process virtual memory:   8085MB (  7711 MiB) max;   8070MB (  7696 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
