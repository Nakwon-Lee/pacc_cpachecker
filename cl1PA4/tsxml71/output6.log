scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.16-rc1/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--gpu--drm--via--via.ko-entry_point_true-unreach-call.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_0p68_j07/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 4465: Dead code detected: __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

line 4468: Dead code detected: __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

line 4471: Dead code detected: __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (8UL) {
  case 1UL:
  __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& current_task));
  goto ldv_3067;
  case 2UL:
  __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_3067;
  case 4UL:
  __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_3067;
  case 8UL:
  __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_3067;
  default:
  __bad_percpu_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 9338: Function pointer *(ops->map_page) with type dma_addr_t (*)(struct device *, struct page *, unsigned long, size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 9271-9272: Function pointer *(ops->map_page) with type dma_addr_t (*)(struct device *, struct page *, unsigned long, size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9368: Function pointer *(ops->unmap_page) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9305: Function pointer *(ops->unmap_page) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

line 5448: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp = ldv_zalloc(184UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 5460: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___5 = ldv_zalloc(16UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_release_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function drm_ioctl to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function drm_open to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function noop_llseek to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function drm_poll to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function drm_compat_ioctl to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function drm_release to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function drm_mmap to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function drm_idlelock_take to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock_nested to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function idr_destroy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function drm_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function drm_mm_takedown to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function drm_pci_exit to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_final_state to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function drm_idlelock_release to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __wake_up to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function drm_ut_debug_printk to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __init_waitqueue_head to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function do_gettimeofday to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function drm_irq_uninstall to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function drm_handle_vblank to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function drm_pci_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            33556 (23% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  32181 (96%)
  Because of loop head:            1359 (4%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         16 (0%)
  Times precision was empty:       32619 (97%)
  Times precision was {false}:     127 (0%)
  Times result was cached:         776 (2%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      34 (0%)
  Times result was 'false':        333 (1%)
Number of strengthen sat checks:   0
Number of coverage checks:         18351
  BDD entailment checks:           4687
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       60
Number of predicates discovered:          3
Number of abstraction locations:          43
Max number of predicates per location:    2
Avg number of predicates per location:    1
Total predicates per abstraction:         941
Max number of predicates per abstraction: 2
Avg number of predicates per abstraction: 5.84
Number of irrelevant predicates:          564 (60%)
Number of preds handled by boolean abs:   36 (4%)
  Total number of models for allsat:      33
  Max number of models for allsat:        2
  Avg number of models for allsat:        0.97

Time for post operator:                  8.472s
  Time for path formula creation:        8.220s
Time for strengthen operator:            0.317s
Time for prec operator:                  2.693s
  Time for abstraction:                  1.568s (Max:     0.092s, Count: 33556)
    Boolean abstraction:                 0.334s
    Solving time:                        0.347s (Max:     0.087s)
    Model enumeration time:              0.011s
    Time for BDD construction:           0.003s (Max:     0.001s)
Time for merge operator:                 0.526s
Time for coverage check:                 0.069s
  Time for BDD entailment checks:        0.049s
Total time for SMT solver (w/o itp):     0.358s

Number of path formula cache hits:   152649 (84%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     7.171s

Total number of created targets for pointer analysis: 33469
   Number of created targets for uf: *enum_ldv_27179 is 313
   Number of created targets for uf: *signed_int is 25
   Number of created targets for uf: *signed_long_int is 2
   Number of created targets for uf: *unsigned_int is 3105


Number of BDD nodes:                               203
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                          46 (count: 38222, min: 0, max: 24, avg: 0.00)
Time for BDD node cleanup:                             0.031s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.826s
  Time for transition matches:                         0.375s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.000s
Automaton transfers with branching:                0
Automaton transfer successors:                       147454 (count: 147454, min: 1, max: 1, avg: 1.00) [1 x 147454]

CPA algorithm statistics
------------------------
Number of iterations:            102966
Max size of waitlist:            101
Average size of waitlist:        58
Number of computed successors:   115175
Max successors for one state:    2
Number of times merged:          6832
Number of times stopped:         11199
Number of times breaked:         16

Total time for CPA algorithm:        21.061s (Max:     3.507s)
  Time for choose from waitlist:      0.305s
  Time for precision adjustment:      4.817s
  Time for transfer relation:        12.899s
  Time for merge operator:            0.893s
  Time for stop operator:             0.442s
  Time for adding to reached set:     0.530s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   16
Avg. length of target path (in blocks):                 327 (count: 16, min: 14, max: 43, avg: 20.44)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   1.455s
  Counterexample analysis:                             0.902s (Max:     0.067s, Calls: 16)
    Refinement sat check:                              0.749s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.012s
  Precision update:                                    0.016s
  ARG update:                                          0.511s

Length of refined path (in blocks):                     192 (count: 16, min: 10, max: 42, avg: 12.00)
Number of affected states:                               56 (count: 16, min: 1, max: 41, avg: 3.50)
Length (states) of path with itp 'true':                120 (count: 16, min: 0, max: 8, avg: 7.50)
Length (states) of path with itp non-trivial itp:        56 (count: 16, min: 1, max: 41, avg: 3.50)
Length (states) of path with itp 'false':                16 (count: 16, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 16, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:              40 (count: 16, min: 0, max: 40, avg: 2.50)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                16
Number of successful refinements:     16
Number of failed refinements:         0
Max. size of reached set before ref.: 9088
Max. size of reached set after ref.:  38
Avg. size of reached set before ref.: 6494.06
Avg. size of reached set after ref.:  35.81

Total time for CEGAR algorithm:      22.791s
Time for refinements:                 1.723s
Average time for refinement:          0.107s
Max time for refinement:              0.209s

Code Coverage
-----------------------------
  Function coverage:      0.043
  Visited lines:          1083
  Total lines:            4216
  Line coverage:          0.257
  Visited conditions:     158
  Total conditions:       1218
  Condition coverage:     0.130

CPAchecker general statistics
-----------------------------
Number of program locations:     5831
Number of CFA edges:             6642
Number of relevant variables:    923
Number of functions:             184
Number of loops:                 53
Size of reached set:             312
  Number of reached locations:   272 (5%)
    Avg states per location:     1
    Max states per location:     4 (at node N634)
  Number of reached functions:   8 (4%)
  Number of partitions:          312
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0
  Size of final wait list        1

Time for analysis setup:          7.415s
  Time for loading CPAs:          1.138s
  Time for loading parser:        0.794s
  Time for CFA construction:      5.324s
    Time for parsing file(s):     1.367s
    Time for AST to CFA:          1.868s
    Time for CFA sanity check:    0.435s
    Time for post-processing:     1.453s
      Time for var class.:        0.677s
Time for Analysis:               22.792s
CPU time for analysis:           22.780s
Total time for CPAchecker:       30.212s
Total CPU time for CPAchecker:   30.180s
Time for statistics:              0.083s

Time for Garbage Collector:       0.969s (in 50 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                105MB (   101 MiB) max;     62MB (    59 MiB) avg;    110MB (   105 MiB) peak
Used non-heap memory:             47MB (    44 MiB) max;     40MB (    38 MiB) avg;     47MB (    45 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        48MB (    46 MiB) max;     41MB (    39 MiB) avg
Total process virtual memory:   8086MB (  7711 MiB) max;   8071MB (  7697 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
