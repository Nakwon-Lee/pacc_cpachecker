scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.16-rc1/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--usb--dwc2--dwc2_gadget.ko-entry_point_true-unreach-call.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_bq4sk1ey/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 7313: Dead code detected: __ms = 3UL; (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 7069: Function pointer *(hsotg->driver->disconnect) with type void (*)(struct usb_gadget *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7598: Function pointer *(hsotg->driver->resume) with type void (*)(struct usb_gadget *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7585: Function pointer *(hsotg->driver->suspend) with type void (*)(struct usb_gadget *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 8083: Function pointer *(hsotg->plat->phy_exit) with type int (*)(struct platform_device *, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 8059: Function pointer *(hsotg->plat->phy_init) with type int (*)(struct platform_device *, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 5754: Function pointer *(hsotg->driver->setup) with type int (*)(struct usb_gadget *, const struct usb_ctrlrequest *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 4422: Function pointer *(x->init) with type int (*)(struct usb_phy *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 4436: Function pointer *(x->shutdown) with type void (*)(struct usb_phy *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

line 9181: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___1 = ldv_zalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 9189: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___5 = ldv_zalloc(8UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 9193: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___7 = ldv_zalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 9199: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___10 = ldv_zalloc(8UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 9203: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___12 = ldv_zalloc(8UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 9205: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___13 = ldv_zalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function seq_lseek to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function seq_read to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function single_release to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _dev_info to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function single_open to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __platform_driver_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 8083: Ignoring function call through function pointer *(hsotg->plat->phy_exit): (*(hsotg->plat->phy_exit))(pdev, hsotg->plat->phy_type); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function phy_power_off to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function phy_exit to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 4436: Ignoring function call through function pointer *(x->shutdown): (*(x->shutdown))(x); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function dev_warn to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function devm_kmalloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function devm_phy_get to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_driver_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_dev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_gadget_map_request to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __list_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iowrite32_rep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __list_del_entry to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 8059: Ignoring function call through function pointer *(hsotg->plat->phy_init): (*(hsotg->plat->phy_init))(pdev, hsotg->plat->phy_type); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function phy_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function phy_power_on to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function trace_hardirqs_off to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function trace_hardirqs_on to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_final_state to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            18985 (14% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  17993 (95%)
  Because of loop head:            972 (5%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         20 (0%)
  Times precision was empty:       16772 (88%)
  Times precision was {false}:     477 (3%)
  Times result was cached:         1575 (8%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      161 (1%)
  Times result was 'false':        186 (1%)
Number of strengthen sat checks:   0
Number of coverage checks:         17403
  BDD entailment checks:           2511
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       54
Number of predicates discovered:          8
Number of abstraction locations:          76
Max number of predicates per location:    7
Avg number of predicates per location:    1
Total predicates per abstraction:         3715
Max number of predicates per abstraction: 7
Avg number of predicates per abstraction: 5.82
Number of irrelevant predicates:          2385 (64%)
Number of preds handled by boolean abs:   312 (8%)
  Total number of models for allsat:      989
  Max number of models for allsat:        64
  Avg number of models for allsat:        6.14

Time for post operator:                  7.826s
  Time for path formula creation:        7.540s
Time for strengthen operator:            0.256s
Time for prec operator:                  4.462s
  Time for abstraction:                  3.788s (Max:     0.069s, Count: 18985)
    Boolean abstraction:                 1.178s
    Solving time:                        0.778s (Max:     0.017s)
    Model enumeration time:              0.594s
    Time for BDD construction:           0.102s (Max:     0.016s)
Time for merge operator:                 0.621s
Time for coverage check:                 0.087s
  Time for BDD entailment checks:        0.037s
Total time for SMT solver (w/o itp):     1.372s

Number of path formula cache hits:   95503 (63%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     6.676s

Total number of created targets for pointer analysis: 217
   Number of created targets for uf: *(void)* is 13
   Number of created targets for uf: *signed_int is 4
   Number of created targets for uf: *unsigned_char is 16
   Number of created targets for uf: *(struct_list_head)* is 13
   Number of created targets for uf: *enum_usb_device_speed is 17
   Number of created targets for uf: *(Return_type:_[void],_Parameters:_2,_Parameter_1_type:_[(struct_usb_ep)*],_Parameter_2_type:_[(struct_usb_request)*],_VarArgs:_false)* is 3
   Number of created targets for uf: *unsigned_int is 21


Number of BDD nodes:                               779
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         457 (count: 22786, min: 0, max: 82, avg: 0.02)
Time for BDD node cleanup:                             0.026s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.675s
  Time for transition matches:                         0.327s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.001s
Automaton transfers with branching:                0
Automaton transfer successors:                       134819 (count: 134819, min: 1, max: 1, avg: 1.00) [1 x 134819]

CPA algorithm statistics
------------------------
Number of iterations:            77482
Max size of waitlist:            191
Average size of waitlist:        61
Number of computed successors:   89392
Max successors for one state:    2
Number of times merged:          7446
Number of times stopped:         9491
Number of times breaked:         20

Total time for CPA algorithm:        22.011s (Max:     1.985s)
  Time for choose from waitlist:      0.233s
  Time for precision adjustment:      6.079s
  Time for transfer relation:        12.537s
  Time for merge operator:            1.057s
  Time for stop operator:             0.381s
  Time for adding to reached set:     0.583s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   20
Avg. length of target path (in blocks):                1075 (count: 20, min: 20, max: 216, avg: 53.75)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   1.246s
  Counterexample analysis:                             0.678s (Max:     0.113s, Calls: 20)
    Refinement sat check:                              0.436s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.005s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.056s
  Precision update:                                    0.014s
  ARG update:                                          0.455s

Length of refined path (in blocks):                     727 (count: 20, min: 16, max: 77, avg: 36.35)
Number of affected states:                              539 (count: 20, min: 1, max: 76, avg: 26.95)
Length (states) of path with itp 'true':                168 (count: 20, min: 0, max: 14, avg: 8.40)
Length (states) of path with itp non-trivial itp:       539 (count: 20, min: 1, max: 76, avg: 26.95)
Length (states) of path with itp 'false':                20 (count: 20, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 20, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:             519 (count: 20, min: 0, max: 75, avg: 25.95)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                20
Number of successful refinements:     20
Number of failed refinements:         0
Max. size of reached set before ref.: 8832
Max. size of reached set after ref.:  73
Avg. size of reached set before ref.: 3750.40
Avg. size of reached set after ref.:  45.00

Total time for CEGAR algorithm:      23.476s
Time for refinements:                 1.464s
Average time for refinement:          0.073s
Max time for refinement:              0.168s

Code Coverage
-----------------------------
  Function coverage:      0.503
  Visited lines:          2056
  Total lines:            4240
  Line coverage:          0.485
  Visited conditions:     422
  Total conditions:       1096
  Condition coverage:     0.385

CPAchecker general statistics
-----------------------------
Number of program locations:     6019
Number of CFA edges:             6995
Number of relevant variables:    889
Number of functions:             145
Number of loops:                 30
Size of reached set:             5608
  Number of reached locations:   1161 (19%)
    Avg states per location:     4
    Max states per location:     189 (at node N225)
  Number of reached functions:   73 (50%)
  Number of partitions:          5607
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N4979 (before line 9226), Function main called from node N4882, stack depth 1 [8a6631b], stack [main]])
  Number of target states:       0
  Size of final wait list        98

Time for analysis setup:          6.794s
  Time for loading CPAs:          1.015s
  Time for loading parser:        0.728s
  Time for CFA construction:      4.872s
    Time for parsing file(s):     1.236s
    Time for AST to CFA:          1.623s
    Time for CFA sanity check:    0.510s
    Time for post-processing:     1.301s
      Time for var class.:        0.702s
Time for Analysis:               23.482s
CPU time for analysis:           23.470s
Total time for CPAchecker:       30.280s
Total CPU time for CPAchecker:   30.250s
Time for statistics:              0.267s

Time for Garbage Collector:       0.887s (in 46 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 94MB (    90 MiB) max;     56MB (    54 MiB) avg;    100MB (    96 MiB) peak
Used non-heap memory:             40MB (    39 MiB) max;     35MB (    33 MiB) avg;     41MB (    39 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        42MB (    40 MiB) max;     37MB (    35 MiB) avg
Total process virtual memory:   8086MB (  7711 MiB) max;   8071MB (  7697 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
