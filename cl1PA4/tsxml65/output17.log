scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.16-rc1/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--usb--dwc2--dwc2_gadget.ko-entry_point_true-unreach-call.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_q8dn7h5c/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 7313: Dead code detected: __ms = 3UL; (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 7069: Function pointer *(hsotg->driver->disconnect) with type void (*)(struct usb_gadget *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7598: Function pointer *(hsotg->driver->resume) with type void (*)(struct usb_gadget *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7585: Function pointer *(hsotg->driver->suspend) with type void (*)(struct usb_gadget *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 8083: Function pointer *(hsotg->plat->phy_exit) with type int (*)(struct platform_device *, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 8059: Function pointer *(hsotg->plat->phy_init) with type int (*)(struct platform_device *, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 5754: Function pointer *(hsotg->driver->setup) with type int (*)(struct usb_gadget *, const struct usb_ctrlrequest *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 4422: Function pointer *(x->init) with type int (*)(struct usb_phy *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 4436: Function pointer *(x->shutdown) with type void (*)(struct usb_phy *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

line 9181: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___1 = ldv_zalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 9189: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___5 = ldv_zalloc(8UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 9193: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___7 = ldv_zalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 9199: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___10 = ldv_zalloc(8UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 9203: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___12 = ldv_zalloc(8UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 9205: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___13 = ldv_zalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function seq_lseek to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function seq_read to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function single_release to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_driver_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function single_open to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __platform_driver_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_del_gadget_udc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function debugfs_remove to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_gadget_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 8083: Ignoring function call through function pointer *(hsotg->plat->phy_exit): (*(hsotg->plat->phy_exit))(pdev, hsotg->plat->phy_type); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function phy_power_off to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function phy_exit to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function clk_disable to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function clk_unprepare to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 4436: Ignoring function call through function pointer *(x->shutdown): (*(x->shutdown))(x); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function _dev_info to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function regulator_bulk_enable to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_dev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __list_del_entry to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_gadget_unmap_request to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 5946: Ignoring function call through function pointer *(hs_req->req.complete): (*(hs_req->req.complete))(&(hs_ep->ep), &(hs_req->req)); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function _raw_spin_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __list_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_gadget_map_request to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Recursion detected, aborting. To ignore recursion, add -skipRecursion to the command line. (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, INFO)

Error: line 7025: Unsupported feature (recursion): s3c_hsotg_complete_request(hsotg, ep, req, result); (CallstackTransferRelation.getAbstractSuccessorsForEdge, SEVERE)

PredicateCPA statistics
-----------------------
Number of abstractions:            393 (13% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  346 (88%)
  Because of loop head:            46 (12%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         1 (0%)
  Times precision was empty:       388 (99%)
  Times precision was {false}:     1 (0%)
  Times result was cached:         1 (0%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      3 (1%)
  Times result was 'false':        1 (0%)
Number of strengthen sat checks:   0
Number of coverage checks:         322
  BDD entailment checks:           42
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       54
Number of predicates discovered:          2
Number of abstraction locations:          2
Max number of predicates per location:    1
Avg number of predicates per location:    1
Total predicates per abstraction:         5
Max number of predicates per abstraction: 1
Avg number of predicates per abstraction: 1.25
Number of irrelevant predicates:          1 (20%)
Number of preds handled by boolean abs:   3 (60%)
  Total number of models for allsat:      3
  Max number of models for allsat:        1
  Avg number of models for allsat:        1.00

Time for post operator:                  1.150s
  Time for path formula creation:        1.116s
Time for strengthen operator:            0.052s
Time for prec operator:                  0.182s
  Time for abstraction:                  0.103s (Max:     0.034s, Count: 393)
    Boolean abstraction:                 0.013s
    Solving time:                        0.011s (Max:     0.009s)
    Model enumeration time:              0.000s
    Time for BDD construction:           0.001s (Max:     0.001s)
Time for merge operator:                 0.057s
Time for coverage check:                 0.020s
  Time for BDD entailment checks:        0.020s
Total time for SMT solver (w/o itp):     0.011s

Number of path formula cache hits:   678 (21%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     1.075s

Total number of created targets for pointer analysis: 13
   Number of created targets for uf: *unsigned_char is 4
   Number of created targets for uf: *unsigned_int is 3


Number of BDD nodes:                               202
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                           7 (count: 459, min: 0, max: 7, avg: 0.02)
Time for BDD node cleanup:                             0.016s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.088s
Automaton transfers with branching:                0
Automaton transfer successors:                         3113 (count: 3113, min: 1, max: 1, avg: 1.00) [1 x 3113]

CPA algorithm statistics
------------------------
Number of iterations:            1411
Max size of waitlist:            33
Average size of waitlist:        21
Number of computed successors:   1642
Max successors for one state:    2
Number of times merged:          140
Number of times stopped:         180
Number of times breaked:         1

Total time for CPA algorithm:         2.242s (Max:     1.269s)
  Time for choose from waitlist:      0.030s
  Time for precision adjustment:      0.354s
  Time for transfer relation:         1.625s
  Time for merge operator:            0.109s
  Time for stop operator:             0.032s
  Time for adding to reached set:     0.051s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   1
Avg. length of target path (in blocks):                  20 (count: 1, min: 20, max: 20, avg: 20.00)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.055s
  Counterexample analysis:                             0.028s (Max:     0.028s, Calls: 1)
    Refinement sat check:                              0.016s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.008s
  Precision update:                                    0.002s
  ARG update:                                          0.014s

Length of refined path (in blocks):                      16 (count: 1, min: 16, max: 16, avg: 16.00)
Number of affected states:                                1 (count: 1, min: 1, max: 1, avg: 1.00)
Length (states) of path with itp 'true':                 14 (count: 1, min: 14, max: 14, avg: 14.00)
Length (states) of path with itp non-trivial itp:         1 (count: 1, min: 1, max: 1, avg: 1.00)
Length (states) of path with itp 'false':                 1 (count: 1, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 1, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:               0 (count: 1, min: 0, max: 0, avg: 0.00)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                1
Number of successful refinements:     1
Number of failed refinements:         0
Max. size of reached set before ref.: 399
Max. size of reached set after ref.:  73
Avg. size of reached set before ref.: 399.00
Avg. size of reached set after ref.:  73.00

Total time for CEGAR algorithm:       2.324s
Time for refinements:                 0.082s
Average time for refinement:          0.082s
Max time for refinement:              0.082s

Code Coverage
-----------------------------
  Function coverage:      0.469
  Visited lines:          1487
  Total lines:            4240
  Line coverage:          0.351
  Visited conditions:     274
  Total conditions:       1096
  Condition coverage:     0.250

CPAchecker general statistics
-----------------------------
Number of program locations:     6019
Number of CFA edges:             6995
Number of relevant variables:    889
Number of functions:             145
Number of loops:                 30
Size of reached set:             1136
  Number of reached locations:   739 (12%)
    Avg states per location:     1
    Max states per location:     9 (at node N224)
  Number of reached functions:   68 (47%)
  Number of partitions:          1135
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N4979 (before line 9226), Function main called from node N4882, stack depth 1 [51e3d37e], stack [main]])
  Number of target states:       0
  Size of final wait list        31

Time for analysis setup:          6.721s
  Time for loading CPAs:          1.043s
  Time for loading parser:        0.664s
  Time for CFA construction:      4.848s
    Time for parsing file(s):     1.170s
    Time for AST to CFA:          1.695s
    Time for CFA sanity check:    0.486s
    Time for post-processing:     1.286s
      Time for var class.:        0.696s
Time for Analysis:                2.325s
CPU time for analysis:            2.330s
Total time for CPAchecker:        9.051s
Total CPU time for CPAchecker:    9.030s
Time for statistics:              0.143s

Time for Garbage Collector:       0.264s (in 12 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 64MB (    61 MiB) max;     38MB (    36 MiB) avg;     71MB (    67 MiB) peak
Used non-heap memory:             34MB (    32 MiB) max;     27MB (    26 MiB) avg;     35MB (    33 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        36MB (    34 MiB) max;     29MB (    27 MiB) avg
Total process virtual memory:   8084MB (  7710 MiB) max;   8044MB (  7671 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
