scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.16-rc1/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--usb--dwc2--dwc2_gadget.ko-entry_point_true-unreach-call.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run__chdpake/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 7313: Dead code detected: __ms = 3UL; (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 7069: Function pointer *(hsotg->driver->disconnect) with type void (*)(struct usb_gadget *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7598: Function pointer *(hsotg->driver->resume) with type void (*)(struct usb_gadget *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7585: Function pointer *(hsotg->driver->suspend) with type void (*)(struct usb_gadget *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 8083: Function pointer *(hsotg->plat->phy_exit) with type int (*)(struct platform_device *, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 8059: Function pointer *(hsotg->plat->phy_init) with type int (*)(struct platform_device *, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 5754: Function pointer *(hsotg->driver->setup) with type int (*)(struct usb_gadget *, const struct usb_ctrlrequest *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 4422: Function pointer *(x->init) with type int (*)(struct usb_phy *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 4436: Function pointer *(x->shutdown) with type void (*)(struct usb_phy *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

line 9181: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___1 = ldv_zalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 9189: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___5 = ldv_zalloc(8UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 9193: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___7 = ldv_zalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 9199: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___10 = ldv_zalloc(8UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 9203: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___12 = ldv_zalloc(8UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 9205: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___13 = ldv_zalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function seq_lseek to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function seq_read to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function single_release to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function single_open to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __platform_driver_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_driver_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _dev_info to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_final_state to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function devm_kmalloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_dev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function regulator_bulk_enable to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_del_gadget_udc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function devm_phy_get to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 8083: Ignoring function call through function pointer *(hsotg->plat->phy_exit): (*(hsotg->plat->phy_exit))(pdev, hsotg->plat->phy_type); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function phy_power_off to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function phy_exit to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function debugfs_remove to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 4436: Ignoring function call through function pointer *(x->shutdown): (*(x->shutdown))(x); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function usb_gadget_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_warn to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function devm_usb_get_phy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function devm_clk_get to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 8059: Ignoring function call through function pointer *(hsotg->plat->phy_init): (*(hsotg->plat->phy_init))(pdev, hsotg->plat->phy_type); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function phy_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function phy_power_on to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function clk_disable to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function clk_unprepare to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __list_del_entry to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 7069: Ignoring function call through function pointer *(hsotg->driver->disconnect): (*(hsotg->driver->disconnect))(&(hsotg->gadget)); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function _raw_spin_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function regulator_bulk_disable to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_gadget_map_request to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __list_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_gadget_unmap_request to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_get_resource to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function devm_ioremap_resource to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_get_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 5946: Ignoring function call through function pointer *(hs_req->req.complete): (*(hs_req->req.complete))(&(hs_ep->ep), &(hs_req->req)); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function __raw_spin_lock_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function trace_hardirqs_off to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function devm_request_threaded_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function clk_prepare to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function clk_enable to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function trace_hardirqs_on to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function devm_regulator_bulk_get to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Recursion detected, aborting. To ignore recursion, add -skipRecursion to the command line. (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, INFO)

Error: line 7058: Unsupported feature (recursion): kill_all_requests(hsotg, (hsotg->eps) + ((unsigned long)ep), -108, 1); (line was originally kill_all_requests(hsotg, hsotg->eps + (unsigned long )ep, -108, 1);) (CallstackTransferRelation.getAbstractSuccessorsForEdge, SEVERE)

PredicateCPA statistics
-----------------------
Number of abstractions:            33397 (16% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  28614 (86%)
  Because of loop head:            4716 (14%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         67 (0%)
  Times precision was empty:       21744 (65%)
  Times precision was {false}:     841 (3%)
  Times result was cached:         10540 (32%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      272 (1%)
  Times result was 'false':        647 (2%)
Number of strengthen sat checks:   0
Number of coverage checks:         31489
  BDD entailment checks:           6137
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       54
Number of predicates discovered:          8
Number of abstraction locations:          149
Max number of predicates per location:    7
Avg number of predicates per location:    1
Total predicates per abstraction:         18446
Max number of predicates per abstraction: 7
Avg number of predicates per abstraction: 16.57
Number of irrelevant predicates:          12919 (70%)
Number of preds handled by boolean abs:   444 (2%)
  Total number of models for allsat:      1449
  Max number of models for allsat:        64
  Avg number of models for allsat:        5.33

Time for post operator:                  8.249s
  Time for path formula creation:        7.961s
Time for strengthen operator:            0.534s
Time for prec operator:                  7.035s
  Time for abstraction:                  6.059s (Max:     0.071s, Count: 33397)
    Boolean abstraction:                 1.445s
    Solving time:                        0.835s (Max:     0.017s)
    Model enumeration time:              0.729s
    Time for BDD construction:           0.167s (Max:     0.024s)
Time for merge operator:                 0.609s
Time for coverage check:                 0.080s
  Time for BDD entailment checks:        0.054s
Total time for SMT solver (w/o itp):     1.564s

Number of path formula cache hits:   184084 (76%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     6.796s

Total number of created targets for pointer analysis: 136
   Number of created targets for uf: *(void)* is 7
   Number of created targets for uf: *unsigned_short_int is 3
   Number of created targets for uf: *signed_int is 2
   Number of created targets for uf: *unsigned_char is 4
   Number of created targets for uf: *(struct_list_head)* is 19
   Number of created targets for uf: *enum_usb_device_speed is 3
   Number of created targets for uf: *(Return_type:_[void],_Parameters:_2,_Parameter_1_type:_[(struct_usb_ep)*],_Parameter_2_type:_[(struct_usb_request)*],_VarArgs:_false)* is 4
   Number of created targets for uf: *unsigned_int is 13


Number of BDD nodes:                               813
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         685 (count: 34035, min: 0, max: 178, avg: 0.02)
Time for BDD node cleanup:                             0.011s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.723s
  Time for transition matches:                         0.315s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.008s
Automaton transfers with branching:                0
Automaton transfer successors:                       208391 (count: 208391, min: 1, max: 1, avg: 1.00) [1 x 208391]

CPA algorithm statistics
------------------------
Number of iterations:            127769
Max size of waitlist:            123
Average size of waitlist:        49
Number of computed successors:   148199
Max successors for one state:    2
Number of times merged:          12676
Number of times stopped:         16548
Number of times breaked:         67

Total time for CPA algorithm:        26.962s (Max:     1.513s)
  Time for choose from waitlist:      0.223s
  Time for precision adjustment:      9.072s
  Time for transfer relation:        13.821s
  Time for merge operator:            1.122s
  Time for stop operator:             0.603s
  Time for adding to reached set:     0.704s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   67
Avg. length of target path (in blocks):                4299 (count: 67, min: 20, max: 92, avg: 64.16)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   3.073s
  Counterexample analysis:                             2.240s (Max:     0.060s, Calls: 67)
    Refinement sat check:                              1.456s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.001s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.062s
  Precision update:                                    0.079s
  ARG update:                                          0.579s

Length of refined path (in blocks):                    4007 (count: 67, min: 16, max: 91, avg: 59.81)
Number of affected states:                             1865 (count: 67, min: 1, max: 90, avg: 27.84)
Length (states) of path with itp 'true':               2075 (count: 67, min: 0, max: 77, avg: 30.97)
Length (states) of path with itp non-trivial itp:      1865 (count: 67, min: 1, max: 90, avg: 27.84)
Length (states) of path with itp 'false':                67 (count: 67, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 67, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:            1798 (count: 67, min: 0, max: 89, avg: 26.84)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                67
Number of successful refinements:     67
Number of failed refinements:         0
Max. size of reached set before ref.: 6795
Max. size of reached set after ref.:  6138
Avg. size of reached set before ref.: 3558.78
Avg. size of reached set after ref.:  1706.75

Total time for CEGAR algorithm:      30.824s
Time for refinements:                 3.741s
Average time for refinement:          0.055s
Max time for refinement:              0.103s

Code Coverage
-----------------------------
  Function coverage:      0.731
  Visited lines:          2643
  Total lines:            4240
  Line coverage:          0.623
  Visited conditions:     580
  Total conditions:       1096
  Condition coverage:     0.529

CPAchecker general statistics
-----------------------------
Number of program locations:     6019
Number of CFA edges:             6995
Number of relevant variables:    889
Number of functions:             145
Number of loops:                 30
Size of reached set:             6919
  Number of reached locations:   1775 (29%)
    Avg states per location:     3
    Max states per location:     156 (at node N225)
  Number of reached functions:   106 (73%)
  Number of partitions:          6912
    Avg size of partitions:      1
    Max size of partitions:      3 (with key [N4979 (before line 9226), Function main called from node N4882, stack depth 1 [51e3d37e], stack [main]])
  Number of target states:       0
  Size of final wait list        69

Time for analysis setup:          6.842s
  Time for loading CPAs:          1.061s
  Time for loading parser:        0.743s
  Time for CFA construction:      4.875s
    Time for parsing file(s):     1.103s
    Time for AST to CFA:          1.640s
    Time for CFA sanity check:    0.532s
    Time for post-processing:     1.416s
      Time for var class.:        0.715s
Time for Analysis:               30.824s
CPU time for analysis:           30.810s
Total time for CPAchecker:       37.670s
Total CPU time for CPAchecker:   37.650s
Time for statistics:              0.252s

Time for Garbage Collector:       1.151s (in 67 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                104MB (    99 MiB) max;     58MB (    55 MiB) avg;    106MB (   101 MiB) peak
Used non-heap memory:             40MB (    38 MiB) max;     36MB (    34 MiB) avg;     40MB (    38 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        42MB (    40 MiB) max;     37MB (    36 MiB) avg
Total process virtual memory:   8086MB (  7711 MiB) max;   8074MB (  7700 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
