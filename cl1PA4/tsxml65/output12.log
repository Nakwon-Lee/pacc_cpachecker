scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.16-rc1/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--usb--dwc2--dwc2_gadget.ko-entry_point_true-unreach-call.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_i_ljq0bl/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 7313: Dead code detected: __ms = 3UL; (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 7069: Function pointer *(hsotg->driver->disconnect) with type void (*)(struct usb_gadget *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7598: Function pointer *(hsotg->driver->resume) with type void (*)(struct usb_gadget *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7585: Function pointer *(hsotg->driver->suspend) with type void (*)(struct usb_gadget *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 8083: Function pointer *(hsotg->plat->phy_exit) with type int (*)(struct platform_device *, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 8059: Function pointer *(hsotg->plat->phy_init) with type int (*)(struct platform_device *, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 5754: Function pointer *(hsotg->driver->setup) with type int (*)(struct usb_gadget *, const struct usb_ctrlrequest *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 4422: Function pointer *(x->init) with type int (*)(struct usb_phy *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 4436: Function pointer *(x->shutdown) with type void (*)(struct usb_phy *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

line 9181: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___1 = ldv_zalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 9189: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___5 = ldv_zalloc(8UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 9193: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___7 = ldv_zalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 9199: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___10 = ldv_zalloc(8UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 9203: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___12 = ldv_zalloc(8UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 9205: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___13 = ldv_zalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function seq_lseek to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function seq_read to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function single_release to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function single_open to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __platform_driver_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_driver_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _dev_info to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_final_state to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function devm_kmalloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_dev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function regulator_bulk_enable to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_del_gadget_udc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function devm_phy_get to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 8083: Ignoring function call through function pointer *(hsotg->plat->phy_exit): (*(hsotg->plat->phy_exit))(pdev, hsotg->plat->phy_type); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function phy_power_off to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function phy_exit to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function debugfs_remove to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 4436: Ignoring function call through function pointer *(x->shutdown): (*(x->shutdown))(x); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function usb_gadget_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_warn to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function devm_usb_get_phy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function devm_clk_get to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 8059: Ignoring function call through function pointer *(hsotg->plat->phy_init): (*(hsotg->plat->phy_init))(pdev, hsotg->plat->phy_type); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function phy_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function phy_power_on to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function clk_disable to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function clk_unprepare to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __list_del_entry to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 7069: Ignoring function call through function pointer *(hsotg->driver->disconnect): (*(hsotg->driver->disconnect))(&(hsotg->gadget)); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function _raw_spin_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function regulator_bulk_disable to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_gadget_map_request to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __list_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_gadget_unmap_request to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_get_resource to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function devm_ioremap_resource to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            21376 (16% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  18015 (84%)
  Because of loop head:            3322 (16%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         39 (0%)
  Times precision was empty:       15227 (71%)
  Times precision was {false}:     580 (3%)
  Times result was cached:         5341 (25%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      228 (1%)
  Times result was 'false':        542 (3%)
Number of strengthen sat checks:   0
Number of coverage checks:         20904
  BDD entailment checks:           3678
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       54
Number of predicates discovered:          8
Number of abstraction locations:          117
Max number of predicates per location:    7
Avg number of predicates per location:    1
Total predicates per abstraction:         10382
Max number of predicates per abstraction: 7
Avg number of predicates per abstraction: 12.85
Number of irrelevant predicates:          6834 (66%)
Number of preds handled by boolean abs:   392 (4%)
  Total number of models for allsat:      1341
  Max number of models for allsat:        64
  Avg number of models for allsat:        5.88

Time for post operator:                  6.525s
  Time for path formula creation:        6.215s
Time for strengthen operator:            0.305s
Time for prec operator:                  5.943s
  Time for abstraction:                  5.159s (Max:     0.071s, Count: 21376)
    Boolean abstraction:                 1.471s
    Solving time:                        0.805s (Max:     0.017s)
    Model enumeration time:              0.762s
    Time for BDD construction:           0.182s (Max:     0.021s)
Time for merge operator:                 0.697s
Time for coverage check:                 0.043s
  Time for BDD entailment checks:        0.036s
Total time for SMT solver (w/o itp):     1.567s

Number of path formula cache hits:   117683 (75%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     5.501s

Total number of created targets for pointer analysis: 59
   Number of created targets for uf: *(void)* is 7
   Number of created targets for uf: *unsigned_short_int is 3
   Number of created targets for uf: *signed_int is 6
   Number of created targets for uf: *unsigned_char is 4
   Number of created targets for uf: *(struct_list_head)* is 15
   Number of created targets for uf: *enum_usb_device_speed is 3
   Number of created targets for uf: *unsigned_int is 7


Number of BDD nodes:                               813
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         579 (count: 23425, min: 0, max: 178, avg: 0.02)
Time for BDD node cleanup:                             0.024s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.522s
  Time for transition matches:                         0.240s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.004s
Automaton transfers with branching:                0
Automaton transfer successors:                       136531 (count: 136531, min: 1, max: 1, avg: 1.00) [1 x 136531]

CPA algorithm statistics
------------------------
Number of iterations:            83305
Max size of waitlist:            116
Average size of waitlist:        40
Number of computed successors:   97154
Max successors for one state:    2
Number of times merged:          8613
Number of times stopped:         10998
Number of times breaked:         39

Total time for CPA algorithm:        21.217s (Max:     1.536s)
  Time for choose from waitlist:      0.189s
  Time for precision adjustment:      7.289s
  Time for transfer relation:        10.690s
  Time for merge operator:            1.077s
  Time for stop operator:             0.391s
  Time for adding to reached set:     0.510s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   39
Avg. length of target path (in blocks):                2019 (count: 39, min: 20, max: 76, avg: 51.77)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   1.889s
  Counterexample analysis:                             1.224s (Max:     0.051s, Calls: 39)
    Refinement sat check:                              0.788s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.002s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.068s
  Precision update:                                    0.104s
  ARG update:                                          0.411s

Length of refined path (in blocks):                    1755 (count: 39, min: 16, max: 75, avg: 45.00)
Number of affected states:                             1286 (count: 39, min: 1, max: 74, avg: 32.97)
Length (states) of path with itp 'true':                430 (count: 39, min: 0, max: 64, avg: 11.03)
Length (states) of path with itp non-trivial itp:      1286 (count: 39, min: 1, max: 74, avg: 32.97)
Length (states) of path with itp 'false':                39 (count: 39, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 39, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:            1247 (count: 39, min: 0, max: 73, avg: 31.97)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                39
Number of successful refinements:     39
Number of failed refinements:         0
Max. size of reached set before ref.: 4270
Max. size of reached set after ref.:  3748
Avg. size of reached set before ref.: 2491.67
Avg. size of reached set after ref.:  297.74

Total time for CEGAR algorithm:      23.419s
Time for refinements:                 2.166s
Average time for refinement:          0.055s
Max time for refinement:              0.119s

Code Coverage
-----------------------------
  Function coverage:      0.014
  Visited lines:          789
  Total lines:            4240
  Line coverage:          0.186
  Visited conditions:     4
  Total conditions:       1096
  Condition coverage:     0.004

CPAchecker general statistics
-----------------------------
Number of program locations:     6019
Number of CFA edges:             6995
Number of relevant variables:    889
Number of functions:             145
Number of loops:                 30
Size of reached set:             52
  Number of reached locations:   20 (0%)
    Avg states per location:     2
    Max states per location:     5 (at node N181)
  Number of reached functions:   2 (1%)
  Number of partitions:          52
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0
  Size of final wait list        1

Time for analysis setup:          6.818s
  Time for loading CPAs:          0.993s
  Time for loading parser:        0.766s
  Time for CFA construction:      4.866s
    Time for parsing file(s):     1.186s
    Time for AST to CFA:          1.677s
    Time for CFA sanity check:    0.456s
    Time for post-processing:     1.337s
      Time for var class.:        0.707s
Time for Analysis:               23.419s
CPU time for analysis:           23.420s
Total time for CPAchecker:       30.242s
Total CPU time for CPAchecker:   30.230s
Time for statistics:              0.083s

Time for Garbage Collector:       0.761s (in 47 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 85MB (    81 MiB) max;     53MB (    51 MiB) avg;     88MB (    83 MiB) peak
Used non-heap memory:             41MB (    39 MiB) max;     35MB (    34 MiB) avg;     42MB (    40 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        44MB (    41 MiB) max;     37MB (    35 MiB) avg
Total process virtual memory:   8086MB (  7711 MiB) max;   8070MB (  7697 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
