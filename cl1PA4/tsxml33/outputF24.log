scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.16-rc1/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--fddi--defxx.ko-entry_point_true-unreach-call.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_qfdf776h/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 6566: Function pointer *(ops->alloc) with type void *(*)(struct device *, size_t , dma_addr_t *, gfp_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6598: Function pointer *(ops->free) with type void (*)(struct device *, size_t , void *, dma_addr_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 6456-6457: Function pointer *(ops->map_page) with type dma_addr_t (*)(struct device *, struct page *, unsigned long, size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6490: Function pointer *(ops->unmap_page) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

line 9197: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___0 = ldv_zalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 9199: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___1 = ldv_zalloc(32UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ndo_uninit_3 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ndo_init_3 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __pci_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_final_state to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function alloc_fddidev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_enable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function request_threaded_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __raw_spin_lock_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function unregister_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __request_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ioremap_nocache to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_set_master to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __release_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_disable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iounmap to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function skb_push to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function debug_dma_map_page to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function skb_pull to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __netif_schedule to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function consume_skb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function debug_dma_free_coherent to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 6598: Ignoring function call through function pointer *(ops->free): (*(ops->free))(dev, size, vaddr, bus, attrs); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function _raw_spin_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 6490: Ignoring function call through function pointer *(ops->unmap_page): (*(ops->unmap_page))(dev, addr, size, dir, attrs); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function debug_dma_unmap_page to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dev_kfree_skb_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __netdev_alloc_skb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function register_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function debug_dma_alloc_coherent to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function skb_put to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netif_rx to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            3234245 (21% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  2952289 (91%)
  Because of loop head:            281430 (9%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         526 (0%)
  Times precision was empty:       684330 (21%)
  Times precision was {false}:     7575 (0%)
  Times result was cached:         2534893 (78%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      7447 (0%)
  Times result was 'false':        271849 (8%)
Number of strengthen sat checks:   0
Number of coverage checks:         1460972
  BDD entailment checks:           480686
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       48
Number of predicates discovered:          9
Number of abstraction locations:          343
Max number of predicates per location:    7
Avg number of predicates per location:    2
Total predicates per abstraction:         8070855
Max number of predicates per abstraction: 7
Avg number of predicates per abstraction: 537.27
Number of irrelevant predicates:          6554686 (81%)
Number of preds handled by boolean abs:   15325 (0%)
  Total number of models for allsat:      9668
  Max number of models for allsat:        8
  Avg number of models for allsat:        1.30

Time for post operator:                170.151s
  Time for path formula creation:      163.159s
Time for strengthen operator:           12.502s
Time for prec operator:                308.956s
  Time for abstraction:                273.912s (Max:     2.173s, Count: 3234245)
    Boolean abstraction:                 8.736s
    Solving time:                       15.099s (Max:     0.182s)
    Model enumeration time:              1.113s
    Time for BDD construction:           0.181s (Max:     0.009s)
Time for merge operator:                 7.717s
Time for coverage check:                 0.714s
  Time for BDD entailment checks:        0.532s
Total time for SMT solver (w/o itp):    16.212s

Number of path formula cache hits:   16616033 (89%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:   108.488s

Total number of created targets for pointer analysis: 375289
   Number of created targets for uf: *(void)* is 649
   Number of created targets for uf: *(char)* is 2787
   Number of created targets for uf: *signed_int is 455
   Number of created targets for uf: *(unsigned_char)* is 518
   Number of created targets for uf: *unsigned_long_long_int is 365
   Number of created targets for uf: *unsigned_int is 87


Number of BDD nodes:                               550
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       15106 (count: 1312344, min: 0, max: 390, avg: 0.01)
Time for BDD node cleanup:                             0.262s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                 23.044s
  Time for transition matches:                        13.165s
  Time for transition assertions:                      0.002s
  Time for transition actions:                         0.009s
Automaton transfers with branching:                0
Automaton transfer successors:                     15665693 (count: 15665693, min: 1, max: 1, avg: 1.00) [1 x 15665693]

CPA algorithm statistics
------------------------
Number of iterations:            9651248
Max size of waitlist:            619
Average size of waitlist:        281
Number of computed successors:   10815132
Max successors for one state:    2
Number of times merged:          490143
Number of times stopped:         817158
Number of times breaked:         526

Total time for CPA algorithm:       776.709s (Max:    10.478s)
  Time for choose from waitlist:      4.590s
  Time for precision adjustment:    385.817s
  Time for transfer relation:       315.804s
  Time for merge operator:           14.468s
  Time for stop operator:            10.952s
  Time for adding to reached set:    17.770s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   526
Avg. length of target path (in blocks):              153528 (count: 526, min: 101, max: 461, avg: 291.88)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  81.047s
  Counterexample analysis:                            58.264s (Max:     0.326s, Calls: 526)
    Refinement sat check:                             24.357s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.076s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.491s
  Precision update:                                    0.405s
  ARG update:                                         21.096s

Length of refined path (in blocks):                   77509 (count: 526, min: 8, max: 443, avg: 147.36)
Number of affected states:                            44839 (count: 526, min: 0, max: 442, avg: 85.25)
Length (states) of path with itp 'true':              32144 (count: 526, min: 0, max: 270, avg: 61.11)
Length (states) of path with itp non-trivial itp:     44839 (count: 526, min: 0, max: 442, avg: 85.25)
Length (states) of path with itp 'false':               526 (count: 526, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 526, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:           44339 (count: 526, min: 0, max: 441, avg: 84.29)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                526
Number of successful refinements:     526
Number of failed refinements:         0
Max. size of reached set before ref.: 80311
Max. size of reached set after ref.:  63033
Avg. size of reached set before ref.: 49491.81
Avg. size of reached set after ref.:  31079.32

Total time for CEGAR algorithm:     894.040s
Time for refinements:               102.892s
Average time for refinement:          0.195s
Max time for refinement:              0.498s

Code Coverage
-----------------------------
  Function coverage:      0.831
  Visited lines:          2802
  Total lines:            2993
  Line coverage:          0.936
  Visited conditions:     497
  Total conditions:       538
  Condition coverage:     0.924

CPAchecker general statistics
-----------------------------
Number of program locations:     3905
Number of CFA edges:             4303
Number of relevant variables:    483
Number of functions:             136
Number of loops:                 18
Size of reached set:             41156
  Number of reached locations:   1592 (41%)
    Avg states per location:     25
    Max states per location:     749 (at node N516)
  Number of reached functions:   113 (83%)
  Number of partitions:          41013
    Avg size of partitions:      1
    Max size of partitions:      6 (with key [N2538 (before line 9208), Function main called from node N2514, stack depth 1 [1aac188d], stack [main]])
  Number of target states:       0
  Size of final wait list        219

Time for analysis setup:          6.285s
  Time for loading CPAs:          0.984s
  Time for loading parser:        0.654s
  Time for CFA construction:      4.488s
    Time for parsing file(s):     1.175s
    Time for AST to CFA:          1.586s
    Time for CFA sanity check:    0.321s
    Time for post-processing:     1.186s
      Time for var class.:        0.494s
Time for Analysis:              894.040s
CPU time for analysis:          893.980s
Total time for CPAchecker:      900.335s
Total CPU time for CPAchecker:  900.260s
Time for statistics:              0.652s

Time for Garbage Collector:      88.333s (in 1199 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:               1084MB (  1034 MiB) max;    527MB (   503 MiB) avg;   1117MB (  1065 MiB) peak
Used non-heap memory:             41MB (    39 MiB) max;     40MB (    38 MiB) avg;     42MB (    40 MiB) peak
Allocated heap memory:          1207MB (  1151 MiB) max;    768MB (   732 MiB) avg
Allocated non-heap memory:        43MB (    41 MiB) max;     42MB (    40 MiB) avg
Total process virtual memory:   8220MB (  7839 MiB) max;   8163MB (  7784 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
