scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.16-rc1/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--fddi--defxx.ko-entry_point_true-unreach-call.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_1u4g82si/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 6566: Function pointer *(ops->alloc) with type void *(*)(struct device *, size_t , dma_addr_t *, gfp_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6598: Function pointer *(ops->free) with type void (*)(struct device *, size_t , void *, dma_addr_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 6456-6457: Function pointer *(ops->map_page) with type dma_addr_t (*)(struct device *, struct page *, unsigned long, size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6490: Function pointer *(ops->unmap_page) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

line 9197: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___0 = ldv_zalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 9199: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___1 = ldv_zalloc(32UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ndo_uninit_3 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ndo_init_3 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function unregister_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function debug_dma_free_coherent to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 6598: Ignoring function call through function pointer *(ops->free): (*(ops->free))(dev, size, vaddr, bus, attrs); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function __release_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iounmap to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_disable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function alloc_fddidev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_enable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __request_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ioremap_nocache to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_set_master to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __pci_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 6490: Ignoring function call through function pointer *(ops->unmap_page): (*(ops->unmap_page))(dev, addr, size, dir, attrs); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function debug_dma_unmap_page to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dev_kfree_skb_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __netif_schedule to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function request_threaded_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function skb_push to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function debug_dma_map_page to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function consume_skb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __raw_spin_lock_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function skb_pull to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_final_state to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function debug_dma_alloc_coherent to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function register_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __netdev_alloc_skb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            2656926 (20% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  2402484 (90%)
  Because of loop head:            253772 (10%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         670 (0%)
  Times precision was empty:       290299 (11%)
  Times precision was {false}:     2641 (0%)
  Times result was cached:         2344559 (88%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      19427 (1%)
  Times result was 'false':        287125 (11%)
Number of strengthen sat checks:   0
Number of coverage checks:         1420502
  BDD entailment checks:           485318
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       48
Number of predicates discovered:          39
Number of abstraction locations:          294
Max number of predicates per location:    17
Avg number of predicates per location:    5
Total predicates per abstraction:         11462931
Max number of predicates per abstraction: 17
Avg number of predicates per abstraction: 519.44
Number of irrelevant predicates:          4649884 (41%)
Number of preds handled by boolean abs:   78836 (1%)
  Total number of models for allsat:      24142
  Max number of models for allsat:        48
  Avg number of models for allsat:        1.24

Time for post operator:                105.789s
  Time for path formula creation:      100.600s
Time for strengthen operator:           12.321s
Time for prec operator:                442.640s
  Time for abstraction:                414.830s (Max:     2.375s, Count: 2656926)
    Boolean abstraction:                28.473s
    Solving time:                       25.936s (Max:     0.146s)
    Model enumeration time:              3.020s
    Time for BDD construction:           0.508s (Max:     0.010s)
Time for merge operator:                 6.550s
Time for coverage check:                 0.644s
  Time for BDD entailment checks:        0.449s
Total time for SMT solver (w/o itp):    28.956s

Number of path formula cache hits:   15101055 (93%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    55.012s

Total number of created targets for pointer analysis: 204854
   Number of created targets for uf: *(void)* is 392
   Number of created targets for uf: *(char)* is 1005
   Number of created targets for uf: *signed_int is 297
   Number of created targets for uf: *(unsigned_char)* is 227
   Number of created targets for uf: *unsigned_long_long_int is 7039
   Number of created targets for uf: *unsigned_int is 255


Number of BDD nodes:                               19002
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       47708 (count: 1115585, min: 0, max: 1121, avg: 0.04)
Time for BDD node cleanup:                             0.209s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                 18.516s
  Time for transition matches:                         9.762s
  Time for transition assertions:                      0.001s
  Time for transition actions:                         0.008s
Automaton transfers with branching:                0
Automaton transfer successors:                     13532972 (count: 13532972, min: 1, max: 1, avg: 1.00) [1 x 13532972]

CPA algorithm statistics
------------------------
Number of iterations:            8462026
Max size of waitlist:            59
Average size of waitlist:        23
Number of computed successors:   9549977
Max successors for one state:    2
Number of times merged:          467592
Number of times stopped:         786598
Number of times breaked:         670

Total time for CPA algorithm:       792.378s (Max:    18.120s)
  Time for choose from waitlist:      3.260s
  Time for precision adjustment:    505.177s
  Time for transfer relation:       226.238s
  Time for merge operator:           12.304s
  Time for stop operator:             9.738s
  Time for adding to reached set:    12.573s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   670
Avg. length of target path (in blocks):              128972 (count: 670, min: 36, max: 444, avg: 192.50)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  77.812s
  Counterexample analysis:                            60.272s (Max:     0.299s, Calls: 670)
    Refinement sat check:                             30.156s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.068s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.348s
  Precision update:                                    0.679s
  ARG update:                                         15.772s

Length of refined path (in blocks):                   91602 (count: 670, min: 8, max: 413, avg: 136.72)
Number of affected states:                            41102 (count: 670, min: 0, max: 412, avg: 61.35)
Length (states) of path with itp 'true':              49830 (count: 670, min: 0, max: 299, avg: 74.37)
Length (states) of path with itp non-trivial itp:     41102 (count: 670, min: 0, max: 412, avg: 61.35)
Length (states) of path with itp 'false':               670 (count: 670, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:         250 (count: 670, min: 0, max: 3, avg: 0.37)
Equal non-trivial interpolants along paths:           40225 (count: 670, min: 0, max: 411, avg: 60.04)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                670
Number of successful refinements:     670
Number of failed refinements:         0
Max. size of reached set before ref.: 138451
Max. size of reached set after ref.:  133427
Avg. size of reached set before ref.: 27450.14
Avg. size of reached set after ref.:  15017.48

Total time for CEGAR algorithm:     894.316s
Time for refinements:                94.135s
Average time for refinement:          0.140s
Max time for refinement:              1.307s

Code Coverage
-----------------------------
  Function coverage:      0.713
  Visited lines:          2569
  Total lines:            2993
  Line coverage:          0.858
  Visited conditions:     429
  Total conditions:       538
  Condition coverage:     0.797

CPAchecker general statistics
-----------------------------
Number of program locations:     3905
Number of CFA edges:             4303
Number of relevant variables:    483
Number of functions:             136
Number of loops:                 18
Size of reached set:             146377
  Number of reached locations:   1367 (35%)
    Avg states per location:     107
    Max states per location:     3363 (at node N70)
  Number of reached functions:   97 (71%)
  Number of partitions:          144918
    Avg size of partitions:      1
    Max size of partitions:      21 (with key [N2538 (before line 9208), Function main called from node N2514, stack depth 1 [6dd82486], stack [main]])
  Number of target states:       0
  Size of final wait list        13

Time for analysis setup:          5.954s
  Time for loading CPAs:          0.948s
  Time for loading parser:        0.730s
  Time for CFA construction:      4.170s
    Time for parsing file(s):     1.141s
    Time for AST to CFA:          1.387s
    Time for CFA sanity check:    0.326s
    Time for post-processing:     1.121s
      Time for var class.:        0.506s
Time for Analysis:              894.317s
CPU time for analysis:          894.230s
Total time for CPAchecker:      900.275s
Total CPU time for CPAchecker:  900.180s
Time for statistics:              1.475s

Time for Garbage Collector:      84.233s (in 2032 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                745MB (   710 MiB) max;    284MB (   271 MiB) avg;    760MB (   724 MiB) peak
Used non-heap memory:             41MB (    39 MiB) max;     40MB (    39 MiB) avg;     42MB (    40 MiB) peak
Allocated heap memory:           888MB (   847 MiB) max;    418MB (   399 MiB) avg
Allocated non-heap memory:        43MB (    41 MiB) max;     43MB (    41 MiB) avg
Total process virtual memory:   8356MB (  7968 MiB) max;   8177MB (  7799 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
