scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.16-rc1/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--fddi--defxx.ko-entry_point_true-unreach-call.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_vsvz0wcr/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 6566: Function pointer *(ops->alloc) with type void *(*)(struct device *, size_t , dma_addr_t *, gfp_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6598: Function pointer *(ops->free) with type void (*)(struct device *, size_t , void *, dma_addr_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 6456-6457: Function pointer *(ops->map_page) with type dma_addr_t (*)(struct device *, struct page *, unsigned long, size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6490: Function pointer *(ops->unmap_page) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

line 9197: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___0 = ldv_zalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 9199: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___1 = ldv_zalloc(32UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ndo_uninit_3 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ndo_init_3 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __pci_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_final_state to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function alloc_fddidev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_enable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function request_threaded_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function unregister_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __request_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ioremap_nocache to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_set_master to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __release_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_disable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __raw_spin_lock_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iounmap to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function skb_push to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __netif_schedule to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function consume_skb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function debug_dma_free_coherent to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 6598: Ignoring function call through function pointer *(ops->free): (*(ops->free))(dev, size, vaddr, bus, attrs); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function debug_dma_map_page to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function skb_pull to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 6490: Ignoring function call through function pointer *(ops->unmap_page): (*(ops->unmap_page))(dev, addr, size, dir, attrs); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function debug_dma_unmap_page to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function register_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function debug_dma_alloc_coherent to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            2972724 (19% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  2713209 (91%)
  Because of loop head:            257984 (9%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         1531 (0%)
  Times precision was empty:       1112996 (37%)
  Times precision was {false}:     5602 (0%)
  Times result was cached:         1834675 (62%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      19451 (1%)
  Times result was 'false':        244072 (8%)
Number of strengthen sat checks:   0
Number of coverage checks:         1924345
  BDD entailment checks:           752913
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       48
Number of predicates discovered:          23
Number of abstraction locations:          219
Max number of predicates per location:    14
Avg number of predicates per location:    4
Total predicates per abstraction:         8118225
Max number of predicates per abstraction: 14
Avg number of predicates per abstraction: 324.04
Number of irrelevant predicates:          5887389 (73%)
Number of preds handled by boolean abs:   68266 (1%)
  Total number of models for allsat:      43105
  Max number of models for allsat:        45
  Avg number of models for allsat:        2.22

Time for post operator:                102.930s
  Time for path formula creation:       95.764s
Time for strengthen operator:           13.228s
Time for prec operator:                365.938s
  Time for abstraction:                332.084s (Max:     1.507s, Count: 2972724)
    Boolean abstraction:                33.656s
    Solving time:                       28.384s (Max:     0.096s)
    Model enumeration time:              6.643s
    Time for BDD construction:           0.742s (Max:     0.020s)
Time for merge operator:                 5.732s
Time for coverage check:                 1.063s
  Time for BDD entailment checks:        0.800s
Total time for SMT solver (w/o itp):    35.027s

Number of path formula cache hits:   18446042 (96%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    42.667s

Total number of created targets for pointer analysis: 187464
   Number of created targets for uf: *(void)* is 387
   Number of created targets for uf: *(char)* is 25
   Number of created targets for uf: *signed_int is 243
   Number of created targets for uf: *unsigned_long_long_int is 6192
   Number of created targets for uf: *unsigned_int is 595


Number of BDD nodes:                               39964
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       48337 (count: 2080295, min: 0, max: 903, avg: 0.02)
Time for BDD node cleanup:                             0.427s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                 20.287s
  Time for transition matches:                        10.908s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.017s
Automaton transfers with branching:                0
Automaton transfer successors:                     16030531 (count: 16030531, min: 1, max: 1, avg: 1.00) [1 x 16030531]

CPA algorithm statistics
------------------------
Number of iterations:            9531201
Max size of waitlist:            1160
Average size of waitlist:        351
Number of computed successors:   10749082
Max successors for one state:    2
Number of times merged:          585716
Number of times stopped:         888298
Number of times breaked:         1531

Total time for CPA algorithm:       761.329s (Max:    12.096s)
  Time for choose from waitlist:      5.377s
  Time for precision adjustment:    441.365s
  Time for transfer relation:       246.201s
  Time for merge operator:           15.888s
  Time for stop operator:            11.442s
  Time for adding to reached set:    16.512s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   1531
Avg. length of target path (in blocks):              118431 (count: 1531, min: 36, max: 241, avg: 77.36)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  67.766s
  Counterexample analysis:                            44.190s (Max:     0.155s, Calls: 1531)
    Refinement sat check:                             32.145s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.075s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.194s
  Precision update:                                    0.546s
  ARG update:                                         22.019s

Length of refined path (in blocks):                   77925 (count: 1531, min: 8, max: 240, avg: 50.90)
Number of affected states:                            21141 (count: 1531, min: 0, max: 239, avg: 13.81)
Length (states) of path with itp 'true':              55253 (count: 1531, min: 0, max: 164, avg: 36.09)
Length (states) of path with itp non-trivial itp:     21141 (count: 1531, min: 0, max: 239, avg: 13.81)
Length (states) of path with itp 'false':              1531 (count: 1531, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:         185 (count: 1531, min: 0, max: 3, avg: 0.12)
Equal non-trivial interpolants along paths:           20681 (count: 1531, min: 0, max: 238, avg: 13.51)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                1531
Number of successful refinements:     1531
Number of failed refinements:         0
Max. size of reached set before ref.: 114748
Max. size of reached set after ref.:  102831
Avg. size of reached set before ref.: 26974.72
Avg. size of reached set after ref.:  20694.56

Total time for CEGAR algorithm:     894.074s
Time for refinements:               106.772s
Average time for refinement:          0.069s
Max time for refinement:              1.297s

Code Coverage
-----------------------------
  Function coverage:      0.338
  Visited lines:          1635
  Total lines:            2993
  Line coverage:          0.546
  Visited conditions:     186
  Total conditions:       538
  Condition coverage:     0.346

CPAchecker general statistics
-----------------------------
Number of program locations:     3905
Number of CFA edges:             4303
Number of relevant variables:    483
Number of functions:             136
Number of loops:                 18
Size of reached set:             1779
  Number of reached locations:   548 (14%)
    Avg states per location:     3
    Max states per location:     27 (at node N156)
  Number of reached functions:   46 (34%)
  Number of partitions:          1774
    Avg size of partitions:      1
    Max size of partitions:      3 (with key [N2538 (before line 9208), Function main called from node N2514, stack depth 1 [6dd82486], stack [main]])
  Number of target states:       0
  Size of final wait list        3

Time for analysis setup:          6.153s
  Time for loading CPAs:          1.073s
  Time for loading parser:        0.711s
  Time for CFA construction:      4.227s
    Time for parsing file(s):     1.119s
    Time for AST to CFA:          1.500s
    Time for CFA sanity check:    0.333s
    Time for post-processing:     1.082s
      Time for var class.:        0.520s
Time for Analysis:              894.075s
CPU time for analysis:          894.000s
Total time for CPAchecker:      900.243s
Total CPU time for CPAchecker:  900.160s
Time for statistics:              0.142s

Time for Garbage Collector:      96.395s (in 1721 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                717MB (   684 MiB) max;    310MB (   296 MiB) avg;    739MB (   705 MiB) peak
Used non-heap memory:             41MB (    39 MiB) max;     41MB (    39 MiB) avg;     42MB (    40 MiB) peak
Allocated heap memory:           738MB (   704 MiB) max;    459MB (   437 MiB) avg
Allocated non-heap memory:        44MB (    42 MiB) max;     43MB (    41 MiB) avg
Total process virtual memory:   8354MB (  7967 MiB) max;   8208MB (  7827 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
