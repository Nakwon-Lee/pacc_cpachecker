scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.16-rc1/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--fddi--defxx.ko-entry_point_true-unreach-call.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_8lwnx76t/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 6566: Function pointer *(ops->alloc) with type void *(*)(struct device *, size_t , dma_addr_t *, gfp_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6598: Function pointer *(ops->free) with type void (*)(struct device *, size_t , void *, dma_addr_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 6456-6457: Function pointer *(ops->map_page) with type dma_addr_t (*)(struct device *, struct page *, unsigned long, size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6490: Function pointer *(ops->unmap_page) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

line 9197: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___0 = ldv_zalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 9199: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___1 = ldv_zalloc(32UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ndo_uninit_3 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ndo_init_3 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __pci_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_final_state to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function alloc_fddidev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_enable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function request_threaded_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __raw_spin_lock_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __request_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ioremap_nocache to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_set_master to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __release_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_disable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function unregister_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iounmap to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function debug_dma_free_coherent to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 6598: Ignoring function call through function pointer *(ops->free): (*(ops->free))(dev, size, vaddr, bus, attrs); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function skb_push to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __netif_schedule to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function debug_dma_map_page to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function skb_pull to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function consume_skb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 6490: Ignoring function call through function pointer *(ops->unmap_page): (*(ops->unmap_page))(dev, addr, size, dir, attrs); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function debug_dma_unmap_page to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function register_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function debug_dma_alloc_coherent to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            2627727 (17% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  2431522 (93%)
  Because of loop head:            195608 (7%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         597 (0%)
  Times precision was empty:       857398 (33%)
  Times precision was {false}:     6245 (0%)
  Times result was cached:         1735742 (66%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      28342 (1%)
  Times result was 'false':        207375 (8%)
Number of strengthen sat checks:   0
Number of coverage checks:         1780585
  BDD entailment checks:           735045
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       48
Number of predicates discovered:          48
Number of abstraction locations:          260
Max number of predicates per location:    15
Avg number of predicates per location:    5
Total predicates per abstraction:         8278474
Max number of predicates per abstraction: 16
Avg number of predicates per abstraction: 239.35
Number of irrelevant predicates:          4519443 (55%)
Number of preds handled by boolean abs:   104619 (1%)
  Total number of models for allsat:      64399
  Max number of models for allsat:        80
  Avg number of models for allsat:        2.27

Time for post operator:                128.970s
  Time for path formula creation:      122.785s
Time for strengthen operator:           14.636s
Time for prec operator:                425.235s
  Time for abstraction:                396.232s (Max:     2.330s, Count: 2627727)
    Boolean abstraction:                75.774s
    Solving time:                       68.971s (Max:     0.368s)
    Model enumeration time:             11.249s
    Time for BDD construction:           1.212s (Max:     0.010s)
Time for merge operator:                 8.017s
Time for coverage check:                 0.873s
  Time for BDD entailment checks:        0.672s
Total time for SMT solver (w/o itp):    80.220s

Number of path formula cache hits:   16481752 (92%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    65.351s

Total number of created targets for pointer analysis: 423365
   Number of created targets for uf: *(void)* is 910
   Number of created targets for uf: *(char)* is 257
   Number of created targets for uf: *signed_int is 631
   Number of created targets for uf: *unsigned_long_long_int is 17158
   Number of created targets for uf: *unsigned_int is 1643


Number of BDD nodes:                               81183
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       73311 (count: 1896983, min: 0, max: 1489, avg: 0.04)
Time for BDD node cleanup:                             0.342s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                 21.965s
  Time for transition matches:                        12.703s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.011s
Automaton transfers with branching:                0
Automaton transfer successors:                     15120366 (count: 15120366, min: 1, max: 1, avg: 1.00) [1 x 15120366]

CPA algorithm statistics
------------------------
Number of iterations:            8888346
Max size of waitlist:            2823
Average size of waitlist:        595
Number of computed successors:   9965776
Max successors for one state:    2
Number of times merged:          522770
Number of times stopped:         719891
Number of times breaked:         597

Total time for CPA algorithm:       826.281s (Max:    22.316s)
  Time for choose from waitlist:      3.393s
  Time for precision adjustment:    495.331s
  Time for transfer relation:       265.233s
  Time for merge operator:           14.058s
  Time for stop operator:            10.595s
  Time for adding to reached set:    14.050s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   597
Avg. length of target path (in blocks):               63747 (count: 597, min: 36, max: 287, avg: 106.78)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  51.577s
  Counterexample analysis:                            30.241s (Max:     0.248s, Calls: 597)
    Refinement sat check:                             17.231s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.031s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.288s
  Precision update:                                    0.371s
  ARG update:                                         20.154s

Length of refined path (in blocks):                   44491 (count: 597, min: 8, max: 272, avg: 74.52)
Number of affected states:                            27292 (count: 597, min: 0, max: 259, avg: 45.72)
Length (states) of path with itp 'true':              16602 (count: 597, min: 0, max: 187, avg: 27.81)
Length (states) of path with itp non-trivial itp:     27292 (count: 597, min: 0, max: 259, avg: 45.72)
Length (states) of path with itp 'false':               597 (count: 597, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:         239 (count: 597, min: 0, max: 11, avg: 0.40)
Equal non-trivial interpolants along paths:           26768 (count: 597, min: 0, max: 258, avg: 44.84)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                597
Number of successful refinements:     597
Number of failed refinements:         0
Max. size of reached set before ref.: 121498
Max. size of reached set after ref.:  94050
Avg. size of reached set before ref.: 23041.31
Avg. size of reached set after ref.:  8038.02

Total time for CEGAR algorithm:     894.387s
Time for refinements:                63.950s
Average time for refinement:          0.107s
Max time for refinement:              1.485s

Code Coverage
-----------------------------
  Function coverage:      0.669
  Visited lines:          2485
  Total lines:            2993
  Line coverage:          0.830
  Visited conditions:     403
  Total conditions:       538
  Condition coverage:     0.749

CPAchecker general statistics
-----------------------------
Number of program locations:     3905
Number of CFA edges:             4303
Number of relevant variables:    483
Number of functions:             136
Number of loops:                 18
Size of reached set:             81544
  Number of reached locations:   1270 (33%)
    Avg states per location:     64
    Max states per location:     1644 (at node N70)
  Number of reached functions:   91 (67%)
  Number of partitions:          80789
    Avg size of partitions:      1
    Max size of partitions:      28 (with key [N2548 (after line 9212), Function main called from node N2514, stack depth 1 [6dd82486], stack [main]])
  Number of target states:       0
  Size of final wait list        575

Time for analysis setup:          5.888s
  Time for loading CPAs:          0.943s
  Time for loading parser:        0.676s
  Time for CFA construction:      4.122s
    Time for parsing file(s):     1.068s
    Time for AST to CFA:          1.476s
    Time for CFA sanity check:    0.294s
    Time for post-processing:     1.077s
      Time for var class.:        0.511s
Time for Analysis:              894.387s
CPU time for analysis:          894.300s
Total time for CPAchecker:      900.279s
Total CPU time for CPAchecker:  900.180s
Time for statistics:              1.099s

Time for Garbage Collector:      92.772s (in 1334 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                908MB (   866 MiB) max;    424MB (   404 MiB) avg;    940MB (   897 MiB) peak
Used non-heap memory:             42MB (    40 MiB) max;     41MB (    39 MiB) avg;     43MB (    41 MiB) peak
Allocated heap memory:           954MB (   909 MiB) max;    619MB (   591 MiB) avg
Allocated non-heap memory:        44MB (    42 MiB) max;     43MB (    41 MiB) avg
Total process virtual memory:   8561MB (  8164 MiB) max;   8293MB (  7909 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
