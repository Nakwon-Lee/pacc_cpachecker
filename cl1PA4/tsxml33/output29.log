scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.16-rc1/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--fddi--defxx.ko-entry_point_true-unreach-call.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_7qupybq6/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 6566: Function pointer *(ops->alloc) with type void *(*)(struct device *, size_t , dma_addr_t *, gfp_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6598: Function pointer *(ops->free) with type void (*)(struct device *, size_t , void *, dma_addr_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 6456-6457: Function pointer *(ops->map_page) with type dma_addr_t (*)(struct device *, struct page *, unsigned long, size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6490: Function pointer *(ops->unmap_page) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

line 9197: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___0 = ldv_zalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 9199: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___1 = ldv_zalloc(32UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ndo_uninit_3 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ndo_init_3 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __pci_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_final_state to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function request_threaded_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __raw_spin_lock_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function alloc_fddidev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_enable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __request_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ioremap_nocache to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_set_master to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __release_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_disable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function unregister_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iounmap to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function skb_push to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __netif_schedule to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function consume_skb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function debug_dma_map_page to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function skb_pull to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function debug_dma_free_coherent to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 6598: Ignoring function call through function pointer *(ops->free): (*(ops->free))(dev, size, vaddr, bus, attrs); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 6490: Ignoring function call through function pointer *(ops->unmap_page): (*(ops->unmap_page))(dev, addr, size, dir, attrs); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function debug_dma_unmap_page to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function register_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __netdev_alloc_skb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            56226 (21% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  51976 (92%)
  Because of loop head:            4244 (8%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         6 (0%)
  Times precision was empty:       48490 (86%)
  Times precision was {false}:     197 (0%)
  Times result was cached:         7478 (13%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      61 (0%)
  Times result was 'false':        1561 (3%)
Number of strengthen sat checks:   0
Number of coverage checks:         21891
  BDD entailment checks:           7247
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       48
Number of predicates discovered:          4
Number of abstraction locations:          60
Max number of predicates per location:    3
Avg number of predicates per location:    1
Total predicates per abstraction:         7903
Max number of predicates per abstraction: 3
Avg number of predicates per abstraction: 30.63
Number of irrelevant predicates:          7662 (97%)
Number of preds handled by boolean abs:   71 (1%)
  Total number of models for allsat:      73
  Max number of models for allsat:        4
  Avg number of models for allsat:        1.20

Time for post operator:                  7.348s
  Time for path formula creation:        6.985s
Time for strengthen operator:            0.461s
Time for prec operator:                  3.505s
  Time for abstraction:                  2.209s (Max:     0.084s, Count: 56226)
    Boolean abstraction:                 0.199s
    Solving time:                        0.517s (Max:     0.068s)
    Model enumeration time:              0.013s
    Time for BDD construction:           0.013s (Max:     0.008s)
Time for merge operator:                 0.390s
Time for coverage check:                 0.049s
  Time for BDD entailment checks:        0.040s
Total time for SMT solver (w/o itp):     0.530s

Number of path formula cache hits:   281521 (88%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     5.422s

Total number of created targets for pointer analysis: 4153
   Number of created targets for uf: *(void)* is 9
   Number of created targets for uf: *(char)* is 11
   Number of created targets for uf: *(unsigned_char)* is 3
   Number of created targets for uf: *unsigned_long_long_int is 529
   Number of created targets for uf: *unsigned_int is 16


Number of BDD nodes:                               216
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         149 (count: 57146, min: 0, max: 56, avg: 0.00)
Time for BDD node cleanup:                             0.048s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  1.058s
  Time for transition matches:                         0.503s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.000s
Automaton transfers with branching:                0
Automaton transfer successors:                       263774 (count: 263774, min: 1, max: 1, avg: 1.00) [1 x 263774]

CPA algorithm statistics
------------------------
Number of iterations:            165487
Max size of waitlist:            338
Average size of waitlist:        199
Number of computed successors:   182772
Max successors for one state:    2
Number of times merged:          7322
Number of times stopped:         14381
Number of times breaked:         6

Total time for CPA algorithm:        22.976s (Max:     6.388s)
  Time for choose from waitlist:      0.298s
  Time for precision adjustment:      6.460s
  Time for transfer relation:        12.879s
  Time for merge operator:            0.694s
  Time for stop operator:             0.474s
  Time for adding to reached set:     0.706s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   6
Avg. length of target path (in blocks):                 744 (count: 6, min: 101, max: 173, avg: 124.00)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   1.123s
  Counterexample analysis:                             0.393s (Max:     0.098s, Calls: 6)
    Refinement sat check:                              0.240s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.002s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.039s
  Precision update:                                    0.004s
  ARG update:                                          0.669s

Length of refined path (in blocks):                     376 (count: 6, min: 8, max: 115, avg: 62.67)
Number of affected states:                              328 (count: 6, min: 0, max: 114, avg: 54.67)
Length (states) of path with itp 'true':                 42 (count: 6, min: 0, max: 30, avg: 7.00)
Length (states) of path with itp non-trivial itp:       328 (count: 6, min: 0, max: 114, avg: 54.67)
Length (states) of path with itp 'false':                 6 (count: 6, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 6, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:             323 (count: 6, min: 0, max: 113, avg: 53.83)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                6
Number of successful refinements:     6
Number of failed refinements:         0
Max. size of reached set before ref.: 33663
Max. size of reached set after ref.:  33072
Avg. size of reached set before ref.: 28879.00
Avg. size of reached set after ref.:  5524.50

Total time for CEGAR algorithm:      24.427s
Time for refinements:                 1.425s
Average time for refinement:          0.237s
Max time for refinement:              0.317s

Code Coverage
-----------------------------
  Function coverage:      0.735
  Visited lines:          2527
  Total lines:            2993
  Line coverage:          0.844
  Visited conditions:     387
  Total conditions:       538
  Condition coverage:     0.719

CPAchecker general statistics
-----------------------------
Number of program locations:     3905
Number of CFA edges:             4303
Number of relevant variables:    483
Number of functions:             136
Number of loops:                 18
Size of reached set:             26703
  Number of reached locations:   1281 (33%)
    Avg states per location:     20
    Max states per location:     376 (at node N505)
  Number of reached functions:   100 (74%)
  Number of partitions:          26695
    Avg size of partitions:      1
    Max size of partitions:      3 (with key [N2538 (before line 9208), Function main called from node N2514, stack depth 1 [6dd82486], stack [main]])
  Number of target states:       0
  Size of final wait list        310

Time for analysis setup:          5.829s
  Time for loading CPAs:          0.952s
  Time for loading parser:        0.713s
  Time for CFA construction:      4.070s
    Time for parsing file(s):     1.089s
    Time for AST to CFA:          1.493s
    Time for CFA sanity check:    0.308s
    Time for post-processing:     0.995s
      Time for var class.:        0.486s
Time for Analysis:               24.427s
CPU time for analysis:           24.420s
Total time for CPAchecker:       30.261s
Total CPU time for CPAchecker:   30.250s
Time for statistics:              0.579s

Time for Garbage Collector:       1.609s (in 66 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                122MB (   116 MiB) max;     67MB (    64 MiB) avg;    128MB (   122 MiB) peak
Used non-heap memory:             39MB (    38 MiB) max;     34MB (    33 MiB) avg;     40MB (    38 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        41MB (    39 MiB) max;     36MB (    35 MiB) avg
Total process virtual memory:   8086MB (  7711 MiB) max;   8072MB (  7698 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
