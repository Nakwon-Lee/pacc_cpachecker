scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.16-rc1/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--fddi--defxx.ko-entry_point_true-unreach-call.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_o86a7evw/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 6566: Function pointer *(ops->alloc) with type void *(*)(struct device *, size_t , dma_addr_t *, gfp_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6598: Function pointer *(ops->free) with type void (*)(struct device *, size_t , void *, dma_addr_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 6456-6457: Function pointer *(ops->map_page) with type dma_addr_t (*)(struct device *, struct page *, unsigned long, size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6490: Function pointer *(ops->unmap_page) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

line 9197: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___0 = ldv_zalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 9199: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___1 = ldv_zalloc(32UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ndo_uninit_3 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ndo_init_3 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __pci_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_final_state to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function alloc_fddidev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_enable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function request_threaded_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function unregister_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __request_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ioremap_nocache to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_set_master to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __release_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_disable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __raw_spin_lock_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iounmap to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function skb_push to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __netif_schedule to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function consume_skb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function debug_dma_free_coherent to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 6598: Ignoring function call through function pointer *(ops->free): (*(ops->free))(dev, size, vaddr, bus, attrs); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function debug_dma_map_page to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function skb_pull to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            62525 (20% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  58018 (93%)
  Because of loop head:            4387 (7%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         120 (0%)
  Times precision was empty:       61824 (99%)
  Times precision was {false}:     39 (0%)
  Times result was cached:         510 (1%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      152 (0%)
  Times result was 'false':        163 (0%)
Number of strengthen sat checks:   0
Number of coverage checks:         27763
  BDD entailment checks:           7567
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       48
Number of predicates discovered:          11
Number of abstraction locations:          11
Max number of predicates per location:    8
Avg number of predicates per location:    5
Total predicates per abstraction:         2316
Max number of predicates per abstraction: 8
Avg number of predicates per abstraction: 12.13
Number of irrelevant predicates:          1417 (61%)
Number of preds handled by boolean abs:   511 (22%)
  Total number of models for allsat:      206
  Max number of models for allsat:        3
  Avg number of models for allsat:        1.36

Time for post operator:                  4.020s
  Time for path formula creation:        3.683s
Time for strengthen operator:            0.470s
Time for prec operator:                  2.591s
  Time for abstraction:                  1.500s (Max:     0.054s, Count: 62525)
    Boolean abstraction:                 0.339s
    Solving time:                        0.243s (Max:     0.015s)
    Model enumeration time:              0.035s
    Time for BDD construction:           0.054s (Max:     0.012s)
Time for merge operator:                 0.237s
Time for coverage check:                 0.042s
  Time for BDD entailment checks:        0.033s
Total time for SMT solver (w/o itp):     0.278s

Number of path formula cache hits:   361814 (96%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     2.637s

Total number of created targets for pointer analysis: 284
   Number of created targets for uf: *(void)* is 3
   Number of created targets for uf: *unsigned_long_long_int is 17
   Number of created targets for uf: *unsigned_int is 5


Number of BDD nodes:                               370
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         646 (count: 70671, min: 0, max: 124, avg: 0.01)
Time for BDD node cleanup:                             0.027s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.827s
  Time for transition matches:                         0.393s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.001s
Automaton transfers with branching:                0
Automaton transfer successors:                       305621 (count: 305621, min: 1, max: 1, avg: 1.00) [1 x 305621]

CPA algorithm statistics
------------------------
Number of iterations:            189403
Max size of waitlist:            293
Average size of waitlist:        163
Number of computed successors:   209724
Max successors for one state:    2
Number of times merged:          10098
Number of times stopped:         17351
Number of times breaked:         120

Total time for CPA algorithm:        18.197s (Max:     4.049s)
  Time for choose from waitlist:      0.346s
  Time for precision adjustment:      5.121s
  Time for transfer relation:         9.529s
  Time for merge operator:            0.613s
  Time for stop operator:             0.500s
  Time for adding to reached set:     0.654s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   120
Avg. length of target path (in blocks):                4990 (count: 120, min: 36, max: 49, avg: 41.58)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   1.960s
  Counterexample analysis:                             1.096s (Max:     0.033s, Calls: 120)
    Refinement sat check:                              0.775s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.004s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.016s
  Precision update:                                    0.035s
  ARG update:                                          0.736s

Length of refined path (in blocks):                    2010 (count: 120, min: 10, max: 18, avg: 16.75)
Number of affected states:                              120 (count: 120, min: 0, max: 14, avg: 1.00)
Length (states) of path with itp 'true':               1770 (count: 120, min: 0, max: 17, avg: 14.75)
Length (states) of path with itp non-trivial itp:       120 (count: 120, min: 0, max: 14, avg: 1.00)
Length (states) of path with itp 'false':               120 (count: 120, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:          12 (count: 120, min: 0, max: 3, avg: 0.10)
Equal non-trivial interpolants along paths:              98 (count: 120, min: 0, max: 12, avg: 0.82)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                120
Number of successful refinements:     120
Number of failed refinements:         0
Max. size of reached set before ref.: 21911
Max. size of reached set after ref.:  18578
Avg. size of reached set before ref.: 14830.26
Avg. size of reached set after ref.:  13264.03

Total time for CEGAR algorithm:      23.439s
Time for refinements:                 3.995s
Average time for refinement:          0.033s
Max time for refinement:              0.126s

Code Coverage
-----------------------------
  Function coverage:      0.507
  Visited lines:          1993
  Total lines:            2993
  Line coverage:          0.666
  Visited conditions:     251
  Total conditions:       538
  Condition coverage:     0.467

CPAchecker general statistics
-----------------------------
Number of program locations:     3905
Number of CFA edges:             4303
Number of relevant variables:    483
Number of functions:             136
Number of loops:                 18
Size of reached set:             4264
  Number of reached locations:   763 (20%)
    Avg states per location:     5
    Max states per location:     50 (at node N419)
  Number of reached functions:   69 (51%)
  Number of partitions:          4259
    Avg size of partitions:      1
    Max size of partitions:      3 (with key [N2538 (before line 9208), Function main called from node N2514, stack depth 1 [6dd82486], stack [main]])
  Number of target states:       0
  Size of final wait list        140

Time for analysis setup:          6.305s
  Time for loading CPAs:          1.021s
  Time for loading parser:        0.743s
  Time for CFA construction:      4.434s
    Time for parsing file(s):     1.227s
    Time for AST to CFA:          1.632s
    Time for CFA sanity check:    0.274s
    Time for post-processing:     1.035s
      Time for var class.:        0.524s
Time for Analysis:               23.439s
CPU time for analysis:           23.440s
Total time for CPAchecker:       29.749s
Total CPU time for CPAchecker:   29.730s
Time for statistics:              0.175s

Time for Garbage Collector:       1.446s (in 78 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                121MB (   115 MiB) max;     62MB (    59 MiB) avg;    128MB (   122 MiB) peak
Used non-heap memory:             39MB (    37 MiB) max;     34MB (    33 MiB) avg;     39MB (    38 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        41MB (    39 MiB) max;     36MB (    35 MiB) avg
Total process virtual memory:   8086MB (  7711 MiB) max;   8071MB (  7697 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
