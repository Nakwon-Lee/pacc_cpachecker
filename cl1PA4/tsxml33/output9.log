scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.16-rc1/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--fddi--defxx.ko-entry_point_true-unreach-call.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_ik83zefs/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 6566: Function pointer *(ops->alloc) with type void *(*)(struct device *, size_t , dma_addr_t *, gfp_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6598: Function pointer *(ops->free) with type void (*)(struct device *, size_t , void *, dma_addr_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 6456-6457: Function pointer *(ops->map_page) with type dma_addr_t (*)(struct device *, struct page *, unsigned long, size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6490: Function pointer *(ops->unmap_page) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

line 9197: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___0 = ldv_zalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 9199: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___1 = ldv_zalloc(32UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ndo_uninit_3 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ndo_init_3 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_final_state to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __pci_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 6490: Ignoring function call through function pointer *(ops->unmap_page): (*(ops->unmap_page))(dev, addr, size, dir, attrs); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function debug_dma_unmap_page to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function consume_skb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function request_threaded_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __raw_spin_lock_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function unregister_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function debug_dma_free_coherent to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 6598: Ignoring function call through function pointer *(ops->free): (*(ops->free))(dev, size, vaddr, bus, attrs); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function __netif_schedule to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function skb_push to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function debug_dma_map_page to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function skb_pull to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dev_kfree_skb_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __netdev_alloc_skb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __release_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iounmap to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_disable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function alloc_fddidev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_enable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __request_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ioremap_nocache to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_set_master to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function register_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            79002 (23% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  71951 (91%)
  Because of loop head:            7010 (9%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         41 (0%)
  Times precision was empty:       78187 (99%)
  Times precision was {false}:     62 (0%)
  Times result was cached:         557 (1%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      196 (0%)
  Times result was 'false':        158 (0%)
Number of strengthen sat checks:   0
Number of coverage checks:         32919
  BDD entailment checks:           12597
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       48
Number of predicates discovered:          13
Number of abstraction locations:          13
Max number of predicates per location:    10
Avg number of predicates per location:    5
Total predicates per abstraction:         4070
Max number of predicates per abstraction: 10
Avg number of predicates per abstraction: 15.78
Number of irrelevant predicates:          2228 (55%)
Number of preds handled by boolean abs:   788 (19%)
  Total number of models for allsat:      265
  Max number of models for allsat:        4
  Avg number of models for allsat:        1.35

Time for post operator:                  4.720s
  Time for path formula creation:        4.446s
Time for strengthen operator:            0.526s
Time for prec operator:                  3.107s
  Time for abstraction:                  1.802s (Max:     0.034s, Count: 79002)
    Boolean abstraction:                 0.441s
    Solving time:                        0.289s (Max:     0.014s)
    Model enumeration time:              0.047s
    Time for BDD construction:           0.047s (Max:     0.007s)
Time for merge operator:                 0.239s
Time for coverage check:                 0.081s
  Time for BDD entailment checks:        0.071s
Total time for SMT solver (w/o itp):     0.336s

Number of path formula cache hits:   412578 (95%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     3.193s

Total number of created targets for pointer analysis: 458
   Number of created targets for uf: *(void)* is 3
   Number of created targets for uf: *unsigned_long_long_int is 9
   Number of created targets for uf: *unsigned_int is 3


Number of BDD nodes:                               714
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        1013 (count: 92552, min: 0, max: 112, avg: 0.01)
Time for BDD node cleanup:                             0.036s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.881s
  Time for transition matches:                         0.487s
  Time for transition assertions:                      0.001s
  Time for transition actions:                         0.000s
Automaton transfers with branching:                0
Automaton transfer successors:                       347367 (count: 347367, min: 1, max: 1, avg: 1.00) [1 x 347367]

CPA algorithm statistics
------------------------
Number of iterations:            231908
Max size of waitlist:            52
Average size of waitlist:        22
Number of computed successors:   254829
Max successors for one state:    2
Number of times merged:          10161
Number of times stopped:         22334
Number of times breaked:         41

Total time for CPA algorithm:        20.987s (Max:     4.240s)
  Time for choose from waitlist:      0.309s
  Time for precision adjustment:      6.081s
  Time for transfer relation:        10.768s
  Time for merge operator:            0.644s
  Time for stop operator:             0.618s
  Time for adding to reached set:     0.696s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   41
Avg. length of target path (in blocks):                2263 (count: 41, min: 36, max: 175, avg: 55.20)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   1.676s
  Counterexample analysis:                             0.739s (Max:     0.069s, Calls: 41)
    Refinement sat check:                              0.445s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.001s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.034s
  Precision update:                                    0.028s
  ARG update:                                          0.810s

Length of refined path (in blocks):                     607 (count: 41, min: 8, max: 18, avg: 14.80)
Number of affected states:                              168 (count: 41, min: 0, max: 14, avg: 4.10)
Length (states) of path with itp 'true':                398 (count: 41, min: 0, max: 17, avg: 9.71)
Length (states) of path with itp non-trivial itp:       168 (count: 41, min: 0, max: 14, avg: 4.10)
Length (states) of path with itp 'false':                41 (count: 41, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:          16 (count: 41, min: 0, max: 3, avg: 0.39)
Equal non-trivial interpolants along paths:             135 (count: 41, min: 0, max: 12, avg: 3.29)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                41
Number of successful refinements:     41
Number of failed refinements:         0
Max. size of reached set before ref.: 15486
Max. size of reached set after ref.:  15294
Avg. size of reached set before ref.: 12553.54
Avg. size of reached set after ref.:  7217.34

Total time for CEGAR algorithm:      23.885s
Time for refinements:                 2.600s
Average time for refinement:          0.063s
Max time for refinement:              0.175s

Code Coverage
-----------------------------
  Function coverage:      0.507
  Visited lines:          1882
  Total lines:            2993
  Line coverage:          0.629
  Visited conditions:     250
  Total conditions:       538
  Condition coverage:     0.465

CPAchecker general statistics
-----------------------------
Number of program locations:     3905
Number of CFA edges:             4303
Number of relevant variables:    483
Number of functions:             136
Number of loops:                 18
Size of reached set:             13554
  Number of reached locations:   814 (21%)
    Avg states per location:     16
    Max states per location:     460 (at node N515)
  Number of reached functions:   69 (51%)
  Number of partitions:          13550
    Avg size of partitions:      1
    Max size of partitions:      3 (with key [N2538 (before line 9208), Function main called from node N2514, stack depth 1 [5a00eb1e], stack [main]])
  Number of target states:       0
  Size of final wait list        11

Time for analysis setup:          6.403s
  Time for loading CPAs:          1.102s
  Time for loading parser:        0.706s
  Time for CFA construction:      4.434s
    Time for parsing file(s):     1.077s
    Time for AST to CFA:          1.710s
    Time for CFA sanity check:    0.321s
    Time for post-processing:     1.110s
      Time for var class.:        0.543s
Time for Analysis:               23.885s
CPU time for analysis:           23.880s
Total time for CPAchecker:       30.293s
Total CPU time for CPAchecker:   30.270s
Time for statistics:              0.344s

Time for Garbage Collector:       1.765s (in 82 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                121MB (   116 MiB) max;     62MB (    59 MiB) avg;    128MB (   122 MiB) peak
Used non-heap memory:             39MB (    38 MiB) max;     34MB (    33 MiB) avg;     40MB (    38 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        41MB (    39 MiB) max;     36MB (    35 MiB) avg
Total process virtual memory:   8085MB (  7711 MiB) max;   8071MB (  7697 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
