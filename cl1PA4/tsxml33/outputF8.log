scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.16-rc1/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--fddi--defxx.ko-entry_point_true-unreach-call.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_l337jl09/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 6566: Function pointer *(ops->alloc) with type void *(*)(struct device *, size_t , dma_addr_t *, gfp_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6598: Function pointer *(ops->free) with type void (*)(struct device *, size_t , void *, dma_addr_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 6456-6457: Function pointer *(ops->map_page) with type dma_addr_t (*)(struct device *, struct page *, unsigned long, size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6490: Function pointer *(ops->unmap_page) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

line 9197: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___0 = ldv_zalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 9199: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___1 = ldv_zalloc(32UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ndo_uninit_3 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ndo_init_3 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_final_state to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __pci_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 6490: Ignoring function call through function pointer *(ops->unmap_page): (*(ops->unmap_page))(dev, addr, size, dir, attrs); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function debug_dma_unmap_page to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function consume_skb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function request_threaded_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __raw_spin_lock_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function unregister_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function debug_dma_free_coherent to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 6598: Ignoring function call through function pointer *(ops->free): (*(ops->free))(dev, size, vaddr, bus, attrs); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function __netif_schedule to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function skb_push to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function debug_dma_map_page to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function skb_pull to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dev_kfree_skb_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __netdev_alloc_skb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __release_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iounmap to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_disable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function alloc_fddidev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_enable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __request_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ioremap_nocache to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_set_master to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function register_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function debug_dma_alloc_coherent to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            1352962 (20% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  1202422 (89%)
  Because of loop head:            150143 (11%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         397 (0%)
  Times precision was empty:       235937 (17%)
  Times precision was {false}:     19197 (1%)
  Times result was cached:         1055683 (78%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      42145 (3%)
  Times result was 'false':        178660 (13%)
Number of strengthen sat checks:   0
Number of coverage checks:         1288324
  BDD entailment checks:           876206
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       48
Number of predicates discovered:          100
Number of abstraction locations:          237
Max number of predicates per location:    50
Avg number of predicates per location:    6
Total predicates per abstraction:         8266219
Max number of predicates per abstraction: 50
Avg number of predicates per abstraction: 134.76
Number of irrelevant predicates:          4913882 (59%)
Number of preds handled by boolean abs:   517715 (6%)
  Total number of models for allsat:      247200
  Max number of models for allsat:        44
  Avg number of models for allsat:        5.87

Time for post operator:                170.492s
  Time for path formula creation:      167.049s
Time for strengthen operator:            5.774s
Time for prec operator:                498.796s
  Time for abstraction:                471.218s (Max:     1.944s, Count: 1352962)
    Boolean abstraction:               114.479s
    Solving time:                       93.863s (Max:     0.092s)
    Model enumeration time:             22.420s
    Time for BDD construction:          12.289s (Max:     0.094s)
Time for merge operator:                 4.561s
Time for coverage check:                 1.084s
  Time for BDD entailment checks:        0.881s
Total time for SMT solver (w/o itp):   116.283s

Number of path formula cache hits:   6573733 (84%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    82.375s

Total number of created targets for pointer analysis: 64573
   Number of created targets for uf: *(void)* is 87
   Number of created targets for uf: *(char)* is 353
   Number of created targets for uf: *signed_int is 83
   Number of created targets for uf: *(unsigned_char)* is 83
   Number of created targets for uf: *unsigned_long_long_int is 1774
   Number of created targets for uf: *unsigned_int is 894


Number of BDD nodes:                               242333
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                      140626 (count: 1544831, min: 0, max: 5475, avg: 0.09)
Time for BDD node cleanup:                             0.259s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                 10.313s
  Time for transition matches:                         5.121s
  Time for transition assertions:                      0.002s
  Time for transition actions:                         0.018s
Automaton transfers with branching:                0
Automaton transfer successors:                      6611096 (count: 6611096, min: 1, max: 1, avg: 1.00) [1 x 6611096]

CPA algorithm statistics
------------------------
Number of iterations:            4265601
Max size of waitlist:            60
Average size of waitlist:        36
Number of computed successors:   4818789
Max successors for one state:    2
Number of times merged:          206059
Number of times stopped:         365740
Number of times breaked:         397

Total time for CPA algorithm:       807.762s (Max:    31.110s)
  Time for choose from waitlist:      2.145s
  Time for precision adjustment:    533.617s
  Time for transfer relation:       237.088s
  Time for merge operator:            8.112s
  Time for stop operator:             6.858s
  Time for adding to reached set:     7.617s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   397
Avg. length of target path (in blocks):              109415 (count: 397, min: 52, max: 552, avg: 275.60)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  79.614s
  Counterexample analysis:                            69.685s (Max:     0.708s, Calls: 397)
    Refinement sat check:                             26.667s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.069s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.342s
  Precision update:                                    0.423s
  ARG update:                                          8.449s

Length of refined path (in blocks):                   69299 (count: 397, min: 8, max: 483, avg: 174.56)
Number of affected states:                            25764 (count: 397, min: 0, max: 482, avg: 64.90)
Length (states) of path with itp 'true':              43138 (count: 397, min: 0, max: 389, avg: 108.66)
Length (states) of path with itp non-trivial itp:     25764 (count: 397, min: 0, max: 482, avg: 64.90)
Length (states) of path with itp 'false':               397 (count: 397, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:        1037 (count: 397, min: 0, max: 41, avg: 2.61)
Equal non-trivial interpolants along paths:           24343 (count: 397, min: 0, max: 479, avg: 61.32)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                397
Number of successful refinements:     397
Number of failed refinements:         0
Max. size of reached set before ref.: 74510
Max. size of reached set after ref.:  18293
Avg. size of reached set before ref.: 15511.12
Avg. size of reached set after ref.:  4860.04

Total time for CEGAR algorithm:     894.049s
Time for refinements:                84.980s
Average time for refinement:          0.214s
Max time for refinement:              0.857s

Code Coverage
-----------------------------
  Function coverage:      0.765
  Visited lines:          2455
  Total lines:            2993
  Line coverage:          0.820
  Visited conditions:     417
  Total conditions:       538
  Condition coverage:     0.775

CPAchecker general statistics
-----------------------------
Number of program locations:     3905
Number of CFA edges:             4303
Number of relevant variables:    483
Number of functions:             136
Number of loops:                 18
Size of reached set:             45910
  Number of reached locations:   1341 (34%)
    Avg states per location:     34
    Max states per location:     1278 (at node N516)
  Number of reached functions:   104 (76%)
  Number of partitions:          44758
    Avg size of partitions:      1
    Max size of partitions:      44 (with key [N1908 (before line 8466), Function dfx_hw_dma_cmd_req called from node N1115, stack depth 4 [3eabe046], stack [main, dfx_open, dfx_adap_init, dfx_hw_dma_cmd_req]])
  Number of target states:       0
  Size of final wait list        56

Time for analysis setup:          6.197s
  Time for loading CPAs:          1.150s
  Time for loading parser:        0.695s
  Time for CFA construction:      4.199s
    Time for parsing file(s):     1.084s
    Time for AST to CFA:          1.511s
    Time for CFA sanity check:    0.306s
    Time for post-processing:     1.059s
      Time for var class.:        0.520s
Time for Analysis:              894.049s
CPU time for analysis:          893.920s
Total time for CPAchecker:      900.250s
Total CPU time for CPAchecker:  900.110s
Time for statistics:              0.744s

Time for Garbage Collector:      46.270s (in 1212 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                810MB (   772 MiB) max;    388MB (   370 MiB) avg;    855MB (   815 MiB) peak
Used non-heap memory:             42MB (    40 MiB) max;     41MB (    39 MiB) avg;     42MB (    40 MiB) peak
Allocated heap memory:           960MB (   915 MiB) max;    570MB (   544 MiB) avg
Allocated non-heap memory:        44MB (    42 MiB) max;     43MB (    41 MiB) avg
Total process virtual memory:  10325MB (  9847 MiB) max;   8776MB (  8369 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
