scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.16-rc1/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--fddi--defxx.ko-entry_point_true-unreach-call.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_847gefau/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 6566: Function pointer *(ops->alloc) with type void *(*)(struct device *, size_t , dma_addr_t *, gfp_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6598: Function pointer *(ops->free) with type void (*)(struct device *, size_t , void *, dma_addr_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 6456-6457: Function pointer *(ops->map_page) with type dma_addr_t (*)(struct device *, struct page *, unsigned long, size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6490: Function pointer *(ops->unmap_page) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

line 9197: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___0 = ldv_zalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 9199: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___1 = ldv_zalloc(32UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ndo_uninit_3 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ndo_init_3 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_final_state to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __pci_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 6490: Ignoring function call through function pointer *(ops->unmap_page): (*(ops->unmap_page))(dev, addr, size, dir, attrs); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function debug_dma_unmap_page to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function consume_skb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function request_threaded_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __raw_spin_lock_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function unregister_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function debug_dma_free_coherent to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 6598: Ignoring function call through function pointer *(ops->free): (*(ops->free))(dev, size, vaddr, bus, attrs); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function __netif_schedule to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function skb_push to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function debug_dma_map_page to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function skb_pull to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dev_kfree_skb_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __netdev_alloc_skb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __release_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iounmap to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_disable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function alloc_fddidev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_enable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __request_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ioremap_nocache to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_set_master to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function register_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function debug_dma_alloc_coherent to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            2600720 (21% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  2328903 (90%)
  Because of loop head:            271151 (10%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         666 (0%)
  Times precision was empty:       443675 (17%)
  Times precision was {false}:     4029 (0%)
  Times result was cached:         2124821 (82%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      28195 (1%)
  Times result was 'false':        251817 (10%)
Number of strengthen sat checks:   0
Number of coverage checks:         1420538
  BDD entailment checks:           572748
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       48
Number of predicates discovered:          51
Number of abstraction locations:          287
Max number of predicates per location:    17
Avg number of predicates per location:    7
Total predicates per abstraction:         11706070
Max number of predicates per abstraction: 17
Avg number of predicates per abstraction: 363.27
Number of irrelevant predicates:          5203389 (44%)
Number of preds handled by boolean abs:   139344 (1%)
  Total number of models for allsat:      55810
  Max number of models for allsat:        300
  Avg number of models for allsat:        1.98

Time for post operator:                 95.961s
  Time for path formula creation:       89.744s
Time for strengthen operator:            9.595s
Time for prec operator:                460.745s
  Time for abstraction:                433.264s (Max:     1.774s, Count: 2600720)
    Boolean abstraction:                30.472s
    Solving time:                       24.198s (Max:     0.087s)
    Model enumeration time:              4.533s
    Time for BDD construction:           1.218s (Max:     0.015s)
Time for merge operator:                 4.477s
Time for coverage check:                 0.710s
  Time for BDD entailment checks:        0.506s
Total time for SMT solver (w/o itp):    28.731s

Number of path formula cache hits:   14186116 (94%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    46.056s

Total number of created targets for pointer analysis: 88908
   Number of created targets for uf: *(void)* is 127
   Number of created targets for uf: *(char)* is 853
   Number of created targets for uf: *signed_int is 97
   Number of created targets for uf: *(unsigned_char)* is 280
   Number of created targets for uf: *unsigned_long_long_int is 2080
   Number of created targets for uf: *unsigned_int is 583


Number of BDD nodes:                               102278
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       81276 (count: 1376268, min: 0, max: 2013, avg: 0.06)
Time for BDD node cleanup:                             0.280s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                 16.627s
  Time for transition matches:                         9.370s
  Time for transition assertions:                      0.001s
  Time for transition actions:                         0.004s
Automaton transfers with branching:                0
Automaton transfer successors:                     12492747 (count: 12492747, min: 1, max: 1, avg: 1.00) [1 x 12492747]

CPA algorithm statistics
------------------------
Number of iterations:            8041494
Max size of waitlist:            94
Average size of waitlist:        33
Number of computed successors:   9045920
Max successors for one state:    2
Number of times merged:          423895
Number of times stopped:         740980
Number of times breaked:         666

Total time for CPA algorithm:       787.877s (Max:    12.609s)
  Time for choose from waitlist:      3.252s
  Time for precision adjustment:    522.276s
  Time for transfer relation:       205.106s
  Time for merge operator:           10.188s
  Time for stop operator:            10.390s
  Time for adding to reached set:    14.833s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   666
Avg. length of target path (in blocks):              129428 (count: 666, min: 36, max: 624, avg: 194.34)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  80.746s
  Counterexample analysis:                            63.333s (Max:     0.380s, Calls: 666)
    Refinement sat check:                             29.679s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.068s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.389s
  Precision update:                                    0.554s
  ARG update:                                         15.700s

Length of refined path (in blocks):                   95198 (count: 666, min: 8, max: 623, avg: 142.94)
Number of affected states:                            41933 (count: 666, min: 0, max: 622, avg: 62.96)
Length (states) of path with itp 'true':              52599 (count: 666, min: 0, max: 368, avg: 78.98)
Length (states) of path with itp non-trivial itp:     41933 (count: 666, min: 0, max: 622, avg: 62.96)
Length (states) of path with itp 'false':               666 (count: 666, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:         375 (count: 666, min: 0, max: 7, avg: 0.56)
Equal non-trivial interpolants along paths:           40949 (count: 666, min: 0, max: 621, avg: 61.48)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                666
Number of successful refinements:     666
Number of failed refinements:         0
Max. size of reached set before ref.: 104315
Max. size of reached set after ref.:  100813
Avg. size of reached set before ref.: 29095.63
Avg. size of reached set after ref.:  17133.85

Total time for CEGAR algorithm:     894.524s
Time for refinements:                97.182s
Average time for refinement:          0.145s
Max time for refinement:              0.588s

Code Coverage
-----------------------------
  Function coverage:      0.765
  Visited lines:          2459
  Total lines:            2993
  Line coverage:          0.822
  Visited conditions:     417
  Total conditions:       538
  Condition coverage:     0.775

CPAchecker general statistics
-----------------------------
Number of program locations:     3905
Number of CFA edges:             4303
Number of relevant variables:    483
Number of functions:             136
Number of loops:                 18
Size of reached set:             86573
  Number of reached locations:   1345 (34%)
    Avg states per location:     64
    Max states per location:     1605 (at node N70)
  Number of reached functions:   104 (76%)
  Number of partitions:          85980
    Avg size of partitions:      1
    Max size of partitions:      29 (with key [N2538 (before line 9208), Function main called from node N2514, stack depth 1 [6dd82486], stack [main]])
  Number of target states:       0
  Size of final wait list        89

Time for analysis setup:          5.756s
  Time for loading CPAs:          0.920s
  Time for loading parser:        0.636s
  Time for CFA construction:      4.102s
    Time for parsing file(s):     1.055s
    Time for AST to CFA:          1.535s
    Time for CFA sanity check:    0.255s
    Time for post-processing:     1.014s
      Time for var class.:        0.482s
Time for Analysis:              894.524s
CPU time for analysis:          894.450s
Total time for CPAchecker:      900.284s
Total CPU time for CPAchecker:  900.190s
Time for statistics:              1.110s

Time for Garbage Collector:      80.338s (in 1851 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                681MB (   649 MiB) max;    324MB (   309 MiB) avg;    720MB (   687 MiB) peak
Used non-heap memory:             42MB (    40 MiB) max;     41MB (    39 MiB) avg;     43MB (    41 MiB) peak
Allocated heap memory:           791MB (   754 MiB) max;    473MB (   451 MiB) avg
Allocated non-heap memory:        43MB (    41 MiB) max;     43MB (    41 MiB) avg
Total process virtual memory:   8628MB (  8229 MiB) max;   8256MB (  7874 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
