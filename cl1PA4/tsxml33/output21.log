scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.16-rc1/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--fddi--defxx.ko-entry_point_true-unreach-call.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_3n3b_13q/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 6566: Function pointer *(ops->alloc) with type void *(*)(struct device *, size_t , dma_addr_t *, gfp_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6598: Function pointer *(ops->free) with type void (*)(struct device *, size_t , void *, dma_addr_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 6456-6457: Function pointer *(ops->map_page) with type dma_addr_t (*)(struct device *, struct page *, unsigned long, size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6490: Function pointer *(ops->unmap_page) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

line 9197: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___0 = ldv_zalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 9199: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___1 = ldv_zalloc(32UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ndo_uninit_3 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ndo_init_3 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __pci_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_final_state to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function alloc_fddidev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_enable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function unregister_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function debug_dma_free_coherent to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 6598: Ignoring function call through function pointer *(ops->free): (*(ops->free))(dev, size, vaddr, bus, attrs); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function __release_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iounmap to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_disable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __request_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ioremap_nocache to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_set_master to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function request_threaded_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __raw_spin_lock_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function skb_push to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function debug_dma_map_page to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function skb_pull to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __netif_schedule to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function consume_skb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 6490: Ignoring function call through function pointer *(ops->unmap_page): (*(ops->unmap_page))(dev, addr, size, dir, attrs); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function debug_dma_unmap_page to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            57806 (21% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  53597 (93%)
  Because of loop head:            4186 (7%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         23 (0%)
  Times precision was empty:       57226 (99%)
  Times precision was {false}:     53 (0%)
  Times result was cached:         399 (1%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      128 (0%)
  Times result was 'false':        79 (0%)
Number of strengthen sat checks:   0
Number of coverage checks:         23402
  BDD entailment checks:           8166
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       48
Number of predicates discovered:          11
Number of abstraction locations:          18
Max number of predicates per location:    7
Avg number of predicates per location:    2
Total predicates per abstraction:         1412
Max number of predicates per abstraction: 7
Avg number of predicates per abstraction: 7.80
Number of irrelevant predicates:          885 (63%)
Number of preds handled by boolean abs:   256 (18%)
  Total number of models for allsat:      166
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.30

Time for post operator:                  6.250s
  Time for path formula creation:        5.899s
Time for strengthen operator:            0.716s
Time for prec operator:                  2.663s
  Time for abstraction:                  1.384s (Max:     0.023s, Count: 57806)
    Boolean abstraction:                 0.290s
    Solving time:                        0.215s (Max:     0.015s)
    Model enumeration time:              0.020s
    Time for BDD construction:           0.042s (Max:     0.010s)
Time for merge operator:                 0.411s
Time for coverage check:                 0.065s
  Time for BDD entailment checks:        0.058s
Total time for SMT solver (w/o itp):     0.235s

Number of path formula cache hits:   303886 (90%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     4.603s

Total number of created targets for pointer analysis: 4332
   Number of created targets for uf: *(void)* is 10
   Number of created targets for uf: *(char)* is 5
   Number of created targets for uf: *unsigned_long_long_int is 613
   Number of created targets for uf: *unsigned_int is 12


Number of BDD nodes:                               241
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         297 (count: 66498, min: 0, max: 47, avg: 0.00)
Time for BDD node cleanup:                             0.036s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.858s
  Time for transition matches:                         0.398s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.001s
Automaton transfers with branching:                0
Automaton transfer successors:                       276177 (count: 276177, min: 1, max: 1, avg: 1.00) [1 x 276177]

CPA algorithm statistics
------------------------
Number of iterations:            174247
Max size of waitlist:            255
Average size of waitlist:        145
Number of computed successors:   191586
Max successors for one state:    2
Number of times merged:          7618
Number of times stopped:         15540
Number of times breaked:         23

Total time for CPA algorithm:        21.460s (Max:     4.759s)
  Time for choose from waitlist:      0.267s
  Time for precision adjustment:      5.577s
  Time for transfer relation:        12.042s
  Time for merge operator:            0.828s
  Time for stop operator:             0.592s
  Time for adding to reached set:     0.737s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   23
Avg. length of target path (in blocks):                1631 (count: 23, min: 36, max: 180, avg: 70.91)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   1.575s
  Counterexample analysis:                             0.619s (Max:     0.096s, Calls: 23)
    Refinement sat check:                              0.321s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.001s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.034s
  Precision update:                                    0.023s
  ARG update:                                          0.796s

Length of refined path (in blocks):                     307 (count: 23, min: 8, max: 20, avg: 13.35)
Number of affected states:                               78 (count: 23, min: 0, max: 14, avg: 3.39)
Length (states) of path with itp 'true':                206 (count: 23, min: 0, max: 19, avg: 8.96)
Length (states) of path with itp non-trivial itp:        78 (count: 23, min: 0, max: 14, avg: 3.39)
Length (states) of path with itp 'false':                23 (count: 23, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           7 (count: 23, min: 0, max: 3, avg: 0.30)
Equal non-trivial interpolants along paths:              60 (count: 23, min: 0, max: 10, avg: 2.61)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                23
Number of successful refinements:     23
Number of failed refinements:         0
Max. size of reached set before ref.: 21418
Max. size of reached set after ref.:  21304
Avg. size of reached set before ref.: 16828.78
Avg. size of reached set after ref.:  9233.48

Total time for CEGAR algorithm:      24.023s
Time for refinements:                 2.306s
Average time for refinement:          0.100s
Max time for refinement:              0.278s

Code Coverage
-----------------------------
  Function coverage:      0.404
  Visited lines:          1769
  Total lines:            2993
  Line coverage:          0.591
  Visited conditions:     206
  Total conditions:       538
  Condition coverage:     0.383

CPAchecker general statistics
-----------------------------
Number of program locations:     3905
Number of CFA edges:             4303
Number of relevant variables:    483
Number of functions:             136
Number of loops:                 18
Size of reached set:             1276
  Number of reached locations:   617 (16%)
    Avg states per location:     2
    Max states per location:     17 (at node N80)
  Number of reached functions:   55 (40%)
  Number of partitions:          1274
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N2538 (before line 9208), Function main called from node N2514, stack depth 1 [6dd82486], stack [main]])
  Number of target states:       0
  Size of final wait list        62

Time for analysis setup:          6.263s
  Time for loading CPAs:          1.109s
  Time for loading parser:        0.684s
  Time for CFA construction:      4.305s
    Time for parsing file(s):     1.080s
    Time for AST to CFA:          1.539s
    Time for CFA sanity check:    0.316s
    Time for post-processing:     1.183s
      Time for var class.:        0.575s
Time for Analysis:               24.024s
CPU time for analysis:           24.020s
Total time for CPAchecker:       30.291s
Total CPU time for CPAchecker:   30.260s
Time for statistics:              0.123s

Time for Garbage Collector:       1.514s (in 67 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                122MB (   117 MiB) max;     65MB (    62 MiB) avg;    131MB (   125 MiB) peak
Used non-heap memory:             39MB (    38 MiB) max;     34MB (    33 MiB) avg;     40MB (    38 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        42MB (    40 MiB) max;     36MB (    35 MiB) avg
Total process virtual memory:   8086MB (  7711 MiB) max;   8072MB (  7698 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
