scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.16-rc1/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--fddi--defxx.ko-entry_point_true-unreach-call.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_44_oo79d/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 6566: Function pointer *(ops->alloc) with type void *(*)(struct device *, size_t , dma_addr_t *, gfp_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6598: Function pointer *(ops->free) with type void (*)(struct device *, size_t , void *, dma_addr_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 6456-6457: Function pointer *(ops->map_page) with type dma_addr_t (*)(struct device *, struct page *, unsigned long, size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6490: Function pointer *(ops->unmap_page) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

line 9197: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___0 = ldv_zalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 9199: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___1 = ldv_zalloc(32UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ndo_uninit_3 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ndo_init_3 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 6490: Ignoring function call through function pointer *(ops->unmap_page): (*(ops->unmap_page))(dev, addr, size, dir, attrs); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function debug_dma_unmap_page to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dev_kfree_skb_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function consume_skb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __netdev_alloc_skb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function debug_dma_map_page to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_final_state to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __pci_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function request_threaded_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __netif_schedule to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function alloc_fddidev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_enable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __request_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ioremap_nocache to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_set_master to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __release_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_disable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iounmap to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function register_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __raw_spin_lock_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function skb_put to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netif_rx to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            1577348 (21% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  1428320 (91%)
  Because of loop head:            147602 (9%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         1426 (0%)
  Times precision was empty:       94514 (6%)
  Times precision was {false}:     5104 (0%)
  Times result was cached:         1460740 (93%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      16990 (1%)
  Times result was 'false':        180923 (11%)
Number of strengthen sat checks:   0
Number of coverage checks:         821007
  BDD entailment checks:           280511
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       48
Number of predicates discovered:          49
Number of abstraction locations:          260
Max number of predicates per location:    13
Avg number of predicates per location:    4
Total predicates per abstraction:         8579805
Max number of predicates per abstraction: 13
Avg number of predicates per abstraction: 388.33
Number of irrelevant predicates:          5128048 (60%)
Number of preds handled by boolean abs:   47136 (1%)
  Total number of models for allsat:      23966
  Max number of models for allsat:        90
  Avg number of models for allsat:        1.41

Time for post operator:                138.374s
  Time for path formula creation:      131.985s
Time for strengthen operator:            5.851s
Time for prec operator:                280.681s
  Time for abstraction:                260.490s (Max:     0.113s, Count: 1577348)
    Boolean abstraction:                14.402s
    Solving time:                       13.328s (Max:     0.072s)
    Model enumeration time:              2.019s
    Time for BDD construction:           0.479s (Max:     0.010s)
Time for merge operator:                 5.189s
Time for coverage check:                 0.386s
  Time for BDD entailment checks:        0.276s
Total time for SMT solver (w/o itp):    15.347s

Number of path formula cache hits:   7025685 (79%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    98.812s

Total number of created targets for pointer analysis: 125475
   Number of created targets for uf: *(void)* is 11
   Number of created targets for uf: *(char)* is 2211
   Number of created targets for uf: *(unsigned_char)* is 634
   Number of created targets for uf: *unsigned_long_long_int is 191
   Number of created targets for uf: *unsigned_int is 7


Number of BDD nodes:                               11645
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       36307 (count: 606957, min: 0, max: 1174, avg: 0.06)
Time for BDD node cleanup:                             0.110s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                 10.384s
  Time for transition matches:                         5.898s
  Time for transition assertions:                      0.005s
  Time for transition actions:                         0.011s
Automaton transfers with branching:                0
Automaton transfer successors:                      7536124 (count: 7536124, min: 1, max: 1, avg: 1.00) [1 x 7536124]

CPA algorithm statistics
------------------------
Number of iterations:            4896470
Max size of waitlist:            340
Average size of waitlist:        120
Number of computed successors:   5619482
Max successors for one state:    2
Number of times merged:          270248
Number of times stopped:         426115
Number of times breaked:         1426

Total time for CPA algorithm:       561.999s (Max:     3.463s)
  Time for choose from waitlist:      2.429s
  Time for precision adjustment:    316.866s
  Time for transfer relation:       206.212s
  Time for merge operator:            8.643s
  Time for stop operator:             6.174s
  Time for adding to reached set:     9.051s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   1426
Avg. length of target path (in blocks):              617619 (count: 1426, min: 210, max: 731, avg: 433.11)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                 315.126s
  Counterexample analysis:                           302.223s (Max:     0.559s, Calls: 1426)
    Refinement sat check:                             99.216s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.301s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.474s
  Precision update:                                    1.201s
  ARG update:                                          8.631s

Length of refined path (in blocks):                  256411 (count: 1425, min: 8, max: 491, avg: 179.94)
Number of affected states:                            47579 (count: 1425, min: 0, max: 262, avg: 33.39)
Length (states) of path with itp 'true':             207407 (count: 1425, min: 0, max: 423, avg: 145.55)
Length (states) of path with itp non-trivial itp:     47579 (count: 1425, min: 0, max: 262, avg: 33.39)
Length (states) of path with itp 'false':              1425 (count: 1425, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:         322 (count: 1425, min: 0, max: 12, avg: 0.23)
Equal non-trivial interpolants along paths:           45838 (count: 1425, min: 0, max: 261, avg: 32.17)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                1426
Number of successful refinements:     1425
Number of failed refinements:         0
Max. size of reached set before ref.: 14620
Max. size of reached set after ref.:  12266
Avg. size of reached set before ref.: 7020.80
Avg. size of reached set after ref.:  3508.22

Total time for CEGAR algorithm:     894.192s
Time for refinements:               329.041s
Average time for refinement:          0.230s
Max time for refinement:              0.610s

Code Coverage
-----------------------------
  Function coverage:      0.632
  Visited lines:          2216
  Total lines:            2993
  Line coverage:          0.740
  Visited conditions:     376
  Total conditions:       538
  Condition coverage:     0.699

CPAchecker general statistics
-----------------------------
Number of program locations:     3905
Number of CFA edges:             4303
Number of relevant variables:    483
Number of functions:             136
Number of loops:                 18
Size of reached set:             9088
  Number of reached locations:   1130 (29%)
    Avg states per location:     8
    Max states per location:     162 (at node N516)
  Number of reached functions:   86 (63%)
  Number of partitions:          9017
    Avg size of partitions:      1
    Max size of partitions:      13 (with key [N2538 (before line 9208), Function main called from node N2514, stack depth 1 [6dd82486], stack [main]])
  Number of target states:       1
  Size of final wait list        253

Time for analysis setup:          6.100s
  Time for loading CPAs:          0.888s
  Time for loading parser:        0.706s
  Time for CFA construction:      4.346s
    Time for parsing file(s):     1.080s
    Time for AST to CFA:          1.543s
    Time for CFA sanity check:    0.311s
    Time for post-processing:     1.208s
      Time for var class.:        0.497s
Time for Analysis:              894.192s
CPU time for analysis:          894.120s
Total time for CPAchecker:      900.295s
Total CPU time for CPAchecker:  900.220s
Time for statistics:              0.260s

Time for Garbage Collector:      35.371s (in 1271 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                831MB (   792 MiB) max;    327MB (   311 MiB) avg;    870MB (   830 MiB) peak
Used non-heap memory:             42MB (    40 MiB) max;     41MB (    39 MiB) avg;     42MB (    40 MiB) peak
Allocated heap memory:          1147MB (  1094 MiB) max;    482MB (   460 MiB) avg
Allocated non-heap memory:        44MB (    42 MiB) max;     44MB (    42 MiB) avg
Total process virtual memory:   8356MB (  7969 MiB) max;   8190MB (  7811 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
