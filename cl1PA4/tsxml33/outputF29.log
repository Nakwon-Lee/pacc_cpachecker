scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.16-rc1/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--fddi--defxx.ko-entry_point_true-unreach-call.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_i8j947nz/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 6566: Function pointer *(ops->alloc) with type void *(*)(struct device *, size_t , dma_addr_t *, gfp_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6598: Function pointer *(ops->free) with type void (*)(struct device *, size_t , void *, dma_addr_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 6456-6457: Function pointer *(ops->map_page) with type dma_addr_t (*)(struct device *, struct page *, unsigned long, size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6490: Function pointer *(ops->unmap_page) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

line 9197: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___0 = ldv_zalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 9199: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___1 = ldv_zalloc(32UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ndo_uninit_3 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ndo_init_3 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __pci_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_final_state to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function request_threaded_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __raw_spin_lock_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function alloc_fddidev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_enable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __request_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ioremap_nocache to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_set_master to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __release_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_disable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function unregister_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iounmap to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function skb_push to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __netif_schedule to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function consume_skb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function debug_dma_map_page to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function skb_pull to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function debug_dma_free_coherent to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 6598: Ignoring function call through function pointer *(ops->free): (*(ops->free))(dev, size, vaddr, bus, attrs); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 6490: Ignoring function call through function pointer *(ops->unmap_page): (*(ops->unmap_page))(dev, addr, size, dir, attrs); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function debug_dma_unmap_page to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function register_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __netdev_alloc_skb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function debug_dma_alloc_coherent to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dev_kfree_skb_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function skb_put to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netif_rx to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            3099589 (20% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  2828979 (91%)
  Because of loop head:            269862 (9%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         748 (0%)
  Times precision was empty:       397121 (13%)
  Times precision was {false}:     7616 (0%)
  Times result was cached:         2690533 (87%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      4319 (0%)
  Times result was 'false':        282806 (9%)
Number of strengthen sat checks:   0
Number of coverage checks:         1410394
  BDD entailment checks:           455806
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       48
Number of predicates discovered:          9
Number of abstraction locations:          343
Max number of predicates per location:    8
Avg number of predicates per location:    1
Total predicates per abstraction:         9205781
Max number of predicates per abstraction: 8
Avg number of predicates per abstraction: 771.33
Number of irrelevant predicates:          7917887 (86%)
Number of preds handled by boolean abs:   7047 (0%)
  Total number of models for allsat:      4527
  Max number of models for allsat:        6
  Avg number of models for allsat:        1.05

Time for post operator:                147.804s
  Time for path formula creation:      140.983s
Time for strengthen operator:           11.538s
Time for prec operator:                293.273s
  Time for abstraction:                261.342s (Max:     0.976s, Count: 3099589)
    Boolean abstraction:                 4.879s
    Solving time:                       10.702s (Max:     0.134s)
    Model enumeration time:              0.469s
    Time for BDD construction:           0.117s (Max:     0.003s)
Time for merge operator:                 7.225s
Time for coverage check:                 0.555s
  Time for BDD entailment checks:        0.371s
Total time for SMT solver (w/o itp):    11.171s

Number of path formula cache hits:   16333036 (90%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    88.785s

Total number of created targets for pointer analysis: 300453
   Number of created targets for uf: *(void)* is 537
   Number of created targets for uf: *(char)* is 68
   Number of created targets for uf: *signed_int is 329
   Number of created targets for uf: *(unsigned_char)* is 100
   Number of created targets for uf: *unsigned_long_long_int is 8306
   Number of created targets for uf: *unsigned_int is 1475


Number of BDD nodes:                               361
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        8746 (count: 974242, min: 0, max: 333, avg: 0.01)
Time for BDD node cleanup:                             0.246s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                 20.410s
  Time for transition matches:                        11.185s
  Time for transition assertions:                      0.006s
  Time for transition actions:                         0.005s
Automaton transfers with branching:                0
Automaton transfer successors:                     15254549 (count: 15254549, min: 1, max: 1, avg: 1.00) [1 x 15254549]

CPA algorithm statistics
------------------------
Number of iterations:            9386744
Max size of waitlist:            575
Average size of waitlist:        285
Number of computed successors:   10520111
Max successors for one state:    2
Number of times merged:          477294
Number of times stopped:         789547
Number of times breaked:         748

Total time for CPA algorithm:       715.640s (Max:     9.399s)
  Time for choose from waitlist:      4.237s
  Time for precision adjustment:    361.261s
  Time for transfer relation:       279.815s
  Time for merge operator:           13.639s
  Time for stop operator:            11.573s
  Time for adding to reached set:    21.277s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   748
Avg. length of target path (in blocks):              195118 (count: 748, min: 101, max: 394, avg: 260.85)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                 116.502s
  Counterexample analysis:                            96.745s (Max:     0.255s, Calls: 748)
    Refinement sat check:                             52.678s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.095s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.447s
  Precision update:                                    0.694s
  ARG update:                                         17.614s

Length of refined path (in blocks):                  122314 (count: 748, min: 8, max: 393, avg: 163.52)
Number of affected states:                            63293 (count: 748, min: 0, max: 392, avg: 84.62)
Length (states) of path with itp 'true':              58273 (count: 748, min: 0, max: 261, avg: 77.91)
Length (states) of path with itp non-trivial itp:     63293 (count: 748, min: 0, max: 392, avg: 84.62)
Length (states) of path with itp 'false':               748 (count: 748, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 748, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:           62547 (count: 748, min: 0, max: 391, avg: 83.62)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                748
Number of successful refinements:     748
Number of failed refinements:         0
Max. size of reached set before ref.: 78179
Max. size of reached set after ref.:  69029
Avg. size of reached set before ref.: 57385.51
Avg. size of reached set after ref.:  44854.10

Total time for CEGAR algorithm:     894.194s
Time for refinements:               151.745s
Average time for refinement:          0.202s
Max time for refinement:              0.682s

Code Coverage
-----------------------------
  Function coverage:      0.831
  Visited lines:          2808
  Total lines:            2993
  Line coverage:          0.938
  Visited conditions:     499
  Total conditions:       538
  Condition coverage:     0.928

CPAchecker general statistics
-----------------------------
Number of program locations:     3905
Number of CFA edges:             4303
Number of relevant variables:    483
Number of functions:             136
Number of loops:                 18
Size of reached set:             74269
  Number of reached locations:   1599 (41%)
    Avg states per location:     46
    Max states per location:     1115 (at node N505)
  Number of reached functions:   113 (83%)
  Number of partitions:          73935
    Avg size of partitions:      1
    Max size of partitions:      7 (with key [N2538 (before line 9208), Function main called from node N2514, stack depth 1 [6dd82486], stack [main]])
  Number of target states:       0
  Size of final wait list        360

Time for analysis setup:          6.055s
  Time for loading CPAs:          1.024s
  Time for loading parser:        0.731s
  Time for CFA construction:      4.150s
    Time for parsing file(s):     1.096s
    Time for AST to CFA:          1.460s
    Time for CFA sanity check:    0.286s
    Time for post-processing:     1.115s
      Time for var class.:        0.495s
Time for Analysis:              894.194s
CPU time for analysis:          894.110s
Total time for CPAchecker:      900.256s
Total CPU time for CPAchecker:  900.160s
Time for statistics:              1.138s

Time for Garbage Collector:      62.074s (in 1220 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                945MB (   901 MiB) max;    458MB (   436 MiB) avg;    966MB (   921 MiB) peak
Used non-heap memory:             42MB (    40 MiB) max;     40MB (    38 MiB) avg;     43MB (    41 MiB) peak
Allocated heap memory:          1285MB (  1226 MiB) max;    678MB (   646 MiB) avg
Allocated non-heap memory:        43MB (    41 MiB) max;     42MB (    40 MiB) avg
Total process virtual memory:   8220MB (  7839 MiB) max;   8157MB (  7779 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
