scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.16-rc1/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--fddi--defxx.ko-entry_point_true-unreach-call.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_3v4gs_8u/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 6566: Function pointer *(ops->alloc) with type void *(*)(struct device *, size_t , dma_addr_t *, gfp_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6598: Function pointer *(ops->free) with type void (*)(struct device *, size_t , void *, dma_addr_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 6456-6457: Function pointer *(ops->map_page) with type dma_addr_t (*)(struct device *, struct page *, unsigned long, size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6490: Function pointer *(ops->unmap_page) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

line 9197: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___0 = ldv_zalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 9199: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___1 = ldv_zalloc(32UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ndo_uninit_3 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ndo_init_3 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __pci_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_final_state to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function request_threaded_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function unregister_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __raw_spin_lock_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function alloc_fddidev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_enable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __request_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ioremap_nocache to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_set_master to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __release_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_disable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iounmap to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function skb_push to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function debug_dma_map_page to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function skb_pull to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __netif_schedule to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function consume_skb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function debug_dma_free_coherent to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 6598: Ignoring function call through function pointer *(ops->free): (*(ops->free))(dev, size, vaddr, bus, attrs); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function _raw_spin_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 6490: Ignoring function call through function pointer *(ops->unmap_page): (*(ops->unmap_page))(dev, addr, size, dir, attrs); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function debug_dma_unmap_page to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dev_kfree_skb_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function register_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __netdev_alloc_skb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            3872856 (21% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  3518982 (91%)
  Because of loop head:            353027 (9%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         847 (0%)
  Times precision was empty:       813218 (21%)
  Times precision was {false}:     4642 (0%)
  Times result was cached:         3051203 (79%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      3793 (0%)
  Times result was 'false':        323939 (8%)
Number of strengthen sat checks:   0
Number of coverage checks:         1811863
  BDD entailment checks:           533581
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       48
Number of predicates discovered:          7
Number of abstraction locations:          310
Max number of predicates per location:    6
Avg number of predicates per location:    1
Total predicates per abstraction:         9849397
Max number of predicates per abstraction: 6
Avg number of predicates per abstraction: 1167.68
Number of irrelevant predicates:          8376907 (85%)
Number of preds handled by boolean abs:   6277 (0%)
  Total number of models for allsat:      3944
  Max number of models for allsat:        6
  Avg number of models for allsat:        1.04

Time for post operator:                124.895s
  Time for path formula creation:      116.486s
Time for strengthen operator:           14.568s
Time for prec operator:                319.406s
  Time for abstraction:                281.830s (Max:     1.870s, Count: 3872856)
    Boolean abstraction:                 4.296s
    Solving time:                        7.130s (Max:     0.086s)
    Model enumeration time:              0.387s
    Time for BDD construction:           0.114s (Max:     0.007s)
Time for merge operator:                 6.538s
Time for coverage check:                 0.706s
  Time for BDD entailment checks:        0.445s
Total time for SMT solver (w/o itp):     7.517s

Number of path formula cache hits:   21671273 (95%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    58.763s

Total number of created targets for pointer analysis: 163213
   Number of created targets for uf: *(void)* is 305
   Number of created targets for uf: *(char)* is 71
   Number of created targets for uf: *signed_int is 183
   Number of created targets for uf: *(unsigned_char)* is 3
   Number of created targets for uf: *unsigned_long_long_int is 4514
   Number of created targets for uf: *unsigned_int is 618


Number of BDD nodes:                               350
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        7689 (count: 1454384, min: 0, max: 388, avg: 0.01)
Time for BDD node cleanup:                             0.241s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                 24.042s
  Time for transition matches:                        13.322s
  Time for transition assertions:                      0.005s
  Time for transition actions:                         0.009s
Automaton transfers with branching:                0
Automaton transfer successors:                     18846226 (count: 18846226, min: 1, max: 1, avg: 1.00) [1 x 18846226]

CPA algorithm statistics
------------------------
Number of iterations:            11710050
Max size of waitlist:            720
Average size of waitlist:        195
Number of computed successors:   13140252
Max successors for one state:    2
Number of times merged:          639141
Number of times stopped:         1029343
Number of times breaked:         847

Total time for CPA algorithm:       775.915s (Max:    11.582s)
  Time for choose from waitlist:      5.463s
  Time for precision adjustment:    406.283s
  Time for transfer relation:       285.338s
  Time for merge operator:           14.322s
  Time for stop operator:            13.243s
  Time for adding to reached set:    20.218s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   847
Avg. length of target path (in blocks):              169211 (count: 847, min: 101, max: 339, avg: 199.78)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  90.419s
  Counterexample analysis:                            63.305s (Max:     0.269s, Calls: 847)
    Refinement sat check:                             34.952s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.080s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.508s
  Precision update:                                    0.670s
  ARG update:                                         25.047s

Length of refined path (in blocks):                   89843 (count: 847, min: 8, max: 338, avg: 106.07)
Number of affected states:                            64567 (count: 847, min: 0, max: 337, avg: 76.23)
Length (states) of path with itp 'true':              24429 (count: 847, min: 0, max: 128, avg: 28.84)
Length (states) of path with itp non-trivial itp:     64567 (count: 847, min: 0, max: 337, avg: 76.23)
Length (states) of path with itp 'false':               847 (count: 847, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 847, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:           63732 (count: 847, min: 0, max: 336, avg: 75.24)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                847
Number of successful refinements:     847
Number of failed refinements:         0
Max. size of reached set before ref.: 87103
Max. size of reached set after ref.:  50993
Avg. size of reached set before ref.: 26546.40
Avg. size of reached set after ref.:  12683.21

Total time for CEGAR algorithm:     893.647s
Time for refinements:               109.042s
Average time for refinement:          0.128s
Max time for refinement:              0.684s

Code Coverage
-----------------------------
  Function coverage:      0.794
  Visited lines:          2640
  Total lines:            2993
  Line coverage:          0.882
  Visited conditions:     429
  Total conditions:       538
  Condition coverage:     0.797

CPAchecker general statistics
-----------------------------
Number of program locations:     3905
Number of CFA edges:             4303
Number of relevant variables:    483
Number of functions:             136
Number of loops:                 18
Size of reached set:             44851
  Number of reached locations:   1403 (36%)
    Avg states per location:     31
    Max states per location:     664 (at node N505)
  Number of reached functions:   108 (79%)
  Number of partitions:          44597
    Avg size of partitions:      1
    Max size of partitions:      7 (with key [N2538 (before line 9208), Function main called from node N2514, stack depth 1 [6dd82486], stack [main]])
  Number of target states:       0
  Size of final wait list        381

Time for analysis setup:          6.660s
  Time for loading CPAs:          1.221s
  Time for loading parser:        0.640s
  Time for CFA construction:      4.630s
    Time for parsing file(s):     1.163s
    Time for AST to CFA:          1.585s
    Time for CFA sanity check:    0.365s
    Time for post-processing:     1.343s
      Time for var class.:        0.536s
Time for Analysis:              893.647s
CPU time for analysis:          893.570s
Total time for CPAchecker:      900.313s
Total CPU time for CPAchecker:  900.220s
Time for statistics:              0.827s

Time for Garbage Collector:      76.128s (in 1436 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                747MB (   712 MiB) max;    394MB (   376 MiB) avg;    767MB (   732 MiB) peak
Used non-heap memory:             46MB (    44 MiB) max;     40MB (    39 MiB) avg;     46MB (    44 MiB) peak
Allocated heap memory:           790MB (   753 MiB) max;    576MB (   549 MiB) avg
Allocated non-heap memory:        47MB (    45 MiB) max;     47MB (    45 MiB) avg
Total process virtual memory:   8154MB (  7776 MiB) max;   8123MB (  7747 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
