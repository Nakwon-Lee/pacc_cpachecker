scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.16-rc1/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--fddi--defxx.ko-entry_point_true-unreach-call.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_r4785ou7/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 6566: Function pointer *(ops->alloc) with type void *(*)(struct device *, size_t , dma_addr_t *, gfp_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6598: Function pointer *(ops->free) with type void (*)(struct device *, size_t , void *, dma_addr_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 6456-6457: Function pointer *(ops->map_page) with type dma_addr_t (*)(struct device *, struct page *, unsigned long, size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6490: Function pointer *(ops->unmap_page) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

line 9197: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___0 = ldv_zalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 9199: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___1 = ldv_zalloc(32UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ndo_uninit_3 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ndo_init_3 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 6490: Ignoring function call through function pointer *(ops->unmap_page): (*(ops->unmap_page))(dev, addr, size, dir, attrs); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function debug_dma_unmap_page to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dev_kfree_skb_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function consume_skb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __netdev_alloc_skb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function debug_dma_map_page to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_final_state to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __pci_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function request_threaded_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __netif_schedule to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function alloc_fddidev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_enable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __request_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ioremap_nocache to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_set_master to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __release_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_disable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iounmap to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function register_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __raw_spin_lock_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function skb_put to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netif_rx to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            1598586 (21% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  1447535 (91%)
  Because of loop head:            149611 (9%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         1440 (0%)
  Times precision was empty:       95436 (6%)
  Times precision was {false}:     5118 (0%)
  Times result was cached:         1480777 (93%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      17255 (1%)
  Times result was 'false':        183577 (11%)
Number of strengthen sat checks:   0
Number of coverage checks:         831737
  BDD entailment checks:           284705
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       48
Number of predicates discovered:          49
Number of abstraction locations:          260
Max number of predicates per location:    13
Avg number of predicates per location:    4
Total predicates per abstraction:         8718263
Max number of predicates per abstraction: 13
Avg number of predicates per abstraction: 389.68
Number of irrelevant predicates:          5223360 (60%)
Number of preds handled by boolean abs:   48001 (1%)
  Total number of models for allsat:      24243
  Max number of models for allsat:        90
  Avg number of models for allsat:        1.40

Time for post operator:                124.473s
  Time for path formula creation:      121.443s
Time for strengthen operator:            6.736s
Time for prec operator:                297.531s
  Time for abstraction:                278.413s (Max:     1.441s, Count: 1598586)
    Boolean abstraction:                14.478s
    Solving time:                       13.332s (Max:     0.035s)
    Model enumeration time:              1.958s
    Time for BDD construction:           0.562s (Max:     0.069s)
Time for merge operator:                 5.157s
Time for coverage check:                 0.386s
  Time for BDD entailment checks:        0.285s
Total time for SMT solver (w/o itp):    15.290s

Number of path formula cache hits:   7083406 (79%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    89.663s

Total number of created targets for pointer analysis: 129963
   Number of created targets for uf: *(void)* is 11
   Number of created targets for uf: *(char)* is 2257
   Number of created targets for uf: *(unsigned_char)* is 648
   Number of created targets for uf: *unsigned_long_long_int is 191
   Number of created targets for uf: *unsigned_int is 12


Number of BDD nodes:                               11645
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       36791 (count: 615235, min: 0, max: 1174, avg: 0.06)
Time for BDD node cleanup:                             0.145s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                 10.474s
  Time for transition matches:                         5.919s
  Time for transition assertions:                      0.001s
  Time for transition actions:                         0.011s
Automaton transfers with branching:                0
Automaton transfer successors:                      7635769 (count: 7635769, min: 1, max: 1, avg: 1.00) [1 x 7635769]

CPA algorithm statistics
------------------------
Number of iterations:            4960930
Max size of waitlist:            340
Average size of waitlist:        121
Number of computed successors:   5693063
Max successors for one state:    2
Number of times merged:          273516
Number of times stopped:         431546
Number of times breaked:         1440

Total time for CPA algorithm:       561.204s (Max:     2.859s)
  Time for choose from waitlist:      2.157s
  Time for precision adjustment:    333.025s
  Time for transfer relation:       192.016s
  Time for merge operator:            8.417s
  Time for stop operator:             5.674s
  Time for adding to reached set:     8.185s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   1440
Avg. length of target path (in blocks):              626081 (count: 1440, min: 210, max: 731, avg: 434.78)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                 316.461s
  Counterexample analysis:                           304.366s (Max:     0.501s, Calls: 1440)
    Refinement sat check:                             98.633s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.312s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.395s
  Precision update:                                    1.281s
  ARG update:                                          7.908s

Length of refined path (in blocks):                  260719 (count: 1440, min: 8, max: 491, avg: 181.05)
Number of affected states:                            48113 (count: 1440, min: 0, max: 262, avg: 33.41)
Length (states) of path with itp 'true':             211166 (count: 1440, min: 0, max: 423, avg: 146.64)
Length (states) of path with itp non-trivial itp:     48113 (count: 1440, min: 0, max: 262, avg: 33.41)
Length (states) of path with itp 'false':              1440 (count: 1440, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:         322 (count: 1440, min: 0, max: 12, avg: 0.22)
Equal non-trivial interpolants along paths:           46357 (count: 1440, min: 0, max: 261, avg: 32.19)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                1440
Number of successful refinements:     1440
Number of failed refinements:         0
Max. size of reached set before ref.: 14620
Max. size of reached set after ref.:  12266
Avg. size of reached set before ref.: 7049.73
Avg. size of reached set after ref.:  3528.12

Total time for CEGAR algorithm:     894.285s
Time for refinements:               329.980s
Average time for refinement:          0.229s
Max time for refinement:              0.580s

Code Coverage
-----------------------------
  Function coverage:      0.522
  Visited lines:          1960
  Total lines:            2993
  Line coverage:          0.655
  Visited conditions:     311
  Total conditions:       538
  Condition coverage:     0.578

CPAchecker general statistics
-----------------------------
Number of program locations:     3905
Number of CFA edges:             4303
Number of relevant variables:    483
Number of functions:             136
Number of loops:                 18
Size of reached set:             6826
  Number of reached locations:   888 (23%)
    Avg states per location:     7
    Max states per location:     106 (at node N516)
  Number of reached functions:   71 (52%)
  Number of partitions:          6770
    Avg size of partitions:      1
    Max size of partitions:      11 (with key [N2538 (before line 9208), Function main called from node N2514, stack depth 1 [6dd82486], stack [main]])
  Number of target states:       0
  Size of final wait list        177

Time for analysis setup:          5.972s
  Time for loading CPAs:          1.019s
  Time for loading parser:        0.737s
  Time for CFA construction:      4.096s
    Time for parsing file(s):     1.114s
    Time for AST to CFA:          1.432s
    Time for CFA sanity check:    0.273s
    Time for post-processing:     1.018s
      Time for var class.:        0.520s
Time for Analysis:              894.286s
CPU time for analysis:          894.210s
Total time for CPAchecker:      900.263s
Total CPU time for CPAchecker:  900.170s
Time for statistics:              0.194s

Time for Garbage Collector:      33.303s (in 1254 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                847MB (   808 MiB) max;    331MB (   315 MiB) avg;    884MB (   843 MiB) peak
Used non-heap memory:             41MB (    39 MiB) max;     41MB (    39 MiB) avg;     41MB (    40 MiB) peak
Allocated heap memory:          1173MB (  1118 MiB) max;    490MB (   468 MiB) avg
Allocated non-heap memory:        44MB (    42 MiB) max;     43MB (    41 MiB) avg
Total process virtual memory:   8356MB (  7969 MiB) max;   8195MB (  7816 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
