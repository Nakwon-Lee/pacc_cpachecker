scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.16-rc1/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--fddi--defxx.ko-entry_point_true-unreach-call.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_l4ajolmn/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 6566: Function pointer *(ops->alloc) with type void *(*)(struct device *, size_t , dma_addr_t *, gfp_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6598: Function pointer *(ops->free) with type void (*)(struct device *, size_t , void *, dma_addr_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 6456-6457: Function pointer *(ops->map_page) with type dma_addr_t (*)(struct device *, struct page *, unsigned long, size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6490: Function pointer *(ops->unmap_page) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

line 9197: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___0 = ldv_zalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 9199: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___1 = ldv_zalloc(32UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ndo_uninit_3 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ndo_init_3 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __pci_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_final_state to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function alloc_fddidev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_enable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function request_threaded_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __request_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ioremap_nocache to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_set_master to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __release_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_disable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function unregister_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __raw_spin_lock_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iounmap to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function debug_dma_free_coherent to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 6598: Ignoring function call through function pointer *(ops->free): (*(ops->free))(dev, size, vaddr, bus, attrs); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function skb_push to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __netif_schedule to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function debug_dma_map_page to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function skb_pull to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function consume_skb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 6490: Ignoring function call through function pointer *(ops->unmap_page): (*(ops->unmap_page))(dev, addr, size, dir, attrs); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function debug_dma_unmap_page to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function register_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function debug_dma_alloc_coherent to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            39686 (21% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  37141 (94%)
  Because of loop head:            2409 (6%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         136 (0%)
  Times precision was empty:       29694 (75%)
  Times precision was {false}:     211 (1%)
  Times result was cached:         9671 (24%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      110 (0%)
  Times result was 'false':        724 (2%)
Number of strengthen sat checks:   0
Number of coverage checks:         14387
  BDD entailment checks:           4009
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       48
Number of predicates discovered:          4
Number of abstraction locations:          72
Max number of predicates per location:    3
Avg number of predicates per location:    1
Total predicates per abstraction:         10198
Max number of predicates per abstraction: 3
Avg number of predicates per abstraction: 31.77
Number of irrelevant predicates:          9191 (90%)
Number of preds handled by boolean abs:   121 (1%)
  Total number of models for allsat:      122
  Max number of models for allsat:        4
  Avg number of models for allsat:        1.11

Time for post operator:                  5.536s
  Time for path formula creation:        5.193s
Time for strengthen operator:            0.428s
Time for prec operator:                  3.386s
  Time for abstraction:                  2.599s (Max:     0.095s, Count: 39686)
    Boolean abstraction:                 0.261s
    Solving time:                        0.429s (Max:     0.073s)
    Model enumeration time:              0.020s
    Time for BDD construction:           0.026s (Max:     0.008s)
Time for merge operator:                 0.371s
Time for coverage check:                 0.075s
  Time for BDD entailment checks:        0.052s
Total time for SMT solver (w/o itp):     0.449s

Number of path formula cache hits:   208618 (89%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     4.041s

Total number of created targets for pointer analysis: 2206
   Number of created targets for uf: *(void)* is 10
   Number of created targets for uf: *(char)* is 5
   Number of created targets for uf: *unsigned_long_long_int is 127
   Number of created targets for uf: *unsigned_int is 10


Number of BDD nodes:                               217
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         240 (count: 35467, min: 0, max: 60, avg: 0.01)
Time for BDD node cleanup:                             0.029s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.732s
  Time for transition matches:                         0.288s
  Time for transition assertions:                      0.001s
  Time for transition actions:                         0.001s
Automaton transfers with branching:                0
Automaton transfer successors:                       193547 (count: 193547, min: 1, max: 1, avg: 1.00) [1 x 193547]

CPA algorithm statistics
------------------------
Number of iterations:            119852
Max size of waitlist:            332
Average size of waitlist:        164
Number of computed successors:   132285
Max successors for one state:    2
Number of times merged:          5189
Number of times stopped:         8720
Number of times breaked:         136

Total time for CPA algorithm:        18.798s (Max:     2.769s)
  Time for choose from waitlist:      0.226s
  Time for precision adjustment:      5.545s
  Time for transfer relation:        10.134s
  Time for merge operator:            0.650s
  Time for stop operator:             0.470s
  Time for adding to reached set:     0.459s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   136
Avg. length of target path (in blocks):                6317 (count: 136, min: 36, max: 138, avg: 46.45)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   2.827s
  Counterexample analysis:                             2.005s (Max:     0.100s, Calls: 136)
    Refinement sat check:                              1.471s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.005s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.041s
  Precision update:                                    0.118s
  ARG update:                                          0.557s

Length of refined path (in blocks):                    2781 (count: 136, min: 8, max: 119, avg: 20.45)
Number of affected states:                              582 (count: 136, min: 0, max: 118, avg: 4.28)
Length (states) of path with itp 'true':               2063 (count: 136, min: 0, max: 30, avg: 15.17)
Length (states) of path with itp non-trivial itp:       582 (count: 136, min: 0, max: 118, avg: 4.28)
Length (states) of path with itp 'false':               136 (count: 136, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 136, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:             572 (count: 136, min: 0, max: 117, avg: 4.21)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                136
Number of successful refinements:     136
Number of failed refinements:         0
Max. size of reached set before ref.: 14088
Max. size of reached set after ref.:  11936
Avg. size of reached set before ref.: 8211.80
Avg. size of reached set after ref.:  7340.05

Total time for CEGAR algorithm:      24.168s
Time for refinements:                 4.388s
Average time for refinement:          0.032s
Max time for refinement:              0.182s

Code Coverage
-----------------------------
  Function coverage:      0.441
  Visited lines:          1791
  Total lines:            2993
  Line coverage:          0.598
  Visited conditions:     201
  Total conditions:       538
  Condition coverage:     0.374

CPAchecker general statistics
-----------------------------
Number of program locations:     3905
Number of CFA edges:             4303
Number of relevant variables:    483
Number of functions:             136
Number of loops:                 18
Size of reached set:             4283
  Number of reached locations:   607 (16%)
    Avg states per location:     7
    Max states per location:     75 (at node N420)
  Number of reached functions:   60 (44%)
  Number of partitions:          4270
    Avg size of partitions:      1
    Max size of partitions:      4 (with key [N2538 (before line 9208), Function main called from node N2514, stack depth 1 [5a00eb1e], stack [main]])
  Number of target states:       0
  Size of final wait list        167

Time for analysis setup:          6.086s
  Time for loading CPAs:          1.079s
  Time for loading parser:        0.708s
  Time for CFA construction:      4.166s
    Time for parsing file(s):     1.083s
    Time for AST to CFA:          1.483s
    Time for CFA sanity check:    0.339s
    Time for post-processing:     1.049s
      Time for var class.:        0.499s
Time for Analysis:               24.169s
CPU time for analysis:           24.170s
Total time for CPAchecker:       30.259s
Total CPU time for CPAchecker:   30.250s
Time for statistics:              0.186s

Time for Garbage Collector:       1.187s (in 58 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                124MB (   118 MiB) max;     64MB (    61 MiB) avg;    127MB (   122 MiB) peak
Used non-heap memory:             41MB (    39 MiB) max;     35MB (    33 MiB) avg;     41MB (    39 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        43MB (    41 MiB) max;     37MB (    35 MiB) avg
Total process virtual memory:   8086MB (  7712 MiB) max;   8072MB (  7698 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
