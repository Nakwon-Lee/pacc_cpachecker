scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.16-rc1/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--fddi--defxx.ko-entry_point_true-unreach-call.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_swg0r5de/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 6566: Function pointer *(ops->alloc) with type void *(*)(struct device *, size_t , dma_addr_t *, gfp_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6598: Function pointer *(ops->free) with type void (*)(struct device *, size_t , void *, dma_addr_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 6456-6457: Function pointer *(ops->map_page) with type dma_addr_t (*)(struct device *, struct page *, unsigned long, size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6490: Function pointer *(ops->unmap_page) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

line 9197: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___0 = ldv_zalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 9199: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___1 = ldv_zalloc(32UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ndo_uninit_3 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ndo_init_3 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function unregister_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function debug_dma_free_coherent to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 6598: Ignoring function call through function pointer *(ops->free): (*(ops->free))(dev, size, vaddr, bus, attrs); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function __release_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iounmap to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_disable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function alloc_fddidev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_enable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __request_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ioremap_nocache to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_set_master to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __pci_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 6490: Ignoring function call through function pointer *(ops->unmap_page): (*(ops->unmap_page))(dev, addr, size, dir, attrs); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function debug_dma_unmap_page to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function consume_skb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dev_kfree_skb_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __netif_schedule to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function request_threaded_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __raw_spin_lock_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function skb_push to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function debug_dma_map_page to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function skb_pull to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_final_state to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function debug_dma_alloc_coherent to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function register_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __netdev_alloc_skb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            835154 (20% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  751185 (90%)
  Because of loop head:            83583 (10%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         386 (0%)
  Times precision was empty:       110099 (13%)
  Times precision was {false}:     2753 (0%)
  Times result was cached:         703152 (84%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      19150 (2%)
  Times result was 'false':        89009 (11%)
Number of strengthen sat checks:   0
Number of coverage checks:         483024
  BDD entailment checks:           170768
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       48
Number of predicates discovered:          183
Number of abstraction locations:          264
Max number of predicates per location:    60
Avg number of predicates per location:    9
Total predicates per abstraction:         3922688
Max number of predicates per abstraction: 60
Avg number of predicates per abstraction: 179.09
Number of irrelevant predicates:          1529794 (39%)
Number of preds handled by boolean abs:   161497 (4%)
  Total number of models for allsat:      719509
  Max number of models for allsat:        1799
  Avg number of models for allsat:        37.57

Time for post operator:                 84.387s
  Time for path formula creation:       82.517s
Time for strengthen operator:            3.595s
Time for prec operator:                655.837s
  Time for abstraction:                644.636s (Max:     2.042s, Count: 835154)
    Boolean abstraction:               431.773s
    Solving time:                       63.245s (Max:     0.241s)
    Model enumeration time:            286.644s
    Time for BDD construction:          78.676s (Max:     0.346s)
Time for merge operator:                 4.941s
Time for coverage check:                 0.808s
  Time for BDD entailment checks:        0.758s
Total time for SMT solver (w/o itp):   349.889s

Number of path formula cache hits:   3945306 (79%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    63.590s

Total number of created targets for pointer analysis: 240974
   Number of created targets for uf: *(void)* is 471
   Number of created targets for uf: *(char)* is 1005
   Number of created targets for uf: *signed_int is 397
   Number of created targets for uf: *(unsigned_char)* is 240
   Number of created targets for uf: *unsigned_long_long_int is 9382
   Number of created targets for uf: *unsigned_int is 374


Number of BDD nodes:                               98735
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                      333836 (count: 585330, min: 0, max: 10626, avg: 0.57)
Time for BDD node cleanup:                             0.203s
Time for BDD garbage collection:                       1.715s (in 324 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  5.932s
  Time for transition matches:                         3.308s
  Time for transition assertions:                      0.005s
  Time for transition actions:                         0.005s
Automaton transfers with branching:                0
Automaton transfer successors:                      4258490 (count: 4258490, min: 1, max: 1, avg: 1.00) [1 x 4258490]

CPA algorithm statistics
------------------------
Number of iterations:            2702646
Max size of waitlist:            76
Average size of waitlist:        19
Number of computed successors:   3054841
Max successors for one state:    2
Number of times merged:          156128
Number of times stopped:         254736
Number of times breaked:         386

Total time for CPA algorithm:       830.280s (Max:   171.970s)
  Time for choose from waitlist:      1.247s
  Time for precision adjustment:    677.201s
  Time for transfer relation:       126.122s
  Time for merge operator:            7.405s
  Time for stop operator:             4.150s
  Time for adding to reached set:     5.531s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   386
Avg. length of target path (in blocks):               81144 (count: 386, min: 36, max: 674, avg: 210.22)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  59.896s
  Counterexample analysis:                            53.273s (Max:     0.930s, Calls: 386)
    Refinement sat check:                             23.496s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.051s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.355s
  Precision update:                                    0.462s
  ARG update:                                          5.313s

Length of refined path (in blocks):                   58829 (count: 386, min: 8, max: 611, avg: 152.41)
Number of affected states:                            30792 (count: 386, min: 0, max: 411, avg: 79.77)
Length (states) of path with itp 'true':              27651 (count: 386, min: 0, max: 440, avg: 71.63)
Length (states) of path with itp non-trivial itp:     30792 (count: 386, min: 0, max: 411, avg: 79.77)
Length (states) of path with itp 'false':               386 (count: 386, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:         331 (count: 386, min: 0, max: 11, avg: 0.86)
Equal non-trivial interpolants along paths:           30142 (count: 386, min: 0, max: 410, avg: 78.09)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                386
Number of successful refinements:     386
Number of failed refinements:         0
Max. size of reached set before ref.: 40245
Max. size of reached set after ref.:  11889
Avg. size of reached set before ref.: 9131.97
Avg. size of reached set after ref.:  2141.68

Total time for CEGAR algorithm:     894.172s
Time for refinements:                63.292s
Average time for refinement:          0.163s
Max time for refinement:              0.971s

Code Coverage
-----------------------------
  Function coverage:      0.559
  Visited lines:          2363
  Total lines:            2993
  Line coverage:          0.790
  Visited conditions:     379
  Total conditions:       538
  Condition coverage:     0.704

CPAchecker general statistics
-----------------------------
Number of program locations:     3905
Number of CFA edges:             4303
Number of relevant variables:    483
Number of functions:             136
Number of loops:                 18
Size of reached set:             12844
  Number of reached locations:   1147 (29%)
    Avg states per location:     11
    Max states per location:     197 (at node N70)
  Number of reached functions:   76 (56%)
  Number of partitions:          12622
    Avg size of partitions:      1
    Max size of partitions:      44 (with key [N2259 (before line 8856), Function dfx_rcv_flush called from node N1149, stack depth 4 [2adf78a0], stack [main, dfx_open, dfx_adap_init, dfx_rcv_flush]])
  Number of target states:       0
  Size of final wait list        50

Time for analysis setup:          6.086s
  Time for loading CPAs:          0.966s
  Time for loading parser:        0.722s
  Time for CFA construction:      4.270s
    Time for parsing file(s):     1.144s
    Time for AST to CFA:          1.616s
    Time for CFA sanity check:    0.330s
    Time for post-processing:     0.972s
      Time for var class.:        0.472s
Time for Analysis:              894.172s
CPU time for analysis:          893.980s
Total time for CPAchecker:      900.270s
Total CPU time for CPAchecker:  900.070s
Time for statistics:              0.376s

Time for Garbage Collector:      29.822s (in 994 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                553MB (   528 MiB) max;    354MB (   338 MiB) avg;    621MB (   592 MiB) peak
Used non-heap memory:             42MB (    40 MiB) max;     41MB (    39 MiB) avg;     42MB (    40 MiB) peak
Allocated heap memory:           771MB (   735 MiB) max;    557MB (   531 MiB) avg
Allocated non-heap memory:        44MB (    42 MiB) max;     43MB (    41 MiB) avg
Total process virtual memory:   8949MB (  8535 MiB) max;   8435MB (  8044 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
