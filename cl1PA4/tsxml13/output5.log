scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.16-rc1/205_9a_array_safes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--usb--rtl8150.ko-entry_point_true-unreach-call.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_hkb07c11/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

line 7290: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp = ldv_zalloc(32UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 7292: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___0 = ldv_zalloc(44UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 7300: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___4 = ldv_zalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ndo_uninit_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ndo_init_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function eth_change_mtu to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function eth_validate_addr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ethtool_op_get_link to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_reset_resume_1 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_warn to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_unlink_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strlcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function capable to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_deregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function alloc_etherdev_mqs to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tasklet_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __raw_spin_lock_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snprintf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_netdev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netif_device_detach to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_kill_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netif_device_attach to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tasklet_kill to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function unregister_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _dev_info to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_alloc_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_submit_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __netif_schedule to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_free_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            23234 (17% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  20389 (88%)
  Because of loop head:            2786 (12%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         59 (0%)
  Times precision was empty:       12430 (53%)
  Times precision was {false}:     1145 (5%)
  Times result was cached:         9132 (39%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      527 (2%)
  Times result was 'false':        1231 (5%)
Number of strengthen sat checks:   0
Number of coverage checks:         23434
  BDD entailment checks:           5128
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       38
Number of predicates discovered:          9
Number of abstraction locations:          75
Max number of predicates per location:    6
Avg number of predicates per location:    1
Total predicates per abstraction:         18652
Max number of predicates per abstraction: 6
Avg number of predicates per abstraction: 11.16
Number of irrelevant predicates:          13445 (72%)
Number of preds handled by boolean abs:   929 (5%)
  Total number of models for allsat:      1196
  Max number of models for allsat:        24
  Avg number of models for allsat:        2.27

Time for post operator:                  6.200s
  Time for path formula creation:        5.966s
Time for strengthen operator:            0.291s
Time for prec operator:                  7.181s
  Time for abstraction:                  6.472s (Max:     0.042s, Count: 23234)
    Boolean abstraction:                 1.347s
    Solving time:                        1.190s (Max:     0.021s)
    Model enumeration time:              0.375s
    Time for BDD construction:           0.175s (Max:     0.014s)
Time for merge operator:                 0.516s
Time for coverage check:                 0.058s
  Time for BDD entailment checks:        0.050s
Total time for SMT solver (w/o itp):     1.565s

Number of path formula cache hits:   122495 (77%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     5.115s

Total number of created targets for pointer analysis: 110
   Number of created targets for uf: *(void)* is 16
   Number of created targets for uf: *unsigned_short_int is 2
   Number of created targets for uf: *signed_int is 17
   Number of created targets for uf: *(unsigned_char)* is 18
   Number of created targets for uf: *unsigned_int is 2


Number of BDD nodes:                               558
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        1200 (count: 26746, min: 0, max: 139, avg: 0.04)
Time for BDD node cleanup:                             0.025s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.608s
  Time for transition matches:                         0.251s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.002s
Automaton transfers with branching:                0
Automaton transfer successors:                       136922 (count: 136922, min: 1, max: 1, avg: 1.00) [1 x 136922]

CPA algorithm statistics
------------------------
Number of iterations:            89665
Max size of waitlist:            127
Average size of waitlist:        54
Number of computed successors:   106421
Max successors for one state:    2
Number of times merged:          9153
Number of times stopped:         11667
Number of times breaked:         59

Total time for CPA algorithm:        21.880s (Max:     1.520s)
  Time for choose from waitlist:      0.212s
  Time for precision adjustment:      8.783s
  Time for transfer relation:         9.806s
  Time for merge operator:            0.869s
  Time for stop operator:             0.415s
  Time for adding to reached set:     0.434s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   59
Avg. length of target path (in blocks):                2961 (count: 59, min: 26, max: 66, avg: 50.19)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   2.171s
  Counterexample analysis:                             1.633s (Max:     0.045s, Calls: 59)
    Refinement sat check:                              1.052s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.003s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.056s
  Precision update:                                    0.066s
  ARG update:                                          0.357s

Length of refined path (in blocks):                    2238 (count: 59, min: 18, max: 55, avg: 37.93)
Number of affected states:                              543 (count: 59, min: 1, max: 40, avg: 9.20)
Length (states) of path with itp 'true':               1636 (count: 59, min: 14, max: 49, avg: 27.73)
Length (states) of path with itp non-trivial itp:       543 (count: 59, min: 1, max: 40, avg: 9.20)
Length (states) of path with itp 'false':                59 (count: 59, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:          10 (count: 59, min: 0, max: 1, avg: 0.17)
Equal non-trivial interpolants along paths:             474 (count: 59, min: 0, max: 38, avg: 8.03)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                59
Number of successful refinements:     59
Number of failed refinements:         0
Max. size of reached set before ref.: 3318
Max. size of reached set after ref.:  1368
Avg. size of reached set before ref.: 2058.00
Avg. size of reached set after ref.:  494.27

Total time for CEGAR algorithm:      24.453s
Time for refinements:                 2.539s
Average time for refinement:          0.043s
Max time for refinement:              0.104s

Code Coverage
-----------------------------
  Function coverage:      0.259
  Visited lines:          1241
  Total lines:            2175
  Line coverage:          0.571
  Visited conditions:     152
  Total conditions:       404
  Condition coverage:     0.376

CPAchecker general statistics
-----------------------------
Number of program locations:     2926
Number of CFA edges:             3205
Number of relevant variables:    336
Number of functions:             116
Number of loops:                 12
Size of reached set:             1264
  Number of reached locations:   352 (12%)
    Avg states per location:     3
    Max states per location:     20 (at node N126)
  Number of reached functions:   30 (26%)
  Number of partitions:          1261
    Avg size of partitions:      1
    Max size of partitions:      4 (with key [N1474 (before line 7314), Function main called from node N1427, stack depth 1 [31e32ea2], stack [main]])
  Number of target states:       0
  Size of final wait list        22

Time for analysis setup:          5.815s
  Time for loading CPAs:          0.980s
  Time for loading parser:        0.713s
  Time for CFA construction:      3.971s
    Time for parsing file(s):     1.123s
    Time for AST to CFA:          1.450s
    Time for CFA sanity check:    0.210s
    Time for post-processing:     0.957s
      Time for var class.:        0.418s
Time for Analysis:               24.453s
CPU time for analysis:           24.460s
Total time for CPAchecker:       30.276s
Total CPU time for CPAchecker:   30.250s
Time for statistics:              0.123s

Time for Garbage Collector:       0.578s (in 47 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 77MB (    74 MiB) max;     50MB (    47 MiB) avg;     83MB (    79 MiB) peak
Used non-heap memory:             40MB (    38 MiB) max;     35MB (    33 MiB) avg;     40MB (    38 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        42MB (    40 MiB) max;     37MB (    35 MiB) avg
Total process virtual memory:   8086MB (  7712 MiB) max;   8072MB (  7698 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
