scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.16-rc1/205_9a_array_safes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--usb--rtl8150.ko-entry_point_true-unreach-call.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_nxcy_0su/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

line 7290: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp = ldv_zalloc(32UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 7292: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___0 = ldv_zalloc(44UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 7300: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___4 = ldv_zalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ndo_uninit_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ndo_init_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function eth_change_mtu to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function eth_validate_addr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ethtool_op_get_link to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_reset_resume_1 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_deregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_warn to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_unlink_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function capable to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strlcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snprintf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netif_device_attach to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netif_device_detach to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function alloc_etherdev_mqs to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _dev_info to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_alloc_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_submit_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __printk_ratelimit to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function skb_put to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __tasklet_schedule to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_kill_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_netdev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __netif_schedule to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netif_carrier_on to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netif_carrier_off to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tasklet_kill to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function unregister_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tasklet_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __raw_spin_lock_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_free_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function register_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            2139822 (21% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  1686007 (79%)
  Because of loop head:            452523 (21%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         1292 (0%)
  Times precision was empty:       602696 (28%)
  Times precision was {false}:     1512 (0%)
  Times result was cached:         1530428 (72%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      5186 (0%)
  Times result was 'false':        131079 (6%)
Number of strengthen sat checks:   0
Number of coverage checks:         2526620
  BDD entailment checks:           1838062
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       38
Number of predicates discovered:          41
Number of abstraction locations:          110
Max number of predicates per location:    16
Avg number of predicates per location:    4
Total predicates per abstraction:         10998590
Max number of predicates per abstraction: 16
Avg number of predicates per abstraction: 1642.07
Number of irrelevant predicates:          3346329 (30%)
Number of preds handled by boolean abs:   23288 (0%)
  Total number of models for allsat:      19234
  Max number of models for allsat:        96
  Avg number of models for allsat:        3.71

Time for post operator:                 58.250s
  Time for path formula creation:       54.583s
Time for strengthen operator:            7.698s
Time for prec operator:                484.847s
  Time for abstraction:                460.869s (Max:     0.063s, Count: 2139822)
    Boolean abstraction:                 9.675s
    Solving time:                        6.693s (Max:     0.025s)
    Model enumeration time:              2.441s
    Time for BDD construction:           0.508s (Max:     0.016s)
Time for merge operator:                 3.152s
Time for coverage check:                 1.701s
  Time for BDD entailment checks:        1.338s
Total time for SMT solver (w/o itp):     9.134s

Number of path formula cache hits:   12163783 (99%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    15.778s

Total number of created targets for pointer analysis: 24466
   Number of created targets for uf: *(void)* is 3446
   Number of created targets for uf: *unsigned_short_int is 59
   Number of created targets for uf: *signed_int is 67
   Number of created targets for uf: *unsigned_char is 312
   Number of created targets for uf: *(unsigned_char)* is 131
   Number of created targets for uf: *(struct_device)* is 148
   Number of created targets for uf: *unsigned_int is 120


Number of BDD nodes:                               13371
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       16490 (count: 2489585, min: 0, max: 1377, avg: 0.01)
Time for BDD node cleanup:                             0.376s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                 11.773s
  Time for transition matches:                         6.511s
  Time for transition assertions:                      0.010s
  Time for transition actions:                         0.014s
Automaton transfers with branching:                0
Automaton transfer successors:                     10010849 (count: 10010849, min: 1, max: 1, avg: 1.00) [1 x 10010849]

CPA algorithm statistics
------------------------
Number of iterations:            7270577
Max size of waitlist:            59
Average size of waitlist:        31
Number of computed successors:   8169223
Max successors for one state:    2
Number of times merged:          344279
Number of times stopped:         743844
Number of times breaked:         1292

Total time for CPA algorithm:       725.445s (Max:     3.046s)
  Time for choose from waitlist:      2.628s
  Time for precision adjustment:    533.546s
  Time for transfer relation:       141.930s
  Time for merge operator:            8.446s
  Time for stop operator:            10.208s
  Time for adding to reached set:    10.999s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   1292
Avg. length of target path (in blocks):              141031 (count: 1292, min: 26, max: 112, avg: 109.16)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                 162.857s
  Counterexample analysis:                           149.418s (Max:     0.234s, Calls: 1292)
    Refinement sat check:                             71.327s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.105s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.694s
  Precision update:                                    0.725s
  ARG update:                                         11.181s

Length of refined path (in blocks):                  121839 (count: 1292, min: 18, max: 102, avg: 94.30)
Number of affected states:                            54962 (count: 1292, min: 1, max: 87, avg: 42.54)
Length (states) of path with itp 'true':              65585 (count: 1292, min: 14, max: 91, avg: 50.76)
Length (states) of path with itp non-trivial itp:     54962 (count: 1292, min: 1, max: 87, avg: 42.54)
Length (states) of path with itp 'false':              1292 (count: 1292, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:       10947 (count: 1292, min: 0, max: 9, avg: 8.47)
Equal non-trivial interpolants along paths:           42723 (count: 1292, min: 0, max: 85, avg: 33.07)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                1292
Number of successful refinements:     1292
Number of failed refinements:         0
Max. size of reached set before ref.: 13535
Max. size of reached set after ref.:  6174
Avg. size of reached set before ref.: 6414.55
Avg. size of reached set after ref.:  770.18

Total time for CEGAR algorithm:     894.870s
Time for refinements:               168.776s
Average time for refinement:          0.130s
Max time for refinement:              0.426s

Code Coverage
-----------------------------
  Function coverage:      0.371
  Visited lines:          1395
  Total lines:            2175
  Line coverage:          0.641
  Visited conditions:     200
  Total conditions:       404
  Condition coverage:     0.495

CPAchecker general statistics
-----------------------------
Number of program locations:     2926
Number of CFA edges:             3205
Number of relevant variables:    336
Number of functions:             116
Number of loops:                 12
Size of reached set:             1781
  Number of reached locations:   548 (19%)
    Avg states per location:     3
    Max states per location:     33 (at node N907)
  Number of reached functions:   43 (37%)
  Number of partitions:          1717
    Avg size of partitions:      1
    Max size of partitions:      19 (with key [N920 (before line 6675), Function fill_skb_pool called from node N1340, stack depth 3 [d449c4f], stack [main, rtl8150_probe, fill_skb_pool]])
  Number of target states:       0
  Size of final wait list        14

Time for analysis setup:          5.395s
  Time for loading CPAs:          0.925s
  Time for loading parser:        0.671s
  Time for CFA construction:      3.693s
    Time for parsing file(s):     1.064s
    Time for AST to CFA:          1.314s
    Time for CFA sanity check:    0.222s
    Time for post-processing:     0.882s
      Time for var class.:        0.397s
Time for Analysis:              894.870s
CPU time for analysis:          894.810s
Total time for CPAchecker:      900.270s
Total CPU time for CPAchecker:  900.200s
Time for statistics:              0.117s

Time for Garbage Collector:      29.627s (in 3511 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                154MB (   147 MiB) max;    110MB (   105 MiB) avg;    169MB (   161 MiB) peak
Used non-heap memory:             41MB (    39 MiB) max;     40MB (    38 MiB) avg;     41MB (    39 MiB) peak
Allocated heap memory:           200MB (   190 MiB) max;    193MB (   184 MiB) avg
Allocated non-heap memory:        43MB (    41 MiB) max;     43MB (    41 MiB) avg
Total process virtual memory:   8154MB (  7776 MiB) max;   8148MB (  7770 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
