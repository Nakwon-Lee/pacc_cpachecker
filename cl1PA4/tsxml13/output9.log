scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.16-rc1/205_9a_array_safes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--usb--rtl8150.ko-entry_point_true-unreach-call.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_w5q2ernw/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

line 7290: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp = ldv_zalloc(32UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 7292: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___0 = ldv_zalloc(44UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 7300: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___4 = ldv_zalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ndo_uninit_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ndo_init_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function eth_change_mtu to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function eth_validate_addr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ethtool_op_get_link to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_reset_resume_1 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function alloc_etherdev_mqs to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_deregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tasklet_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __raw_spin_lock_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_alloc_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_free_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_warn to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_unlink_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strlcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snprintf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function capable to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_submit_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netif_device_detach to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_kill_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netif_carrier_off to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netif_carrier_on to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_netdev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _dev_info to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __netif_schedule to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function register_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            26766 (21% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  24787 (93%)
  Because of loop head:            1958 (7%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         21 (0%)
  Times precision was empty:       22786 (85%)
  Times precision was {false}:     716 (3%)
  Times result was cached:         3076 (11%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      188 (1%)
  Times result was 'false':        379 (1%)
Number of strengthen sat checks:   0
Number of coverage checks:         14646
  BDD entailment checks:           3850
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       38
Number of predicates discovered:          8
Number of abstraction locations:          55
Max number of predicates per location:    5
Avg number of predicates per location:    1
Total predicates per abstraction:         5763
Max number of predicates per abstraction: 5
Avg number of predicates per abstraction: 6.38
Number of irrelevant predicates:          4710 (82%)
Number of preds handled by boolean abs:   300 (5%)
  Total number of models for allsat:      376
  Max number of models for allsat:        16
  Avg number of models for allsat:        2.00

Time for post operator:                  9.157s
  Time for path formula creation:        8.916s
Time for strengthen operator:            0.264s
Time for prec operator:                  4.287s
  Time for abstraction:                  3.515s (Max:     0.032s, Count: 26766)
    Boolean abstraction:                 0.615s
    Solving time:                        0.617s (Max:     0.016s)
    Model enumeration time:              0.130s
    Time for BDD construction:           0.099s (Max:     0.013s)
Time for merge operator:                 0.562s
Time for coverage check:                 0.084s
  Time for BDD entailment checks:        0.065s
Total time for SMT solver (w/o itp):     0.747s

Number of path formula cache hits:   84500 (59%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     8.260s

Total number of created targets for pointer analysis: 6153
   Number of created targets for uf: *(void)* is 913
   Number of created targets for uf: *unsigned_short_int is 45
   Number of created targets for uf: *signed_int is 14
   Number of created targets for uf: *unsigned_char is 88
   Number of created targets for uf: *(unsigned_char)* is 30
   Number of created targets for uf: *(struct_device)* is 21


Number of BDD nodes:                               279
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         456 (count: 31489, min: 0, max: 130, avg: 0.01)
Time for BDD node cleanup:                             0.015s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.708s
  Time for transition matches:                         0.349s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.000s
Automaton transfers with branching:                0
Automaton transfer successors:                       126293 (count: 126293, min: 1, max: 1, avg: 1.00) [1 x 126293]

CPA algorithm statistics
------------------------
Number of iterations:            86993
Max size of waitlist:            114
Average size of waitlist:        56
Number of computed successors:   96496
Max successors for one state:    2
Number of times merged:          5398
Number of times stopped:         8471
Number of times breaked:         21

Total time for CPA algorithm:        22.781s (Max:     2.972s)
  Time for choose from waitlist:      0.254s
  Time for precision adjustment:      6.041s
  Time for transfer relation:        13.377s
  Time for merge operator:            0.860s
  Time for stop operator:             0.408s
  Time for adding to reached set:     0.540s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   21
Avg. length of target path (in blocks):                1039 (count: 21, min: 30, max: 71, avg: 49.48)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   1.153s
  Counterexample analysis:                             0.638s (Max:     0.041s, Calls: 21)
    Refinement sat check:                              0.412s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.056s
  Precision update:                                    0.033s
  ARG update:                                          0.383s

Length of refined path (in blocks):                     592 (count: 21, min: 18, max: 59, avg: 28.19)
Number of affected states:                              152 (count: 21, min: 1, max: 33, avg: 7.24)
Length (states) of path with itp 'true':                419 (count: 21, min: 14, max: 38, avg: 19.95)
Length (states) of path with itp non-trivial itp:       152 (count: 21, min: 1, max: 33, avg: 7.24)
Length (states) of path with itp 'false':                21 (count: 21, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           1 (count: 21, min: 0, max: 1, avg: 0.05)
Equal non-trivial interpolants along paths:             130 (count: 21, min: 0, max: 32, avg: 6.19)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                21
Number of successful refinements:     21
Number of failed refinements:         0
Max. size of reached set before ref.: 6668
Max. size of reached set after ref.:  2927
Avg. size of reached set before ref.: 4377.33
Avg. size of reached set after ref.:  337.43

Total time for CEGAR algorithm:      24.155s
Time for refinements:                 1.358s
Average time for refinement:          0.064s
Max time for refinement:              0.114s

Code Coverage
-----------------------------
  Function coverage:      0.569
  Visited lines:          1623
  Total lines:            2175
  Line coverage:          0.746
  Visited conditions:     240
  Total conditions:       404
  Condition coverage:     0.594

CPAchecker general statistics
-----------------------------
Number of program locations:     2926
Number of CFA edges:             3205
Number of relevant variables:    336
Number of functions:             116
Number of loops:                 12
Size of reached set:             2808
  Number of reached locations:   733 (25%)
    Avg states per location:     3
    Max states per location:     39 (at node N161)
  Number of reached functions:   66 (57%)
  Number of partitions:          2801
    Avg size of partitions:      1
    Max size of partitions:      4 (with key [N1474 (before line 7314), Function main called from node N1427, stack depth 1 [31e32ea2], stack [main]])
  Number of target states:       0
  Size of final wait list        73

Time for analysis setup:          5.588s
  Time for loading CPAs:          0.939s
  Time for loading parser:        0.797s
  Time for CFA construction:      3.721s
    Time for parsing file(s):     1.158s
    Time for AST to CFA:          1.259s
    Time for CFA sanity check:    0.189s
    Time for post-processing:     0.897s
      Time for var class.:        0.407s
Time for Analysis:               24.155s
CPU time for analysis:           24.150s
Total time for CPAchecker:       29.747s
Total CPU time for CPAchecker:   29.730s
Time for statistics:              0.161s

Time for Garbage Collector:       0.786s (in 43 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 91MB (    87 MiB) max;     53MB (    50 MiB) avg;     96MB (    92 MiB) peak
Used non-heap memory:             41MB (    39 MiB) max;     35MB (    33 MiB) avg;     41MB (    39 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        43MB (    41 MiB) max;     37MB (    35 MiB) avg
Total process virtual memory:   8087MB (  7712 MiB) max;   8072MB (  7698 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
