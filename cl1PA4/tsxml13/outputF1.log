scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.16-rc1/205_9a_array_safes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--usb--rtl8150.ko-entry_point_true-unreach-call.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_ki8uc7mv/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

line 7290: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp = ldv_zalloc(32UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 7292: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___0 = ldv_zalloc(44UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 7300: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___4 = ldv_zalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ndo_uninit_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ndo_init_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function eth_change_mtu to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function eth_validate_addr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ethtool_op_get_link to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_reset_resume_1 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_deregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_warn to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_unlink_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strlcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snprintf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netif_device_detach to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_kill_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netif_device_attach to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _dev_info to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tasklet_kill to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function unregister_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_free_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_netdev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_alloc_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __netif_schedule to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_submit_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function capable to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netif_carrier_off to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netif_carrier_on to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function alloc_etherdev_mqs to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tasklet_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __raw_spin_lock_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function register_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __printk_ratelimit to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function skb_put to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __tasklet_schedule to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            2499780 (22% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  2051676 (82%)
  Because of loop head:            445977 (18%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         2127 (0%)
  Times precision was empty:       1273134 (51%)
  Times precision was {false}:     975 (0%)
  Times result was cached:         1223993 (49%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      1678 (0%)
  Times result was 'false':        92699 (4%)
Number of strengthen sat checks:   0
Number of coverage checks:         2212402
  BDD entailment checks:           1439054
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       38
Number of predicates discovered:          43
Number of abstraction locations:          99
Max number of predicates per location:    16
Avg number of predicates per location:    4
Total predicates per abstraction:         8100795
Max number of predicates per abstraction: 16
Avg number of predicates per abstraction: 3053.45
Number of irrelevant predicates:          3113273 (38%)
Number of preds handled by boolean abs:   6806 (0%)
  Total number of models for allsat:      6473
  Max number of models for allsat:        576
  Avg number of models for allsat:        3.86

Time for post operator:                 52.371s
  Time for path formula creation:       47.751s
Time for strengthen operator:            8.788s
Time for prec operator:                365.218s
  Time for abstraction:                340.493s (Max:     0.334s, Count: 2499780)
    Boolean abstraction:                 3.604s
    Solving time:                        2.120s (Max:     0.017s)
    Model enumeration time:              1.297s
    Time for BDD construction:           0.317s (Max:     0.016s)
Time for merge operator:                 2.595s
Time for coverage check:                 1.413s
  Time for BDD entailment checks:        1.106s
Total time for SMT solver (w/o itp):     3.417s

Number of path formula cache hits:   14165714 (99%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    10.317s

Total number of created targets for pointer analysis: 12756
   Number of created targets for uf: *(void)* is 2085
   Number of created targets for uf: *unsigned_short_int is 41
   Number of created targets for uf: *signed_int is 4
   Number of created targets for uf: *unsigned_char is 178
   Number of created targets for uf: *(unsigned_char)* is 66
   Number of created targets for uf: *(struct_device)* is 70
   Number of created targets for uf: *unsigned_int is 9


Number of BDD nodes:                               15532
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        7335 (count: 2728980, min: 0, max: 877, avg: 0.00)
Time for BDD node cleanup:                             0.380s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                 12.926s
  Time for transition matches:                         6.829s
  Time for transition assertions:                      0.002s
  Time for transition actions:                         0.016s
Automaton transfers with branching:                0
Automaton transfer successors:                     11481808 (count: 11481808, min: 1, max: 1, avg: 1.00) [1 x 11481808]

CPA algorithm statistics
------------------------
Number of iterations:            8240930
Max size of waitlist:            62
Average size of waitlist:        41
Number of computed successors:   9212881
Max successors for one state:    2
Number of times merged:          386674
Number of times stopped:         856031
Number of times breaked:         2127

Total time for CPA algorithm:       617.911s (Max:     2.954s)
  Time for choose from waitlist:      3.043s
  Time for precision adjustment:    417.575s
  Time for transfer relation:       147.274s
  Time for merge operator:            8.400s
  Time for stop operator:            10.369s
  Time for adding to reached set:    12.516s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   2127
Avg. length of target path (in blocks):              236073 (count: 2127, min: 26, max: 112, avg: 110.99)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                 265.006s
  Counterexample analysis:                           248.476s (Max:     0.251s, Calls: 2127)
    Refinement sat check:                            118.039s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.140s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.995s
  Precision update:                                    0.932s
  ARG update:                                         13.322s

Length of refined path (in blocks):                  204218 (count: 2127, min: 18, max: 97, avg: 96.01)
Number of affected states:                            92440 (count: 2127, min: 1, max: 73, avg: 43.46)
Length (states) of path with itp 'true':             109651 (count: 2127, min: 0, max: 91, avg: 51.55)
Length (states) of path with itp non-trivial itp:     92440 (count: 2127, min: 1, max: 73, avg: 43.46)
Length (states) of path with itp 'false':              2127 (count: 2127, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:       18806 (count: 2127, min: 0, max: 9, avg: 8.84)
Equal non-trivial interpolants along paths:           71507 (count: 2127, min: 0, max: 70, avg: 33.62)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                2127
Number of successful refinements:     2127
Number of failed refinements:         0
Max. size of reached set before ref.: 8853
Max. size of reached set after ref.:  3971
Avg. size of reached set before ref.: 5876.04
Avg. size of reached set after ref.:  1993.12

Total time for CEGAR algorithm:     894.855s
Time for refinements:               274.366s
Average time for refinement:          0.128s
Max time for refinement:              0.274s

Code Coverage
-----------------------------
  Function coverage:      0.707
  Visited lines:          1839
  Total lines:            2175
  Line coverage:          0.846
  Visited conditions:     302
  Total conditions:       404
  Condition coverage:     0.748

CPAchecker general statistics
-----------------------------
Number of program locations:     2926
Number of CFA edges:             3205
Number of relevant variables:    336
Number of functions:             116
Number of loops:                 12
Size of reached set:             5190
  Number of reached locations:   987 (34%)
    Avg states per location:     5
    Max states per location:     91 (at node N326)
  Number of reached functions:   82 (71%)
  Number of partitions:          5134
    Avg size of partitions:      1
    Max size of partitions:      8 (with key [N1474 (before line 7314), Function main called from node N1427, stack depth 1 [31e32ea2], stack [main]])
  Number of target states:       0
  Size of final wait list        38

Time for analysis setup:          5.424s
  Time for loading CPAs:          0.877s
  Time for loading parser:        0.680s
  Time for CFA construction:      3.757s
    Time for parsing file(s):     1.081s
    Time for AST to CFA:          1.356s
    Time for CFA sanity check:    0.208s
    Time for post-processing:     0.896s
      Time for var class.:        0.387s
Time for Analysis:              894.855s
CPU time for analysis:          894.790s
Total time for CPAchecker:      900.285s
Total CPU time for CPAchecker:  900.220s
Time for statistics:              0.197s

Time for Garbage Collector:      30.115s (in 4367 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                124MB (   118 MiB) max;     77MB (    73 MiB) avg;    130MB (   124 MiB) peak
Used non-heap memory:             40MB (    38 MiB) max;     39MB (    38 MiB) avg;     40MB (    39 MiB) peak
Allocated heap memory:           135MB (   129 MiB) max;    135MB (   129 MiB) avg
Allocated non-heap memory:        42MB (    40 MiB) max;     42MB (    40 MiB) avg
Total process virtual memory:   8087MB (  7712 MiB) max;   8085MB (  7710 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
