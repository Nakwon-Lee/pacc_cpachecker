scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.16-rc1/205_9a_array_safes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--usb--rtl8150.ko-entry_point_true-unreach-call.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_tw505o_5/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

line 7290: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp = ldv_zalloc(32UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 7292: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___0 = ldv_zalloc(44UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 7300: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___4 = ldv_zalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ndo_uninit_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ndo_init_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function eth_change_mtu to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function eth_validate_addr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ethtool_op_get_link to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_reset_resume_1 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function alloc_etherdev_mqs to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tasklet_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __raw_spin_lock_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_alloc_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_free_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function register_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _dev_info to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netif_device_detach to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_kill_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tasklet_kill to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function unregister_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netif_device_attach to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_submit_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netif_carrier_off to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_netdev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netif_carrier_on to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __printk_ratelimit to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_warn to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function skb_put to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __tasklet_schedule to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_deregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strlcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snprintf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __netif_schedule to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function capable to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_unlink_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            481035 (19% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  357036 (74%)
  Because of loop head:            123739 (26%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         260 (0%)
  Times precision was empty:       30570 (6%)
  Times precision was {false}:     1409 (0%)
  Times result was cached:         393222 (82%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      55834 (12%)
  Times result was 'false':        41166 (9%)
Number of strengthen sat checks:   0
Number of coverage checks:         743852
  BDD entailment checks:           492186
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       38
Number of predicates discovered:          111
Number of abstraction locations:          276
Max number of predicates per location:    61
Avg number of predicates per location:    6
Total predicates per abstraction:         3729443
Max number of predicates per abstraction: 60
Avg number of predicates per abstraction: 65.15
Number of irrelevant predicates:          977944 (26%)
Number of preds handled by boolean abs:   757192 (20%)
  Total number of models for allsat:      1585612
  Max number of models for allsat:        1440
  Avg number of models for allsat:        28.40

Time for post operator:                 72.279s
  Time for path formula creation:       70.665s
Time for strengthen operator:            2.584s
Time for prec operator:                711.152s
  Time for abstraction:                703.823s (Max:     1.884s, Count: 481035)
    Boolean abstraction:               455.718s
    Solving time:                      124.881s (Max:     0.038s)
    Model enumeration time:            205.177s
    Time for BDD construction:         111.119s (Max:     1.864s)
Time for merge operator:                 5.102s
Time for coverage check:                 1.079s
  Time for BDD entailment checks:        0.937s
Total time for SMT solver (w/o itp):   330.059s

Number of path formula cache hits:   1492441 (54%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    62.052s

Total number of created targets for pointer analysis: 204403
   Number of created targets for uf: *(void)* is 36026
   Number of created targets for uf: *unsigned_short_int is 38
   Number of created targets for uf: *signed_int is 674
   Number of created targets for uf: *unsigned_char is 53
   Number of created targets for uf: *(unsigned_char)* is 883
   Number of created targets for uf: *(struct_device)* is 2763
   Number of created targets for uf: *unsigned_int is 981


Number of BDD nodes:                               163495
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                      281391 (count: 947045, min: 0, max: 3066, avg: 0.30)
Time for BDD node cleanup:                             0.246s
Time for BDD garbage collection:                       0.184s (in 11 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  4.161s
  Time for transition matches:                         1.991s
  Time for transition assertions:                      0.003s
  Time for transition actions:                         0.005s
Automaton transfers with branching:                0
Automaton transfer successors:                      2505686 (count: 2505686, min: 1, max: 1, avg: 1.00) [1 x 2505686]

CPA algorithm statistics
------------------------
Number of iterations:            1832556
Max size of waitlist:            607
Average size of waitlist:        176
Number of computed successors:   2132231
Max successors for one state:    2
Number of times merged:          125833
Number of times stopped:         217121
Number of times breaked:         260

Total time for CPA algorithm:       854.009s (Max:    31.202s)
  Time for choose from waitlist:      1.212s
  Time for precision adjustment:    728.227s
  Time for transfer relation:       101.169s
  Time for merge operator:            7.639s
  Time for stop operator:             4.147s
  Time for adding to reached set:     4.911s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   260
Avg. length of target path (in blocks):               45550 (count: 260, min: 26, max: 418, avg: 175.19)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  37.579s
  Counterexample analysis:                            33.474s (Max:     0.763s, Calls: 260)
    Refinement sat check:                             11.128s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.034s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.213s
  Precision update:                                    0.371s
  ARG update:                                          3.164s

Length of refined path (in blocks):                   22009 (count: 260, min: 18, max: 294, avg: 84.65)
Number of affected states:                            12667 (count: 260, min: 0, max: 219, avg: 48.72)
Length (states) of path with itp 'true':               9082 (count: 260, min: 0, max: 187, avg: 34.93)
Length (states) of path with itp non-trivial itp:     12667 (count: 260, min: 0, max: 219, avg: 48.72)
Length (states) of path with itp 'false':               260 (count: 260, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:        1108 (count: 260, min: 0, max: 42, avg: 4.26)
Equal non-trivial interpolants along paths:           11300 (count: 260, min: 0, max: 183, avg: 43.46)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                260
Number of successful refinements:     260
Number of failed refinements:         0
Max. size of reached set before ref.: 26182
Max. size of reached set after ref.:  17258
Avg. size of reached set before ref.: 11033.85
Avg. size of reached set after ref.:  3895.15

Total time for CEGAR algorithm:     894.634s
Time for refinements:                39.951s
Average time for refinement:          0.153s
Max time for refinement:              0.800s

Code Coverage
-----------------------------
  Function coverage:      0.707
  Visited lines:          1935
  Total lines:            2175
  Line coverage:          0.890
  Visited conditions:     346
  Total conditions:       404
  Condition coverage:     0.856

CPAchecker general statistics
-----------------------------
Number of program locations:     2926
Number of CFA edges:             3205
Number of relevant variables:    336
Number of functions:             116
Number of loops:                 12
Size of reached set:             17881
  Number of reached locations:   1083 (37%)
    Avg states per location:     16
    Max states per location:     350 (at node N326)
  Number of reached functions:   82 (71%)
  Number of partitions:          17703
    Avg size of partitions:      1
    Max size of partitions:      35 (with key [N540 (before line 6256), Function rtl8150_reset called from node N1334, stack depth 3 [2385cb60], stack [main, rtl8150_probe, rtl8150_reset]])
  Number of target states:       0
  Size of final wait list        64

Time for analysis setup:          5.617s
  Time for loading CPAs:          1.045s
  Time for loading parser:        0.770s
  Time for CFA construction:      3.643s
    Time for parsing file(s):     1.066s
    Time for AST to CFA:          1.302s
    Time for CFA sanity check:    0.217s
    Time for post-processing:     0.874s
      Time for var class.:        0.384s
Time for Analysis:              894.634s
CPU time for analysis:          894.550s
Total time for CPAchecker:      900.255s
Total CPU time for CPAchecker:  900.160s
Time for statistics:              0.394s

Time for Garbage Collector:      25.899s (in 766 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                644MB (   614 MiB) max;    382MB (   364 MiB) avg;    654MB (   623 MiB) peak
Used non-heap memory:             41MB (    39 MiB) max;     40MB (    38 MiB) avg;     41MB (    40 MiB) peak
Allocated heap memory:           821MB (   783 MiB) max;    604MB (   576 MiB) avg
Allocated non-heap memory:        44MB (    42 MiB) max;     44MB (    42 MiB) avg
Total process virtual memory:  12424MB ( 11849 MiB) max;   9706MB (  9257 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
