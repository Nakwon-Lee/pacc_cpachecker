scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.16-rc1/205_9a_array_safes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--usb--rtl8150.ko-entry_point_true-unreach-call.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_bkurzy7g/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

line 7290: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp = ldv_zalloc(32UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 7292: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___0 = ldv_zalloc(44UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 7300: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___4 = ldv_zalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ndo_uninit_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ndo_init_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function eth_change_mtu to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function eth_validate_addr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ethtool_op_get_link to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_reset_resume_1 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_warn to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_unlink_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strlcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function capable to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_deregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function alloc_etherdev_mqs to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tasklet_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __raw_spin_lock_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snprintf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_netdev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netif_device_detach to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_kill_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netif_device_attach to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tasklet_kill to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function unregister_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _dev_info to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_alloc_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_submit_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __netif_schedule to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_free_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function register_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            706518 (19% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  630396 (89%)
  Because of loop head:            75682 (11%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         440 (0%)
  Times precision was empty:       130634 (18%)
  Times precision was {false}:     2875 (0%)
  Times result was cached:         544697 (77%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      28312 (4%)
  Times result was 'false':        45481 (6%)
Number of strengthen sat checks:   0
Number of coverage checks:         1161242
  BDD entailment checks:           753710
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       38
Number of predicates discovered:          116
Number of abstraction locations:          142
Max number of predicates per location:    93
Avg number of predicates per location:    5
Total predicates per abstraction:         5054742
Max number of predicates per abstraction: 93
Avg number of predicates per abstraction: 162.08
Number of irrelevant predicates:          1724822 (34%)
Number of preds handled by boolean abs:   1034280 (20%)
  Total number of models for allsat:      736763
  Max number of models for allsat:        256
  Avg number of models for allsat:        26.02

Time for post operator:                 97.896s
  Time for path formula creation:       95.980s
Time for strengthen operator:            4.359s
Time for prec operator:                570.444s
  Time for abstraction:                560.258s (Max:     2.007s, Count: 706518)
    Boolean abstraction:               314.813s
    Solving time:                      108.622s (Max:     0.048s)
    Model enumeration time:             97.582s
    Time for BDD construction:          92.011s (Max:     1.998s)
Time for merge operator:                 7.141s
Time for coverage check:                 2.827s
  Time for BDD entailment checks:        2.649s
Total time for SMT solver (w/o itp):   206.217s

Number of path formula cache hits:   2084739 (50%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    83.205s

Total number of created targets for pointer analysis: 119515
   Number of created targets for uf: *(void)* is 19889
   Number of created targets for uf: *unsigned_short_int is 2
   Number of created targets for uf: *signed_int is 1125
   Number of created targets for uf: *unsigned_char is 2720
   Number of created targets for uf: *(unsigned_char)* is 1221
   Number of created targets for uf: *(struct_device)* is 5
   Number of created targets for uf: *unsigned_int is 1987


Number of BDD nodes:                               261838
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                      676767 (count: 1323695, min: 0, max: 4714, avg: 0.51)
Time for BDD node cleanup:                             0.316s
Time for BDD garbage collection:                       0.763s (in 134 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  5.962s
  Time for transition matches:                         3.525s
  Time for transition assertions:                      0.003s
  Time for transition actions:                         0.005s
Automaton transfers with branching:                0
Automaton transfer successors:                      3768521 (count: 3768521, min: 1, max: 1, avg: 1.00) [1 x 3768521]

CPA algorithm statistics
------------------------
Number of iterations:            2514047
Max size of waitlist:            259
Average size of waitlist:        104
Number of computed successors:   2902542
Max successors for one state:    2
Number of times merged:          203766
Number of times stopped:         277669
Number of times breaked:         440

Total time for CPA algorithm:       764.043s (Max:    24.269s)
  Time for choose from waitlist:      1.329s
  Time for precision adjustment:    591.259s
  Time for transfer relation:       140.071s
  Time for merge operator:           11.058s
  Time for stop operator:             6.868s
  Time for adding to reached set:     5.003s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   440
Avg. length of target path (in blocks):               74838 (count: 440, min: 26, max: 543, avg: 170.09)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                 127.079s
  Counterexample analysis:                           121.325s (Max:     1.962s, Calls: 440)
    Refinement sat check:                             11.128s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.049s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.578s
  Precision update:                                    0.316s
  ARG update:                                          4.378s

Length of refined path (in blocks):                   61325 (count: 440, min: 18, max: 494, avg: 139.38)
Number of affected states:                            42222 (count: 440, min: 0, max: 444, avg: 95.96)
Length (states) of path with itp 'true':              18663 (count: 440, min: 14, max: 70, avg: 42.42)
Length (states) of path with itp non-trivial itp:     42222 (count: 440, min: 0, max: 444, avg: 95.96)
Length (states) of path with itp 'false':               440 (count: 440, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:        7747 (count: 440, min: 0, max: 87, avg: 17.61)
Equal non-trivial interpolants along paths:           34037 (count: 440, min: 0, max: 356, avg: 77.36)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                440
Number of successful refinements:     440
Number of failed refinements:         0
Max. size of reached set before ref.: 13997
Max. size of reached set after ref.:  8121
Avg. size of reached set before ref.: 8287.66
Avg. size of reached set after ref.:  2433.80

Total time for CEGAR algorithm:     894.561s
Time for refinements:               129.811s
Average time for refinement:          0.295s
Max time for refinement:              1.996s

Code Coverage
-----------------------------
  Function coverage:      0.310
  Visited lines:          1324
  Total lines:            2175
  Line coverage:          0.609
  Visited conditions:     180
  Total conditions:       404
  Condition coverage:     0.446

CPAchecker general statistics
-----------------------------
Number of program locations:     2926
Number of CFA edges:             3205
Number of relevant variables:    336
Number of functions:             116
Number of loops:                 12
Size of reached set:             3695
  Number of reached locations:   464 (16%)
    Avg states per location:     7
    Max states per location:     112 (at node N327)
  Number of reached functions:   36 (31%)
  Number of partitions:          3493
    Avg size of partitions:      1
    Max size of partitions:      52 (with key [N540 (before line 6256), Function rtl8150_reset called from node N1334, stack depth 3 [3e838758], stack [main, rtl8150_probe, rtl8150_reset]])
  Number of target states:       0
  Size of final wait list        10

Time for analysis setup:          5.656s
  Time for loading CPAs:          1.050s
  Time for loading parser:        0.727s
  Time for CFA construction:      3.740s
    Time for parsing file(s):     1.118s
    Time for AST to CFA:          1.296s
    Time for CFA sanity check:    0.206s
    Time for post-processing:     0.908s
      Time for var class.:        0.403s
Time for Analysis:              894.561s
CPU time for analysis:          894.490s
Total time for CPAchecker:      900.221s
Total CPU time for CPAchecker:  900.140s
Time for statistics:              0.156s

Time for Garbage Collector:      39.746s (in 752 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:               1230MB (  1173 MiB) max;    621MB (   592 MiB) avg;   1280MB (  1221 MiB) peak
Used non-heap memory:             41MB (    39 MiB) max;     40MB (    38 MiB) avg;     41MB (    39 MiB) peak
Allocated heap memory:          1776MB (  1694 MiB) max;    862MB (   822 MiB) avg
Allocated non-heap memory:        43MB (    41 MiB) max;     43MB (    41 MiB) avg
Total process virtual memory:  11159MB ( 10642 MiB) max;   9139MB (  8716 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
