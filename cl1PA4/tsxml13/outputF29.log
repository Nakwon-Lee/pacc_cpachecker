scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.16-rc1/205_9a_array_safes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--usb--rtl8150.ko-entry_point_true-unreach-call.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_6f3pvod7/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

line 7290: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp = ldv_zalloc(32UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 7292: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___0 = ldv_zalloc(44UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 7300: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___4 = ldv_zalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ndo_uninit_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ndo_init_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function eth_change_mtu to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function eth_validate_addr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ethtool_op_get_link to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_reset_resume_1 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_deregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_warn to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_unlink_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function capable to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strlcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function alloc_etherdev_mqs to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snprintf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netif_device_attach to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netif_device_detach to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tasklet_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_netdev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_kill_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __raw_spin_lock_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_alloc_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_free_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_submit_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tasklet_kill to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _dev_info to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function unregister_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __printk_ratelimit to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function skb_put to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netif_carrier_on to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netif_carrier_off to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __tasklet_schedule to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __netif_schedule to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function register_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

What!
Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            659775 (20% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  580876 (88%)
  Because of loop head:            78723 (12%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         176 (0%)
  Times precision was empty:       156253 (24%)
  Times precision was {false}:     6113 (1%)
  Times result was cached:         466930 (71%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      30479 (5%)
  Times result was 'false':        38322 (6%)
Number of strengthen sat checks:   0
Number of coverage checks:         772734
  BDD entailment checks:           425934
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       38
Number of predicates discovered:          52
Number of abstraction locations:          216
Max number of predicates per location:    26
Avg number of predicates per location:    5
Total predicates per abstraction:         2628024
Max number of predicates per abstraction: 26
Avg number of predicates per abstraction: 71.82
Number of irrelevant predicates:          1438646 (55%)
Number of preds handled by boolean abs:   141642 (5%)
  Total number of models for allsat:      254364
  Max number of models for allsat:        4800
  Avg number of models for allsat:        8.35

Time for post operator:                 37.360s
  Time for path formula creation:       35.415s
Time for strengthen operator:            2.884s
Time for prec operator:                242.767s
  Time for abstraction:                234.375s (Max:     1.880s, Count: 659775)
    Boolean abstraction:                99.484s
    Solving time:                       30.853s (Max:     0.020s)
    Model enumeration time:             60.207s
    Time for BDD construction:           8.201s (Max:     0.234s)
Time for merge operator:                 2.524s
Time for coverage check:                 0.780s
  Time for BDD entailment checks:        0.652s
Total time for SMT solver (w/o itp):    91.060s

Number of path formula cache hits:   3650733 (90%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    24.187s

Total number of created targets for pointer analysis: 42362
   Number of created targets for uf: *(void)* is 6464
   Number of created targets for uf: *unsigned_short_int is 49
   Number of created targets for uf: *signed_int is 135
   Number of created targets for uf: *unsigned_char is 2167
   Number of created targets for uf: *(unsigned_char)* is 77
   Number of created targets for uf: *(struct_device)* is 135
   Number of created targets for uf: *unsigned_int is 226


Number of BDD nodes:                               245042
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       92222 (count: 815802, min: 0, max: 2958, avg: 0.11)
Time for BDD node cleanup:                             0.179s
Time for BDD garbage collection:                       0.095s (in 1 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  5.049s
  Time for transition matches:                         2.785s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.000s
Automaton transfers with branching:                0
Automaton transfer successors:                      3370438 (count: 3370438, min: 1, max: 1, avg: 1.00) [1 x 3370438]

CPA algorithm statistics
------------------------
Number of iterations:            2296506
Max size of waitlist:            1058
Average size of waitlist:        349
Number of computed successors:   2624451
Max successors for one state:    2
Number of times merged:          173400
Number of times stopped:         251939
Number of times breaked:         176

Total time for CPA algorithm:       358.503s (Max:    35.938s)
  Time for choose from waitlist:      1.453s
  Time for precision adjustment:    264.474s
  Time for transfer relation:        71.501s
  Time for merge operator:            5.216s
  Time for stop operator:             3.813s
  Time for adding to reached set:     4.973s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   176
Avg. length of target path (in blocks):               13858 (count: 176, min: 26, max: 116, avg: 78.74)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  14.354s
  Counterexample analysis:                             6.929s (Max:     0.220s, Calls: 176)
    Refinement sat check:                              3.646s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.010s
  Error path post-processing:                          1.353s
  Predicate creation:                                  0.134s
  Precision update:                                    0.143s
  ARG update:                                          5.641s

Length of refined path (in blocks):                   11083 (count: 175, min: 18, max: 105, avg: 63.33)
Number of affected states:                             6199 (count: 175, min: 0, max: 98, avg: 35.42)
Length (states) of path with itp 'true':               4709 (count: 175, min: 0, max: 77, avg: 26.91)
Length (states) of path with itp non-trivial itp:      6199 (count: 175, min: 0, max: 98, avg: 35.42)
Length (states) of path with itp 'false':               175 (count: 175, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:         202 (count: 175, min: 0, max: 7, avg: 1.15)
Equal non-trivial interpolants along paths:            5823 (count: 175, min: 0, max: 91, avg: 33.27)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                176
Number of successful refinements:     175
Number of failed refinements:         0
Max. size of reached set before ref.: 67090
Max. size of reached set after ref.:  15085
Avg. size of reached set before ref.: 15189.44
Avg. size of reached set after ref.:  1938.00

Total time for CEGAR algorithm:     374.923s
Time for refinements:                16.141s
Average time for refinement:          0.091s
Max time for refinement:              1.652s

Code Coverage
-----------------------------
  Function coverage:      0.741
  Visited lines:          1985
  Total lines:            2175
  Line coverage:          0.913
  Visited conditions:     364
  Total conditions:       404
  Condition coverage:     0.901

CPAchecker general statistics
-----------------------------
Number of program locations:     2926
Number of CFA edges:             3205
Number of relevant variables:    336
Number of functions:             116
Number of loops:                 12
Size of reached set:             51311
  Number of reached locations:   1131 (39%)
    Avg states per location:     45
    Max states per location:     798 (at node N327)
  Number of reached functions:   86 (74%)
  Number of partitions:          50730
    Avg size of partitions:      1
    Max size of partitions:      53 (with key [N1474 (before line 7314), Function main called from node N1427, stack depth 1 [31e32ea2], stack [main]])
  Number of target states:       1
  Size of final wait list        643

Time for analysis setup:          5.646s
  Time for loading CPAs:          0.923s
  Time for loading parser:        0.708s
  Time for CFA construction:      3.862s
    Time for parsing file(s):     1.087s
    Time for AST to CFA:          1.364s
    Time for CFA sanity check:    0.223s
    Time for post-processing:     0.950s
      Time for var class.:        0.436s
Time for Analysis:              374.924s
CPU time for analysis:          374.850s
Time for analyzing result:        0.078s
Total time for CPAchecker:      380.574s
Total CPU time for CPAchecker:  380.490s
Time for statistics:              0.808s

Time for Garbage Collector:      25.062s (in 636 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                464MB (   443 MiB) max;    235MB (   224 MiB) avg;    495MB (   472 MiB) peak
Used non-heap memory:             41MB (    39 MiB) max;     40MB (    38 MiB) avg;     42MB (    40 MiB) peak
Allocated heap memory:           535MB (   511 MiB) max;    357MB (   341 MiB) avg
Allocated non-heap memory:        44MB (    42 MiB) max;     43MB (    41 MiB) avg
Total process virtual memory:   8762MB (  8356 MiB) max;   8326MB (  7940 MiB) avg

Verification result: FALSE. Property violation (__VERIFIER_error(); called in line 5645) found by chosen configuration.
More details about the verification run can be found in the directory "./output".
