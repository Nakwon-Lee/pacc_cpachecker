scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.16-rc1/205_9a_array_safes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--usb--rtl8150.ko-entry_point_true-unreach-call.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_l4_3wu26/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

line 7290: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp = ldv_zalloc(32UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 7292: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___0 = ldv_zalloc(44UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 7300: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___4 = ldv_zalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ndo_uninit_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ndo_init_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function eth_change_mtu to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function eth_validate_addr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ethtool_op_get_link to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_reset_resume_1 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_deregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_warn to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_unlink_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strlcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snprintf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netif_device_detach to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_kill_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netif_device_attach to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _dev_info to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tasklet_kill to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function unregister_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_free_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_netdev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_alloc_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __netif_schedule to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_submit_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function capable to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netif_carrier_off to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netif_carrier_on to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function alloc_etherdev_mqs to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tasklet_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __raw_spin_lock_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function register_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __printk_ratelimit to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function skb_put to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __tasklet_schedule to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            1878125 (21% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  1513965 (81%)
  Because of loop head:            363586 (19%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         574 (0%)
  Times precision was empty:       160483 (9%)
  Times precision was {false}:     3693 (0%)
  Times result was cached:         1674245 (89%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      39704 (2%)
  Times result was 'false':        89621 (5%)
Number of strengthen sat checks:   0
Number of coverage checks:         2055876
  BDD entailment checks:           1376142
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       38
Number of predicates discovered:          55
Number of abstraction locations:          275
Max number of predicates per location:    22
Avg number of predicates per location:    5
Total predicates per abstraction:         8707456
Max number of predicates per abstraction: 23
Avg number of predicates per abstraction: 200.65
Number of irrelevant predicates:          3847789 (44%)
Number of preds handled by boolean abs:   190447 (2%)
  Total number of models for allsat:      521403
  Max number of models for allsat:        12288
  Avg number of models for allsat:        13.13

Time for post operator:                 74.631s
  Time for path formula creation:       67.575s
Time for strengthen operator:            7.448s
Time for prec operator:                580.115s
  Time for abstraction:                559.637s (Max:     5.147s, Count: 1878125)
    Boolean abstraction:               181.298s
    Solving time:                       44.121s (Max:     0.040s)
    Model enumeration time:            118.621s
    Time for BDD construction:          16.439s (Max:     0.524s)
Time for merge operator:                 4.698s
Time for coverage check:                 1.561s
  Time for BDD entailment checks:        1.231s
Total time for SMT solver (w/o itp):   162.742s

Number of path formula cache hits:   9956222 (92%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    40.502s

Total number of created targets for pointer analysis: 167135
   Number of created targets for uf: *unsigned_short_int is 7
   Number of created targets for uf: *(void)* is 26628
   Number of created targets for uf: *signed_int is 238
   Number of created targets for uf: *unsigned_char is 1413
   Number of created targets for uf: *(unsigned_char)* is 708
   Number of created targets for uf: *(struct_device)* is 1576
   Number of created targets for uf: *unsigned_int is 403


Number of BDD nodes:                               64898
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                      105811 (count: 1825195, min: 0, max: 2104, avg: 0.06)
Time for BDD node cleanup:                             0.329s
Time for BDD garbage collection:                       0.065s (in 7 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                 11.562s
  Time for transition matches:                         6.496s
  Time for transition assertions:                      0.005s
  Time for transition actions:                         0.012s
Automaton transfers with branching:                0
Automaton transfer successors:                      8876518 (count: 8876518, min: 1, max: 1, avg: 1.00) [1 x 8876518]

CPA algorithm statistics
------------------------
Number of iterations:            6378279
Max size of waitlist:            190
Average size of waitlist:        23
Number of computed successors:   7173713
Max successors for one state:    2
Number of times merged:          339867
Number of times stopped:         706869
Number of times breaked:         574

Total time for CPA algorithm:       840.422s (Max:    25.444s)
  Time for choose from waitlist:      2.913s
  Time for precision adjustment:    630.846s
  Time for transfer relation:       158.814s
  Time for merge operator:           10.006s
  Time for stop operator:             9.966s
  Time for adding to reached set:    10.182s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   574
Avg. length of target path (in blocks):               58078 (count: 574, min: 26, max: 178, avg: 101.18)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  38.967s
  Counterexample analysis:                            24.989s (Max:     0.174s, Calls: 574)
    Refinement sat check:                             12.675s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.028s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.215s
  Precision update:                                    0.486s
  ARG update:                                         12.875s

Length of refined path (in blocks):                   44639 (count: 574, min: 18, max: 157, avg: 77.77)
Number of affected states:                            12894 (count: 574, min: 0, max: 156, avg: 22.46)
Length (states) of path with itp 'true':              31171 (count: 574, min: 0, max: 107, avg: 54.30)
Length (states) of path with itp non-trivial itp:     12894 (count: 574, min: 0, max: 156, avg: 22.46)
Length (states) of path with itp 'false':               574 (count: 574, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:        1023 (count: 574, min: 0, max: 8, avg: 1.78)
Equal non-trivial interpolants along paths:           11299 (count: 574, min: 0, max: 149, avg: 19.68)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                574
Number of successful refinements:     574
Number of failed refinements:         0
Max. size of reached set before ref.: 86096
Max. size of reached set after ref.:  53008
Avg. size of reached set before ref.: 22209.14
Avg. size of reached set after ref.:  11155.75

Total time for CEGAR algorithm:     894.691s
Time for refinements:                49.447s
Average time for refinement:          0.086s
Max time for refinement:              0.892s

Code Coverage
-----------------------------
  Function coverage:      0.750
  Visited lines:          2008
  Total lines:            2175
  Line coverage:          0.923
  Visited conditions:     366
  Total conditions:       404
  Condition coverage:     0.906

CPAchecker general statistics
-----------------------------
Number of program locations:     2926
Number of CFA edges:             3205
Number of relevant variables:    336
Number of functions:             116
Number of loops:                 12
Size of reached set:             32575
  Number of reached locations:   1160 (40%)
    Avg states per location:     28
    Max states per location:     416 (at node N1923)
  Number of reached functions:   87 (75%)
  Number of partitions:          31664
    Avg size of partitions:      1
    Max size of partitions:      39 (with key [N1474 (before line 7314), Function main called from node N1427, stack depth 1 [31e32ea2], stack [main]])
  Number of target states:       0
  Size of final wait list        37

Time for analysis setup:          5.507s
  Time for loading CPAs:          0.968s
  Time for loading parser:        0.705s
  Time for CFA construction:      3.728s
    Time for parsing file(s):     1.153s
    Time for AST to CFA:          1.200s
    Time for CFA sanity check:    0.215s
    Time for post-processing:     0.923s
      Time for var class.:        0.421s
Time for Analysis:              894.691s
CPU time for analysis:          894.590s
Total time for CPAchecker:      900.205s
Total CPU time for CPAchecker:  900.090s
Time for statistics:              0.558s

Time for Garbage Collector:      65.213s (in 1236 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                782MB (   746 MiB) max;    381MB (   363 MiB) avg;    796MB (   759 MiB) peak
Used non-heap memory:             41MB (    39 MiB) max;     40MB (    39 MiB) avg;     42MB (    40 MiB) peak
Allocated heap memory:           802MB (   765 MiB) max;    547MB (   521 MiB) avg
Allocated non-heap memory:        43MB (    41 MiB) max;     43MB (    41 MiB) avg
Total process virtual memory:   9099MB (  8677 MiB) max;   8536MB (  8141 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
