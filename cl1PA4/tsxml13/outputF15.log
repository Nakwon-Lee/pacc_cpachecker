scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.16-rc1/205_9a_array_safes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--usb--rtl8150.ko-entry_point_true-unreach-call.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_3du7c5rt/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

line 7290: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp = ldv_zalloc(32UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 7292: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___0 = ldv_zalloc(44UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 7300: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___4 = ldv_zalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ndo_uninit_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ndo_init_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function eth_change_mtu to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function eth_validate_addr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ethtool_op_get_link to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_reset_resume_1 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function alloc_etherdev_mqs to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tasklet_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __raw_spin_lock_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_alloc_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_free_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function register_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _dev_info to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netif_device_detach to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_kill_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tasklet_kill to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function unregister_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netif_device_attach to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_submit_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netif_carrier_off to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_netdev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netif_carrier_on to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __printk_ratelimit to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_warn to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function skb_put to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __tasklet_schedule to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_deregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strlcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snprintf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __netif_schedule to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function capable to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_unlink_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            471410 (19% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  348586 (74%)
  Because of loop head:            122561 (26%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         263 (0%)
  Times precision was empty:       30953 (7%)
  Times precision was {false}:     1437 (0%)
  Times result was cached:         383388 (81%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      55632 (12%)
  Times result was 'false':        39294 (8%)
Number of strengthen sat checks:   0
Number of coverage checks:         724180
  BDD entailment checks:           475540
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       38
Number of predicates discovered:          108
Number of abstraction locations:          276
Max number of predicates per location:    63
Avg number of predicates per location:    6
Total predicates per abstraction:         3689883
Max number of predicates per abstraction: 62
Avg number of predicates per abstraction: 64.66
Number of irrelevant predicates:          930205 (25%)
Number of preds handled by boolean abs:   819142 (22%)
  Total number of models for allsat:      1747313
  Max number of models for allsat:        1440
  Avg number of models for allsat:        31.41

Time for post operator:                 68.848s
  Time for path formula creation:       67.386s
Time for strengthen operator:            2.434s
Time for prec operator:                715.444s
  Time for abstraction:                708.152s (Max:     1.914s, Count: 471410)
    Boolean abstraction:               479.171s
    Solving time:                      130.451s (Max:     0.094s)
    Model enumeration time:            221.983s
    Time for BDD construction:         112.239s (Max:     1.884s)
Time for merge operator:                 4.759s
Time for coverage check:                 1.195s
  Time for BDD entailment checks:        1.075s
Total time for SMT solver (w/o itp):   352.435s

Number of path formula cache hits:   1473998 (54%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    58.512s

Total number of created targets for pointer analysis: 198077
   Number of created targets for uf: *(void)* is 36884
   Number of created targets for uf: *unsigned_short_int is 38
   Number of created targets for uf: *signed_int is 682
   Number of created targets for uf: *unsigned_char is 53
   Number of created targets for uf: *(unsigned_char)* is 308
   Number of created targets for uf: *(struct_device)* is 2827
   Number of created targets for uf: *unsigned_int is 992


Number of BDD nodes:                               158557
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                      291823 (count: 933634, min: 0, max: 3232, avg: 0.31)
Time for BDD node cleanup:                             0.257s
Time for BDD garbage collection:                       0.187s (in 13 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  3.788s
  Time for transition matches:                         1.912s
  Time for transition assertions:                      0.003s
  Time for transition actions:                         0.001s
Automaton transfers with branching:                0
Automaton transfer successors:                      2460810 (count: 2460810, min: 1, max: 1, avg: 1.00) [1 x 2460810]

CPA algorithm statistics
------------------------
Number of iterations:            1799598
Max size of waitlist:            608
Average size of waitlist:        174
Number of computed successors:   2095028
Max successors for one state:    2
Number of times merged:          124320
Number of times stopped:         214350
Number of times breaked:         263

Total time for CPA algorithm:       852.586s (Max:    32.735s)
  Time for choose from waitlist:      1.153s
  Time for precision adjustment:    731.107s
  Time for transfer relation:        98.162s
  Time for merge operator:            7.511s
  Time for stop operator:             4.176s
  Time for adding to reached set:     4.275s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   263
Avg. length of target path (in blocks):               46532 (count: 263, min: 26, max: 428, avg: 176.93)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  38.746s
  Counterexample analysis:                            34.853s (Max:     0.800s, Calls: 263)
    Refinement sat check:                             11.207s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.025s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.213s
  Precision update:                                    0.299s
  ARG update:                                          3.041s

Length of refined path (in blocks):                   22580 (count: 263, min: 18, max: 294, avg: 85.86)
Number of affected states:                            13091 (count: 263, min: 0, max: 229, avg: 49.78)
Length (states) of path with itp 'true':               9226 (count: 263, min: 0, max: 187, avg: 35.08)
Length (states) of path with itp non-trivial itp:     13091 (count: 263, min: 0, max: 229, avg: 49.78)
Length (states) of path with itp 'false':               263 (count: 263, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:        1193 (count: 263, min: 0, max: 44, avg: 4.54)
Equal non-trivial interpolants along paths:           11636 (count: 263, min: 0, max: 184, avg: 44.24)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                263
Number of successful refinements:     263
Number of failed refinements:         0
Max. size of reached set before ref.: 25941
Max. size of reached set after ref.:  17258
Avg. size of reached set before ref.: 10924.37
Avg. size of reached set after ref.:  3989.39

Total time for CEGAR algorithm:     894.567s
Time for refinements:                41.235s
Average time for refinement:          0.156s
Max time for refinement:              0.839s

Code Coverage
-----------------------------
  Function coverage:      0.707
  Visited lines:          1935
  Total lines:            2175
  Line coverage:          0.890
  Visited conditions:     346
  Total conditions:       404
  Condition coverage:     0.856

CPAchecker general statistics
-----------------------------
Number of program locations:     2926
Number of CFA edges:             3205
Number of relevant variables:    336
Number of functions:             116
Number of loops:                 12
Size of reached set:             17484
  Number of reached locations:   1083 (37%)
    Avg states per location:     16
    Max states per location:     328 (at node N326)
  Number of reached functions:   82 (71%)
  Number of partitions:          17351
    Avg size of partitions:      1
    Max size of partitions:      12 (with key [N1474 (before line 7314), Function main called from node N1427, stack depth 1 [31e32ea2], stack [main]])
  Number of target states:       0
  Size of final wait list        65

Time for analysis setup:          5.654s
  Time for loading CPAs:          0.984s
  Time for loading parser:        0.711s
  Time for CFA construction:      3.814s
    Time for parsing file(s):     1.078s
    Time for AST to CFA:          1.307s
    Time for CFA sanity check:    0.194s
    Time for post-processing:     1.003s
      Time for var class.:        0.428s
Time for Analysis:              894.567s
CPU time for analysis:          894.480s
Total time for CPAchecker:      900.226s
Total CPU time for CPAchecker:  900.120s
Time for statistics:              0.369s

Time for Garbage Collector:      25.754s (in 779 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                637MB (   607 MiB) max;    385MB (   368 MiB) avg;    645MB (   615 MiB) peak
Used non-heap memory:             40MB (    39 MiB) max;     40MB (    38 MiB) avg;     41MB (    39 MiB) peak
Allocated heap memory:           837MB (   798 MiB) max;    610MB (   582 MiB) avg
Allocated non-heap memory:        43MB (    41 MiB) max;     43MB (    41 MiB) avg
Total process virtual memory:  12671MB ( 12084 MiB) max;   9795MB (  9341 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
