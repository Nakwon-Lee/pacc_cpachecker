scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.16-rc1/205_9a_array_safes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--usb--rtl8150.ko-entry_point_true-unreach-call.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_klbpgr0v/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

line 7290: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp = ldv_zalloc(32UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 7292: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___0 = ldv_zalloc(44UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 7300: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___4 = ldv_zalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ndo_uninit_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ndo_init_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function eth_change_mtu to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function eth_validate_addr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ethtool_op_get_link to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_reset_resume_1 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_deregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_warn to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_unlink_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function capable to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strlcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snprintf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netif_device_attach to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netif_device_detach to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function alloc_etherdev_mqs to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _dev_info to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_alloc_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_submit_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __printk_ratelimit to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function skb_put to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __tasklet_schedule to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_kill_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_netdev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __netif_schedule to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netif_carrier_on to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netif_carrier_off to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tasklet_kill to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function unregister_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tasklet_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __raw_spin_lock_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_free_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function register_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            1201797 (21% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  950118 (79%)
  Because of loop head:            251378 (21%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         301 (0%)
  Times precision was empty:       264967 (22%)
  Times precision was {false}:     4055 (0%)
  Times result was cached:         877626 (73%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      55149 (5%)
  Times result was 'false':        61148 (5%)
Number of strengthen sat checks:   0
Number of coverage checks:         1441693
  BDD entailment checks:           952993
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       38
Number of predicates discovered:          78
Number of abstraction locations:          226
Max number of predicates per location:    27
Avg number of predicates per location:    5
Total predicates per abstraction:         5179376
Max number of predicates per abstraction: 27
Avg number of predicates per abstraction: 87.48
Number of irrelevant predicates:          1290864 (25%)
Number of preds handled by boolean abs:   490163 (9%)
  Total number of models for allsat:      1030678
  Max number of models for allsat:        3744
  Avg number of models for allsat:        18.69

Time for post operator:                 79.047s
  Time for path formula creation:       76.522s
Time for strengthen operator:            5.098s
Time for prec operator:                657.118s
  Time for abstraction:                642.582s (Max:     6.237s, Count: 1201797)
    Boolean abstraction:               336.570s
    Solving time:                      106.768s (Max:     0.063s)
    Model enumeration time:            188.125s
    Time for BDD construction:          30.768s (Max:     0.249s)
Time for merge operator:                 4.635s
Time for coverage check:                 1.213s
  Time for BDD entailment checks:        1.014s
Total time for SMT solver (w/o itp):   294.893s

Number of path formula cache hits:   5664630 (82%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    56.547s

Total number of created targets for pointer analysis: 205018
   Number of created targets for uf: *unsigned_short_int is 2
   Number of created targets for uf: *(void)* is 30788
   Number of created targets for uf: *signed_int is 481
   Number of created targets for uf: *unsigned_char is 1226
   Number of created targets for uf: *(unsigned_char)* is 768
   Number of created targets for uf: *(struct_device)* is 1739
   Number of created targets for uf: *unsigned_int is 814


Number of BDD nodes:                               166570
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                      238253 (count: 1627692, min: 0, max: 11858, avg: 0.15)
Time for BDD node cleanup:                             0.286s
Time for BDD garbage collection:                       0.101s (in 11 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  8.133s
  Time for transition matches:                         4.514s
  Time for transition assertions:                      0.003s
  Time for transition actions:                         0.002s
Automaton transfers with branching:                0
Automaton transfer successors:                      5821627 (count: 5821627, min: 1, max: 1, avg: 1.00) [1 x 5821627]

CPA algorithm statistics
------------------------
Number of iterations:            4205962
Max size of waitlist:            91
Average size of waitlist:        35
Number of computed successors:   4754265
Max successors for one state:    2
Number of times merged:          244350
Number of times stopped:         485114
Number of times breaked:         301

Total time for CPA algorithm:       867.145s (Max:   137.918s)
  Time for choose from waitlist:      1.901s
  Time for precision adjustment:    689.080s
  Time for transfer relation:       138.725s
  Time for merge operator:            8.886s
  Time for stop operator:             6.847s
  Time for adding to reached set:     7.925s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   301
Avg. length of target path (in blocks):               25468 (count: 301, min: 26, max: 131, avg: 84.61)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  21.583s
  Counterexample analysis:                            12.591s (Max:     0.271s, Calls: 301)
    Refinement sat check:                              6.295s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.023s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.218s
  Precision update:                                    0.252s
  ARG update:                                          8.306s

Length of refined path (in blocks):                   19430 (count: 301, min: 18, max: 127, avg: 64.55)
Number of affected states:                             7739 (count: 301, min: 1, max: 112, avg: 25.71)
Length (states) of path with itp 'true':              11390 (count: 301, min: 0, max: 82, avg: 37.84)
Length (states) of path with itp non-trivial itp:      7739 (count: 301, min: 1, max: 112, avg: 25.71)
Length (states) of path with itp 'false':               301 (count: 301, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:         475 (count: 301, min: 0, max: 18, avg: 1.58)
Equal non-trivial interpolants along paths:            6963 (count: 301, min: 0, max: 107, avg: 23.13)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                301
Number of successful refinements:     301
Number of failed refinements:         0
Max. size of reached set before ref.: 97049
Max. size of reached set after ref.:  52691
Avg. size of reached set before ref.: 21109.88
Avg. size of reached set after ref.:  7214.90

Total time for CEGAR algorithm:     894.471s
Time for refinements:                25.735s
Average time for refinement:          0.085s
Max time for refinement:              0.472s

Code Coverage
-----------------------------
  Function coverage:      0.655
  Visited lines:          1836
  Total lines:            2175
  Line coverage:          0.844
  Visited conditions:     324
  Total conditions:       404
  Condition coverage:     0.802

CPAchecker general statistics
-----------------------------
Number of program locations:     2926
Number of CFA edges:             3205
Number of relevant variables:    336
Number of functions:             116
Number of loops:                 12
Size of reached set:             25613
  Number of reached locations:   971 (33%)
    Avg states per location:     26
    Max states per location:     665 (at node N1923)
  Number of reached functions:   76 (66%)
  Number of partitions:          24242
    Avg size of partitions:      1
    Max size of partitions:      22 (with key [N920 (before line 6675), Function fill_skb_pool called from node N1340, stack depth 3 [557595e7], stack [main, rtl8150_probe, fill_skb_pool]])
  Number of target states:       0
  Size of final wait list        41

Time for analysis setup:          5.783s
  Time for loading CPAs:          0.978s
  Time for loading parser:        0.747s
  Time for CFA construction:      3.885s
    Time for parsing file(s):     1.142s
    Time for AST to CFA:          1.318s
    Time for CFA sanity check:    0.205s
    Time for post-processing:     0.968s
      Time for var class.:        0.411s
Time for Analysis:              894.471s
CPU time for analysis:          894.380s
Total time for CPAchecker:      900.259s
Total CPU time for CPAchecker:  900.150s
Time for statistics:              0.417s

Time for Garbage Collector:      48.766s (in 965 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                914MB (   871 MiB) max;    458MB (   436 MiB) avg;    962MB (   918 MiB) peak
Used non-heap memory:             41MB (    39 MiB) max;     40MB (    38 MiB) avg;     41MB (    39 MiB) peak
Allocated heap memory:          1070MB (  1020 MiB) max;    693MB (   661 MiB) avg
Allocated non-heap memory:        44MB (    41 MiB) max;     43MB (    41 MiB) avg
Total process virtual memory:  11736MB ( 11193 MiB) max;   9386MB (  8951 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
