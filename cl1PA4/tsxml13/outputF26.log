scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.16-rc1/205_9a_array_safes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--usb--rtl8150.ko-entry_point_true-unreach-call.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_93xtr822/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

line 7290: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp = ldv_zalloc(32UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 7292: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___0 = ldv_zalloc(44UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 7300: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___4 = ldv_zalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ndo_uninit_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ndo_init_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function eth_change_mtu to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function eth_validate_addr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ethtool_op_get_link to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_reset_resume_1 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_deregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_warn to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_unlink_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function capable to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strlcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snprintf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netif_device_attach to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netif_device_detach to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function alloc_etherdev_mqs to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _dev_info to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_alloc_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_submit_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __printk_ratelimit to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function skb_put to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __tasklet_schedule to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_kill_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_netdev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __netif_schedule to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netif_carrier_on to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netif_carrier_off to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tasklet_kill to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function unregister_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tasklet_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __raw_spin_lock_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_free_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function register_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            1197844 (21% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  947713 (79%)
  Because of loop head:            249831 (21%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         300 (0%)
  Times precision was empty:       264920 (22%)
  Times precision was {false}:     4055 (0%)
  Times result was cached:         874043 (73%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      54826 (5%)
  Times result was 'false':        60726 (5%)
Number of strengthen sat checks:   0
Number of coverage checks:         1431842
  BDD entailment checks:           944536
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       38
Number of predicates discovered:          78
Number of abstraction locations:          226
Max number of predicates per location:    27
Avg number of predicates per location:    5
Total predicates per abstraction:         5134968
Max number of predicates per abstraction: 27
Avg number of predicates per abstraction: 87.21
Number of irrelevant predicates:          1286972 (25%)
Number of preds handled by boolean abs:   486208 (9%)
  Total number of models for allsat:      1023846
  Max number of models for allsat:        3744
  Avg number of models for allsat:        18.67

Time for post operator:                 78.973s
  Time for path formula creation:       76.021s
Time for strengthen operator:            6.935s
Time for prec operator:                656.165s
  Time for abstraction:                641.457s (Max:     5.686s, Count: 1197844)
    Boolean abstraction:               335.538s
    Solving time:                      105.995s (Max:     0.217s)
    Model enumeration time:            190.684s
    Time for BDD construction:          30.201s (Max:     0.202s)
Time for merge operator:                 4.677s
Time for coverage check:                 1.236s
  Time for BDD entailment checks:        1.010s
Total time for SMT solver (w/o itp):   296.680s

Number of path formula cache hits:   5651875 (82%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    55.478s

Total number of created targets for pointer analysis: 203735
   Number of created targets for uf: *unsigned_short_int is 2
   Number of created targets for uf: *(void)* is 30734
   Number of created targets for uf: *signed_int is 481
   Number of created targets for uf: *unsigned_char is 1199
   Number of created targets for uf: *(unsigned_char)* is 768
   Number of created targets for uf: *(struct_device)* is 1739
   Number of created targets for uf: *unsigned_int is 814


Number of BDD nodes:                               122529
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                      237114 (count: 1616935, min: 0, max: 11470, avg: 0.15)
Time for BDD node cleanup:                             0.271s
Time for BDD garbage collection:                       0.161s (in 11 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  8.554s
  Time for transition matches:                         4.876s
  Time for transition assertions:                      0.002s
  Time for transition actions:                         0.004s
Automaton transfers with branching:                0
Automaton transfer successors:                      5802257 (count: 5802257, min: 1, max: 1, avg: 1.00) [1 x 5802257]

CPA algorithm statistics
------------------------
Number of iterations:            4191240
Max size of waitlist:            91
Average size of waitlist:        35
Number of computed successors:   4737316
Max successors for one state:    2
Number of times merged:          243653
Number of times stopped:         483317
Number of times breaked:         300

Total time for CPA algorithm:       867.521s (Max:   134.259s)
  Time for choose from waitlist:      1.818s
  Time for precision adjustment:    690.039s
  Time for transfer relation:       139.819s
  Time for merge operator:            8.950s
  Time for stop operator:             7.082s
  Time for adding to reached set:     7.577s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   300
Avg. length of target path (in blocks):               25349 (count: 300, min: 26, max: 131, avg: 84.50)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  21.198s
  Counterexample analysis:                            12.594s (Max:     0.289s, Calls: 300)
    Refinement sat check:                              6.304s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.010s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.166s
  Precision update:                                    0.185s
  ARG update:                                          8.046s

Length of refined path (in blocks):                   19326 (count: 300, min: 18, max: 127, avg: 64.42)
Number of affected states:                             7695 (count: 300, min: 1, max: 112, avg: 25.65)
Length (states) of path with itp 'true':              11331 (count: 300, min: 0, max: 82, avg: 37.77)
Length (states) of path with itp non-trivial itp:      7695 (count: 300, min: 1, max: 112, avg: 25.65)
Length (states) of path with itp 'false':               300 (count: 300, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:         466 (count: 300, min: 0, max: 18, avg: 1.55)
Equal non-trivial interpolants along paths:            6929 (count: 300, min: 0, max: 107, avg: 23.10)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                300
Number of successful refinements:     300
Number of failed refinements:         0
Max. size of reached set before ref.: 87999
Max. size of reached set after ref.:  52691
Avg. size of reached set before ref.: 20856.75
Avg. size of reached set after ref.:  7161.26

Total time for CEGAR algorithm:     894.850s
Time for refinements:                25.717s
Average time for refinement:          0.085s
Max time for refinement:              0.506s

Code Coverage
-----------------------------
  Function coverage:      0.543
  Visited lines:          1642
  Total lines:            2175
  Line coverage:          0.755
  Visited conditions:     278
  Total conditions:       404
  Condition coverage:     0.688

CPAchecker general statistics
-----------------------------
Number of program locations:     2926
Number of CFA edges:             3205
Number of relevant variables:    336
Number of functions:             116
Number of loops:                 12
Size of reached set:             84627
  Number of reached locations:   806 (28%)
    Avg states per location:     104
    Max states per location:     3222 (at node N1923)
  Number of reached functions:   63 (54%)
  Number of partitions:          79397
    Avg size of partitions:      1
    Max size of partitions:      27 (with key [N948 (before line 6709), Function free_skb_pool called from node N1359, stack depth 3 [412b1b42], stack [main, rtl8150_probe, free_skb_pool]])
  Number of target states:       0
  Size of final wait list        30

Time for analysis setup:          5.395s
  Time for loading CPAs:          0.936s
  Time for loading parser:        0.688s
  Time for CFA construction:      3.650s
    Time for parsing file(s):     1.048s
    Time for AST to CFA:          1.284s
    Time for CFA sanity check:    0.209s
    Time for post-processing:     0.879s
      Time for var class.:        0.386s
Time for Analysis:              894.850s
CPU time for analysis:          894.720s
Total time for CPAchecker:      900.250s
Total CPU time for CPAchecker:  900.120s
Time for statistics:              1.008s

Time for Garbage Collector:      48.863s (in 965 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                921MB (   878 MiB) max;    460MB (   439 MiB) avg;    971MB (   926 MiB) peak
Used non-heap memory:             41MB (    39 MiB) max;     40MB (    38 MiB) avg;     42MB (    40 MiB) peak
Allocated heap memory:          1087MB (  1037 MiB) max;    694MB (   661 MiB) avg
Allocated non-heap memory:        43MB (    41 MiB) max;     43MB (    41 MiB) avg
Total process virtual memory:  11733MB ( 11189 MiB) max;   9366MB (  8932 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
