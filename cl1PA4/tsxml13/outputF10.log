scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.16-rc1/205_9a_array_safes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--usb--rtl8150.ko-entry_point_true-unreach-call.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_a0m5zpgj/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

line 7290: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp = ldv_zalloc(32UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 7292: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___0 = ldv_zalloc(44UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 7300: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___4 = ldv_zalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ndo_uninit_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ndo_init_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function eth_change_mtu to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function eth_validate_addr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ethtool_op_get_link to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_reset_resume_1 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_deregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strlcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snprintf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_warn to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_unlink_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netif_device_detach to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_kill_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netif_device_attach to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __printk_ratelimit to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function skb_put to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __tasklet_schedule to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_submit_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _dev_info to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netif_carrier_off to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_netdev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netif_carrier_on to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_alloc_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __netif_schedule to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tasklet_kill to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function unregister_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_free_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function capable to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function alloc_etherdev_mqs to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tasklet_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __raw_spin_lock_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function register_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Error: Refinement failed: Interpolation failed (cur_eq unknown to the classifier) (InterpolationManager.fallbackWithoutInterpolation, SEVERE)

PredicateCPA statistics
-----------------------
Number of abstractions:            84715 (21% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  72285 (85%)
  Because of loop head:            12368 (15%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         62 (0%)
  Times precision was empty:       53060 (63%)
  Times precision was {false}:     1319 (2%)
  Times result was cached:         23916 (28%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      6420 (8%)
  Times result was 'false':        2185 (3%)
Number of strengthen sat checks:   0
Number of coverage checks:         62139
  BDD entailment checks:           29217
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       38
Number of predicates discovered:          66
Number of abstraction locations:          115
Max number of predicates per location:    28
Avg number of predicates per location:    5
Total predicates per abstraction:         137206
Max number of predicates per abstraction: 28
Avg number of predicates per abstraction: 17.73
Number of irrelevant predicates:          55015 (40%)
Number of preds handled by boolean abs:   46028 (34%)
  Total number of models for allsat:      37895
  Max number of models for allsat:        320
  Avg number of models for allsat:        5.90

Time for post operator:                 19.094s
  Time for path formula creation:       18.786s
Time for strengthen operator:            0.644s
Time for prec operator:                 36.038s
  Time for abstraction:                 34.138s (Max:     0.058s, Count: 84715)
    Boolean abstraction:                16.622s
    Solving time:                        9.871s (Max:     0.017s)
    Model enumeration time:              4.718s
    Time for BDD construction:           1.392s (Max:     0.018s)
Time for merge operator:                 1.132s
Time for coverage check:                 0.161s
  Time for BDD entailment checks:        0.114s
Total time for SMT solver (w/o itp):    14.589s

Number of path formula cache hits:   271677 (59%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    16.989s

Total number of created targets for pointer analysis: 32661
   Number of created targets for uf: *(void)* is 4051
   Number of created targets for uf: *unsigned_short_int is 61
   Number of created targets for uf: *signed_int is 72
   Number of created targets for uf: *unsigned_char is 309
   Number of created targets for uf: *(unsigned_char)* is 137
   Number of created targets for uf: *(struct_device)* is 185
   Number of created targets for uf: *unsigned_int is 129


Number of BDD nodes:                               151486
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       42750 (count: 139781, min: 0, max: 2553, avg: 0.31)
Time for BDD node cleanup:                             0.042s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  1.061s
  Time for transition matches:                         0.502s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.001s
Automaton transfers with branching:                0
Automaton transfer successors:                       402036 (count: 402036, min: 1, max: 1, avg: 1.00) [1 x 402036]

CPA algorithm statistics
------------------------
Number of iterations:            284401
Max size of waitlist:            42
Average size of waitlist:        19
Number of computed successors:   317745
Max successors for one state:    2
Number of times merged:          16461
Number of times stopped:         30465
Number of times breaked:         62

Total time for CPA algorithm:        73.786s (Max:     5.190s)
  Time for choose from waitlist:      0.232s
  Time for precision adjustment:     40.220s
  Time for transfer relation:        27.204s
  Time for merge operator:            1.761s
  Time for stop operator:             0.918s
  Time for adding to reached set:     1.053s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   62
Avg. length of target path (in blocks):                4732 (count: 62, min: 26, max: 147, avg: 76.32)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   4.399s
  Counterexample analysis:                             3.282s (Max:     0.298s, Calls: 62)
    Refinement sat check:                              1.623s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.005s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.062s
  Precision update:                                    0.065s
  ARG update:                                          0.894s

Length of refined path (in blocks):                    3669 (count: 61, min: 18, max: 126, avg: 60.15)
Number of affected states:                             1352 (count: 61, min: 1, max: 94, avg: 22.16)
Length (states) of path with itp 'true':               2256 (count: 61, min: 0, max: 106, avg: 36.98)
Length (states) of path with itp non-trivial itp:      1352 (count: 61, min: 1, max: 94, avg: 22.16)
Length (states) of path with itp 'false':                61 (count: 61, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:          87 (count: 61, min: 0, max: 12, avg: 1.43)
Equal non-trivial interpolants along paths:            1204 (count: 61, min: 0, max: 92, avg: 19.74)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                62
Number of successful refinements:     61
Number of failed refinements:         1
Max. size of reached set before ref.: 12141
Max. size of reached set after ref.:  5132
Avg. size of reached set before ref.: 5643.29
Avg. size of reached set after ref.:  1062.10

Total time for CEGAR algorithm:      78.763s
Time for refinements:                 4.910s
Average time for refinement:          0.079s
Max time for refinement:              0.323s

Code Coverage
-----------------------------
  Function coverage:      0.793
  Visited lines:          2016
  Total lines:            2175
  Line coverage:          0.927
  Visited conditions:     366
  Total conditions:       404
  Condition coverage:     0.906

CPAchecker general statistics
-----------------------------
Number of program locations:     2926
Number of CFA edges:             3205
Number of relevant variables:    336
Number of functions:             116
Number of loops:                 12
Size of reached set:             12141
  Number of reached locations:   1169 (40%)
    Avg states per location:     10
    Max states per location:     310 (at node N1923)
  Number of reached functions:   92 (79%)
  Number of partitions:          11535
    Avg size of partitions:      1
    Max size of partitions:      24 (with key [N920 (before line 6675), Function fill_skb_pool called from node N1340, stack depth 3 [bab886b], stack [main, rtl8150_probe, fill_skb_pool]])
  Number of target states:       1
  Size of final wait list        23

Time for analysis setup:          5.835s
  Time for loading CPAs:          0.944s
  Time for loading parser:        0.786s
  Time for CFA construction:      3.926s
    Time for parsing file(s):     1.152s
    Time for AST to CFA:          1.432s
    Time for CFA sanity check:    0.211s
    Time for post-processing:     0.907s
      Time for var class.:        0.429s
Time for Analysis:               78.763s
CPU time for analysis:           78.750s
Total time for CPAchecker:       84.605s
Total CPU time for CPAchecker:   84.580s
Time for statistics:              0.275s

Time for Garbage Collector:       3.047s (in 151 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                152MB (   145 MiB) max;     88MB (    84 MiB) avg;    158MB (   151 MiB) peak
Used non-heap memory:             41MB (    39 MiB) max;     38MB (    36 MiB) avg;     41MB (    39 MiB) peak
Allocated heap memory:           200MB (   190 MiB) max;    146MB (   139 MiB) avg
Allocated non-heap memory:        43MB (    41 MiB) max;     40MB (    38 MiB) avg
Total process virtual memory:   8221MB (  7840 MiB) max;   8103MB (  7727 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
