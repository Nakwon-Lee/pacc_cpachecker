scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.16-rc1/205_9a_array_safes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--usb--rtl8150.ko-entry_point_true-unreach-call.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_smjrn69v/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

line 7290: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp = ldv_zalloc(32UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 7292: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___0 = ldv_zalloc(44UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 7300: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___4 = ldv_zalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ndo_uninit_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ndo_init_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function eth_change_mtu to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function eth_validate_addr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ethtool_op_get_link to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_reset_resume_1 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function alloc_etherdev_mqs to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tasklet_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __raw_spin_lock_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_alloc_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_free_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function register_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _dev_info to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netif_device_detach to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_kill_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tasklet_kill to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function unregister_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netif_device_attach to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_submit_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netif_carrier_off to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_netdev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netif_carrier_on to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __printk_ratelimit to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_warn to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function skb_put to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __tasklet_schedule to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_deregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strlcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snprintf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __netif_schedule to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function capable to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_unlink_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            469283 (19% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  347025 (74%)
  Because of loop head:            121996 (26%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         262 (0%)
  Times precision was empty:       30939 (7%)
  Times precision was {false}:     1437 (0%)
  Times result was cached:         381937 (81%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      54970 (12%)
  Times result was 'false':        39059 (8%)
Number of strengthen sat checks:   0
Number of coverage checks:         716134
  BDD entailment checks:           468232
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       38
Number of predicates discovered:          107
Number of abstraction locations:          276
Max number of predicates per location:    62
Avg number of predicates per location:    6
Total predicates per abstraction:         3638231
Max number of predicates per abstraction: 61
Avg number of predicates per abstraction: 64.50
Number of irrelevant predicates:          920270 (25%)
Number of preds handled by boolean abs:   791700 (22%)
  Total number of models for allsat:      1695657
  Max number of models for allsat:        1440
  Avg number of models for allsat:        30.85

Time for post operator:                 70.505s
  Time for path formula creation:       68.892s
Time for strengthen operator:            2.301s
Time for prec operator:                712.435s
  Time for abstraction:                704.901s (Max:     1.852s, Count: 469283)
    Boolean abstraction:               471.189s
    Solving time:                      128.321s (Max:     0.018s)
    Model enumeration time:            218.219s
    Time for BDD construction:         110.209s (Max:     0.103s)
Time for merge operator:                 4.950s
Time for coverage check:                 1.113s
  Time for BDD entailment checks:        1.007s
Total time for SMT solver (w/o itp):   346.541s

Number of path formula cache hits:   1469459 (54%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    59.995s

Total number of created targets for pointer analysis: 196891
   Number of created targets for uf: *(void)* is 36602
   Number of created targets for uf: *unsigned_short_int is 38
   Number of created targets for uf: *signed_int is 679
   Number of created targets for uf: *unsigned_char is 53
   Number of created targets for uf: *(unsigned_char)* is 306
   Number of created targets for uf: *(struct_device)* is 2804
   Number of created targets for uf: *unsigned_int is 988


Number of BDD nodes:                               233774
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                      289600 (count: 921363, min: 0, max: 2932, avg: 0.31)
Time for BDD node cleanup:                             0.201s
Time for BDD garbage collection:                       0.166s (in 12 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  4.213s
  Time for transition matches:                         2.467s
  Time for transition assertions:                      0.003s
  Time for transition actions:                         0.002s
Automaton transfers with branching:                0
Automaton transfer successors:                      2451205 (count: 2451205, min: 1, max: 1, avg: 1.00) [1 x 2451205]

CPA algorithm statistics
------------------------
Number of iterations:            1792253
Max size of waitlist:            608
Average size of waitlist:        174
Number of computed successors:   2086679
Max successors for one state:    2
Number of times merged:          123951
Number of times stopped:         213647
Number of times breaked:         262

Total time for CPA algorithm:       852.331s (Max:    30.944s)
  Time for choose from waitlist:      1.189s
  Time for precision adjustment:    728.104s
  Time for transfer relation:        99.657s
  Time for merge operator:            8.390s
  Time for stop operator:             4.137s
  Time for adding to reached set:     4.467s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   262
Avg. length of target path (in blocks):               46104 (count: 262, min: 26, max: 423, avg: 175.97)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  38.866s
  Counterexample analysis:                            34.759s (Max:     0.804s, Calls: 262)
    Refinement sat check:                             11.460s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.039s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.240s
  Precision update:                                    0.288s
  ARG update:                                          3.239s

Length of refined path (in blocks):                   22307 (count: 262, min: 18, max: 294, avg: 85.14)
Number of affected states:                            12862 (count: 262, min: 0, max: 224, avg: 49.09)
Length (states) of path with itp 'true':               9183 (count: 262, min: 0, max: 187, avg: 35.05)
Length (states) of path with itp non-trivial itp:     12862 (count: 262, min: 0, max: 224, avg: 49.09)
Length (states) of path with itp 'false':               262 (count: 262, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:        1149 (count: 262, min: 0, max: 43, avg: 4.39)
Equal non-trivial interpolants along paths:           11452 (count: 262, min: 0, max: 183, avg: 43.71)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                262
Number of successful refinements:     262
Number of failed refinements:         0
Max. size of reached set before ref.: 25869
Max. size of reached set after ref.:  17258
Avg. size of reached set before ref.: 10867.05
Avg. size of reached set after ref.:  3938.74

Total time for CEGAR algorithm:     894.545s
Time for refinements:                41.415s
Average time for refinement:          0.158s
Max time for refinement:              0.847s

Code Coverage
-----------------------------
  Function coverage:      0.707
  Visited lines:          1940
  Total lines:            2175
  Line coverage:          0.892
  Visited conditions:     348
  Total conditions:       404
  Condition coverage:     0.861

CPAchecker general statistics
-----------------------------
Number of program locations:     2926
Number of CFA edges:             3205
Number of relevant variables:    336
Number of functions:             116
Number of loops:                 12
Size of reached set:             18756
  Number of reached locations:   1089 (37%)
    Avg states per location:     17
    Max states per location:     382 (at node N326)
  Number of reached functions:   82 (71%)
  Number of partitions:          18515
    Avg size of partitions:      1
    Max size of partitions:      45 (with key [N540 (before line 6256), Function rtl8150_reset called from node N1334, stack depth 3 [69ce0249], stack [main, rtl8150_probe, rtl8150_reset]])
  Number of target states:       0
  Size of final wait list        93

Time for analysis setup:          5.719s
  Time for loading CPAs:          0.928s
  Time for loading parser:        0.803s
  Time for CFA construction:      3.822s
    Time for parsing file(s):     1.068s
    Time for AST to CFA:          1.421s
    Time for CFA sanity check:    0.212s
    Time for post-processing:     0.912s
      Time for var class.:        0.432s
Time for Analysis:              894.546s
CPU time for analysis:          894.450s
Total time for CPAchecker:      900.269s
Total CPU time for CPAchecker:  900.170s
Time for statistics:              0.394s

Time for Garbage Collector:      25.926s (in 776 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                629MB (   600 MiB) max;    380MB (   363 MiB) avg;    638MB (   609 MiB) peak
Used non-heap memory:             41MB (    39 MiB) max;     40MB (    38 MiB) avg;     42MB (    40 MiB) peak
Allocated heap memory:           809MB (   771 MiB) max;    602MB (   574 MiB) avg
Allocated non-heap memory:        44MB (    42 MiB) max;     43MB (    41 MiB) avg
Total process virtual memory:  12467MB ( 11889 MiB) max;   9729MB (  9278 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
