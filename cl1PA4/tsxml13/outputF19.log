scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.16-rc1/205_9a_array_safes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--usb--rtl8150.ko-entry_point_true-unreach-call.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_1vneik16/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

line 7290: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp = ldv_zalloc(32UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 7292: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___0 = ldv_zalloc(44UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 7300: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___4 = ldv_zalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ndo_uninit_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ndo_init_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function eth_change_mtu to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function eth_validate_addr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ethtool_op_get_link to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_reset_resume_1 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_deregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_warn to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_unlink_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function capable to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strlcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function alloc_etherdev_mqs to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snprintf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_submit_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netif_device_detach to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_kill_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netif_carrier_off to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netif_carrier_on to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netif_device_attach to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tasklet_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_netdev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __raw_spin_lock_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_alloc_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_free_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tasklet_kill to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _dev_info to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function unregister_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __printk_ratelimit to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function skb_put to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __tasklet_schedule to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __netif_schedule to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function register_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            1440672 (19% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  1249985 (87%)
  Because of loop head:            190364 (13%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         323 (0%)
  Times precision was empty:       286335 (20%)
  Times precision was {false}:     11379 (1%)
  Times result was cached:         1090682 (76%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      52276 (4%)
  Times result was 'false':        80216 (6%)
Number of strengthen sat checks:   0
Number of coverage checks:         1754816
  BDD entailment checks:           956250
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       38
Number of predicates discovered:          56
Number of abstraction locations:          230
Max number of predicates per location:    20
Avg number of predicates per location:    6
Total predicates per abstraction:         7165028
Max number of predicates per abstraction: 20
Avg number of predicates per abstraction: 112.56
Number of irrelevant predicates:          3326667 (46%)
Number of preds handled by boolean abs:   222606 (3%)
  Total number of models for allsat:      485953
  Max number of models for allsat:        3072
  Avg number of models for allsat:        9.30

Time for post operator:                102.764s
  Time for path formula creation:       98.694s
Time for strengthen operator:            6.506s
Time for prec operator:                566.927s
  Time for abstraction:                548.285s (Max:     2.275s, Count: 1440672)
    Boolean abstraction:               188.556s
    Solving time:                       62.831s (Max:     0.154s)
    Model enumeration time:            112.011s
    Time for BDD construction:          13.092s (Max:     0.127s)
Time for merge operator:                 8.919s
Time for coverage check:                 1.244s
  Time for BDD entailment checks:        0.982s
Total time for SMT solver (w/o itp):   174.843s

Number of path formula cache hits:   7390853 (83%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    73.322s

Total number of created targets for pointer analysis: 212671
   Number of created targets for uf: *(void)* is 48941
   Number of created targets for uf: *unsigned_short_int is 165
   Number of created targets for uf: *signed_int is 968
   Number of created targets for uf: *unsigned_char is 5189
   Number of created targets for uf: *(unsigned_char)* is 571
   Number of created targets for uf: *(struct_device)* is 1025
   Number of created targets for uf: *unsigned_int is 1413


Number of BDD nodes:                               219324
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                      119871 (count: 1638778, min: 0, max: 2761, avg: 0.07)
Time for BDD node cleanup:                             0.320s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                 11.186s
  Time for transition matches:                         6.423s
  Time for transition assertions:                      0.002s
  Time for transition actions:                         0.004s
Automaton transfers with branching:                0
Automaton transfer successors:                      7494384 (count: 7494384, min: 1, max: 1, avg: 1.00) [1 x 7494384]

CPA algorithm statistics
------------------------
Number of iterations:            5124558
Max size of waitlist:            694
Average size of waitlist:        324
Number of computed successors:   5895839
Max successors for one state:    2
Number of times merged:          399283
Number of times stopped:         587873
Number of times breaked:         323

Total time for CPA algorithm:       841.982s (Max:    24.343s)
  Time for choose from waitlist:      3.461s
  Time for precision adjustment:    610.871s
  Time for transfer relation:       178.176s
  Time for merge operator:           14.799s
  Time for stop operator:             7.972s
  Time for adding to reached set:    11.043s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   323
Avg. length of target path (in blocks):               59652 (count: 323, min: 26, max: 343, avg: 184.68)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  48.344s
  Counterexample analysis:                            36.822s (Max:     0.300s, Calls: 323)
    Refinement sat check:                             14.559s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.053s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.344s
  Precision update:                                    0.396s
  ARG update:                                         10.367s

Length of refined path (in blocks):                   49661 (count: 323, min: 18, max: 331, avg: 153.75)
Number of affected states:                            35991 (count: 323, min: 0, max: 305, avg: 111.43)
Length (states) of path with itp 'true':              13347 (count: 323, min: 0, max: 182, avg: 41.32)
Length (states) of path with itp non-trivial itp:     35991 (count: 323, min: 0, max: 305, avg: 111.43)
Length (states) of path with itp 'false':               323 (count: 323, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:         827 (count: 323, min: 0, max: 8, avg: 2.56)
Equal non-trivial interpolants along paths:           34842 (count: 323, min: 0, max: 303, avg: 107.87)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                323
Number of successful refinements:     323
Number of failed refinements:         0
Max. size of reached set before ref.: 55045
Max. size of reached set after ref.:  16537
Avg. size of reached set before ref.: 17768.16
Avg. size of reached set after ref.:  1729.69

Total time for CEGAR algorithm:     894.716s
Time for refinements:                52.332s
Average time for refinement:          0.162s
Max time for refinement:              0.422s

Code Coverage
-----------------------------
  Function coverage:      0.793
  Visited lines:          2030
  Total lines:            2175
  Line coverage:          0.933
  Visited conditions:     368
  Total conditions:       404
  Condition coverage:     0.911

CPAchecker general statistics
-----------------------------
Number of program locations:     2926
Number of CFA edges:             3205
Number of relevant variables:    336
Number of functions:             116
Number of loops:                 12
Size of reached set:             47323
  Number of reached locations:   1184 (40%)
    Avg states per location:     39
    Max states per location:     464 (at node N1923)
  Number of reached functions:   92 (79%)
  Number of partitions:          46487
    Avg size of partitions:      1
    Max size of partitions:      48 (with key [N1474 (before line 7314), Function main called from node N1427, stack depth 1 [5b5c0057], stack [main]])
  Number of target states:       0
  Size of final wait list        559

Time for analysis setup:          5.539s
  Time for loading CPAs:          0.961s
  Time for loading parser:        0.738s
  Time for CFA construction:      3.718s
    Time for parsing file(s):     1.077s
    Time for AST to CFA:          1.398s
    Time for CFA sanity check:    0.177s
    Time for post-processing:     0.851s
      Time for var class.:        0.370s
Time for Analysis:              894.716s
CPU time for analysis:          894.610s
Total time for CPAchecker:      900.260s
Total CPU time for CPAchecker:  900.140s
Time for statistics:              0.767s

Time for Garbage Collector:      51.102s (in 912 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                967MB (   922 MiB) max;    476MB (   454 MiB) avg;   1053MB (  1004 MiB) peak
Used non-heap memory:             41MB (    39 MiB) max;     40MB (    38 MiB) avg;     41MB (    39 MiB) peak
Allocated heap memory:          1332MB (  1270 MiB) max;    681MB (   650 MiB) avg
Allocated non-heap memory:        43MB (    41 MiB) max;     43MB (    41 MiB) avg
Total process virtual memory:   9769MB (  9316 MiB) max;   8823MB (  8414 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
