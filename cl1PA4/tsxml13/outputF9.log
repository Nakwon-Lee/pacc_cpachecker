scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.16-rc1/205_9a_array_safes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--usb--rtl8150.ko-entry_point_true-unreach-call.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_0bysoqqn/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

line 7290: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp = ldv_zalloc(32UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 7292: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___0 = ldv_zalloc(44UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 7300: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___4 = ldv_zalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ndo_uninit_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ndo_init_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function eth_change_mtu to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function eth_validate_addr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ethtool_op_get_link to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_reset_resume_1 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function alloc_etherdev_mqs to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_deregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tasklet_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __raw_spin_lock_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_alloc_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_free_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_warn to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_unlink_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strlcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snprintf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function capable to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_submit_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netif_device_detach to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_kill_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netif_carrier_off to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netif_carrier_on to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_netdev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _dev_info to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __netif_schedule to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function register_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netif_device_attach to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __printk_ratelimit to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function skb_put to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __tasklet_schedule to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tasklet_kill to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function unregister_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            1056746 (20% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  944604 (89%)
  Because of loop head:            111954 (11%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         188 (0%)
  Times precision was empty:       208336 (20%)
  Times precision was {false}:     9932 (1%)
  Times result was cached:         762283 (72%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      76195 (7%)
  Times result was 'false':        59830 (6%)
Number of strengthen sat checks:   0
Number of coverage checks:         1183810
  BDD entailment checks:           666596
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       38
Number of predicates discovered:          63
Number of abstraction locations:          266
Max number of predicates per location:    21
Avg number of predicates per location:    5
Total predicates per abstraction:         6659169
Max number of predicates per abstraction: 21
Avg number of predicates per abstraction: 77.32
Number of irrelevant predicates:          3083205 (46%)
Number of preds handled by boolean abs:   371649 (6%)
  Total number of models for allsat:      446663
  Max number of models for allsat:        1440
  Avg number of models for allsat:        5.86

Time for post operator:                140.967s
  Time for path formula creation:      137.836s
Time for strengthen operator:            4.774s
Time for prec operator:                584.836s
  Time for abstraction:                569.457s (Max:     3.846s, Count: 1056746)
    Boolean abstraction:               206.093s
    Solving time:                      102.351s (Max:     0.123s)
    Model enumeration time:             86.924s
    Time for BDD construction:          11.190s (Max:     0.195s)
Time for merge operator:                12.340s
Time for coverage check:                 1.042s
  Time for BDD entailment checks:        0.873s
Total time for SMT solver (w/o itp):   189.275s

Number of path formula cache hits:   3611228 (60%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:   115.826s

Total number of created targets for pointer analysis: 371610
   Number of created targets for uf: *unsigned_short_int is 23
   Number of created targets for uf: *(void)* is 35333
   Number of created targets for uf: *signed_int is 17
   Number of created targets for uf: *unsigned_char is 9694
   Number of created targets for uf: *(unsigned_char)* is 3493
   Number of created targets for uf: *(struct_device)* is 4019
   Number of created targets for uf: *unsigned_int is 25


Number of BDD nodes:                               156017
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                      169617 (count: 1402415, min: 0, max: 3465, avg: 0.12)
Time for BDD node cleanup:                             0.285s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  8.300s
  Time for transition matches:                         4.901s
  Time for transition assertions:                      0.001s
  Time for transition actions:                         0.000s
Automaton transfers with branching:                0
Automaton transfer successors:                      5251407 (count: 5251407, min: 1, max: 1, avg: 1.00) [1 x 5251407]

CPA algorithm statistics
------------------------
Number of iterations:            3657211
Max size of waitlist:            1142
Average size of waitlist:        333
Number of computed successors:   4161059
Max successors for one state:    2
Number of times merged:          258607
Number of times stopped:         384928
Number of times breaked:         188

Total time for CPA algorithm:       861.481s (Max:    23.495s)
  Time for choose from waitlist:      2.253s
  Time for precision adjustment:    616.362s
  Time for transfer relation:       199.377s
  Time for merge operator:           16.904s
  Time for stop operator:             5.827s
  Time for adding to reached set:     8.840s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   188
Avg. length of target path (in blocks):               35248 (count: 188, min: 30, max: 655, avg: 187.49)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  30.353s
  Counterexample analysis:                            22.252s (Max:     0.555s, Calls: 188)
    Refinement sat check:                              9.182s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.017s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.206s
  Precision update:                                    0.173s
  ARG update:                                          7.450s

Length of refined path (in blocks):                   25099 (count: 188, min: 18, max: 427, avg: 133.51)
Number of affected states:                            18360 (count: 188, min: 0, max: 401, avg: 97.66)
Length (states) of path with itp 'true':               6551 (count: 188, min: 14, max: 160, avg: 34.85)
Length (states) of path with itp non-trivial itp:     18360 (count: 188, min: 0, max: 401, avg: 97.66)
Length (states) of path with itp 'false':               188 (count: 188, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:         352 (count: 188, min: 0, max: 8, avg: 1.87)
Equal non-trivial interpolants along paths:           17821 (count: 188, min: 0, max: 399, avg: 94.79)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                188
Number of successful refinements:     188
Number of failed refinements:         0
Max. size of reached set before ref.: 67247
Max. size of reached set after ref.:  22732
Avg. size of reached set before ref.: 20776.86
Avg. size of reached set after ref.:  1115.20

Total time for CEGAR algorithm:     894.743s
Time for refinements:                33.097s
Average time for refinement:          0.176s
Max time for refinement:              0.724s

Code Coverage
-----------------------------
  Function coverage:      0.638
  Visited lines:          1754
  Total lines:            2175
  Line coverage:          0.806
  Visited conditions:     276
  Total conditions:       404
  Condition coverage:     0.683

CPAchecker general statistics
-----------------------------
Number of program locations:     2926
Number of CFA edges:             3205
Number of relevant variables:    336
Number of functions:             116
Number of loops:                 12
Size of reached set:             19910
  Number of reached locations:   870 (30%)
    Avg states per location:     22
    Max states per location:     254 (at node N161)
  Number of reached functions:   74 (64%)
  Number of partitions:          19611
    Avg size of partitions:      1
    Max size of partitions:      28 (with key [N1474 (before line 7314), Function main called from node N1427, stack depth 1 [31e32ea2], stack [main]])
  Number of target states:       0
  Size of final wait list        445

Time for analysis setup:          5.496s
  Time for loading CPAs:          0.910s
  Time for loading parser:        0.708s
  Time for CFA construction:      3.771s
    Time for parsing file(s):     1.077s
    Time for AST to CFA:          1.327s
    Time for CFA sanity check:    0.210s
    Time for post-processing:     0.931s
      Time for var class.:        0.414s
Time for Analysis:              894.743s
CPU time for analysis:          894.620s
Total time for CPAchecker:      900.244s
Total CPU time for CPAchecker:  900.090s
Time for statistics:              0.439s

Time for Garbage Collector:      49.534s (in 633 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:               1374MB (  1311 MiB) max;    614MB (   586 MiB) avg;   1485MB (  1416 MiB) peak
Used non-heap memory:             41MB (    39 MiB) max;     40MB (    38 MiB) avg;     41MB (    39 MiB) peak
Allocated heap memory:          1862MB (  1776 MiB) max;    918MB (   876 MiB) avg
Allocated non-heap memory:        43MB (    41 MiB) max;     43MB (    41 MiB) avg
Total process virtual memory:  11460MB ( 10929 MiB) max;   9459MB (  9021 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
