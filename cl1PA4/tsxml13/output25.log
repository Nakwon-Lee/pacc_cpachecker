scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.16-rc1/205_9a_array_safes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--usb--rtl8150.ko-entry_point_true-unreach-call.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_7el8t2am/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

line 7290: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp = ldv_zalloc(32UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 7292: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___0 = ldv_zalloc(44UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 7300: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___4 = ldv_zalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ndo_uninit_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ndo_init_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function eth_change_mtu to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function eth_validate_addr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ethtool_op_get_link to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_reset_resume_1 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_warn to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_unlink_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function capable to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strlcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_deregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function alloc_etherdev_mqs to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snprintf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tasklet_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __raw_spin_lock_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netif_device_attach to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netif_device_detach to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_netdev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _dev_info to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_submit_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tasklet_kill to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function unregister_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_kill_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_alloc_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_free_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            25307 (17% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  22384 (88%)
  Because of loop head:            2869 (11%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         54 (0%)
  Times precision was empty:       15918 (63%)
  Times precision was {false}:     986 (4%)
  Times result was cached:         7944 (31%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      459 (2%)
  Times result was 'false':        1054 (4%)
Number of strengthen sat checks:   0
Number of coverage checks:         23099
  BDD entailment checks:           5821
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       38
Number of predicates discovered:          10
Number of abstraction locations:          63
Max number of predicates per location:    7
Avg number of predicates per location:    2
Total predicates per abstraction:         17784
Max number of predicates per abstraction: 7
Avg number of predicates per abstraction: 12.31
Number of irrelevant predicates:          12524 (70%)
Number of preds handled by boolean abs:   962 (5%)
  Total number of models for allsat:      1407
  Max number of models for allsat:        32
  Avg number of models for allsat:        3.07

Time for post operator:                  6.384s
  Time for path formula creation:        6.208s
Time for strengthen operator:            0.271s
Time for prec operator:                  7.663s
  Time for abstraction:                  6.826s (Max:     0.041s, Count: 25307)
    Boolean abstraction:                 1.704s
    Solving time:                        1.227s (Max:     0.018s)
    Model enumeration time:              0.603s
    Time for BDD construction:           0.158s (Max:     0.013s)
Time for merge operator:                 0.454s
Time for coverage check:                 0.077s
  Time for BDD entailment checks:        0.072s
Total time for SMT solver (w/o itp):     1.830s

Number of path formula cache hits:   137856 (80%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     5.393s

Total number of created targets for pointer analysis: 809
   Number of created targets for uf: *(void)* is 33
   Number of created targets for uf: *unsigned_short_int is 2
   Number of created targets for uf: *signed_int is 4
   Number of created targets for uf: *unsigned_char is 113
   Number of created targets for uf: *(unsigned_char)* is 10
   Number of created targets for uf: *unsigned_int is 4


Number of BDD nodes:                               928
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        1166 (count: 29723, min: 0, max: 172, avg: 0.04)
Time for BDD node cleanup:                             0.028s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.582s
  Time for transition matches:                         0.326s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.000s
Automaton transfers with branching:                0
Automaton transfer successors:                       147821 (count: 147821, min: 1, max: 1, avg: 1.00) [1 x 147821]

CPA algorithm statistics
------------------------
Number of iterations:            92273
Max size of waitlist:            131
Average size of waitlist:        65
Number of computed successors:   108070
Max successors for one state:    2
Number of times merged:          8639
Number of times stopped:         11248
Number of times breaked:         54

Total time for CPA algorithm:        22.358s (Max:     1.695s)
  Time for choose from waitlist:      0.283s
  Time for precision adjustment:      9.315s
  Time for transfer relation:        10.045s
  Time for merge operator:            0.811s
  Time for stop operator:             0.420s
  Time for adding to reached set:     0.490s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   54
Avg. length of target path (in blocks):                2734 (count: 54, min: 26, max: 66, avg: 50.63)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   2.138s
  Counterexample analysis:                             1.459s (Max:     0.044s, Calls: 54)
    Refinement sat check:                              0.927s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.011s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.038s
  Precision update:                                    0.059s
  ARG update:                                          0.458s

Length of refined path (in blocks):                    2044 (count: 54, min: 18, max: 53, avg: 37.85)
Number of affected states:                              475 (count: 54, min: 1, max: 38, avg: 8.80)
Length (states) of path with itp 'true':               1515 (count: 54, min: 14, max: 49, avg: 28.06)
Length (states) of path with itp non-trivial itp:       475 (count: 54, min: 1, max: 38, avg: 8.80)
Length (states) of path with itp 'false':                54 (count: 54, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           8 (count: 54, min: 0, max: 1, avg: 0.15)
Equal non-trivial interpolants along paths:             413 (count: 54, min: 0, max: 36, avg: 7.65)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                54
Number of successful refinements:     54
Number of failed refinements:         0
Max. size of reached set before ref.: 3913
Max. size of reached set after ref.:  1714
Avg. size of reached set before ref.: 2440.09
Avg. size of reached set after ref.:  668.65

Total time for CEGAR algorithm:      24.810s
Time for refinements:                 2.431s
Average time for refinement:          0.045s
Max time for refinement:              0.104s

Code Coverage
-----------------------------
  Function coverage:      0.043
  Visited lines:          997
  Total lines:            2175
  Line coverage:          0.458
  Visited conditions:     36
  Total conditions:       404
  Condition coverage:     0.089

CPAchecker general statistics
-----------------------------
Number of program locations:     2926
Number of CFA edges:             3205
Number of relevant variables:    336
Number of functions:             116
Number of loops:                 12
Size of reached set:             110
  Number of reached locations:   70 (2%)
    Avg states per location:     1
    Max states per location:     6 (at node N87)
  Number of reached functions:   5 (4%)
  Number of partitions:          110
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0
  Size of final wait list        17

Time for analysis setup:          5.465s
  Time for loading CPAs:          0.914s
  Time for loading parser:        0.709s
  Time for CFA construction:      3.749s
    Time for parsing file(s):     1.090s
    Time for AST to CFA:          1.319s
    Time for CFA sanity check:    0.217s
    Time for post-processing:     0.895s
      Time for var class.:        0.401s
Time for Analysis:               24.810s
CPU time for analysis:           24.800s
Total time for CPAchecker:       30.281s
Total CPU time for CPAchecker:   30.260s
Time for statistics:              0.085s

Time for Garbage Collector:       0.603s (in 47 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 79MB (    75 MiB) max;     51MB (    48 MiB) avg;     83MB (    80 MiB) peak
Used non-heap memory:             41MB (    39 MiB) max;     35MB (    33 MiB) avg;     41MB (    39 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        43MB (    41 MiB) max;     37MB (    35 MiB) avg
Total process virtual memory:   8087MB (  7712 MiB) max;   8073MB (  7699 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
