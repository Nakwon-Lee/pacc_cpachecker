scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.16-rc1/205_9a_array_safes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--usb--rtl8150.ko-entry_point_true-unreach-call.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_vvkequel/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

line 7290: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp = ldv_zalloc(32UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 7292: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___0 = ldv_zalloc(44UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 7300: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___4 = ldv_zalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ndo_uninit_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ndo_init_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function eth_change_mtu to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function eth_validate_addr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ethtool_op_get_link to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_reset_resume_1 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function alloc_etherdev_mqs to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_deregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function capable to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_warn to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_unlink_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strlcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snprintf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tasklet_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __raw_spin_lock_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_alloc_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_free_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_submit_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netif_device_detach to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_kill_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netif_device_attach to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_netdev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _dev_info to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __netif_schedule to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tasklet_kill to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function unregister_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function register_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netif_carrier_off to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netif_carrier_on to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            1133383 (22% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  1030343 (91%)
  Because of loop head:            102736 (9%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         304 (0%)
  Times precision was empty:       276797 (24%)
  Times precision was {false}:     6621 (1%)
  Times result was cached:         798512 (70%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      51453 (5%)
  Times result was 'false':        31553 (3%)
Number of strengthen sat checks:   0
Number of coverage checks:         1468664
  BDD entailment checks:           993906
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       38
Number of predicates discovered:          69
Number of abstraction locations:          187
Max number of predicates per location:    52
Avg number of predicates per location:    3
Total predicates per abstraction:         6852478
Max number of predicates per abstraction: 52
Avg number of predicates per abstraction: 118.00
Number of irrelevant predicates:          2217648 (32%)
Number of preds handled by boolean abs:   1233848 (18%)
  Total number of models for allsat:      849132
  Max number of models for allsat:        128
  Avg number of models for allsat:        16.50

Time for post operator:                 77.048s
  Time for path formula creation:       73.929s
Time for strengthen operator:            4.892s
Time for prec operator:                667.050s
  Time for abstraction:                651.777s (Max:     1.867s, Count: 1133383)
    Boolean abstraction:               289.604s
    Solving time:                      137.653s (Max:     0.035s)
    Model enumeration time:             88.138s
    Time for BDD construction:          45.237s (Max:     0.069s)
Time for merge operator:                 5.159s
Time for coverage check:                 1.292s
  Time for BDD entailment checks:        1.060s
Total time for SMT solver (w/o itp):   225.797s

Number of path formula cache hits:   5049962 (80%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    54.341s

Total number of created targets for pointer analysis: 117504
   Number of created targets for uf: *(void)* is 15159
   Number of created targets for uf: *unsigned_short_int is 8
   Number of created targets for uf: *signed_int is 63
   Number of created targets for uf: *unsigned_char is 3373
   Number of created targets for uf: *(unsigned_char)* is 783
   Number of created targets for uf: *(struct_device)* is 137
   Number of created targets for uf: *unsigned_int is 126


Number of BDD nodes:                               217970
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                      201249 (count: 1659915, min: 0, max: 6432, avg: 0.12)
Time for BDD node cleanup:                             0.300s
Time for BDD garbage collection:                       0.086s (in 1 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  7.609s
  Time for transition matches:                         4.487s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.004s
Automaton transfers with branching:                0
Automaton transfer successors:                      5241613 (count: 5241613, min: 1, max: 1, avg: 1.00) [1 x 5241613]

CPA algorithm statistics
------------------------
Number of iterations:            3685497
Max size of waitlist:            476
Average size of waitlist:        211
Number of computed successors:   4123039
Max successors for one state:    2
Number of times merged:          237379
Number of times stopped:         353870
Number of times breaked:         304

Total time for CPA algorithm:       867.464s (Max:    35.043s)
  Time for choose from waitlist:      1.951s
  Time for precision adjustment:    696.556s
  Time for transfer relation:       133.539s
  Time for merge operator:            9.321s
  Time for stop operator:             6.216s
  Time for adding to reached set:     7.696s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   304
Avg. length of target path (in blocks):               30212 (count: 304, min: 26, max: 326, avg: 99.38)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  23.969s
  Counterexample analysis:                            16.518s (Max:     0.510s, Calls: 304)
    Refinement sat check:                              5.433s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.025s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.200s
  Precision update:                                    0.236s
  ARG update:                                          6.776s

Length of refined path (in blocks):                   23718 (count: 304, min: 18, max: 277, avg: 78.02)
Number of affected states:                             9157 (count: 304, min: 0, max: 234, avg: 30.12)
Length (states) of path with itp 'true':              14257 (count: 304, min: 14, max: 86, avg: 46.90)
Length (states) of path with itp non-trivial itp:      9157 (count: 304, min: 0, max: 234, avg: 30.12)
Length (states) of path with itp 'false':               304 (count: 304, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:        1129 (count: 304, min: 0, max: 45, avg: 3.71)
Equal non-trivial interpolants along paths:            7725 (count: 304, min: 0, max: 188, avg: 25.41)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                304
Number of successful refinements:     304
Number of failed refinements:         0
Max. size of reached set before ref.: 35722
Max. size of reached set after ref.:  14650
Avg. size of reached set before ref.: 14857.48
Avg. size of reached set after ref.:  2666.04

Total time for CEGAR algorithm:     894.830s
Time for refinements:                26.855s
Average time for refinement:          0.088s
Max time for refinement:              0.631s

Code Coverage
-----------------------------
  Function coverage:      0.724
  Visited lines:          1913
  Total lines:            2175
  Line coverage:          0.880
  Visited conditions:     330
  Total conditions:       404
  Condition coverage:     0.817

CPAchecker general statistics
-----------------------------
Number of program locations:     2926
Number of CFA edges:             3205
Number of relevant variables:    336
Number of functions:             116
Number of loops:                 12
Size of reached set:             31416
  Number of reached locations:   1046 (36%)
    Avg states per location:     30
    Max states per location:     1145 (at node N327)
  Number of reached functions:   84 (72%)
  Number of partitions:          29866
    Avg size of partitions:      1
    Max size of partitions:      47 (with key [N540 (before line 6256), Function rtl8150_reset called from node N1334, stack depth 3 [39e45524], stack [main, rtl8150_probe, rtl8150_reset]])
  Number of target states:       0
  Size of final wait list        255

Time for analysis setup:          5.446s
  Time for loading CPAs:          0.971s
  Time for loading parser:        0.664s
  Time for CFA construction:      3.710s
    Time for parsing file(s):     1.107s
    Time for AST to CFA:          1.286s
    Time for CFA sanity check:    0.205s
    Time for post-processing:     0.887s
      Time for var class.:        0.400s
Time for Analysis:              894.830s
CPU time for analysis:          894.740s
Total time for CPAchecker:      900.280s
Total CPU time for CPAchecker:  900.180s
Time for statistics:              0.637s

Time for Garbage Collector:      39.377s (in 917 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                907MB (   865 MiB) max;    492MB (   469 MiB) avg;    915MB (   872 MiB) peak
Used non-heap memory:             41MB (    39 MiB) max;     40MB (    38 MiB) avg;     41MB (    39 MiB) peak
Allocated heap memory:           978MB (   933 MiB) max;    720MB (   686 MiB) avg
Allocated non-heap memory:        43MB (    41 MiB) max;     43MB (    41 MiB) avg
Total process virtual memory:  11860MB ( 11311 MiB) max;   9330MB (  8898 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
