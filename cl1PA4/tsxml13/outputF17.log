scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.16-rc1/205_9a_array_safes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--usb--rtl8150.ko-entry_point_true-unreach-call.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_vq0qxhbm/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

line 7290: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp = ldv_zalloc(32UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 7292: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___0 = ldv_zalloc(44UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 7300: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___4 = ldv_zalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ndo_uninit_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ndo_init_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function eth_change_mtu to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function eth_validate_addr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ethtool_op_get_link to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_reset_resume_1 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_deregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_warn to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_unlink_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_submit_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netif_device_detach to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_kill_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netif_carrier_off to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netif_carrier_on to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function capable to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strlcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snprintf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netif_device_attach to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function alloc_etherdev_mqs to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _dev_info to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_alloc_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __printk_ratelimit to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function skb_put to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __tasklet_schedule to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_netdev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __netif_schedule to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tasklet_kill to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function unregister_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tasklet_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __raw_spin_lock_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_free_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function register_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            2282258 (21% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  1776524 (78%)
  Because of loop head:            504296 (22%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         1438 (0%)
  Times precision was empty:       666310 (29%)
  Times precision was {false}:     1378 (0%)
  Times result was cached:         1611078 (71%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      3492 (0%)
  Times result was 'false':        134979 (6%)
Number of strengthen sat checks:   0
Number of coverage checks:         2321993
  BDD entailment checks:           1593383
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       38
Number of predicates discovered:          40
Number of abstraction locations:          108
Max number of predicates per location:    15
Avg number of predicates per location:    4
Total predicates per abstraction:         10900161
Max number of predicates per abstraction: 15
Avg number of predicates per abstraction: 2238.23
Number of irrelevant predicates:          3517909 (32%)
Number of preds handled by boolean abs:   13850 (0%)
  Total number of models for allsat:      10480
  Max number of models for allsat:        96
  Avg number of models for allsat:        3.00

Time for post operator:                 46.663s
  Time for path formula creation:       42.728s
Time for strengthen operator:            7.894s
Time for prec operator:                476.867s
  Time for abstraction:                454.390s (Max:     0.347s, Count: 2282258)
    Boolean abstraction:                 5.940s
    Solving time:                        4.224s (Max:     0.038s)
    Model enumeration time:              1.277s
    Time for BDD construction:           0.656s (Max:     0.343s)
Time for merge operator:                 2.484s
Time for coverage check:                 1.482s
  Time for BDD entailment checks:        1.117s
Total time for SMT solver (w/o itp):     5.501s

Number of path formula cache hits:   13029751 (99%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    12.416s

Total number of created targets for pointer analysis: 20112
   Number of created targets for uf: *(void)* is 3042
   Number of created targets for uf: *unsigned_short_int is 53
   Number of created targets for uf: *signed_int is 55
   Number of created targets for uf: *unsigned_char is 258
   Number of created targets for uf: *(unsigned_char)* is 97
   Number of created targets for uf: *(struct_device)* is 124
   Number of created targets for uf: *unsigned_int is 102


Number of BDD nodes:                               10316
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       12343 (count: 2290044, min: 0, max: 1068, avg: 0.01)
Time for BDD node cleanup:                             0.325s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                 12.844s
  Time for transition matches:                         7.343s
  Time for transition assertions:                      0.002s
  Time for transition actions:                         0.008s
Automaton transfers with branching:                0
Automaton transfer successors:                     10691162 (count: 10691162, min: 1, max: 1, avg: 1.00) [1 x 10691162]

CPA algorithm statistics
------------------------
Number of iterations:            7759223
Max size of waitlist:            66
Average size of waitlist:        40
Number of computed successors:   8711760
Max successors for one state:    2
Number of times merged:          364305
Number of times stopped:         779816
Number of times breaked:         1438

Total time for CPA algorithm:       708.434s (Max:     3.116s)
  Time for choose from waitlist:      2.830s
  Time for precision adjustment:    525.721s
  Time for transfer relation:       131.983s
  Time for merge operator:            8.138s
  Time for stop operator:             9.790s
  Time for adding to reached set:    11.491s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   1438
Avg. length of target path (in blocks):              157479 (count: 1438, min: 26, max: 112, avg: 109.51)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                 179.758s
  Counterexample analysis:                           166.175s (Max:     0.233s, Calls: 1438)
    Refinement sat check:                             79.560s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.080s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.770s
  Precision update:                                    0.694s
  ARG update:                                         11.219s

Length of refined path (in blocks):                  136090 (count: 1438, min: 18, max: 102, avg: 94.64)
Number of affected states:                            61707 (count: 1438, min: 1, max: 87, avg: 42.91)
Length (states) of path with itp 'true':              72945 (count: 1438, min: 14, max: 80, avg: 50.73)
Length (states) of path with itp non-trivial itp:     61707 (count: 1438, min: 1, max: 87, avg: 42.91)
Length (states) of path with itp 'false':              1438 (count: 1438, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:       12356 (count: 1438, min: 0, max: 9, avg: 8.59)
Equal non-trivial interpolants along paths:           47913 (count: 1438, min: 0, max: 85, avg: 33.32)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                1438
Number of successful refinements:     1438
Number of failed refinements:         0
Max. size of reached set before ref.: 13434
Max. size of reached set after ref.:  6174
Avg. size of reached set before ref.: 6168.60
Avg. size of reached set after ref.:  748.63

Total time for CEGAR algorithm:     894.677s
Time for refinements:               185.454s
Average time for refinement:          0.128s
Max time for refinement:              0.245s

Code Coverage
-----------------------------
  Function coverage:      0.621
  Visited lines:          1690
  Total lines:            2175
  Line coverage:          0.777
  Visited conditions:     260
  Total conditions:       404
  Condition coverage:     0.644

CPAchecker general statistics
-----------------------------
Number of program locations:     2926
Number of CFA edges:             3205
Number of relevant variables:    336
Number of functions:             116
Number of loops:                 12
Size of reached set:             3050
  Number of reached locations:   818 (28%)
    Avg states per location:     3
    Max states per location:     39 (at node N326)
  Number of reached functions:   72 (62%)
  Number of partitions:          2990
    Avg size of partitions:      1
    Max size of partitions:      8 (with key [N920 (before line 6675), Function fill_skb_pool called from node N1340, stack depth 3 [101fb40], stack [main, rtl8150_probe, fill_skb_pool]])
  Number of target states:       0
  Size of final wait list        48

Time for analysis setup:          5.601s
  Time for loading CPAs:          1.083s
  Time for loading parser:        0.663s
  Time for CFA construction:      3.679s
    Time for parsing file(s):     1.035s
    Time for AST to CFA:          1.318s
    Time for CFA sanity check:    0.200s
    Time for post-processing:     0.939s
      Time for var class.:        0.408s
Time for Analysis:              894.677s
CPU time for analysis:          894.600s
Total time for CPAchecker:      900.283s
Total CPU time for CPAchecker:  900.190s
Time for statistics:              0.143s

Time for Garbage Collector:      32.173s (in 4180 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                164MB (   156 MiB) max;    115MB (   110 MiB) avg;    168MB (   161 MiB) peak
Used non-heap memory:             40MB (    39 MiB) max;     40MB (    38 MiB) avg;     41MB (    39 MiB) peak
Allocated heap memory:           177MB (   169 MiB) max;    164MB (   157 MiB) avg
Allocated non-heap memory:        43MB (    41 MiB) max;     42MB (    40 MiB) avg
Total process virtual memory:   8152MB (  7774 MiB) max;   8147MB (  7770 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
