scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.16-rc1/205_9a_array_safes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--usb--rtl8150.ko-entry_point_true-unreach-call.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_h6h31xk6/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

line 7290: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp = ldv_zalloc(32UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 7292: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___0 = ldv_zalloc(44UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 7300: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___4 = ldv_zalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ndo_uninit_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ndo_init_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function eth_change_mtu to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function eth_validate_addr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ethtool_op_get_link to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_reset_resume_1 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_warn to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_unlink_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function capable to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strlcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_deregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function alloc_etherdev_mqs to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snprintf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tasklet_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __raw_spin_lock_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netif_device_attach to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netif_device_detach to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_netdev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _dev_info to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_submit_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tasklet_kill to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function unregister_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_kill_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_alloc_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_free_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __netif_schedule to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function register_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            438765 (17% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  387472 (88%)
  Because of loop head:            50944 (12%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         349 (0%)
  Times precision was empty:       130265 (30%)
  Times precision was {false}:     11596 (3%)
  Times result was cached:         243349 (55%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      53555 (12%)
  Times result was 'false':        26762 (6%)
Number of strengthen sat checks:   0
Number of coverage checks:         646116
  BDD entailment checks:           321432
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       38
Number of predicates discovered:          55
Number of abstraction locations:          160
Max number of predicates per location:    23
Avg number of predicates per location:    5
Total predicates per abstraction:         1542186
Max number of predicates per abstraction: 23
Avg number of predicates per abstraction: 23.67
Number of irrelevant predicates:          830909 (54%)
Number of preds handled by boolean abs:   232304 (15%)
  Total number of models for allsat:      1681445
  Max number of models for allsat:        8640
  Avg number of models for allsat:        31.40

Time for post operator:                 55.431s
  Time for path formula creation:       53.984s
Time for strengthen operator:            2.591s
Time for prec operator:                750.583s
  Time for abstraction:                744.166s (Max:     4.094s, Count: 438765)
    Boolean abstraction:               617.156s
    Solving time:                       61.048s (Max:     0.060s)
    Model enumeration time:            491.679s
    Time for BDD construction:          65.767s (Max:     1.366s)
Time for merge operator:                 4.705s
Time for coverage check:                 0.785s
  Time for BDD entailment checks:        0.697s
Total time for SMT solver (w/o itp):   552.728s

Number of path formula cache hits:   1966317 (66%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    45.100s

Total number of created targets for pointer analysis: 80345
   Number of created targets for uf: *(void)* is 1248
   Number of created targets for uf: *unsigned_short_int is 2
   Number of created targets for uf: *signed_int is 1164
   Number of created targets for uf: *unsigned_char is 7053
   Number of created targets for uf: *(unsigned_char)* is 809
   Number of created targets for uf: *(struct_device)* is 13
   Number of created targets for uf: *unsigned_int is 116


Number of BDD nodes:                               215273
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                      121754 (count: 847110, min: 0, max: 1701, avg: 0.14)
Time for BDD node cleanup:                             0.155s
Time for BDD garbage collection:                       0.143s (in 10 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  3.972s
  Time for transition matches:                         2.059s
  Time for transition assertions:                      0.009s
  Time for transition actions:                         0.003s
Automaton transfers with branching:                0
Automaton transfer successors:                      2628756 (count: 2628756, min: 1, max: 1, avg: 1.00) [1 x 2628756]

CPA algorithm statistics
------------------------
Number of iterations:            1648742
Max size of waitlist:            1536
Average size of waitlist:        381
Number of computed successors:   1944307
Max successors for one state:    2
Number of times merged:          162342
Number of times stopped:         213483
Number of times breaked:         349

Total time for CPA algorithm:       873.207s (Max:    83.436s)
  Time for choose from waitlist:      1.208s
  Time for precision adjustment:    767.031s
  Time for transfer relation:        84.560s
  Time for merge operator:            7.349s
  Time for stop operator:             3.203s
  Time for adding to reached set:     3.912s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   349
Avg. length of target path (in blocks):               30106 (count: 349, min: 26, max: 210, avg: 86.26)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  18.341s
  Counterexample analysis:                            13.748s (Max:     0.513s, Calls: 349)
    Refinement sat check:                              7.228s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.018s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.147s
  Precision update:                                    0.202s
  ARG update:                                          3.949s

Length of refined path (in blocks):                   21883 (count: 349, min: 18, max: 170, avg: 62.70)
Number of affected states:                             4362 (count: 349, min: 0, max: 169, avg: 12.50)
Length (states) of path with itp 'true':              17172 (count: 349, min: 0, max: 108, avg: 49.20)
Length (states) of path with itp non-trivial itp:      4362 (count: 349, min: 0, max: 169, avg: 12.50)
Length (states) of path with itp 'false':               349 (count: 349, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:         223 (count: 349, min: 0, max: 10, avg: 0.64)
Equal non-trivial interpolants along paths:            3791 (count: 349, min: 0, max: 158, avg: 10.86)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                349
Number of successful refinements:     349
Number of failed refinements:         0
Max. size of reached set before ref.: 50904
Max. size of reached set after ref.:  28286
Avg. size of reached set before ref.: 7195.62
Avg. size of reached set after ref.:  2351.31

Total time for CEGAR algorithm:     894.312s
Time for refinements:                20.496s
Average time for refinement:          0.058s
Max time for refinement:              0.606s

Code Coverage
-----------------------------
  Function coverage:      0.534
  Visited lines:          1573
  Total lines:            2175
  Line coverage:          0.723
  Visited conditions:     228
  Total conditions:       404
  Condition coverage:     0.564

CPAchecker general statistics
-----------------------------
Number of program locations:     2926
Number of CFA edges:             3205
Number of relevant variables:    336
Number of functions:             116
Number of loops:                 12
Size of reached set:             13397
  Number of reached locations:   662 (23%)
    Avg states per location:     20
    Max states per location:     334 (at node N161)
  Number of reached functions:   62 (53%)
  Number of partitions:          13334
    Avg size of partitions:      1
    Max size of partitions:      36 (with key [N1474 (before line 7314), Function main called from node N1427, stack depth 1 [31e32ea2], stack [main]])
  Number of target states:       0
  Size of final wait list        425

Time for analysis setup:          5.941s
  Time for loading CPAs:          1.021s
  Time for loading parser:        0.718s
  Time for CFA construction:      4.082s
    Time for parsing file(s):     1.254s
    Time for AST to CFA:          1.473s
    Time for CFA sanity check:    0.205s
    Time for post-processing:     0.889s
      Time for var class.:        0.403s
Time for Analysis:              894.312s
CPU time for analysis:          894.130s
Total time for CPAchecker:      900.262s
Total CPU time for CPAchecker:  900.060s
Time for statistics:              0.382s

Time for Garbage Collector:      22.590s (in 574 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                679MB (   647 MiB) max;    396MB (   378 MiB) avg;    736MB (   702 MiB) peak
Used non-heap memory:             40MB (    38 MiB) max;     40MB (    38 MiB) avg;     40MB (    39 MiB) peak
Allocated heap memory:           852MB (   813 MiB) max;    582MB (   555 MiB) avg
Allocated non-heap memory:        43MB (    41 MiB) max;     43MB (    41 MiB) avg
Total process virtual memory:   9312MB (  8880 MiB) max;   8752MB (  8347 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
