scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.16-rc1/205_9a_array_safes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--usb--rtl8150.ko-entry_point_true-unreach-call.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_mt4sm496/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

line 7290: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp = ldv_zalloc(32UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 7292: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___0 = ldv_zalloc(44UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 7300: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___4 = ldv_zalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ndo_uninit_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ndo_init_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function eth_change_mtu to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function eth_validate_addr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ethtool_op_get_link to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_reset_resume_1 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_deregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_warn to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_unlink_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strlcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snprintf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netif_device_detach to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_kill_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netif_device_attach to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _dev_info to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tasklet_kill to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function unregister_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_free_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_netdev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_alloc_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __netif_schedule to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_submit_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function capable to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netif_carrier_off to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netif_carrier_on to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function alloc_etherdev_mqs to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tasklet_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __raw_spin_lock_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function register_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __printk_ratelimit to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function skb_put to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __tasklet_schedule to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            37689 (22% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  34161 (91%)
  Because of loop head:            3503 (9%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         25 (0%)
  Times precision was empty:       35422 (94%)
  Times precision was {false}:     423 (1%)
  Times result was cached:         1635 (4%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      209 (1%)
  Times result was 'false':        390 (1%)
Number of strengthen sat checks:   0
Number of coverage checks:         20765
  BDD entailment checks:           6525
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       38
Number of predicates discovered:          11
Number of abstraction locations:          52
Max number of predicates per location:    8
Avg number of predicates per location:    1
Total predicates per abstraction:         5046
Max number of predicates per abstraction: 8
Avg number of predicates per abstraction: 7.98
Number of irrelevant predicates:          3546 (70%)
Number of preds handled by boolean abs:   457 (9%)
  Total number of models for allsat:      764
  Max number of models for allsat:        64
  Avg number of models for allsat:        3.66

Time for post operator:                  7.595s
  Time for path formula creation:        7.393s
Time for strengthen operator:            0.382s
Time for prec operator:                  4.305s
  Time for abstraction:                  3.320s (Max:     0.078s, Count: 37689)
    Boolean abstraction:                 0.978s
    Solving time:                        0.603s (Max:     0.017s)
    Model enumeration time:              0.361s
    Time for BDD construction:           0.166s (Max:     0.015s)
Time for merge operator:                 0.445s
Time for coverage check:                 0.112s
  Time for BDD entailment checks:        0.100s
Total time for SMT solver (w/o itp):     0.964s

Number of path formula cache hits:   159628 (77%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     6.725s

Total number of created targets for pointer analysis: 5620
   Number of created targets for uf: *unsigned_short_int is 25
   Number of created targets for uf: *(void)* is 343
   Number of created targets for uf: *signed_int is 4
   Number of created targets for uf: *unsigned_char is 2
   Number of created targets for uf: *(unsigned_char)* is 22
   Number of created targets for uf: *unsigned_int is 9
   Number of created targets for uf: *(struct_device)* is 13


Number of BDD nodes:                               1399
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         625 (count: 45510, min: 0, max: 74, avg: 0.01)
Time for BDD node cleanup:                             0.029s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.659s
  Time for transition matches:                         0.303s
  Time for transition assertions:                      0.001s
  Time for transition actions:                         0.008s
Automaton transfers with branching:                0
Automaton transfer successors:                       174897 (count: 174897, min: 1, max: 1, avg: 1.00) [1 x 174897]

CPA algorithm statistics
------------------------
Number of iterations:            121526
Max size of waitlist:            38
Average size of waitlist:        16
Number of computed successors:   134444
Max successors for one state:    2
Number of times merged:          7120
Number of times stopped:         12433
Number of times breaked:         25

Total time for CPA algorithm:        22.495s (Max:     2.658s)
  Time for choose from waitlist:      0.222s
  Time for precision adjustment:      6.649s
  Time for transfer relation:        12.333s
  Time for merge operator:            0.832s
  Time for stop operator:             0.551s
  Time for adding to reached set:     0.617s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   25
Avg. length of target path (in blocks):                 946 (count: 25, min: 26, max: 53, avg: 37.84)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   1.306s
  Counterexample analysis:                             0.587s (Max:     0.039s, Calls: 25)
    Refinement sat check:                              0.381s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.030s
  Precision update:                                    0.034s
  ARG update:                                          0.613s

Length of refined path (in blocks):                     623 (count: 25, min: 18, max: 49, avg: 24.92)
Number of affected states:                              171 (count: 25, min: 1, max: 34, avg: 6.84)
Length (states) of path with itp 'true':                427 (count: 25, min: 0, max: 25, avg: 17.08)
Length (states) of path with itp non-trivial itp:       171 (count: 25, min: 1, max: 34, avg: 6.84)
Length (states) of path with itp 'false':                25 (count: 25, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           5 (count: 25, min: 0, max: 1, avg: 0.20)
Equal non-trivial interpolants along paths:             141 (count: 25, min: 0, max: 32, avg: 5.64)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                25
Number of successful refinements:     25
Number of failed refinements:         0
Max. size of reached set before ref.: 8853
Max. size of reached set after ref.:  2423
Avg. size of reached set before ref.: 5349.16
Avg. size of reached set after ref.:  487.20

Total time for CEGAR algorithm:      24.092s
Time for refinements:                 1.552s
Average time for refinement:          0.062s
Max time for refinement:              0.118s

Code Coverage
-----------------------------
  Function coverage:      0.034
  Visited lines:          976
  Total lines:            2175
  Line coverage:          0.449
  Visited conditions:     4
  Total conditions:       404
  Condition coverage:     0.010

CPAchecker general statistics
-----------------------------
Number of program locations:     2926
Number of CFA edges:             3205
Number of relevant variables:    336
Number of functions:             116
Number of loops:                 12
Size of reached set:             73
  Number of reached locations:   33 (1%)
    Avg states per location:     2
    Max states per location:     6 (at node N87)
  Number of reached functions:   4 (3%)
  Number of partitions:          73
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0
  Size of final wait list        1

Time for analysis setup:          5.669s
  Time for loading CPAs:          1.026s
  Time for loading parser:        0.724s
  Time for CFA construction:      3.759s
    Time for parsing file(s):     1.132s
    Time for AST to CFA:          1.291s
    Time for CFA sanity check:    0.230s
    Time for post-processing:     0.886s
      Time for var class.:        0.407s
Time for Analysis:               24.092s
CPU time for analysis:           24.090s
Total time for CPAchecker:       29.780s
Total CPU time for CPAchecker:   29.770s
Time for statistics:              0.104s

Time for Garbage Collector:       0.955s (in 50 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 98MB (    93 MiB) max;     56MB (    54 MiB) avg;    105MB (   100 MiB) peak
Used non-heap memory:             40MB (    38 MiB) max;     35MB (    33 MiB) avg;     40MB (    38 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        42MB (    40 MiB) max;     36MB (    35 MiB) avg
Total process virtual memory:   8086MB (  7712 MiB) max;   8072MB (  7698 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
