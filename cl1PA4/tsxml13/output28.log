scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.16-rc1/205_9a_array_safes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--usb--rtl8150.ko-entry_point_true-unreach-call.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_l_gb3bgp/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

line 7290: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp = ldv_zalloc(32UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 7292: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___0 = ldv_zalloc(44UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 7300: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___4 = ldv_zalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ndo_uninit_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ndo_init_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function eth_change_mtu to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function eth_validate_addr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ethtool_op_get_link to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_reset_resume_1 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function alloc_etherdev_mqs to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tasklet_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __raw_spin_lock_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_alloc_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_free_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function register_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _dev_info to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netif_device_detach to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_kill_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tasklet_kill to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function unregister_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netif_device_attach to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_submit_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netif_carrier_off to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_netdev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netif_carrier_on to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __printk_ratelimit to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_warn to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function skb_put to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __tasklet_schedule to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_deregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            12458 (18% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  10238 (82%)
  Because of loop head:            2195 (18%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         25 (0%)
  Times precision was empty:       6536 (52%)
  Times precision was {false}:     385 (3%)
  Times result was cached:         4411 (35%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      1126 (9%)
  Times result was 'false':        451 (4%)
Number of strengthen sat checks:   0
Number of coverage checks:         13546
  BDD entailment checks:           5434
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       38
Number of predicates discovered:          36
Number of abstraction locations:          105
Max number of predicates per location:    14
Avg number of predicates per location:    2
Total predicates per abstraction:         15138
Max number of predicates per abstraction: 13
Avg number of predicates per abstraction: 10.02
Number of irrelevant predicates:          5823 (38%)
Number of preds handled by boolean abs:   3327 (22%)
  Total number of models for allsat:      2441
  Max number of models for allsat:        12
  Avg number of models for allsat:        2.17

Time for post operator:                  8.295s
  Time for path formula creation:        8.077s
Time for strengthen operator:            0.188s
Time for prec operator:                  7.445s
  Time for abstraction:                  6.938s (Max:     0.031s, Count: 12458)
    Boolean abstraction:                 2.526s
    Solving time:                        1.984s (Max:     0.017s)
    Model enumeration time:              0.412s
    Time for BDD construction:           0.196s (Max:     0.015s)
Time for merge operator:                 0.594s
Time for coverage check:                 0.074s
  Time for BDD entailment checks:        0.058s
Total time for SMT solver (w/o itp):     2.396s

Number of path formula cache hits:   26540 (36%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     7.537s

Total number of created targets for pointer analysis: 7132
   Number of created targets for uf: *(void)* is 1569
   Number of created targets for uf: *signed_int is 34
   Number of created targets for uf: *(unsigned_char)* is 25
   Number of created targets for uf: *(struct_device)* is 76
   Number of created targets for uf: *unsigned_int is 58


Number of BDD nodes:                               1968
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        3890 (count: 21486, min: 0, max: 595, avg: 0.18)
Time for BDD node cleanup:                             0.025s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.614s
  Time for transition matches:                         0.263s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.000s
Automaton transfers with branching:                0
Automaton transfer successors:                        69312 (count: 69312, min: 1, max: 1, avg: 1.00) [1 x 69312]

CPA algorithm statistics
------------------------
Number of iterations:            48790
Max size of waitlist:            122
Average size of waitlist:        85
Number of computed successors:   57071
Max successors for one state:    2
Number of times merged:          4056
Number of times stopped:         6289
Number of times breaked:         25

Total time for CPA algorithm:        22.568s (Max:     2.110s)
  Time for choose from waitlist:      0.170s
  Time for precision adjustment:      8.739s
  Time for transfer relation:        11.164s
  Time for merge operator:            0.925s
  Time for stop operator:             0.335s
  Time for adding to reached set:     0.281s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   25
Avg. length of target path (in blocks):                1864 (count: 25, min: 26, max: 114, avg: 74.56)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   1.870s
  Counterexample analysis:                             1.436s (Max:     0.098s, Calls: 25)
    Refinement sat check:                              0.780s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.012s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.068s
  Precision update:                                    0.055s
  ARG update:                                          0.255s

Length of refined path (in blocks):                    1537 (count: 25, min: 18, max: 103, avg: 61.48)
Number of affected states:                              718 (count: 25, min: 1, max: 88, avg: 28.72)
Length (states) of path with itp 'true':                794 (count: 25, min: 0, max: 81, avg: 31.76)
Length (states) of path with itp non-trivial itp:       718 (count: 25, min: 1, max: 88, avg: 28.72)
Length (states) of path with itp 'false':                25 (count: 25, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:          36 (count: 25, min: 0, max: 4, avg: 1.44)
Equal non-trivial interpolants along paths:             657 (count: 25, min: 0, max: 86, avg: 26.28)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                25
Number of successful refinements:     25
Number of failed refinements:         0
Max. size of reached set before ref.: 4845
Max. size of reached set after ref.:  1056
Avg. size of reached set before ref.: 2387.32
Avg. size of reached set after ref.:  393.40

Total time for CEGAR algorithm:      24.638s
Time for refinements:                 2.061s
Average time for refinement:          0.082s
Max time for refinement:              0.123s

Code Coverage
-----------------------------
  Function coverage:      0.129
  Visited lines:          1121
  Total lines:            2175
  Line coverage:          0.515
  Visited conditions:     138
  Total conditions:       404
  Condition coverage:     0.342

CPAchecker general statistics
-----------------------------
Number of program locations:     2926
Number of CFA edges:             3205
Number of relevant variables:    336
Number of functions:             116
Number of loops:                 12
Size of reached set:             482
  Number of reached locations:   240 (8%)
    Avg states per location:     2
    Max states per location:     9 (at node N126)
  Number of reached functions:   15 (13%)
  Number of partitions:          481
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N1474 (before line 7314), Function main called from node N1427, stack depth 1 [31e32ea2], stack [main]])
  Number of target states:       0
  Size of final wait list        52

Time for analysis setup:          5.566s
  Time for loading CPAs:          0.948s
  Time for loading parser:        0.722s
  Time for CFA construction:      3.752s
    Time for parsing file(s):     1.069s
    Time for AST to CFA:          1.366s
    Time for CFA sanity check:    0.223s
    Time for post-processing:     0.892s
      Time for var class.:        0.398s
Time for Analysis:               24.639s
CPU time for analysis:           24.640s
Total time for CPAchecker:       30.209s
Total CPU time for CPAchecker:   30.200s
Time for statistics:              0.092s

Time for Garbage Collector:       0.531s (in 35 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 82MB (    78 MiB) max;     51MB (    48 MiB) avg;     86MB (    82 MiB) peak
Used non-heap memory:             40MB (    38 MiB) max;     35MB (    33 MiB) avg;     40MB (    38 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        42MB (    40 MiB) max;     37MB (    35 MiB) avg
Total process virtual memory:   8087MB (  7712 MiB) max;   8072MB (  7698 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
