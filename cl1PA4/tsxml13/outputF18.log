scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.16-rc1/205_9a_array_safes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--usb--rtl8150.ko-entry_point_true-unreach-call.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_lffgtrbw/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

line 7290: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp = ldv_zalloc(32UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 7292: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___0 = ldv_zalloc(44UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 7300: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___4 = ldv_zalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ndo_uninit_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ndo_init_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function eth_change_mtu to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function eth_validate_addr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ethtool_op_get_link to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_reset_resume_1 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function alloc_etherdev_mqs to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_deregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function capable to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_warn to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_unlink_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strlcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snprintf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tasklet_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __raw_spin_lock_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_alloc_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_free_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_submit_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netif_device_detach to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_kill_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netif_device_attach to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_netdev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _dev_info to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __netif_schedule to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tasklet_kill to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function unregister_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function register_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netif_carrier_on to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netif_carrier_off to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __printk_ratelimit to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function skb_put to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __tasklet_schedule to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            1566209 (21% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  1417813 (91%)
  Because of loop head:            148157 (9%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         239 (0%)
  Times precision was empty:       302044 (19%)
  Times precision was {false}:     11075 (1%)
  Times result was cached:         1195384 (76%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      57706 (4%)
  Times result was 'false':        52931 (3%)
Number of strengthen sat checks:   0
Number of coverage checks:         1747383
  BDD entailment checks:           1021757
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       38
Number of predicates discovered:          38
Number of abstraction locations:          227
Max number of predicates per location:    21
Avg number of predicates per location:    4
Total predicates per abstraction:         6382957
Max number of predicates per abstraction: 21
Avg number of predicates per abstraction: 92.80
Number of irrelevant predicates:          3374125 (53%)
Number of preds handled by boolean abs:   256437 (4%)
  Total number of models for allsat:      593399
  Max number of models for allsat:        3200
  Avg number of models for allsat:        10.28

Time for post operator:                 95.032s
  Time for path formula creation:       90.844s
Time for strengthen operator:            7.441s
Time for prec operator:                585.320s
  Time for abstraction:                565.292s (Max:     2.494s, Count: 1566209)
    Boolean abstraction:               232.875s
    Solving time:                       69.930s (Max:     0.018s)
    Model enumeration time:            147.580s
    Time for BDD construction:          16.414s (Max:     0.239s)
Time for merge operator:                 7.300s
Time for coverage check:                 1.493s
  Time for BDD entailment checks:        1.258s
Total time for SMT solver (w/o itp):   217.511s

Number of path formula cache hits:   7870753 (86%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    62.699s

Total number of created targets for pointer analysis: 187544
   Number of created targets for uf: *(void)* is 4242
   Number of created targets for uf: *unsigned_short_int is 229
   Number of created targets for uf: *signed_int is 86
   Number of created targets for uf: *unsigned_char is 4702
   Number of created targets for uf: *(unsigned_char)* is 271
   Number of created targets for uf: *(struct_device)* is 595
   Number of created targets for uf: *unsigned_int is 141


Number of BDD nodes:                               213303
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                      143109 (count: 1751558, min: 0, max: 1900, avg: 0.08)
Time for BDD node cleanup:                             0.339s
Time for BDD garbage collection:                       0.093s (in 2 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                 10.525s
  Time for transition matches:                         5.811s
  Time for transition assertions:                      0.003s
  Time for transition actions:                         0.003s
Automaton transfers with branching:                0
Automaton transfer successors:                      7621811 (count: 7621811, min: 1, max: 1, avg: 1.00) [1 x 7621811]

CPA algorithm statistics
------------------------
Number of iterations:            5296686
Max size of waitlist:            2782
Average size of waitlist:        866
Number of computed successors:   5962056
Max successors for one state:    2
Number of times merged:          362813
Number of times stopped:         531625
Number of times breaked:         239

Total time for CPA algorithm:       856.176s (Max:    27.141s)
  Time for choose from waitlist:      2.235s
  Time for precision adjustment:    631.169s
  Time for transfer relation:       173.858s
  Time for merge operator:           13.472s
  Time for stop operator:             8.896s
  Time for adding to reached set:    10.097s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   239
Avg. length of target path (in blocks):               19520 (count: 239, min: 26, max: 143, avg: 81.67)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  23.296s
  Counterexample analysis:                            10.193s (Max:     0.240s, Calls: 239)
    Refinement sat check:                              5.298s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.017s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.147s
  Precision update:                                    0.182s
  ARG update:                                         12.572s

Length of refined path (in blocks):                   16832 (count: 239, min: 18, max: 132, avg: 70.43)
Number of affected states:                             8192 (count: 239, min: 0, max: 125, avg: 34.28)
Length (states) of path with itp 'true':               8401 (count: 239, min: 0, max: 107, avg: 35.15)
Length (states) of path with itp non-trivial itp:      8192 (count: 239, min: 0, max: 125, avg: 34.28)
Length (states) of path with itp 'false':               239 (count: 239, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:         248 (count: 239, min: 0, max: 8, avg: 1.04)
Equal non-trivial interpolants along paths:            7706 (count: 239, min: 0, max: 116, avg: 32.24)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                239
Number of successful refinements:     239
Number of failed refinements:         0
Max. size of reached set before ref.: 165562
Max. size of reached set after ref.:  160144
Avg. size of reached set before ref.: 46788.61
Avg. size of reached set after ref.:  24565.17

Total time for CEGAR algorithm:     894.596s
Time for refinements:                33.251s
Average time for refinement:          0.139s
Max time for refinement:              1.093s

Code Coverage
-----------------------------
  Function coverage:      0.672
  Visited lines:          1880
  Total lines:            2175
  Line coverage:          0.864
  Visited conditions:     334
  Total conditions:       404
  Condition coverage:     0.827

CPAchecker general statistics
-----------------------------
Number of program locations:     2926
Number of CFA edges:             3205
Number of relevant variables:    336
Number of functions:             116
Number of loops:                 12
Size of reached set:             66099
  Number of reached locations:   1012 (35%)
    Avg states per location:     65
    Max states per location:     1351 (at node N326)
  Number of reached functions:   78 (67%)
  Number of partitions:          65235
    Avg size of partitions:      1
    Max size of partitions:      57 (with key [N1474 (before line 7314), Function main called from node N1427, stack depth 1 [5b5c0057], stack [main]])
  Number of target states:       0
  Size of final wait list        1286

Time for analysis setup:          5.665s
  Time for loading CPAs:          0.948s
  Time for loading parser:        0.684s
  Time for CFA construction:      3.928s
    Time for parsing file(s):     1.084s
    Time for AST to CFA:          1.460s
    Time for CFA sanity check:    0.216s
    Time for post-processing:     0.964s
      Time for var class.:        0.427s
Time for Analysis:              894.596s
CPU time for analysis:          894.510s
Total time for CPAchecker:      900.266s
Total CPU time for CPAchecker:  900.160s
Time for statistics:              0.932s

Time for Garbage Collector:      66.740s (in 788 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:               1163MB (  1109 MiB) max;    523MB (   499 MiB) avg;   1208MB (  1152 MiB) peak
Used non-heap memory:             41MB (    39 MiB) max;     40MB (    38 MiB) avg;     41MB (    39 MiB) peak
Allocated heap memory:          1259MB (  1200 MiB) max;    774MB (   738 MiB) avg
Allocated non-heap memory:        43MB (    41 MiB) max;     43MB (    41 MiB) avg
Total process virtual memory:   9505MB (  9065 MiB) max;   8676MB (  8274 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
