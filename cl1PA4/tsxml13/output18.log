scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.16-rc1/205_9a_array_safes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--usb--rtl8150.ko-entry_point_true-unreach-call.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_3w7o3vo1/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

line 7290: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp = ldv_zalloc(32UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 7292: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___0 = ldv_zalloc(44UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 7300: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___4 = ldv_zalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ndo_uninit_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ndo_init_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function eth_change_mtu to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function eth_validate_addr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ethtool_op_get_link to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_reset_resume_1 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function alloc_etherdev_mqs to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_deregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function capable to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_warn to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_unlink_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strlcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snprintf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tasklet_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __raw_spin_lock_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_alloc_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_free_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_submit_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netif_device_detach to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_kill_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netif_device_attach to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_netdev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _dev_info to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __netif_schedule to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tasklet_kill to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function unregister_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function register_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            29843 (21% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  27554 (92%)
  Because of loop head:            2258 (8%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         31 (0%)
  Times precision was empty:       24966 (84%)
  Times precision was {false}:     620 (2%)
  Times result was cached:         3990 (13%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      267 (1%)
  Times result was 'false':        614 (2%)
Number of strengthen sat checks:   0
Number of coverage checks:         17076
  BDD entailment checks:           4014
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       38
Number of predicates discovered:          8
Number of abstraction locations:          58
Max number of predicates per location:    5
Avg number of predicates per location:    1
Total predicates per abstraction:         7793
Max number of predicates per abstraction: 5
Avg number of predicates per abstraction: 8.79
Number of irrelevant predicates:          5575 (72%)
Number of preds handled by boolean abs:   428 (5%)
  Total number of models for allsat:      589
  Max number of models for allsat:        16
  Avg number of models for allsat:        2.21

Time for post operator:                  8.169s
  Time for path formula creation:        7.941s
Time for strengthen operator:            0.356s
Time for prec operator:                  5.068s
  Time for abstraction:                  4.106s (Max:     0.039s, Count: 29843)
    Boolean abstraction:                 0.905s
    Solving time:                        0.763s (Max:     0.027s)
    Model enumeration time:              0.261s
    Time for BDD construction:           0.138s (Max:     0.012s)
Time for merge operator:                 0.605s
Time for coverage check:                 0.081s
  Time for BDD entailment checks:        0.061s
Total time for SMT solver (w/o itp):     1.024s

Number of path formula cache hits:   115038 (69%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     7.207s

Total number of created targets for pointer analysis: 4071
   Number of created targets for uf: *(void)* is 692
   Number of created targets for uf: *unsigned_short_int is 3
   Number of created targets for uf: *signed_int is 2
   Number of created targets for uf: *unsigned_char is 76
   Number of created targets for uf: *(unsigned_char)* is 2
   Number of created targets for uf: *(struct_device)* is 3
   Number of created targets for uf: *unsigned_int is 4


Number of BDD nodes:                               335
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         625 (count: 33827, min: 0, max: 74, avg: 0.02)
Time for BDD node cleanup:                             0.023s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.578s
  Time for transition matches:                         0.278s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.002s
Automaton transfers with branching:                0
Automaton transfer successors:                       142792 (count: 142792, min: 1, max: 1, avg: 1.00) [1 x 142792]

CPA algorithm statistics
------------------------
Number of iterations:            98271
Max size of waitlist:            202
Average size of waitlist:        75
Number of computed successors:   109971
Max successors for one state:    2
Number of times merged:          6531
Number of times stopped:         9497
Number of times breaked:         31

Total time for CPA algorithm:        22.912s (Max:     2.184s)
  Time for choose from waitlist:      0.175s
  Time for precision adjustment:      6.921s
  Time for transfer relation:        12.547s
  Time for merge operator:            1.000s
  Time for stop operator:             0.456s
  Time for adding to reached set:     0.503s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   31
Avg. length of target path (in blocks):                1269 (count: 31, min: 26, max: 59, avg: 40.94)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   1.492s
  Counterexample analysis:                             0.823s (Max:     0.039s, Calls: 31)
    Refinement sat check:                              0.531s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.014s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.032s
  Precision update:                                    0.054s
  ARG update:                                          0.497s

Length of refined path (in blocks):                     961 (count: 31, min: 18, max: 53, avg: 31.00)
Number of affected states:                              346 (count: 31, min: 1, max: 38, avg: 11.16)
Length (states) of path with itp 'true':                584 (count: 31, min: 14, max: 42, avg: 18.84)
Length (states) of path with itp non-trivial itp:       346 (count: 31, min: 1, max: 38, avg: 11.16)
Length (states) of path with itp 'false':                31 (count: 31, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           7 (count: 31, min: 0, max: 1, avg: 0.23)
Equal non-trivial interpolants along paths:             308 (count: 31, min: 0, max: 36, avg: 9.94)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                31
Number of successful refinements:     31
Number of failed refinements:         0
Max. size of reached set before ref.: 9733
Max. size of reached set after ref.:  4153
Avg. size of reached set before ref.: 3885.00
Avg. size of reached set after ref.:  702.39

Total time for CEGAR algorithm:      24.742s
Time for refinements:                 1.806s
Average time for refinement:          0.058s
Max time for refinement:              0.143s

Code Coverage
-----------------------------
  Function coverage:      0.414
  Visited lines:          1383
  Total lines:            2175
  Line coverage:          0.636
  Visited conditions:     182
  Total conditions:       404
  Condition coverage:     0.450

CPAchecker general statistics
-----------------------------
Number of program locations:     2926
Number of CFA edges:             3205
Number of relevant variables:    336
Number of functions:             116
Number of loops:                 12
Size of reached set:             1198
  Number of reached locations:   491 (17%)
    Avg states per location:     2
    Max states per location:     15 (at node N131)
  Number of reached functions:   48 (41%)
  Number of partitions:          1197
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N1474 (before line 7314), Function main called from node N1427, stack depth 1 [31e32ea2], stack [main]])
  Number of target states:       0
  Size of final wait list        28

Time for analysis setup:          5.503s
  Time for loading CPAs:          0.857s
  Time for loading parser:        0.762s
  Time for CFA construction:      3.783s
    Time for parsing file(s):     1.102s
    Time for AST to CFA:          1.337s
    Time for CFA sanity check:    0.215s
    Time for post-processing:     0.879s
      Time for var class.:        0.399s
Time for Analysis:               24.742s
CPU time for analysis:           24.750s
Total time for CPAchecker:       30.249s
Total CPU time for CPAchecker:   30.240s
Time for statistics:              0.083s

Time for Garbage Collector:       0.767s (in 46 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 89MB (    85 MiB) max;     52MB (    50 MiB) avg;     95MB (    90 MiB) peak
Used non-heap memory:             40MB (    38 MiB) max;     35MB (    33 MiB) avg;     41MB (    39 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        42MB (    40 MiB) max;     37MB (    35 MiB) avg
Total process virtual memory:   8086MB (  7711 MiB) max;   8072MB (  7698 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
