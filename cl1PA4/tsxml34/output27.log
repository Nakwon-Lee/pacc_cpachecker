scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.16-rc1/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--block--paride--pt.ko-entry_point_true-unreach-call.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_qe3ttek1/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 3647: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 3692: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 4478: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 4663: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

line 4937: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp = ldv_zalloc(8UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 4951: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___6 = ldv_zalloc(8UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function noop_llseek to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_final_state to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function class_destroy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_destroy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 3385: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((const void *)to, 0); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function __builtin_object_size to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function might_fault to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock_nested to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_connect to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __unregister_chrdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _copy_from_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snprintf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function schedule_timeout_interruptible to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_release to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __register_chrdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __copy_from_user_overflow to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_write_regr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_read_regr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_disconnect to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __class_create to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_create to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_write_block to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_read_block to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 3410: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size(from, 0); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function _copy_to_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __copy_to_user_overflow to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            20851 (18% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  18120 (87%)
  Because of loop head:            2724 (13%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         7 (0%)
  Times precision was empty:       20754 (100%)
  Times precision was {false}:     23 (0%)
  Times result was cached:         53 (0%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      21 (0%)
  Times result was 'false':        10 (0%)
Number of strengthen sat checks:   0
Number of coverage checks:         15215
  BDD entailment checks:           2847
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       39
Number of predicates discovered:          3
Number of abstraction locations:          10
Max number of predicates per location:    2
Avg number of predicates per location:    1
Total predicates per abstraction:         119
Max number of predicates per abstraction: 2
Avg number of predicates per abstraction: 2.70
Number of irrelevant predicates:          76 (64%)
Number of preds handled by boolean abs:   23 (19%)
  Total number of models for allsat:      24
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.14

Time for post operator:                 12.003s
  Time for path formula creation:       11.701s
Time for strengthen operator:            0.395s
Time for prec operator:                  1.587s
  Time for abstraction:                  0.770s (Max:     0.093s, Count: 20851)
    Boolean abstraction:                 0.130s
    Solving time:                        0.103s (Max:     0.070s)
    Model enumeration time:              0.015s
    Time for BDD construction:           0.016s (Max:     0.013s)
Time for merge operator:                 0.849s
Time for coverage check:                 0.066s
  Time for BDD entailment checks:        0.055s
Total time for SMT solver (w/o itp):     0.118s

Number of path formula cache hits:   71634 (55%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    10.947s

Total number of created targets for pointer analysis: 53350
   Number of created targets for uf: *(struct_pi_adapter)* is 21
   Number of created targets for uf: *signed_int is 981
   Number of created targets for uf: *(char)* is 21
   Number of created targets for uf: *char is 1433


Number of BDD nodes:                               203
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                          54 (count: 23855, min: 0, max: 30, avg: 0.00)
Time for BDD node cleanup:                             0.039s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.652s
  Time for transition matches:                         0.356s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.000s
Automaton transfers with branching:                0
Automaton transfer successors:                       116769 (count: 116769, min: 1, max: 1, avg: 1.00) [1 x 116769]

CPA algorithm statistics
------------------------
Number of iterations:            67860
Max size of waitlist:            401
Average size of waitlist:        204
Number of computed successors:   77874
Max successors for one state:    2
Number of times merged:          6184
Number of times stopped:         8999
Number of times breaked:         7

Total time for CPA algorithm:        23.488s (Max:     4.392s)
  Time for choose from waitlist:      0.291s
  Time for precision adjustment:      3.314s
  Time for transfer relation:        16.326s
  Time for merge operator:            1.359s
  Time for stop operator:             0.420s
  Time for adding to reached set:     0.584s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   7
Avg. length of target path (in blocks):                 302 (count: 7, min: 35, max: 51, avg: 43.14)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.976s
  Counterexample analysis:                             0.478s (Max:     0.112s, Calls: 7)
    Refinement sat check:                              0.389s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.015s
  Precision update:                                    0.012s
  ARG update:                                          0.455s

Length of refined path (in blocks):                     155 (count: 7, min: 10, max: 34, avg: 22.14)
Number of affected states:                               12 (count: 7, min: 0, max: 10, avg: 1.71)
Length (states) of path with itp 'true':                136 (count: 7, min: 0, max: 33, avg: 19.43)
Length (states) of path with itp non-trivial itp:        12 (count: 7, min: 0, max: 10, avg: 1.71)
Length (states) of path with itp 'false':                 7 (count: 7, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 7, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:               9 (count: 7, min: 0, max: 9, avg: 1.29)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                7
Number of successful refinements:     7
Number of failed refinements:         0
Max. size of reached set before ref.: 30122
Max. size of reached set after ref.:  15180
Avg. size of reached set before ref.: 14825.71
Avg. size of reached set after ref.:  5800.14

Total time for CEGAR algorithm:      24.839s
Time for refinements:                 1.285s
Average time for refinement:          0.183s
Max time for refinement:              0.320s

Code Coverage
-----------------------------
  Function coverage:      0.689
  Visited lines:          1397
  Total lines:            1701
  Line coverage:          0.821
  Visited conditions:     216
  Total conditions:       332
  Condition coverage:     0.651

CPAchecker general statistics
-----------------------------
Number of program locations:     2171
Number of CFA edges:             2399
Number of relevant variables:    299
Number of functions:             61
Number of loops:                 18
Size of reached set:             5687
  Number of reached locations:   638 (29%)
    Avg states per location:     8
    Max states per location:     158 (at node N176)
  Number of reached functions:   42 (69%)
  Number of partitions:          5685
    Avg size of partitions:      1
    Max size of partitions:      3 (with key [N1506 (before line 4962), Function main called from node N1457, stack depth 1 [44ea608c], stack [main]])
  Number of target states:       0
  Size of final wait list        171

Time for analysis setup:          4.919s
  Time for loading CPAs:          0.914s
  Time for loading parser:        0.643s
  Time for CFA construction:      3.243s
    Time for parsing file(s):     0.981s
    Time for AST to CFA:          1.098s
    Time for CFA sanity check:    0.177s
    Time for post-processing:     0.770s
      Time for var class.:        0.336s
Time for Analysis:               24.839s
CPU time for analysis:           24.840s
Total time for CPAchecker:       29.762s
Total CPU time for CPAchecker:   29.750s
Time for statistics:              0.214s

Time for Garbage Collector:       1.293s (in 40 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                121MB (   115 MiB) max;     62MB (    59 MiB) avg;    126MB (   120 MiB) peak
Used non-heap memory:             39MB (    38 MiB) max;     35MB (    33 MiB) avg;     40MB (    38 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        41MB (    39 MiB) max;     37MB (    35 MiB) avg
Total process virtual memory:   8088MB (  7714 MiB) max;   8074MB (  7700 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
