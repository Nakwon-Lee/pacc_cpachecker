scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.16-rc1/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--block--paride--pt.ko-entry_point_true-unreach-call.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_v25z3ffo/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 3647: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 3692: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 4478: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 4663: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

line 4937: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp = ldv_zalloc(8UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 4951: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___6 = ldv_zalloc(8UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function noop_llseek to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_final_state to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_connect to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function class_destroy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_destroy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 3385: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((const void *)to, 0); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function __builtin_object_size to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function might_fault to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_release to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __register_chrdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __unregister_chrdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function schedule_timeout_interruptible to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snprintf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock_nested to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_write_regr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_read_regr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_disconnect to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_write_block to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_read_block to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            12712 (15% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  11128 (88%)
  Because of loop head:            1572 (12%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         12 (0%)
  Times precision was empty:       11329 (89%)
  Times precision was {false}:     199 (2%)
  Times result was cached:         1032 (8%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      152 (1%)
  Times result was 'false':        102 (1%)
Number of strengthen sat checks:   0
Number of coverage checks:         11526
  BDD entailment checks:           2234
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       39
Number of predicates discovered:          4
Number of abstraction locations:          34
Max number of predicates per location:    3
Avg number of predicates per location:    1
Total predicates per abstraction:         1910
Max number of predicates per abstraction: 3
Avg number of predicates per abstraction: 5.44
Number of irrelevant predicates:          1410 (74%)
Number of preds handled by boolean abs:   192 (10%)
  Total number of models for allsat:      167
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.10

Time for post operator:                 10.710s
  Time for path formula creation:       10.527s
Time for strengthen operator:            0.235s
Time for prec operator:                  5.834s
  Time for abstraction:                  5.283s (Max:     0.076s, Count: 12712)
    Boolean abstraction:                 1.515s
    Solving time:                        3.351s (Max:     0.062s)
    Model enumeration time:              0.125s
    Time for BDD construction:           0.028s (Max:     0.008s)
Time for merge operator:                 0.921s
Time for coverage check:                 0.086s
  Time for BDD entailment checks:        0.078s
Total time for SMT solver (w/o itp):     3.476s

Number of path formula cache hits:   32335 (36%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     9.883s

Total number of created targets for pointer analysis: 78535
   Number of created targets for uf: *(struct_pi_adapter)* is 97
   Number of created targets for uf: *signed_int is 4769
   Number of created targets for uf: *(char)* is 77
   Number of created targets for uf: *char is 12343


Number of BDD nodes:                               210
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         328 (count: 15503, min: 0, max: 65, avg: 0.02)
Time for BDD node cleanup:                             0.007s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.460s
Automaton transfers with branching:                0
Automaton transfer successors:                        84090 (count: 84090, min: 1, max: 1, avg: 1.00) [1 x 84090]

CPA algorithm statistics
------------------------
Number of iterations:            46773
Max size of waitlist:            116
Average size of waitlist:        58
Number of computed successors:   54232
Max successors for one state:    2
Number of times merged:          4646
Number of times stopped:         6534
Number of times breaked:         12

Total time for CPA algorithm:        23.332s (Max:     4.212s)
  Time for choose from waitlist:      0.202s
  Time for precision adjustment:      6.893s
  Time for transfer relation:        13.509s
  Time for merge operator:            1.200s
  Time for stop operator:             0.327s
  Time for adding to reached set:     0.380s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   12
Avg. length of target path (in blocks):                 691 (count: 12, min: 35, max: 75, avg: 57.58)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   1.301s
  Counterexample analysis:                             1.007s (Max:     0.162s, Calls: 12)
    Refinement sat check:                              0.816s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.001s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.036s
  Precision update:                                    0.024s
  ARG update:                                          0.220s

Length of refined path (in blocks):                     236 (count: 12, min: 10, max: 35, avg: 19.67)
Number of affected states:                              125 (count: 12, min: 0, max: 27, avg: 10.42)
Length (states) of path with itp 'true':                 99 (count: 12, min: 0, max: 27, avg: 8.25)
Length (states) of path with itp non-trivial itp:       125 (count: 12, min: 0, max: 27, avg: 10.42)
Length (states) of path with itp 'false':                12 (count: 12, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 12, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:             114 (count: 12, min: 0, max: 26, avg: 9.50)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                12
Number of successful refinements:     12
Number of failed refinements:         0
Max. size of reached set before ref.: 11842
Max. size of reached set after ref.:  970
Avg. size of reached set before ref.: 3099.42
Avg. size of reached set after ref.:  113.58

Total time for CEGAR algorithm:      24.823s
Time for refinements:                 1.481s
Average time for refinement:          0.123s
Max time for refinement:              0.224s

Code Coverage
-----------------------------
  Function coverage:      0.656
  Visited lines:          1374
  Total lines:            1701
  Line coverage:          0.808
  Visited conditions:     222
  Total conditions:       332
  Condition coverage:     0.669

CPAchecker general statistics
-----------------------------
Number of program locations:     2171
Number of CFA edges:             2399
Number of relevant variables:    299
Number of functions:             61
Number of loops:                 18
Size of reached set:             11766
  Number of reached locations:   616 (28%)
    Avg states per location:     19
    Max states per location:     616 (at node N169)
  Number of reached functions:   40 (66%)
  Number of partitions:          11753
    Avg size of partitions:      1
    Max size of partitions:      3 (with key [N1506 (before line 4962), Function main called from node N1457, stack depth 1 [315ba14a], stack [main]])
  Number of target states:       0
  Size of final wait list        63

Time for analysis setup:          5.417s
  Time for loading CPAs:          1.071s
  Time for loading parser:        0.733s
  Time for CFA construction:      3.448s
    Time for parsing file(s):     0.989s
    Time for AST to CFA:          1.227s
    Time for CFA sanity check:    0.192s
    Time for post-processing:     0.816s
      Time for var class.:        0.364s
Time for Analysis:               24.823s
CPU time for analysis:           24.810s
Total time for CPAchecker:       30.252s
Total CPU time for CPAchecker:   30.230s
Time for statistics:              0.299s

Time for Garbage Collector:       0.788s (in 39 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 94MB (    89 MiB) max;     50MB (    48 MiB) avg;     99MB (    95 MiB) peak
Used non-heap memory:             39MB (    37 MiB) max;     34MB (    33 MiB) avg;     39MB (    37 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        41MB (    39 MiB) max;     36MB (    35 MiB) avg
Total process virtual memory:   8083MB (  7709 MiB) max;   8071MB (  7697 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
