scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.16-rc1/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--block--paride--pt.ko-entry_point_true-unreach-call.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_zxfg3sw4/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 3647: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 3692: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 4478: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 4663: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

line 4937: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp = ldv_zalloc(8UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 4951: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___6 = ldv_zalloc(8UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function noop_llseek to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_final_state to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_connect to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function class_destroy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_destroy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 3385: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((const void *)to, 0); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function __builtin_object_size to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function might_fault to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_release to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __register_chrdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __unregister_chrdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function schedule_timeout_interruptible to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snprintf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock_nested to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_write_regr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_read_regr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_disconnect to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_write_block to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_read_block to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __class_create to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 3410: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size(from, 0); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function _copy_to_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __copy_to_user_overflow to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _copy_from_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __copy_from_user_overflow to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            1649975 (18% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  1461760 (89%)
  Because of loop head:            188133 (11%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         82 (0%)
  Times precision was empty:       127355 (8%)
  Times precision was {false}:     6322 (0%)
  Times result was cached:         1507142 (91%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      9156 (1%)
  Times result was 'false':        6964 (0%)
Number of strengthen sat checks:   0
Number of coverage checks:         1541976
  BDD entailment checks:           266704
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       39
Number of predicates discovered:          6
Number of abstraction locations:          113
Max number of predicates per location:    6
Avg number of predicates per location:    2
Total predicates per abstraction:         4225445
Max number of predicates per abstraction: 6
Avg number of predicates per abstraction: 273.00
Number of irrelevant predicates:          2327364 (55%)
Number of preds handled by boolean abs:   14862 (0%)
  Total number of models for allsat:      10398
  Max number of models for allsat:        6
  Avg number of models for allsat:        1.14

Time for post operator:                234.786s
  Time for path formula creation:      229.577s
Time for strengthen operator:            9.029s
Time for prec operator:                377.444s
  Time for abstraction:                352.783s (Max:     6.670s, Count: 1649975)
    Boolean abstraction:                57.641s
    Solving time:                       82.169s (Max:     0.273s)
    Model enumeration time:              5.970s
    Time for BDD construction:           0.298s (Max:     0.008s)
Time for merge operator:                23.757s
Time for coverage check:                 0.568s
  Time for BDD entailment checks:        0.365s
Total time for SMT solver (w/o itp):    88.139s

Number of path formula cache hits:   7551749 (70%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:   185.846s

Total number of created targets for pointer analysis: 2582345
   Number of created targets for uf: *(struct_pi_adapter)* is 853
   Number of created targets for uf: *signed_int is 45251
   Number of created targets for uf: *(char)* is 5
   Number of created targets for uf: *char is 719209


Number of BDD nodes:                               645
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       18201 (count: 480879, min: 0, max: 830, avg: 0.04)
Time for BDD node cleanup:                             0.107s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                 14.169s
  Time for transition matches:                         7.736s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.002s
Automaton transfers with branching:                0
Automaton transfer successors:                      9362899 (count: 9362899, min: 1, max: 1, avg: 1.00) [1 x 9362899]

CPA algorithm statistics
------------------------
Number of iterations:            5806438
Max size of waitlist:            418
Average size of waitlist:        119
Number of computed successors:   6715239
Max successors for one state:    2
Number of times merged:          637636
Number of times stopped:         894136
Number of times breaked:         82

Total time for CPA algorithm:       862.834s (Max:    94.934s)
  Time for choose from waitlist:      3.065s
  Time for precision adjustment:    437.400s
  Time for transfer relation:       346.141s
  Time for merge operator:           32.927s
  Time for stop operator:             9.282s
  Time for adding to reached set:    14.239s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   82
Avg. length of target path (in blocks):                8739 (count: 82, min: 35, max: 241, avg: 106.57)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  26.148s
  Counterexample analysis:                             8.840s (Max:     0.346s, Calls: 82)
    Refinement sat check:                              6.751s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.009s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.084s
  Precision update:                                    0.059s
  ARG update:                                         17.034s

Length of refined path (in blocks):                    5933 (count: 82, min: 10, max: 194, avg: 72.35)
Number of affected states:                             5197 (count: 82, min: 0, max: 193, avg: 63.38)
Length (states) of path with itp 'true':                654 (count: 82, min: 0, max: 106, avg: 7.98)
Length (states) of path with itp non-trivial itp:      5197 (count: 82, min: 0, max: 193, avg: 63.38)
Length (states) of path with itp 'false':                82 (count: 82, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 82, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:            5122 (count: 82, min: 0, max: 192, avg: 62.46)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                82
Number of successful refinements:     82
Number of failed refinements:         0
Max. size of reached set before ref.: 514101
Max. size of reached set after ref.:  173643
Avg. size of reached set before ref.: 84264.45
Avg. size of reached set after ref.:  13484.57

Total time for CEGAR algorithm:     895.197s
Time for refinements:                31.316s
Average time for refinement:          0.381s
Max time for refinement:              2.359s

Code Coverage
-----------------------------
  Function coverage:      0.459
  Visited lines:          1154
  Total lines:            1701
  Line coverage:          0.678
  Visited conditions:     168
  Total conditions:       332
  Condition coverage:     0.506

CPAchecker general statistics
-----------------------------
Number of program locations:     2171
Number of CFA edges:             2399
Number of relevant variables:    299
Number of functions:             61
Number of loops:                 18
Size of reached set:             10190
  Number of reached locations:   460 (21%)
    Avg states per location:     22
    Max states per location:     529 (at node N170)
  Number of reached functions:   28 (46%)
  Number of partitions:          10175
    Avg size of partitions:      1
    Max size of partitions:      3 (with key [N1506 (before line 4962), Function main called from node N1457, stack depth 1 [315ba14a], stack [main]])
  Number of target states:       0
  Size of final wait list        53

Time for analysis setup:          5.071s
  Time for loading CPAs:          1.023s
  Time for loading parser:        0.658s
  Time for CFA construction:      3.245s
    Time for parsing file(s):     0.925s
    Time for AST to CFA:          1.131s
    Time for CFA sanity check:    0.220s
    Time for post-processing:     0.767s
      Time for var class.:        0.318s
Time for Analysis:              895.197s
CPU time for analysis:          895.170s
Total time for CPAchecker:      900.279s
Total CPU time for CPAchecker:  900.250s
Time for statistics:              0.273s

Time for Garbage Collector:      97.983s (in 563 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:               2646MB (  2523 MiB) max;   1027MB (   979 MiB) avg;   2825MB (  2694 MiB) peak
Used non-heap memory:             45MB (    42 MiB) max;     39MB (    37 MiB) avg;     45MB (    43 MiB) peak
Allocated heap memory:          3063MB (  2921 MiB) max;   1497MB (  1428 MiB) avg
Allocated non-heap memory:        46MB (    44 MiB) max;     46MB (    44 MiB) avg
Total process virtual memory:   8429MB (  8038 MiB) max;   8215MB (  7835 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
