scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.16-rc1/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--block--paride--pt.ko-entry_point_true-unreach-call.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_son_x46m/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 3647: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 3692: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 4478: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 4663: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

line 4937: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp = ldv_zalloc(8UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 4951: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___6 = ldv_zalloc(8UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function noop_llseek to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_final_state to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function class_destroy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_destroy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 3385: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((const void *)to, 0); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function __builtin_object_size to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function might_fault to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock_nested to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_connect to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __unregister_chrdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _copy_from_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snprintf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function schedule_timeout_interruptible to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_release to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __register_chrdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __copy_from_user_overflow to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_write_regr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_read_regr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_disconnect to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __class_create to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_create to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_write_block to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_read_block to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 3410: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size(from, 0); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function _copy_to_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __copy_to_user_overflow to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            27430 (18% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  23882 (87%)
  Because of loop head:            3539 (13%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         9 (0%)
  Times precision was empty:       27325 (100%)
  Times precision was {false}:     23 (0%)
  Times result was cached:         61 (0%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      21 (0%)
  Times result was 'false':        12 (0%)
Number of strengthen sat checks:   0
Number of coverage checks:         20419
  BDD entailment checks:           3773
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       39
Number of predicates discovered:          3
Number of abstraction locations:          11
Max number of predicates per location:    2
Avg number of predicates per location:    1
Total predicates per abstraction:         127
Max number of predicates per abstraction: 2
Avg number of predicates per abstraction: 2.89
Number of irrelevant predicates:          84 (66%)
Number of preds handled by boolean abs:   23 (18%)
  Total number of models for allsat:      24
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.14

Time for post operator:                 12.018s
  Time for path formula creation:       11.676s
Time for strengthen operator:            0.267s
Time for prec operator:                  1.463s
  Time for abstraction:                  0.706s (Max:     0.077s, Count: 27430)
    Boolean abstraction:                 0.125s
    Solving time:                        0.094s (Max:     0.064s)
    Model enumeration time:              0.008s
    Time for BDD construction:           0.005s (Max:     0.001s)
Time for merge operator:                 1.083s
Time for coverage check:                 0.065s
  Time for BDD entailment checks:        0.055s
Total time for SMT solver (w/o itp):     0.102s

Number of path formula cache hits:   104567 (60%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    10.832s

Total number of created targets for pointer analysis: 62507
   Number of created targets for uf: *(struct_pi_adapter)* is 21
   Number of created targets for uf: *signed_int is 981
   Number of created targets for uf: *(char)* is 21
   Number of created targets for uf: *char is 1661


Number of BDD nodes:                               203
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                          54 (count: 31352, min: 0, max: 32, avg: 0.00)
Time for BDD node cleanup:                             0.010s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.676s
  Time for transition matches:                         0.392s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.000s
Automaton transfers with branching:                0
Automaton transfer successors:                       152888 (count: 152888, min: 1, max: 1, avg: 1.00) [1 x 152888]

CPA algorithm statistics
------------------------
Number of iterations:            89621
Max size of waitlist:            401
Average size of waitlist:        226
Number of computed successors:   102905
Max successors for one state:    2
Number of times merged:          8323
Number of times stopped:         12064
Number of times breaked:         9

Total time for CPA algorithm:        23.693s (Max:     4.374s)
  Time for choose from waitlist:      0.208s
  Time for precision adjustment:      3.438s
  Time for transfer relation:        16.301s
  Time for merge operator:            1.597s
  Time for stop operator:             0.518s
  Time for adding to reached set:     0.408s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   9
Avg. length of target path (in blocks):                 381 (count: 9, min: 35, max: 51, avg: 42.33)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   1.072s
  Counterexample analysis:                             0.574s (Max:     0.111s, Calls: 9)
    Refinement sat check:                              0.485s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.005s
  Precision update:                                    0.022s
  ARG update:                                          0.435s

Length of refined path (in blocks):                     220 (count: 9, min: 10, max: 34, avg: 24.44)
Number of affected states:                               12 (count: 9, min: 0, max: 10, avg: 1.33)
Length (states) of path with itp 'true':                199 (count: 9, min: 0, max: 33, avg: 22.11)
Length (states) of path with itp non-trivial itp:        12 (count: 9, min: 0, max: 10, avg: 1.33)
Length (states) of path with itp 'false':                 9 (count: 9, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 9, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:               9 (count: 9, min: 0, max: 9, avg: 1.00)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                9
Number of successful refinements:     9
Number of failed refinements:         0
Max. size of reached set before ref.: 30122
Max. size of reached set after ref.:  15180
Avg. size of reached set before ref.: 14474.56
Avg. size of reached set after ref.:  7434.00

Total time for CEGAR algorithm:      25.156s
Time for refinements:                 1.386s
Average time for refinement:          0.154s
Max time for refinement:              0.294s

Code Coverage
-----------------------------
  Function coverage:      0.787
  Visited lines:          1611
  Total lines:            1701
  Line coverage:          0.947
  Visited conditions:     300
  Total conditions:       332
  Condition coverage:     0.904

CPAchecker general statistics
-----------------------------
Number of program locations:     2171
Number of CFA edges:             2399
Number of relevant variables:    299
Number of functions:             61
Number of loops:                 18
Size of reached set:             27464
  Number of reached locations:   878 (40%)
    Avg states per location:     31
    Max states per location:     1270 (at node N170)
  Number of reached functions:   48 (79%)
  Number of partitions:          27462
    Avg size of partitions:      1
    Max size of partitions:      3 (with key [N1506 (before line 4962), Function main called from node N1457, stack depth 1 [44ea608c], stack [main]])
  Number of target states:       0
  Size of final wait list        369

Time for analysis setup:          5.093s
  Time for loading CPAs:          0.960s
  Time for loading parser:        0.687s
  Time for CFA construction:      3.304s
    Time for parsing file(s):     0.956s
    Time for AST to CFA:          1.206s
    Time for CFA sanity check:    0.182s
    Time for post-processing:     0.781s
      Time for var class.:        0.363s
Time for Analysis:               25.156s
CPU time for analysis:           25.150s
Total time for CPAchecker:       30.254s
Total CPU time for CPAchecker:   30.240s
Time for statistics:              0.540s

Time for Garbage Collector:       1.476s (in 50 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                123MB (   117 MiB) max;     63MB (    60 MiB) avg;    129MB (   123 MiB) peak
Used non-heap memory:             39MB (    38 MiB) max;     35MB (    33 MiB) avg;     40MB (    38 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        41MB (    39 MiB) max;     37MB (    35 MiB) avg
Total process virtual memory:   8087MB (  7712 MiB) max;   8074MB (  7700 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
