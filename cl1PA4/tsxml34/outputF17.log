scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.16-rc1/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--block--paride--pt.ko-entry_point_true-unreach-call.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_3cx9l2qt/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 3647: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 3692: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 4478: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 4663: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

line 4937: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp = ldv_zalloc(8UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 4951: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___6 = ldv_zalloc(8UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function noop_llseek to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_connect to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_write_regr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_read_regr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_disconnect to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_write_block to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_read_block to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function schedule_timeout_interruptible to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_release to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snprintf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __register_chrdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __class_create to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 3385: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((const void *)to, 0); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function __builtin_object_size to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function might_fault to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _copy_from_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __copy_from_user_overflow to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 3410: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size(from, 0); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function _copy_to_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __copy_to_user_overflow to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock_nested to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __unregister_chrdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_create to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function class_destroy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_destroy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_final_state to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            1529050 (18% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  1356343 (89%)
  Because of loop head:            172656 (11%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         51 (0%)
  Times precision was empty:       263128 (17%)
  Times precision was {false}:     7468 (0%)
  Times result was cached:         1252367 (82%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      6087 (0%)
  Times result was 'false':        3468 (0%)
Number of strengthen sat checks:   0
Number of coverage checks:         1427765
  BDD entailment checks:           244047
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       39
Number of predicates discovered:          5
Number of abstraction locations:          107
Max number of predicates per location:    4
Avg number of predicates per location:    2
Total predicates per abstraction:         2110464
Max number of predicates per abstraction: 4
Avg number of predicates per abstraction: 155.70
Number of irrelevant predicates:          1754782 (83%)
Number of preds handled by boolean abs:   7486 (0%)
  Total number of models for allsat:      6325
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.04

Time for post operator:                342.888s
  Time for path formula creation:      337.552s
Time for strengthen operator:            8.622s
Time for prec operator:                253.907s
  Time for abstraction:                231.996s (Max:     5.859s, Count: 1529050)
    Boolean abstraction:                34.157s
    Solving time:                       70.994s (Max:     0.157s)
    Model enumeration time:              2.938s
    Time for BDD construction:           0.196s (Max:     0.003s)
Time for merge operator:                35.919s
Time for coverage check:                 0.565s
  Time for BDD entailment checks:        0.395s
Total time for SMT solver (w/o itp):    73.932s

Number of path formula cache hits:   4066881 (43%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:   296.023s

Total number of created targets for pointer analysis: 3883393
   Number of created targets for uf: *(struct_pi_adapter)* is 337
   Number of created targets for uf: *signed_int is 21441
   Number of created targets for uf: *(char)* is 13
   Number of created targets for uf: *char is 1240501


Number of BDD nodes:                               217
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       12159 (count: 581065, min: 0, max: 1012, avg: 0.02)
Time for BDD node cleanup:                             0.158s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                 13.952s
  Time for transition matches:                         7.896s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.001s
Automaton transfers with branching:                0
Automaton transfer successors:                      8583999 (count: 8583999, min: 1, max: 1, avg: 1.00) [1 x 8583999]

CPA algorithm statistics
------------------------
Number of iterations:            5367718
Max size of waitlist:            36
Average size of waitlist:        27
Number of computed successors:   6206279
Max successors for one state:    2
Number of times merged:          591859
Number of times stopped:         834030
Number of times breaked:         51

Total time for CPA algorithm:       868.450s (Max:    41.324s)
  Time for choose from waitlist:      2.805s
  Time for precision adjustment:    325.081s
  Time for transfer relation:       452.213s
  Time for merge operator:           44.089s
  Time for stop operator:             8.437s
  Time for adding to reached set:    13.556s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   51
Avg. length of target path (in blocks):                5578 (count: 51, min: 35, max: 209, avg: 109.37)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  22.763s
  Counterexample analysis:                             5.843s (Max:     0.261s, Calls: 51)
    Refinement sat check:                              4.462s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.005s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.045s
  Precision update:                                    0.962s
  ARG update:                                         15.829s

Length of refined path (in blocks):                    3442 (count: 51, min: 10, max: 164, avg: 67.49)
Number of affected states:                             2900 (count: 51, min: 0, max: 163, avg: 56.86)
Length (states) of path with itp 'true':                491 (count: 51, min: 0, max: 101, avg: 9.63)
Length (states) of path with itp non-trivial itp:      2900 (count: 51, min: 0, max: 163, avg: 56.86)
Length (states) of path with itp 'false':                51 (count: 51, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 51, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:            2853 (count: 51, min: 0, max: 162, avg: 55.94)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                51
Number of successful refinements:     51
Number of failed refinements:         0
Max. size of reached set before ref.: 203308
Max. size of reached set after ref.:  76026
Avg. size of reached set before ref.: 109494.04
Avg. size of reached set after ref.:  4721.76

Total time for CEGAR algorithm:     894.869s
Time for refinements:                26.185s
Average time for refinement:          0.513s
Max time for refinement:              1.324s

Code Coverage
-----------------------------
  Function coverage:      0.459
  Visited lines:          1292
  Total lines:            1701
  Line coverage:          0.760
  Visited conditions:     214
  Total conditions:       332
  Condition coverage:     0.645

CPAchecker general statistics
-----------------------------
Number of program locations:     2171
Number of CFA edges:             2399
Number of relevant variables:    299
Number of functions:             61
Number of loops:                 18
Size of reached set:             25395
  Number of reached locations:   559 (26%)
    Avg states per location:     45
    Max states per location:     1476 (at node N170)
  Number of reached functions:   28 (46%)
  Number of partitions:          25393
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N847 (before line 4236), Function pt_detect called from node N1348, stack depth 3 [4c2ef549], stack [main, pt_init, pt_detect]])
  Number of target states:       0
  Size of final wait list        30

Time for analysis setup:          5.367s
  Time for loading CPAs:          1.075s
  Time for loading parser:        0.688s
  Time for CFA construction:      3.416s
    Time for parsing file(s):     0.977s
    Time for AST to CFA:          1.214s
    Time for CFA sanity check:    0.208s
    Time for post-processing:     0.806s
      Time for var class.:        0.348s
Time for Analysis:              894.869s
CPU time for analysis:          894.830s
Total time for CPAchecker:      900.248s
Total CPU time for CPAchecker:  900.200s
Time for statistics:              0.441s

Time for Garbage Collector:     110.008s (in 431 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:               3308MB (  3155 MiB) max;   1375MB (  1312 MiB) avg;   3578MB (  3412 MiB) peak
Used non-heap memory:             39MB (    37 MiB) max;     38MB (    37 MiB) avg;     40MB (    38 MiB) peak
Allocated heap memory:          4137MB (  3945 MiB) max;   1969MB (  1878 MiB) avg
Allocated non-heap memory:        41MB (    40 MiB) max;     41MB (    39 MiB) avg
Total process virtual memory:   8228MB (  7847 MiB) max;   8135MB (  7758 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
