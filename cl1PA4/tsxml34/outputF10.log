scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.16-rc1/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--block--paride--pt.ko-entry_point_true-unreach-call.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_ak2bb3jk/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 3647: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 3692: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 4478: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 4663: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

line 4937: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp = ldv_zalloc(8UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 4951: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___6 = ldv_zalloc(8UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function noop_llseek to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_connect to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_write_regr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_read_regr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_disconnect to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_write_block to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_read_block to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function schedule_timeout_interruptible to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_release to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snprintf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __register_chrdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __class_create to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 3385: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((const void *)to, 0); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function __builtin_object_size to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function might_fault to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _copy_from_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __copy_from_user_overflow to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 3410: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size(from, 0); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function _copy_to_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __copy_to_user_overflow to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock_nested to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __unregister_chrdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_create to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function class_destroy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_destroy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_final_state to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            1490316 (18% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  1321974 (89%)
  Because of loop head:            168293 (11%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         49 (0%)
  Times precision was empty:       262505 (18%)
  Times precision was {false}:     7385 (0%)
  Times result was cached:         1214612 (82%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      5814 (0%)
  Times result was 'false':        3355 (0%)
Number of strengthen sat checks:   0
Number of coverage checks:         1391503
  BDD entailment checks:           237925
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       39
Number of predicates discovered:          4
Number of abstraction locations:          84
Max number of predicates per location:    3
Avg number of predicates per location:    2
Total predicates per abstraction:         2029164
Max number of predicates per abstraction: 3
Avg number of predicates per abstraction: 153.74
Number of irrelevant predicates:          1694995 (84%)
Number of preds handled by boolean abs:   7180 (0%)
  Total number of models for allsat:      6042
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.04

Time for post operator:                337.334s
  Time for path formula creation:      332.305s
Time for strengthen operator:            9.188s
Time for prec operator:                269.487s
  Time for abstraction:                247.147s (Max:     9.783s, Count: 1490316)
    Boolean abstraction:                32.740s
    Solving time:                       69.516s (Max:     0.380s)
    Model enumeration time:              2.954s
    Time for BDD construction:           0.188s (Max:     0.012s)
Time for merge operator:                35.902s
Time for coverage check:                 0.545s
  Time for BDD entailment checks:        0.363s
Total time for SMT solver (w/o itp):    72.470s

Number of path formula cache hits:   3998075 (44%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:   293.163s

Total number of created targets for pointer analysis: 3785301
   Number of created targets for uf: *(struct_pi_adapter)* is 329
   Number of created targets for uf: *signed_int is 21017
   Number of created targets for uf: *(char)* is 13
   Number of created targets for uf: *char is 1209901


Number of BDD nodes:                               209
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       11627 (count: 572258, min: 0, max: 832, avg: 0.02)
Time for BDD node cleanup:                             0.151s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                 15.846s
  Time for transition matches:                         8.348s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.001s
Automaton transfers with branching:                0
Automaton transfer successors:                      8366174 (count: 8366174, min: 1, max: 1, avg: 1.00) [1 x 8366174]

CPA algorithm statistics
------------------------
Number of iterations:            5231616
Max size of waitlist:            36
Average size of waitlist:        27
Number of computed successors:   6048856
Max successors for one state:    2
Number of times merged:          576789
Number of times stopped:         812862
Number of times breaked:         49

Total time for CPA algorithm:       869.542s (Max:    42.992s)
  Time for choose from waitlist:      2.563s
  Time for precision adjustment:    325.807s
  Time for transfer relation:       452.205s
  Time for merge operator:           44.710s
  Time for stop operator:             9.229s
  Time for adding to reached set:    13.212s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   49
Avg. length of target path (in blocks):                5433 (count: 49, min: 35, max: 209, avg: 110.88)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  21.602s
  Counterexample analysis:                             5.729s (Max:     0.259s, Calls: 49)
    Refinement sat check:                              4.415s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.010s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.049s
  Precision update:                                    0.027s
  ARG update:                                         15.703s

Length of refined path (in blocks):                    3337 (count: 49, min: 10, max: 164, avg: 68.10)
Number of affected states:                             2829 (count: 49, min: 0, max: 163, avg: 57.73)
Length (states) of path with itp 'true':                459 (count: 49, min: 0, max: 101, avg: 9.37)
Length (states) of path with itp non-trivial itp:      2829 (count: 49, min: 0, max: 163, avg: 57.73)
Length (states) of path with itp 'false':                49 (count: 49, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 49, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:            2784 (count: 49, min: 0, max: 162, avg: 56.82)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                49
Number of successful refinements:     49
Number of failed refinements:         0
Max. size of reached set before ref.: 203308
Max. size of reached set after ref.:  76026
Avg. size of reached set before ref.: 110318.29
Avg. size of reached set after ref.:  4201.00

Total time for CEGAR algorithm:     894.886s
Time for refinements:                25.105s
Average time for refinement:          0.512s
Max time for refinement:              2.083s

Code Coverage
-----------------------------
  Function coverage:      0.705
  Visited lines:          1551
  Total lines:            1701
  Line coverage:          0.912
  Visited conditions:     286
  Total conditions:       332
  Condition coverage:     0.861

CPAchecker general statistics
-----------------------------
Number of program locations:     2171
Number of CFA edges:             2399
Number of relevant variables:    299
Number of functions:             61
Number of loops:                 18
Size of reached set:             32893
  Number of reached locations:   817 (38%)
    Avg states per location:     40
    Max states per location:     1896 (at node N169)
  Number of reached functions:   43 (70%)
  Number of partitions:          32892
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N1606 (before line 5052), Function main called from node N1457, stack depth 1 [315ba14a], stack [main]])
  Number of target states:       0
  Size of final wait list        27

Time for analysis setup:          5.356s
  Time for loading CPAs:          1.017s
  Time for loading parser:        0.753s
  Time for CFA construction:      3.449s
    Time for parsing file(s):     0.966s
    Time for AST to CFA:          1.269s
    Time for CFA sanity check:    0.181s
    Time for post-processing:     0.824s
      Time for var class.:        0.366s
Time for Analysis:              894.886s
CPU time for analysis:          894.830s
Total time for CPAchecker:      900.252s
Total CPU time for CPAchecker:  900.190s
Time for statistics:              1.055s

Time for Garbage Collector:     104.191s (in 428 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:               3101MB (  2957 MiB) max;   1332MB (  1270 MiB) avg;   3369MB (  3213 MiB) peak
Used non-heap memory:             39MB (    38 MiB) max;     38MB (    37 MiB) avg;     40MB (    38 MiB) peak
Allocated heap memory:          3907MB (  3726 MiB) max;   1966MB (  1875 MiB) avg
Allocated non-heap memory:        42MB (    40 MiB) max;     41MB (    39 MiB) avg
Total process virtual memory:   8228MB (  7847 MiB) max;   8133MB (  7757 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
