scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.16-rc1/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--block--paride--pt.ko-entry_point_true-unreach-call.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_5d329ni4/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 3647: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 3692: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 4478: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 4663: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

line 4937: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp = ldv_zalloc(8UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 4951: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___6 = ldv_zalloc(8UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function noop_llseek to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function class_destroy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_destroy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __unregister_chrdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_release to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 3385: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((const void *)to, 0); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function __builtin_object_size to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function might_fault to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _copy_from_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __copy_from_user_overflow to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock_nested to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_connect to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_write_regr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_read_regr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_disconnect to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function schedule_timeout_interruptible to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_write_block to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_read_block to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snprintf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __register_chrdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __class_create to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_create to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_final_state to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            2723757 (18% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  2411559 (89%)
  Because of loop head:            312138 (11%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         60 (0%)
  Times precision was empty:       142808 (5%)
  Times precision was {false}:     4403 (0%)
  Times result was cached:         2573476 (94%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      3070 (0%)
  Times result was 'false':        8988 (0%)
Number of strengthen sat checks:   0
Number of coverage checks:         2539415
  BDD entailment checks:           442433
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       39
Number of predicates discovered:          5
Number of abstraction locations:          113
Max number of predicates per location:    4
Avg number of predicates per location:    1
Total predicates per abstraction:         3919915
Max number of predicates per abstraction: 4
Avg number of predicates per abstraction: 524.54
Number of irrelevant predicates:          3453182 (88%)
Number of preds handled by boolean abs:   3824 (0%)
  Total number of models for allsat:      3169
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.03

Time for post operator:                150.825s
  Time for path formula creation:      144.531s
Time for strengthen operator:           12.182s
Time for prec operator:                376.561s
  Time for abstraction:                344.099s (Max:     4.910s, Count: 2723757)
    Boolean abstraction:                18.453s
    Solving time:                       41.283s (Max:     0.181s)
    Model enumeration time:              1.421s
    Time for BDD construction:           0.109s (Max:     0.003s)
Time for merge operator:                15.889s
Time for coverage check:                 0.946s
  Time for BDD entailment checks:        0.622s
Total time for SMT solver (w/o itp):    42.704s

Number of path formula cache hits:   16751876 (90%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    91.429s

Total number of created targets for pointer analysis: 1256714
   Number of created targets for uf: *(void)* is 2
   Number of created targets for uf: *(struct_pi_adapter)* is 229
   Number of created targets for uf: *(char)* is 217
   Number of created targets for uf: *signed_int is 12692
   Number of created targets for uf: *char is 16663


Number of BDD nodes:                               237
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        6184 (count: 625761, min: 0, max: 662, avg: 0.01)
Time for BDD node cleanup:                             0.139s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                 23.401s
  Time for transition matches:                        11.589s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.000s
Automaton transfers with branching:                0
Automaton transfer successors:                     15276486 (count: 15276486, min: 1, max: 1, avg: 1.00) [1 x 15276486]

CPA algorithm statistics
------------------------
Number of iterations:            9552127
Max size of waitlist:            58
Average size of waitlist:        24
Number of computed successors:   11040530
Max successors for one state:    2
Number of times merged:          1048491
Number of times stopped:         1478132
Number of times breaked:         60

Total time for CPA algorithm:       853.561s (Max:    44.414s)
  Time for choose from waitlist:      3.296s
  Time for precision adjustment:    462.095s
  Time for transfer relation:       301.899s
  Time for merge operator:           27.824s
  Time for stop operator:            12.225s
  Time for adding to reached set:    17.898s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   60
Avg. length of target path (in blocks):                5568 (count: 60, min: 35, max: 155, avg: 92.80)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  34.346s
  Counterexample analysis:                             6.018s (Max:     0.207s, Calls: 60)
    Refinement sat check:                              4.839s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.007s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.065s
  Precision update:                                    0.048s
  ARG update:                                         28.136s

Length of refined path (in blocks):                    4082 (count: 60, min: 10, max: 154, avg: 68.03)
Number of affected states:                             3091 (count: 60, min: 0, max: 153, avg: 51.52)
Length (states) of path with itp 'true':                931 (count: 60, min: 0, max: 108, avg: 15.52)
Length (states) of path with itp non-trivial itp:      3091 (count: 60, min: 0, max: 153, avg: 51.52)
Length (states) of path with itp 'false':                60 (count: 60, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 60, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:            3041 (count: 60, min: 0, max: 152, avg: 50.68)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                60
Number of successful refinements:     60
Number of failed refinements:         0
Max. size of reached set before ref.: 422293
Max. size of reached set after ref.:  105182
Avg. size of reached set before ref.: 166034.75
Avg. size of reached set after ref.:  12881.73

Total time for CEGAR algorithm:     894.939s
Time for refinements:                40.699s
Average time for refinement:          0.678s
Max time for refinement:              2.459s

Code Coverage
-----------------------------
  Function coverage:      0.787
  Visited lines:          1420
  Total lines:            1701
  Line coverage:          0.835
  Visited conditions:     242
  Total conditions:       332
  Condition coverage:     0.729

CPAchecker general statistics
-----------------------------
Number of program locations:     2171
Number of CFA edges:             2399
Number of relevant variables:    299
Number of functions:             61
Number of loops:                 18
Size of reached set:             364229
  Number of reached locations:   725 (33%)
    Avg states per location:     502
    Max states per location:     21339 (at node N169)
  Number of reached functions:   48 (79%)
  Number of partitions:          363905
    Avg size of partitions:      1
    Max size of partitions:      5 (with key [N1506 (before line 4962), Function main called from node N1457, stack depth 1 [44ea608c], stack [main]])
  Number of target states:       0
  Size of final wait list        30

Time for analysis setup:          5.317s
  Time for loading CPAs:          1.140s
  Time for loading parser:        0.656s
  Time for CFA construction:      3.362s
    Time for parsing file(s):     0.957s
    Time for AST to CFA:          1.187s
    Time for CFA sanity check:    0.184s
    Time for post-processing:     0.823s
      Time for var class.:        0.362s
Time for Analysis:              894.939s
CPU time for analysis:          894.880s
Total time for CPAchecker:      900.273s
Total CPU time for CPAchecker:  900.200s
Time for statistics:              3.852s

Time for Garbage Collector:     131.949s (in 824 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:               2118MB (  2020 MiB) max;    767MB (   731 MiB) avg;   2153MB (  2053 MiB) peak
Used non-heap memory:             39MB (    37 MiB) max;     38MB (    36 MiB) avg;     40MB (    38 MiB) peak
Allocated heap memory:          2155MB (  2055 MiB) max;   1124MB (  1072 MiB) avg
Allocated non-heap memory:        41MB (    39 MiB) max;     41MB (    39 MiB) avg
Total process virtual memory:   8158MB (  7780 MiB) max;   8100MB (  7724 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
