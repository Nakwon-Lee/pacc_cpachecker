scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.16-rc1/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--block--paride--pt.ko-entry_point_true-unreach-call.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_wr1xhrtt/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 3647: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 3692: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 4478: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 4663: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

line 4937: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp = ldv_zalloc(8UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 4951: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___6 = ldv_zalloc(8UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function noop_llseek to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_connect to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_write_regr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function schedule_timeout_interruptible to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_read_regr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_disconnect to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_write_block to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_read_block to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snprintf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_release to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 3385: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((const void *)to, 0); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function __builtin_object_size to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function might_fault to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _copy_from_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __copy_from_user_overflow to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __register_chrdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function class_destroy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_destroy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __unregister_chrdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock_nested to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __class_create to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_create to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 3410: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size(from, 0); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function _copy_to_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __copy_to_user_overflow to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_final_state to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            2030888 (18% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  1800098 (89%)
  Because of loop head:            230743 (11%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         47 (0%)
  Times precision was empty:       431570 (21%)
  Times precision was {false}:     6874 (0%)
  Times result was cached:         1589326 (78%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      3118 (0%)
  Times result was 'false':        5239 (0%)
Number of strengthen sat checks:   0
Number of coverage checks:         1899063
  BDD entailment checks:           327795
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       39
Number of predicates discovered:          5
Number of abstraction locations:          106
Max number of predicates per location:    4
Avg number of predicates per location:    1
Total predicates per abstraction:         3282228
Max number of predicates per abstraction: 4
Avg number of predicates per abstraction: 328.49
Number of irrelevant predicates:          2957402 (90%)
Number of preds handled by boolean abs:   3512 (0%)
  Total number of models for allsat:      3253
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.04

Time for post operator:                275.701s
  Time for path formula creation:      269.041s
Time for strengthen operator:           11.712s
Time for prec operator:                300.210s
  Time for abstraction:                271.928s (Max:     6.448s, Count: 2030888)
    Boolean abstraction:                15.200s
    Solving time:                       58.712s (Max:     0.173s)
    Model enumeration time:              1.466s
    Time for BDD construction:           0.130s (Max:     0.008s)
Time for merge operator:                28.061s
Time for coverage check:                 0.645s
  Time for BDD entailment checks:        0.391s
Total time for SMT solver (w/o itp):    60.178s

Number of path formula cache hits:   8943157 (68%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:   222.752s

Total number of created targets for pointer analysis: 2956241
   Number of created targets for uf: *(struct_pi_adapter)* is 261
   Number of created targets for uf: *signed_int is 15615
   Number of created targets for uf: *(char)* is 541
   Number of created targets for uf: *char is 911953


Number of BDD nodes:                               229
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        6279 (count: 812498, min: 0, max: 498, avg: 0.01)
Time for BDD node cleanup:                             0.160s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                 16.068s
  Time for transition matches:                         9.149s
  Time for transition assertions:                      0.001s
  Time for transition actions:                         0.000s
Automaton transfers with branching:                0
Automaton transfer successors:                     11399362 (count: 11399362, min: 1, max: 1, avg: 1.00) [1 x 11399362]

CPA algorithm statistics
------------------------
Number of iterations:            7126120
Max size of waitlist:            28
Average size of waitlist:        16
Number of computed successors:   8238793
Max successors for one state:    2
Number of times merged:          785634
Number of times stopped:         1106868
Number of times breaked:         47

Total time for CPA algorithm:       867.314s (Max:    53.519s)
  Time for choose from waitlist:      3.313s
  Time for precision adjustment:    366.708s
  Time for transfer relation:       406.161s
  Time for merge operator:           39.017s
  Time for stop operator:            11.154s
  Time for adding to reached set:    16.527s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   47
Avg. length of target path (in blocks):                4341 (count: 47, min: 35, max: 186, avg: 92.36)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  22.736s
  Counterexample analysis:                             5.053s (Max:     0.274s, Calls: 47)
    Refinement sat check:                              4.057s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.003s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.040s
  Precision update:                                    0.040s
  ARG update:                                         17.539s

Length of refined path (in blocks):                    2480 (count: 47, min: 10, max: 148, avg: 52.77)
Number of affected states:                             1946 (count: 47, min: 0, max: 139, avg: 41.40)
Length (states) of path with itp 'true':                487 (count: 47, min: 0, max: 99, avg: 10.36)
Length (states) of path with itp non-trivial itp:      1946 (count: 47, min: 0, max: 139, avg: 41.40)
Length (states) of path with itp 'false':                47 (count: 47, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 47, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:            1903 (count: 47, min: 0, max: 138, avg: 40.49)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                47
Number of successful refinements:     47
Number of failed refinements:         0
Max. size of reached set before ref.: 384582
Max. size of reached set after ref.:  110308
Avg. size of reached set before ref.: 155845.53
Avg. size of reached set after ref.:  6103.13

Total time for CEGAR algorithm:     894.945s
Time for refinements:                27.350s
Average time for refinement:          0.581s
Max time for refinement:              1.465s

Code Coverage
-----------------------------
  Function coverage:      0.377
  Visited lines:          1129
  Total lines:            1701
  Line coverage:          0.664
  Visited conditions:     164
  Total conditions:       332
  Condition coverage:     0.494

CPAchecker general statistics
-----------------------------
Number of program locations:     2171
Number of CFA edges:             2399
Number of relevant variables:    299
Number of functions:             61
Number of loops:                 18
Size of reached set:             88793
  Number of reached locations:   433 (20%)
    Avg states per location:     205
    Max states per location:     5171 (at node N169)
  Number of reached functions:   23 (38%)
  Number of partitions:          88741
    Avg size of partitions:      1
    Max size of partitions:      4 (with key [N847 (before line 4236), Function pt_detect called from node N1348, stack depth 3 [23ca4c82], stack [main, pt_init, pt_detect]])
  Number of target states:       0
  Size of final wait list        14

Time for analysis setup:          5.272s
  Time for loading CPAs:          1.071s
  Time for loading parser:        0.675s
  Time for CFA construction:      3.372s
    Time for parsing file(s):     0.958s
    Time for AST to CFA:          1.195s
    Time for CFA sanity check:    0.214s
    Time for post-processing:     0.810s
      Time for var class.:        0.340s
Time for Analysis:              894.945s
CPU time for analysis:          894.910s
Total time for CPAchecker:      900.231s
Total CPU time for CPAchecker:  900.180s
Time for statistics:              1.150s

Time for Garbage Collector:     111.555s (in 464 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:               2818MB (  2688 MiB) max;   1257MB (  1199 MiB) avg;   2852MB (  2720 MiB) peak
Used non-heap memory:             45MB (    43 MiB) max;     39MB (    37 MiB) avg;     45MB (    43 MiB) peak
Allocated heap memory:          3152MB (  3006 MiB) max;   1815MB (  1731 MiB) avg
Allocated non-heap memory:        47MB (    45 MiB) max;     46MB (    44 MiB) avg
Total process virtual memory:   8222MB (  7841 MiB) max;   8125MB (  7748 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
