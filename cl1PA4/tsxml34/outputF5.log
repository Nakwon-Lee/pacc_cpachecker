scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.16-rc1/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--block--paride--pt.ko-entry_point_true-unreach-call.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_unsg_yf7/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 3647: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 3692: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 4478: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 4663: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

line 4937: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp = ldv_zalloc(8UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 4951: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___6 = ldv_zalloc(8UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function noop_llseek to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function class_destroy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_destroy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_final_state to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 3385: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((const void *)to, 0); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function __builtin_object_size to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function might_fault to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock_nested to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_connect to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_write_regr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function schedule_timeout_interruptible to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_read_regr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_disconnect to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _copy_from_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __copy_from_user_overflow to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __unregister_chrdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_release to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __register_chrdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snprintf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __class_create to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_create to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_read_block to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 3410: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size(from, 0); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function _copy_to_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __copy_to_user_overflow to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_write_block to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            1885104 (17% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  1602630 (85%)
  Because of loop head:            282372 (15%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         102 (0%)
  Times precision was empty:       255360 (14%)
  Times precision was {false}:     7498 (0%)
  Times result was cached:         1610085 (85%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      12161 (1%)
  Times result was 'false':        7100 (0%)
Number of strengthen sat checks:   0
Number of coverage checks:         1514497
  BDD entailment checks:           498979
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       39
Number of predicates discovered:          6
Number of abstraction locations:          170
Max number of predicates per location:    6
Avg number of predicates per location:    1
Total predicates per abstraction:         2663554
Max number of predicates per abstraction: 6
Avg number of predicates per abstraction: 135.49
Number of irrelevant predicates:          2094464 (79%)
Number of preds handled by boolean abs:   21232 (1%)
  Total number of models for allsat:      14033
  Max number of models for allsat:        6
  Avg number of models for allsat:        1.15

Time for post operator:                247.522s
  Time for path formula creation:      242.440s
Time for strengthen operator:           16.539s
Time for prec operator:                354.031s
  Time for abstraction:                330.659s (Max:     5.568s, Count: 1885104)
    Boolean abstraction:                69.525s
    Solving time:                       93.204s (Max:     0.207s)
    Model enumeration time:              8.859s
    Time for BDD construction:           0.375s (Max:     0.013s)
Time for merge operator:                14.570s
Time for coverage check:                 0.690s
  Time for BDD entailment checks:        0.489s
Total time for SMT solver (w/o itp):   102.063s

Number of path formula cache hits:   9036792 (72%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:   207.253s

Total number of created targets for pointer analysis: 4641966
   Number of created targets for uf: *(void)* is 119
   Number of created targets for uf: *(struct_pi_adapter)* is 3861
   Number of created targets for uf: *signed_int is 277477
   Number of created targets for uf: *(char)* is 1393
   Number of created targets for uf: *char is 512629


Number of BDD nodes:                               754
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       24484 (count: 865453, min: 0, max: 949, avg: 0.03)
Time for BDD node cleanup:                             0.144s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                 16.206s
  Time for transition matches:                         9.181s
  Time for transition assertions:                      0.001s
  Time for transition actions:                         0.000s
Automaton transfers with branching:                0
Automaton transfer successors:                     10798222 (count: 10798222, min: 1, max: 1, avg: 1.00) [1 x 10798222]

CPA algorithm statistics
------------------------
Number of iterations:            6277082
Max size of waitlist:            722
Average size of waitlist:        322
Number of computed successors:   7133077
Max successors for one state:    2
Number of times merged:          507759
Number of times stopped:         823407
Number of times breaked:         102

Total time for CPA algorithm:       865.118s (Max:    24.964s)
  Time for choose from waitlist:      3.129s
  Time for precision adjustment:    420.845s
  Time for transfer relation:       373.321s
  Time for merge operator:           22.597s
  Time for stop operator:            10.049s
  Time for adding to reached set:    14.741s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   102
Avg. length of target path (in blocks):               10481 (count: 102, min: 35, max: 182, avg: 102.75)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  24.848s
  Counterexample analysis:                             8.623s (Max:     0.204s, Calls: 102)
    Refinement sat check:                              6.498s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.007s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.087s
  Precision update:                                    0.089s
  ARG update:                                         15.916s

Length of refined path (in blocks):                    7988 (count: 102, min: 10, max: 181, avg: 78.31)
Number of affected states:                             6689 (count: 102, min: 0, max: 180, avg: 65.58)
Length (states) of path with itp 'true':               1197 (count: 102, min: 0, max: 128, avg: 11.74)
Length (states) of path with itp non-trivial itp:      6689 (count: 102, min: 0, max: 180, avg: 65.58)
Length (states) of path with itp 'false':               102 (count: 102, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 102, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:            6607 (count: 102, min: 0, max: 179, avg: 64.77)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                102
Number of successful refinements:     102
Number of failed refinements:         0
Max. size of reached set before ref.: 157737
Max. size of reached set after ref.:  105369
Avg. size of reached set before ref.: 67811.89
Avg. size of reached set after ref.:  6758.56

Total time for CEGAR algorithm:     895.040s
Time for refinements:                29.273s
Average time for refinement:          0.286s
Max time for refinement:              0.810s

Code Coverage
-----------------------------
  Function coverage:      0.803
  Visited lines:          1645
  Total lines:            1701
  Line coverage:          0.967
  Visited conditions:     314
  Total conditions:       332
  Condition coverage:     0.946

CPAchecker general statistics
-----------------------------
Number of program locations:     2171
Number of CFA edges:             2399
Number of relevant variables:    299
Number of functions:             61
Number of loops:                 18
Size of reached set:             75131
  Number of reached locations:   918 (42%)
    Avg states per location:     81
    Max states per location:     3098 (at node N170)
  Number of reached functions:   49 (80%)
  Number of partitions:          74751
    Avg size of partitions:      1
    Max size of partitions:      12 (with key [N1606 (before line 5052), Function main called from node N1457, stack depth 1 [315ba14a], stack [main]])
  Number of target states:       0
  Size of final wait list        366

Time for analysis setup:          5.229s
  Time for loading CPAs:          0.998s
  Time for loading parser:        0.655s
  Time for CFA construction:      3.412s
    Time for parsing file(s):     0.926s
    Time for AST to CFA:          1.152s
    Time for CFA sanity check:    0.217s
    Time for post-processing:     0.927s
      Time for var class.:        0.400s
Time for Analysis:              895.040s
CPU time for analysis:          895.010s
Total time for CPAchecker:      900.282s
Total CPU time for CPAchecker:  900.240s
Time for statistics:              1.055s

Time for Garbage Collector:      94.633s (in 568 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:               2302MB (  2195 MiB) max;   1056MB (  1007 MiB) avg;   2477MB (  2362 MiB) peak
Used non-heap memory:             39MB (    37 MiB) max;     39MB (    37 MiB) avg;     40MB (    39 MiB) peak
Allocated heap memory:          2749MB (  2621 MiB) max;   1549MB (  1477 MiB) avg
Allocated non-heap memory:        41MB (    39 MiB) max;     41MB (    39 MiB) avg
Total process virtual memory:   8503MB (  8109 MiB) max;   8256MB (  7874 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
