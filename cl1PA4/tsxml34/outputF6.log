scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.16-rc1/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--block--paride--pt.ko-entry_point_true-unreach-call.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_6qv27z2a/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 3647: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 3692: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 4478: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 4663: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

line 4937: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp = ldv_zalloc(8UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 4951: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___6 = ldv_zalloc(8UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function noop_llseek to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function class_destroy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_destroy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __unregister_chrdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_release to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 3385: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((const void *)to, 0); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function __builtin_object_size to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function might_fault to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _copy_from_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __copy_from_user_overflow to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock_nested to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_connect to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_write_regr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_read_regr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_disconnect to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function schedule_timeout_interruptible to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_write_block to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_read_block to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snprintf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __register_chrdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __class_create to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_create to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_final_state to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            2732837 (18% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  2419608 (89%)
  Because of loop head:            313168 (11%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         61 (0%)
  Times precision was empty:       142988 (5%)
  Times precision was {false}:     4467 (0%)
  Times result was cached:         2582309 (94%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      3073 (0%)
  Times result was 'false':        9011 (0%)
Number of strengthen sat checks:   0
Number of coverage checks:         2547994
  BDD entailment checks:           443946
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       39
Number of predicates discovered:          5
Number of abstraction locations:          113
Max number of predicates per location:    4
Avg number of predicates per location:    1
Total predicates per abstraction:         3940162
Max number of predicates per abstraction: 4
Avg number of predicates per abstraction: 522.57
Number of irrelevant predicates:          3473340 (88%)
Number of preds handled by boolean abs:   3827 (0%)
  Total number of models for allsat:      3174
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.03

Time for post operator:                159.904s
  Time for path formula creation:      152.042s
Time for strengthen operator:           14.887s
Time for prec operator:                357.135s
  Time for abstraction:                325.411s (Max:     5.405s, Count: 2732837)
    Boolean abstraction:                18.385s
    Solving time:                       41.571s (Max:     0.188s)
    Model enumeration time:              1.441s
    Time for BDD construction:           0.095s (Max:     0.001s)
Time for merge operator:                18.621s
Time for coverage check:                 0.749s
  Time for BDD entailment checks:        0.442s
Total time for SMT solver (w/o itp):    43.012s

Number of path formula cache hits:   16798158 (90%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    96.352s

Total number of created targets for pointer analysis: 1268678
   Number of created targets for uf: *(void)* is 2
   Number of created targets for uf: *(struct_pi_adapter)* is 233
   Number of created targets for uf: *(char)* is 221
   Number of created targets for uf: *signed_int is 12888
   Number of created targets for uf: *char is 16865


Number of BDD nodes:                               237
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        6184 (count: 627792, min: 0, max: 674, avg: 0.01)
Time for BDD node cleanup:                             0.122s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                 23.449s
  Time for transition matches:                        11.316s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.001s
Automaton transfers with branching:                0
Automaton transfer successors:                     15327453 (count: 15327453, min: 1, max: 1, avg: 1.00) [1 x 15327453]

CPA algorithm statistics
------------------------
Number of iterations:            9584074
Max size of waitlist:            58
Average size of waitlist:        24
Number of computed successors:   11077477
Max successors for one state:    2
Number of times merged:          1052024
Number of times stopped:         1483113
Number of times breaked:         61

Total time for CPA algorithm:       854.793s (Max:    45.122s)
  Time for choose from waitlist:      3.721s
  Time for precision adjustment:    442.911s
  Time for transfer relation:       318.109s
  Time for merge operator:           31.873s
  Time for stop operator:            12.880s
  Time for adding to reached set:    17.290s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   61
Avg. length of target path (in blocks):                5743 (count: 61, min: 35, max: 175, avg: 94.15)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  33.632s
  Counterexample analysis:                             6.201s (Max:     0.331s, Calls: 61)
    Refinement sat check:                              5.008s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.011s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.076s
  Precision update:                                    0.032s
  ARG update:                                         27.231s

Length of refined path (in blocks):                    4213 (count: 61, min: 10, max: 154, avg: 69.07)
Number of affected states:                             3221 (count: 61, min: 0, max: 153, avg: 52.80)
Length (states) of path with itp 'true':                931 (count: 61, min: 0, max: 108, avg: 15.26)
Length (states) of path with itp non-trivial itp:      3221 (count: 61, min: 0, max: 153, avg: 52.80)
Length (states) of path with itp 'false':                61 (count: 61, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 61, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:            3170 (count: 61, min: 0, max: 152, avg: 51.97)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                61
Number of successful refinements:     61
Number of failed refinements:         0
Max. size of reached set before ref.: 422293
Max. size of reached set after ref.:  105182
Avg. size of reached set before ref.: 169807.51
Avg. size of reached set after ref.:  12670.61

Total time for CEGAR algorithm:     895.600s
Time for refinements:                40.138s
Average time for refinement:          0.658s
Max time for refinement:              2.234s

Code Coverage
-----------------------------
  Function coverage:      0.016
  Visited lines:          619
  Total lines:            1701
  Line coverage:          0.364
  Visited conditions:     0
  Total conditions:       332
  Condition coverage:     0.000

CPAchecker general statistics
-----------------------------
Number of program locations:     2171
Number of CFA edges:             2399
Number of relevant variables:    299
Number of functions:             61
Number of loops:                 18
Size of reached set:             3
  Number of reached locations:   3 (0%)
    Avg states per location:     1
    Max states per location:     1 (at node N1457)
  Number of reached functions:   1 (2%)
  Number of partitions:          3
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0
  Size of final wait list        1

Time for analysis setup:          4.966s
  Time for loading CPAs:          0.895s
  Time for loading parser:        0.679s
  Time for CFA construction:      3.232s
    Time for parsing file(s):     0.910s
    Time for AST to CFA:          1.221s
    Time for CFA sanity check:    0.158s
    Time for post-processing:     0.737s
      Time for var class.:        0.343s
Time for Analysis:              895.600s
CPU time for analysis:          895.530s
Total time for CPAchecker:      900.571s
Total CPU time for CPAchecker:  900.490s
Time for statistics:              0.069s

Time for Garbage Collector:     130.114s (in 819 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:               2200MB (  2098 MiB) max;    783MB (   747 MiB) avg;   2238MB (  2134 MiB) peak
Used non-heap memory:             39MB (    38 MiB) max;     38MB (    37 MiB) avg;     40MB (    38 MiB) peak
Allocated heap memory:          2250MB (  2146 MiB) max;   1146MB (  1092 MiB) avg
Allocated non-heap memory:        42MB (    40 MiB) max;     41MB (    39 MiB) avg
Total process virtual memory:   8158MB (  7780 MiB) max;   8100MB (  7725 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
