scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.16-rc1/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--block--paride--pt.ko-entry_point_true-unreach-call.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_g6hpzzfs/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 3647: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 3692: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 4478: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 4663: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

line 4937: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp = ldv_zalloc(8UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 4951: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___6 = ldv_zalloc(8UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function noop_llseek to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_final_state to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function class_destroy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_destroy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 3385: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((const void *)to, 0); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function __builtin_object_size to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function might_fault to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock_nested to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_connect to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __unregister_chrdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _copy_from_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snprintf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function schedule_timeout_interruptible to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_release to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __register_chrdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __copy_from_user_overflow to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_write_regr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_read_regr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_disconnect to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __class_create to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_create to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_write_block to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_read_block to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 3410: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size(from, 0); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function _copy_to_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __copy_to_user_overflow to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            2189717 (18% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  1892892 (86%)
  Because of loop head:            296704 (14%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         121 (0%)
  Times precision was empty:       286637 (13%)
  Times precision was {false}:     3676 (0%)
  Times result was cached:         1893608 (86%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      5796 (0%)
  Times result was 'false':        11294 (1%)
Number of strengthen sat checks:   0
Number of coverage checks:         1667510
  BDD entailment checks:           412756
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       39
Number of predicates discovered:          6
Number of abstraction locations:          109
Max number of predicates per location:    6
Avg number of predicates per location:    2
Total predicates per abstraction:         3298446
Max number of predicates per abstraction: 6
Avg number of predicates per abstraction: 348.23
Number of irrelevant predicates:          2857865 (87%)
Number of preds handled by boolean abs:   10139 (0%)
  Total number of models for allsat:      6287
  Max number of models for allsat:        3
  Avg number of models for allsat:        1.08

Time for post operator:                225.661s
  Time for path formula creation:      215.936s
Time for strengthen operator:           11.516s
Time for prec operator:                328.615s
  Time for abstraction:                298.915s (Max:     6.108s, Count: 2189717)
    Boolean abstraction:                31.613s
    Solving time:                       46.670s (Max:     0.161s)
    Model enumeration time:              3.022s
    Time for BDD construction:           0.204s (Max:     0.002s)
Time for merge operator:                18.173s
Time for coverage check:                 0.692s
  Time for BDD entailment checks:        0.497s
Total time for SMT solver (w/o itp):    49.692s

Number of path formula cache hits:   11502572 (80%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:   170.162s

Total number of created targets for pointer analysis: 2799194
   Number of created targets for uf: *(void)* is 21
   Number of created targets for uf: *(struct_pi_adapter)* is 973
   Number of created targets for uf: *(char)* is 757
   Number of created targets for uf: *signed_int is 57331
   Number of created targets for uf: *char is 110829


Number of BDD nodes:                               685
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       11765 (count: 752994, min: 0, max: 624, avg: 0.02)
Time for BDD node cleanup:                             0.154s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                 18.055s
  Time for transition matches:                        10.560s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.002s
Automaton transfers with branching:                0
Automaton transfer successors:                     12251781 (count: 12251781, min: 1, max: 1, avg: 1.00) [1 x 12251781]

CPA algorithm statistics
------------------------
Number of iterations:            7107060
Max size of waitlist:            3799
Average size of waitlist:        1338
Number of computed successors:   8132329
Max successors for one state:    2
Number of times merged:          627377
Number of times stopped:         926060
Number of times breaked:         121

Total time for CPA algorithm:       849.724s (Max:    36.171s)
  Time for choose from waitlist:      5.465s
  Time for precision adjustment:    397.305s
  Time for transfer relation:       359.552s
  Time for merge operator:           28.175s
  Time for stop operator:            11.124s
  Time for adding to reached set:    24.897s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   121
Avg. length of target path (in blocks):                8535 (count: 121, min: 35, max: 111, avg: 70.54)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  28.296s
  Counterexample analysis:                             6.991s (Max:     0.126s, Calls: 121)
    Refinement sat check:                              5.747s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.005s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.060s
  Precision update:                                    0.051s
  ARG update:                                         21.062s

Length of refined path (in blocks):                    5248 (count: 121, min: 10, max: 91, avg: 43.37)
Number of affected states:                             2763 (count: 121, min: 0, max: 84, avg: 22.83)
Length (states) of path with itp 'true':               2364 (count: 121, min: 0, max: 90, avg: 19.54)
Length (states) of path with itp non-trivial itp:      2763 (count: 121, min: 0, max: 84, avg: 22.83)
Length (states) of path with itp 'false':               121 (count: 121, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 121, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:            2687 (count: 121, min: 0, max: 83, avg: 22.21)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                121
Number of successful refinements:     121
Number of failed refinements:         0
Max. size of reached set before ref.: 465843
Max. size of reached set after ref.:  460884
Avg. size of reached set before ref.: 110276.28
Avg. size of reached set after ref.:  50953.84

Total time for CEGAR algorithm:     895.180s
Time for refinements:                39.750s
Average time for refinement:          0.328s
Max time for refinement:              1.668s

Code Coverage
-----------------------------
  Function coverage:      0.689
  Visited lines:          1398
  Total lines:            1701
  Line coverage:          0.822
  Visited conditions:     214
  Total conditions:       332
  Condition coverage:     0.645

CPAchecker general statistics
-----------------------------
Number of program locations:     2171
Number of CFA edges:             2399
Number of relevant variables:    299
Number of functions:             61
Number of loops:                 18
Size of reached set:             16960
  Number of reached locations:   630 (29%)
    Avg states per location:     26
    Max states per location:     366 (at node N176)
  Number of reached functions:   42 (69%)
  Number of partitions:          16716
    Avg size of partitions:      1
    Max size of partitions:      22 (with key [N1606 (before line 5052), Function main called from node N1457, stack depth 1 [44ea608c], stack [main]])
  Number of target states:       0
  Size of final wait list        518

Time for analysis setup:          5.074s
  Time for loading CPAs:          0.970s
  Time for loading parser:        0.746s
  Time for CFA construction:      3.233s
    Time for parsing file(s):     0.890s
    Time for AST to CFA:          1.175s
    Time for CFA sanity check:    0.176s
    Time for post-processing:     0.796s
      Time for var class.:        0.349s
Time for Analysis:              895.180s
CPU time for analysis:          895.140s
Total time for CPAchecker:      900.260s
Total CPU time for CPAchecker:  900.210s
Time for statistics:              0.357s

Time for Garbage Collector:     112.688s (in 691 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:               2226MB (  2123 MiB) max;    921MB (   879 MiB) avg;   2379MB (  2269 MiB) peak
Used non-heap memory:             39MB (    38 MiB) max;     39MB (    37 MiB) avg;     40MB (    38 MiB) peak
Allocated heap memory:          2627MB (  2505 MiB) max;   1343MB (  1280 MiB) avg
Allocated non-heap memory:        41MB (    39 MiB) max;     41MB (    39 MiB) avg
Total process virtual memory:   8228MB (  7847 MiB) max;   8143MB (  7765 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
