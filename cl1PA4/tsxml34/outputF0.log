scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.16-rc1/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--block--paride--pt.ko-entry_point_true-unreach-call.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_xek8r_2r/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 3647: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 3692: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 4478: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 4663: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

line 4937: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp = ldv_zalloc(8UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 4951: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___6 = ldv_zalloc(8UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function noop_llseek to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_connect to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_write_regr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_read_regr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_disconnect to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_write_block to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_read_block to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function schedule_timeout_interruptible to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 3385: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((const void *)to, 0); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function __builtin_object_size to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function might_fault to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _copy_from_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __copy_from_user_overflow to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock_nested to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function class_destroy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_destroy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __unregister_chrdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_release to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snprintf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __register_chrdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __class_create to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_create to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 3410: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size(from, 0); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function _copy_to_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __copy_to_user_overflow to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_final_state to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            1643283 (18% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  1458056 (89%)
  Because of loop head:            185156 (11%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         71 (0%)
  Times precision was empty:       201364 (12%)
  Times precision was {false}:     8129 (0%)
  Times result was cached:         1423232 (87%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      10558 (1%)
  Times result was 'false':        3817 (0%)
Number of strengthen sat checks:   0
Number of coverage checks:         1529421
  BDD entailment checks:           262779
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       39
Number of predicates discovered:          5
Number of abstraction locations:          113
Max number of predicates per location:    4
Avg number of predicates per location:    2
Total predicates per abstraction:         3182757
Max number of predicates per abstraction: 4
Avg number of predicates per abstraction: 170.32
Number of irrelevant predicates:          2343990 (74%)
Number of preds handled by boolean abs:   16064 (1%)
  Total number of models for allsat:      10783
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.02

Time for post operator:                271.836s
  Time for path formula creation:      267.596s
Time for strengthen operator:            8.124s
Time for prec operator:                344.215s
  Time for abstraction:                322.864s (Max:     6.683s, Count: 1643283)
    Boolean abstraction:                58.805s
    Solving time:                      105.796s (Max:     0.334s)
    Model enumeration time:              4.142s
    Time for BDD construction:           0.233s (Max:     0.002s)
Time for merge operator:                28.322s
Time for coverage check:                 0.537s
  Time for BDD entailment checks:        0.358s
Total time for SMT solver (w/o itp):   109.938s

Number of path formula cache hits:   6291315 (60%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:   225.598s

Total number of created targets for pointer analysis: 3151884
   Number of created targets for uf: *(void)* is 2
   Number of created targets for uf: *(struct_pi_adapter)* is 193
   Number of created targets for uf: *signed_int is 28168
   Number of created targets for uf: *(char)* is 5
   Number of created targets for uf: *char is 60233


Number of BDD nodes:                               229
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       20996 (count: 568169, min: 0, max: 1900, avg: 0.04)
Time for BDD node cleanup:                             0.162s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                 13.592s
  Time for transition matches:                         7.650s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.000s
Automaton transfers with branching:                0
Automaton transfer successors:                      9206605 (count: 9206605, min: 1, max: 1, avg: 1.00) [1 x 9206605]

CPA algorithm statistics
------------------------
Number of iterations:            5759678
Max size of waitlist:            24
Average size of waitlist:        15
Number of computed successors:   6657489
Max successors for one state:    2
Number of times merged:          633321
Number of times stopped:         893240
Number of times breaked:         71

Total time for CPA algorithm:       865.198s (Max:    30.532s)
  Time for choose from waitlist:      2.590s
  Time for precision adjustment:    403.436s
  Time for transfer relation:       379.388s
  Time for merge operator:           36.796s
  Time for stop operator:             8.854s
  Time for adding to reached set:    12.993s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   71
Avg. length of target path (in blocks):                8864 (count: 71, min: 35, max: 237, avg: 124.85)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  26.892s
  Counterexample analysis:                            13.074s (Max:     0.470s, Calls: 71)
    Refinement sat check:                             10.281s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.011s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.069s
  Precision update:                                    0.047s
  ARG update:                                         13.599s

Length of refined path (in blocks):                    6187 (count: 71, min: 10, max: 200, avg: 87.14)
Number of affected states:                             5628 (count: 71, min: 0, max: 199, avg: 79.27)
Length (states) of path with itp 'true':                488 (count: 71, min: 0, max: 102, avg: 6.87)
Length (states) of path with itp non-trivial itp:      5628 (count: 71, min: 0, max: 199, avg: 79.27)
Length (states) of path with itp 'false':                71 (count: 71, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 71, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:            5561 (count: 71, min: 0, max: 198, avg: 78.32)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                71
Number of successful refinements:     71
Number of failed refinements:         0
Max. size of reached set before ref.: 145449
Max. size of reached set after ref.:  60863
Avg. size of reached set before ref.: 82595.13
Avg. size of reached set after ref.:  2754.21

Total time for CEGAR algorithm:     895.442s
Time for refinements:                30.056s
Average time for refinement:          0.423s
Max time for refinement:              1.030s

Code Coverage
-----------------------------
  Function coverage:      0.803
  Visited lines:          1653
  Total lines:            1701
  Line coverage:          0.972
  Visited conditions:     318
  Total conditions:       332
  Condition coverage:     0.958

CPAchecker general statistics
-----------------------------
Number of program locations:     2171
Number of CFA edges:             2399
Number of relevant variables:    299
Number of functions:             61
Number of loops:                 18
Size of reached set:             91727
  Number of reached locations:   927 (43%)
    Avg states per location:     98
    Max states per location:     5308 (at node N169)
  Number of reached functions:   49 (80%)
  Number of partitions:          91708
    Avg size of partitions:      1
    Max size of partitions:      4 (with key [N1506 (before line 4962), Function main called from node N1457, stack depth 1 [38d5b107], stack [main]])
  Number of target states:       0
  Size of final wait list        20

Time for analysis setup:          4.827s
  Time for loading CPAs:          0.881s
  Time for loading parser:        0.686s
  Time for CFA construction:      3.154s
    Time for parsing file(s):     0.845s
    Time for AST to CFA:          1.176s
    Time for CFA sanity check:    0.166s
    Time for post-processing:     0.758s
      Time for var class.:        0.332s
Time for Analysis:              895.442s
CPU time for analysis:          895.400s
Total time for CPAchecker:      900.273s
Total CPU time for CPAchecker:  900.220s
Time for statistics:              1.267s

Time for Garbage Collector:      88.100s (in 464 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:               2451MB (  2337 MiB) max;   1220MB (  1163 MiB) avg;   2718MB (  2592 MiB) peak
Used non-heap memory:             39MB (    37 MiB) max;     38MB (    37 MiB) avg;     40MB (    38 MiB) peak
Allocated heap memory:          3279MB (  3127 MiB) max;   1761MB (  1679 MiB) avg
Allocated non-heap memory:        41MB (    39 MiB) max;     41MB (    39 MiB) avg
Total process virtual memory:   8300MB (  7915 MiB) max;   8104MB (  7728 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
