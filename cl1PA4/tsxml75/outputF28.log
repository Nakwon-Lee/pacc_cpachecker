scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.16-rc1/205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--can--can-dev.ko-entry_point_true-unreach-call.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_29yb655w/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 7229: Function pointer *(priv->do_get_berr_counter) with type int (*)(const struct net_device *, struct can_berr_counter *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7189: Function pointer *(priv->do_get_state) with type int (*)(const struct net_device *, enum can_state *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

line 7696: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp = ldv_zalloc(7168UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function ldv_init_4 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_release_4 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rtnl_link_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 7426: Ignoring function call through function pointer *(timer->function): (*(timer->function))(timer->data); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function nla_put to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 7189: Ignoring function call through function pointer *(priv->do_get_state): (*(priv->do_get_state))(dev, &state); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function rtnl_is_locked to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dump_stack to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function unregister_netdevice_notifier to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rtnl_link_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 7673: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp = ldv_zalloc(8UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 8314: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___1 = ldv_zalloc(24UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 7925: Destroying the void* pointer ldv_main_exported_3::tmp produces garbage or the memory pointed by it is unused: ldv_main_exported_3(); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 7229: Ignoring function call through function pointer *(priv->do_get_berr_counter): tmp___6 = (*(priv->do_get_berr_counter))(dev, &bec); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 6997: Ignoring function call through function pointer *(priv->do_set_bittiming): err = (*(priv->do_set_bittiming))(dev); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function register_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 7087: Ignoring function call through function pointer *(priv->do_set_data_bittiming): err = (*(priv->do_set_data_bittiming))(dev); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function netdev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snprintf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function led_trigger_rename_static to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netif_carrier_on to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netdev_warn to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_netdev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 6581: Ignoring function call through function pointer *(priv->do_set_mode): err = (*(priv->do_set_mode))(dev, 1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function skb_put to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            2138326 (14% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  1955974 (91%)
  Because of loop head:            182010 (9%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         342 (0%)
  Times precision was empty:       129634 (6%)
  Times precision was {false}:     4761 (0%)
  Times result was cached:         1988001 (93%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      15930 (1%)
  Times result was 'false':        112112 (5%)
Number of strengthen sat checks:   0
Number of coverage checks:         3859963
  BDD entailment checks:           960135
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       51
Number of predicates discovered:          47
Number of abstraction locations:          185
Max number of predicates per location:    15
Avg number of predicates per location:    4
Total predicates per abstraction:         6155476
Max number of predicates per abstraction: 15
Avg number of predicates per abstraction: 297.50
Number of irrelevant predicates:          3047500 (50%)
Number of preds handled by boolean abs:   48334 (1%)
  Total number of models for allsat:      32245
  Max number of models for allsat:        180
  Avg number of models for allsat:        2.02

Time for post operator:                 98.242s
  Time for path formula creation:       92.463s
Time for strengthen operator:           11.754s
Time for prec operator:                399.618s
  Time for abstraction:                371.700s (Max:     2.138s, Count: 2138326)
    Boolean abstraction:                17.679s
    Solving time:                       14.538s (Max:     0.042s)
    Model enumeration time:              3.260s
    Time for BDD construction:           0.688s (Max:     0.012s)
Time for merge operator:                11.889s
Time for coverage check:                 1.248s
  Time for BDD entailment checks:        0.789s
Total time for SMT solver (w/o itp):    17.798s

Number of path formula cache hits:   18129438 (97%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    39.412s

Total number of created targets for pointer analysis: 60261
   Number of created targets for uf: *unsigned_short_int is 994
   Number of created targets for uf: *(void)* is 631
   Number of created targets for uf: *(struct_rtnl_link_ops)* is 389
   Number of created targets for uf: *signed_int is 98
   Number of created targets for uf: *(unsigned_char)* is 88
   Number of created targets for uf: *(struct_can_frame)* is 97
   Number of created targets for uf: *unsigned_int is 175
   Number of created targets for uf: *unsigned_long_int is 987


Number of BDD nodes:                               34376
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       42208 (count: 1232597, min: 0, max: 2219, avg: 0.03)
Time for BDD node cleanup:                             0.202s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                 18.620s
  Time for transition matches:                         9.378s
  Time for transition assertions:                      0.002s
  Time for transition actions:                         0.005s
Automaton transfers with branching:                0
Automaton transfer successors:                     15426731 (count: 15426731, min: 1, max: 1, avg: 1.00) [1 x 15426731]

CPA algorithm statistics
------------------------
Number of iterations:            10369600
Max size of waitlist:            1426
Average size of waitlist:        601
Number of computed successors:   12429258
Max successors for one state:    2
Number of times merged:          1449914
Number of times stopped:         1892523
Number of times breaked:         342

Total time for CPA algorithm:       823.309s (Max:    17.124s)
  Time for choose from waitlist:      5.140s
  Time for precision adjustment:    483.029s
  Time for transfer relation:       245.861s
  Time for merge operator:           28.435s
  Time for stop operator:            12.974s
  Time for adding to reached set:    20.328s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   342
Avg. length of target path (in blocks):               21142 (count: 342, min: 18, max: 102, avg: 61.82)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  39.001s
  Counterexample analysis:                            10.392s (Max:     0.084s, Calls: 342)
    Refinement sat check:                              6.242s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.028s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.190s
  Precision update:                                    0.263s
  ARG update:                                         27.890s

Length of refined path (in blocks):                   15366 (count: 342, min: 10, max: 86, avg: 44.93)
Number of affected states:                             6566 (count: 342, min: 1, max: 71, avg: 19.20)
Length (states) of path with itp 'true':               8458 (count: 342, min: 4, max: 68, avg: 24.73)
Length (states) of path with itp non-trivial itp:      6566 (count: 342, min: 1, max: 71, avg: 19.20)
Length (states) of path with itp 'false':               342 (count: 342, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:         428 (count: 342, min: 0, max: 10, avg: 1.25)
Equal non-trivial interpolants along paths:            5796 (count: 342, min: 0, max: 69, avg: 16.95)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                342
Number of successful refinements:     342
Number of failed refinements:         0
Max. size of reached set before ref.: 204102
Max. size of reached set after ref.:  153161
Avg. size of reached set before ref.: 64706.04
Avg. size of reached set after ref.:  34529.76

Total time for CEGAR algorithm:     895.279s
Time for refinements:                60.099s
Average time for refinement:          0.175s
Max time for refinement:              2.929s

Code Coverage
-----------------------------
  Function coverage:      0.392
  Visited lines:          1714
  Total lines:            2304
  Line coverage:          0.744
  Visited conditions:     311
  Total conditions:       508
  Condition coverage:     0.612

CPAchecker general statistics
-----------------------------
Number of program locations:     3126
Number of CFA edges:             3431
Number of relevant variables:    414
Number of functions:             125
Number of loops:                 12
Size of reached set:             104337
  Number of reached locations:   777 (25%)
    Avg states per location:     134
    Max states per location:     1753 (at node N99)
  Number of reached functions:   49 (39%)
  Number of partitions:          103817
    Avg size of partitions:      1
    Max size of partitions:      41 (with key [N1506 (before line 7707), Function main called from node N1489, stack depth 1 [1eb6e1c], stack [main]])
  Number of target states:       0
  Size of final wait list        1298

Time for analysis setup:          5.751s
  Time for loading CPAs:          0.997s
  Time for loading parser:        0.712s
  Time for CFA construction:      3.892s
    Time for parsing file(s):     1.129s
    Time for AST to CFA:          1.365s
    Time for CFA sanity check:    0.248s
    Time for post-processing:     0.929s
      Time for var class.:        0.392s
Time for Analysis:              895.279s
CPU time for analysis:          895.190s
Total time for CPAchecker:      901.041s
Total CPU time for CPAchecker:  900.940s
Time for statistics:              1.222s

Time for Garbage Collector:     119.089s (in 1289 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                921MB (   879 MiB) max;    432MB (   412 MiB) avg;    947MB (   903 MiB) peak
Used non-heap memory:             41MB (    39 MiB) max;     40MB (    38 MiB) avg;     42MB (    40 MiB) peak
Allocated heap memory:           945MB (   901 MiB) max;    641MB (   612 MiB) avg
Allocated non-heap memory:        43MB (    41 MiB) max;     43MB (    41 MiB) avg
Total process virtual memory:   8355MB (  7968 MiB) max;   8207MB (  7827 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
