scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.16-rc1/205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--can--can-dev.ko-entry_point_true-unreach-call.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_6wfrcykt/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 7229: Function pointer *(priv->do_get_berr_counter) with type int (*)(const struct net_device *, struct can_berr_counter *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7189: Function pointer *(priv->do_get_state) with type int (*)(const struct net_device *, enum can_state *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

line 7696: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp = ldv_zalloc(7168UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function ldv_init_4 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_release_4 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 7426: Ignoring function call through function pointer *(timer->function): (*(timer->function))(timer->data); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function rtnl_link_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function unregister_netdevice_notifier to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rtnl_link_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rtnl_is_locked to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function nla_put to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 7189: Ignoring function call through function pointer *(priv->do_get_state): (*(priv->do_get_state))(dev, &state); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 8314: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___1 = ldv_zalloc(24UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 7925: Destroying the void* pointer ldv_main_exported_3::tmp produces garbage or the memory pointed by it is unused: ldv_main_exported_3(); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function dump_stack to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 7673: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp = ldv_zalloc(8UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 7229: Ignoring function call through function pointer *(priv->do_get_berr_counter): tmp___6 = (*(priv->do_get_berr_counter))(dev, &bec); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 6997: Ignoring function call through function pointer *(priv->do_set_bittiming): err = (*(priv->do_set_bittiming))(dev); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 7087: Ignoring function call through function pointer *(priv->do_set_data_bittiming): err = (*(priv->do_set_data_bittiming))(dev); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function snprintf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function led_trigger_rename_static to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function register_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netdev_warn to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netdev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function skb_put to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_netdev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 6581: Ignoring function call through function pointer *(priv->do_set_mode): err = (*(priv->do_set_mode))(dev, 1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function netif_carrier_on to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            2451204 (15% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  2243866 (92%)
  Because of loop head:            207055 (8%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         283 (0%)
  Times precision was empty:       623870 (25%)
  Times precision was {false}:     4993 (0%)
  Times result was cached:         1809608 (74%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      12733 (1%)
  Times result was 'false':        128437 (5%)
Number of strengthen sat checks:   0
Number of coverage checks:         3826601
  BDD entailment checks:           1074223
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       51
Number of predicates discovered:          46
Number of abstraction locations:          185
Max number of predicates per location:    18
Avg number of predicates per location:    5
Total predicates per abstraction:         9468284
Max number of predicates per abstraction: 18
Avg number of predicates per abstraction: 534.15
Number of irrelevant predicates:          6301947 (67%)
Number of preds handled by boolean abs:   55580 (1%)
  Total number of models for allsat:      43962
  Max number of models for allsat:        540
  Avg number of models for allsat:        3.45

Time for post operator:                 97.356s
  Time for path formula creation:       89.802s
Time for strengthen operator:           12.736s
Time for prec operator:                419.717s
  Time for abstraction:                389.408s (Max:     1.681s, Count: 2451204)
    Boolean abstraction:                19.692s
    Solving time:                       15.874s (Max:     0.028s)
    Model enumeration time:              4.540s
    Time for BDD construction:           1.182s (Max:     0.038s)
Time for merge operator:                10.717s
Time for coverage check:                 1.393s
  Time for BDD entailment checks:        0.981s
Total time for SMT solver (w/o itp):    20.414s

Number of path formula cache hits:   19573616 (97%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    33.112s

Total number of created targets for pointer analysis: 61781
   Number of created targets for uf: *unsigned_short_int is 454
   Number of created targets for uf: *(void)* is 8056
   Number of created targets for uf: *(struct_rtnl_link_ops)* is 469
   Number of created targets for uf: *signed_int is 65
   Number of created targets for uf: *(unsigned_char)* is 290
   Number of created targets for uf: *(struct_can_frame)* is 334
   Number of created targets for uf: *unsigned_int is 2049
   Number of created targets for uf: *unsigned_long_int is 987


Number of BDD nodes:                               103775
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       42397 (count: 1859598, min: 0, max: 706, avg: 0.02)
Time for BDD node cleanup:                             0.312s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                 19.705s
  Time for transition matches:                         9.850s
  Time for transition assertions:                      0.001s
  Time for transition actions:                         0.004s
Automaton transfers with branching:                0
Automaton transfer successors:                     16521411 (count: 16521411, min: 1, max: 1, avg: 1.00) [1 x 16521411]

CPA algorithm statistics
------------------------
Number of iterations:            10979443
Max size of waitlist:            1695
Average size of waitlist:        710
Number of computed successors:   13069095
Max successors for one state:    2
Number of times merged:          1376189
Number of times stopped:         1802064
Number of times breaked:         283

Total time for CPA algorithm:       845.326s (Max:    15.050s)
  Time for choose from waitlist:      4.283s
  Time for precision adjustment:    512.926s
  Time for transfer relation:       240.629s
  Time for merge operator:           27.554s
  Time for stop operator:            14.564s
  Time for adding to reached set:    15.052s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   283
Avg. length of target path (in blocks):               14684 (count: 283, min: 18, max: 105, avg: 51.89)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  38.814s
  Counterexample analysis:                             6.127s (Max:     0.056s, Calls: 283)
    Refinement sat check:                              3.704s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.018s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.135s
  Precision update:                                    0.230s
  ARG update:                                         32.134s

Length of refined path (in blocks):                   10661 (count: 283, min: 10, max: 68, avg: 37.67)
Number of affected states:                             7514 (count: 283, min: 1, max: 63, avg: 26.55)
Length (states) of path with itp 'true':               2864 (count: 283, min: 4, max: 42, avg: 10.12)
Length (states) of path with itp non-trivial itp:      7514 (count: 283, min: 1, max: 63, avg: 26.55)
Length (states) of path with itp 'false':               283 (count: 283, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:         113 (count: 283, min: 0, max: 10, avg: 0.40)
Equal non-trivial interpolants along paths:            7118 (count: 283, min: 0, max: 58, avg: 25.15)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                283
Number of successful refinements:     283
Number of failed refinements:         0
Max. size of reached set before ref.: 210245
Max. size of reached set after ref.:  187628
Avg. size of reached set before ref.: 41618.97
Avg. size of reached set after ref.:  2556.53

Total time for CEGAR algorithm:     893.837s
Time for refinements:                47.754s
Average time for refinement:          0.168s
Max time for refinement:              1.787s

Code Coverage
-----------------------------
  Function coverage:      0.520
  Visited lines:          1955
  Total lines:            2304
  Line coverage:          0.849
  Visited conditions:     413
  Total conditions:       508
  Condition coverage:     0.813

CPAchecker general statistics
-----------------------------
Number of program locations:     3126
Number of CFA edges:             3431
Number of relevant variables:    414
Number of functions:             125
Number of loops:                 12
Size of reached set:             83923
  Number of reached locations:   1054 (34%)
    Avg states per location:     79
    Max states per location:     1172 (at node N99)
  Number of reached functions:   65 (52%)
  Number of partitions:          83814
    Avg size of partitions:      1
    Max size of partitions:      36 (with key [N1506 (before line 7707), Function main called from node N1489, stack depth 1 [1eb6e1c], stack [main]])
  Number of target states:       0
  Size of final wait list        963

Time for analysis setup:          6.555s
  Time for loading CPAs:          1.136s
  Time for loading parser:        0.690s
  Time for CFA construction:      4.572s
    Time for parsing file(s):     1.274s
    Time for AST to CFA:          1.603s
    Time for CFA sanity check:    0.300s
    Time for post-processing:     1.170s
      Time for var class.:        0.462s
Time for Analysis:              893.837s
CPU time for analysis:          893.750s
Total time for CPAchecker:      900.397s
Total CPU time for CPAchecker:  900.290s
Time for statistics:              1.189s

Time for Garbage Collector:     118.189s (in 1739 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                831MB (   793 MiB) max;    351MB (   334 MiB) avg;    845MB (   806 MiB) peak
Used non-heap memory:             41MB (    39 MiB) max;     40MB (    38 MiB) avg;     42MB (    40 MiB) peak
Allocated heap memory:           846MB (   807 MiB) max;    528MB (   504 MiB) avg
Allocated non-heap memory:        43MB (    41 MiB) max;     43MB (    41 MiB) avg
Total process virtual memory:   8222MB (  7841 MiB) max;   8175MB (  7796 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
