scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.16-rc1/205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--can--can-dev.ko-entry_point_true-unreach-call.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_y2clgwds/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 7229: Function pointer *(priv->do_get_berr_counter) with type int (*)(const struct net_device *, struct can_berr_counter *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7189: Function pointer *(priv->do_get_state) with type int (*)(const struct net_device *, enum can_state *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

line 7696: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp = ldv_zalloc(7168UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function ldv_init_4 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_release_4 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 7426: Ignoring function call through function pointer *(timer->function): (*(timer->function))(timer->data); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function skb_put to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_netdev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 6581: Ignoring function call through function pointer *(priv->do_set_mode): err = (*(priv->do_set_mode))(dev, 1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function netif_carrier_on to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netdev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rtnl_link_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function unregister_netdevice_notifier to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 8314: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___1 = ldv_zalloc(24UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function rtnl_link_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rtnl_is_locked to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function nla_put to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 7189: Ignoring function call through function pointer *(priv->do_get_state): (*(priv->do_get_state))(dev, &state); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 7925: Destroying the void* pointer ldv_main_exported_3::tmp produces garbage or the memory pointed by it is unused: ldv_main_exported_3(); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function snprintf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function led_trigger_rename_static to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dump_stack to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netdev_warn to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 7229: Ignoring function call through function pointer *(priv->do_get_berr_counter): tmp___6 = (*(priv->do_get_berr_counter))(dev, &bec); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 6997: Ignoring function call through function pointer *(priv->do_set_bittiming): err = (*(priv->do_set_bittiming))(dev); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function register_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 7087: Ignoring function call through function pointer *(priv->do_set_data_bittiming): err = (*(priv->do_set_data_bittiming))(dev); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 7673: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp = ldv_zalloc(8UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            2048500 (15% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  1807007 (88%)
  Because of loop head:            241154 (12%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         339 (0%)
  Times precision was empty:       507948 (25%)
  Times precision was {false}:     4141 (0%)
  Times result was cached:         1519220 (74%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      17191 (1%)
  Times result was 'false':        102036 (5%)
Number of strengthen sat checks:   0
Number of coverage checks:         3259665
  BDD entailment checks:           829529
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       51
Number of predicates discovered:          43
Number of abstraction locations:          184
Max number of predicates per location:    20
Avg number of predicates per location:    6
Total predicates per abstraction:         11392936
Max number of predicates per abstraction: 20
Avg number of predicates per abstraction: 534.08
Number of irrelevant predicates:          6956613 (61%)
Number of preds handled by boolean abs:   82224 (1%)
  Total number of models for allsat:      31289
  Max number of models for allsat:        48
  Avg number of models for allsat:        1.82

Time for post operator:                132.870s
  Time for path formula creation:      127.599s
Time for strengthen operator:           10.829s
Time for prec operator:                438.918s
  Time for abstraction:                412.561s (Max:     1.884s, Count: 2048500)
    Boolean abstraction:                22.481s
    Solving time:                       20.609s (Max:     0.028s)
    Model enumeration time:              2.931s
    Time for BDD construction:           0.782s (Max:     0.115s)
Time for merge operator:                15.176s
Time for coverage check:                 1.282s
  Time for BDD entailment checks:        0.841s
Total time for SMT solver (w/o itp):    23.540s

Number of path formula cache hits:   15628774 (92%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    73.279s

Total number of created targets for pointer analysis: 204926
   Number of created targets for uf: *unsigned_short_int is 331
   Number of created targets for uf: *(void)* is 36436
   Number of created targets for uf: *(struct_rtnl_link_ops)* is 647
   Number of created targets for uf: *signed_int is 17
   Number of created targets for uf: *(unsigned_char)* is 1052
   Number of created targets for uf: *(struct_can_frame)* is 1674
   Number of created targets for uf: *unsigned_int is 4385
   Number of created targets for uf: *unsigned_long_int is 2619


Number of BDD nodes:                               33243
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       56809 (count: 1501596, min: 0, max: 2263, avg: 0.04)
Time for BDD node cleanup:                             0.320s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                 18.256s
  Time for transition matches:                        10.306s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.002s
Automaton transfers with branching:                0
Automaton transfer successors:                     14097280 (count: 14097280, min: 1, max: 1, avg: 1.00) [1 x 14097280]

CPA algorithm statistics
------------------------
Number of iterations:            9534493
Max size of waitlist:            221
Average size of waitlist:        37
Number of computed successors:   11287975
Max successors for one state:    2
Number of times merged:          1215068
Number of times stopped:         1650834
Number of times breaked:         339

Total time for CPA algorithm:       858.993s (Max:     7.629s)
  Time for choose from waitlist:      4.233s
  Time for precision adjustment:    510.063s
  Time for transfer relation:       259.058s
  Time for merge operator:           29.089s
  Time for stop operator:            13.036s
  Time for adding to reached set:    19.351s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   339
Avg. length of target path (in blocks):               18182 (count: 339, min: 18, max: 105, avg: 53.63)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  26.483s
  Counterexample analysis:                             6.834s (Max:     0.066s, Calls: 339)
    Refinement sat check:                              4.239s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.018s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.121s
  Precision update:                                    0.255s
  ARG update:                                         19.093s

Length of refined path (in blocks):                   12811 (count: 339, min: 10, max: 85, avg: 37.79)
Number of affected states:                             8779 (count: 339, min: 1, max: 80, avg: 25.90)
Length (states) of path with itp 'true':               3693 (count: 339, min: 4, max: 41, avg: 10.89)
Length (states) of path with itp non-trivial itp:      8779 (count: 339, min: 1, max: 80, avg: 25.90)
Length (states) of path with itp 'false':               339 (count: 339, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:          82 (count: 339, min: 0, max: 10, avg: 0.24)
Equal non-trivial interpolants along paths:            8358 (count: 339, min: 0, max: 78, avg: 24.65)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                339
Number of successful refinements:     339
Number of failed refinements:         0
Max. size of reached set before ref.: 77026
Max. size of reached set after ref.:  51512
Avg. size of reached set before ref.: 34962.41
Avg. size of reached set after ref.:  6950.44

Total time for CEGAR algorithm:     894.331s
Time for refinements:                33.422s
Average time for refinement:          0.098s
Max time for refinement:              0.506s

Code Coverage
-----------------------------
  Function coverage:      0.520
  Visited lines:          1968
  Total lines:            2304
  Line coverage:          0.854
  Visited conditions:     415
  Total conditions:       508
  Condition coverage:     0.817

CPAchecker general statistics
-----------------------------
Number of program locations:     3126
Number of CFA edges:             3431
Number of relevant variables:    414
Number of functions:             125
Number of loops:                 12
Size of reached set:             39046
  Number of reached locations:   1071 (34%)
    Avg states per location:     36
    Max states per location:     366 (at node N98)
  Number of reached functions:   65 (52%)
  Number of partitions:          38712
    Avg size of partitions:      1
    Max size of partitions:      17 (with key [N1506 (before line 7707), Function main called from node N1489, stack depth 1 [1eb6e1c], stack [main]])
  Number of target states:       0
  Size of final wait list        27

Time for analysis setup:          5.927s
  Time for loading CPAs:          1.055s
  Time for loading parser:        0.643s
  Time for CFA construction:      4.081s
    Time for parsing file(s):     1.089s
    Time for AST to CFA:          1.430s
    Time for CFA sanity check:    0.252s
    Time for post-processing:     1.078s
      Time for var class.:        0.466s
Time for Analysis:              894.331s
CPU time for analysis:          894.250s
Total time for CPAchecker:      900.262s
Total CPU time for CPAchecker:  900.160s
Time for statistics:              0.593s

Time for Garbage Collector:      82.417s (in 1241 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:               1094MB (  1043 MiB) max;    504MB (   481 MiB) avg;   1108MB (  1057 MiB) peak
Used non-heap memory:             41MB (    39 MiB) max;     40MB (    39 MiB) avg;     42MB (    40 MiB) peak
Allocated heap memory:          1276MB (  1217 MiB) max;    743MB (   709 MiB) avg
Allocated non-heap memory:        43MB (    41 MiB) max;     43MB (    41 MiB) avg
Total process virtual memory:   8356MB (  7969 MiB) max;   8191MB (  7812 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
