scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.16-rc1/205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--can--can-dev.ko-entry_point_true-unreach-call.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_wd622kfg/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 7229: Function pointer *(priv->do_get_berr_counter) with type int (*)(const struct net_device *, struct can_berr_counter *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7189: Function pointer *(priv->do_get_state) with type int (*)(const struct net_device *, enum can_state *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

line 7696: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp = ldv_zalloc(7168UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function ldv_init_4 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_release_4 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 7426: Ignoring function call through function pointer *(timer->function): (*(timer->function))(timer->data); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function rtnl_link_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function unregister_netdevice_notifier to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rtnl_link_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rtnl_is_locked to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function nla_put to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 7189: Ignoring function call through function pointer *(priv->do_get_state): (*(priv->do_get_state))(dev, &state); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 8314: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___1 = ldv_zalloc(24UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 7925: Destroying the void* pointer ldv_main_exported_3::tmp produces garbage or the memory pointed by it is unused: ldv_main_exported_3(); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function dump_stack to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 7673: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp = ldv_zalloc(8UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 7229: Ignoring function call through function pointer *(priv->do_get_berr_counter): tmp___6 = (*(priv->do_get_berr_counter))(dev, &bec); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 6997: Ignoring function call through function pointer *(priv->do_set_bittiming): err = (*(priv->do_set_bittiming))(dev); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 7087: Ignoring function call through function pointer *(priv->do_set_data_bittiming): err = (*(priv->do_set_data_bittiming))(dev); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function snprintf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function led_trigger_rename_static to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function register_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netdev_warn to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netdev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function skb_put to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_netdev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 6581: Ignoring function call through function pointer *(priv->do_set_mode): err = (*(priv->do_set_mode))(dev, 1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function netif_carrier_on to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            2296471 (15% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  2071874 (90%)
  Because of loop head:            224294 (10%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         303 (0%)
  Times precision was empty:       446413 (19%)
  Times precision was {false}:     4169 (0%)
  Times result was cached:         1831093 (80%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      14796 (1%)
  Times result was 'false':        128742 (6%)
Number of strengthen sat checks:   0
Number of coverage checks:         3598948
  BDD entailment checks:           981638
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       51
Number of predicates discovered:          43
Number of abstraction locations:          185
Max number of predicates per location:    18
Avg number of predicates per location:    5
Total predicates per abstraction:         10391055
Max number of predicates per abstraction: 18
Avg number of predicates per abstraction: 547.91
Number of irrelevant predicates:          6184310 (60%)
Number of preds handled by boolean abs:   68693 (1%)
  Total number of models for allsat:      26956
  Max number of models for allsat:        180
  Avg number of models for allsat:        1.82

Time for post operator:                 93.857s
  Time for path formula creation:       86.390s
Time for strengthen operator:           11.797s
Time for prec operator:                457.508s
  Time for abstraction:                428.590s (Max:     1.549s, Count: 2296471)
    Boolean abstraction:                19.520s
    Solving time:                       16.902s (Max:     0.035s)
    Model enumeration time:              2.521s
    Time for BDD construction:           0.800s (Max:     0.045s)
Time for merge operator:                11.165s
Time for coverage check:                 1.244s
  Time for BDD entailment checks:        0.847s
Total time for SMT solver (w/o itp):    19.423s

Number of path formula cache hits:   18387959 (97%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    32.236s

Total number of created targets for pointer analysis: 54340
   Number of created targets for uf: *unsigned_short_int is 1639
   Number of created targets for uf: *(void)* is 6976
   Number of created targets for uf: *(struct_rtnl_link_ops)* is 283
   Number of created targets for uf: *signed_int is 11
   Number of created targets for uf: *(unsigned_char)* is 352
   Number of created targets for uf: *(struct_can_frame)* is 435
   Number of created targets for uf: *unsigned_int is 1277
   Number of created targets for uf: *unsigned_long_int is 733


Number of BDD nodes:                               45869
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       45559 (count: 1592056, min: 0, max: 595, avg: 0.03)
Time for BDD node cleanup:                             0.267s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                 18.061s
  Time for transition matches:                         8.315s
  Time for transition assertions:                      0.004s
  Time for transition actions:                         0.003s
Automaton transfers with branching:                0
Automaton transfer successors:                     15558690 (count: 15558690, min: 1, max: 1, avg: 1.00) [1 x 15558690]

CPA algorithm statistics
------------------------
Number of iterations:            10420174
Max size of waitlist:            936
Average size of waitlist:        392
Number of computed successors:   12374364
Max successors for one state:    2
Number of times merged:          1308655
Number of times stopped:         1729834
Number of times breaked:         303

Total time for CPA algorithm:       855.974s (Max:    13.084s)
  Time for choose from waitlist:      4.557s
  Time for precision adjustment:    542.192s
  Time for transfer relation:       228.345s
  Time for merge operator:           26.044s
  Time for stop operator:            13.175s
  Time for adding to reached set:    14.379s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   303
Avg. length of target path (in blocks):               16756 (count: 303, min: 18, max: 105, avg: 55.30)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  31.909s
  Counterexample analysis:                             6.684s (Max:     0.064s, Calls: 303)
    Refinement sat check:                              4.039s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.016s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.189s
  Precision update:                                    0.284s
  ARG update:                                         24.528s

Length of refined path (in blocks):                   11351 (count: 303, min: 10, max: 68, avg: 37.46)
Number of affected states:                             8220 (count: 303, min: 1, max: 63, avg: 27.13)
Length (states) of path with itp 'true':               2828 (count: 303, min: 4, max: 38, avg: 9.33)
Length (states) of path with itp non-trivial itp:      8220 (count: 303, min: 1, max: 63, avg: 27.13)
Length (states) of path with itp 'false':               303 (count: 303, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:         106 (count: 303, min: 0, max: 10, avg: 0.35)
Equal non-trivial interpolants along paths:            7811 (count: 303, min: 0, max: 58, avg: 25.78)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                303
Number of successful refinements:     303
Number of failed refinements:         0
Max. size of reached set before ref.: 133404
Max. size of reached set after ref.:  9608
Avg. size of reached set before ref.: 35303.94
Avg. size of reached set after ref.:  749.04

Total time for CEGAR algorithm:     894.264s
Time for refinements:                38.095s
Average time for refinement:          0.125s
Max time for refinement:              0.530s

Code Coverage
-----------------------------
  Function coverage:      0.512
  Visited lines:          1941
  Total lines:            2304
  Line coverage:          0.842
  Visited conditions:     413
  Total conditions:       508
  Condition coverage:     0.813

CPAchecker general statistics
-----------------------------
Number of program locations:     3126
Number of CFA edges:             3431
Number of relevant variables:    414
Number of functions:             125
Number of loops:                 12
Size of reached set:             45653
  Number of reached locations:   1034 (33%)
    Avg states per location:     44
    Max states per location:     733 (at node N99)
  Number of reached functions:   64 (51%)
  Number of partitions:          45513
    Avg size of partitions:      1
    Max size of partitions:      31 (with key [N1506 (before line 7707), Function main called from node N1489, stack depth 1 [2b8bd14b], stack [main]])
  Number of target states:       0
  Size of final wait list        888

Time for analysis setup:          6.132s
  Time for loading CPAs:          1.048s
  Time for loading parser:        0.730s
  Time for CFA construction:      4.220s
    Time for parsing file(s):     1.177s
    Time for AST to CFA:          1.514s
    Time for CFA sanity check:    0.283s
    Time for post-processing:     1.010s
      Time for var class.:        0.400s
Time for Analysis:              894.264s
CPU time for analysis:          894.200s
Total time for CPAchecker:      900.400s
Total CPU time for CPAchecker:  900.320s
Time for statistics:              0.724s

Time for Garbage Collector:     109.316s (in 1878 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                767MB (   731 MiB) max;    310MB (   295 MiB) avg;    793MB (   757 MiB) peak
Used non-heap memory:             41MB (    39 MiB) max;     40MB (    38 MiB) avg;     41MB (    39 MiB) peak
Allocated heap memory:           798MB (   761 MiB) max;    457MB (   436 MiB) avg
Allocated non-heap memory:        43MB (    41 MiB) max;     42MB (    40 MiB) avg
Total process virtual memory:   8221MB (  7840 MiB) max;   8172MB (  7794 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
