scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.16-rc1/205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--can--can-dev.ko-entry_point_true-unreach-call.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_tw4gpna3/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 7229: Function pointer *(priv->do_get_berr_counter) with type int (*)(const struct net_device *, struct can_berr_counter *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7189: Function pointer *(priv->do_get_state) with type int (*)(const struct net_device *, enum can_state *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

line 7696: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp = ldv_zalloc(7168UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function ldv_init_4 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_release_4 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 8314: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___1 = ldv_zalloc(24UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 7925: Destroying the void* pointer ldv_main_exported_3::tmp produces garbage or the memory pointed by it is unused: ldv_main_exported_3(); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 7426: Ignoring function call through function pointer *(timer->function): (*(timer->function))(timer->data); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function rtnl_link_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 7673: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp = ldv_zalloc(8UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function rtnl_link_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snprintf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function led_trigger_rename_static to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function unregister_netdevice_notifier to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rtnl_is_locked to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 7189: Ignoring function call through function pointer *(priv->do_get_state): (*(priv->do_get_state))(dev, &state); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function nla_put to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 7229: Ignoring function call through function pointer *(priv->do_get_berr_counter): tmp___6 = (*(priv->do_get_berr_counter))(dev, &bec); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function dump_stack to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 6997: Ignoring function call through function pointer *(priv->do_set_bittiming): err = (*(priv->do_set_bittiming))(dev); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function register_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netdev_warn to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netdev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 7087: Ignoring function call through function pointer *(priv->do_set_data_bittiming): err = (*(priv->do_set_data_bittiming))(dev); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function __dynamic_netdev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 6581: Ignoring function call through function pointer *(priv->do_set_mode): err = (*(priv->do_set_mode))(dev, 1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function netif_carrier_on to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            2278064 (11% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  2184002 (96%)
  Because of loop head:            93299 (4%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         763 (0%)
  Times precision was empty:       814924 (36%)
  Times precision was {false}:     5131 (0%)
  Times result was cached:         1444314 (63%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      13695 (1%)
  Times result was 'false':        117820 (5%)
Number of strengthen sat checks:   0
Number of coverage checks:         4796267
  BDD entailment checks:           841677
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       51
Number of predicates discovered:          17
Number of abstraction locations:          111
Max number of predicates per location:    12
Avg number of predicates per location:    4
Total predicates per abstraction:         3536711
Max number of predicates per abstraction: 12
Avg number of predicates per abstraction: 187.86
Number of irrelevant predicates:          1645694 (47%)
Number of preds handled by boolean abs:   40153 (1%)
  Total number of models for allsat:      97086
  Max number of models for allsat:        540
  Avg number of models for allsat:        7.09

Time for post operator:                130.209s
  Time for path formula creation:      120.765s
Time for strengthen operator:           16.644s
Time for prec operator:                333.587s
  Time for abstraction:                304.161s (Max:     1.742s, Count: 2278064)
    Boolean abstraction:                33.794s
    Solving time:                       23.274s (Max:     0.038s)
    Model enumeration time:             10.506s
    Time for BDD construction:           1.809s (Max:     0.018s)
Time for merge operator:                17.197s
Time for coverage check:                 1.188s
  Time for BDD entailment checks:        0.705s
Total time for SMT solver (w/o itp):    33.780s

Number of path formula cache hits:   22908544 (96%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    56.762s

Total number of created targets for pointer analysis: 166858
   Number of created targets for uf: *unsigned_short_int is 988
   Number of created targets for uf: *(void)* is 1441
   Number of created targets for uf: *(struct_rtnl_link_ops)* is 1309
   Number of created targets for uf: *signed_int is 401
   Number of created targets for uf: *(unsigned_char)* is 85
   Number of created targets for uf: *unsigned_int is 6677
   Number of created targets for uf: *unsigned_long_int is 2977


Number of BDD nodes:                               45649
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       29053 (count: 1792499, min: 0, max: 411, avg: 0.02)
Time for BDD node cleanup:                             0.327s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                 24.345s
  Time for transition matches:                        13.288s
  Time for transition assertions:                      0.006s
  Time for transition actions:                         0.013s
Automaton transfers with branching:                0
Automaton transfer successors:                     19833273 (count: 19833273, min: 1, max: 1, avg: 1.00) [1 x 19833273]

CPA algorithm statistics
------------------------
Number of iterations:            12662607
Max size of waitlist:            1925
Average size of waitlist:        537
Number of computed successors:   15390991
Max successors for one state:    2
Number of times merged:          1977295
Number of times stopped:         2347130
Number of times breaked:         763

Total time for CPA algorithm:       837.286s (Max:    13.168s)
  Time for choose from waitlist:      4.554s
  Time for precision adjustment:    432.955s
  Time for transfer relation:       296.477s
  Time for merge operator:           37.583s
  Time for stop operator:            15.745s
  Time for adding to reached set:    17.350s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   763
Avg. length of target path (in blocks):               38493 (count: 763, min: 18, max: 95, avg: 50.45)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  42.440s
  Counterexample analysis:                            16.388s (Max:     0.103s, Calls: 763)
    Refinement sat check:                             10.836s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.038s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.232s
  Precision update:                                    0.319s
  ARG update:                                         25.076s

Length of refined path (in blocks):                   27836 (count: 763, min: 10, max: 64, avg: 36.48)
Number of affected states:                            15522 (count: 763, min: 1, max: 44, avg: 20.34)
Length (states) of path with itp 'true':              11551 (count: 763, min: 4, max: 51, avg: 15.14)
Length (states) of path with itp non-trivial itp:     15522 (count: 763, min: 1, max: 44, avg: 20.34)
Length (states) of path with itp 'false':               763 (count: 763, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:          68 (count: 763, min: 0, max: 1, avg: 0.09)
Equal non-trivial interpolants along paths:           14691 (count: 763, min: 0, max: 43, avg: 19.25)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                763
Number of successful refinements:     763
Number of failed refinements:         0
Max. size of reached set before ref.: 131154
Max. size of reached set after ref.:  84294
Avg. size of reached set before ref.: 21905.47
Avg. size of reached set after ref.:  5011.28

Total time for CEGAR algorithm:     893.860s
Time for refinements:                53.208s
Average time for refinement:          0.069s
Max time for refinement:              0.913s

Code Coverage
-----------------------------
  Function coverage:      0.376
  Visited lines:          1740
  Total lines:            2304
  Line coverage:          0.755
  Visited conditions:     356
  Total conditions:       508
  Condition coverage:     0.701

CPAchecker general statistics
-----------------------------
Number of program locations:     3126
Number of CFA edges:             3431
Number of relevant variables:    414
Number of functions:             125
Number of loops:                 12
Size of reached set:             35772
  Number of reached locations:   800 (26%)
    Avg states per location:     44
    Max states per location:     573 (at node N99)
  Number of reached functions:   47 (38%)
  Number of partitions:          35612
    Avg size of partitions:      1
    Max size of partitions:      31 (with key [N1506 (before line 7707), Function main called from node N1489, stack depth 1 [1eb6e1c], stack [main]])
  Number of target states:       0
  Size of final wait list        1028

Time for analysis setup:          6.349s
  Time for loading CPAs:          1.142s
  Time for loading parser:        0.763s
  Time for CFA construction:      4.284s
    Time for parsing file(s):     1.250s
    Time for AST to CFA:          1.548s
    Time for CFA sanity check:    0.232s
    Time for post-processing:     1.006s
      Time for var class.:        0.452s
Time for Analysis:              893.860s
CPU time for analysis:          893.810s
Total time for CPAchecker:      900.213s
Total CPU time for CPAchecker:  900.150s
Time for statistics:              0.542s

Time for Garbage Collector:     101.267s (in 2392 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:               1017MB (   969 MiB) max;    282MB (   269 MiB) avg;   1051MB (  1003 MiB) peak
Used non-heap memory:             43MB (    41 MiB) max;     41MB (    39 MiB) avg;     43MB (    41 MiB) peak
Allocated heap memory:          1069MB (  1019 MiB) max;    417MB (   398 MiB) avg
Allocated non-heap memory:        45MB (    43 MiB) max;     44MB (    42 MiB) avg
Total process virtual memory:   8292MB (  7908 MiB) max;   8146MB (  7768 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
