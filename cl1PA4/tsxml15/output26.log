scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.16-rc1/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-sound--pci--cs46xx--snd-cs46xx.ko-entry_point_true-unreach-call.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_6dm2j78u/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 9829: Dead code detected: __ms___0 = 5UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 9997: Dead code detected: __ms = 5UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 10495: Dead code detected: __ms = 5UL; (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

line 5365: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp = ldv_zalloc(32UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 11101: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp = ldv_zalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function snd_pcm_lib_ioctl to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snd_pcm_format_width to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snd_pcm_format_unsigned to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snd_pcm_format_big_endian to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snd_pcm_lib_free_pages to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 6138: Ignoring function call through function pointer *(substream->ops->ack): (*(substream->ops->ack))(substream); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Recursion detected, aborting. To ignore recursion, add -skipRecursion to the command line. (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, INFO)

Error: line 6138: Unsupported feature (recursion): snd_cs46xx_playback_indirect_pointer(substream); (line was originally pointer call(snd_cs46xx_playback_indirect_pointer) (*((substream->ops)->ack))(substream);) (CallstackTransferRelation.getAbstractSuccessorsForEdge, SEVERE)

PredicateCPA statistics
-----------------------
Number of abstractions:            185 (7% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  173 (94%)
  Because of loop head:            12 (6%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         0 (0%)
  Times precision was empty:       185 (100%)
  Times precision was {false}:     0 (0%)
  Times result was cached:         0 (0%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      0 (0%)
  Times result was 'false':        0 (0%)
Number of strengthen sat checks:   0
Number of coverage checks:         205
  BDD entailment checks:           21
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       136
Number of predicates discovered:          0

Time for post operator:                  1.680s
  Time for path formula creation:        1.659s
Time for strengthen operator:            0.045s
Time for prec operator:                  0.055s
  Time for abstraction:                  0.012s (Max:     0.005s, Count: 185)
    Solving time:                        0.000s (Max:     0.000s)
    Model enumeration time:              0.000s
    Time for BDD construction:           0.000s (Max:     0.000s)
Time for merge operator:                 0.072s
Time for coverage check:                 0.006s
  Time for BDD entailment checks:        0.006s
Total time for SMT solver (w/o itp):     0.000s

Number of path formula cache hits:   378 (13%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     1.573s

Total number of created targets for pointer analysis: 1043
   Number of created targets for uf: *signed_int is 41
   Number of created targets for uf: *unsigned_int is 87


Number of BDD nodes:                               202
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                           0 (count: 207, min: 0, max: 0, avg: 0.00)
Time for BDD node cleanup:                             0.000s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.099s
Automaton transfers with branching:                0
Automaton transfer successors:                         2753 (count: 2753, min: 1, max: 1, avg: 1.00) [1 x 2753]

CPA algorithm statistics
------------------------
Number of iterations:            848
Max size of waitlist:            49
Average size of waitlist:        32
Number of computed successors:   1008
Max successors for one state:    2
Number of times merged:          92
Number of times stopped:         113
Number of times breaked:         0

Total time for CPA algorithm:         2.551s (Max:     2.551s)
  Time for choose from waitlist:      0.018s
  Time for precision adjustment:      0.207s
  Time for transfer relation:         2.141s
  Time for merge operator:            0.097s
  Time for stop operator:             0.028s
  Time for adding to reached set:     0.013s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   0

CEGAR algorithm statistics
--------------------------
Number of refinements:                0

Code Coverage
-----------------------------
  Function coverage:      0.143
  Visited lines:          1322
  Total lines:            8429
  Line coverage:          0.157
  Visited conditions:     230
  Total conditions:       2724
  Condition coverage:     0.084

CPAchecker general statistics
-----------------------------
Number of program locations:     12067
Number of CFA edges:             14273
Number of relevant variables:    1821
Number of functions:             301
Number of loops:                 82
Size of reached set:             896
  Number of reached locations:   458 (4%)
    Avg states per location:     1
    Max states per location:     8 (at node N58)
  Number of reached functions:   43 (14%)
  Number of partitions:          896
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0
  Size of final wait list        49

Time for analysis setup:          9.408s
  Time for loading CPAs:          1.347s
  Time for loading parser:        0.692s
  Time for CFA construction:      7.185s
    Time for parsing file(s):     1.365s
    Time for AST to CFA:          2.455s
    Time for CFA sanity check:    0.993s
    Time for post-processing:     2.266s
      Time for var class.:        1.057s
Time for Analysis:                2.551s
CPU time for analysis:            2.550s
Total time for CPAchecker:       11.966s
Total CPU time for CPAchecker:   11.950s
Time for statistics:              0.145s

Time for Garbage Collector:       0.475s (in 20 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 84MB (    80 MiB) max;     48MB (    46 MiB) avg;     91MB (    87 MiB) peak
Used non-heap memory:             35MB (    33 MiB) max;     28MB (    26 MiB) avg;     36MB (    34 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        37MB (    35 MiB) max;     29MB (    28 MiB) avg
Total process virtual memory:   8083MB (  7709 MiB) max;   8047MB (  7674 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
