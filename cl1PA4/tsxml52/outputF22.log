scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.16-rc1/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--input--gameport--ns558.ko-entry_point_true-unreach-call.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_faz7tiiw/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

line 2039: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp = ldv_zalloc(16UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_release_1 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pnp_get_resource to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __request_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pnp_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function gameport_unregister_port to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __release_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pnp_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function msleep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strlcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function gameport_set_phys to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __gameport_register_port to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __list_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_final_state to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            3296 (20% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  2734 (83%)
  Because of loop head:            540 (16%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         22 (1%)
  Times precision was empty:       713 (22%)
  Times precision was {false}:     183 (6%)
  Times result was cached:         2245 (68%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      155 (5%)
  Times result was 'false':        138 (4%)
Number of strengthen sat checks:   0
Number of coverage checks:         2192
  BDD entailment checks:           754
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       18
Number of predicates discovered:          4
Number of abstraction locations:          69
Max number of predicates per location:    2
Avg number of predicates per location:    1
Total predicates per abstraction:         3015
Max number of predicates per abstraction: 2
Avg number of predicates per abstraction: 8.92
Number of irrelevant predicates:          813 (27%)
Number of preds handled by boolean abs:   163 (5%)
  Total number of models for allsat:      168
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.08

Time for post operator:                  1.529s
  Time for path formula creation:        1.458s
Time for strengthen operator:            0.078s
Time for prec operator:                  1.616s
  Time for abstraction:                  1.394s (Max:     0.017s, Count: 3296)
    Boolean abstraction:                 0.189s
    Solving time:                        0.177s (Max:     0.010s)
    Model enumeration time:              0.014s
    Time for BDD construction:           0.030s (Max:     0.008s)
Time for merge operator:                 0.060s
Time for coverage check:                 0.050s
  Time for BDD entailment checks:        0.036s
Total time for SMT solver (w/o itp):     0.191s

Number of path formula cache hits:   15211 (78%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     1.282s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               209
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         270 (count: 3343, min: 0, max: 98, avg: 0.08)
Time for BDD node cleanup:                             0.008s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.161s
Automaton transfers with branching:                0
Automaton transfer successors:                        16556 (count: 16556, min: 1, max: 1, avg: 1.00) [1 x 16556]

CPA algorithm statistics
------------------------
Number of iterations:            10901
Max size of waitlist:            12
Average size of waitlist:        7
Number of computed successors:   12547
Max successors for one state:    2
Number of times merged:          719
Number of times stopped:         1333
Number of times breaked:         22

Total time for CPA algorithm:         5.249s (Max:     0.682s)
  Time for choose from waitlist:      0.081s
  Time for precision adjustment:      1.869s
  Time for transfer relation:         2.543s
  Time for merge operator:            0.143s
  Time for stop operator:             0.120s
  Time for adding to reached set:     0.140s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   22
Avg. length of target path (in blocks):                 793 (count: 22, min: 22, max: 58, avg: 36.05)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.605s
  Counterexample analysis:                             0.392s (Max:     0.031s, Calls: 22)
    Refinement sat check:                              0.260s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.047s
  Precision update:                                    0.020s
  ARG update:                                          0.101s

Length of refined path (in blocks):                     750 (count: 22, min: 6, max: 57, avg: 34.09)
Number of affected states:                              710 (count: 22, min: 1, max: 56, avg: 32.27)
Length (states) of path with itp 'true':                 18 (count: 22, min: 0, max: 14, avg: 0.82)
Length (states) of path with itp non-trivial itp:       710 (count: 22, min: 1, max: 56, avg: 32.27)
Length (states) of path with itp 'false':                22 (count: 22, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 22, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:             688 (count: 22, min: 0, max: 55, avg: 31.27)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                22
Number of successful refinements:     22
Number of failed refinements:         0
Max. size of reached set before ref.: 889
Max. size of reached set after ref.:  124
Avg. size of reached set before ref.: 459.36
Avg. size of reached set after ref.:  9.41

Total time for CEGAR algorithm:       5.928s
Time for refinements:                 0.679s
Average time for refinement:          0.030s
Max time for refinement:              0.073s

Code Coverage
-----------------------------
  Function coverage:      0.658
  Visited lines:          634
  Total lines:            680
  Line coverage:          0.932
  Visited conditions:     102
  Total conditions:       114
  Condition coverage:     0.895

CPAchecker general statistics
-----------------------------
Number of program locations:     900
Number of CFA edges:             959
Number of relevant variables:    113
Number of functions:             38
Number of loops:                 8
Size of reached set:             1178
  Number of reached locations:   311 (35%)
    Avg states per location:     3
    Max states per location:     24 (at node N26)
  Number of reached functions:   25 (66%)
  Number of partitions:          1173
    Avg size of partitions:      1
    Max size of partitions:      3 (with key [N463 (before line 2048), Function main called from node N446, stack depth 1 [ebaa6cb], stack [main]])
  Number of target states:       0

Time for analysis setup:          3.746s
  Time for loading CPAs:          0.810s
  Time for loading parser:        0.714s
  Time for CFA construction:      2.075s
    Time for parsing file(s):     0.667s
    Time for AST to CFA:          0.615s
    Time for CFA sanity check:    0.102s
    Time for post-processing:     0.506s
      Time for var class.:        0.243s
Time for Analysis:                5.928s
CPU time for analysis:            5.930s
Time for analyzing result:        0.001s
Total time for CPAchecker:        9.678s
Total CPU time for CPAchecker:    9.670s
Time for statistics:              0.097s

Time for Garbage Collector:       0.137s (in 10 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 61MB (    58 MiB) max;     35MB (    34 MiB) avg;     65MB (    62 MiB) peak
Used non-heap memory:             36MB (    34 MiB) max;     29MB (    28 MiB) avg;     36MB (    34 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        37MB (    36 MiB) max;     31MB (    30 MiB) avg
Total process virtual memory:   8086MB (  7711 MiB) max;   8051MB (  7678 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
