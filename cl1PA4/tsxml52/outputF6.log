scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.16-rc1/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--input--gameport--ns558.ko-entry_point_true-unreach-call.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run__hyctxs_/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

line 2039: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp = ldv_zalloc(16UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_release_1 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pnp_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_final_state to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pnp_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function gameport_unregister_port to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __release_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pnp_get_resource to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __request_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function msleep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strlcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function gameport_set_phys to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __gameport_register_port to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __list_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            9016 (20% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  7199 (80%)
  Because of loop head:            1774 (20%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         43 (0%)
  Times precision was empty:       3071 (34%)
  Times precision was {false}:     239 (3%)
  Times result was cached:         5549 (62%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      157 (2%)
  Times result was 'false':        254 (3%)
Number of strengthen sat checks:   0
Number of coverage checks:         6350
  BDD entailment checks:           2626
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       18
Number of predicates discovered:          4
Number of abstraction locations:          69
Max number of predicates per location:    2
Avg number of predicates per location:    1
Total predicates per abstraction:         6895
Max number of predicates per abstraction: 2
Avg number of predicates per abstraction: 17.41
Number of irrelevant predicates:          3034 (44%)
Number of preds handled by boolean abs:   165 (2%)
  Total number of models for allsat:      169
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.08

Time for post operator:                  2.273s
  Time for path formula creation:        2.200s
Time for strengthen operator:            0.131s
Time for prec operator:                  2.909s
  Time for abstraction:                  2.519s (Max:     0.019s, Count: 9016)
    Boolean abstraction:                 0.230s
    Solving time:                        0.266s (Max:     0.013s)
    Model enumeration time:              0.014s
    Time for BDD construction:           0.049s (Max:     0.009s)
Time for merge operator:                 0.097s
Time for coverage check:                 0.058s
  Time for BDD entailment checks:        0.049s
Total time for SMT solver (w/o itp):     0.280s

Number of path formula cache hits:   44485 (83%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     1.957s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               210
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         327 (count: 7855, min: 0, max: 98, avg: 0.04)
Time for BDD node cleanup:                             0.005s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.317s
Automaton transfers with branching:                0
Automaton transfer successors:                        44844 (count: 44844, min: 1, max: 1, avg: 1.00) [1 x 44844]

CPA algorithm statistics
------------------------
Number of iterations:            29458
Max size of waitlist:            32
Average size of waitlist:        12
Number of computed successors:   33785
Max successors for one state:    2
Number of times merged:          1862
Number of times stopped:         3646
Number of times breaked:         43

Total time for CPA algorithm:         9.067s (Max:     0.863s)
  Time for choose from waitlist:      0.125s
  Time for precision adjustment:      3.650s
  Time for transfer relation:         3.957s
  Time for merge operator:            0.310s
  Time for stop operator:             0.210s
  Time for adding to reached set:     0.185s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   43
Avg. length of target path (in blocks):                1336 (count: 43, min: 22, max: 58, avg: 31.07)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   1.010s
  Counterexample analysis:                             0.660s (Max:     0.026s, Calls: 43)
    Refinement sat check:                              0.411s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.002s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.075s
  Precision update:                                    0.025s
  ARG update:                                          0.194s

Length of refined path (in blocks):                    1146 (count: 43, min: 6, max: 57, avg: 26.65)
Number of affected states:                              733 (count: 43, min: 1, max: 56, avg: 17.05)
Length (states) of path with itp 'true':                370 (count: 43, min: 0, max: 24, avg: 8.60)
Length (states) of path with itp non-trivial itp:       733 (count: 43, min: 1, max: 56, avg: 17.05)
Length (states) of path with itp 'false':                43 (count: 43, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 43, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:             690 (count: 43, min: 0, max: 55, avg: 16.05)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                43
Number of successful refinements:     43
Number of failed refinements:         0
Max. size of reached set before ref.: 1856
Max. size of reached set after ref.:  1225
Avg. size of reached set before ref.: 1075.77
Avg. size of reached set after ref.:  408.14

Total time for CEGAR algorithm:      10.249s
Time for refinements:                 1.168s
Average time for refinement:          0.027s
Max time for refinement:              0.071s

Code Coverage
-----------------------------
  Function coverage:      0.658
  Visited lines:          634
  Total lines:            680
  Line coverage:          0.932
  Visited conditions:     102
  Total conditions:       114
  Condition coverage:     0.895

CPAchecker general statistics
-----------------------------
Number of program locations:     900
Number of CFA edges:             959
Number of relevant variables:    113
Number of functions:             38
Number of loops:                 8
Size of reached set:             1178
  Number of reached locations:   311 (35%)
    Avg states per location:     3
    Max states per location:     24 (at node N26)
  Number of reached functions:   25 (66%)
  Number of partitions:          1173
    Avg size of partitions:      1
    Max size of partitions:      3 (with key [N463 (before line 2048), Function main called from node N446, stack depth 1 [ebaa6cb], stack [main]])
  Number of target states:       0

Time for analysis setup:          3.964s
  Time for loading CPAs:          0.936s
  Time for loading parser:        0.644s
  Time for CFA construction:      2.255s
    Time for parsing file(s):     0.742s
    Time for AST to CFA:          0.687s
    Time for CFA sanity check:    0.125s
    Time for post-processing:     0.541s
      Time for var class.:        0.263s
Time for Analysis:               10.249s
CPU time for analysis:           10.240s
Time for analyzing result:        0.001s
Total time for CPAchecker:       14.217s
Total CPU time for CPAchecker:   14.190s
Time for statistics:              0.101s

Time for Garbage Collector:       0.200s (in 17 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 63MB (    60 MiB) max;     38MB (    37 MiB) avg;     66MB (    63 MiB) peak
Used non-heap memory:             37MB (    35 MiB) max;     31MB (    30 MiB) avg;     38MB (    36 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        39MB (    37 MiB) max;     33MB (    32 MiB) avg
Total process virtual memory:   8087MB (  7712 MiB) max;   8063MB (  7690 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
