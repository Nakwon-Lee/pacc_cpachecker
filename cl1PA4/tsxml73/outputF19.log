scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.16-rc1/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--scsi--dc395x.ko-entry_point_true-unreach-call.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_18t9vipy/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 5505: Dead code detected: __mptr___2 = (struct list_head const *)i->list.next; (CFACreationUtils.addEdgeToCFA, INFO)

line 6737: Dead code detected: len = 0U; (CFACreationUtils.addEdgeToCFA, INFO)

lines 8059-8085: Dead code detected: switch ((int )*(cmd->sense_buffer + 2UL) & 15) (CFACreationUtils.addEdgeToCFA, INFO)

line 8060: Dead code detected: [!((((int)(*((cmd->sense_buffer) + 2UL))) & 15) == 2)] (CFACreationUtils.addEdgeToCFA, INFO)

lines 8061-8063: Dead code detected: printk("\017dc395x: ReqSense: NOT_READY cmnd=0x%02x <%02i-%i> stat=%i scan=%i ",
             (int )*(cmd->cmnd), (int )dcb->target_id, (int )dcb->target_lun, (int )status,
             (int )acb->scan_devices); (CFACreationUtils.addEdgeToCFA, INFO)

line 8065: Dead code detected: [(((int)(*((cmd->sense_buffer) + 2UL))) & 15) == 6] (CFACreationUtils.addEdgeToCFA, INFO)

line 8065: Dead code detected: [!((((int)(*((cmd->sense_buffer) + 2UL))) & 15) == 6)] (CFACreationUtils.addEdgeToCFA, INFO)

lines 8066-8068: Dead code detected: printk("\017dc395x: ReqSense: UNIT_ATTENTION cmnd=0x%02x <%02i-%i> stat=%i scan=%i ",
             (int )*(cmd->cmnd), (int )dcb->target_id, (int )dcb->target_lun, (int )status,
             (int )acb->scan_devices); (CFACreationUtils.addEdgeToCFA, INFO)

line 8070: Dead code detected: [(((int)(*((cmd->sense_buffer) + 2UL))) & 15) == 5] (CFACreationUtils.addEdgeToCFA, INFO)

line 8070: Dead code detected: [!((((int)(*((cmd->sense_buffer) + 2UL))) & 15) == 5)] (CFACreationUtils.addEdgeToCFA, INFO)

lines 8071-8073: Dead code detected: printk("\017dc395x: ReqSense: ILLEGAL_REQUEST cmnd=0x%02x <%02i-%i> stat=%i scan=%i ",
             (int )*(cmd->cmnd), (int )dcb->target_id, (int )dcb->target_lun, (int )status,
             (int )acb->scan_devices); (CFACreationUtils.addEdgeToCFA, INFO)

line 8075: Dead code detected: [(((int)(*((cmd->sense_buffer) + 2UL))) & 15) == 3] (CFACreationUtils.addEdgeToCFA, INFO)

line 8075: Dead code detected: [!((((int)(*((cmd->sense_buffer) + 2UL))) & 15) == 3)] (CFACreationUtils.addEdgeToCFA, INFO)

lines 8076-8078: Dead code detected: printk("\017dc395x: ReqSense: MEDIUM_ERROR cmnd=0x%02x <%02i-%i> stat=%i scan=%i ",
             (int )*(cmd->cmnd), (int )dcb->target_id, (int )dcb->target_lun, (int )status,
             (int )acb->scan_devices); (CFACreationUtils.addEdgeToCFA, INFO)

line 8080: Dead code detected: [(((int)(*((cmd->sense_buffer) + 2UL))) & 15) == 4] (CFACreationUtils.addEdgeToCFA, INFO)

line 8080: Dead code detected: [!((((int)(*((cmd->sense_buffer) + 2UL))) & 15) == 4)] (CFACreationUtils.addEdgeToCFA, INFO)

lines 8081-8083: Dead code detected: printk("\017dc395x: ReqSense: HARDWARE_ERROR cmnd=0x%02x <%02i-%i> stat=%i scan=%i ",
             (int )*(cmd->cmnd), (int )dcb->target_id, (int )dcb->target_lun, (int )status,
             (int )acb->scan_devices); (CFACreationUtils.addEdgeToCFA, INFO)

line 9625: Dead code detected: seq_printf(m, "DCB list for ACB %p:\n", acb); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 6004: Function pointer *done with type void (*)(struct scsi_cmnd *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 5025-5026: Function pointer *(ops->map_page) with type dma_addr_t (*)(struct device *, struct page *, unsigned long, size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 5124: Function pointer *(ops->sync_sg_for_cpu) with type void (*)(struct device *, struct scatterlist *, int, enum dma_data_direction ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 5092: Function pointer *(ops->sync_single_for_device) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 5059: Function pointer *(ops->unmap_page) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 8342: Function pointer *(cmd->scsi_done) with type void (*)(struct scsi_cmnd *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 8301: Function pointer *(p->scsi_done) with type void (*)(struct scsi_cmnd *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 8251: Function pointer *(cmd->scsi_done) with type void (*)(struct scsi_cmnd *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

line 10144: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp = ldv_zalloc(264UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 10146: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___0 = ldv_zalloc(4UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 10148: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___1 = ldv_zalloc(496UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 10150: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___2 = ldv_zalloc(32UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function seq_printf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_enable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function scsi_host_alloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function scsi_host_put to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_disable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __request_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __release_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 10121: Ignoring function call through function pointer *(timer->function): (*(timer->function))(timer->data); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 9885: Ignoring function call through function pointer *(timer->function): (*(timer->function))(timer->data); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 9821: Ignoring function call through function pointer *(timer->function): (*(timer->function))(timer->data); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function request_threaded_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __pci_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_final_state to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function scsi_cmd_get_serial to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 6004: Ignoring call via function pointer dc395x_queue_command_lck::done for which no suitable target was found in line: (*done)(cmd); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 6004: Ignoring function call through function pointer *done: (*done)(cmd); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function pci_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __list_del_entry to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __list_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function add_timer to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function list_del to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function scsi_dma_map to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sg_next to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function debug_dma_map_page to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 6580: Ignoring call via function pointer dc395x_handle_interrupt::dc395x_statev for which no suitable target was found in line: (*dc395x_statev)(acb, srb, &scsi_status); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 6580: Ignoring function call through function pointer *dc395x_statev: (*dc395x_statev)(acb, srb, &scsi_status); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 6584: Ignoring call via function pointer dc395x_handle_interrupt::dc395x_statev for which no suitable target was found in line: (*dc395x_statev)(acb, srb, &scsi_status); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 6584: Ignoring function call through function pointer *dc395x_statev: (*dc395x_statev)(acb, srb, &scsi_status); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 5092: Ignoring function call through function pointer *(ops->sync_single_for_device): (*(ops->sync_single_for_device))(dev, addr, size, dir); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function debug_dma_sync_single_for_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            4234652 (20% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  3984754 (94%)
  Because of loop head:            249827 (6%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         71 (0%)
  Times precision was empty:       3465219 (82%)
  Times precision was {false}:     622 (0%)
  Times result was cached:         767569 (18%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      1242 (0%)
  Times result was 'false':        953 (0%)
Number of strengthen sat checks:   0
Number of coverage checks:         1779223
  BDD entailment checks:           519303
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       53
Number of predicates discovered:          6
Number of abstraction locations:          178
Max number of predicates per location:    5
Avg number of predicates per location:    2
Total predicates per abstraction:         2741540
Max number of predicates per abstraction: 5
Avg number of predicates per abstraction: 1470.78
Number of irrelevant predicates:          2666028 (97%)
Number of preds handled by boolean abs:   2393 (0%)
  Total number of models for allsat:      1298
  Max number of models for allsat:        4
  Avg number of models for allsat:        1.05

Time for post operator:                158.295s
  Time for path formula creation:      149.614s
Time for strengthen operator:           15.942s
Time for prec operator:                153.643s
  Time for abstraction:                 99.374s (Max:     2.038s, Count: 4234652)
    Boolean abstraction:                 1.113s
    Solving time:                        1.210s (Max:     0.022s)
    Model enumeration time:              0.110s
    Time for BDD construction:           0.075s (Max:     0.011s)
Time for merge operator:                 7.576s
Time for coverage check:                 0.581s
  Time for BDD entailment checks:        0.367s
Total time for SMT solver (w/o itp):     1.320s

Number of path formula cache hits:   25800017 (98%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    30.265s

Total number of created targets for pointer analysis: 76957
   Number of created targets for uf: *unsigned_short_int is 36
   Number of created targets for uf: *signed_int is 1031
   Number of created targets for uf: *unsigned_char is 329
   Number of created targets for uf: *(struct_list_head)* is 83
   Number of created targets for uf: *(struct_Scsi_Host)* is 9
   Number of created targets for uf: *unsigned_int is 61
   Number of created targets for uf: *unsigned_long_int is 10


Number of BDD nodes:                               283
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        2558 (count: 3995323, min: 0, max: 231, avg: 0.00)
Time for BDD node cleanup:                             0.638s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                 32.866s
  Time for transition matches:                        15.482s
  Time for transition assertions:                      0.003s
  Time for transition actions:                         0.001s
Automaton transfers with branching:                0
Automaton transfer successors:                     21417886 (count: 21417886, min: 1, max: 1, avg: 1.00) [1 x 21417886]

CPA algorithm statistics
------------------------
Number of iterations:            13859966
Max size of waitlist:            11475
Average size of waitlist:        3813
Number of computed successors:   15351925
Max successors for one state:    2
Number of times merged:          629960
Number of times stopped:         1145340
Number of times breaked:         71

Total time for CPA algorithm:       841.190s (Max:    32.665s)
  Time for choose from waitlist:      7.662s
  Time for precision adjustment:    275.095s
  Time for transfer relation:       456.158s
  Time for merge operator:           16.045s
  Time for stop operator:            17.982s
  Time for adding to reached set:    31.463s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   71
Avg. length of target path (in blocks):                5295 (count: 71, min: 15, max: 226, avg: 74.58)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  42.541s
  Counterexample analysis:                             2.476s (Max:     0.089s, Calls: 71)
    Refinement sat check:                              1.651s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.003s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.073s
  Precision update:                                    0.049s
  ARG update:                                         39.873s

Length of refined path (in blocks):                    4059 (count: 71, min: 10, max: 225, avg: 57.17)
Number of affected states:                             3828 (count: 71, min: 1, max: 224, avg: 53.92)
Length (states) of path with itp 'true':                160 (count: 71, min: 0, max: 8, avg: 2.25)
Length (states) of path with itp non-trivial itp:      3828 (count: 71, min: 1, max: 224, avg: 53.92)
Length (states) of path with itp 'false':                71 (count: 71, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 71, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:            3757 (count: 71, min: 0, max: 223, avg: 52.92)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                71
Number of successful refinements:     71
Number of failed refinements:         0
Max. size of reached set before ref.: 477372
Max. size of reached set after ref.:  43
Avg. size of reached set before ref.: 194149.21
Avg. size of reached set after ref.:  14.27

Total time for CEGAR algorithm:     893.082s
Time for refinements:                51.887s
Average time for refinement:          0.730s
Max time for refinement:              2.189s

Code Coverage
-----------------------------
  Function coverage:      0.737
  Visited lines:          2954
  Total lines:            4121
  Line coverage:          0.717
  Visited conditions:     739
  Total conditions:       1100
  Condition coverage:     0.672

CPAchecker general statistics
-----------------------------
Number of program locations:     6210
Number of CFA edges:             7179
Number of relevant variables:    1002
Number of functions:             205
Number of loops:                 64
Size of reached set:             422051
  Number of reached locations:   2262 (36%)
    Avg states per location:     186
    Max states per location:     12239 (at node N140)
  Number of reached functions:   151 (74%)
  Number of partitions:          422019
    Avg size of partitions:      1
    Max size of partitions:      4 (with key [N5244 (before line 10163), Function main called from node N5211, stack depth 1 [798dad3d], stack [main]])
  Number of target states:       0
  Size of final wait list        10178

Time for analysis setup:          7.183s
  Time for loading CPAs:          1.115s
  Time for loading parser:        0.679s
  Time for CFA construction:      5.229s
    Time for parsing file(s):     1.197s
    Time for AST to CFA:          1.864s
    Time for CFA sanity check:    0.481s
    Time for post-processing:     1.491s
      Time for var class.:        0.692s
Time for Analysis:              893.082s
CPU time for analysis:          893.030s
Total time for CPAchecker:      900.275s
Total CPU time for CPAchecker:  900.200s
Time for statistics:              3.735s

Time for Garbage Collector:     134.402s (in 1027 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:               1178MB (  1123 MiB) max;    460MB (   439 MiB) avg;   1206MB (  1150 MiB) peak
Used non-heap memory:             47MB (    45 MiB) max;     40MB (    38 MiB) avg;     47MB (    45 MiB) peak
Allocated heap memory:          1194MB (  1139 MiB) max;    727MB (   694 MiB) avg
Allocated non-heap memory:        49MB (    47 MiB) max;     49MB (    46 MiB) avg
Total process virtual memory:   8088MB (  7713 MiB) max;   8085MB (  7710 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
