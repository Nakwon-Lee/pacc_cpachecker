scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.16-rc1/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--bluetooth--btmrvl_sdio.ko-entry_point_true-unreach-call.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_c6a613c5/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_complete_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_suspend_noirq_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_prepare_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_resume_noirq_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_resume_early_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_suspend_late_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sdio_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sdio_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function bt_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function btmrvl_send_module_cfg_cmd to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_pr_debug to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sdio_claim_host to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sdio_release_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sdio_disable_func to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sdio_release_host to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function btmrvl_remove_card to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sdio_writeb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_final_state to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function bt_info to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function devm_kmalloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function hci_resume_dev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 7671: Ignoring function call through function pointer *(priv->hw_wakeup_firmware): (*(priv->hw_wakeup_firmware))(priv); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sdio_get_host_pm_caps to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function btmrvl_enable_hs to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function hci_suspend_dev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function skb_queue_purge to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sdio_set_host_pm_flags to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sdio_enable_func to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sdio_claim_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sdio_set_block_size to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sdio_readb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function msleep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function btmrvl_add_card to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function btmrvl_register_hdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function request_firmware to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function release_firmware to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function kfree_skb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __alloc_skb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function skb_put to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function skb_pull to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sdio_readsb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function btmrvl_process_event to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function hci_recv_frame to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function btmrvl_check_evtpkt to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            2540 (12% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  2313 (91%)
  Because of loop head:            214 (8%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         13 (1%)
  Times precision was empty:       1959 (77%)
  Times precision was {false}:     130 (5%)
  Times result was cached:         388 (15%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      63 (2%)
  Times result was 'false':        55 (2%)
Number of strengthen sat checks:   0
Number of coverage checks:         3283
  BDD entailment checks:           731
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       36
Number of predicates discovered:          4
Number of abstraction locations:          41
Max number of predicates per location:    3
Avg number of predicates per location:    1
Total predicates per abstraction:         656
Max number of predicates per abstraction: 3
Avg number of predicates per abstraction: 3.40
Number of irrelevant predicates:          423 (64%)
Number of preds handled by boolean abs:   76 (12%)
  Total number of models for allsat:      81
  Max number of models for allsat:        4
  Avg number of models for allsat:        1.29

Time for post operator:                  3.346s
  Time for path formula creation:        3.256s
Time for strengthen operator:            0.093s
Time for prec operator:                  1.364s
  Time for abstraction:                  1.174s (Max:     0.031s, Count: 2540)
    Boolean abstraction:                 0.192s
    Solving time:                        0.258s (Max:     0.016s)
    Model enumeration time:              0.023s
    Time for BDD construction:           0.030s (Max:     0.008s)
Time for merge operator:                 0.290s
Time for coverage check:                 0.024s
  Time for BDD entailment checks:        0.020s
Total time for SMT solver (w/o itp):     0.281s

Number of path formula cache hits:   10676 (46%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     3.085s

Total number of created targets for pointer analysis: 262
   Number of created targets for uf: *unsigned_short_int is 9
   Number of created targets for uf: *(void)* is 25
   Number of created targets for uf: *(char)* is 7
   Number of created targets for uf: *signed_int is 44


Number of BDD nodes:                               215
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         149 (count: 3744, min: 0, max: 86, avg: 0.04)
Time for BDD node cleanup:                             0.001s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.235s
Automaton transfers with branching:                0
Automaton transfer successors:                        21293 (count: 21293, min: 1, max: 1, avg: 1.00) [1 x 21293]

CPA algorithm statistics
------------------------
Number of iterations:            12284
Max size of waitlist:            17
Average size of waitlist:        7
Number of computed successors:   14300
Max successors for one state:    2
Number of times merged:          1276
Number of times stopped:         1926
Number of times breaked:         13

Total time for CPA algorithm:         7.694s (Max:     1.986s)
  Time for choose from waitlist:      0.095s
  Time for precision adjustment:      1.831s
  Time for transfer relation:         4.668s
  Time for merge operator:            0.472s
  Time for stop operator:             0.142s
  Time for adding to reached set:     0.145s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   13
Avg. length of target path (in blocks):                 462 (count: 13, min: 21, max: 45, avg: 35.54)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.477s
  Counterexample analysis:                             0.328s (Max:     0.034s, Calls: 13)
    Refinement sat check:                              0.194s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.005s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.018s
  Precision update:                                    0.013s
  ARG update:                                          0.095s

Length of refined path (in blocks):                     367 (count: 13, min: 4, max: 44, avg: 28.23)
Number of affected states:                              122 (count: 13, min: 1, max: 30, avg: 9.38)
Length (states) of path with itp 'true':                232 (count: 13, min: 0, max: 31, avg: 17.85)
Length (states) of path with itp non-trivial itp:       122 (count: 13, min: 1, max: 30, avg: 9.38)
Length (states) of path with itp 'false':                13 (count: 13, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 13, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:             109 (count: 13, min: 0, max: 29, avg: 8.38)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                13
Number of successful refinements:     13
Number of failed refinements:         0
Max. size of reached set before ref.: 3936
Max. size of reached set after ref.:  3705
Avg. size of reached set before ref.: 2009.54
Avg. size of reached set after ref.:  1373.92

Total time for CEGAR algorithm:       8.338s
Time for refinements:                 0.619s
Average time for refinement:          0.047s
Max time for refinement:              0.085s

Code Coverage
-----------------------------
  Function coverage:      0.627
  Visited lines:          1853
  Total lines:            2195
  Line coverage:          0.844
  Visited conditions:     298
  Total conditions:       398
  Condition coverage:     0.749

CPAchecker general statistics
-----------------------------
Number of program locations:     2788
Number of CFA edges:             3007
Number of relevant variables:    339
Number of functions:             67
Number of loops:                 7
Size of reached set:             4057
  Number of reached locations:   764 (27%)
    Avg states per location:     5
    Max states per location:     55 (at node N68)
  Number of reached functions:   42 (63%)
  Number of partitions:          4047
    Avg size of partitions:      1
    Max size of partitions:      4 (with key [N1532 (before line 7775), Function main called from node N1517, stack depth 1 [52a36910], stack [main]])
  Number of target states:       0

Time for analysis setup:          5.656s
  Time for loading CPAs:          0.954s
  Time for loading parser:        0.703s
  Time for CFA construction:      3.846s
    Time for parsing file(s):     1.106s
    Time for AST to CFA:          1.278s
    Time for CFA sanity check:    0.295s
    Time for post-processing:     0.949s
      Time for var class.:        0.406s
Time for Analysis:                8.338s
CPU time for analysis:            8.330s
Time for analyzing result:        0.015s
Total time for CPAchecker:       13.998s
Total CPU time for CPAchecker:   13.980s
Time for statistics:              0.180s

Time for Garbage Collector:       0.286s (in 14 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 69MB (    66 MiB) max;     42MB (    40 MiB) avg;     73MB (    69 MiB) peak
Used non-heap memory:             38MB (    36 MiB) max;     30MB (    29 MiB) avg;     38MB (    36 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        40MB (    38 MiB) max;     32MB (    31 MiB) avg
Total process virtual memory:   8086MB (  7712 MiB) max;   8059MB (  7685 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
