scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.16-rc1/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--bluetooth--btmrvl_sdio.ko-entry_point_true-unreach-call.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_0uyyxqrq/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_complete_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_suspend_noirq_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_prepare_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_resume_noirq_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_resume_early_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_suspend_late_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sdio_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_final_state to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sdio_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function bt_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function bt_info to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sdio_get_host_pm_caps to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function btmrvl_send_module_cfg_cmd to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_pr_debug to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function hci_resume_dev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 7671: Ignoring function call through function pointer *(priv->hw_wakeup_firmware): (*(priv->hw_wakeup_firmware))(priv); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function btmrvl_enable_hs to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function hci_suspend_dev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function skb_queue_purge to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sdio_set_host_pm_flags to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function devm_kmalloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sdio_claim_host to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sdio_release_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sdio_disable_func to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sdio_release_host to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function btmrvl_remove_card to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sdio_writeb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sdio_enable_func to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sdio_claim_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sdio_set_block_size to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sdio_readb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function btmrvl_add_card to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function btmrvl_register_hdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function request_firmware to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function release_firmware to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function kfree_skb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function msleep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sdio_writesb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __alloc_skb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function skb_put to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function skb_pull to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sdio_readsb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function btmrvl_process_event to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function hci_recv_frame to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function btmrvl_check_evtpkt to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            3150 (11% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  2813 (89%)
  Because of loop head:            326 (10%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         11 (0%)
  Times precision was empty:       2743 (87%)
  Times precision was {false}:     117 (4%)
  Times result was cached:         226 (7%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      64 (2%)
  Times result was 'false':        43 (1%)
Number of strengthen sat checks:   0
Number of coverage checks:         4329
  BDD entailment checks:           925
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       36
Number of predicates discovered:          4
Number of abstraction locations:          41
Max number of predicates per location:    3
Avg number of predicates per location:    1
Total predicates per abstraction:         455
Max number of predicates per abstraction: 3
Avg number of predicates per abstraction: 2.51
Number of irrelevant predicates:          288 (63%)
Number of preds handled by boolean abs:   76 (17%)
  Total number of models for allsat:      82
  Max number of models for allsat:        4
  Avg number of models for allsat:        1.28

Time for post operator:                  4.187s
  Time for path formula creation:        4.043s
Time for strengthen operator:            0.174s
Time for prec operator:                  1.249s
  Time for abstraction:                  1.036s (Max:     0.029s, Count: 3150)
    Boolean abstraction:                 0.174s
    Solving time:                        0.217s (Max:     0.019s)
    Model enumeration time:              0.013s
    Time for BDD construction:           0.020s (Max:     0.008s)
Time for merge operator:                 0.303s
Time for coverage check:                 0.046s
  Time for BDD entailment checks:        0.046s
Total time for SMT solver (w/o itp):     0.230s

Number of path formula cache hits:   11948 (41%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     3.814s

Total number of created targets for pointer analysis: 871
   Number of created targets for uf: *unsigned_short_int is 15
   Number of created targets for uf: *(void)* is 25
   Number of created targets for uf: *signed_int is 81
   Number of created targets for uf: *(char)* is 7


Number of BDD nodes:                               215
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         145 (count: 4667, min: 0, max: 60, avg: 0.03)
Time for BDD node cleanup:                             0.002s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.299s
Automaton transfers with branching:                0
Automaton transfer successors:                        27428 (count: 27428, min: 1, max: 1, avg: 1.00) [1 x 27428]

CPA algorithm statistics
------------------------
Number of iterations:            15924
Max size of waitlist:            49
Average size of waitlist:        14
Number of computed successors:   18562
Max successors for one state:    2
Number of times merged:          1702
Number of times stopped:         2564
Number of times breaked:         11

Total time for CPA algorithm:         8.774s (Max:     2.296s)
  Time for choose from waitlist:      0.089s
  Time for precision adjustment:      1.752s
  Time for transfer relation:         5.689s
  Time for merge operator:            0.478s
  Time for stop operator:             0.201s
  Time for adding to reached set:     0.157s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   11
Avg. length of target path (in blocks):                 371 (count: 11, min: 21, max: 43, avg: 33.73)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.418s
  Counterexample analysis:                             0.248s (Max:     0.029s, Calls: 11)
    Refinement sat check:                              0.185s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.002s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.020s
  Precision update:                                    0.007s
  ARG update:                                          0.114s

Length of refined path (in blocks):                     287 (count: 11, min: 4, max: 42, avg: 26.09)
Number of affected states:                              100 (count: 11, min: 1, max: 30, avg: 9.09)
Length (states) of path with itp 'true':                176 (count: 11, min: 0, max: 29, avg: 16.00)
Length (states) of path with itp non-trivial itp:       100 (count: 11, min: 1, max: 30, avg: 9.09)
Length (states) of path with itp 'false':                11 (count: 11, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 11, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:              89 (count: 11, min: 0, max: 29, avg: 8.09)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                11
Number of successful refinements:     11
Number of failed refinements:         0
Max. size of reached set before ref.: 4066
Max. size of reached set after ref.:  3765
Avg. size of reached set before ref.: 3139.27
Avg. size of reached set after ref.:  2057.55

Total time for CEGAR algorithm:       9.440s
Time for refinements:                 0.645s
Average time for refinement:          0.058s
Max time for refinement:              0.116s

Code Coverage
-----------------------------
  Function coverage:      0.627
  Visited lines:          1853
  Total lines:            2195
  Line coverage:          0.844
  Visited conditions:     298
  Total conditions:       398
  Condition coverage:     0.749

CPAchecker general statistics
-----------------------------
Number of program locations:     2788
Number of CFA edges:             3007
Number of relevant variables:    339
Number of functions:             67
Number of loops:                 7
Size of reached set:             4057
  Number of reached locations:   764 (27%)
    Avg states per location:     5
    Max states per location:     55 (at node N68)
  Number of reached functions:   42 (63%)
  Number of partitions:          4047
    Avg size of partitions:      1
    Max size of partitions:      4 (with key [N1532 (before line 7775), Function main called from node N1517, stack depth 1 [52a36910], stack [main]])
  Number of target states:       0

Time for analysis setup:          5.439s
  Time for loading CPAs:          0.918s
  Time for loading parser:        0.755s
  Time for CFA construction:      3.587s
    Time for parsing file(s):     1.063s
    Time for AST to CFA:          1.285s
    Time for CFA sanity check:    0.218s
    Time for post-processing:     0.806s
      Time for var class.:        0.346s
Time for Analysis:                9.441s
CPU time for analysis:            9.440s
Time for analyzing result:        0.003s
Total time for CPAchecker:       14.884s
Total CPU time for CPAchecker:   14.870s
Time for statistics:              0.199s

Time for Garbage Collector:       0.313s (in 16 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 72MB (    69 MiB) max;     44MB (    42 MiB) avg;     78MB (    74 MiB) peak
Used non-heap memory:             38MB (    36 MiB) max;     31MB (    30 MiB) avg;     39MB (    37 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        40MB (    38 MiB) max;     33MB (    31 MiB) avg
Total process virtual memory:   8086MB (  7712 MiB) max;   8060MB (  7687 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
