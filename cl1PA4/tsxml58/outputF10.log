scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.16-rc1/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--bluetooth--btmrvl_sdio.ko-entry_point_true-unreach-call.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_hgjbpai0/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_complete_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_suspend_noirq_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_prepare_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_resume_noirq_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_resume_early_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_suspend_late_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function bt_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sdio_get_host_pm_caps to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function bt_info to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sdio_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_final_state to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function devm_kmalloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sdio_claim_host to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sdio_enable_func to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sdio_claim_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sdio_set_block_size to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sdio_readb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sdio_release_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sdio_disable_func to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sdio_release_host to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function request_firmware to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function release_firmware to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sdio_writeb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function btmrvl_add_card to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function btmrvl_register_hdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function msleep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sdio_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function btmrvl_send_module_cfg_cmd to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_pr_debug to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function btmrvl_remove_card to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function hci_resume_dev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 7671: Ignoring function call through function pointer *(priv->hw_wakeup_firmware): (*(priv->hw_wakeup_firmware))(priv); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function btmrvl_enable_hs to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function hci_suspend_dev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function skb_queue_purge to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sdio_set_host_pm_flags to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function kfree_skb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __alloc_skb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function skb_put to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function skb_pull to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sdio_readsb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function btmrvl_process_event to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function hci_recv_frame to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function btmrvl_check_evtpkt to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            1501 (10% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  1373 (91%)
  Because of loop head:            119 (8%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         9 (1%)
  Times precision was empty:       1182 (79%)
  Times precision was {false}:     110 (7%)
  Times result was cached:         140 (9%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      69 (5%)
  Times result was 'false':        38 (3%)
Number of strengthen sat checks:   0
Number of coverage checks:         2223
  BDD entailment checks:           423
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       36
Number of predicates discovered:          4
Number of abstraction locations:          43
Max number of predicates per location:    3
Avg number of predicates per location:    1
Total predicates per abstraction:         372
Max number of predicates per abstraction: 3
Avg number of predicates per abstraction: 2.08
Number of irrelevant predicates:          225 (60%)
Number of preds handled by boolean abs:   82 (22%)
  Total number of models for allsat:      90
  Max number of models for allsat:        4
  Avg number of models for allsat:        1.30

Time for post operator:                  2.911s
  Time for path formula creation:        2.857s
Time for strengthen operator:            0.059s
Time for prec operator:                  1.147s
  Time for abstraction:                  1.002s (Max:     0.027s, Count: 1501)
    Boolean abstraction:                 0.185s
    Solving time:                        0.214s (Max:     0.011s)
    Model enumeration time:              0.026s
    Time for BDD construction:           0.021s (Max:     0.006s)
Time for merge operator:                 0.273s
Time for coverage check:                 0.083s
  Time for BDD entailment checks:        0.067s
Total time for SMT solver (w/o itp):     0.240s

Number of path formula cache hits:   4012 (26%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     2.754s

Total number of created targets for pointer analysis: 300
   Number of created targets for uf: *unsigned_short_int is 5
   Number of created targets for uf: *(void)* is 17
   Number of created targets for uf: *(char)* is 5
   Number of created targets for uf: *signed_int is 49


Number of BDD nodes:                               215
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         138 (count: 2596, min: 0, max: 88, avg: 0.05)
Time for BDD node cleanup:                             0.002s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.245s
Automaton transfers with branching:                0
Automaton transfer successors:                        14711 (count: 14711, min: 1, max: 1, avg: 1.00) [1 x 14711]

CPA algorithm statistics
------------------------
Number of iterations:            7853
Max size of waitlist:            50
Average size of waitlist:        23
Number of computed successors:   9268
Max successors for one state:    2
Number of times merged:          900
Number of times stopped:         1271
Number of times breaked:         9

Total time for CPA algorithm:         6.547s (Max:     1.662s)
  Time for choose from waitlist:      0.045s
  Time for precision adjustment:      1.507s
  Time for transfer relation:         4.105s
  Time for merge operator:            0.399s
  Time for stop operator:             0.130s
  Time for adding to reached set:     0.098s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   9
Avg. length of target path (in blocks):                 308 (count: 9, min: 23, max: 45, avg: 34.22)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.393s
  Counterexample analysis:                             0.257s (Max:     0.044s, Calls: 9)
    Refinement sat check:                              0.172s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.017s
  Precision update:                                    0.016s
  ARG update:                                          0.060s

Length of refined path (in blocks):                     215 (count: 9, min: 4, max: 44, avg: 23.89)
Number of affected states:                               80 (count: 9, min: 1, max: 32, avg: 8.89)
Length (states) of path with itp 'true':                126 (count: 9, min: 0, max: 31, avg: 14.00)
Length (states) of path with itp non-trivial itp:        80 (count: 9, min: 1, max: 32, avg: 8.89)
Length (states) of path with itp 'false':                 9 (count: 9, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 9, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:              71 (count: 9, min: 0, max: 31, avg: 7.89)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                9
Number of successful refinements:     9
Number of failed refinements:         0
Max. size of reached set before ref.: 2785
Max. size of reached set after ref.:  2621
Avg. size of reached set before ref.: 1666.67
Avg. size of reached set after ref.:  1106.33

Total time for CEGAR algorithm:       7.058s
Time for refinements:                 0.495s
Average time for refinement:          0.055s
Max time for refinement:              0.118s

Code Coverage
-----------------------------
  Function coverage:      0.627
  Visited lines:          1853
  Total lines:            2195
  Line coverage:          0.844
  Visited conditions:     298
  Total conditions:       398
  Condition coverage:     0.749

CPAchecker general statistics
-----------------------------
Number of program locations:     2788
Number of CFA edges:             3007
Number of relevant variables:    339
Number of functions:             67
Number of loops:                 7
Size of reached set:             2917
  Number of reached locations:   764 (27%)
    Avg states per location:     3
    Max states per location:     38 (at node N68)
  Number of reached functions:   42 (63%)
  Number of partitions:          2907
    Avg size of partitions:      1
    Max size of partitions:      3 (with key [N1532 (before line 7775), Function main called from node N1517, stack depth 1 [52a36910], stack [main]])
  Number of target states:       0

Time for analysis setup:          5.890s
  Time for loading CPAs:          0.953s
  Time for loading parser:        0.794s
  Time for CFA construction:      3.985s
    Time for parsing file(s):     1.193s
    Time for AST to CFA:          1.412s
    Time for CFA sanity check:    0.227s
    Time for post-processing:     0.881s
      Time for var class.:        0.379s
Time for Analysis:                7.058s
CPU time for analysis:            7.050s
Time for analyzing result:        0.003s
Total time for CPAchecker:       12.965s
Total CPU time for CPAchecker:   12.940s
Time for statistics:              0.181s

Time for Garbage Collector:       0.240s (in 13 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 69MB (    65 MiB) max;     41MB (    39 MiB) avg;     72MB (    69 MiB) peak
Used non-heap memory:             37MB (    35 MiB) max;     29MB (    28 MiB) avg;     37MB (    36 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        39MB (    37 MiB) max;     31MB (    30 MiB) avg
Total process virtual memory:   8084MB (  7710 MiB) max;   8053MB (  7680 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
