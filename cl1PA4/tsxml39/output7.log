scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.16-rc1/205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--intel--igbvf--igbvf.ko-entry_point_true-unreach-call.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_4uuuuy9v/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 8904: Function pointer *(ops->alloc) with type void *(*)(struct device *, size_t , dma_addr_t *, gfp_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 8936: Function pointer *(ops->free) with type void (*)(struct device *, size_t , void *, dma_addr_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 8776: Function pointer *(ops->map_page) with type dma_addr_t (*)(struct device *, struct page *, unsigned long, size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 8709-8710: Function pointer *(ops->map_page) with type dma_addr_t (*)(struct device *, struct page *, unsigned long, size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 8826: Function pointer *(ops->mapping_error) with type int (*)(struct device *, dma_addr_t ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 8806: Function pointer *(ops->unmap_page) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 8743: Function pointer *(ops->unmap_page) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6785: Function pointer *(mbx->ops.read) with type s32 (*)(struct e1000_hw *, u32 *, u16 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6721: Function pointer *(mbx->ops.write_posted) with type s32 (*)(struct e1000_hw *, u32 *, u16 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6723: Function pointer *(mbx->ops.read_posted) with type s32 (*)(struct e1000_hw *, u32 *, u16 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6947: Function pointer *(mbx->ops.read) with type s32 (*)(struct e1000_hw *, u32 *, u16 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6572: Function pointer *(mbx->ops.write_posted) with type s32 (*)(struct e1000_hw *, u32 *, u16 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6574: Function pointer *(mbx->ops.read_posted) with type s32 (*)(struct e1000_hw *, u32 *, u16 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6697: Function pointer *(mbx->ops.write_posted) with type s32 (*)(struct e1000_hw *, u32 *, u16 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6677: Function pointer *(mbx->ops.write_posted) with type s32 (*)(struct e1000_hw *, u32 *, u16 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6678: Function pointer *(mbx->ops.read_posted) with type s32 (*)(struct e1000_hw *, u32 *, u16 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6658: Function pointer *(mbx->ops.write_posted) with type s32 (*)(struct e1000_hw *, u32 *, u16 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6969: Function pointer *(mbx->ops.write) with type s32 (*)(struct e1000_hw *, u32 *, u16 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 12890: Function pointer *(ei->get_variants) with type s32 (*)(struct igbvf_adapter *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 11085: Function pointer *(hw->mac.ops.set_vfta) with type s32 (*)(struct e1000_hw *, u16 , bool ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 11108: Function pointer *(hw->mac.ops.set_vfta) with type s32 (*)(struct e1000_hw *, u16 , bool ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

line 13793: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___2 = ldv_zalloc(40UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ndo_uninit_7 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ndo_init_7 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_probe_6 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_release_6 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_suspend_6 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __pci_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_enable_device_mem to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function disable_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 11085: Ignoring function call through function pointer *(hw->mac.ops.set_vfta): tmp___0 = (*(hw->mac.ops.set_vfta))(hw, (int)vid, 1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 11108: Ignoring function call through function pointer *(hw->mac.ops.set_vfta): tmp___0 = (*(hw->mac.ops.set_vfta))(hw, (int)vid, 0); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 11292: Ignoring function call through function pointer *(hw->mac.ops.update_mc_addr_list): (*(hw->mac.ops.update_mc_addr_list))(hw, mta_list, (u32 )i, 0U, 0U); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dev_kfree_skb_any to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function msleep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            18463 (19% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  16028 (87%)
  Because of loop head:            2419 (13%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         16 (0%)
  Times precision was empty:       17061 (92%)
  Times precision was {false}:     246 (1%)
  Times result was cached:         1051 (6%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      105 (1%)
  Times result was 'false':        231 (1%)
Number of strengthen sat checks:   0
Number of coverage checks:         11811
  BDD entailment checks:           3927
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       116
Number of predicates discovered:          8
Number of abstraction locations:          21
Max number of predicates per location:    6
Avg number of predicates per location:    2
Total predicates per abstraction:         3732
Max number of predicates per abstraction: 6
Avg number of predicates per abstraction: 10.63
Number of irrelevant predicates:          2704 (72%)
Number of preds handled by boolean abs:   289 (8%)
  Total number of models for allsat:      355
  Max number of models for allsat:        32
  Avg number of models for allsat:        3.38

Time for post operator:                  8.526s
  Time for path formula creation:        8.344s
Time for strengthen operator:            0.274s
Time for prec operator:                  3.504s
  Time for abstraction:                  2.668s (Max:     0.048s, Count: 18463)
    Boolean abstraction:                 0.777s
    Solving time:                        0.516s (Max:     0.019s)
    Model enumeration time:              0.208s
    Time for BDD construction:           0.111s (Max:     0.011s)
Time for merge operator:                 0.381s
Time for coverage check:                 0.071s
  Time for BDD entailment checks:        0.055s
Total time for SMT solver (w/o itp):     0.724s

Number of path formula cache hits:   75320 (67%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     7.045s

Total number of created targets for pointer analysis: 2934
   Number of created targets for uf: *(Return_type:_[signed_int],_Parameters:_1,_Parameter_1_type:_[(struct_e1000_hw)*],_VarArgs:_false)* is 1171
   Number of created targets for uf: *unsigned_int is 298


Number of BDD nodes:                               375
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         305 (count: 22963, min: 0, max: 44, avg: 0.01)
Time for BDD node cleanup:                             0.022s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.550s
  Time for transition matches:                         0.265s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.002s
Automaton transfers with branching:                0
Automaton transfer successors:                        98339 (count: 98339, min: 1, max: 1, avg: 1.00) [1 x 98339]

CPA algorithm statistics
------------------------
Number of iterations:            61933
Max size of waitlist:            401
Average size of waitlist:        207
Number of computed successors:   72416
Max successors for one state:    2
Number of times merged:          3942
Number of times stopped:         6984
Number of times breaked:         16

Total time for CPA algorithm:        19.947s (Max:     2.678s)
  Time for choose from waitlist:      0.243s
  Time for precision adjustment:      4.841s
  Time for transfer relation:        12.073s
  Time for merge operator:            0.693s
  Time for stop operator:             0.397s
  Time for adding to reached set:     0.428s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   16
Avg. length of target path (in blocks):                 478 (count: 16, min: 26, max: 32, avg: 29.88)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   1.123s
  Counterexample analysis:                             0.625s (Max:     0.062s, Calls: 16)
    Refinement sat check:                              0.429s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.015s
  Precision update:                                    0.025s
  ARG update:                                          0.445s

Length of refined path (in blocks):                     348 (count: 16, min: 20, max: 28, avg: 21.75)
Number of affected states:                               72 (count: 16, min: 1, max: 13, avg: 4.50)
Length (states) of path with itp 'true':                260 (count: 16, min: 14, max: 18, avg: 16.25)
Length (states) of path with itp non-trivial itp:        72 (count: 16, min: 1, max: 13, avg: 4.50)
Length (states) of path with itp 'false':                16 (count: 16, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           2 (count: 16, min: 0, max: 1, avg: 0.13)
Equal non-trivial interpolants along paths:              54 (count: 16, min: 0, max: 11, avg: 3.38)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                16
Number of successful refinements:     16
Number of failed refinements:         0
Max. size of reached set before ref.: 6440
Max. size of reached set after ref.:  77
Avg. size of reached set before ref.: 4061.50
Avg. size of reached set after ref.:  72.75

Total time for CEGAR algorithm:      21.269s
Time for refinements:                 1.320s
Average time for refinement:          0.082s
Max time for refinement:              0.157s

Code Coverage
-----------------------------
  Function coverage:      0.156
  Visited lines:          1733
  Total lines:            5568
  Line coverage:          0.311
  Visited conditions:     280
  Total conditions:       1626
  Condition coverage:     0.172

CPAchecker general statistics
-----------------------------
Number of program locations:     8234
Number of CFA edges:             9524
Number of relevant variables:    1360
Number of functions:             320
Number of loops:                 41
Size of reached set:             1382
  Number of reached locations:   550 (7%)
    Avg states per location:     2
    Max states per location:     24 (at node N706)
  Number of reached functions:   50 (16%)
  Number of partitions:          1380
    Avg size of partitions:      1
    Max size of partitions:      3 (with key [N6169 (before line 13827), Function main called from node N6096, stack depth 1 [39266403], stack [main]])
  Number of target states:       0
  Size of final wait list        155

Time for analysis setup:          8.978s
  Time for loading CPAs:          1.283s
  Time for loading parser:        0.731s
  Time for CFA construction:      6.819s
    Time for parsing file(s):     1.515s
    Time for AST to CFA:          2.545s
    Time for CFA sanity check:    0.514s
    Time for post-processing:     1.968s
      Time for var class.:        0.964s
Time for Analysis:               21.269s
CPU time for analysis:           21.270s
Total time for CPAchecker:       30.251s
Total CPU time for CPAchecker:   30.230s
Time for statistics:              0.151s

Time for Garbage Collector:       0.841s (in 41 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 94MB (    89 MiB) max;     56MB (    54 MiB) avg;     98MB (    93 MiB) peak
Used non-heap memory:             41MB (    39 MiB) max;     34MB (    33 MiB) avg;     41MB (    39 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        42MB (    40 MiB) max;     36MB (    34 MiB) avg
Total process virtual memory:   8085MB (  7711 MiB) max;   8069MB (  7695 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
