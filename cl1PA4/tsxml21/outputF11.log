scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.16-rc1/205_9a_array_safes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--arcnet--capmode.ko-entry_point_true-unreach-call.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_t6dq6syx/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 5569: Function pointer *(lp->hw.copy_to_card) with type void (*)(struct net_device *, int, int, void *, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 5570: Function pointer *(lp->hw.copy_to_card) with type void (*)(struct net_device *, int, int, void *, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 5571: Function pointer *(lp->hw.copy_to_card) with type void (*)(struct net_device *, int, int, void *, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 5486-5487: Function pointer *(lp->hw.copy_from_card) with type void (*)(struct net_device *, int, int, void *, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

line 5716: Destroying the void* pointer ldv_successful_zalloc::p produces garbage or the memory pointed by it is unused: tmp___0 = ldv_successful_zalloc(232UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function arcnet_unregister_proto to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 5569: Ignoring function call through function pointer *(lp->hw.copy_to_card): (*(lp->hw.copy_to_card))(dev, bufnum, 0, (void *)hard, 4); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5570: Ignoring function call through function pointer *(lp->hw.copy_to_card): (*(lp->hw.copy_to_card))(dev, bufnum, ofs, (void *)(&(pkt->soft.cap.proto)), 1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5571: Ignoring function call through function pointer *(lp->hw.copy_to_card): (*(lp->hw.copy_to_card))(dev, bufnum, ofs + 1, (void *)(&(pkt->soft.cap.mes)), length + -1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function skb_put to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dev_kfree_skb_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function skb_pull to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

lines 5486-5487: Ignoring function call through function pointer *(lp->hw.copy_from_card): (*(lp->hw.copy_from_card))(dev, bufnum, (int)(((unsigned int)ofs) + 16U), ((void *)(&(pkt->soft.raw))) + 20U, (int)(((unsigned int)length) - 16U)); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5685: Destroying the void* pointer ldv_successful_zalloc::p produces garbage or the memory pointed by it is unused: tmp = ldv_successful_zalloc(20UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            10377 (17% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  7726 (74%)
  Because of loop head:            2612 (25%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         39 (0%)
  Times precision was empty:       3361 (32%)
  Times precision was {false}:     222 (2%)
  Times result was cached:         5529 (53%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      1265 (12%)
  Times result was 'false':        833 (8%)
Number of strengthen sat checks:   0
Number of coverage checks:         11131
  BDD entailment checks:           4349
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       22
Number of predicates discovered:          45
Number of abstraction locations:          61
Max number of predicates per location:    12
Avg number of predicates per location:    3
Total predicates per abstraction:         19670
Max number of predicates per abstraction: 12
Avg number of predicates per abstraction: 13.23
Number of irrelevant predicates:          6702 (34%)
Number of preds handled by boolean abs:   4492 (23%)
  Total number of models for allsat:      2617
  Max number of models for allsat:        14
  Avg number of models for allsat:        2.07

Time for post operator:                  5.761s
  Time for path formula creation:        5.635s
Time for strengthen operator:            0.166s
Time for prec operator:                  9.416s
  Time for abstraction:                  8.934s (Max:     0.040s, Count: 10377)
    Boolean abstraction:                 3.741s
    Solving time:                        2.821s (Max:     0.017s)
    Model enumeration time:              0.561s
    Time for BDD construction:           0.219s (Max:     0.012s)
Time for merge operator:                 0.688s
Time for coverage check:                 0.077s
  Time for BDD entailment checks:        0.065s
Total time for SMT solver (w/o itp):     3.382s

Number of path formula cache hits:   31417 (47%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     5.173s

Total number of created targets for pointer analysis: 5290
   Number of created targets for uf: *(void)* is 1801
   Number of created targets for uf: *(struct_ArcProto)* is 1361


Number of BDD nodes:                               2647
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        5202 (count: 17775, min: 0, max: 736, avg: 0.29)
Time for BDD node cleanup:                             0.039s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.473s
Automaton transfers with branching:                0
Automaton transfer successors:                        61229 (count: 61229, min: 1, max: 1, avg: 1.00) [1 x 61229]

CPA algorithm statistics
------------------------
Number of iterations:            43327
Max size of waitlist:            32
Average size of waitlist:        9
Number of computed successors:   49428
Max successors for one state:    2
Number of times merged:          3391
Number of times stopped:         5122
Number of times breaked:         39

Total time for CPA algorithm:        21.307s (Max:     1.256s)
  Time for choose from waitlist:      0.135s
  Time for precision adjustment:     10.399s
  Time for transfer relation:         8.360s
  Time for merge operator:            0.970s
  Time for stop operator:             0.287s
  Time for adding to reached set:     0.311s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   39
Avg. length of target path (in blocks):                1619 (count: 39, min: 14, max: 83, avg: 41.51)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   2.593s
  Counterexample analysis:                             2.074s (Max:     0.212s, Calls: 39)
    Refinement sat check:                              1.400s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.001s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.062s
  Precision update:                                    0.056s
  ARG update:                                          0.343s

Length of refined path (in blocks):                    1032 (count: 39, min: 8, max: 62, avg: 26.46)
Number of affected states:                              553 (count: 39, min: 1, max: 57, avg: 14.18)
Length (states) of path with itp 'true':                440 (count: 39, min: 4, max: 46, avg: 11.28)
Length (states) of path with itp non-trivial itp:       553 (count: 39, min: 1, max: 57, avg: 14.18)
Length (states) of path with itp 'false':                39 (count: 39, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:          70 (count: 39, min: 0, max: 8, avg: 1.79)
Equal non-trivial interpolants along paths:             444 (count: 39, min: 0, max: 52, avg: 11.38)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                39
Number of successful refinements:     39
Number of failed refinements:         0
Max. size of reached set before ref.: 3057
Max. size of reached set after ref.:  2167
Avg. size of reached set before ref.: 1318.46
Avg. size of reached set after ref.:  233.72

Total time for CEGAR algorithm:      24.132s
Time for refinements:                 2.798s
Average time for refinement:          0.071s
Max time for refinement:              0.241s

Code Coverage
-----------------------------
  Function coverage:      0.540
  Visited lines:          1197
  Total lines:            1280
  Line coverage:          0.935
  Visited conditions:     100
  Total conditions:       118
  Condition coverage:     0.847

CPAchecker general statistics
-----------------------------
Number of program locations:     1548
Number of CFA edges:             1594
Number of relevant variables:    81
Number of functions:             50
Number of loops:                 7
Size of reached set:             1169
  Number of reached locations:   330 (21%)
    Avg states per location:     3
    Max states per location:     18 (at node N271)
  Number of reached functions:   27 (54%)
  Number of partitions:          1149
    Avg size of partitions:      1
    Max size of partitions:      9 (with key [N284 (before line 5641), Function arcnet_cap_init called from node N299, stack depth 3 [7c49fbd8], stack [main, capmode_module_init, arcnet_cap_init]])
  Number of target states:       0

Time for analysis setup:          4.642s
  Time for loading CPAs:          1.010s
  Time for loading parser:        0.727s
  Time for CFA construction:      2.776s
    Time for parsing file(s):     0.894s
    Time for AST to CFA:          0.944s
    Time for CFA sanity check:    0.134s
    Time for post-processing:     0.571s
      Time for var class.:        0.198s
Time for Analysis:               24.132s
CPU time for analysis:           24.130s
Time for analyzing result:        0.001s
Total time for CPAchecker:       28.781s
Total CPU time for CPAchecker:   28.770s
Time for statistics:              0.093s

Time for Garbage Collector:       0.463s (in 32 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 71MB (    68 MiB) max;     47MB (    45 MiB) avg;     76MB (    72 MiB) peak
Used non-heap memory:             40MB (    38 MiB) max;     35MB (    33 MiB) avg;     40MB (    39 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        42MB (    40 MiB) max;     37MB (    35 MiB) avg
Total process virtual memory:   8087MB (  7712 MiB) max;   8072MB (  7698 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
