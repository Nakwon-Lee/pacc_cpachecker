scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.16-rc1/205_9a_array_safes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--arcnet--capmode.ko-entry_point_true-unreach-call.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_yk0nm441/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 5569: Function pointer *(lp->hw.copy_to_card) with type void (*)(struct net_device *, int, int, void *, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 5570: Function pointer *(lp->hw.copy_to_card) with type void (*)(struct net_device *, int, int, void *, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 5571: Function pointer *(lp->hw.copy_to_card) with type void (*)(struct net_device *, int, int, void *, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 5486-5487: Function pointer *(lp->hw.copy_from_card) with type void (*)(struct net_device *, int, int, void *, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

line 5716: Destroying the void* pointer ldv_successful_zalloc::p produces garbage or the memory pointed by it is unused: tmp___0 = ldv_successful_zalloc(232UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function arcnet_unregister_proto to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 5569: Ignoring function call through function pointer *(lp->hw.copy_to_card): (*(lp->hw.copy_to_card))(dev, bufnum, 0, (void *)hard, 4); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5570: Ignoring function call through function pointer *(lp->hw.copy_to_card): (*(lp->hw.copy_to_card))(dev, bufnum, ofs, (void *)(&(pkt->soft.cap.proto)), 1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5571: Ignoring function call through function pointer *(lp->hw.copy_to_card): (*(lp->hw.copy_to_card))(dev, bufnum, ofs + 1, (void *)(&(pkt->soft.cap.mes)), length + -1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function skb_put to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dev_kfree_skb_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function skb_pull to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

lines 5486-5487: Ignoring function call through function pointer *(lp->hw.copy_from_card): (*(lp->hw.copy_from_card))(dev, bufnum, (int)(((unsigned int)ofs) + 16U), ((void *)(&(pkt->soft.raw))) + 20U, (int)(((unsigned int)length) - 16U)); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5685: Destroying the void* pointer ldv_successful_zalloc::p produces garbage or the memory pointed by it is unused: tmp = ldv_successful_zalloc(20UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            6553 (16% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  4756 (73%)
  Because of loop head:            1761 (27%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         36 (1%)
  Times precision was empty:       2911 (44%)
  Times precision was {false}:     131 (2%)
  Times result was cached:         2656 (41%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      855 (13%)
  Times result was 'false':        610 (9%)
Number of strengthen sat checks:   0
Number of coverage checks:         7576
  BDD entailment checks:           3026
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       22
Number of predicates discovered:          44
Number of abstraction locations:          61
Max number of predicates per location:    11
Avg number of predicates per location:    3
Total predicates per abstraction:         10830
Max number of predicates per abstraction: 11
Avg number of predicates per abstraction: 10.98
Number of irrelevant predicates:          2548 (24%)
Number of preds handled by boolean abs:   3018 (28%)
  Total number of models for allsat:      1708
  Max number of models for allsat:        14
  Avg number of models for allsat:        2.00

Time for post operator:                  4.249s
  Time for path formula creation:        4.144s
Time for strengthen operator:            0.151s
Time for prec operator:                  6.754s
  Time for abstraction:                  6.430s (Max:     0.034s, Count: 6553)
    Boolean abstraction:                 2.728s
    Solving time:                        1.985s (Max:     0.017s)
    Model enumeration time:              0.382s
    Time for BDD construction:           0.188s (Max:     0.012s)
Time for merge operator:                 0.561s
Time for coverage check:                 0.040s
  Time for BDD entailment checks:        0.029s
Total time for SMT solver (w/o itp):     2.367s

Number of path formula cache hits:   19517 (45%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     3.810s

Total number of created targets for pointer analysis: 4795
   Number of created targets for uf: *(void)* is 1081
   Number of created targets for uf: *(struct_ArcProto)* is 2321


Number of BDD nodes:                               1876
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        3795 (count: 12799, min: 0, max: 569, avg: 0.30)
Time for BDD node cleanup:                             0.022s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.347s
Automaton transfers with branching:                0
Automaton transfer successors:                        39892 (count: 39892, min: 1, max: 1, avg: 1.00) [1 x 39892]

CPA algorithm statistics
------------------------
Number of iterations:            28428
Max size of waitlist:            20
Average size of waitlist:        7
Number of computed successors:   32467
Max successors for one state:    2
Number of times merged:          2275
Number of times stopped:         3308
Number of times breaked:         36

Total time for CPA algorithm:        15.678s (Max:     1.419s)
  Time for choose from waitlist:      0.105s
  Time for precision adjustment:      7.431s
  Time for transfer relation:         6.222s
  Time for merge operator:            0.811s
  Time for stop operator:             0.250s
  Time for adding to reached set:     0.183s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   36
Avg. length of target path (in blocks):                1391 (count: 36, min: 14, max: 65, avg: 38.64)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   2.201s
  Counterexample analysis:                             1.808s (Max:     0.205s, Calls: 36)
    Refinement sat check:                              1.232s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.001s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.086s
  Precision update:                                    0.054s
  ARG update:                                          0.199s

Length of refined path (in blocks):                     875 (count: 36, min: 8, max: 62, avg: 24.31)
Number of affected states:                              452 (count: 36, min: 1, max: 57, avg: 12.56)
Length (states) of path with itp 'true':                387 (count: 36, min: 4, max: 46, avg: 10.75)
Length (states) of path with itp non-trivial itp:       452 (count: 36, min: 1, max: 57, avg: 12.56)
Length (states) of path with itp 'false':                36 (count: 36, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:          70 (count: 36, min: 0, max: 8, avg: 1.94)
Equal non-trivial interpolants along paths:             346 (count: 36, min: 0, max: 52, avg: 9.61)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                36
Number of successful refinements:     36
Number of failed refinements:         0
Max. size of reached set before ref.: 2656
Max. size of reached set after ref.:  814
Avg. size of reached set before ref.: 968.25
Avg. size of reached set after ref.:  197.94

Total time for CEGAR algorithm:      18.079s
Time for refinements:                 2.380s
Average time for refinement:          0.066s
Max time for refinement:              0.239s

Code Coverage
-----------------------------
  Function coverage:      0.540
  Visited lines:          1197
  Total lines:            1280
  Line coverage:          0.935
  Visited conditions:     100
  Total conditions:       118
  Condition coverage:     0.847

CPAchecker general statistics
-----------------------------
Number of program locations:     1548
Number of CFA edges:             1594
Number of relevant variables:    81
Number of functions:             50
Number of loops:                 7
Size of reached set:             819
  Number of reached locations:   330 (21%)
    Avg states per location:     2
    Max states per location:     18 (at node N271)
  Number of reached functions:   27 (54%)
  Number of partitions:          802
    Avg size of partitions:      1
    Max size of partitions:      9 (with key [N284 (before line 5641), Function arcnet_cap_init called from node N299, stack depth 3 [7abc82fa], stack [main, capmode_module_init, arcnet_cap_init]])
  Number of target states:       0

Time for analysis setup:          4.866s
  Time for loading CPAs:          0.986s
  Time for loading parser:        0.690s
  Time for CFA construction:      3.067s
    Time for parsing file(s):     0.996s
    Time for AST to CFA:          1.046s
    Time for CFA sanity check:    0.146s
    Time for post-processing:     0.667s
      Time for var class.:        0.220s
Time for Analysis:               18.080s
CPU time for analysis:           18.090s
Time for analyzing result:        0.001s
Total time for CPAchecker:       22.951s
Total CPU time for CPAchecker:   22.950s
Time for statistics:              0.084s

Time for Garbage Collector:       0.324s (in 23 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 69MB (    66 MiB) max;     45MB (    43 MiB) avg;     73MB (    70 MiB) peak
Used non-heap memory:             39MB (    37 MiB) max;     33MB (    32 MiB) avg;     40MB (    38 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        41MB (    39 MiB) max;     35MB (    34 MiB) avg
Total process virtual memory:   8086MB (  7711 MiB) max;   8070MB (  7696 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
