scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.16-rc1/205_9a_array_safes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--arcnet--capmode.ko-entry_point_true-unreach-call.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_tkrkec__/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 5569: Function pointer *(lp->hw.copy_to_card) with type void (*)(struct net_device *, int, int, void *, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 5570: Function pointer *(lp->hw.copy_to_card) with type void (*)(struct net_device *, int, int, void *, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 5571: Function pointer *(lp->hw.copy_to_card) with type void (*)(struct net_device *, int, int, void *, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 5486-5487: Function pointer *(lp->hw.copy_from_card) with type void (*)(struct net_device *, int, int, void *, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

line 5716: Destroying the void* pointer ldv_successful_zalloc::p produces garbage or the memory pointed by it is unused: tmp___0 = ldv_successful_zalloc(232UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function arcnet_unregister_proto to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function skb_put to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dev_kfree_skb_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 5569: Ignoring function call through function pointer *(lp->hw.copy_to_card): (*(lp->hw.copy_to_card))(dev, bufnum, 0, (void *)hard, 4); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5570: Ignoring function call through function pointer *(lp->hw.copy_to_card): (*(lp->hw.copy_to_card))(dev, bufnum, ofs, (void *)(&(pkt->soft.cap.proto)), 1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5571: Ignoring function call through function pointer *(lp->hw.copy_to_card): (*(lp->hw.copy_to_card))(dev, bufnum, ofs + 1, (void *)(&(pkt->soft.cap.mes)), length + -1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function skb_pull to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

lines 5486-5487: Ignoring function call through function pointer *(lp->hw.copy_from_card): (*(lp->hw.copy_from_card))(dev, bufnum, (int)(((unsigned int)ofs) + 16U), ((void *)(&(pkt->soft.raw))) + 20U, (int)(((unsigned int)length) - 16U)); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5685: Destroying the void* pointer ldv_successful_zalloc::p produces garbage or the memory pointed by it is unused: tmp = ldv_successful_zalloc(20UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            5162 (16% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  3663 (71%)
  Because of loop head:            1463 (28%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         36 (1%)
  Times precision was empty:       2204 (43%)
  Times precision was {false}:     124 (2%)
  Times result was cached:         2101 (41%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      733 (14%)
  Times result was 'false':        532 (10%)
Number of strengthen sat checks:   0
Number of coverage checks:         6174
  BDD entailment checks:           2504
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       22
Number of predicates discovered:          44
Number of abstraction locations:          61
Max number of predicates per location:    11
Avg number of predicates per location:    3
Total predicates per abstraction:         8751
Max number of predicates per abstraction: 11
Avg number of predicates per abstraction: 10.21
Number of irrelevant predicates:          1969 (23%)
Number of preds handled by boolean abs:   2686 (31%)
  Total number of models for allsat:      1170
  Max number of models for allsat:        8
  Avg number of models for allsat:        1.60

Time for post operator:                  3.861s
  Time for path formula creation:        3.714s
Time for strengthen operator:            0.171s
Time for prec operator:                  6.038s
  Time for abstraction:                  5.684s (Max:     0.038s, Count: 5162)
    Boolean abstraction:                 2.388s
    Solving time:                        1.809s (Max:     0.017s)
    Model enumeration time:              0.270s
    Time for BDD construction:           0.203s (Max:     0.021s)
Time for merge operator:                 0.539s
Time for coverage check:                 0.067s
  Time for BDD entailment checks:        0.061s
Total time for SMT solver (w/o itp):     2.079s

Number of path formula cache hits:   16165 (47%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     3.406s

Total number of created targets for pointer analysis: 3575
   Number of created targets for uf: *(void)* is 661
   Number of created targets for uf: *(struct_ArcProto)* is 2121


Number of BDD nodes:                               1715
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        3496 (count: 10767, min: 0, max: 596, avg: 0.32)
Time for BDD node cleanup:                             0.016s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.313s
Automaton transfers with branching:                0
Automaton transfer successors:                        31757 (count: 31757, min: 1, max: 1, avg: 1.00) [1 x 31757]

CPA algorithm statistics
------------------------
Number of iterations:            22878
Max size of waitlist:            15
Average size of waitlist:        5
Number of computed successors:   26119
Max successors for one state:    2
Number of times merged:          1835
Number of times stopped:         2631
Number of times breaked:         36

Total time for CPA algorithm:        14.028s (Max:     1.105s)
  Time for choose from waitlist:      0.096s
  Time for precision adjustment:      6.629s
  Time for transfer relation:         5.648s
  Time for merge operator:            0.742s
  Time for stop operator:             0.235s
  Time for adding to reached set:     0.180s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   36
Avg. length of target path (in blocks):                1413 (count: 36, min: 14, max: 65, avg: 39.25)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   2.305s
  Counterexample analysis:                             1.962s (Max:     0.187s, Calls: 36)
    Refinement sat check:                              1.310s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.003s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.077s
  Precision update:                                    0.063s
  ARG update:                                          0.149s

Length of refined path (in blocks):                     871 (count: 36, min: 8, max: 63, avg: 24.19)
Number of affected states:                              459 (count: 36, min: 1, max: 57, avg: 12.75)
Length (states) of path with itp 'true':                376 (count: 36, min: 4, max: 48, avg: 10.44)
Length (states) of path with itp non-trivial itp:       459 (count: 36, min: 1, max: 57, avg: 12.75)
Length (states) of path with itp 'false':                36 (count: 36, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:          70 (count: 36, min: 0, max: 8, avg: 1.94)
Equal non-trivial interpolants along paths:             353 (count: 36, min: 0, max: 52, avg: 9.81)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                36
Number of successful refinements:     36
Number of failed refinements:         0
Max. size of reached set before ref.: 1383
Max. size of reached set after ref.:  808
Avg. size of reached set before ref.: 778.25
Avg. size of reached set after ref.:  163.31

Total time for CEGAR algorithm:      16.504s
Time for refinements:                 2.459s
Average time for refinement:          0.068s
Max time for refinement:              0.209s

Code Coverage
-----------------------------
  Function coverage:      0.540
  Visited lines:          1197
  Total lines:            1280
  Line coverage:          0.935
  Visited conditions:     100
  Total conditions:       118
  Condition coverage:     0.847

CPAchecker general statistics
-----------------------------
Number of program locations:     1548
Number of CFA edges:             1594
Number of relevant variables:    81
Number of functions:             50
Number of loops:                 7
Size of reached set:             819
  Number of reached locations:   330 (21%)
    Avg states per location:     2
    Max states per location:     18 (at node N271)
  Number of reached functions:   27 (54%)
  Number of partitions:          802
    Avg size of partitions:      1
    Max size of partitions:      9 (with key [N284 (before line 5641), Function arcnet_cap_init called from node N299, stack depth 3 [c197f46], stack [main, capmode_module_init, arcnet_cap_init]])
  Number of target states:       0

Time for analysis setup:          4.699s
  Time for loading CPAs:          0.961s
  Time for loading parser:        0.661s
  Time for CFA construction:      2.927s
    Time for parsing file(s):     0.978s
    Time for AST to CFA:          0.981s
    Time for CFA sanity check:    0.137s
    Time for post-processing:     0.623s
      Time for var class.:        0.204s
Time for Analysis:               16.505s
CPU time for analysis:           16.500s
Time for analyzing result:        0.001s
Total time for CPAchecker:       21.209s
Total CPU time for CPAchecker:   21.190s
Time for statistics:              0.116s

Time for Garbage Collector:       0.283s (in 20 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 67MB (    64 MiB) max;     43MB (    41 MiB) avg;     71MB (    68 MiB) peak
Used non-heap memory:             39MB (    37 MiB) max;     33MB (    32 MiB) avg;     39MB (    37 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        41MB (    39 MiB) max;     35MB (    33 MiB) avg
Total process virtual memory:   8087MB (  7712 MiB) max;   8069MB (  7695 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
