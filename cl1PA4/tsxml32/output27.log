scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.16-rc1/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--input--joystick--analog.ko-entry_point_true-unreach-call.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_wt6py5rz/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 3572: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 3098: Function pointer *(gameport->calibrate) with type int (*)(struct gameport *, int *, int *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 3084: Function pointer *(gameport->cooked_read) with type int (*)(struct gameport *, int *, int *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 3069: Function pointer *(gameport->read) with type unsigned char (*)(struct gameport *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_bind_1 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_release_1 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function gameport_close to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_unregister_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function gameport_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function simple_strtoul to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __gameport_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_final_state to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function gameport_open to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function trace_hardirqs_off to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function trace_hardirqs_on to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 3069: Ignoring function call through function pointer *(gameport->read): tmp = (*(gameport->read))(gameport); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function __udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 3055: Ignoring function call through function pointer *(gameport->trigger): (*(gameport->trigger))(gameport); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 3084: Ignoring function call through function pointer *(gameport->cooked_read): tmp = (*(gameport->cooked_read))(gameport, axes, buttons); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Recursion detected, aborting. To ignore recursion, add -skipRecursion to the command line. (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, INFO)

Error: line 3319: Unsupported feature (recursion): gameport_trigger(gameport); (CallstackTransferRelation.getAbstractSuccessorsForEdge, SEVERE)

PredicateCPA statistics
-----------------------
Number of abstractions:            324 (13% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  224 (69%)
  Because of loop head:            97 (30%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         3 (1%)
  Times precision was empty:       264 (81%)
  Times precision was {false}:     18 (6%)
  Times result was cached:         14 (4%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      28 (9%)
  Times result was 'false':        7 (2%)
Number of strengthen sat checks:   0
Number of coverage checks:         258
  BDD entailment checks:           56
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       25
Number of predicates discovered:          3
Number of abstraction locations:          17
Max number of predicates per location:    2
Avg number of predicates per location:    1
Total predicates per abstraction:         74
Max number of predicates per abstraction: 2
Avg number of predicates per abstraction: 1.61
Number of irrelevant predicates:          31 (42%)
Number of preds handled by boolean abs:   31 (42%)
  Total number of models for allsat:      29
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.04

Time for post operator:                  0.897s
  Time for path formula creation:        0.880s
Time for strengthen operator:            0.071s
Time for prec operator:                  0.380s
  Time for abstraction:                  0.320s (Max:     0.035s, Count: 324)
    Boolean abstraction:                 0.125s
    Solving time:                        0.096s (Max:     0.022s)
    Model enumeration time:              0.016s
    Time for BDD construction:           0.002s (Max:     0.001s)
Time for merge operator:                 0.066s
Time for coverage check:                 0.008s
  Time for BDD entailment checks:        0.008s
Total time for SMT solver (w/o itp):     0.112s

Number of path formula cache hits:   882 (33%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.837s

Total number of created targets for pointer analysis: 236
   Number of created targets for uf: *(void)* is 2
   Number of created targets for uf: *signed_int is 28
   Number of created targets for uf: *unsigned_char is 17


Number of BDD nodes:                               205
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                          64 (count: 588, min: 0, max: 64, avg: 0.11)
Time for BDD node cleanup:                             0.000s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.064s
Automaton transfers with branching:                0
Automaton transfer successors:                         2541 (count: 2541, min: 1, max: 1, avg: 1.00) [1 x 2541]

CPA algorithm statistics
------------------------
Number of iterations:            1214
Max size of waitlist:            19
Average size of waitlist:        9
Number of computed successors:   1413
Max successors for one state:    2
Number of times merged:          101
Number of times stopped:         148
Number of times breaked:         3

Total time for CPA algorithm:         1.993s (Max:     0.703s)
  Time for choose from waitlist:      0.014s
  Time for precision adjustment:      0.485s
  Time for transfer relation:         1.308s
  Time for merge operator:            0.100s
  Time for stop operator:             0.025s
  Time for adding to reached set:     0.009s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   3
Avg. length of target path (in blocks):                  48 (count: 3, min: 8, max: 21, avg: 16.00)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.104s
  Counterexample analysis:                             0.058s (Max:     0.023s, Calls: 3)
    Refinement sat check:                              0.037s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.020s
  Precision update:                                    0.003s
  ARG update:                                          0.015s

Length of refined path (in blocks):                      42 (count: 3, min: 4, max: 20, avg: 14.00)
Number of affected states:                               37 (count: 3, min: 1, max: 19, avg: 12.33)
Length (states) of path with itp 'true':                  2 (count: 3, min: 0, max: 2, avg: 0.67)
Length (states) of path with itp non-trivial itp:        37 (count: 3, min: 1, max: 19, avg: 12.33)
Length (states) of path with itp 'false':                 3 (count: 3, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 3, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:              34 (count: 3, min: 0, max: 18, avg: 11.33)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                3
Number of successful refinements:     3
Number of failed refinements:         0
Max. size of reached set before ref.: 278
Max. size of reached set after ref.:  13
Avg. size of reached set before ref.: 213.67
Avg. size of reached set after ref.:  6.33

Total time for CEGAR algorithm:       2.109s
Time for refinements:                 0.116s
Average time for refinement:          0.038s
Max time for refinement:              0.057s

Code Coverage
-----------------------------
  Function coverage:      0.500
  Visited lines:          932
  Total lines:            1504
  Line coverage:          0.620
  Visited conditions:     106
  Total conditions:       330
  Condition coverage:     0.321

CPAchecker general statistics
-----------------------------
Number of program locations:     2018
Number of CFA edges:             2228
Number of relevant variables:    242
Number of functions:             64
Number of loops:                 39
Size of reached set:             637
  Number of reached locations:   357 (18%)
    Avg states per location:     1
    Max states per location:     16 (at node N200)
  Number of reached functions:   32 (50%)
  Number of partitions:          636
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N1438 (before line 4343), Function main called from node N1425, stack depth 1 [3670f00], stack [main]])
  Number of target states:       0
  Size of final wait list        18

Time for analysis setup:          5.040s
  Time for loading CPAs:          0.865s
  Time for loading parser:        0.718s
  Time for CFA construction:      3.296s
    Time for parsing file(s):     1.107s
    Time for AST to CFA:          1.133s
    Time for CFA sanity check:    0.171s
    Time for post-processing:     0.688s
      Time for var class.:        0.316s
Time for Analysis:                2.109s
CPU time for analysis:            2.110s
Total time for CPAchecker:        7.153s
Total CPU time for CPAchecker:    7.140s
Time for statistics:              0.097s

Time for Garbage Collector:       0.140s (in 7 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 61MB (    58 MiB) max;     34MB (    32 MiB) avg;     65MB (    62 MiB) peak
Used non-heap memory:             33MB (    32 MiB) max;     26MB (    25 MiB) avg;     34MB (    33 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        35MB (    34 MiB) max;     27MB (    26 MiB) avg
Total process virtual memory:   8085MB (  7711 MiB) max;   8034MB (  7662 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
