scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.16-rc1/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--input--joystick--analog.ko-entry_point_true-unreach-call.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_54iiwmrt/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 3572: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 3098: Function pointer *(gameport->calibrate) with type int (*)(struct gameport *, int *, int *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 3084: Function pointer *(gameport->cooked_read) with type int (*)(struct gameport *, int *, int *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 3069: Function pointer *(gameport->read) with type unsigned char (*)(struct gameport *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_bind_1 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_release_1 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function gameport_open to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function gameport_close to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snprintf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strlcat to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_unregister_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_set_abs_params to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_event to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_register_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_free_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function gameport_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_final_state to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function simple_strtoul to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __gameport_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 3084: Ignoring function call through function pointer *(gameport->cooked_read): tmp = (*(gameport->cooked_read))(gameport, axes, buttons); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function trace_hardirqs_off to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function trace_hardirqs_on to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 3069: Ignoring function call through function pointer *(gameport->read): tmp = (*(gameport->read))(gameport); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function __udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 3055: Ignoring function call through function pointer *(gameport->trigger): (*(gameport->trigger))(gameport); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function msleep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Recursion detected, aborting. To ignore recursion, add -skipRecursion to the command line. (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, INFO)

Error: line 3319: Unsupported feature (recursion): gameport_trigger(gameport); (CallstackTransferRelation.getAbstractSuccessorsForEdge, SEVERE)

PredicateCPA statistics
-----------------------
Number of abstractions:            15049 (18% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  10527 (70%)
  Because of loop head:            4484 (30%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         38 (0%)
  Times precision was empty:       2911 (19%)
  Times precision was {false}:     875 (6%)
  Times result was cached:         10970 (73%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      293 (2%)
  Times result was 'false':        180 (1%)
Number of strengthen sat checks:   0
Number of coverage checks:         11367
  BDD entailment checks:           4439
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       32
Number of predicates discovered:          3
Number of abstraction locations:          152
Max number of predicates per location:    2
Avg number of predicates per location:    1
Total predicates per abstraction:         12527
Max number of predicates per abstraction: 2
Avg number of predicates per abstraction: 10.73
Number of irrelevant predicates:          6154 (49%)
Number of preds handled by boolean abs:   297 (2%)
  Total number of models for allsat:      302
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.03

Time for post operator:                  6.604s
  Time for path formula creation:        6.455s
Time for strengthen operator:            0.292s
Time for prec operator:                  6.098s
  Time for abstraction:                  5.470s (Max:     0.053s, Count: 15049)
    Boolean abstraction:                 0.537s
    Solving time:                        1.316s (Max:     0.043s)
    Model enumeration time:              0.037s
    Time for BDD construction:           0.040s (Max:     0.007s)
Time for merge operator:                 0.270s
Time for coverage check:                 0.052s
  Time for BDD entailment checks:        0.048s
Total time for SMT solver (w/o itp):     1.353s

Number of path formula cache hits:   63036 (67%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     5.876s

Total number of created targets for pointer analysis: 7592
   Number of created targets for uf: *(void)* is 163
   Number of created targets for uf: *signed_int is 959
   Number of created targets for uf: *unsigned_char is 65


Number of BDD nodes:                               205
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         593 (count: 13497, min: 0, max: 72, avg: 0.04)
Time for BDD node cleanup:                             0.029s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.530s
  Time for transition matches:                         0.237s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.000s
Automaton transfers with branching:                0
Automaton transfer successors:                        82680 (count: 82680, min: 1, max: 1, avg: 1.00) [1 x 82680]

CPA algorithm statistics
------------------------
Number of iterations:            56865
Max size of waitlist:            58
Average size of waitlist:        22
Number of computed successors:   65454
Max successors for one state:    2
Number of times merged:          3464
Number of times stopped:         7198
Number of times breaked:         38

Total time for CPA algorithm:        19.262s (Max:     1.458s)
  Time for choose from waitlist:      0.175s
  Time for precision adjustment:      7.408s
  Time for transfer relation:         9.513s
  Time for merge operator:            0.475s
  Time for stop operator:             0.357s
  Time for adding to reached set:     0.285s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   38
Avg. length of target path (in blocks):                4042 (count: 38, min: 41, max: 156, avg: 106.37)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   2.885s
  Counterexample analysis:                             2.224s (Max:     0.103s, Calls: 38)
    Refinement sat check:                              1.260s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.010s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.113s
  Precision update:                                    0.104s
  ARG update:                                          0.359s

Length of refined path (in blocks):                    3913 (count: 38, min: 4, max: 155, avg: 102.97)
Number of affected states:                             3871 (count: 38, min: 1, max: 154, avg: 101.87)
Length (states) of path with itp 'true':                  4 (count: 38, min: 0, max: 2, avg: 0.11)
Length (states) of path with itp non-trivial itp:      3871 (count: 38, min: 1, max: 154, avg: 101.87)
Length (states) of path with itp 'false':                38 (count: 38, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 38, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:            3833 (count: 38, min: 0, max: 153, avg: 100.87)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                38
Number of successful refinements:     38
Number of failed refinements:         0
Max. size of reached set before ref.: 2429
Max. size of reached set after ref.:  13
Avg. size of reached set before ref.: 1490.79
Avg. size of reached set after ref.:  3.53

Total time for CEGAR algorithm:      22.459s
Time for refinements:                 3.196s
Average time for refinement:          0.084s
Max time for refinement:              0.128s

Code Coverage
-----------------------------
  Function coverage:      0.766
  Visited lines:          1323
  Total lines:            1504
  Line coverage:          0.880
  Visited conditions:     272
  Total conditions:       330
  Condition coverage:     0.824

CPAchecker general statistics
-----------------------------
Number of program locations:     2018
Number of CFA edges:             2228
Number of relevant variables:    242
Number of functions:             64
Number of loops:                 39
Size of reached set:             1561
  Number of reached locations:   819 (41%)
    Avg states per location:     1
    Max states per location:     32 (at node N236)
  Number of reached functions:   49 (77%)
  Number of partitions:          1560
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N1438 (before line 4343), Function main called from node N1425, stack depth 1 [3670f00], stack [main]])
  Number of target states:       0
  Size of final wait list        23

Time for analysis setup:          4.578s
  Time for loading CPAs:          0.826s
  Time for loading parser:        0.652s
  Time for CFA construction:      2.958s
    Time for parsing file(s):     0.930s
    Time for AST to CFA:          0.995s
    Time for CFA sanity check:    0.165s
    Time for post-processing:     0.684s
      Time for var class.:        0.344s
Time for Analysis:               22.459s
CPU time for analysis:           22.450s
Total time for CPAchecker:       27.041s
Total CPU time for CPAchecker:   27.020s
Time for statistics:              0.113s

Time for Garbage Collector:       0.438s (in 34 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 71MB (    67 MiB) max;     47MB (    44 MiB) avg;     75MB (    71 MiB) peak
Used non-heap memory:             40MB (    38 MiB) max;     35MB (    33 MiB) avg;     40MB (    38 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        42MB (    40 MiB) max;     37MB (    35 MiB) avg
Total process virtual memory:   8087MB (  7712 MiB) max;   8073MB (  7699 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
