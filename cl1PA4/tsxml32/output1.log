scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.16-rc1/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--input--joystick--analog.ko-entry_point_true-unreach-call.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_33nw5gmu/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 3572: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 3098: Function pointer *(gameport->calibrate) with type int (*)(struct gameport *, int *, int *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 3084: Function pointer *(gameport->cooked_read) with type int (*)(struct gameport *, int *, int *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 3069: Function pointer *(gameport->read) with type unsigned char (*)(struct gameport *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_bind_1 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_release_1 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function simple_strtoul to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function gameport_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_final_state to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __gameport_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function gameport_close to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_unregister_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function gameport_open to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 3084: Ignoring function call through function pointer *(gameport->cooked_read): tmp = (*(gameport->cooked_read))(gameport, axes, buttons); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function snprintf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strlcat to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_set_abs_params to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_event to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_register_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_free_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function trace_hardirqs_off to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function trace_hardirqs_on to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 3055: Ignoring function call through function pointer *(gameport->trigger): (*(gameport->trigger))(gameport); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 3069: Ignoring function call through function pointer *(gameport->read): tmp = (*(gameport->read))(gameport); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function msleep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Recursion detected, aborting. To ignore recursion, add -skipRecursion to the command line. (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, INFO)

Error: line 3478: Unsupported feature (recursion): tmp___1 = analog_cooked_read(port); (CallstackTransferRelation.getAbstractSuccessorsForEdge, SEVERE)

PredicateCPA statistics
-----------------------
Number of abstractions:            14304 (17% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  9915 (69%)
  Because of loop head:            4345 (30%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         44 (0%)
  Times precision was empty:       2404 (17%)
  Times precision was {false}:     400 (3%)
  Times result was cached:         11183 (78%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      317 (2%)
  Times result was 'false':        205 (1%)
Number of strengthen sat checks:   0
Number of coverage checks:         11857
  BDD entailment checks:           3999
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       32
Number of predicates discovered:          3
Number of abstraction locations:          171
Max number of predicates per location:    2
Avg number of predicates per location:    1
Total predicates per abstraction:         12399
Max number of predicates per abstraction: 2
Avg number of predicates per abstraction: 17.29
Number of irrelevant predicates:          3407 (27%)
Number of preds handled by boolean abs:   322 (3%)
  Total number of models for allsat:      322
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.02

Time for post operator:                  4.132s
  Time for path formula creation:        3.974s
Time for strengthen operator:            0.158s
Time for prec operator:                  5.436s
  Time for abstraction:                  4.937s (Max:     0.049s, Count: 14304)
    Boolean abstraction:                 0.464s
    Solving time:                        0.967s (Max:     0.033s)
    Model enumeration time:              0.027s
    Time for BDD construction:           0.035s (Max:     0.010s)
Time for merge operator:                 0.501s
Time for coverage check:                 0.035s
  Time for BDD entailment checks:        0.029s
Total time for SMT solver (w/o itp):     0.994s

Number of path formula cache hits:   84432 (84%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     3.419s

Total number of created targets for pointer analysis: 7634
   Number of created targets for uf: *(void)* is 9
   Number of created targets for uf: *signed_int is 353
   Number of created targets for uf: *(char)* is 28
   Number of created targets for uf: *unsigned_char is 81
   Number of created targets for uf: *unsigned_int is 9


Number of BDD nodes:                               206
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         647 (count: 10318, min: 0, max: 74, avg: 0.06)
Time for BDD node cleanup:                             0.012s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.390s
Automaton transfers with branching:                0
Automaton transfer successors:                        85432 (count: 85432, min: 1, max: 1, avg: 1.00) [1 x 85432]

CPA algorithm statistics
------------------------
Number of iterations:            55286
Max size of waitlist:            68
Average size of waitlist:        20
Number of computed successors:   63880
Max successors for one state:    2
Number of times merged:          3929
Number of times stopped:         6848
Number of times breaked:         44

Total time for CPA algorithm:        15.727s (Max:     1.100s)
  Time for choose from waitlist:      0.190s
  Time for precision adjustment:      6.506s
  Time for transfer relation:         6.765s
  Time for merge operator:            0.782s
  Time for stop operator:             0.260s
  Time for adding to reached set:     0.308s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   44
Avg. length of target path (in blocks):                3389 (count: 44, min: 8, max: 145, avg: 77.02)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   2.416s
  Counterexample analysis:                             1.858s (Max:     0.119s, Calls: 44)
    Refinement sat check:                              1.188s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.007s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.091s
  Precision update:                                    0.072s
  ARG update:                                          0.269s

Length of refined path (in blocks):                    3342 (count: 44, min: 4, max: 144, avg: 75.95)
Number of affected states:                             3296 (count: 44, min: 1, max: 143, avg: 74.91)
Length (states) of path with itp 'true':                  2 (count: 44, min: 0, max: 2, avg: 0.05)
Length (states) of path with itp non-trivial itp:      3296 (count: 44, min: 1, max: 143, avg: 74.91)
Length (states) of path with itp 'false':                44 (count: 44, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 44, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:            3252 (count: 44, min: 0, max: 142, avg: 73.91)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                44
Number of successful refinements:     44
Number of failed refinements:         0
Max. size of reached set before ref.: 2305
Max. size of reached set after ref.:  13
Avg. size of reached set before ref.: 1255.20
Avg. size of reached set after ref.:  3.23

Total time for CEGAR algorithm:      18.319s
Time for refinements:                 2.580s
Average time for refinement:          0.058s
Max time for refinement:              0.142s

Code Coverage
-----------------------------
  Function coverage:      0.766
  Visited lines:          1384
  Total lines:            1504
  Line coverage:          0.920
  Visited conditions:     292
  Total conditions:       330
  Condition coverage:     0.885

CPAchecker general statistics
-----------------------------
Number of program locations:     2018
Number of CFA edges:             2228
Number of relevant variables:    242
Number of functions:             64
Number of loops:                 39
Size of reached set:             1741
  Number of reached locations:   882 (44%)
    Avg states per location:     1
    Max states per location:     23 (at node N200)
  Number of reached functions:   49 (77%)
  Number of partitions:          1740
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N1438 (before line 4343), Function main called from node N1425, stack depth 1 [3670f00], stack [main]])
  Number of target states:       0
  Size of final wait list        39

Time for analysis setup:          4.494s
  Time for loading CPAs:          0.884s
  Time for loading parser:        0.612s
  Time for CFA construction:      2.861s
    Time for parsing file(s):     0.885s
    Time for AST to CFA:          0.924s
    Time for CFA sanity check:    0.186s
    Time for post-processing:     0.687s
      Time for var class.:        0.336s
Time for Analysis:               18.319s
CPU time for analysis:           18.320s
Total time for CPAchecker:       22.825s
Total CPU time for CPAchecker:   22.820s
Time for statistics:              0.158s

Time for Garbage Collector:       0.343s (in 34 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 67MB (    64 MiB) max;     43MB (    41 MiB) avg;     70MB (    67 MiB) peak
Used non-heap memory:             40MB (    38 MiB) max;     34MB (    33 MiB) avg;     40MB (    38 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        42MB (    40 MiB) max;     36MB (    34 MiB) avg
Total process virtual memory:   8087MB (  7713 MiB) max;   8072MB (  7698 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
