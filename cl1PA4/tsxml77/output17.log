scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.16-rc1/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--serial--8250--8250_pci.ko-entry_point_true-unreach-call.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_sadz5ca5/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_probe_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_release_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_suspend_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_enable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_restore_state to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_save_state to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 6892: Ignoring function call through function pointer *(quirk->probe): rc = (*(quirk->probe))(dev); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __request_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __release_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_iomap to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ioread32 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ioread8 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_iounmap to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ioremap_nocache to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_disable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_ioremap_bar to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _dev_info to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 6653: Ignoring function call through function pointer *(quirk->init): rc = (*(quirk->init))(dev); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function __pci_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_final_state to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            2267 (11% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  1593 (70%)
  Because of loop head:            671 (30%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         3 (0%)
  Times precision was empty:       2169 (96%)
  Times precision was {false}:     58 (3%)
  Times result was cached:         4 (0%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      36 (2%)
  Times result was 'false':        17 (1%)
Number of strengthen sat checks:   0
Number of coverage checks:         5166
  BDD entailment checks:           802
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       37
Number of predicates discovered:          4
Number of abstraction locations:          35
Max number of predicates per location:    3
Avg number of predicates per location:    1
Total predicates per abstraction:         128
Max number of predicates per abstraction: 3
Avg number of predicates per abstraction: 1.36
Number of irrelevant predicates:          81 (63%)
Number of preds handled by boolean abs:   46 (36%)
  Total number of models for allsat:      45
  Max number of models for allsat:        4
  Avg number of models for allsat:        1.25

Time for post operator:                 11.532s
  Time for path formula creation:       11.417s
Time for strengthen operator:            0.140s
Time for prec operator:                  6.702s
  Time for abstraction:                  6.402s (Max:     5.558s, Count: 2267)
    Boolean abstraction:                 0.359s
    Solving time:                        5.843s (Max:     5.471s)
    Model enumeration time:              0.023s
    Time for BDD construction:           0.022s (Max:     0.013s)
Time for merge operator:                 1.355s
Time for coverage check:                 0.053s
  Time for BDD entailment checks:        0.048s
Total time for SMT solver (w/o itp):     5.866s

Number of path formula cache hits:   1554 (7%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    10.851s

Total number of created targets for pointer analysis: 88344
   Number of created targets for uf: *signed_short_int is 50
   Number of created targets for uf: *unsigned_int is 21729


Number of BDD nodes:                               215
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                          96 (count: 3503, min: 0, max: 60, avg: 0.03)
Time for BDD node cleanup:                             0.011s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.260s
Automaton transfers with branching:                0
Automaton transfer successors:                        20902 (count: 20902, min: 1, max: 1, avg: 1.00) [1 x 20902]

CPA algorithm statistics
------------------------
Number of iterations:            12958
Max size of waitlist:            96
Average size of waitlist:        49
Number of computed successors:   16269
Max successors for one state:    2
Number of times merged:          2182
Number of times stopped:         2963
Number of times breaked:         3

Total time for CPA algorithm:        22.431s (Max:     7.876s)
  Time for choose from waitlist:      0.055s
  Time for precision adjustment:      7.142s
  Time for transfer relation:        13.020s
  Time for merge operator:            1.542s
  Time for stop operator:             0.176s
  Time for adding to reached set:     0.172s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   3
Avg. length of target path (in blocks):                 134 (count: 3, min: 40, max: 51, avg: 44.67)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   1.290s
  Counterexample analysis:                             1.154s (Max:     0.590s, Calls: 3)
    Refinement sat check:                              1.049s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.011s
  Precision update:                                    0.004s
  ARG update:                                          0.105s

Length of refined path (in blocks):                      58 (count: 3, min: 4, max: 50, avg: 19.33)
Number of affected states:                               51 (count: 3, min: 1, max: 49, avg: 17.00)
Length (states) of path with itp 'true':                  4 (count: 3, min: 0, max: 2, avg: 1.33)
Length (states) of path with itp non-trivial itp:        51 (count: 3, min: 1, max: 49, avg: 17.00)
Length (states) of path with itp 'false':                 3 (count: 3, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 3, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:              48 (count: 3, min: 0, max: 48, avg: 16.00)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                3
Number of successful refinements:     3
Number of failed refinements:         0
Max. size of reached set before ref.: 4183
Max. size of reached set after ref.:  13
Avg. size of reached set before ref.: 4083.33
Avg. size of reached set after ref.:  9.67

Total time for CEGAR algorithm:      23.795s
Time for refinements:                 1.363s
Average time for refinement:          0.454s
Max time for refinement:              0.661s

Code Coverage
-----------------------------
  Function coverage:      0.325
  Visited lines:          1093
  Total lines:            2371
  Line coverage:          0.461
  Visited conditions:     198
  Total conditions:       814
  Condition coverage:     0.243

CPAchecker general statistics
-----------------------------
Number of program locations:     3626
Number of CFA edges:             4238
Number of relevant variables:    583
Number of functions:             126
Number of loops:                 15
Size of reached set:             1068
  Number of reached locations:   452 (12%)
    Avg states per location:     2
    Max states per location:     24 (at node N194)
  Number of reached functions:   41 (33%)
  Number of partitions:          1066
    Avg size of partitions:      1
    Max size of partitions:      3 (with key [N2478 (before line 7504), Function main called from node N2459, stack depth 1 [3ff54f3d], stack [main]])
  Number of target states:       0
  Size of final wait list        66

Time for analysis setup:          6.524s
  Time for loading CPAs:          1.043s
  Time for loading parser:        0.686s
  Time for CFA construction:      4.646s
    Time for parsing file(s):     1.244s
    Time for AST to CFA:          1.609s
    Time for CFA sanity check:    0.343s
    Time for post-processing:     1.289s
      Time for var class.:        0.655s
Time for Analysis:               23.795s
CPU time for analysis:           23.800s
Total time for CPAchecker:       30.323s
Total CPU time for CPAchecker:   30.310s
Time for statistics:              0.102s

Time for Garbage Collector:       0.507s (in 31 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 77MB (    74 MiB) max;     48MB (    46 MiB) avg;     80MB (    76 MiB) peak
Used non-heap memory:             40MB (    38 MiB) max;     34MB (    32 MiB) avg;     40MB (    38 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        41MB (    39 MiB) max;     36MB (    34 MiB) avg
Total process virtual memory:   8233MB (  7851 MiB) max;   8092MB (  7718 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
