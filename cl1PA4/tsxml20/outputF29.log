scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.16-rc1/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--wireless--ath--ath5k--ath5k.ko-entry_point_true-unreach-call.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_54cjc3rn/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 23140: Dead code detected: __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "m" (__preempt_count)); (CFACreationUtils.addEdgeToCFA, INFO)

line 23143: Dead code detected: __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "m" (__preempt_count)); (CFACreationUtils.addEdgeToCFA, INFO)

line 23149: Dead code detected: __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret__): "m" (__preempt_count)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (4UL) {
  case 1UL:
  __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "m" (__preempt_count));
  goto ldv_6004;
  case 2UL:
  __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "m" (__preempt_count));
  goto ldv_6004;
  case 4UL:
  __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "m" (__preempt_count));
  goto ldv_6004;
  case 8UL:
  __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret__): "m" (__preempt_count));
  goto ldv_6004;
  default:
  __bad_percpu_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 23166: Dead code detected: [pao_ID__ == 1] (CFACreationUtils.addEdgeToCFA, INFO)

line 23166: Dead code detected: [!(pao_ID__ == 1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 23167: Dead code detected: __asm__ ("incb %%gs:%P0": "+m" (__preempt_count)); (CFACreationUtils.addEdgeToCFA, INFO)

line 23169: Dead code detected: [pao_ID__ == -1] (CFACreationUtils.addEdgeToCFA, INFO)

line 23169: Dead code detected: [!(pao_ID__ == -1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 23170: Dead code detected: __asm__ ("decb %%gs:%P0": "+m" (__preempt_count)); (CFACreationUtils.addEdgeToCFA, INFO)

line 23172: Dead code detected: __asm__ ("addb %1, %%gs:%P0": "+m" (__preempt_count): "qi" (val)); (CFACreationUtils.addEdgeToCFA, INFO)

line 23176: Dead code detected: [pao_ID__ == 1] (CFACreationUtils.addEdgeToCFA, INFO)

line 23176: Dead code detected: [!(pao_ID__ == 1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 23177: Dead code detected: __asm__ ("incw %%gs:%P0": "+m" (__preempt_count)); (CFACreationUtils.addEdgeToCFA, INFO)

line 23179: Dead code detected: [pao_ID__ == -1] (CFACreationUtils.addEdgeToCFA, INFO)

line 23179: Dead code detected: [!(pao_ID__ == -1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 23180: Dead code detected: __asm__ ("decw %%gs:%P0": "+m" (__preempt_count)); (CFACreationUtils.addEdgeToCFA, INFO)

line 23182: Dead code detected: __asm__ ("addw %1, %%gs:%P0": "+m" (__preempt_count): "ri" (val)); (CFACreationUtils.addEdgeToCFA, INFO)

line 23196: Dead code detected: [pao_ID__ == 1] (CFACreationUtils.addEdgeToCFA, INFO)

line 23196: Dead code detected: [!(pao_ID__ == 1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 23197: Dead code detected: __asm__ ("incq %%gs:%P0": "+m" (__preempt_count)); (CFACreationUtils.addEdgeToCFA, INFO)

line 23199: Dead code detected: [pao_ID__ == -1] (CFACreationUtils.addEdgeToCFA, INFO)

line 23199: Dead code detected: [!(pao_ID__ == -1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 23200: Dead code detected: __asm__ ("decq %%gs:%P0": "+m" (__preempt_count)); (CFACreationUtils.addEdgeToCFA, INFO)

line 23202: Dead code detected: __asm__ ("addq %1, %%gs:%P0": "+m" (__preempt_count): "re" (val)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (4UL) {
  case 1UL: ;
  if (pao_ID__ == 1) {
    __asm__ ("incb %%gs:%P0": "+m" (__preempt_count));
  } else
  if (pao_ID__ == -1) {
    __asm__ ("decb %%gs:%P0": "+m" (__preempt_count));
  } else {
    __asm__ ("addb %1, %%gs:%P0": "+m" (__preempt_count): "qi" (val));
  }
  goto ldv_6061;
  case 2UL: ;
  if (pao_ID__ == 1) {
    __asm__ ("incw %%gs:%P0": "+m" (__preempt_count));
  } else
  if (pao_ID__ == -1) {
    __asm__ ("decw %%gs:%P0": "+m" (__preempt_count));
  } else {
    __asm__ ("addw %1, %%gs:%P0": "+m" (__preempt_count): "ri" (val));
  }
  goto ldv_6061;
  case 4UL: ;
  if (pao_ID__ == 1) {
    __asm__ ("incl %%gs:%P0": "+m" (__preempt_count));
  } else
  if (pao_ID__ == -1) {
    __asm__ ("decl %%gs:%P0": "+m" (__preempt_count));
  } else {
    __asm__ ("addl %1, %%gs:%P0": "+m" (__preempt_count): "ri" (val));
  }
  goto ldv_6061;
  case 8UL: ;
  if (pao_ID__ == 1) {
    __asm__ ("incq %%gs:%P0": "+m" (__preempt_count));
  } else
  if (pao_ID__ == -1) {
    __asm__ ("decq %%gs:%P0": "+m" (__preempt_count));
  } else {
    __asm__ ("addq %1, %%gs:%P0": "+m" (__preempt_count): "re" (val));
  }
  goto ldv_6061;
  default:
  __bad_percpu_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 23220: Dead code detected: [pao_ID__ == 1] (CFACreationUtils.addEdgeToCFA, INFO)

line 23220: Dead code detected: [!(pao_ID__ == 1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 23221: Dead code detected: __asm__ ("incb %%gs:%P0": "+m" (__preempt_count)); (CFACreationUtils.addEdgeToCFA, INFO)

line 23223: Dead code detected: [pao_ID__ == -1] (CFACreationUtils.addEdgeToCFA, INFO)

line 23223: Dead code detected: [!(pao_ID__ == -1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 23224: Dead code detected: __asm__ ("decb %%gs:%P0": "+m" (__preempt_count)); (CFACreationUtils.addEdgeToCFA, INFO)

line 23226: Dead code detected: __asm__ ("addb %1, %%gs:%P0": "+m" (__preempt_count): "qi" (- val)); (CFACreationUtils.addEdgeToCFA, INFO)

line 23230: Dead code detected: [pao_ID__ == 1] (CFACreationUtils.addEdgeToCFA, INFO)

line 23230: Dead code detected: [!(pao_ID__ == 1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 23231: Dead code detected: __asm__ ("incw %%gs:%P0": "+m" (__preempt_count)); (CFACreationUtils.addEdgeToCFA, INFO)

line 23233: Dead code detected: [pao_ID__ == -1] (CFACreationUtils.addEdgeToCFA, INFO)

line 23233: Dead code detected: [!(pao_ID__ == -1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 23234: Dead code detected: __asm__ ("decw %%gs:%P0": "+m" (__preempt_count)); (CFACreationUtils.addEdgeToCFA, INFO)

line 23236: Dead code detected: __asm__ ("addw %1, %%gs:%P0": "+m" (__preempt_count): "ri" (- val)); (CFACreationUtils.addEdgeToCFA, INFO)

line 23250: Dead code detected: [pao_ID__ == 1] (CFACreationUtils.addEdgeToCFA, INFO)

line 23250: Dead code detected: [!(pao_ID__ == 1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 23251: Dead code detected: __asm__ ("incq %%gs:%P0": "+m" (__preempt_count)); (CFACreationUtils.addEdgeToCFA, INFO)

line 23253: Dead code detected: [pao_ID__ == -1] (CFACreationUtils.addEdgeToCFA, INFO)

line 23253: Dead code detected: [!(pao_ID__ == -1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 23254: Dead code detected: __asm__ ("decq %%gs:%P0": "+m" (__preempt_count)); (CFACreationUtils.addEdgeToCFA, INFO)

line 23256: Dead code detected: __asm__ ("addq %1, %%gs:%P0": "+m" (__preempt_count): "re" (- val)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (4UL) {
  case 1UL: ;
  if (pao_ID__ == 1) {
    __asm__ ("incb %%gs:%P0": "+m" (__preempt_count));
  } else
  if (pao_ID__ == -1) {
    __asm__ ("decb %%gs:%P0": "+m" (__preempt_count));
  } else {
    __asm__ ("addb %1, %%gs:%P0": "+m" (__preempt_count): "qi" (- val));
  }
  goto ldv_6073;
  case 2UL: ;
  if (pao_ID__ == 1) {
    __asm__ ("incw %%gs:%P0": "+m" (__preempt_count));
  } else
  if (pao_ID__ == -1) {
    __asm__ ("decw %%gs:%P0": "+m" (__preempt_count));
  } else {
    __asm__ ("addw %1, %%gs:%P0": "+m" (__preempt_count): "ri" (- val));
  }
  goto ldv_6073;
  case 4UL: ;
  if (pao_ID__ == 1) {
    __asm__ ("incl %%gs:%P0": "+m" (__preempt_count));
  } else
  if (pao_ID__ == -1) {
    __asm__ ("decl %%gs:%P0": "+m" (__preempt_count));
  } else {
    __asm__ ("addl %1, %%gs:%P0": "+m" (__preempt_count): "ri" (- val));
  }
  goto ldv_6073;
  case 8UL: ;
  if (pao_ID__ == 1) {
    __asm__ ("incq %%gs:%P0": "+m" (__preempt_count));
  } else
  if (pao_ID__ == -1) {
    __asm__ ("decq %%gs:%P0": "+m" (__preempt_count));
  } else {
    __asm__ ("addq %1, %%gs:%P0": "+m" (__preempt_count): "re" (- val));
  }
  goto ldv_6073;
  default:
  __bad_percpu_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

lines 26813-26815: Function pointer *(ah->ah_setup_tx_desc) with type int (*)(struct ath5k_hw *, struct ath5k_desc *, unsigned int, unsigned int, int, enum ath5k_pkt_type , unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 23725: Function pointer *(ops->alloc) with type void *(*)(struct device *, size_t , dma_addr_t *, gfp_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 23757: Function pointer *(ops->free) with type void (*)(struct device *, size_t , void *, dma_addr_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 23595-23596: Function pointer *(ops->map_page) with type dma_addr_t (*)(struct device *, struct page *, unsigned long, size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 23649: Function pointer *(ops->mapping_error) with type int (*)(struct device *, dma_addr_t ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 23629: Function pointer *(ops->unmap_page) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 24180-24182: Function pointer *((void (*)(void *, struct ath5k_hw *, struct sk_buff *))it_func) with type void (*)(void *, struct ath5k_hw *, struct sk_buff *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 24235-24238: Function pointer *((void (*)(void *, struct ath5k_hw *, struct sk_buff *, struct ath5k_txq *))it_func) with type void (*)(void *, struct ath5k_hw *, struct sk_buff *, struct ath5k_txq *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 24291-24292: Function pointer *((void (*)(void *, struct ath5k_hw *, struct sk_buff *, struct ath5k_txq *, struct ath5k_tx_status *))it_func) with type void (*)(void *, struct ath5k_hw *, struct sk_buff *, struct ath5k_txq *, struct ath5k_tx_status *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

line 36379: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___3 = ldv_zalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_probe_4 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_release_4 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_complete_3 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_suspend_noirq_3 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_restore_noirq_3 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_poweroff_late_3 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_poweroff_noirq_3 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_thaw_noirq_3 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_freeze_late_3 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_prepare_3 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_freeze_noirq_3 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_resume_noirq_3 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_thaw_early_3 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_resume_early_3 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_restore_early_3 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_suspend_late_3 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __pci_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_final_state to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_disable_link_state to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_enable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 35409: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___1 = ldv_zalloc(8UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 31437: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___0 = ldv_zalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 31358: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp = ldv_zalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function iowrite32 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ioread32 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 35339: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp = ldv_zalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 31234: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp = ldv_zalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 35175: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp = ldv_zalloc(8UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 28805: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp = ldv_zalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ftrace_event_reg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function trace_event_raw_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 34803: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___0 = ldv_zalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 28693: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp = ldv_zalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 35501: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___1 = ldv_zalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 31401: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp = ldv_zalloc(1416UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 31280: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp = ldv_zalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function dma_set_mask to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_disable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 31200: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp = ldv_zalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 28883: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp = ldv_zalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 31158: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___0 = ldv_zalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 34893: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp = ldv_zalloc(8UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 35577: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___0 = ldv_zalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 35411: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___2 = ldv_zalloc(8UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 35341: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___0 = ldv_zalloc(8UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function ldv_release_8 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function simple_open to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 35177: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___0 = ldv_zalloc(8UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 35083: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___2 = ldv_zalloc(8UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function trace_define_field to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 28748: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___1 = ldv_zalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function ldv_probe_25 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_release_25 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 36641: Destroying the void* pointer ldv_main_exported_25::tmp produces garbage or the memory pointed by it is unused: ldv_main_exported_25(); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 35505: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___3 = ldv_zalloc(8UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function seq_lseek to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function seq_read to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function seq_release to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 31403: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___0 = ldv_zalloc(48UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 31483: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___0 = ldv_zalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 31326: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___0 = ldv_zalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 31202: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___0 = ldv_zalloc(48UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 34981: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___1 = ldv_zalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 34899: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___2 = ldv_zalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function ldv_release_11 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function noop_llseek to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 35587: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___5 = ldv_zalloc(8UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function ftrace_raw_output_prep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function trace_seq_printf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 35413: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___3 = ldv_zalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 35181: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___2 = ldv_zalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 35085: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___3 = ldv_zalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 34811: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___4 = ldv_zalloc(8UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function seq_open to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 31405: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___1 = ldv_zalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 31328: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___1 = ldv_zalloc(48UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function pci_set_master to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 31204: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___1 = ldv_zalloc(1416UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 34983: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___2 = ldv_zalloc(8UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 35589: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___6 = ldv_zalloc(8UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function ldv_release_5 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function default_llseek to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_release_10 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usleep_range to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_release_12 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 35087: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___4 = ldv_zalloc(8UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function ldv_release_9 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 34815: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___6 = ldv_zalloc(8UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function ldv_release_6 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_request_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_iomap to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ieee80211_alloc_hw to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_iounmap to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_release_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 34985: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___3 = ldv_zalloc(8UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function ldv_release_7 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snprintf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 31127: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___0 = ldv_zalloc(48UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 32642: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___10 = ldv_zalloc(16UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 31140: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___0 = ldv_zalloc(48UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 32668: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___23 = ldv_zalloc(56UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 31075: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___0 = ldv_zalloc(48UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function mutex_lock_nested to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function net_ratelimit to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 31720: Ignoring parameters passed as varargs to function _ath5k_printk: _ath5k_printk((const struct ath5k_hw *)ah, "\v", "Only one single ad-hoc interface is allowed.\n") (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ieee80211_stop_queue to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 31101: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___0 = ldv_zalloc(48UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 31088: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___0 = ldv_zalloc(48UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 31114: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___0 = ldv_zalloc(48UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 9611: Ignoring function call through function pointer *(common->bus_ops->eeprom_read): tmp___0 = (*(common->bus_ops->eeprom_read))(common, off, data); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function seq_printf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ieee80211_unregister_hw to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function kstrtoint to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ieee80211_queue_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 33173: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((const void *)to, 0); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function __builtin_object_size to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function might_fault to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _dev_info to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv__builtin_va_start to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv__builtin_va_end to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ath_key_delete to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ath_key_config to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

lines 27136-27137: Ignoring parameters passed as varargs to function _ath5k_printk: _ath5k_printk((const struct ath5k_hw *)ah, "\f", "intval %u is too low, min 15\n", intval) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

lines 30436-30437: Ignoring parameters passed as varargs to function _ath5k_printk: _ath5k_printk((const struct ath5k_hw *)ah, "\v", "ANI mode %d out of range", (unsigned int)mode) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

lines 29813-29814: Ignoring parameters passed as varargs to function _ath5k_printk: _ath5k_printk((const struct ath5k_hw *)ah, "\v", "noise immunity level %d out of range", level) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

lines 29864-29865: Ignoring parameters passed as varargs to function _ath5k_printk: _ath5k_printk((const struct ath5k_hw *)ah, "\v", "spur immunity level %d out of range", level) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

lines 29901-29902: Ignoring parameters passed as varargs to function _ath5k_printk: _ath5k_printk((const struct ath5k_hw *)ah, "\v", "firstep level %d out of range", level) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

lines 33452-33453: Ignoring parameters passed as varargs to function _ath5k_printk: _ath5k_printk((const struct ath5k_hw *)ah, "\017", "(%s:%d): debug file triggered reset\n", "write_file_reset", 414) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

lines 31747-31748: Ignoring parameters passed as varargs to function _ath5k_printk: _ath5k_printk((const struct ath5k_hw *)ah, "\017", "(%s:%d): add interface mode %d\n", "ath5k_add_interface", 249, __CPAchecker_TMP_10) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ieee80211_iterate_active_interfaces_atomic to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ieee80211_free_txskb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

lines 32309-32311: Ignoring parameters passed as varargs to function _ath5k_printk: _ath5k_printk((const struct ath5k_hw *)ah, "\017", "(%s:%d): Configure tx [queue %d],  aifs: %d, cw_min: %d, cw_max: %d, txop: %d\n", "ath5k_conf_tx", 742, (int)queue, __CPAchecker_TMP_2, __CPAchecker_TMP_3, __CPAchecker_TMP_4, __CPAchecker_TMP_5) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

lines 32322-32323: Ignoring parameters passed as varargs to function _ath5k_printk: _ath5k_printk((const struct ath5k_hw *)ah, "\v", "Unable to update hardware queue %u!\n", (int)queue) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

lines 27945-27946: Ignoring parameters passed as varargs to function _ath5k_printk: _ath5k_printk((const struct ath5k_hw *)ah, "\017", "(%s:%d): mode %d\n", "ath5k_start", 2838, __CPAchecker_TMP_1) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

Assuming external function list_del to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ath_opmode_to_string to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _copy_from_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ieee80211_stop_queues to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ieee80211_wake_queues to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __list_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 12800: Ignoring parameters passed as varargs to function _ath5k_printk: _ath5k_printk((const struct ath5k_hw *)ah, "\f", "channel is not A/B/G!") (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

lines 30491-30492: Ignoring parameters passed as varargs to function _ath5k_printk: _ath5k_printk((const struct ath5k_hw *)ah, "\017", "(%s:%d): ANI auto\n", "ath5k_ani_init", 822) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

lines 30477-30478: Ignoring parameters passed as varargs to function _ath5k_printk: _ath5k_printk((const struct ath5k_hw *)ah, "\017", "(%s:%d): ANI manual high -> low sensitivity\n", "ath5k_ani_init", 813) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

lines 30463-30464: Ignoring parameters passed as varargs to function _ath5k_printk: _ath5k_printk((const struct ath5k_hw *)ah, "\017", "(%s:%d): ANI manual low -> high sensitivity\n", "ath5k_ani_init", 805) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

lines 30454-30455: Ignoring parameters passed as varargs to function _ath5k_printk: _ath5k_printk((const struct ath5k_hw *)ah, "\017", "(%s:%d): ANI off\n", "ath5k_ani_init", 802) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

Assuming external function __mutex_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __raw_spin_lock_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ath_hw_setbssidmask to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __copy_from_user_overflow to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock_bh to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tasklet_kill to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function cancel_delayed_work_sync to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

lines 24911-24912: Ignoring parameters passed as varargs to function _ath5k_printk: _ath5k_printk((const struct ath5k_hw *)ah, "\017", "(%s:%d): channel set, resetting (%u -> %u MHz)\n", "ath5k_chan_set", 586, __CPAchecker_TMP_0, __CPAchecker_TMP_1) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

lines 20900-20901: Ignoring parameters passed as varargs to function _ath5k_printk: _ath5k_printk((const struct ath5k_hw *)ah, "\017", "(%s:%d): changing txpower to %d\n", "ath5k_hw_set_txpower_limit", 3866, (int)txpower) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

lines 20822-20823: Ignoring parameters passed as varargs to function _ath5k_printk: _ath5k_printk((const struct ath5k_hw *)ah, "\v", "invalid tx power: %u\n", (int)txpower) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

Assuming external function request_threaded_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ath_hw_cycle_counters_update to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

lines 27899-27900: Ignoring parameters passed as varargs to function _ath5k_printk: _ath5k_printk((const struct ath5k_hw *)ah, "\017", "(%s:%d): invalid %u\n", "ath5k_stop_locked", 2798, tmp) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

lines 30005-30006: Ignoring parameters passed as varargs to function _ath5k_printk: _ath5k_printk((const struct ath5k_hw *)ah, "\017", "(%s:%d): turned %s", "ath5k_ani_set_cck_weak_signal_detection", 339, __CPAchecker_TMP_0) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

lines 29879-29880: Ignoring parameters passed as varargs to function _ath5k_printk: _ath5k_printk((const struct ath5k_hw *)ah, "\017", "(%s:%d): new level %d", "ath5k_ani_set_spur_immunity_level", 261, level) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

lines 29916-29917: Ignoring parameters passed as varargs to function _ath5k_printk: _ath5k_printk((const struct ath5k_hw *)ah, "\017", "(%s:%d): new level %d", "ath5k_ani_set_firstep_level", 283, level) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

line 27796: Ignoring parameters passed as varargs to function _ath5k_printk: _ath5k_printk((const struct ath5k_hw *)ah, "\v", "request_irq failed\n") (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

Assuming external function ieee80211_free_hw to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 24137: Ignoring function call through function pointer *(common->bus_ops->read_cachesize): (*(common->bus_ops->read_cachesize))(common, csz); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function _raw_spin_unlock_bh to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

lines 31991-31992: Ignoring parameters passed as varargs to function _ath5k_printk: _ath5k_printk((const struct ath5k_hw *)ah, "\017", "(%s:%d): Bss Info ASSOC %d, bssid: %pM\n", "ath5k_bss_info_changed", 430, __CPAchecker_TMP_12, (u8 *)(&(common->curbssid))) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

Assuming external function ieee80211_beacon_get_tim to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

lines 28087-28088: Ignoring parameters passed as varargs to function _ath5k_printk: _ath5k_printk((const struct ath5k_hw *)ah, "\017", "(%s:%d): resetting\n", "ath5k_reset", 2973) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

lines 29837-29838: Ignoring parameters passed as varargs to function _ath5k_printk: _ath5k_printk((const struct ath5k_hw *)ah, "\017", "(%s:%d): new level %d", "ath5k_ani_set_noise_immunity_level", 236, level) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

lines 29983-29984: Ignoring parameters passed as varargs to function _ath5k_printk: _ath5k_printk((const struct ath5k_hw *)ah, "\017", "(%s:%d): turned %s", "ath5k_ani_set_ofdm_weak_signal_detection", 323, __CPAchecker_TMP_0) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

lines 28036-28037: Ignoring parameters passed as varargs to function _ath5k_printk: _ath5k_printk((const struct ath5k_hw *)ah, "\017", "(%s:%d): putting device to sleep\n", "ath5k_stop", 2944) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

Assuming external function free_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function synchronize_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ieee80211_generic_frame_duration to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 21693: Ignoring parameters passed as varargs to function _ath5k_printk: _ath5k_printk((const struct ath5k_hw *)ah, "\v", "failed to wakeup the MAC Chip\n") (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

lines 29572-29573: Ignoring parameters passed as varargs to function _ath5k_printk: _ath5k_printk((const struct ath5k_hw *)ah, "\017", "(%s:%d): rfkill enable (gpio:%d polarity:%d)\n", "ath5k_rfkill_enable", 186, (int)(ah->rf_kill.gpio), (int)(ah->rf_kill.polarity)) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

lines 16537-16538: Ignoring parameters passed as varargs to function _ath5k_printk: _ath5k_printk((const struct ath5k_hw *)ah, "\017", "(%s:%d): mode %d\n", "ath5k_hw_set_opmode", 1015, (unsigned int)op_mode) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

lines 25075-25077: Ignoring parameters passed as varargs to function _ath5k_printk: _ath5k_printk((const struct ath5k_hw *)ah, "\017", "(%s:%d): mode setup opmode %d (%s)\n", "ath5k_update_bssid_mask_and_opmode", 688, __CPAchecker_TMP_1, tmp___0) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

lines 26914-26915: Ignoring parameters passed as varargs to function _ath5k_printk: _ath5k_printk((const struct ath5k_hw *)ah, "\017", "(%s:%d): in beacon_send\n", "ath5k_beacon_send", 2044) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

line 24695: Ignoring parameters passed as varargs to function _ath5k_printk: _ath5k_printk((const struct ath5k_hw *)ah, "\f", "bad mode, not copying channels\n") (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

lines 25806-25808: Ignoring parameters passed as varargs to function _ath5k_printk: _ath5k_printk((const struct ath5k_hw *)ah, "\017", "(%s:%d): beacon queueprops tqi_aifs:%d tqi_cw_min:%d tqi_cw_max:%d\n", "ath5k_beaconq_config", 1207, (int)(qi.tqi_aifs), (int)(qi.tqi_cw_min), (int)(qi.tqi_cw_max)) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

lines 25819-25820: Ignoring parameters passed as varargs to function _ath5k_printk: _ath5k_printk((const struct ath5k_hw *)ah, "\v", "%s: unable to update parameters for beacon hardware queue!\n", "ath5k_beaconq_config") (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

lines 14365-14366: Ignoring parameters passed as varargs to function _ath5k_printk: _ath5k_printk((const struct ath5k_hw *)ah, "\017", "(%s:%d): beacon queue didn\'t stop !\n", "ath5k_hw_stop_beacon_queue", 469) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

Assuming external function ieee80211_channel_to_frequency to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

lines 25106-25107: Ignoring parameters passed as varargs to function _ath5k_printk: _ath5k_printk((const struct ath5k_hw *)ah, "\017", "(%s:%d): RX filter 0x%x\n", "ath5k_update_bssid_mask_and_opmode", 707, rfilt) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

line 21720: Ignoring parameters passed as varargs to function _ath5k_printk: _ath5k_printk((const struct ath5k_hw *)ah, "\v", "failed to put device on warm reset\n") (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

line 21732: Ignoring parameters passed as varargs to function _ath5k_printk: _ath5k_printk((const struct ath5k_hw *)ah, "\v", "failed to put device on hold\n") (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

lines 26928-26929: Ignoring parameters passed as varargs to function _ath5k_printk: _ath5k_printk((const struct ath5k_hw *)ah, "\017", "(%s:%d): missed %u consecutive beacons\n", "ath5k_beacon_send", 2056, ah->bmisscount) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

lines 26978-26979: Ignoring parameters passed as varargs to function _ath5k_printk: _ath5k_printk((const struct ath5k_hw *)ah, "\017", "(%s:%d): resume beacon xmit after %u misses\n", "ath5k_beacon_send", 2070, ah->bmisscount) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

lines 26942-26943: Ignoring parameters passed as varargs to function _ath5k_printk: _ath5k_printk((const struct ath5k_hw *)ah, "\017", "(%s:%d): stuck beacon time (%u missed)\n", "ath5k_beacon_send", 2060, ah->bmisscount) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

lines 26955-26956: Ignoring parameters passed as varargs to function _ath5k_printk: _ath5k_printk((const struct ath5k_hw *)ah, "\017", "(%s:%d): stuck beacon, resetting\n", "ath5k_beacon_send", 2062) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

line 23629: Ignoring function call through function pointer *(ops->unmap_page): (*(ops->unmap_page))(dev, addr, size, dir, attrs); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function debug_dma_unmap_page to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

lines 27024-27025: Ignoring parameters passed as varargs to function _ath5k_printk: _ath5k_printk((const struct ath5k_hw *)ah, "\f", "beacon queue %u didn\'t start/stop ?\n", ah->bhalq) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

lines 27062-27063: Ignoring parameters passed as varargs to function _ath5k_printk: _ath5k_printk((const struct ath5k_hw *)ah, "\f", "bf=%p bf_skb=%p\n", bf, bf->skb) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

line 28224: Ignoring parameters passed as varargs to function _ath5k_printk: _ath5k_printk((const struct ath5k_hw *)ah, "\v", "can\'t get channels\n") (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

lines 27838-27839: Ignoring parameters passed as varargs to function _ath5k_printk: _ath5k_printk((const struct ath5k_hw *)ah, "\016", "Atheros AR%s chip found (MAC: 0x%x, PHY: 0x%x)\n", tmp___0, ah->ah_mac_srev, __CPAchecker_TMP_3) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

Assuming external function debugfs_create_dir to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function debugfs_create_file to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function debugfs_create_bool to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

lines 27862-27863: Ignoring parameters passed as varargs to function _ath5k_printk: _ath5k_printk((const struct ath5k_hw *)ah, "\016", "RF%s 5GHz radio found (0x%x)\n", tmp___6, __CPAchecker_TMP_15) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

lines 27845-27846: Ignoring parameters passed as varargs to function _ath5k_printk: _ath5k_printk((const struct ath5k_hw *)ah, "\016", "RF%s 2GHz radio found (0x%x)\n", tmp___1, __CPAchecker_TMP_7) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

lines 27855-27856: Ignoring parameters passed as varargs to function _ath5k_printk: _ath5k_printk((const struct ath5k_hw *)ah, "\016", "RF%s multiband radio found (0x%x)\n", tmp___3, __CPAchecker_TMP_11) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

lines 27851-27852: Ignoring parameters passed as varargs to function _ath5k_printk: _ath5k_printk((const struct ath5k_hw *)ah, "\016", "RF%s 5GHz radio found (0x%x)\n", tmp___2, __CPAchecker_TMP_9) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

lines 27865-27866: Ignoring parameters passed as varargs to function _ath5k_printk: _ath5k_printk((const struct ath5k_hw *)ah, "\016", "RF%s 2GHz radio found (0x%x)\n", tmp___7, __CPAchecker_TMP_17) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

Assuming external function trace_hardirqs_off to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function trace_hardirqs_on to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function debug_dma_free_coherent to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 23757: Ignoring function call through function pointer *(ops->free): (*(ops->free))(dev, size, vaddr, bus, attrs); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function led_classdev_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sysfs_remove_group to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 21773: Ignoring parameters passed as varargs to function _ath5k_printk: _ath5k_printk((const struct ath5k_hw *)ah, "\v", "failed to wakeup the MAC Chip\n") (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

line 22770: Ignoring parameters passed as varargs to function _ath5k_printk: _ath5k_printk((const struct ath5k_hw *)ah, "\v", "Couldn\'t identify radio revision.\n") (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

line 22782: Ignoring parameters passed as varargs to function _ath5k_printk: _ath5k_printk((const struct ath5k_hw *)ah, "\v", "Device not yet supported.\n") (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

line 22576: Ignoring parameters passed as varargs to function _ath5k_printk: _ath5k_printk((const struct ath5k_hw *)ah, "\v", "POST Failed !!!\n") (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

line 22602: Ignoring parameters passed as varargs to function _ath5k_printk: _ath5k_printk((const struct ath5k_hw *)ah, "\v", "POST Failed !!!\n") (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

line 21808: Ignoring parameters passed as varargs to function _ath5k_printk: _ath5k_printk((const struct ath5k_hw *)ah, "\v", "failed to reset the MAC Chip\n") (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

Assuming external function strcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 21820: Ignoring parameters passed as varargs to function _ath5k_printk: _ath5k_printk((const struct ath5k_hw *)ah, "\v", "failed to resume the MAC Chip\n") (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

line 34626: Ignoring function call through function pointer *(ah->ah_proc_tx_desc): done = (*(ah->ah_proc_tx_desc))(ah, bf->desc, &ts); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 21880: Ignoring parameters passed as varargs to function _ath5k_printk: _ath5k_printk((const struct ath5k_hw *)ah, "\v", "invalid radio frequency mode\n") (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

line 21837: Ignoring parameters passed as varargs to function _ath5k_printk: _ath5k_printk((const struct ath5k_hw *)ah, "\v", "failed to warm reset the MAC Chip\n") (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

Assuming external function _raw_spin_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __list_del_entry to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

lines 14260-14261: Ignoring parameters passed as varargs to function _ath5k_printk: _ath5k_printk((const struct ath5k_hw *)ah, "\017", "(%s:%d): queue %i didn\'t stop !\n", "ath5k_hw_stop_tx_dma", 379, queue) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

Assuming external function _raw_spin_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

lines 14334-14335: Ignoring parameters passed as varargs to function _ath5k_printk: _ath5k_printk((const struct ath5k_hw *)ah, "\017", "(%s:%d): tx dma didn\'t stop (q:%i, frm:%i) !\n", "ath5k_hw_stop_tx_dma", 446, queue, pending) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

lines 14076-14077: Ignoring parameters passed as varargs to function _ath5k_printk: _ath5k_printk((const struct ath5k_hw *)ah, "\017", "(%s:%d): failed to stop RX DMA !\n", "ath5k_hw_stop_rx_dma", 210) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

lines 14311-14312: Ignoring parameters passed as varargs to function _ath5k_printk: _ath5k_printk((const struct ath5k_hw *)ah, "\017", "(%s:%d): quiet mechanism didn\'t work q:%i !\n", "ath5k_hw_stop_tx_dma", 432, queue) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

Assuming external function debug_lockdep_rcu_enabled to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

lines 24235-24238: Ignoring call via function pointer trace_ath5k_tx::it_func for which no suitable target was found in line: (*((void (*)(void *, struct ath5k_hw *, struct sk_buff *, struct ath5k_txq *))it_func))(__data, priv, skb, q); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

lines 24235-24238: Ignoring function call through function pointer *((void (*)(void *, struct ath5k_hw *, struct sk_buff *, struct ath5k_txq *))it_func): (*((void (*)(void *, struct ath5k_hw *, struct sk_buff *, struct ath5k_txq *))it_func))(__data, priv, skb, q); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function rcu_is_watching to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rcu_lockdep_current_cpu_online to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function lock_is_held to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function lockdep_rcu_suspicious to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 26490: Ignoring parameters passed as varargs to function _ath5k_printk: _ath5k_printk((const struct ath5k_hw *)ah, "\v", "tx hdrlen not %%4: not enough headroom to pad") (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

line 26508: Ignoring parameters passed as varargs to function _ath5k_printk: _ath5k_printk((const struct ath5k_hw *)ah, "\v", "no further txbuf available, dropping packet\n") (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

Assuming external function skb_push to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memmove to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dev_kfree_skb_any to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __phys_addr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

lines 23595-23596: Ignoring function call through function pointer *(ops->map_page): addr = (*(ops->map_page))(dev, ((struct page *)0L) + (tmp___2 >> 12), ((unsigned long)ptr) & 4095UL, size, dir, attrs); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function debug_dma_map_page to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

lines 26774-26775: Ignoring parameters passed as varargs to function _ath5k_printk: _ath5k_printk((const struct ath5k_hw *)ah, "\017", "(%s:%d): skb %p [data %p len %u] skbaddr %llx\n", "ath5k_beacon_setup", 1931, skb, skb->data, skb->len, bf->skbaddr) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

line 25490: Ignoring parameters passed as varargs to function _ath5k_printk: _ath5k_printk((const struct ath5k_hw *)ah, "\v", "can\'t allocate descriptors\n") (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

line 28236: Ignoring parameters passed as varargs to function _ath5k_printk: _ath5k_printk((const struct ath5k_hw *)ah, "\v", "can\'t allocate descriptors\n") (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

line 28248: Ignoring parameters passed as varargs to function _ath5k_printk: _ath5k_printk((const struct ath5k_hw *)ah, "\v", "can\'t setup a beacon xmit queue\n") (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

lines 25506-25507: Ignoring parameters passed as varargs to function _ath5k_printk: _ath5k_printk((const struct ath5k_hw *)ah, "\017", "(%s:%d): DMA map: %p (%zu) -> %llx\n", "ath5k_desc_alloc", 1011, ds, ah->desc_len, ah->desc_daddr) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

line 28262: Ignoring parameters passed as varargs to function _ath5k_printk: _ath5k_printk((const struct ath5k_hw *)ah, "\v", "can\'t setup cab queue\n") (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

line 28340: Ignoring parameters passed as varargs to function _ath5k_printk: _ath5k_printk((const struct ath5k_hw *)ah, "\v", "can\'t setup xmit queue\n") (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

Assuming external function tasklet_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __init_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function lockdep_init_map to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function init_timer_key to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 28381: Ignoring function call through function pointer *(tmp___21->bus_ops->eeprom_read_mac): ret = (*(tmp___21->bus_ops->eeprom_read_mac))(ah, (u8 *)(&mac)); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 28385: Ignoring parameters passed as varargs to function _ath5k_printk: _ath5k_printk((const struct ath5k_hw *)ah, "\v", "unable to read address from EEPROM\n") (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

line 28278: Ignoring parameters passed as varargs to function _ath5k_printk: _ath5k_printk((const struct ath5k_hw *)ah, "\v", "can\'t setup xmit queue\n") (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

line 28293: Ignoring parameters passed as varargs to function _ath5k_printk: _ath5k_printk((const struct ath5k_hw *)ah, "\v", "can\'t setup xmit queue\n") (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

line 28308: Ignoring parameters passed as varargs to function _ath5k_printk: _ath5k_printk((const struct ath5k_hw *)ah, "\v", "can\'t setup xmit queue\n") (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

line 28323: Ignoring parameters passed as varargs to function _ath5k_printk: _ath5k_printk((const struct ath5k_hw *)ah, "\v", "can\'t setup xmit queue\n") (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

Assuming external function ath_regd_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ieee80211_register_hw to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ath_is_world_regd to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function regulatory_hint to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 28412: Ignoring parameters passed as varargs to function _ath5k_printk: _ath5k_printk((const struct ath5k_hw *)ah, "\v", "can\'t register ieee80211 hw\n") (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

line 28400: Ignoring parameters passed as varargs to function _ath5k_printk: _ath5k_printk((const struct ath5k_hw *)ah, "\v", "can\'t initialize regulatory system\n") (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

Assuming external function pci_match_id to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sysfs_create_group to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 31046: Ignoring parameters passed as varargs to function _ath5k_printk: _ath5k_printk((const struct ath5k_hw *)ah, "\v", "failed to create sysfs group\n") (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

Assuming external function strncpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function led_classdev_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

lines 29320-29321: Ignoring parameters passed as varargs to function _ath5k_printk: _ath5k_printk((const struct ath5k_hw *)ah, "\f", "could not register LED %s\n", name) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

Assuming external function ath_regd_get_band_ctl to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 22807: Ignoring parameters passed as varargs to function _ath5k_printk: _ath5k_printk((const struct ath5k_hw *)ah, "\v", "unable to init EEPROM\n") (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

Assuming external function ath_is_49ghz_allowed to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 22844: Ignoring parameters passed as varargs to function _ath5k_printk: _ath5k_printk((const struct ath5k_hw *)ah, "\v", "unable to get device capabilities\n") (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

lines 27175-27176: Ignoring parameters passed as varargs to function _ath5k_printk: _ath5k_printk((const struct ath5k_hw *)ah, "\017", "(%s:%d): need to wait for HW TSF sync\n", "ath5k_beacon_update_timers", 2204) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

lines 27208-27209: Ignoring parameters passed as varargs to function _ath5k_printk: _ath5k_printk((const struct ath5k_hw *)ah, "\017", "(%s:%d): updated timers based on beacon TSF\n", "ath5k_beacon_update_timers", 2235) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

lines 27200-27201: Ignoring parameters passed as varargs to function _ath5k_printk: _ath5k_printk((const struct ath5k_hw *)ah, "\017", "(%s:%d): reset HW TSF and timers\n", "ath5k_beacon_update_timers", 2232) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

lines 27191-27192: Ignoring parameters passed as varargs to function _ath5k_printk: _ath5k_printk((const struct ath5k_hw *)ah, "\017", "(%s:%d): reconfigured timers based on HW TSF\n", "ath5k_beacon_update_timers", 2229) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

lines 27216-27218: Ignoring parameters passed as varargs to function _ath5k_printk: _ath5k_printk((const struct ath5k_hw *)ah, "\017", "(%s:%d): bc_tsf %llx hw_tsf %llx bc_tu %u hw_tu %u nexttbtt %u\n", "ath5k_beacon_update_timers", 2240, bc_tsf, hw_tsf, bc_tu, hw_tu, nexttbtt) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

lines 27224-27226: Ignoring parameters passed as varargs to function _ath5k_printk: _ath5k_printk((const struct ath5k_hw *)ah, "\017", "(%s:%d): intval %u %s %s\n", "ath5k_beacon_update_timers", 2244, intval & 65535U, __CPAchecker_TMP_3, __CPAchecker_TMP_4) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

Assuming external function debug_dma_mapping_error to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 23649: Ignoring function call through function pointer *(ops->mapping_error): tmp___0 = (*(ops->mapping_error))(dev, dma_addr); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 26786: Ignoring parameters passed as varargs to function _ath5k_printk: _ath5k_printk((const struct ath5k_hw *)ah, "\v", "beacon DMA mapping failed\n") (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

Assuming external function ieee80211_get_hdrlen_from_skb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

lines 26813-26815: Ignoring function call through function pointer *(ah->ah_setup_tx_desc): ret = (*(ah->ah_setup_tx_desc))(ah, ds, skb->len, tmp___6, padsize, 3, (unsigned int)((ah->ah_txpower.txp_requested) * 2), __CPAchecker_TMP_9, 1U, 4294967295U, (unsigned int)antenna, flags, 0U, 0U); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 23725: Ignoring function call through function pointer *(ops->alloc): memory = (*(ops->alloc))(dev, size, dma_handle, tmp___1, attrs); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function debug_dma_alloc_coherent to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            576422 (17% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  557523 (97%)
  Because of loop head:            18894 (3%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         5 (0%)
  Times precision was empty:       576164 (100%)
  Times precision was {false}:     38 (0%)
  Times result was cached:         200 (0%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      20 (0%)
  Times result was 'false':        20 (0%)
Number of strengthen sat checks:   0
Number of coverage checks:         453108
  BDD entailment checks:           107140
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       216
Number of predicates discovered:          6
Number of abstraction locations:          6
Max number of predicates per location:    5
Avg number of predicates per location:    1
Total predicates per abstraction:         708
Max number of predicates per abstraction: 5
Avg number of predicates per abstraction: 12.21
Number of irrelevant predicates:          638 (90%)
Number of preds handled by boolean abs:   50 (7%)
  Total number of models for allsat:      78
  Max number of models for allsat:        32
  Avg number of models for allsat:        3.90

Time for post operator:                490.374s
  Time for path formula creation:      488.754s
Time for strengthen operator:            3.666s
Time for prec operator:                 22.941s
  Time for abstraction:                  2.369s (Max:     0.186s, Count: 576422)
    Boolean abstraction:                 0.247s
    Solving time:                        0.231s (Max:     0.029s)
    Model enumeration time:              0.047s
    Time for BDD construction:           0.019s (Max:     0.012s)
Time for merge operator:                56.339s
Time for coverage check:                 0.256s
  Time for BDD entailment checks:        0.196s
Total time for SMT solver (w/o itp):     0.278s

Number of path formula cache hits:   2650058 (69%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:   419.988s

Total number of created targets for pointer analysis: 9570397
   Number of created targets for uf: *(struct_ath_bus_ops)* is 7
   Number of created targets for uf: *signed_char is 18541
   Number of created targets for uf: *enum_nl80211_iftype is 189
   Number of created targets for uf: *(struct_ath5k_desc)* is 6
   Number of created targets for uf: *(struct_pci_dev)* is 7
   Number of created targets for uf: *(unsigned_char)* is 25
   Number of created targets for uf: *(struct_ath5k_txq)* is 16
   Number of created targets for uf: *(unsigned_int)* is 673
   Number of created targets for uf: *signed_short_int is 9601
   Number of created targets for uf: *(struct_ath5k_hw)* is 21
   Number of created targets for uf: *unsigned_long_int is 283
   Number of created targets for uf: *signed_int is 205
   Number of created targets for uf: *unsigned_char is 305065
   Number of created targets for uf: *(Return_type:_[signed_int],_Parameters:_3,_Parameter_1_type:_[(struct_ath5k_hw)*],_Parameter_2_type:_[(struct_ath5k_desc)*],_Parameter_3_type:_[(struct_ath5k_tx_status)*],_VarArgs:_false)* is 7
   Number of created targets for uf: *(struct_list_head)* is 766
   Number of created targets for uf: *(struct_ieee80211_channel)* is 61
   Number of created targets for uf: *(struct_ieee80211_hw)* is 7
   Number of created targets for uf: *enum_ath5k_tx_queue_subtype is 221
   Number of created targets for uf: *enum_ath5k_int is 13
   Number of created targets for uf: *enum_ieee80211_band is 553
   Number of created targets for uf: *enum_ath5k_tx_queue is 3920
   Number of created targets for uf: *unsigned_long_long_int is 6
   Number of created targets for uf: *unsigned_int is 2651
   Number of created targets for uf: *(struct_device)* is 7
   Number of created targets for uf: *(void)* is 13
   Number of created targets for uf: *(struct_ieee80211_rate)* is 19
   Number of created targets for uf: *enum_ath_crypt_caps is 6
   Number of created targets for uf: *(struct_ieee80211_vif)* is 49
   Number of created targets for uf: *(Return_type:_[signed_int],_Parameters:_3,_Parameter_1_type:_[(struct_ath5k_hw)*],_Parameter_2_type:_[(struct_ath5k_desc)*],_Parameter_3_type:_[(struct_ath5k_rx_status)*],_VarArgs:_false)* is 7
   Number of created targets for uf: *(struct_ath5k_chan_pcal_info)* is 289
   Number of created targets for uf: *unsigned_short_int is 3595
   Number of created targets for uf: *enum_ath5k_ani_mode is 178
   Number of created targets for uf: *enum_ath5k_version is 7
   Number of created targets for uf: *enum_ath5k_radio is 7
   Number of created targets for uf: *(Return_type:_[signed_int],_Parameters:_14,_Parameter_1_type:_[(struct_ath5k_hw)*],_Parameter_2_type:_[(struct_ath5k_desc)*],_Parameter_3_type:_[unsigned_int],_Parameter_4_type:_[unsigned_int],_Parameter_5_type:_[signed_int],_Parameter_6_type:_[enum_ath5k_pkt_type],_Parameter_7_type:_[unsigned_int],_Parameter_8_type:_[unsigned_int],_Parameter_9_type:_[unsigned_int],_Parameter_10_type:_[unsigned_int],_Parameter_11_type:_[unsigned_int],_Parameter_12_type:_[unsigned_int],_Parameter_13_type:_[unsigned_int],_Parameter_14_type:_[unsigned_int],_VarArgs:_false)* is 7
   Number of created targets for uf: *_Bool is 223
   Number of created targets for uf: *char is 223


Number of BDD nodes:                               336
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         111 (count: 683664, min: 0, max: 29, avg: 0.00)
Time for BDD node cleanup:                             0.131s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  6.110s
  Time for transition matches:                         3.522s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.000s
Automaton transfers with branching:                0
Automaton transfer successors:                      3340576 (count: 3340576, min: 1, max: 1, avg: 1.00) [1 x 3340576]

CPA algorithm statistics
------------------------
Number of iterations:            2220460
Max size of waitlist:            6511
Average size of waitlist:        3285
Number of computed successors:   2523494
Max successors for one state:    2
Number of times merged:          172984
Number of times stopped:         279914
Number of times breaked:         5

Total time for CPA algorithm:       862.383s (Max:   164.659s)
  Time for choose from waitlist:      1.171s
  Time for precision adjustment:     43.485s
  Time for transfer relation:       741.965s
  Time for merge operator:           59.384s
  Time for stop operator:             3.539s
  Time for adding to reached set:     5.200s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   5
Avg. length of target path (in blocks):                 523 (count: 5, min: 101, max: 106, avg: 104.60)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  22.273s
  Counterexample analysis:                            14.975s (Max:     3.076s, Calls: 5)
    Refinement sat check:                             14.218s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.001s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.009s
  Precision update:                                    0.003s
  ARG update:                                          7.267s

Length of refined path (in blocks):                      60 (count: 5, min: 12, max: 12, avg: 12.00)
Number of affected states:                                5 (count: 5, min: 1, max: 1, avg: 1.00)
Length (states) of path with itp 'true':                 50 (count: 5, min: 10, max: 10, avg: 10.00)
Length (states) of path with itp non-trivial itp:         5 (count: 5, min: 1, max: 1, avg: 1.00)
Length (states) of path with itp 'false':                 5 (count: 5, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 5, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:               0 (count: 5, min: 0, max: 0, avg: 0.00)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                5
Number of successful refinements:     5
Number of failed refinements:         0
Max. size of reached set before ref.: 441589
Max. size of reached set after ref.:  53
Avg. size of reached set before ref.: 398498.00
Avg. size of reached set after ref.:  53.00

Total time for CEGAR algorithm:     886.345s
Time for refinements:                23.954s
Average time for refinement:          4.790s
Max time for refinement:              4.895s

Code Coverage
-----------------------------
  Function coverage:      0.456
  Visited lines:          8550
  Total lines:            16771
  Line coverage:          0.510
  Visited conditions:     2519
  Total conditions:       5606
  Condition coverage:     0.449

CPAchecker general statistics
-----------------------------
Number of program locations:     24588
Number of CFA edges:             29180
Number of relevant variables:    4614
Number of functions:             721
Number of loops:                 149
Size of reached set:             251335
  Number of reached locations:   6826 (28%)
    Avg states per location:     36
    Max states per location:     9471 (at node N79)
  Number of reached functions:   329 (46%)
  Number of partitions:          251334
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N23795 (before line 36418), Function main called from node N23730, stack depth 1 [5cf69333], stack [main]])
  Number of target states:       0
  Size of final wait list        4466

Time for analysis setup:         13.978s
  Time for loading CPAs:          1.409s
  Time for loading parser:        0.753s
  Time for CFA construction:     11.625s
    Time for parsing file(s):     1.984s
    Time for AST to CFA:          4.250s
    Time for CFA sanity check:    1.062s
    Time for post-processing:     3.971s
      Time for var class.:        2.198s
Time for Analysis:              886.345s
CPU time for analysis:          886.290s
Total time for CPAchecker:      900.328s
Total CPU time for CPAchecker:  900.230s
Time for statistics:              3.532s

Time for Garbage Collector:      51.937s (in 424 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:               1531MB (  1460 MiB) max;    706MB (   674 MiB) avg;   1547MB (  1475 MiB) peak
Used non-heap memory:             48MB (    46 MiB) max;     40MB (    38 MiB) avg;     48MB (    46 MiB) peak
Allocated heap memory:          1555MB (  1483 MiB) max;   1040MB (   992 MiB) avg
Allocated non-heap memory:        50MB (    48 MiB) max;     50MB (    47 MiB) avg
Total process virtual memory:   8241MB (  7860 MiB) max;   8204MB (  7824 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
