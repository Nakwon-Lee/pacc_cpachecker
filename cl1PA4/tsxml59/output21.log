scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.16-rc1/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--rocket.ko-entry_point_true-unreach-call.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_nau5bku_/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 3955: Dead code detected: __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

line 3958: Dead code detected: __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

line 3961: Dead code detected: __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (8UL) {
  case 1UL:
  __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& current_task));
  goto ldv_3067;
  case 2UL:
  __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_3067;
  case 4UL:
  __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_3067;
  case 8UL:
  __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_3067;
  default:
  __bad_percpu_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 3980: Function pointer *(pv_cpu_ops.io_delay) with type void (*)() is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

line 7896: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___0 = ldv_zalloc(1064UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 7904: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___4 = ldv_zalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_setup_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_release_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_disconnect_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_activate_1 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_shutdown_1 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_destruct_1 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 3980: Ignoring function call through function pointer *(pv_cpu_ops.io_delay): (*(pv_cpu_ops.io_delay))(); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function del_timer_sync to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tty_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function put_tty_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tty_unregister_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tty_port_destroy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __release_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_final_state to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __tty_alloc_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __request_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tty_set_operations to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tty_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 7851: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: rocket_port_ops_group1 = ldv_zalloc(1064UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function strcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tty_port_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __init_waitqueue_head to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __raw_spin_lock_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __mutex_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tty_port_register_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            8731 (24% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  8431 (97%)
  Because of loop head:            293 (3%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         7 (0%)
  Times precision was empty:       6320 (72%)
  Times precision was {false}:     235 (3%)
  Times result was cached:         2088 (24%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      88 (1%)
  Times result was 'false':        79 (1%)
Number of strengthen sat checks:   0
Number of coverage checks:         3399
  BDD entailment checks:           565
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       82
Number of predicates discovered:          4
Number of abstraction locations:          63
Max number of predicates per location:    3
Avg number of predicates per location:    1
Total predicates per abstraction:         2588
Max number of predicates per abstraction: 3
Avg number of predicates per abstraction: 8.01
Number of irrelevant predicates:          2253 (87%)
Number of preds handled by boolean abs:   115 (4%)
  Total number of models for allsat:      93
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.06

Time for post operator:                  6.085s
  Time for path formula creation:        5.933s
Time for strengthen operator:            0.119s
Time for prec operator:                 10.287s
  Time for abstraction:                  9.876s (Max:     0.698s, Count: 8731)
    Boolean abstraction:                 1.354s
    Solving time:                        8.127s (Max:     0.654s)
    Model enumeration time:              0.045s
    Time for BDD construction:           0.029s (Max:     0.009s)
Time for merge operator:                 0.465s
Time for coverage check:                 0.071s
  Time for BDD entailment checks:        0.069s
Total time for SMT solver (w/o itp):     8.172s

Number of path formula cache hits:   22720 (52%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     5.504s

Total number of created targets for pointer analysis: 46135
   Number of created targets for uf: *signed_int is 917
   Number of created targets for uf: *unsigned_char is 745
   Number of created targets for uf: *(unsigned_int)* is 57
   Number of created targets for uf: *(struct_r_port)* is 141
   Number of created targets for uf: *unsigned_int is 244
   Number of created targets for uf: *unsigned_long_int is 400


Number of BDD nodes:                               222
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         228 (count: 8651, min: 0, max: 53, avg: 0.03)
Time for BDD node cleanup:                             0.013s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.338s
Automaton transfers with branching:                0
Automaton transfer successors:                        36751 (count: 36751, min: 1, max: 1, avg: 1.00) [1 x 36751]

CPA algorithm statistics
------------------------
Number of iterations:            26968
Max size of waitlist:            436
Average size of waitlist:        221
Number of computed successors:   30924
Max successors for one state:    2
Number of times merged:          1417
Number of times stopped:         1828
Number of times breaked:         7

Total time for CPA algorithm:        20.452s (Max:     4.488s)
  Time for choose from waitlist:      0.147s
  Time for precision adjustment:     10.957s
  Time for transfer relation:         7.763s
  Time for merge operator:            0.574s
  Time for stop operator:             0.262s
  Time for adding to reached set:     0.222s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   7
Avg. length of target path (in blocks):                 754 (count: 7, min: 79, max: 132, avg: 107.71)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   3.187s
  Counterexample analysis:                             2.923s (Max:     0.608s, Calls: 7)
    Refinement sat check:                              2.564s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.001s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.041s
  Precision update:                                    0.006s
  ARG update:                                          0.192s

Length of refined path (in blocks):                     464 (count: 7, min: 10, max: 126, avg: 66.29)
Number of affected states:                              418 (count: 7, min: 1, max: 125, avg: 59.71)
Length (states) of path with itp 'true':                 39 (count: 7, min: 0, max: 23, avg: 5.57)
Length (states) of path with itp non-trivial itp:       418 (count: 7, min: 1, max: 125, avg: 59.71)
Length (states) of path with itp 'false':                 7 (count: 7, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 7, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:             411 (count: 7, min: 0, max: 124, avg: 58.71)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                7
Number of successful refinements:     7
Number of failed refinements:         0
Max. size of reached set before ref.: 4746
Max. size of reached set after ref.:  659
Avg. size of reached set before ref.: 3998.57
Avg. size of reached set after ref.:  108.14

Total time for CEGAR algorithm:      23.768s
Time for refinements:                 3.314s
Average time for refinement:          0.473s
Max time for refinement:              0.645s

Code Coverage
-----------------------------
  Function coverage:      0.306
  Visited lines:          1272
  Total lines:            3442
  Line coverage:          0.370
  Visited conditions:     316
  Total conditions:       986
  Condition coverage:     0.320

CPAchecker general statistics
-----------------------------
Number of program locations:     4867
Number of CFA edges:             5681
Number of relevant variables:    563
Number of functions:             124
Number of loops:                 32
Size of reached set:             1785
  Number of reached locations:   604 (12%)
    Avg states per location:     2
    Max states per location:     16 (at node N235)
  Number of reached functions:   38 (31%)
  Number of partitions:          1781
    Avg size of partitions:      1
    Max size of partitions:      4 (with key [N3614 (before line 7931), Function main called from node N3541, stack depth 1 [17461db], stack [main]])
  Number of target states:       0
  Size of final wait list        276

Time for analysis setup:          6.472s
  Time for loading CPAs:          1.092s
  Time for loading parser:        0.743s
  Time for CFA construction:      4.486s
    Time for parsing file(s):     1.051s
    Time for AST to CFA:          1.552s
    Time for CFA sanity check:    0.390s
    Time for post-processing:     1.330s
      Time for var class.:        0.610s
Time for Analysis:               23.768s
CPU time for analysis:           23.770s
Total time for CPAchecker:       30.252s
Total CPU time for CPAchecker:   30.240s
Time for statistics:              0.134s

Time for Garbage Collector:       0.436s (in 28 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 76MB (    72 MiB) max;     51MB (    49 MiB) avg;     79MB (    76 MiB) peak
Used non-heap memory:             40MB (    38 MiB) max;     35MB (    33 MiB) avg;     40MB (    38 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        42MB (    40 MiB) max;     36MB (    35 MiB) avg
Total process virtual memory:   8085MB (  7711 MiB) max;   8071MB (  7697 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
