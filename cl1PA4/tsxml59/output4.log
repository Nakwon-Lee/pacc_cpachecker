scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.16-rc1/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--rocket.ko-entry_point_true-unreach-call.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_awrvfvxt/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 3955: Dead code detected: __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

line 3958: Dead code detected: __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

line 3961: Dead code detected: __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (8UL) {
  case 1UL:
  __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& current_task));
  goto ldv_3067;
  case 2UL:
  __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_3067;
  case 4UL:
  __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_3067;
  case 8UL:
  __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_3067;
  default:
  __bad_percpu_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 3980: Function pointer *(pv_cpu_ops.io_delay) with type void (*)() is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

line 7896: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___0 = ldv_zalloc(1064UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 7904: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___4 = ldv_zalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_setup_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_release_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_disconnect_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_activate_1 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_shutdown_1 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_destruct_1 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 3980: Ignoring function call through function pointer *(pv_cpu_ops.io_delay): (*(pv_cpu_ops.io_delay))(); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function del_timer_sync to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tty_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function put_tty_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tty_unregister_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tty_port_destroy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __release_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __tty_alloc_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __request_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tty_set_operations to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tty_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tty_port_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __init_waitqueue_head to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __raw_spin_lock_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __mutex_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tty_port_register_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function msleep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_get_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_match_id to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_enable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _dev_info to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            13925 (27% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  13485 (97%)
  Because of loop head:            423 (3%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         17 (0%)
  Times precision was empty:       3721 (27%)
  Times precision was {false}:     135 (1%)
  Times result was cached:         9921 (71%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      148 (1%)
  Times result was 'false':        31 (0%)
Number of strengthen sat checks:   0
Number of coverage checks:         3483
  BDD entailment checks:           719
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       82
Number of predicates discovered:          4
Number of abstraction locations:          138
Max number of predicates per location:    3
Avg number of predicates per location:    1
Total predicates per abstraction:         15421
Max number of predicates per abstraction: 3
Avg number of predicates per abstraction: 54.49
Number of irrelevant predicates:          8718 (57%)
Number of preds handled by boolean abs:   162 (1%)
  Total number of models for allsat:      147
  Max number of models for allsat:        2
  Avg number of models for allsat:        0.99

Time for post operator:                  3.311s
  Time for path formula creation:        3.228s
Time for strengthen operator:            0.161s
Time for prec operator:                 10.066s
  Time for abstraction:                  9.638s (Max:     0.838s, Count: 13925)
    Boolean abstraction:                 4.172s
    Solving time:                        6.418s (Max:     0.864s)
    Model enumeration time:              0.119s
    Time for BDD construction:           0.023s (Max:     0.005s)
Time for merge operator:                 0.294s
Time for coverage check:                 0.055s
  Time for BDD entailment checks:        0.054s
Total time for SMT solver (w/o itp):     6.543s

Number of path formula cache hits:   60017 (91%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     2.795s

Total number of created targets for pointer analysis: 15926
   Number of created targets for uf: *signed_int is 131
   Number of created targets for uf: *unsigned_char is 181
   Number of created targets for uf: *(unsigned_int)* is 9
   Number of created targets for uf: *(struct_r_port)* is 81
   Number of created targets for uf: *unsigned_int is 30
   Number of created targets for uf: *unsigned_long_int is 58


Number of BDD nodes:                               207
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         310 (count: 6014, min: 0, max: 68, avg: 0.05)
Time for BDD node cleanup:                             0.008s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.350s
Automaton transfers with branching:                0
Automaton transfer successors:                        51844 (count: 51844, min: 1, max: 1, avg: 1.00) [1 x 51844]

CPA algorithm statistics
------------------------
Number of iterations:            38542
Max size of waitlist:            115
Average size of waitlist:        85
Number of computed successors:   42032
Max successors for one state:    2
Number of times merged:          1382
Number of times stopped:         1962
Number of times breaked:         17

Total time for CPA algorithm:        17.777s (Max:     2.702s)
  Time for choose from waitlist:      0.135s
  Time for precision adjustment:     10.858s
  Time for transfer relation:         5.260s
  Time for merge operator:            0.395s
  Time for stop operator:             0.276s
  Time for adding to reached set:     0.179s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   17
Avg. length of target path (in blocks):                2279 (count: 17, min: 58, max: 315, avg: 134.06)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   5.710s
  Counterexample analysis:                             5.300s (Max:     0.668s, Calls: 17)
    Refinement sat check:                              4.392s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.015s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.053s
  Precision update:                                    0.034s
  ARG update:                                          0.265s

Length of refined path (in blocks):                    2210 (count: 17, min: 57, max: 314, avg: 130.00)
Number of affected states:                             2066 (count: 17, min: 12, max: 313, avg: 121.53)
Length (states) of path with itp 'true':                127 (count: 17, min: 0, max: 83, avg: 7.47)
Length (states) of path with itp non-trivial itp:      2066 (count: 17, min: 12, max: 313, avg: 121.53)
Length (states) of path with itp 'false':                17 (count: 17, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 17, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:            2049 (count: 17, min: 11, max: 312, avg: 120.53)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                17
Number of successful refinements:     17
Number of failed refinements:         0
Max. size of reached set before ref.: 3425
Max. size of reached set after ref.:  2421
Avg. size of reached set before ref.: 2393.82
Avg. size of reached set after ref.:  214.76

Total time for CEGAR algorithm:      23.693s
Time for refinements:                 5.900s
Average time for refinement:          0.347s
Max time for refinement:              0.713s

Code Coverage
-----------------------------
  Function coverage:      0.508
  Visited lines:          1941
  Total lines:            3442
  Line coverage:          0.564
  Visited conditions:     470
  Total conditions:       986
  Condition coverage:     0.477

CPAchecker general statistics
-----------------------------
Number of program locations:     4867
Number of CFA edges:             5681
Number of relevant variables:    563
Number of functions:             124
Number of loops:                 32
Size of reached set:             2995
  Number of reached locations:   1107 (23%)
    Avg states per location:     2
    Max states per location:     90 (at node N51)
  Number of reached functions:   63 (51%)
  Number of partitions:          2992
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N3068 (before line 7382), Function sInitController called from node N2740, stack depth 4 [2781feae], stack [main, rp_init, init_ISA, sInitController]])
  Number of target states:       0
  Size of final wait list        95

Time for analysis setup:          6.593s
  Time for loading CPAs:          1.131s
  Time for loading parser:        0.680s
  Time for CFA construction:      4.612s
    Time for parsing file(s):     1.132s
    Time for AST to CFA:          1.596s
    Time for CFA sanity check:    0.375s
    Time for post-processing:     1.306s
      Time for var class.:        0.647s
Time for Analysis:               23.693s
CPU time for analysis:           23.690s
Total time for CPAchecker:       30.290s
Total CPU time for CPAchecker:   30.270s
Time for statistics:              0.146s

Time for Garbage Collector:       0.385s (in 34 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 70MB (    66 MiB) max;     48MB (    46 MiB) avg;     73MB (    69 MiB) peak
Used non-heap memory:             39MB (    38 MiB) max;     35MB (    33 MiB) avg;     40MB (    38 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        41MB (    39 MiB) max;     36MB (    35 MiB) avg
Total process virtual memory:   8085MB (  7711 MiB) max;   8071MB (  7697 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
