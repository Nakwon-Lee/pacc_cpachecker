scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.16-rc1/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--rocket.ko-entry_point_true-unreach-call.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_fdx8x3d6/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 3955: Dead code detected: __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

line 3958: Dead code detected: __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

line 3961: Dead code detected: __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (8UL) {
  case 1UL:
  __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& current_task));
  goto ldv_3067;
  case 2UL:
  __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_3067;
  case 4UL:
  __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_3067;
  case 8UL:
  __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_3067;
  default:
  __bad_percpu_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 3980: Function pointer *(pv_cpu_ops.io_delay) with type void (*)() is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

line 7896: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___0 = ldv_zalloc(1064UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 7904: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___4 = ldv_zalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_setup_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_release_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_disconnect_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_activate_1 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_shutdown_1 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_destruct_1 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 3980: Ignoring function call through function pointer *(pv_cpu_ops.io_delay): (*(pv_cpu_ops.io_delay))(); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tty_wakeup to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock_nested to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function del_timer_sync to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tty_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function put_tty_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tty_unregister_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tty_port_destroy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __release_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 4398: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size(from, 0); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function __builtin_object_size to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function might_fault to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _copy_to_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __copy_to_user_overflow to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function capable to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 4373: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((const void *)to, 0); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function _copy_from_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __copy_from_user_overflow to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tty_port_hangup to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __wake_up to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function msleep_interruptible to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_final_state to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tty_port_close_start to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tty_ldisc_flush to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_pages to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tty_port_tty_set to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function complete_all to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tty_port_tty_hangup to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mod_timer to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tty_port_tty_get to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tty_kref_put to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tty_prepare_flip_string to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tty_flip_buffer_push to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __tty_alloc_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __request_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tty_set_operations to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tty_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_get_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 7851: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: rocket_port_ops_group1 = ldv_zalloc(1064UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function mutex_lock_interruptible_nested to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __get_free_pages to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function msleep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tty_port_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __init_waitqueue_head to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __raw_spin_lock_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __mutex_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tty_port_register_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tty_termios_baud_rate to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tty_encode_baud_rate to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_match_id to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_enable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _dev_info to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            407637 (30% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  403159 (99%)
  Because of loop head:            4451 (1%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         27 (0%)
  Times precision was empty:       126887 (31%)
  Times precision was {false}:     536 (0%)
  Times result was cached:         279982 (69%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      232 (0%)
  Times result was 'false':        218 (0%)
Number of strengthen sat checks:   0
Number of coverage checks:         87398
  BDD entailment checks:           28260
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       82
Number of predicates discovered:          4
Number of abstraction locations:          167
Max number of predicates per location:    3
Avg number of predicates per location:    1
Total predicates per abstraction:         366550
Max number of predicates per abstraction: 3
Avg number of predicates per abstraction: 477.28
Number of irrelevant predicates:          351710 (96%)
Number of preds handled by boolean abs:   243 (0%)
  Total number of models for allsat:      231
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.00

Time for post operator:                 14.879s
  Time for path formula creation:       14.218s
Time for strengthen operator:            1.337s
Time for prec operator:                828.636s
  Time for abstraction:                823.471s (Max:   467.194s, Count: 407637)
    Boolean abstraction:               471.996s
    Solving time:                      778.463s (Max:   460.823s)
    Model enumeration time:              6.488s
    Time for BDD construction:           0.025s (Max:     0.009s)
Time for merge operator:                 0.977s
Time for coverage check:                 0.098s
  Time for BDD entailment checks:        0.076s
Total time for SMT solver (w/o itp):   784.951s

Number of path formula cache hits:   1778887 (98%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     7.058s

Total number of created targets for pointer analysis: 82942
   Number of created targets for uf: *signed_int is 651
   Number of created targets for uf: *unsigned_char is 271
   Number of created targets for uf: *(unsigned_int)* is 17
   Number of created targets for uf: *(struct_r_port)* is 101
   Number of created targets for uf: *unsigned_int is 59
   Number of created targets for uf: *unsigned_long_int is 115


Number of BDD nodes:                               207
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         487 (count: 159236, min: 0, max: 52, avg: 0.00)
Time for BDD node cleanup:                             0.052s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  2.793s
  Time for transition matches:                         1.332s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.000s
Automaton transfers with branching:                0
Automaton transfer successors:                      1378217 (count: 1378217, min: 1, max: 1, avg: 1.00) [1 x 1378217]

CPA algorithm statistics
------------------------
Number of iterations:            1085400
Max size of waitlist:            112
Average size of waitlist:        85
Number of computed successors:   1144778
Max successors for one state:    2
Number of times merged:          29569
Number of times stopped:         56802
Number of times breaked:         27

Total time for CPA algorithm:       883.568s (Max:   476.151s)
  Time for choose from waitlist:      0.526s
  Time for precision adjustment:    839.819s
  Time for transfer relation:        33.426s
  Time for merge operator:            1.602s
  Time for stop operator:             1.590s
  Time for adding to reached set:     2.495s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   27
Avg. length of target path (in blocks):                3378 (count: 27, min: 14, max: 315, avg: 125.11)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   9.560s
  Counterexample analysis:                             6.989s (Max:     0.474s, Calls: 27)
    Refinement sat check:                              5.868s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.004s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.084s
  Precision update:                                    0.031s
  ARG update:                                          2.398s

Length of refined path (in blocks):                    3315 (count: 27, min: 10, max: 314, avg: 122.78)
Number of affected states:                             3236 (count: 27, min: 1, max: 313, avg: 119.85)
Length (states) of path with itp 'true':                 52 (count: 27, min: 0, max: 44, avg: 1.93)
Length (states) of path with itp non-trivial itp:      3236 (count: 27, min: 1, max: 313, avg: 119.85)
Length (states) of path with itp 'false':                27 (count: 27, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 27, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:            3209 (count: 27, min: 0, max: 312, avg: 118.85)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                27
Number of successful refinements:     27
Number of failed refinements:         0
Max. size of reached set before ref.: 89349
Max. size of reached set after ref.:  21392
Avg. size of reached set before ref.: 37754.00
Avg. size of reached set after ref.:  796.67

Total time for CEGAR algorithm:     893.910s
Time for refinements:                10.313s
Average time for refinement:          0.381s
Max time for refinement:              0.597s

Code Coverage
-----------------------------
  Function coverage:      0.887
  Visited lines:          3260
  Total lines:            3442
  Line coverage:          0.947
  Visited conditions:     938
  Total conditions:       986
  Condition coverage:     0.951

CPAchecker general statistics
-----------------------------
Number of program locations:     4867
Number of CFA edges:             5681
Number of relevant variables:    563
Number of functions:             124
Number of loops:                 32
Size of reached set:             89910
  Number of reached locations:   2612 (54%)
    Avg states per location:     34
    Max states per location:     2798 (at node N51)
  Number of reached functions:   110 (89%)
  Number of partitions:          89905
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N3614 (before line 7931), Function main called from node N3541, stack depth 1 [43a65cd8], stack [main]])
  Number of target states:       0
  Size of final wait list        45

Time for analysis setup:          6.421s
  Time for loading CPAs:          1.079s
  Time for loading parser:        0.665s
  Time for CFA construction:      4.545s
    Time for parsing file(s):     1.173s
    Time for AST to CFA:          1.678s
    Time for CFA sanity check:    0.338s
    Time for post-processing:     1.175s
      Time for var class.:        0.650s
Time for Analysis:              893.910s
CPU time for analysis:          893.810s
Total time for CPAchecker:      900.336s
Total CPU time for CPAchecker:  900.230s
Time for statistics:              1.047s

Time for Garbage Collector:      10.956s (in 515 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                181MB (   172 MiB) max;    103MB (    98 MiB) avg;    184MB (   176 MiB) peak
Used non-heap memory:             39MB (    37 MiB) max;     38MB (    36 MiB) avg;     40MB (    38 MiB) peak
Allocated heap memory:           184MB (   175 MiB) max;    179MB (   170 MiB) avg
Allocated non-heap memory:        41MB (    39 MiB) max;     41MB (    39 MiB) avg
Total process virtual memory:   8226MB (  7844 MiB) max;   8195MB (  7815 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
