scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.16-rc1/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--tty--rocket.ko-entry_point_true-unreach-call.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_afeg2q8x/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 3955: Dead code detected: __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

line 3958: Dead code detected: __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

line 3961: Dead code detected: __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (8UL) {
  case 1UL:
  __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& current_task));
  goto ldv_3067;
  case 2UL:
  __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_3067;
  case 4UL:
  __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_3067;
  case 8UL:
  __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_3067;
  default:
  __bad_percpu_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 3980: Function pointer *(pv_cpu_ops.io_delay) with type void (*)() is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

line 7896: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___0 = ldv_zalloc(1064UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 7904: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___4 = ldv_zalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_setup_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_release_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_disconnect_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_activate_1 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_shutdown_1 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_destruct_1 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function del_timer_sync to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tty_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function capable to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function put_tty_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tty_unregister_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tty_port_destroy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __release_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_final_state to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 4373: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((const void *)to, 0); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function __builtin_object_size to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function might_fault to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 4398: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size(from, 0); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function mutex_lock_nested to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __tty_alloc_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tty_port_close_start to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock_interruptible_nested to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tty_wakeup to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            25107 (15% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  23467 (93%)
  Because of loop head:            1631 (6%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         9 (0%)
  Times precision was empty:       24032 (96%)
  Times precision was {false}:     49 (0%)
  Times result was cached:         998 (4%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      28 (0%)
  Times result was 'false':        181 (1%)
Number of strengthen sat checks:   0
Number of coverage checks:         20604
  BDD entailment checks:           4642
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       82
Number of predicates discovered:          2
Number of abstraction locations:          10
Max number of predicates per location:    1
Avg number of predicates per location:    1
Total predicates per abstraction:         1075
Max number of predicates per abstraction: 1
Avg number of predicates per abstraction: 13.96
Number of irrelevant predicates:          571 (53%)
Number of preds handled by boolean abs:   28 (3%)
  Total number of models for allsat:      30
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.07

Time for post operator:                  9.937s
  Time for path formula creation:        9.679s
Time for strengthen operator:            0.376s
Time for prec operator:                  2.191s
  Time for abstraction:                  1.136s (Max:     0.029s, Count: 25107)
    Boolean abstraction:                 0.082s
    Solving time:                        0.065s (Max:     0.014s)
    Model enumeration time:              0.004s
    Time for BDD construction:           0.015s (Max:     0.009s)
Time for merge operator:                 0.692s
Time for coverage check:                 0.097s
  Time for BDD entailment checks:        0.092s
Total time for SMT solver (w/o itp):     0.069s

Number of path formula cache hits:   164240 (84%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     8.377s

Total number of created targets for pointer analysis: 44568
   Number of created targets for uf: *signed_int is 4681
   Number of created targets for uf: *unsigned_char is 1119
   Number of created targets for uf: *unsigned_int is 610
   Number of created targets for uf: *unsigned_long_int is 2629


Number of BDD nodes:                               202
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                          62 (count: 29116, min: 0, max: 23, avg: 0.00)
Time for BDD node cleanup:                             0.030s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.847s
  Time for transition matches:                         0.407s
  Time for transition assertions:                      0.001s
  Time for transition actions:                         0.000s
Automaton transfers with branching:                0
Automaton transfer successors:                       167667 (count: 167667, min: 1, max: 1, avg: 1.00) [1 x 167667]

CPA algorithm statistics
------------------------
Number of iterations:            98064
Max size of waitlist:            807
Average size of waitlist:        553
Number of computed successors:   115593
Max successors for one state:    2
Number of times merged:          7981
Number of times stopped:         12111
Number of times breaked:         9

Total time for CPA algorithm:        22.493s (Max:     5.697s)
  Time for choose from waitlist:      0.292s
  Time for precision adjustment:      4.095s
  Time for transfer relation:        14.439s
  Time for merge operator:            1.176s
  Time for stop operator:             0.547s
  Time for adding to reached set:     0.593s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   9
Avg. length of target path (in blocks):                 158 (count: 9, min: 14, max: 19, avg: 17.56)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.910s
  Counterexample analysis:                             0.353s (Max:     0.059s, Calls: 9)
    Refinement sat check:                              0.295s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.006s
  Precision update:                                    0.009s
  ARG update:                                          0.528s

Length of refined path (in blocks):                      94 (count: 9, min: 10, max: 11, avg: 10.44)
Number of affected states:                                5 (count: 9, min: 0, max: 1, avg: 0.56)
Length (states) of path with itp 'true':                 80 (count: 9, min: 8, max: 10, avg: 8.89)
Length (states) of path with itp non-trivial itp:         5 (count: 9, min: 0, max: 1, avg: 0.56)
Length (states) of path with itp 'false':                 9 (count: 9, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 9, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:               0 (count: 9, min: 0, max: 0, avg: 0.00)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                9
Number of successful refinements:     9
Number of failed refinements:         0
Max. size of reached set before ref.: 15293
Max. size of reached set after ref.:  8329
Avg. size of reached set before ref.: 14238.33
Avg. size of reached set after ref.:  2765.11

Total time for CEGAR algorithm:      23.768s
Time for refinements:                 1.230s
Average time for refinement:          0.136s
Max time for refinement:              0.248s

Code Coverage
-----------------------------
  Function coverage:      0.016
  Visited lines:          819
  Total lines:            3442
  Line coverage:          0.238
  Visited conditions:     4
  Total conditions:       986
  Condition coverage:     0.004

CPAchecker general statistics
-----------------------------
Number of program locations:     4867
Number of CFA edges:             5681
Number of relevant variables:    563
Number of functions:             124
Number of loops:                 32
Size of reached set:             43
  Number of reached locations:   19 (0%)
    Avg states per location:     2
    Max states per location:     4 (at node N196)
  Number of reached functions:   2 (2%)
  Number of partitions:          43
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0
  Size of final wait list        1

Time for analysis setup:          6.494s
  Time for loading CPAs:          0.942s
  Time for loading parser:        0.681s
  Time for CFA construction:      4.724s
    Time for parsing file(s):     1.245s
    Time for AST to CFA:          1.687s
    Time for CFA sanity check:    0.317s
    Time for post-processing:     1.286s
      Time for var class.:        0.759s
Time for Analysis:               23.768s
CPU time for analysis:           23.770s
Total time for CPAchecker:       30.270s
Total CPU time for CPAchecker:   30.250s
Time for statistics:              0.085s

Time for Garbage Collector:       1.084s (in 50 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                118MB (   112 MiB) max;     62MB (    59 MiB) avg;    124MB (   119 MiB) peak
Used non-heap memory:             39MB (    38 MiB) max;     34MB (    33 MiB) avg;     40MB (    38 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        41MB (    39 MiB) max;     36MB (    35 MiB) avg
Total process virtual memory:   8087MB (  7712 MiB) max;   8072MB (  7698 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
