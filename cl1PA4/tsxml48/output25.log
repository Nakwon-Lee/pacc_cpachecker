scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.16-rc1/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--usb--serial--sierra.ko-entry_point_true-unreach-call.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_voa52c3j/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

line 5943: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___5 = ldv_zalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_detach_1 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_dev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_set_interface to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_autopm_get_interface to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_control_msg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_autopm_put_interface to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_kill_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_kill_anchored_urbs to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_get_from_anchor to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_anchor_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_autopm_get_interface_async to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_free_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_autopm_put_interface_async to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_autopm_get_interface_no_resume to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_serial_deregister_drivers to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_serial_register_drivers to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_final_state to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __raw_spin_lock_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __init_waitqueue_head to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            43700 (18% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  41860 (96%)
  Because of loop head:            1756 (4%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         84 (0%)
  Times precision was empty:       25855 (59%)
  Times precision was {false}:     677 (2%)
  Times result was cached:         17020 (39%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      148 (0%)
  Times result was 'false':        5114 (12%)
Number of strengthen sat checks:   0
Number of coverage checks:         32406
  BDD entailment checks:           5862
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       42
Number of predicates discovered:          4
Number of abstraction locations:          90
Max number of predicates per location:    3
Avg number of predicates per location:    1
Total predicates per abstraction:         21717
Max number of predicates per abstraction: 3
Avg number of predicates per abstraction: 26.32
Number of irrelevant predicates:          17237 (79%)
Number of preds handled by boolean abs:   184 (1%)
  Total number of models for allsat:      153
  Max number of models for allsat:        3
  Avg number of models for allsat:        1.03

Time for post operator:                  5.224s
  Time for path formula creation:        5.002s
Time for strengthen operator:            0.410s
Time for prec operator:                  5.351s
  Time for abstraction:                  4.456s (Max:     0.018s, Count: 43700)
    Boolean abstraction:                 0.192s
    Solving time:                        0.347s (Max:     0.014s)
    Model enumeration time:              0.010s
    Time for BDD construction:           0.017s (Max:     0.006s)
Time for merge operator:                 0.327s
Time for coverage check:                 0.075s
  Time for BDD entailment checks:        0.067s
Total time for SMT solver (w/o itp):     0.357s

Number of path formula cache hits:   265156 (92%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     3.875s

Total number of created targets for pointer analysis: 136
   Number of created targets for uf: *(void)* is 25
   Number of created targets for uf: *signed_int is 4
   Number of created targets for uf: *(struct_urb)* is 2
   Number of created targets for uf: *unsigned_int is 4
   Number of created targets for uf: *unsigned_long_int is 22


Number of BDD nodes:                               219
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         322 (count: 37202, min: 0, max: 61, avg: 0.01)
Time for BDD node cleanup:                             0.008s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.839s
  Time for transition matches:                         0.406s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.001s
Automaton transfers with branching:                0
Automaton transfer successors:                       241874 (count: 241874, min: 1, max: 1, avg: 1.00) [1 x 241874]

CPA algorithm statistics
------------------------
Number of iterations:            164361
Max size of waitlist:            121
Average size of waitlist:        50
Number of computed successors:   191387
Max successors for one state:    2
Number of times merged:          13272
Number of times stopped:         18643
Number of times breaked:         84

Total time for CPA algorithm:        21.832s (Max:     1.636s)
  Time for choose from waitlist:      0.230s
  Time for precision adjustment:      7.847s
  Time for transfer relation:        10.368s
  Time for merge operator:            0.793s
  Time for stop operator:             0.510s
  Time for adding to reached set:     0.692s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   84
Avg. length of target path (in blocks):                2991 (count: 84, min: 12, max: 54, avg: 35.61)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   2.257s
  Counterexample analysis:                             1.451s (Max:     0.035s, Calls: 84)
    Refinement sat check:                              1.008s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.001s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.068s
  Precision update:                                    0.065s
  ARG update:                                          0.614s

Length of refined path (in blocks):                    2651 (count: 84, min: 8, max: 53, avg: 31.56)
Number of affected states:                             1052 (count: 84, min: 1, max: 52, avg: 12.52)
Length (states) of path with itp 'true':               1515 (count: 84, min: 0, max: 27, avg: 18.04)
Length (states) of path with itp non-trivial itp:      1052 (count: 84, min: 1, max: 52, avg: 12.52)
Length (states) of path with itp 'false':                84 (count: 84, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 84, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:             968 (count: 84, min: 0, max: 51, avg: 11.52)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                84
Number of successful refinements:     84
Number of failed refinements:         0
Max. size of reached set before ref.: 6959
Max. size of reached set after ref.:  5085
Avg. size of reached set before ref.: 3584.56
Avg. size of reached set after ref.:  1612.79

Total time for CEGAR algorithm:      24.683s
Time for refinements:                 2.680s
Average time for refinement:          0.031s
Max time for refinement:              0.098s

Code Coverage
-----------------------------
  Function coverage:      0.477
  Visited lines:          1257
  Total lines:            2049
  Line coverage:          0.613
  Visited conditions:     278
  Total conditions:       450
  Condition coverage:     0.618

CPAchecker general statistics
-----------------------------
Number of program locations:     2767
Number of CFA edges:             3132
Number of relevant variables:    374
Number of functions:             88
Number of loops:                 13
Size of reached set:             2000
  Number of reached locations:   652 (24%)
    Avg states per location:     3
    Max states per location:     16 (at node N118)
  Number of reached functions:   42 (48%)
  Number of partitions:          1997
    Avg size of partitions:      1
    Max size of partitions:      3 (with key [N1491 (before line 5951), Function main called from node N1452, stack depth 1 [2b4786dd], stack [main]])
  Number of target states:       0
  Size of final wait list        68

Time for analysis setup:          5.543s
  Time for loading CPAs:          0.954s
  Time for loading parser:        0.661s
  Time for CFA construction:      3.746s
    Time for parsing file(s):     1.115s
    Time for AST to CFA:          1.180s
    Time for CFA sanity check:    0.260s
    Time for post-processing:     1.006s
      Time for var class.:        0.430s
Time for Analysis:               24.683s
CPU time for analysis:           24.670s
Total time for CPAchecker:       30.231s
Total CPU time for CPAchecker:   30.210s
Time for statistics:              0.132s

Time for Garbage Collector:       0.796s (in 70 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 86MB (    82 MiB) max;     52MB (    50 MiB) avg;     88MB (    84 MiB) peak
Used non-heap memory:             39MB (    37 MiB) max;     34MB (    33 MiB) avg;     39MB (    37 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        41MB (    39 MiB) max;     36MB (    34 MiB) avg
Total process virtual memory:   8086MB (  7711 MiB) max;   8073MB (  7699 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
