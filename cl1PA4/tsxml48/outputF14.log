scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.16-rc1/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--usb--serial--sierra.ko-entry_point_true-unreach-call.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_943ivns2/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

line 5943: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___5 = ldv_zalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_detach_1 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_serial_register_drivers to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_final_state to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_serial_deregister_drivers to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_dev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_set_interface to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __raw_spin_lock_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __init_waitqueue_head to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tty_port_tty_hangup to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_clear_halt to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_alloc_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_autopm_get_interface to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_control_msg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_autopm_put_interface to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_autopm_get_interface_async to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_submit_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_get_from_anchor to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_anchor_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_free_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_autopm_put_interface_async to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_kill_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_kill_anchored_urbs to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_autopm_get_interface_no_resume to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            1450063 (18% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  1382956 (95%)
  Because of loop head:            63703 (4%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         3404 (0%)
  Times precision was empty:       181143 (12%)
  Times precision was {false}:     13367 (1%)
  Times result was cached:         1232515 (85%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      23038 (2%)
  Times result was 'false':        297113 (20%)
Number of strengthen sat checks:   0
Number of coverage checks:         1044994
  BDD entailment checks:           367212
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       42
Number of predicates discovered:          31
Number of abstraction locations:          237
Max number of predicates per location:    10
Avg number of predicates per location:    3
Total predicates per abstraction:         3349041
Max number of predicates per abstraction: 10
Avg number of predicates per abstraction: 91.99
Number of irrelevant predicates:          2164222 (65%)
Number of preds handled by boolean abs:   64702 (2%)
  Total number of models for allsat:      21815
  Max number of models for allsat:        8
  Avg number of models for allsat:        0.95

Time for post operator:                 53.307s
  Time for path formula creation:       49.769s
Time for strengthen operator:            7.116s
Time for prec operator:                213.876s
  Time for abstraction:                199.266s (Max:     1.202s, Count: 1450063)
    Boolean abstraction:                14.708s
    Solving time:                       13.570s (Max:     0.014s)
    Model enumeration time:              1.664s
    Time for BDD construction:           0.484s (Max:     0.012s)
Time for merge operator:                 2.776s
Time for coverage check:                 0.570s
  Time for BDD entailment checks:        0.439s
Total time for SMT solver (w/o itp):    15.234s

Number of path formula cache hits:   8814376 (93%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    27.450s

Total number of created targets for pointer analysis: 7992
   Number of created targets for uf: *(void)* is 556
   Number of created targets for uf: *signed_int is 58
   Number of created targets for uf: *(struct_urb)* is 85
   Number of created targets for uf: *unsigned_int is 58
   Number of created targets for uf: *unsigned_long_int is 3934


Number of BDD nodes:                               5922
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       44039 (count: 782345, min: 0, max: 905, avg: 0.06)
Time for BDD node cleanup:                             0.233s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                 11.359s
  Time for transition matches:                         6.366s
  Time for transition assertions:                      0.005s
  Time for transition actions:                         0.024s
Automaton transfers with branching:                0
Automaton transfer successors:                      8161137 (count: 8161137, min: 1, max: 1, avg: 1.00) [1 x 8161137]

CPA algorithm statistics
------------------------
Number of iterations:            4961521
Max size of waitlist:            599
Average size of waitlist:        211
Number of computed successors:   5897807
Max successors for one state:    2
Number of times merged:          338891
Number of times stopped:         435322
Number of times breaked:         3404

Total time for CPA algorithm:       413.345s (Max:     2.506s)
  Time for choose from waitlist:      2.027s
  Time for precision adjustment:    252.683s
  Time for transfer relation:       123.567s
  Time for merge operator:            7.265s
  Time for stop operator:             6.167s
  Time for adding to reached set:     7.934s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   3404
Avg. length of target path (in blocks):              196239 (count: 3404, min: 12, max: 106, avg: 57.65)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  77.257s
  Counterexample analysis:                            63.619s (Max:     0.056s, Calls: 3404)
    Refinement sat check:                             41.949s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.101s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.443s
  Precision update:                                    1.759s
  ARG update:                                          9.469s

Length of refined path (in blocks):                  188059 (count: 3404, min: 8, max: 100, avg: 55.25)
Number of affected states:                            39670 (count: 3404, min: 1, max: 87, avg: 11.65)
Length (states) of path with itp 'true':             144985 (count: 3404, min: 0, max: 88, avg: 42.59)
Length (states) of path with itp non-trivial itp:     39670 (count: 3404, min: 1, max: 87, avg: 11.65)
Length (states) of path with itp 'false':              3404 (count: 3404, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:         309 (count: 3404, min: 0, max: 5, avg: 0.09)
Equal non-trivial interpolants along paths:           35957 (count: 3404, min: 0, max: 86, avg: 10.56)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                3404
Number of successful refinements:     3404
Number of failed refinements:         0
Max. size of reached set before ref.: 38055
Max. size of reached set after ref.:  37209
Avg. size of reached set before ref.: 12037.74
Avg. size of reached set after ref.:  10521.13

Total time for CEGAR algorithm:     551.429s
Time for refinements:               114.014s
Average time for refinement:          0.033s
Max time for refinement:              0.593s

Code Coverage
-----------------------------
  Function coverage:      0.420
  Visited lines:          1241
  Total lines:            2049
  Line coverage:          0.606
  Visited conditions:     282
  Total conditions:       450
  Condition coverage:     0.627

CPAchecker general statistics
-----------------------------
Number of program locations:     2767
Number of CFA edges:             3132
Number of relevant variables:    374
Number of functions:             88
Number of loops:                 13
Size of reached set:             2808
  Number of reached locations:   681 (25%)
    Avg states per location:     4
    Max states per location:     25 (at node N1967)
  Number of reached functions:   37 (42%)
  Number of partitions:          2795
    Avg size of partitions:      1
    Max size of partitions:      4 (with key [N330 (before line 4470), Function sierra_probe called from node N1508, stack depth 2 [24b17f01], stack [main, sierra_probe]])
  Number of target states:       0

Time for analysis setup:          5.560s
  Time for loading CPAs:          0.971s
  Time for loading parser:        0.719s
  Time for CFA construction:      3.700s
    Time for parsing file(s):     1.081s
    Time for AST to CFA:          1.212s
    Time for CFA sanity check:    0.233s
    Time for post-processing:     0.968s
      Time for var class.:        0.476s
Time for Analysis:              551.430s
CPU time for analysis:          551.360s
Time for analyzing result:        0.003s
Total time for CPAchecker:      556.994s
Total CPU time for CPAchecker:  556.920s
Time for statistics:              0.139s

Time for Garbage Collector:      33.324s (in 1615 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                499MB (   476 MiB) max;    196MB (   187 MiB) avg;    536MB (   512 MiB) peak
Used non-heap memory:             41MB (    39 MiB) max;     40MB (    38 MiB) avg;     41MB (    40 MiB) peak
Allocated heap memory:           632MB (   603 MiB) max;    298MB (   284 MiB) avg
Allocated non-heap memory:        44MB (    41 MiB) max;     43MB (    41 MiB) avg
Total process virtual memory:   8423MB (  8033 MiB) max;   8183MB (  7804 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
