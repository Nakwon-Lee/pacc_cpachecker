scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.16-rc1/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--usb--serial--sierra.ko-entry_point_true-unreach-call.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_cu96bma9/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

line 5943: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___5 = ldv_zalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_detach_1 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_dev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_set_interface to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_autopm_get_interface to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_control_msg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_autopm_put_interface to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __raw_spin_lock_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __init_waitqueue_head to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_alloc_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_free_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_get_from_anchor to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_anchor_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_submit_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_autopm_put_interface_async to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_kill_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_kill_anchored_urbs to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_autopm_get_interface_no_resume to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_serial_deregister_drivers to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_final_state to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_serial_register_drivers to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_clear_halt to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            1240173 (18% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  1144959 (92%)
  Because of loop head:            92092 (7%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         3122 (0%)
  Times precision was empty:       53346 (4%)
  Times precision was {false}:     21018 (2%)
  Times result was cached:         1138772 (92%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      27037 (2%)
  Times result was 'false':        120824 (10%)
Number of strengthen sat checks:   0
Number of coverage checks:         1190800
  BDD entailment checks:           482164
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       42
Number of predicates discovered:          45
Number of abstraction locations:          190
Max number of predicates per location:    13
Avg number of predicates per location:    2
Total predicates per abstraction:         3241562
Max number of predicates per abstraction: 13
Avg number of predicates per abstraction: 67.46
Number of irrelevant predicates:          2372530 (73%)
Number of preds handled by boolean abs:   81446 (3%)
  Total number of models for allsat:      39090
  Max number of models for allsat:        16
  Avg number of models for allsat:        1.45

Time for post operator:                 90.440s
  Time for path formula creation:       87.638s
Time for strengthen operator:            5.717s
Time for prec operator:                267.165s
  Time for abstraction:                252.395s (Max:     2.969s, Count: 1240173)
    Boolean abstraction:                24.216s
    Solving time:                       22.554s (Max:     0.017s)
    Model enumeration time:              3.460s
    Time for BDD construction:           0.771s (Max:     0.012s)
Time for merge operator:                 5.023s
Time for coverage check:                 0.665s
  Time for BDD entailment checks:        0.494s
Total time for SMT solver (w/o itp):    26.014s

Number of path formula cache hits:   6266064 (78%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    67.832s

Total number of created targets for pointer analysis: 20177
   Number of created targets for uf: *(void)* is 1068
   Number of created targets for uf: *signed_int is 141
   Number of created targets for uf: *(struct_urb)* is 276
   Number of created targets for uf: *unsigned_int is 2


Number of BDD nodes:                               7013
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       54896 (count: 819495, min: 0, max: 1491, avg: 0.07)
Time for BDD node cleanup:                             0.175s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                 10.043s
  Time for transition matches:                         5.810s
  Time for transition assertions:                      0.002s
  Time for transition actions:                         0.014s
Automaton transfers with branching:                0
Automaton transfer successors:                      6863710 (count: 6863710, min: 1, max: 1, avg: 1.00) [1 x 6863710]

CPA algorithm statistics
------------------------
Number of iterations:            4773691
Max size of waitlist:            454
Average size of waitlist:        188
Number of computed successors:   5659622
Max successors for one state:    2
Number of times merged:          354318
Number of times stopped:         514709
Number of times breaked:         3122

Total time for CPA algorithm:       495.790s (Max:     3.081s)
  Time for choose from waitlist:      2.390s
  Time for precision adjustment:    302.548s
  Time for transfer relation:       152.498s
  Time for merge operator:            9.701s
  Time for stop operator:             6.467s
  Time for adding to reached set:     9.046s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   3122
Avg. length of target path (in blocks):              299127 (count: 3122, min: 12, max: 220, avg: 95.81)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                 107.462s
  Counterexample analysis:                            94.646s (Max:     0.141s, Calls: 3122)
    Refinement sat check:                             55.087s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.160s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.463s
  Precision update:                                    1.240s
  ARG update:                                          9.229s

Length of refined path (in blocks):                  284116 (count: 3122, min: 8, max: 219, avg: 91.00)
Number of affected states:                            53496 (count: 3122, min: 1, max: 66, avg: 17.14)
Length (states) of path with itp 'true':             227498 (count: 3122, min: 0, max: 208, avg: 72.87)
Length (states) of path with itp non-trivial itp:     53496 (count: 3122, min: 1, max: 66, avg: 17.14)
Length (states) of path with itp 'false':              3122 (count: 3122, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:         142 (count: 3122, min: 0, max: 6, avg: 0.05)
Equal non-trivial interpolants along paths:           50232 (count: 3122, min: 0, max: 65, avg: 16.09)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                3122
Number of successful refinements:     3122
Number of failed refinements:         0
Max. size of reached set before ref.: 13491
Max. size of reached set after ref.:  12083
Avg. size of reached set before ref.: 5900.96
Avg. size of reached set after ref.:  4293.09

Total time for CEGAR algorithm:     629.221s
Time for refinements:               124.487s
Average time for refinement:          0.039s
Max time for refinement:              0.156s

Code Coverage
-----------------------------
  Function coverage:      0.420
  Visited lines:          1241
  Total lines:            2049
  Line coverage:          0.606
  Visited conditions:     282
  Total conditions:       450
  Condition coverage:     0.627

CPAchecker general statistics
-----------------------------
Number of program locations:     2767
Number of CFA edges:             3132
Number of relevant variables:    374
Number of functions:             88
Number of loops:                 13
Size of reached set:             4332
  Number of reached locations:   681 (25%)
    Avg states per location:     6
    Max states per location:     40 (at node N118)
  Number of reached functions:   37 (42%)
  Number of partitions:          4309
    Avg size of partitions:      1
    Max size of partitions:      5 (with key [N1491 (before line 5951), Function main called from node N1452, stack depth 1 [2b4786dd], stack [main]])
  Number of target states:       0

Time for analysis setup:          5.518s
  Time for loading CPAs:          1.046s
  Time for loading parser:        0.698s
  Time for CFA construction:      3.661s
    Time for parsing file(s):     1.072s
    Time for AST to CFA:          1.198s
    Time for CFA sanity check:    0.251s
    Time for post-processing:     0.963s
      Time for var class.:        0.465s
Time for Analysis:              629.222s
CPU time for analysis:          629.190s
Time for analyzing result:        0.003s
Total time for CPAchecker:      634.745s
Total CPU time for CPAchecker:  634.700s
Time for statistics:              0.203s

Time for Garbage Collector:      35.309s (in 1141 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                922MB (   879 MiB) max;    373MB (   356 MiB) avg;    937MB (   894 MiB) peak
Used non-heap memory:             40MB (    39 MiB) max;     40MB (    38 MiB) avg;     41MB (    39 MiB) peak
Allocated heap memory:          1271MB (  1212 MiB) max;    572MB (   546 MiB) avg
Allocated non-heap memory:        42MB (    40 MiB) max;     42MB (    40 MiB) avg
Total process virtual memory:   8626MB (  8226 MiB) max;   8221MB (  7840 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
