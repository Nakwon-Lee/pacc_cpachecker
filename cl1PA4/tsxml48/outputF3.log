scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.16-rc1/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--usb--serial--sierra.ko-entry_point_true-unreach-call.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_44phufth/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

line 5943: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___5 = ldv_zalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_detach_1 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_serial_register_drivers to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_final_state to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_serial_deregister_drivers to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_dev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_set_interface to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __raw_spin_lock_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __init_waitqueue_head to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tty_port_tty_hangup to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_clear_halt to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_submit_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_autopm_get_interface_async to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_alloc_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_autopm_put_interface_async to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_get_from_anchor to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_free_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_anchor_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_unanchor_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_autopm_get_interface to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_control_msg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_autopm_put_interface to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_kill_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_kill_anchored_urbs to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_autopm_get_interface_no_resume to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            1397392 (22% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  1318939 (94%)
  Because of loop head:            78038 (6%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         415 (0%)
  Times precision was empty:       449708 (32%)
  Times precision was {false}:     9302 (1%)
  Times result was cached:         927756 (66%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      10626 (1%)
  Times result was 'false':        85853 (6%)
Number of strengthen sat checks:   0
Number of coverage checks:         762081
  BDD entailment checks:           297427
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       42
Number of predicates discovered:          27
Number of abstraction locations:          282
Max number of predicates per location:    10
Avg number of predicates per location:    2
Total predicates per abstraction:         1731545
Max number of predicates per abstraction: 10
Avg number of predicates per abstraction: 86.89
Number of irrelevant predicates:          986332 (57%)
Number of preds handled by boolean abs:   18448 (1%)
  Total number of models for allsat:      9721
  Max number of models for allsat:        8
  Avg number of models for allsat:        0.91

Time for post operator:                 60.671s
  Time for path formula creation:       57.806s
Time for strengthen operator:            5.589s
Time for prec operator:                119.838s
  Time for abstraction:                104.985s (Max:     1.841s, Count: 1397392)
    Boolean abstraction:                 5.535s
    Solving time:                        6.104s (Max:     0.016s)
    Model enumeration time:              0.681s
    Time for BDD construction:           0.236s (Max:     0.009s)
Time for merge operator:                 2.513s
Time for coverage check:                 0.503s
  Time for BDD entailment checks:        0.354s
Total time for SMT solver (w/o itp):     6.785s

Number of path formula cache hits:   6949924 (89%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    38.810s

Total number of created targets for pointer analysis: 36460
   Number of created targets for uf: *(void)* is 2674
   Number of created targets for uf: *signed_int is 277
   Number of created targets for uf: *(struct_urb)* is 458
   Number of created targets for uf: *unsigned_int is 366
   Number of created targets for uf: *unsigned_long_int is 18007


Number of BDD nodes:                               2393
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       20398 (count: 891162, min: 0, max: 856, avg: 0.02)
Time for BDD node cleanup:                             0.166s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  9.172s
  Time for transition matches:                         4.896s
  Time for transition assertions:                      0.001s
  Time for transition actions:                         0.002s
Automaton transfers with branching:                0
Automaton transfer successors:                      6412820 (count: 6412820, min: 1, max: 1, avg: 1.00) [1 x 6412820]

CPA algorithm statistics
------------------------
Number of iterations:            4303517
Max size of waitlist:            509
Average size of waitlist:        192
Number of computed successors:   4793470
Max successors for one state:    2
Number of times merged:          232327
Number of times stopped:         370311
Number of times breaked:         415

Total time for CPA algorithm:       312.192s (Max:     4.436s)
  Time for choose from waitlist:      1.873s
  Time for precision adjustment:    153.421s
  Time for transfer relation:       125.124s
  Time for merge operator:            5.707s
  Time for stop operator:             6.182s
  Time for adding to reached set:     7.172s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   415
Avg. length of target path (in blocks):               25231 (count: 415, min: 12, max: 137, avg: 60.80)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  18.949s
  Counterexample analysis:                             8.971s (Max:     0.075s, Calls: 415)
    Refinement sat check:                              5.790s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.019s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.134s
  Precision update:                                    0.228s
  ARG update:                                          9.354s

Length of refined path (in blocks):                   22519 (count: 415, min: 8, max: 136, avg: 54.26)
Number of affected states:                            11054 (count: 415, min: 1, max: 101, avg: 26.64)
Length (states) of path with itp 'true':              11050 (count: 415, min: 0, max: 103, avg: 26.63)
Length (states) of path with itp non-trivial itp:     11054 (count: 415, min: 1, max: 101, avg: 26.64)
Length (states) of path with itp 'false':               415 (count: 415, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:          38 (count: 415, min: 0, max: 5, avg: 0.09)
Equal non-trivial interpolants along paths:           10601 (count: 415, min: 0, max: 100, avg: 25.54)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                415
Number of successful refinements:     415
Number of failed refinements:         0
Max. size of reached set before ref.: 32848
Max. size of reached set after ref.:  32634
Avg. size of reached set before ref.: 19971.61
Avg. size of reached set after ref.:  9529.95

Total time for CEGAR algorithm:     341.558s
Time for refinements:                26.009s
Average time for refinement:          0.062s
Max time for refinement:              0.537s

Code Coverage
-----------------------------
  Function coverage:      0.420
  Visited lines:          1241
  Total lines:            2049
  Line coverage:          0.606
  Visited conditions:     282
  Total conditions:       450
  Condition coverage:     0.627

CPAchecker general statistics
-----------------------------
Number of program locations:     2767
Number of CFA edges:             3132
Number of relevant variables:    374
Number of functions:             88
Number of loops:                 13
Size of reached set:             4018
  Number of reached locations:   681 (25%)
    Avg states per location:     5
    Max states per location:     40 (at node N118)
  Number of reached functions:   37 (42%)
  Number of partitions:          4012
    Avg size of partitions:      1
    Max size of partitions:      4 (with key [N1491 (before line 5951), Function main called from node N1452, stack depth 1 [2b4786dd], stack [main]])
  Number of target states:       0

Time for analysis setup:          5.360s
  Time for loading CPAs:          0.907s
  Time for loading parser:        0.645s
  Time for CFA construction:      3.626s
    Time for parsing file(s):     1.062s
    Time for AST to CFA:          1.243s
    Time for CFA sanity check:    0.241s
    Time for post-processing:     0.888s
      Time for var class.:        0.457s
Time for Analysis:              341.559s
CPU time for analysis:          341.510s
Time for analyzing result:        0.004s
Total time for CPAchecker:      346.924s
Total CPU time for CPAchecker:  346.860s
Time for statistics:              0.168s

Time for Garbage Collector:      33.759s (in 812 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                519MB (   495 MiB) max;    238MB (   227 MiB) avg;    527MB (   503 MiB) peak
Used non-heap memory:             41MB (    39 MiB) max;     39MB (    38 MiB) avg;     41MB (    40 MiB) peak
Allocated heap memory:           642MB (   612 MiB) max;    350MB (   334 MiB) avg
Allocated non-heap memory:        43MB (    41 MiB) max;     41MB (    39 MiB) avg
Total process virtual memory:   8222MB (  7841 MiB) max;   8121MB (  7745 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
