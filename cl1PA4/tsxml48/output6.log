scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.16-rc1/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--usb--serial--sierra.ko-entry_point_true-unreach-call.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_gbqug4g4/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

line 5943: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___5 = ldv_zalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_detach_1 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_serial_register_drivers to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_serial_deregister_drivers to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_final_state to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_dev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_set_interface to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tty_port_tty_hangup to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_autopm_get_interface to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_clear_halt to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_control_msg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_autopm_put_interface to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __raw_spin_lock_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_get_from_anchor to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_free_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_autopm_put_interface_async to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_anchor_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __init_waitqueue_head to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            43315 (19% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  41113 (95%)
  Because of loop head:            2166 (5%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         36 (0%)
  Times precision was empty:       31412 (73%)
  Times precision was {false}:     1463 (3%)
  Times result was cached:         10144 (23%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      296 (1%)
  Times result was 'false':        3686 (9%)
Number of strengthen sat checks:   0
Number of coverage checks:         21260
  BDD entailment checks:           4940
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       42
Number of predicates discovered:          5
Number of abstraction locations:          62
Max number of predicates per location:    4
Avg number of predicates per location:    1
Total predicates per abstraction:         15957
Max number of predicates per abstraction: 4
Avg number of predicates per abstraction: 9.07
Number of irrelevant predicates:          11442 (72%)
Number of preds handled by boolean abs:   449 (3%)
  Total number of models for allsat:      291
  Max number of models for allsat:        4
  Avg number of models for allsat:        0.98

Time for post operator:                  5.579s
  Time for path formula creation:        5.389s
Time for strengthen operator:            0.294s
Time for prec operator:                  6.748s
  Time for abstraction:                  5.646s (Max:     0.023s, Count: 43315)
    Boolean abstraction:                 0.469s
    Solving time:                        0.690s (Max:     0.015s)
    Model enumeration time:              0.064s
    Time for BDD construction:           0.073s (Max:     0.012s)
Time for merge operator:                 0.315s
Time for coverage check:                 0.062s
  Time for BDD entailment checks:        0.038s
Total time for SMT solver (w/o itp):     0.754s

Number of path formula cache hits:   240143 (89%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     4.383s

Total number of created targets for pointer analysis: 179
   Number of created targets for uf: *(void)* is 6
   Number of created targets for uf: *signed_int is 5
   Number of created targets for uf: *unsigned_int is 3
   Number of created targets for uf: *unsigned_long_int is 133


Number of BDD nodes:                               286
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         659 (count: 46488, min: 0, max: 74, avg: 0.01)
Time for BDD node cleanup:                             0.018s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.798s
  Time for transition matches:                         0.446s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.001s
Automaton transfers with branching:                0
Automaton transfer successors:                       226068 (count: 226068, min: 1, max: 1, avg: 1.00) [1 x 226068]

CPA algorithm statistics
------------------------
Number of iterations:            138367
Max size of waitlist:            330
Average size of waitlist:        122
Number of computed successors:   158594
Max successors for one state:    2
Number of times merged:          8160
Number of times stopped:         10660
Number of times breaked:         36

Total time for CPA algorithm:        22.801s (Max:     1.762s)
  Time for choose from waitlist:      0.279s
  Time for precision adjustment:      9.088s
  Time for transfer relation:        10.347s
  Time for merge operator:            0.746s
  Time for stop operator:             0.509s
  Time for adding to reached set:     0.495s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   36
Avg. length of target path (in blocks):                 905 (count: 36, min: 12, max: 34, avg: 25.14)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   1.478s
  Counterexample analysis:                             0.613s (Max:     0.028s, Calls: 36)
    Refinement sat check:                              0.416s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.019s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.061s
  Precision update:                                    0.029s
  ARG update:                                          0.688s

Length of refined path (in blocks):                     653 (count: 36, min: 8, max: 33, avg: 18.14)
Number of affected states:                              432 (count: 36, min: 1, max: 32, avg: 12.00)
Length (states) of path with itp 'true':                185 (count: 36, min: 0, max: 20, avg: 5.14)
Length (states) of path with itp non-trivial itp:       432 (count: 36, min: 1, max: 32, avg: 12.00)
Length (states) of path with itp 'false':                36 (count: 36, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 36, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:             396 (count: 36, min: 0, max: 31, avg: 11.00)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                36
Number of successful refinements:     36
Number of failed refinements:         0
Max. size of reached set before ref.: 7964
Max. size of reached set after ref.:  3852
Avg. size of reached set before ref.: 4330.39
Avg. size of reached set after ref.:  444.44

Total time for CEGAR algorithm:      24.592s
Time for refinements:                 1.773s
Average time for refinement:          0.049s
Max time for refinement:              0.114s

Code Coverage
-----------------------------
  Function coverage:      0.557
  Visited lines:          1381
  Total lines:            2049
  Line coverage:          0.674
  Visited conditions:     272
  Total conditions:       450
  Condition coverage:     0.604

CPAchecker general statistics
-----------------------------
Number of program locations:     2767
Number of CFA edges:             3132
Number of relevant variables:    374
Number of functions:             88
Number of loops:                 13
Size of reached set:             4354
  Number of reached locations:   706 (26%)
    Avg states per location:     6
    Max states per location:     98 (at node N164)
  Number of reached functions:   49 (56%)
  Number of partitions:          4342
    Avg size of partitions:      1
    Max size of partitions:      7 (with key [N1491 (before line 5951), Function main called from node N1452, stack depth 1 [aac3f4e], stack [main]])
  Number of target states:       0
  Size of final wait list        197

Time for analysis setup:          5.673s
  Time for loading CPAs:          1.077s
  Time for loading parser:        0.761s
  Time for CFA construction:      3.701s
    Time for parsing file(s):     1.089s
    Time for AST to CFA:          1.195s
    Time for CFA sanity check:    0.237s
    Time for post-processing:     0.968s
      Time for var class.:        0.463s
Time for Analysis:               24.592s
CPU time for analysis:           24.590s
Total time for CPAchecker:       30.271s
Total CPU time for CPAchecker:   30.250s
Time for statistics:              0.206s

Time for Garbage Collector:       0.866s (in 60 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 80MB (    76 MiB) max;     49MB (    47 MiB) avg;     83MB (    79 MiB) peak
Used non-heap memory:             39MB (    37 MiB) max;     34MB (    33 MiB) avg;     40MB (    38 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        41MB (    39 MiB) max;     36MB (    35 MiB) avg
Total process virtual memory:   8086MB (  7712 MiB) max;   8072MB (  7698 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
