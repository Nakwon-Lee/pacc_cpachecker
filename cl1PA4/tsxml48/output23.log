scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.16-rc1/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--usb--serial--sierra.ko-entry_point_true-unreach-call.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_f6u4vbri/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

line 5943: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___5 = ldv_zalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_detach_1 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_serial_deregister_drivers to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_serial_register_drivers to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_kill_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_kill_anchored_urbs to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_dev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_get_from_anchor to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_anchor_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_submit_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_free_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_autopm_put_interface_async to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_autopm_get_interface_no_resume to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_set_interface to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_clear_halt to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_alloc_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_autopm_get_interface to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_control_msg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_autopm_put_interface to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tty_port_tty_hangup to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_autopm_get_interface_async to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_final_state to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __raw_spin_lock_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __init_waitqueue_head to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            46690 (21% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  44122 (94%)
  Because of loop head:            2522 (5%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         46 (0%)
  Times precision was empty:       35656 (76%)
  Times precision was {false}:     1024 (2%)
  Times result was cached:         9683 (21%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      327 (1%)
  Times result was 'false':        2688 (6%)
Number of strengthen sat checks:   0
Number of coverage checks:         27913
  BDD entailment checks:           6189
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       42
Number of predicates discovered:          9
Number of abstraction locations:          90
Max number of predicates per location:    5
Avg number of predicates per location:    1
Total predicates per abstraction:         14008
Max number of predicates per abstraction: 5
Avg number of predicates per abstraction: 10.37
Number of irrelevant predicates:          8876 (63%)
Number of preds handled by boolean abs:   542 (4%)
  Total number of models for allsat:      365
  Max number of models for allsat:        5
  Avg number of models for allsat:        1.12

Time for post operator:                  4.950s
  Time for path formula creation:        4.670s
Time for strengthen operator:            0.359s
Time for prec operator:                  6.001s
  Time for abstraction:                  4.924s (Max:     0.027s, Count: 46690)
    Boolean abstraction:                 0.462s
    Solving time:                        0.582s (Max:     0.015s)
    Model enumeration time:              0.055s
    Time for BDD construction:           0.068s (Max:     0.011s)
Time for merge operator:                 0.267s
Time for coverage check:                 0.075s
  Time for BDD entailment checks:        0.068s
Total time for SMT solver (w/o itp):     0.637s

Number of path formula cache hits:   259125 (93%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     3.642s

Total number of created targets for pointer analysis: 380
   Number of created targets for uf: *(void)* is 62
   Number of created targets for uf: *signed_int is 19
   Number of created targets for uf: *(struct_urb)* is 3
   Number of created targets for uf: *unsigned_int is 5
   Number of created targets for uf: *unsigned_long_int is 160


Number of BDD nodes:                               353
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         787 (count: 49453, min: 0, max: 78, avg: 0.02)
Time for BDD node cleanup:                             0.043s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.771s
  Time for transition matches:                         0.377s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.001s
Automaton transfers with branching:                0
Automaton transfer successors:                       227528 (count: 227528, min: 1, max: 1, avg: 1.00) [1 x 227528]

CPA algorithm statistics
------------------------
Number of iterations:            157501
Max size of waitlist:            73
Average size of waitlist:        35
Number of computed successors:   177823
Max successors for one state:    2
Number of times merged:          10862
Number of times stopped:         15600
Number of times breaked:         46

Total time for CPA algorithm:        22.180s (Max:     1.686s)
  Time for choose from waitlist:      0.264s
  Time for precision adjustment:      8.453s
  Time for transfer relation:        10.082s
  Time for merge operator:            0.680s
  Time for stop operator:             0.589s
  Time for adding to reached set:     0.661s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   46
Avg. length of target path (in blocks):                1671 (count: 46, min: 12, max: 72, avg: 36.33)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   2.055s
  Counterexample analysis:                             1.136s (Max:     0.057s, Calls: 46)
    Refinement sat check:                              0.750s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.008s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.077s
  Precision update:                                    0.052s
  ARG update:                                          0.706s

Length of refined path (in blocks):                    1140 (count: 46, min: 8, max: 55, avg: 24.78)
Number of affected states:                              637 (count: 46, min: 1, max: 48, avg: 13.85)
Length (states) of path with itp 'true':                457 (count: 46, min: 0, max: 53, avg: 9.93)
Length (states) of path with itp non-trivial itp:       637 (count: 46, min: 1, max: 48, avg: 13.85)
Length (states) of path with itp 'false':                46 (count: 46, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           2 (count: 46, min: 0, max: 1, avg: 0.04)
Equal non-trivial interpolants along paths:             589 (count: 46, min: 0, max: 47, avg: 12.80)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                46
Number of successful refinements:     46
Number of failed refinements:         0
Max. size of reached set before ref.: 9483
Max. size of reached set after ref.:  6224
Avg. size of reached set before ref.: 4251.04
Avg. size of reached set after ref.:  804.85

Total time for CEGAR algorithm:      24.713s
Time for refinements:                 2.483s
Average time for refinement:          0.053s
Max time for refinement:              0.131s

Code Coverage
-----------------------------
  Function coverage:      0.455
  Visited lines:          1072
  Total lines:            2049
  Line coverage:          0.523
  Visited conditions:     226
  Total conditions:       450
  Condition coverage:     0.502

CPAchecker general statistics
-----------------------------
Number of program locations:     2767
Number of CFA edges:             3132
Number of relevant variables:    374
Number of functions:             88
Number of loops:                 13
Size of reached set:             1010
  Number of reached locations:   516 (19%)
    Avg states per location:     1
    Max states per location:     9 (at node N118)
  Number of reached functions:   40 (45%)
  Number of partitions:          1009
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N1491 (before line 5951), Function main called from node N1452, stack depth 1 [746b18fd], stack [main]])
  Number of target states:       0
  Size of final wait list        30

Time for analysis setup:          5.563s
  Time for loading CPAs:          0.982s
  Time for loading parser:        0.680s
  Time for CFA construction:      3.769s
    Time for parsing file(s):     1.026s
    Time for AST to CFA:          1.194s
    Time for CFA sanity check:    0.295s
    Time for post-processing:     1.086s
      Time for var class.:        0.473s
Time for Analysis:               24.713s
CPU time for analysis:           24.710s
Total time for CPAchecker:       30.280s
Total CPU time for CPAchecker:   30.260s
Time for statistics:              0.092s

Time for Garbage Collector:       0.809s (in 62 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 84MB (    80 MiB) max;     52MB (    49 MiB) avg;     87MB (    83 MiB) peak
Used non-heap memory:             39MB (    37 MiB) max;     34MB (    33 MiB) avg;     39MB (    38 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        41MB (    39 MiB) max;     36MB (    35 MiB) avg
Total process virtual memory:   8019MB (  7647 MiB) max;   8008MB (  7637 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
