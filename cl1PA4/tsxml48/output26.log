scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.16-rc1/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--usb--serial--sierra.ko-entry_point_true-unreach-call.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_xghxlitg/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

line 5943: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___5 = ldv_zalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_detach_1 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_serial_register_drivers to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_final_state to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_serial_deregister_drivers to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_dev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_set_interface to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tty_port_tty_hangup to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __raw_spin_lock_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_clear_halt to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __init_waitqueue_head to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_submit_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_autopm_get_interface_async to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_get_from_anchor to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_free_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_autopm_put_interface_async to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_alloc_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_anchor_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_unanchor_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_autopm_get_interface to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_control_msg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_autopm_put_interface to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            68796 (22% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  65912 (96%)
  Because of loop head:            2869 (4%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         15 (0%)
  Times precision was empty:       65266 (95%)
  Times precision was {false}:     389 (1%)
  Times result was cached:         3029 (4%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      112 (0%)
  Times result was 'false':        580 (1%)
Number of strengthen sat checks:   0
Number of coverage checks:         31521
  BDD entailment checks:           8879
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       42
Number of predicates discovered:          4
Number of abstraction locations:          30
Max number of predicates per location:    3
Avg number of predicates per location:    1
Total predicates per abstraction:         4537
Max number of predicates per abstraction: 3
Avg number of predicates per abstraction: 9.06
Number of irrelevant predicates:          3288 (72%)
Number of preds handled by boolean abs:   145 (3%)
  Total number of models for allsat:      144
  Max number of models for allsat:        3
  Avg number of models for allsat:        1.29

Time for post operator:                  6.518s
  Time for path formula creation:        6.199s
Time for strengthen operator:            0.505s
Time for prec operator:                  3.689s
  Time for abstraction:                  2.374s (Max:     0.019s, Count: 68796)
    Boolean abstraction:                 0.235s
    Solving time:                        0.245s (Max:     0.013s)
    Model enumeration time:              0.027s
    Time for BDD construction:           0.030s (Max:     0.007s)
Time for merge operator:                 0.307s
Time for coverage check:                 0.060s
  Time for BDD entailment checks:        0.045s
Total time for SMT solver (w/o itp):     0.272s

Number of path formula cache hits:   355092 (92%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     4.678s

Total number of created targets for pointer analysis: 1376
   Number of created targets for uf: *(void)* is 51
   Number of created targets for uf: *signed_int is 14
   Number of created targets for uf: *(struct_urb)* is 2
   Number of created targets for uf: *unsigned_int is 13
   Number of created targets for uf: *unsigned_long_int is 868


Number of BDD nodes:                               219
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         257 (count: 76944, min: 0, max: 68, avg: 0.00)
Time for BDD node cleanup:                             0.014s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.926s
  Time for transition matches:                         0.447s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.000s
Automaton transfers with branching:                0
Automaton transfer successors:                       312570 (count: 312570, min: 1, max: 1, avg: 1.00) [1 x 312570]

CPA algorithm statistics
------------------------
Number of iterations:            208179
Max size of waitlist:            319
Average size of waitlist:        191
Number of computed successors:   228810
Max successors for one state:    2
Number of times merged:          11321
Number of times stopped:         18514
Number of times breaked:         15

Total time for CPA algorithm:        23.614s (Max:     4.226s)
  Time for choose from waitlist:      0.280s
  Time for precision adjustment:      6.669s
  Time for transfer relation:        12.992s
  Time for merge operator:            0.928s
  Time for stop operator:             0.512s
  Time for adding to reached set:     0.673s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   15
Avg. length of target path (in blocks):                 324 (count: 15, min: 12, max: 32, avg: 21.60)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.953s
  Counterexample analysis:                             0.226s (Max:     0.023s, Calls: 15)
    Refinement sat check:                              0.160s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.035s
  Precision update:                                    0.006s
  ARG update:                                          0.673s

Length of refined path (in blocks):                     247 (count: 15, min: 8, max: 31, avg: 16.47)
Number of affected states:                              130 (count: 15, min: 1, max: 30, avg: 8.67)
Length (states) of path with itp 'true':                102 (count: 15, min: 0, max: 20, avg: 6.80)
Length (states) of path with itp non-trivial itp:       130 (count: 15, min: 1, max: 30, avg: 8.67)
Length (states) of path with itp 'false':                15 (count: 15, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 15, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:             115 (count: 15, min: 0, max: 29, avg: 7.67)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                15
Number of successful refinements:     15
Number of failed refinements:         0
Max. size of reached set before ref.: 25284
Max. size of reached set after ref.:  12661
Avg. size of reached set before ref.: 14628.00
Avg. size of reached set after ref.:  2032.27

Total time for CEGAR algorithm:      24.866s
Time for refinements:                 1.232s
Average time for refinement:          0.082s
Max time for refinement:              0.189s

Code Coverage
-----------------------------
  Function coverage:      0.807
  Visited lines:          1731
  Total lines:            2049
  Line coverage:          0.845
  Visited conditions:     350
  Total conditions:       450
  Condition coverage:     0.778

CPAchecker general statistics
-----------------------------
Number of program locations:     2767
Number of CFA edges:             3132
Number of relevant variables:    374
Number of functions:             88
Number of loops:                 13
Size of reached set:             20781
  Number of reached locations:   1057 (38%)
    Avg states per location:     19
    Max states per location:     438 (at node N164)
  Number of reached functions:   71 (81%)
  Number of partitions:          20769
    Avg size of partitions:      1
    Max size of partitions:      6 (with key [N1491 (before line 5951), Function main called from node N1452, stack depth 1 [2b4786dd], stack [main]])
  Number of target states:       0
  Size of final wait list        205

Time for analysis setup:          5.376s
  Time for loading CPAs:          1.002s
  Time for loading parser:        0.663s
  Time for CFA construction:      3.554s
    Time for parsing file(s):     1.051s
    Time for AST to CFA:          1.170s
    Time for CFA sanity check:    0.246s
    Time for post-processing:     0.909s
      Time for var class.:        0.479s
Time for Analysis:               24.866s
CPU time for analysis:           24.860s
Total time for CPAchecker:       30.247s
Total CPU time for CPAchecker:   30.240s
Time for statistics:              0.437s

Time for Garbage Collector:       1.674s (in 74 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                121MB (   116 MiB) max;     63MB (    60 MiB) avg;    129MB (   123 MiB) peak
Used non-heap memory:             40MB (    38 MiB) max;     35MB (    33 MiB) avg;     40MB (    38 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        42MB (    40 MiB) max;     37MB (    35 MiB) avg
Total process virtual memory:   8086MB (  7712 MiB) max;   8073MB (  7699 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
