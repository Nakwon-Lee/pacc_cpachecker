scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.16-rc1/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--usb--serial--sierra.ko-entry_point_true-unreach-call.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_ahingjfl/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

line 5943: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___5 = ldv_zalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_detach_1 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_dev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_autopm_get_interface_async to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tty_port_tty_hangup to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_get_from_anchor to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_free_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_autopm_put_interface_async to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_kill_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_set_interface to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_autopm_get_interface to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_control_msg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_autopm_put_interface to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_anchor_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_kill_anchored_urbs to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_autopm_get_interface_no_resume to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_serial_register_drivers to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_serial_deregister_drivers to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_final_state to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_alloc_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __raw_spin_lock_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __init_waitqueue_head to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_clear_halt to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_submit_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            240354 (20% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  225713 (94%)
  Because of loop head:            14079 (6%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         562 (0%)
  Times precision was empty:       52018 (22%)
  Times precision was {false}:     3729 (2%)
  Times result was cached:         180267 (75%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      4340 (2%)
  Times result was 'false':        53918 (22%)
Number of strengthen sat checks:   0
Number of coverage checks:         163646
  BDD entailment checks:           37740
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       42
Number of predicates discovered:          16
Number of abstraction locations:          165
Max number of predicates per location:    9
Avg number of predicates per location:    2
Total predicates per abstraction:         398077
Max number of predicates per abstraction: 9
Avg number of predicates per abstraction: 49.33
Number of irrelevant predicates:          185885 (47%)
Number of preds handled by boolean abs:   8355 (2%)
  Total number of models for allsat:      3105
  Max number of models for allsat:        8
  Avg number of models for allsat:        0.72

Time for post operator:                 15.059s
  Time for path formula creation:       14.312s
Time for strengthen operator:            1.299s
Time for prec operator:                 40.096s
  Time for abstraction:                 37.031s (Max:     0.303s, Count: 240354)
    Boolean abstraction:                 2.783s
    Solving time:                        2.742s (Max:     0.015s)
    Model enumeration time:              0.296s
    Time for BDD construction:           0.139s (Max:     0.012s)
Time for merge operator:                 1.010s
Time for coverage check:                 0.092s
  Time for BDD entailment checks:        0.070s
Total time for SMT solver (w/o itp):     3.038s

Number of path formula cache hits:   1292686 (89%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    10.136s

Total number of created targets for pointer analysis: 3295
   Number of created targets for uf: *(void)* is 299
   Number of created targets for uf: *signed_int is 24
   Number of created targets for uf: *(struct_urb)* is 44
   Number of created targets for uf: *unsigned_int is 9
   Number of created targets for uf: *unsigned_long_int is 782


Number of BDD nodes:                               1256
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        8438 (count: 147485, min: 0, max: 279, avg: 0.06)
Time for BDD node cleanup:                             0.027s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  2.379s
  Time for transition matches:                         1.312s
  Time for transition assertions:                      0.001s
  Time for transition actions:                         0.008s
Automaton transfers with branching:                0
Automaton transfer successors:                      1225544 (count: 1225544, min: 1, max: 1, avg: 1.00) [1 x 1225544]

CPA algorithm statistics
------------------------
Number of iterations:            851267
Max size of waitlist:            135
Average size of waitlist:        39
Number of computed successors:   1006924
Max successors for one state:    2
Number of times merged:          62953
Number of times stopped:         86952
Number of times breaked:         562

Total time for CPA algorithm:        87.994s (Max:     1.478s)
  Time for choose from waitlist:      0.517s
  Time for precision adjustment:     48.066s
  Time for transfer relation:        30.410s
  Time for merge operator:            2.165s
  Time for stop operator:             1.356s
  Time for adding to reached set:     2.123s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   562
Avg. length of target path (in blocks):               29758 (count: 562, min: 12, max: 118, avg: 52.95)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  14.000s
  Counterexample analysis:                            11.322s (Max:     0.061s, Calls: 562)
    Refinement sat check:                              7.405s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.030s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.141s
  Precision update:                                    0.314s
  ARG update:                                          1.888s

Length of refined path (in blocks):                   24304 (count: 562, min: 8, max: 75, avg: 43.25)
Number of affected states:                             7646 (count: 562, min: 1, max: 74, avg: 13.60)
Length (states) of path with itp 'true':              16096 (count: 562, min: 0, max: 60, avg: 28.64)
Length (states) of path with itp non-trivial itp:      7646 (count: 562, min: 1, max: 74, avg: 13.60)
Length (states) of path with itp 'false':               562 (count: 562, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:          19 (count: 562, min: 0, max: 2, avg: 0.03)
Equal non-trivial interpolants along paths:            7065 (count: 562, min: 0, max: 73, avg: 12.57)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                562
Number of successful refinements:     562
Number of failed refinements:         0
Max. size of reached set before ref.: 9652
Max. size of reached set after ref.:  9218
Avg. size of reached set before ref.: 4181.47
Avg. size of reached set after ref.:  2645.27

Total time for CEGAR algorithm:     105.693s
Time for refinements:                16.597s
Average time for refinement:          0.029s
Max time for refinement:              0.117s

Code Coverage
-----------------------------
  Function coverage:      0.420
  Visited lines:          1241
  Total lines:            2049
  Line coverage:          0.606
  Visited conditions:     282
  Total conditions:       450
  Condition coverage:     0.627

CPAchecker general statistics
-----------------------------
Number of program locations:     2767
Number of CFA edges:             3132
Number of relevant variables:    374
Number of functions:             88
Number of loops:                 13
Size of reached set:             2715
  Number of reached locations:   681 (25%)
    Avg states per location:     3
    Max states per location:     24 (at node N118)
  Number of reached functions:   37 (42%)
  Number of partitions:          2711
    Avg size of partitions:      1
    Max size of partitions:      3 (with key [N1491 (before line 5951), Function main called from node N1452, stack depth 1 [60e21209], stack [main]])
  Number of target states:       0

Time for analysis setup:          5.930s
  Time for loading CPAs:          0.987s
  Time for loading parser:        0.754s
  Time for CFA construction:      4.063s
    Time for parsing file(s):     1.088s
    Time for AST to CFA:          1.395s
    Time for CFA sanity check:    0.288s
    Time for post-processing:     1.127s
      Time for var class.:        0.491s
Time for Analysis:              105.693s
CPU time for analysis:          105.650s
Time for analyzing result:        0.004s
Total time for CPAchecker:      111.628s
Total CPU time for CPAchecker:  111.580s
Time for statistics:              0.114s

Time for Garbage Collector:       5.998s (in 421 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                153MB (   146 MiB) max;     79MB (    75 MiB) avg;    167MB (   159 MiB) peak
Used non-heap memory:             40MB (    38 MiB) max;     38MB (    36 MiB) avg;     41MB (    39 MiB) peak
Allocated heap memory:           189MB (   180 MiB) max;    134MB (   128 MiB) avg
Allocated non-heap memory:        42MB (    40 MiB) max;     40MB (    38 MiB) avg
Total process virtual memory:   8084MB (  7710 MiB) max;   8014MB (  7642 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
