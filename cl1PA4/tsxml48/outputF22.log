scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.16-rc1/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--usb--serial--sierra.ko-entry_point_true-unreach-call.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_g1a4q7cp/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

line 5943: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___5 = ldv_zalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_detach_1 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_serial_register_drivers to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_serial_deregister_drivers to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_final_state to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_dev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_set_interface to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tty_port_tty_hangup to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_autopm_get_interface to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_clear_halt to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_control_msg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_autopm_put_interface to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __raw_spin_lock_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_get_from_anchor to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_free_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_autopm_put_interface_async to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_anchor_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __init_waitqueue_head to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_kill_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_kill_anchored_urbs to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_autopm_get_interface_no_resume to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_alloc_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_submit_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_autopm_get_interface_async to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            606377 (20% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  566675 (93%)
  Because of loop head:            38723 (6%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         979 (0%)
  Times precision was empty:       118027 (19%)
  Times precision was {false}:     9893 (2%)
  Times result was cached:         470742 (78%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      7715 (1%)
  Times result was 'false':        114562 (19%)
Number of strengthen sat checks:   0
Number of coverage checks:         444857
  BDD entailment checks:           168925
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       42
Number of predicates discovered:          16
Number of abstraction locations:          215
Max number of predicates per location:    9
Avg number of predicates per location:    2
Total predicates per abstraction:         980335
Max number of predicates per abstraction: 9
Avg number of predicates per abstraction: 55.68
Number of irrelevant predicates:          558723 (57%)
Number of preds handled by boolean abs:   17510 (2%)
  Total number of models for allsat:      6290
  Max number of models for allsat:        8
  Avg number of models for allsat:        0.82

Time for post operator:                 29.998s
  Time for path formula creation:       28.426s
Time for strengthen operator:            2.758s
Time for prec operator:                 83.728s
  Time for abstraction:                 76.804s (Max:     0.498s, Count: 606377)
    Boolean abstraction:                 4.873s
    Solving time:                        5.371s (Max:     0.014s)
    Model enumeration time:              0.601s
    Time for BDD construction:           0.237s (Max:     0.012s)
Time for merge operator:                 1.766s
Time for coverage check:                 0.291s
  Time for BDD entailment checks:        0.206s
Total time for SMT solver (w/o itp):     5.972s

Number of path formula cache hits:   3301936 (90%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    17.947s

Total number of created targets for pointer analysis: 6939
   Number of created targets for uf: *(void)* is 261
   Number of created targets for uf: *signed_int is 58
   Number of created targets for uf: *(struct_urb)* is 60
   Number of created targets for uf: *unsigned_int is 58
   Number of created targets for uf: *unsigned_long_int is 3721


Number of BDD nodes:                               2856
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       15301 (count: 403430, min: 0, max: 651, avg: 0.04)
Time for BDD node cleanup:                             0.085s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  4.857s
  Time for transition matches:                         2.820s
  Time for transition assertions:                      0.002s
  Time for transition actions:                         0.017s
Automaton transfers with branching:                0
Automaton transfer successors:                      3106025 (count: 3106025, min: 1, max: 1, avg: 1.00) [1 x 3106025]

CPA algorithm statistics
------------------------
Number of iterations:            2045185
Max size of waitlist:            344
Average size of waitlist:        137
Number of computed successors:   2393225
Max successors for one state:    2
Number of times merged:          137966
Number of times stopped:         194943
Number of times breaked:         979

Total time for CPA algorithm:       182.364s (Max:     1.715s)
  Time for choose from waitlist:      1.403s
  Time for precision adjustment:    101.228s
  Time for transfer relation:        62.403s
  Time for merge operator:            3.984s
  Time for stop operator:             2.914s
  Time for adding to reached set:     3.918s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   979
Avg. length of target path (in blocks):               51018 (count: 979, min: 12, max: 86, avg: 52.11)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  22.262s
  Counterexample analysis:                            17.383s (Max:     0.053s, Calls: 979)
    Refinement sat check:                             11.950s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.031s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.176s
  Precision update:                                    0.495s
  ARG update:                                          3.800s

Length of refined path (in blocks):                   48618 (count: 979, min: 8, max: 84, avg: 49.66)
Number of affected states:                            13241 (count: 979, min: 1, max: 71, avg: 13.53)
Length (states) of path with itp 'true':              34398 (count: 979, min: 0, max: 74, avg: 35.14)
Length (states) of path with itp non-trivial itp:     13241 (count: 979, min: 1, max: 71, avg: 13.53)
Length (states) of path with itp 'false':               979 (count: 979, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:          35 (count: 979, min: 0, max: 2, avg: 0.04)
Equal non-trivial interpolants along paths:           12227 (count: 979, min: 0, max: 70, avg: 12.49)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                979
Number of successful refinements:     979
Number of failed refinements:         0
Max. size of reached set before ref.: 24551
Max. size of reached set after ref.:  23626
Avg. size of reached set before ref.: 12298.00
Avg. size of reached set after ref.:  10173.16

Total time for CEGAR algorithm:     221.889s
Time for refinements:                32.604s
Average time for refinement:          0.033s
Max time for refinement:              0.111s

Code Coverage
-----------------------------
  Function coverage:      0.420
  Visited lines:          1241
  Total lines:            2049
  Line coverage:          0.606
  Visited conditions:     282
  Total conditions:       450
  Condition coverage:     0.627

CPAchecker general statistics
-----------------------------
Number of program locations:     2767
Number of CFA edges:             3132
Number of relevant variables:    374
Number of functions:             88
Number of loops:                 13
Size of reached set:             3498
  Number of reached locations:   681 (25%)
    Avg states per location:     5
    Max states per location:     32 (at node N118)
  Number of reached functions:   37 (42%)
  Number of partitions:          3492
    Avg size of partitions:      1
    Max size of partitions:      4 (with key [N1491 (before line 5951), Function main called from node N1452, stack depth 1 [2b4786dd], stack [main]])
  Number of target states:       0

Time for analysis setup:          5.272s
  Time for loading CPAs:          0.920s
  Time for loading parser:        0.641s
  Time for CFA construction:      3.610s
    Time for parsing file(s):     0.997s
    Time for AST to CFA:          1.318s
    Time for CFA sanity check:    0.232s
    Time for post-processing:     0.883s
      Time for var class.:        0.427s
Time for Analysis:              221.893s
CPU time for analysis:          221.860s
Time for analyzing result:        0.001s
Total time for CPAchecker:      227.170s
Total CPU time for CPAchecker:  227.120s
Time for statistics:              0.162s

Time for Garbage Collector:      16.796s (in 761 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                317MB (   302 MiB) max;    132MB (   125 MiB) avg;    323MB (   308 MiB) peak
Used non-heap memory:             41MB (    39 MiB) max;     39MB (    37 MiB) avg;     41MB (    39 MiB) peak
Allocated heap memory:           347MB (   331 MiB) max;    200MB (   191 MiB) avg
Allocated non-heap memory:        42MB (    40 MiB) max;     41MB (    39 MiB) avg
Total process virtual memory:   8155MB (  7778 MiB) max;   8114MB (  7738 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
