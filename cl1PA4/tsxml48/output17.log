scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.16-rc1/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--usb--serial--sierra.ko-entry_point_true-unreach-call.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_p5ql4fyk/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

line 5943: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___5 = ldv_zalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_detach_1 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_serial_deregister_drivers to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_serial_register_drivers to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_kill_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_kill_anchored_urbs to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_dev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_get_from_anchor to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_anchor_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_submit_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_free_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_autopm_put_interface_async to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_autopm_get_interface_no_resume to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_set_interface to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_clear_halt to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_alloc_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_autopm_get_interface to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_control_msg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_autopm_put_interface to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tty_port_tty_hangup to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_autopm_get_interface_async to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_final_state to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __raw_spin_lock_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __init_waitqueue_head to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            52108 (21% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  49714 (95%)
  Because of loop head:            2331 (4%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         63 (0%)
  Times precision was empty:       43620 (84%)
  Times precision was {false}:     815 (2%)
  Times result was cached:         7490 (14%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      183 (0%)
  Times result was 'false':        3496 (7%)
Number of strengthen sat checks:   0
Number of coverage checks:         31032
  BDD entailment checks:           5986
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       42
Number of predicates discovered:          6
Number of abstraction locations:          80
Max number of predicates per location:    5
Avg number of predicates per location:    1
Total predicates per abstraction:         11661
Max number of predicates per abstraction: 5
Avg number of predicates per abstraction: 11.68
Number of irrelevant predicates:          7101 (61%)
Number of preds handled by boolean abs:   288 (2%)
  Total number of models for allsat:      206
  Max number of models for allsat:        5
  Avg number of models for allsat:        1.13

Time for post operator:                  5.363s
  Time for path formula creation:        5.081s
Time for strengthen operator:            0.448s
Time for prec operator:                  4.975s
  Time for abstraction:                  4.040s (Max:     0.024s, Count: 52108)
    Boolean abstraction:                 0.328s
    Solving time:                        0.393s (Max:     0.012s)
    Model enumeration time:              0.037s
    Time for BDD construction:           0.054s (Max:     0.012s)
Time for merge operator:                 0.285s
Time for coverage check:                 0.079s
  Time for BDD entailment checks:        0.065s
Total time for SMT solver (w/o itp):     0.430s

Number of path formula cache hits:   286656 (92%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     3.983s

Total number of created targets for pointer analysis: 280
   Number of created targets for uf: *(void)* is 6
   Number of created targets for uf: *signed_int is 2
   Number of created targets for uf: *(struct_urb)* is 2
   Number of created targets for uf: *unsigned_int is 4
   Number of created targets for uf: *unsigned_long_int is 22


Number of BDD nodes:                               301
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         448 (count: 55494, min: 0, max: 69, avg: 0.01)
Time for BDD node cleanup:                             0.009s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.846s
  Time for transition matches:                         0.385s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.002s
Automaton transfers with branching:                0
Automaton transfer successors:                       253968 (count: 253968, min: 1, max: 1, avg: 1.00) [1 x 253968]

CPA algorithm statistics
------------------------
Number of iterations:            175226
Max size of waitlist:            73
Average size of waitlist:        36
Number of computed successors:   198688
Max successors for one state:    2
Number of times merged:          12523
Number of times stopped:         17407
Number of times breaked:         63

Total time for CPA algorithm:        22.040s (Max:     1.536s)
  Time for choose from waitlist:      0.271s
  Time for precision adjustment:      7.613s
  Time for transfer relation:        10.393s
  Time for merge operator:            0.826s
  Time for stop operator:             0.536s
  Time for adding to reached set:     0.728s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   63
Avg. length of target path (in blocks):                2051 (count: 63, min: 12, max: 54, avg: 32.56)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   2.008s
  Counterexample analysis:                             1.186s (Max:     0.055s, Calls: 63)
    Refinement sat check:                              0.756s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.011s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.032s
  Precision update:                                    0.056s
  ARG update:                                          0.659s

Length of refined path (in blocks):                    1266 (count: 63, min: 8, max: 53, avg: 20.10)
Number of affected states:                              831 (count: 63, min: 1, max: 52, avg: 13.19)
Length (states) of path with itp 'true':                372 (count: 63, min: 0, max: 9, avg: 5.90)
Length (states) of path with itp non-trivial itp:       831 (count: 63, min: 1, max: 52, avg: 13.19)
Length (states) of path with itp 'false':                63 (count: 63, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 63, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:             768 (count: 63, min: 0, max: 51, avg: 12.19)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                63
Number of successful refinements:     63
Number of failed refinements:         0
Max. size of reached set before ref.: 10407
Max. size of reached set after ref.:  8333
Avg. size of reached set before ref.: 4828.89
Avg. size of reached set after ref.:  2028.29

Total time for CEGAR algorithm:      24.682s
Time for refinements:                 2.528s
Average time for refinement:          0.040s
Max time for refinement:              0.133s

Code Coverage
-----------------------------
  Function coverage:      0.386
  Visited lines:          1205
  Total lines:            2049
  Line coverage:          0.588
  Visited conditions:     278
  Total conditions:       450
  Condition coverage:     0.618

CPAchecker general statistics
-----------------------------
Number of program locations:     2767
Number of CFA edges:             3132
Number of relevant variables:    374
Number of functions:             88
Number of loops:                 13
Size of reached set:             1347
  Number of reached locations:   642 (23%)
    Avg states per location:     2
    Max states per location:     13 (at node N1967)
  Number of reached functions:   34 (39%)
  Number of partitions:          1344
    Avg size of partitions:      1
    Max size of partitions:      4 (with key [N1491 (before line 5951), Function main called from node N1452, stack depth 1 [2b4786dd], stack [main]])
  Number of target states:       0
  Size of final wait list        7

Time for analysis setup:          5.538s
  Time for loading CPAs:          0.942s
  Time for loading parser:        0.763s
  Time for CFA construction:      3.702s
    Time for parsing file(s):     1.049s
    Time for AST to CFA:          1.177s
    Time for CFA sanity check:    0.286s
    Time for post-processing:     1.031s
      Time for var class.:        0.449s
Time for Analysis:               24.682s
CPU time for analysis:           24.670s
Total time for CPAchecker:       30.225s
Total CPU time for CPAchecker:   30.200s
Time for statistics:              0.126s

Time for Garbage Collector:       0.904s (in 68 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                106MB (   101 MiB) max;     61MB (    58 MiB) avg;    111MB (   106 MiB) peak
Used non-heap memory:             39MB (    37 MiB) max;     34MB (    32 MiB) avg;     39MB (    37 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        41MB (    39 MiB) max;     36MB (    34 MiB) avg
Total process virtual memory:   8086MB (  7712 MiB) max;   8072MB (  7698 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
