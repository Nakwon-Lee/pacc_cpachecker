scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.16-rc1/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--usb--serial--sierra.ko-entry_point_true-unreach-call.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_jt8_tfcr/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

line 5943: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___5 = ldv_zalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_detach_1 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_dev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_set_interface to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_autopm_get_interface to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_control_msg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_autopm_put_interface to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_kill_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_kill_anchored_urbs to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_get_from_anchor to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_anchor_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_autopm_get_interface_async to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_free_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_autopm_put_interface_async to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_autopm_get_interface_no_resume to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_serial_deregister_drivers to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_serial_register_drivers to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_final_state to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __raw_spin_lock_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __init_waitqueue_head to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_alloc_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_clear_halt to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_submit_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tty_port_tty_hangup to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            336727 (19% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  318166 (94%)
  Because of loop head:            17809 (5%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         752 (0%)
  Times precision was empty:       66010 (20%)
  Times precision was {false}:     4330 (1%)
  Times result was cached:         257794 (77%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      8593 (3%)
  Times result was 'false':        60711 (18%)
Number of strengthen sat checks:   0
Number of coverage checks:         239875
  BDD entailment checks:           54515
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       42
Number of predicates discovered:          17
Number of abstraction locations:          184
Max number of predicates per location:    9
Avg number of predicates per location:    2
Total predicates per abstraction:         671714
Max number of predicates per abstraction: 9
Avg number of predicates per abstraction: 51.98
Number of irrelevant predicates:          330280 (49%)
Number of preds handled by boolean abs:   17561 (3%)
  Total number of models for allsat:      6396
  Max number of models for allsat:        14
  Avg number of models for allsat:        0.74

Time for post operator:                 22.693s
  Time for path formula creation:       21.697s
Time for strengthen operator:            1.782s
Time for prec operator:                 55.830s
  Time for abstraction:                 51.629s (Max:     0.382s, Count: 336727)
    Boolean abstraction:                 4.845s
    Solving time:                        4.681s (Max:     0.014s)
    Model enumeration time:              0.463s
    Time for BDD construction:           0.168s (Max:     0.007s)
Time for merge operator:                 1.352s
Time for coverage check:                 0.197s
  Time for BDD entailment checks:        0.171s
Total time for SMT solver (w/o itp):     5.144s

Number of path formula cache hits:   1797056 (87%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    16.514s

Total number of created targets for pointer analysis: 5588
   Number of created targets for uf: *(void)* is 1313
   Number of created targets for uf: *signed_int is 248
   Number of created targets for uf: *(struct_urb)* is 76
   Number of created targets for uf: *unsigned_int is 21
   Number of created targets for uf: *unsigned_long_int is 1195


Number of BDD nodes:                               1681
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       15644 (count: 203659, min: 0, max: 415, avg: 0.08)
Time for BDD node cleanup:                             0.080s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  3.093s
  Time for transition matches:                         1.643s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.020s
Automaton transfers with branching:                0
Automaton transfer successors:                      1758453 (count: 1758453, min: 1, max: 1, avg: 1.00) [1 x 1758453]

CPA algorithm statistics
------------------------
Number of iterations:            1213771
Max size of waitlist:            121
Average size of waitlist:        45
Number of computed successors:   1422227
Max successors for one state:    2
Number of times merged:          92680
Number of times stopped:         128243
Number of times breaked:         752

Total time for CPA algorithm:       121.004s (Max:     1.619s)
  Time for choose from waitlist:      0.724s
  Time for precision adjustment:     65.903s
  Time for transfer relation:        42.803s
  Time for merge operator:            2.873s
  Time for stop operator:             1.912s
  Time for adding to reached set:     2.519s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   752
Avg. length of target path (in blocks):               47653 (count: 752, min: 12, max: 135, avg: 63.37)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  21.080s
  Counterexample analysis:                            17.643s (Max:     0.085s, Calls: 752)
    Refinement sat check:                             11.000s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.049s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.178s
  Precision update:                                    0.383s
  ARG update:                                          2.427s

Length of refined path (in blocks):                   38435 (count: 752, min: 8, max: 95, avg: 51.11)
Number of affected states:                            10105 (count: 752, min: 1, max: 94, avg: 13.44)
Length (states) of path with itp 'true':              27578 (count: 752, min: 0, max: 78, avg: 36.67)
Length (states) of path with itp non-trivial itp:     10105 (count: 752, min: 1, max: 94, avg: 13.44)
Length (states) of path with itp 'false':               752 (count: 752, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:         119 (count: 752, min: 0, max: 2, avg: 0.16)
Equal non-trivial interpolants along paths:            9234 (count: 752, min: 0, max: 93, avg: 12.28)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                752
Number of successful refinements:     752
Number of failed refinements:         0
Max. size of reached set before ref.: 10727
Max. size of reached set after ref.:  8763
Avg. size of reached set before ref.: 4804.25
Avg. size of reached set after ref.:  3170.91

Total time for CEGAR algorithm:     146.951s
Time for refinements:                24.304s
Average time for refinement:          0.032s
Max time for refinement:              0.176s

Code Coverage
-----------------------------
  Function coverage:      0.375
  Visited lines:          1188
  Total lines:            2049
  Line coverage:          0.580
  Visited conditions:     270
  Total conditions:       450
  Condition coverage:     0.600

CPAchecker general statistics
-----------------------------
Number of program locations:     2767
Number of CFA edges:             3132
Number of relevant variables:    374
Number of functions:             88
Number of loops:                 13
Size of reached set:             5005
  Number of reached locations:   628 (23%)
    Avg states per location:     7
    Max states per location:     56 (at node N118)
  Number of reached functions:   33 (38%)
  Number of partitions:          4986
    Avg size of partitions:      1
    Max size of partitions:      6 (with key [N1491 (before line 5951), Function main called from node N1452, stack depth 1 [746b18fd], stack [main]])
  Number of target states:       0

Time for analysis setup:          5.270s
  Time for loading CPAs:          0.938s
  Time for loading parser:        0.699s
  Time for CFA construction:      3.512s
    Time for parsing file(s):     1.063s
    Time for AST to CFA:          1.121s
    Time for CFA sanity check:    0.234s
    Time for post-processing:     0.909s
      Time for var class.:        0.424s
Time for Analysis:              146.952s
CPU time for analysis:          146.920s
Time for analyzing result:        0.009s
Total time for CPAchecker:      152.225s
Total CPU time for CPAchecker:  152.190s
Time for statistics:              0.186s

Time for Garbage Collector:       7.115s (in 482 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                214MB (   204 MiB) max;    107MB (   102 MiB) avg;    223MB (   213 MiB) peak
Used non-heap memory:             40MB (    38 MiB) max;     38MB (    36 MiB) avg;     40MB (    38 MiB) peak
Allocated heap memory:           241MB (   230 MiB) max;    171MB (   163 MiB) avg
Allocated non-heap memory:        42MB (    40 MiB) max;     40MB (    39 MiB) avg
Total process virtual memory:   8088MB (  7714 MiB) max;   8044MB (  7671 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
