scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.16-rc1/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--usb--serial--sierra.ko-entry_point_true-unreach-call.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_0y3v7rgu/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

line 5943: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___5 = ldv_zalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_detach_1 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_dev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_autopm_get_interface_async to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tty_port_tty_hangup to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_get_from_anchor to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_free_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_autopm_put_interface_async to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_kill_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_set_interface to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_autopm_get_interface to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_control_msg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_autopm_put_interface to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_anchor_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_kill_anchored_urbs to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_autopm_get_interface_no_resume to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_serial_register_drivers to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_serial_deregister_drivers to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_final_state to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_alloc_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __raw_spin_lock_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __init_waitqueue_head to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_clear_halt to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_submit_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            42852 (19% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  40829 (95%)
  Because of loop head:            1938 (5%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         85 (0%)
  Times precision was empty:       25572 (60%)
  Times precision was {false}:     768 (2%)
  Times result was cached:         16237 (38%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      275 (1%)
  Times result was 'false':        4440 (10%)
Number of strengthen sat checks:   0
Number of coverage checks:         27491
  BDD entailment checks:           4501
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       42
Number of predicates discovered:          8
Number of abstraction locations:          101
Max number of predicates per location:    6
Avg number of predicates per location:    1
Total predicates per abstraction:         22303
Max number of predicates per abstraction: 6
Avg number of predicates per abstraction: 21.38
Number of irrelevant predicates:          15154 (68%)
Number of preds handled by boolean abs:   488 (2%)
  Total number of models for allsat:      245
  Max number of models for allsat:        5
  Avg number of models for allsat:        0.89

Time for post operator:                  4.535s
  Time for path formula creation:        4.318s
Time for strengthen operator:            0.395s
Time for prec operator:                  6.312s
  Time for abstraction:                  5.263s (Max:     0.043s, Count: 42852)
    Boolean abstraction:                 0.480s
    Solving time:                        0.546s (Max:     0.016s)
    Model enumeration time:              0.046s
    Time for BDD construction:           0.063s (Max:     0.008s)
Time for merge operator:                 0.303s
Time for coverage check:                 0.067s
  Time for BDD entailment checks:        0.052s
Total time for SMT solver (w/o itp):     0.592s

Number of path formula cache hits:   251596 (94%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     3.142s

Total number of created targets for pointer analysis: 347
   Number of created targets for uf: *(void)* is 25
   Number of created targets for uf: *signed_int is 2
   Number of created targets for uf: *(struct_urb)* is 4
   Number of created targets for uf: *unsigned_int is 4
   Number of created targets for uf: *unsigned_long_int is 234


Number of BDD nodes:                               313
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         665 (count: 36499, min: 0, max: 92, avg: 0.02)
Time for BDD node cleanup:                             0.022s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.783s
  Time for transition matches:                         0.387s
  Time for transition assertions:                      0.001s
  Time for transition actions:                         0.004s
Automaton transfers with branching:                0
Automaton transfer successors:                       222252 (count: 222252, min: 1, max: 1, avg: 1.00) [1 x 222252]

CPA algorithm statistics
------------------------
Number of iterations:            152063
Max size of waitlist:            135
Average size of waitlist:        61
Number of computed successors:   176199
Max successors for one state:    2
Number of times merged:          11495
Number of times stopped:         15565
Number of times breaked:         85

Total time for CPA algorithm:        21.460s (Max:     1.465s)
  Time for choose from waitlist:      0.280s
  Time for precision adjustment:      8.485s
  Time for transfer relation:         9.678s
  Time for merge operator:            0.665s
  Time for stop operator:             0.425s
  Time for adding to reached set:     0.638s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   85
Avg. length of target path (in blocks):                3365 (count: 85, min: 12, max: 72, avg: 39.59)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   2.707s
  Counterexample analysis:                             1.789s (Max:     0.053s, Calls: 85)
    Refinement sat check:                              1.224s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.006s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.073s
  Precision update:                                    0.088s
  ARG update:                                          0.650s

Length of refined path (in blocks):                    2615 (count: 85, min: 8, max: 51, avg: 30.76)
Number of affected states:                             1115 (count: 85, min: 1, max: 50, avg: 13.12)
Length (states) of path with itp 'true':               1415 (count: 85, min: 0, max: 35, avg: 16.65)
Length (states) of path with itp non-trivial itp:      1115 (count: 85, min: 1, max: 50, avg: 13.12)
Length (states) of path with itp 'false':                85 (count: 85, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 85, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:            1030 (count: 85, min: 0, max: 49, avg: 12.12)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                85
Number of successful refinements:     85
Number of failed refinements:         0
Max. size of reached set before ref.: 7196
Max. size of reached set after ref.:  5089
Avg. size of reached set before ref.: 3689.49
Avg. size of reached set after ref.:  1858.11

Total time for CEGAR algorithm:      24.860s
Time for refinements:                 3.227s
Average time for refinement:          0.037s
Max time for refinement:              0.098s

Code Coverage
-----------------------------
  Function coverage:      0.159
  Visited lines:          985
  Total lines:            2049
  Line coverage:          0.481
  Visited conditions:     224
  Total conditions:       450
  Condition coverage:     0.498

CPAchecker general statistics
-----------------------------
Number of program locations:     2767
Number of CFA edges:             3132
Number of relevant variables:    374
Number of functions:             88
Number of loops:                 13
Size of reached set:             526
  Number of reached locations:   403 (15%)
    Avg states per location:     1
    Max states per location:     8 (at node N118)
  Number of reached functions:   14 (16%)
  Number of partitions:          526
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0
  Size of final wait list        13

Time for analysis setup:          5.417s
  Time for loading CPAs:          1.034s
  Time for loading parser:        0.713s
  Time for CFA construction:      3.555s
    Time for parsing file(s):     1.024s
    Time for AST to CFA:          1.215s
    Time for CFA sanity check:    0.235s
    Time for post-processing:     0.894s
      Time for var class.:        0.465s
Time for Analysis:               24.860s
CPU time for analysis:           24.850s
Total time for CPAchecker:       30.282s
Total CPU time for CPAchecker:   30.260s
Time for statistics:              0.102s

Time for Garbage Collector:       0.823s (in 66 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 81MB (    77 MiB) max;     50MB (    48 MiB) avg;     85MB (    81 MiB) peak
Used non-heap memory:             39MB (    37 MiB) max;     34MB (    33 MiB) avg;     39MB (    37 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        41MB (    39 MiB) max;     36MB (    35 MiB) avg
Total process virtual memory:   8085MB (  7710 MiB) max;   8072MB (  7698 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
