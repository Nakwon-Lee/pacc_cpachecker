scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.16-rc1/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--media--usb--cx231xx--cx231xx.ko-entry_point_true-unreach-call.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_1u5oys1v/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 7948: Dead code detected: __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "m" (__preempt_count)); (CFACreationUtils.addEdgeToCFA, INFO)

line 7951: Dead code detected: __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "m" (__preempt_count)); (CFACreationUtils.addEdgeToCFA, INFO)

line 7957: Dead code detected: __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret__): "m" (__preempt_count)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (4UL) {
  case 1UL:
  __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "m" (__preempt_count));
  goto ldv_6004;
  case 2UL:
  __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "m" (__preempt_count));
  goto ldv_6004;
  case 4UL:
  __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "m" (__preempt_count));
  goto ldv_6004;
  case 8UL:
  __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret__): "m" (__preempt_count));
  goto ldv_6004;
  default:
  __bad_percpu_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

lines 23072-23073: Dead code detected: __asm__ volatile (".pushsection .smp_locks,\"a\"\n.balign 4\n.long 671f - .\n.popsection\n671:\n\tlock; xaddb %b0, %1\n": "+q" (__ret),
                       "+m" (v->counter): : "memory", "cc"); (CFACreationUtils.addEdgeToCFA, INFO)

lines 23076-23077: Dead code detected: __asm__ volatile (".pushsection .smp_locks,\"a\"\n.balign 4\n.long 671f - .\n.popsection\n671:\n\tlock; xaddw %w0, %1\n": "+r" (__ret),
                       "+m" (v->counter): : "memory", "cc"); (CFACreationUtils.addEdgeToCFA, INFO)

lines 23084-23085: Dead code detected: __asm__ volatile (".pushsection .smp_locks,\"a\"\n.balign 4\n.long 671f - .\n.popsection\n671:\n\tlock; xaddq %q0, %1\n": "+r" (__ret),
                       "+m" (v->counter): : "memory", "cc"); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (4UL) {
  case 1UL:
  __asm__ volatile (".pushsection .smp_locks,\"a\"\n.balign 4\n.long 671f - .\n.popsection\n671:\n\tlock; xaddb %b0, %1\n": "+q" (__ret),
                       "+m" (v->counter): : "memory", "cc");
  goto ldv_5626;
  case 2UL:
  __asm__ volatile (".pushsection .smp_locks,\"a\"\n.balign 4\n.long 671f - .\n.popsection\n671:\n\tlock; xaddw %w0, %1\n": "+r" (__ret),
                       "+m" (v->counter): : "memory", "cc");
  goto ldv_5626;
  case 4UL:
  __asm__ volatile (".pushsection .smp_locks,\"a\"\n.balign 4\n.long 671f - .\n.popsection\n671:\n\tlock; xaddl %0, %1\n": "+r" (__ret),
                       "+m" (v->counter): : "memory", "cc");
  goto ldv_5626;
  case 8UL:
  __asm__ volatile (".pushsection .smp_locks,\"a\"\n.balign 4\n.long 671f - .\n.popsection\n671:\n\tlock; xaddq %q0, %1\n": "+r" (__ret),
                       "+m" (v->counter): : "memory", "cc");
  goto ldv_5626;
  default:
  __xadd_wrong_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 23118: Dead code detected: __ptr = (u8 volatile *)(& v->counter); (CFACreationUtils.addEdgeToCFA, INFO)

line 23123: Dead code detected: __ptr___0 = (u16 volatile *)(& v->counter); (CFACreationUtils.addEdgeToCFA, INFO)

line 23133: Dead code detected: __ptr___2 = (u64 volatile *)(& v->counter); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (4UL) {
  case 1UL:
  __ptr = (u8 volatile *)(& v->counter);
  __asm__ volatile (".pushsection .smp_locks,\"a\"\n.balign 4\n.long 671f - .\n.popsection\n671:\n\tlock; cmpxchgb %2,%1": "=a" (__ret),
                       "+m" (*__ptr): "q" (__new), "0" (__old): "memory");
  goto ldv_5646;
  case 2UL:
  __ptr___0 = (u16 volatile *)(& v->counter);
  __asm__ volatile (".pushsection .smp_locks,\"a\"\n.balign 4\n.long 671f - .\n.popsection\n671:\n\tlock; cmpxchgw %2,%1": "=a" (__ret),
                       "+m" (*__ptr___0): "r" (__new), "0" (__old): "memory");
  goto ldv_5646;
  case 4UL:
  __ptr___1 = (u32 volatile *)(& v->counter);
  __asm__ volatile (".pushsection .smp_locks,\"a\"\n.balign 4\n.long 671f - .\n.popsection\n671:\n\tlock; cmpxchgl %2,%1": "=a" (__ret),
                       "+m" (*__ptr___1): "r" (__new), "0" (__old): "memory");
  goto ldv_5646;
  case 8UL:
  __ptr___2 = (u64 volatile *)(& v->counter);
  __asm__ volatile (".pushsection .smp_locks,\"a\"\n.balign 4\n.long 671f - .\n.popsection\n671:\n\tlock; cmpxchgq %2,%1": "=a" (__ret),
                       "+m" (*__ptr___2): "r" (__new), "0" (__old): "memory");
  goto ldv_5646;
  default:
  __cmpxchg_wrong_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 14313: Function pointer *(dev->sd_cx25840->ops->core->load_fw) with type int (*)(struct v4l2_subdev *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 10797: Function pointer *(__sd->ops->core->s_power) with type int (*)(struct v4l2_subdev *, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 14361: Function pointer *(__sd->ops->video->s_stream) with type int (*)(struct v4l2_subdev *, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 14269: Function pointer *(__sd->ops->tuner->s_frequency) with type int (*)(struct v4l2_subdev *, const struct v4l2_frequency *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 14251: Function pointer *(dev->sd_tuner->ops->tuner->s_type_addr) with type int (*)(struct v4l2_subdev *, struct tuner_setup *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9784: Function pointer *(__sd->ops->tuner->g_tuner) with type int (*)(struct v4l2_subdev *, struct v4l2_tuner *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 12846-12847: Function pointer *(dev->cx231xx_gpio_i2c_write) with type int (*)(struct cx231xx *, u8 , u8 *, u8 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 12848-12849: Function pointer *(dev->cx231xx_gpio_i2c_read) with type int (*)(struct cx231xx *, u8 , u8 *, u8 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 12920-12921: Function pointer *(dev->cx231xx_gpio_i2c_write) with type int (*)(struct cx231xx *, u8 , u8 *, u8 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 12922-12923: Function pointer *(dev->cx231xx_gpio_i2c_read) with type int (*)(struct cx231xx *, u8 , u8 *, u8 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 12746-12747: Function pointer *(dev->cx231xx_gpio_i2c_write) with type int (*)(struct cx231xx *, u8 , u8 *, u8 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 11433: Function pointer *(__sd->ops->video->s_std) with type int (*)(struct v4l2_subdev *, v4l2_std_id ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 25358: Function pointer *(__sd->ops->audio->s_clock_freq) with type int (*)(struct v4l2_subdev *, u32 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9916: Function pointer *(__sd___0->ops->tuner->g_frequency) with type int (*)(struct v4l2_subdev *, struct v4l2_frequency *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9890: Function pointer *(__sd->ops->tuner->s_frequency) with type int (*)(struct v4l2_subdev *, const struct v4l2_frequency *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9722: Function pointer *(__sd->ops->video->s_std) with type int (*)(struct v4l2_subdev *, v4l2_std_id ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 25323: Function pointer *(dev->sd_cx25840->ops->video->s_mbus_fmt) with type int (*)(struct v4l2_subdev *, struct v4l2_mbus_framefmt *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 10613: Function pointer *(__sd->ops->tuner->s_radio) with type int (*)(struct v4l2_subdev *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 8174: Function pointer *(p->_qproc) with type void (*)(struct file *, wait_queue_head_t *, struct poll_table_struct *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 10456: Function pointer *(__sd->ops->tuner->g_tuner) with type int (*)(struct v4l2_subdev *, struct v4l2_tuner *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 10501: Function pointer *(__sd->ops->tuner->s_tuner) with type int (*)(struct v4l2_subdev *, const struct v4l2_tuner *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 24972: Function pointer *(__sd->ops->core->log_status) with type int (*)(struct v4l2_subdev *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 24757: Function pointer *(__sd->ops->core->s_ctrl) with type int (*)(struct v4l2_subdev *, struct v4l2_control *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9476: Function pointer *(__sd->ops->video->s_mbus_fmt) with type int (*)(struct v4l2_subdev *, struct v4l2_mbus_framefmt *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9589: Function pointer *(__sd___0->ops->video->s_mbus_fmt) with type int (*)(struct v4l2_subdev *, struct v4l2_mbus_framefmt *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9559: Function pointer *(__sd->ops->video->s_std) with type int (*)(struct v4l2_subdev *, v4l2_std_id ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 24703: Function pointer *(__sd->ops->video->s_std) with type int (*)(struct v4l2_subdev *, v4l2_std_id ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 10224: Function pointer *(dev->sd_cx25840->ops->video->s_stream) with type int (*)(struct v4l2_subdev *, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 10179: Function pointer *(__sd->ops->video->s_stream) with type int (*)(struct v4l2_subdev *, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function find_first_zero_bit to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 25323: Ignoring function call through function pointer *(dev->sd_cx25840->ops->video->s_mbus_fmt): (*(dev->sd_cx25840->ops->video->s_mbus_fmt))(dev->sd_cx25840, &fmt); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 25358: Ignoring function call through function pointer *(__sd->ops->audio->s_clock_freq): tmp = (*(__sd->ops->audio->s_clock_freq))(__sd, freqs[idx]); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 25581: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp = ldv_zalloc(184UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 12319: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___1 = ldv_zalloc(16UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function video_ioctl2 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function v4l2_ctrl_poll to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function video_devdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock_nested to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 12961: Ignoring function call through function pointer *(dev->cx231xx_send_usb_command): status = (*(dev->cx231xx_send_usb_command))(bus, &req_data); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

lines 12746-12747: Ignoring function call through function pointer *(dev->cx231xx_gpio_i2c_write): tmp = (*(dev->cx231xx_gpio_i2c_write))(dev, (int)__CPAchecker_TMP_5, __CPAchecker_TMP_6, (int)__CPAchecker_TMP_7); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 12788: Ignoring function call through function pointer *(dev->cx231xx_send_usb_command): status = (*(dev->cx231xx_send_usb_command))(bus, &req_data); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 12767: Ignoring function call through function pointer *(dev->cx231xx_send_usb_command): status = (*(dev->cx231xx_send_usb_command))(bus, &req_data); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 12863: Ignoring function call through function pointer *(dev->cx231xx_send_usb_command): status = (*(dev->cx231xx_send_usb_command))(bus, &req_data); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

lines 12846-12847: Ignoring function call through function pointer *(dev->cx231xx_gpio_i2c_write): status = (*(dev->cx231xx_gpio_i2c_write))(dev, (int)__CPAchecker_TMP_6, __CPAchecker_TMP_7, (int)__CPAchecker_TMP_8); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

lines 12848-12849: Ignoring function call through function pointer *(dev->cx231xx_gpio_i2c_read): status = (*(dev->cx231xx_gpio_i2c_read))(dev, (int)__CPAchecker_TMP_9, __CPAchecker_TMP_10, (int)__CPAchecker_TMP_11); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 12871: Ignoring function call through function pointer *(dev->cx231xx_send_usb_command): status = (*(dev->cx231xx_send_usb_command))(bus, &req_data); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

lines 12920-12921: Ignoring function call through function pointer *(dev->cx231xx_gpio_i2c_write): status = (*(dev->cx231xx_gpio_i2c_write))(dev, (int)__CPAchecker_TMP_7, __CPAchecker_TMP_8, (int)__CPAchecker_TMP_9); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

lines 12922-12923: Ignoring function call through function pointer *(dev->cx231xx_gpio_i2c_read): status = (*(dev->cx231xx_gpio_i2c_read))(dev, (int)__CPAchecker_TMP_10, __CPAchecker_TMP_11, (int)__CPAchecker_TMP_12); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 12940: Ignoring function call through function pointer *(dev->cx231xx_send_usb_command): status = (*(dev->cx231xx_send_usb_command))(bus, &req_data); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 12275: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp = ldv_zalloc(1840UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function ldv_probe_10 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function video_device_release to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 11867: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___0 = ldv_zalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 25583: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___0 = ldv_zalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function videobuf_iolock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

lines 9242-9243: Ignoring function call through function pointer *(dev->sd_cx25840->ops->video->s_routing): (*(dev->sd_cx25840->ops->video->s_routing))(dev->sd_cx25840, (((struct cx231xx_input *)(&((cx231xx_boards[dev->model]).input))) + ((unsigned long)index))->vmux, 0U, 0U); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

lines 17521-17522: Ignoring function call through function pointer *(dev->cx231xx_send_usb_command): status = (*(dev->cx231xx_send_usb_command))((struct cx231xx_i2c *)(&(dev->i2c_bus)), &req_data); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 11869: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___1 = ldv_zalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 25766: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___2 = ldv_zalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 25593: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___5 = ldv_zalloc(8UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 11660: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___3 = ldv_zalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 11875: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___4 = ldv_zalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 11879: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___6 = ldv_zalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 25774: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___6 = ldv_zalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 11666: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___6 = ldv_zalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 25776: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___7 = ldv_zalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 25778: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___8 = ldv_zalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 25784: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___11 = ldv_zalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 25786: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___12 = ldv_zalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 25788: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___13 = ldv_zalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function v4l2_ctrl_subscribe_event to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function v4l2_event_unsubscribe to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 15044: Destroying the void* pointer ldv_main_exported_8::tmp___1 produces garbage or the memory pointed by it is unused: ldv_main_exported_8(); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 15044: Destroying the void* pointer ldv_main_exported_8::tmp___12 produces garbage or the memory pointed by it is unused: ldv_main_exported_8(); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 15044: Destroying the void* pointer ldv_main_exported_8::tmp___13 produces garbage or the memory pointed by it is unused: ldv_main_exported_8(); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 15044: Destroying the void* pointer ldv_main_exported_8::tmp___14 produces garbage or the memory pointed by it is unused: ldv_main_exported_8(); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 15044: Destroying the void* pointer ldv_main_exported_8::tmp___4 produces garbage or the memory pointed by it is unused: ldv_main_exported_8(); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 15044: Destroying the void* pointer ldv_main_exported_8::tmp___5 produces garbage or the memory pointed by it is unused: ldv_main_exported_8(); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function strcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

lines 17476-17477: Ignoring function call through function pointer *(dev->cx231xx_send_usb_command): status = (*(dev->cx231xx_send_usb_command))((struct cx231xx_i2c *)(&(dev->i2c_bus)), &req_data); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function strlcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 10501: Ignoring function call through function pointer *(__sd->ops->tuner->s_tuner): tmp = (*(__sd->ops->tuner->s_tuner))(__sd, t); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 10456: Ignoring function call through function pointer *(__sd->ops->tuner->g_tuner): tmp = (*(__sd->ops->tuner->g_tuner))(__sd, t); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 25794: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___16 = ldv_zalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 25798: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___18 = ldv_zalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 25802: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___20 = ldv_zalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 25806: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___22 = ldv_zalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 25812: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___25 = ldv_zalloc(20UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 11927: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___30 = ldv_zalloc(20UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 25826: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___32 = ldv_zalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 25828: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___33 = ldv_zalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 25832: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___35 = ldv_zalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 15009: Destroying the void* pointer ldv_main_exported_3::tmp produces garbage or the memory pointed by it is unused: ldv_main_exported_3(); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 15009: Destroying the void* pointer ldv_main_exported_3::tmp___15 produces garbage or the memory pointed by it is unused: ldv_main_exported_3(); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 15009: Destroying the void* pointer ldv_main_exported_3::tmp___17 produces garbage or the memory pointed by it is unused: ldv_main_exported_3(); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 15009: Destroying the void* pointer ldv_main_exported_3::tmp___19 produces garbage or the memory pointed by it is unused: ldv_main_exported_3(); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 15009: Destroying the void* pointer ldv_main_exported_3::tmp___27 produces garbage or the memory pointed by it is unused: ldv_main_exported_3(); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 15009: Destroying the void* pointer ldv_main_exported_3::tmp___28 produces garbage or the memory pointed by it is unused: ldv_main_exported_3(); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 15009: Destroying the void* pointer ldv_main_exported_3::tmp___3 produces garbage or the memory pointed by it is unused: ldv_main_exported_3(); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 15009: Destroying the void* pointer ldv_main_exported_3::tmp___34 produces garbage or the memory pointed by it is unused: ldv_main_exported_3(); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 15009: Destroying the void* pointer ldv_main_exported_3::tmp___36 produces garbage or the memory pointed by it is unused: ldv_main_exported_3(); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 15009: Destroying the void* pointer ldv_main_exported_3::tmp___4 produces garbage or the memory pointed by it is unused: ldv_main_exported_3(); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function cx2341x_handler_set_50hz to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_set_interface to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 24703: Ignoring function call through function pointer *(__sd->ops->video->s_std): tmp = (*(__sd->ops->video->s_std))(__sd, dev->norm); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 24757: Ignoring function call through function pointer *(__sd->ops->core->s_ctrl): tmp = (*(__sd->ops->core->s_ctrl))(__sd, ctl); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 24972: Ignoring function call through function pointer *(__sd->ops->core->log_status): tmp = (*(__sd->ops->core->log_status))(__sd); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 15002: Destroying the void* pointer ldv_main_exported_11::tmp___10 produces garbage or the memory pointed by it is unused: ldv_main_exported_11(); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 15002: Destroying the void* pointer ldv_main_exported_11::tmp___13 produces garbage or the memory pointed by it is unused: ldv_main_exported_11(); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 15002: Destroying the void* pointer ldv_main_exported_11::tmp___16 produces garbage or the memory pointed by it is unused: ldv_main_exported_11(); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 15002: Destroying the void* pointer ldv_main_exported_11::tmp___17 produces garbage or the memory pointed by it is unused: ldv_main_exported_11(); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 15002: Destroying the void* pointer ldv_main_exported_11::tmp___18 produces garbage or the memory pointed by it is unused: ldv_main_exported_11(); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 15002: Destroying the void* pointer ldv_main_exported_11::tmp___19 produces garbage or the memory pointed by it is unused: ldv_main_exported_11(); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 15002: Destroying the void* pointer ldv_main_exported_11::tmp___2 produces garbage or the memory pointed by it is unused: ldv_main_exported_11(); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 15002: Destroying the void* pointer ldv_main_exported_11::tmp___20 produces garbage or the memory pointed by it is unused: ldv_main_exported_11(); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 15002: Destroying the void* pointer ldv_main_exported_11::tmp___21 produces garbage or the memory pointed by it is unused: ldv_main_exported_11(); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 15002: Destroying the void* pointer ldv_main_exported_11::tmp___23 produces garbage or the memory pointed by it is unused: ldv_main_exported_11(); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 15002: Destroying the void* pointer ldv_main_exported_11::tmp___26 produces garbage or the memory pointed by it is unused: ldv_main_exported_11(); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 15002: Destroying the void* pointer ldv_main_exported_11::tmp___27 produces garbage or the memory pointed by it is unused: ldv_main_exported_11(); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 15002: Destroying the void* pointer ldv_main_exported_11::tmp___28 produces garbage or the memory pointed by it is unused: ldv_main_exported_11(); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 15002: Destroying the void* pointer ldv_main_exported_11::tmp___32 produces garbage or the memory pointed by it is unused: ldv_main_exported_11(); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 15002: Destroying the void* pointer ldv_main_exported_11::tmp___35 produces garbage or the memory pointed by it is unused: ldv_main_exported_11(); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 15002: Destroying the void* pointer ldv_main_exported_11::tmp___36 produces garbage or the memory pointed by it is unused: ldv_main_exported_11(); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 15002: Destroying the void* pointer ldv_main_exported_11::tmp___37 produces garbage or the memory pointed by it is unused: ldv_main_exported_11(); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 15002: Destroying the void* pointer ldv_main_exported_11::tmp___38 produces garbage or the memory pointed by it is unused: ldv_main_exported_11(); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 15002: Destroying the void* pointer ldv_main_exported_11::tmp___39 produces garbage or the memory pointed by it is unused: ldv_main_exported_11(); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 15002: Destroying the void* pointer ldv_main_exported_11::tmp___40 produces garbage or the memory pointed by it is unused: ldv_main_exported_11(); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 15002: Destroying the void* pointer ldv_main_exported_11::tmp___5 produces garbage or the memory pointed by it is unused: ldv_main_exported_11(); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 15002: Destroying the void* pointer ldv_main_exported_11::tmp___8 produces garbage or the memory pointed by it is unused: ldv_main_exported_11(); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 15002: Destroying the void* pointer ldv_main_exported_11::tmp___9 produces garbage or the memory pointed by it is unused: ldv_main_exported_11(); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function msleep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snprintf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function v4l2_event_pending to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 8174: Ignoring function call through function pointer *(p->_qproc): (*(p->_qproc))(filp, wait_address, p); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 9784: Ignoring function call through function pointer *(__sd->ops->tuner->g_tuner): tmp = (*(__sd->ops->tuner->g_tuner))(__sd, t); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function videobuf_queue_is_busy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 9559: Ignoring function call through function pointer *(__sd->ops->video->s_std): tmp___0 = (*(__sd->ops->video->s_std))(__sd, dev->norm); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 9589: Ignoring function call through function pointer *(__sd___0->ops->video->s_mbus_fmt): tmp___1 = (*(__sd___0->ops->video->s_mbus_fmt))(__sd___0, &mbus_fmt); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 10224: Ignoring function call through function pointer *(dev->sd_cx25840->ops->video->s_stream): (*(dev->sd_cx25840->ops->video->s_stream))(dev->sd_cx25840, 0); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function videobuf_streamoff to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function v4l_bound_align_image to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 9476: Ignoring function call through function pointer *(__sd->ops->video->s_mbus_fmt): tmp___0 = (*(__sd->ops->video->s_mbus_fmt))(__sd, &mbus_fmt); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function usb_deregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function v4l2_fh_del to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function videobuf_stop to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function videobuf_mmap_free to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function v4l2_fh_exit to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __wake_up to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 10797: Ignoring function call through function pointer *(__sd->ops->core->s_power): tmp___1 = (*(__sd->ops->core->s_power))(__sd, 0); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function v4l2_ctrl_handler_free to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function i2c_unregister_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __list_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_final_state to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function flush_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 11598: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___0 = ldv_zalloc(32UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 11600: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___1 = ldv_zalloc(176UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 25530: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___1 = ldv_zalloc(32UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 25532: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___2 = ldv_zalloc(176UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 25534: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___3 = ldv_zalloc(88UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 11570: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___1 = ldv_zalloc(32UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 11572: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___2 = ldv_zalloc(176UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 11574: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___3 = ldv_zalloc(88UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            389818 (8% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  383395 (98%)
  Because of loop head:            6341 (2%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         82 (0%)
  Times precision was empty:       377987 (97%)
  Times precision was {false}:     890 (0%)
  Times result was cached:         10512 (3%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      429 (0%)
  Times result was 'false':        735 (0%)
Number of strengthen sat checks:   0
Number of coverage checks:         831243
  BDD entailment checks:           60327
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       118
Number of predicates discovered:          18
Number of abstraction locations:          98
Max number of predicates per location:    16
Avg number of predicates per location:    1
Total predicates per abstraction:         28988
Max number of predicates per abstraction: 16
Avg number of predicates per abstraction: 21.98
Number of irrelevant predicates:          24081 (83%)
Number of preds handled by boolean abs:   1208 (4%)
  Total number of models for allsat:      297358
  Max number of models for allsat:        18432
  Avg number of models for allsat:        693.14

Time for post operator:                542.572s
  Time for path formula creation:      539.630s
Time for strengthen operator:            4.492s
Time for prec operator:                 81.334s
  Time for abstraction:                 70.517s (Max:     3.858s, Count: 389818)
    Boolean abstraction:                62.817s
    Solving time:                        5.921s (Max:     0.837s)
    Model enumeration time:             49.748s
    Time for BDD construction:           9.306s (Max:     0.624s)
Time for merge operator:                50.271s
Time for coverage check:                 0.204s
  Time for BDD entailment checks:        0.117s
Total time for SMT solver (w/o itp):    55.669s

Number of path formula cache hits:   4187978 (75%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:   479.259s

Total number of created targets for pointer analysis: 6663269
   Number of created targets for uf: *(void)* is 8
   Number of created targets for uf: *enum_videobuf_state is 46
   Number of created targets for uf: *signed_int is 11664
   Number of created targets for uf: *(char)* is 4707
   Number of created targets for uf: *unsigned_char is 25743
   Number of created targets for uf: *(struct_list_head)* is 26
   Number of created targets for uf: *(unsigned_char)* is 12
   Number of created targets for uf: *unsigned_char_:_1 is 31
   Number of created targets for uf: *unsigned_long_long_int is 34
   Number of created targets for uf: *unsigned_int is 11881
   Number of created targets for uf: *enum_v4l2_buf_type is 2
   Number of created targets for uf: *unsigned_long_int is 888


Number of BDD nodes:                               263134
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        1581 (count: 445841, min: 0, max: 258, avg: 0.00)
Time for BDD node cleanup:                             0.096s
Time for BDD garbage collection:                       0.062s (in 3 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  6.889s
  Time for transition matches:                         3.987s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.001s
Automaton transfers with branching:                0
Automaton transfer successors:                      4990602 (count: 4990602, min: 1, max: 1, avg: 1.00) [1 x 4990602]

CPA algorithm statistics
------------------------
Number of iterations:            2684364
Max size of waitlist:            5427
Average size of waitlist:        2041
Number of computed successors:   3222107
Max successors for one state:    2
Number of times merged:          385458
Number of times stopped:         444497
Number of times breaked:         82

Total time for CPA algorithm:       783.338s (Max:    39.046s)
  Time for choose from waitlist:      1.746s
  Time for precision adjustment:    110.700s
  Time for transfer relation:       596.711s
  Time for merge operator:           54.902s
  Time for stop operator:             4.484s
  Time for adding to reached set:     6.841s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   82
Avg. length of target path (in blocks):                8809 (count: 82, min: 19, max: 183, avg: 107.43)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  94.830s
  Counterexample analysis:                            88.235s (Max:     1.481s, Calls: 82)
    Refinement sat check:                             81.596s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.010s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.034s
  Precision update:                                    0.058s
  ARG update:                                          6.400s

Length of refined path (in blocks):                    7813 (count: 82, min: 4, max: 176, avg: 95.28)
Number of affected states:                             1173 (count: 82, min: 1, max: 97, avg: 14.30)
Length (states) of path with itp 'true':               6558 (count: 82, min: 0, max: 174, avg: 79.98)
Length (states) of path with itp non-trivial itp:      1173 (count: 82, min: 1, max: 97, avg: 14.30)
Length (states) of path with itp 'false':                82 (count: 82, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 82, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:            1091 (count: 82, min: 0, max: 96, avg: 13.30)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                82
Number of successful refinements:     82
Number of failed refinements:         0
Max. size of reached set before ref.: 160697
Max. size of reached set after ref.:  160555
Avg. size of reached set before ref.: 114248.35
Avg. size of reached set after ref.:  81226.16

Total time for CEGAR algorithm:     892.507s
Time for refinements:               103.238s
Average time for refinement:          1.259s
Max time for refinement:              1.913s

Code Coverage
-----------------------------
  Function coverage:      0.376
  Visited lines:          4977
  Total lines:            10815
  Line coverage:          0.460
  Visited conditions:     1330
  Total conditions:       3210
  Condition coverage:     0.414

CPAchecker general statistics
-----------------------------
Number of program locations:     15094
Number of CFA edges:             17776
Number of relevant variables:    2360
Number of functions:             460
Number of loops:                 101
Size of reached set:             69055
  Number of reached locations:   3187 (21%)
    Avg states per location:     21
    Max states per location:     1302 (at node N5721)
  Number of reached functions:   173 (38%)
  Number of partitions:          69047
    Avg size of partitions:      1
    Max size of partitions:      4 (with key [N5340 (before line 14964), Function main called from node N5315, stack depth 1 [785aeba9], stack [main]])
  Number of target states:       0
  Size of final wait list        3024

Time for analysis setup:         11.343s
  Time for loading CPAs:          1.503s
  Time for loading parser:        0.681s
  Time for CFA construction:      8.985s
    Time for parsing file(s):     1.695s
    Time for AST to CFA:          3.283s
    Time for CFA sanity check:    1.140s
    Time for post-processing:     2.685s
      Time for var class.:        1.378s
Time for Analysis:              892.507s
CPU time for analysis:          892.430s
Total time for CPAchecker:      903.854s
Total CPU time for CPAchecker:  903.740s
Time for statistics:              1.043s

Time for Garbage Collector:      52.452s (in 464 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:               1933MB (  1843 MiB) max;    830MB (   791 MiB) avg;   1954MB (  1863 MiB) peak
Used non-heap memory:             48MB (    46 MiB) max;     41MB (    39 MiB) avg;     48MB (    46 MiB) peak
Allocated heap memory:          2304MB (  2197 MiB) max;   1199MB (  1143 MiB) avg
Allocated non-heap memory:        49MB (    47 MiB) max;     49MB (    46 MiB) avg
Total process virtual memory:   8242MB (  7861 MiB) max;   8175MB (  7796 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
