scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.16-rc1/205_9a_array_safes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--arcnet--com90xx.ko-entry_point_true-unreach-call.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_vyx0m9z1/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function unregister_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iounmap to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __release_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __request_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ioremap_nocache to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function probe_irq_on to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function alloc_arcdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function request_threaded_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function register_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function probe_irq_off to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            17248 (14% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  11480 (67%)
  Because of loop head:            5703 (33%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         65 (0%)
  Times precision was empty:       4837 (28%)
  Times precision was {false}:     367 (2%)
  Times result was cached:         11370 (66%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      674 (4%)
  Times result was 'false':        699 (4%)
Number of strengthen sat checks:   0
Number of coverage checks:         25178
  BDD entailment checks:           7900
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       47
Number of predicates discovered:          15
Number of abstraction locations:          94
Max number of predicates per location:    7
Avg number of predicates per location:    2
Total predicates per abstraction:         27680
Max number of predicates per abstraction: 7
Avg number of predicates per abstraction: 26.59
Number of irrelevant predicates:          9138 (33%)
Number of preds handled by boolean abs:   1119 (4%)
  Total number of models for allsat:      724
  Max number of models for allsat:        4
  Avg number of models for allsat:        1.07

Time for post operator:                  3.996s
  Time for path formula creation:        3.827s
Time for strengthen operator:            0.232s
Time for prec operator:                  7.781s
  Time for abstraction:                  7.184s (Max:     0.029s, Count: 17248)
    Boolean abstraction:                 1.405s
    Solving time:                        1.551s (Max:     0.022s)
    Model enumeration time:              0.156s
    Time for BDD construction:           0.136s (Max:     0.012s)
Time for merge operator:                 0.339s
Time for coverage check:                 0.053s
  Time for BDD entailment checks:        0.031s
Total time for SMT solver (w/o itp):     1.707s

Number of path formula cache hits:   123311 (86%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     3.332s

Total number of created targets for pointer analysis: 3152
   Number of created targets for uf: *(void)* is 196
   Number of created targets for uf: *(struct_net_device)* is 209
   Number of created targets for uf: *signed_int is 121
   Number of created targets for uf: *unsigned_long_int is 10


Number of BDD nodes:                               354
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        1530 (count: 18864, min: 0, max: 203, avg: 0.08)
Time for BDD node cleanup:                             0.010s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.446s
Automaton transfers with branching:                0
Automaton transfer successors:                       122352 (count: 122352, min: 1, max: 1, avg: 1.00) [1 x 122352]

CPA algorithm statistics
------------------------
Number of iterations:            83390
Max size of waitlist:            21
Average size of waitlist:        8
Number of computed successors:   97570
Max successors for one state:    2
Number of times merged:          8639
Number of times stopped:         13101
Number of times breaked:         65

Total time for CPA algorithm:        19.128s (Max:     0.863s)
  Time for choose from waitlist:      0.148s
  Time for precision adjustment:      9.383s
  Time for transfer relation:         6.983s
  Time for merge operator:            0.776s
  Time for stop operator:             0.439s
  Time for adding to reached set:     0.360s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   65
Avg. length of target path (in blocks):                3051 (count: 65, min: 13, max: 84, avg: 46.94)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   3.392s
  Counterexample analysis:                             2.733s (Max:     0.088s, Calls: 65)
    Refinement sat check:                              1.746s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.011s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.092s
  Precision update:                                    0.076s
  ARG update:                                          0.362s

Length of refined path (in blocks):                    2750 (count: 65, min: 6, max: 83, avg: 42.31)
Number of affected states:                             2426 (count: 65, min: 1, max: 80, avg: 37.32)
Length (states) of path with itp 'true':                259 (count: 65, min: 0, max: 48, avg: 3.98)
Length (states) of path with itp non-trivial itp:      2426 (count: 65, min: 1, max: 80, avg: 37.32)
Length (states) of path with itp 'false':                65 (count: 65, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:          52 (count: 65, min: 0, max: 1, avg: 0.80)
Equal non-trivial interpolants along paths:            2309 (count: 65, min: 0, max: 78, avg: 35.52)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                65
Number of successful refinements:     65
Number of failed refinements:         0
Max. size of reached set before ref.: 2544
Max. size of reached set after ref.:  1602
Avg. size of reached set before ref.: 1313.11
Avg. size of reached set after ref.:  78.03

Total time for CEGAR algorithm:      22.750s
Time for refinements:                 3.615s
Average time for refinement:          0.055s
Max time for refinement:              0.099s

Code Coverage
-----------------------------
  Function coverage:      0.452
  Visited lines:          1620
  Total lines:            1817
  Line coverage:          0.892
  Visited conditions:     315
  Total conditions:       362
  Condition coverage:     0.870

CPAchecker general statistics
-----------------------------
Number of program locations:     2330
Number of CFA edges:             2520
Number of relevant variables:    200
Number of functions:             62
Number of loops:                 23
Size of reached set:             3491
  Number of reached locations:   794 (34%)
    Avg states per location:     4
    Max states per location:     42 (at node N790)
  Number of reached functions:   28 (45%)
  Number of partitions:          3447
    Avg size of partitions:      1
    Max size of partitions:      5 (with key [N256 (before line 5528), Function com90xx_probe called from node N1056, stack depth 3 [55aae891], stack [main, com90xx_init, com90xx_probe]])
  Number of target states:       0

Time for analysis setup:          5.086s
  Time for loading CPAs:          0.979s
  Time for loading parser:        0.789s
  Time for CFA construction:      3.211s
    Time for parsing file(s):     1.009s
    Time for AST to CFA:          1.112s
    Time for CFA sanity check:    0.198s
    Time for post-processing:     0.722s
      Time for var class.:        0.266s
Time for Analysis:               22.754s
CPU time for analysis:           22.760s
Time for analyzing result:        0.003s
Total time for CPAchecker:       27.845s
Total CPU time for CPAchecker:   27.830s
Time for statistics:              0.132s

Time for Garbage Collector:       0.445s (in 44 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 69MB (    66 MiB) max;     46MB (    44 MiB) avg;     73MB (    69 MiB) peak
Used non-heap memory:             39MB (    38 MiB) max;     35MB (    33 MiB) avg;     40MB (    38 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        42MB (    40 MiB) max;     37MB (    35 MiB) avg
Total process virtual memory:   8087MB (  7712 MiB) max;   8072MB (  7698 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
