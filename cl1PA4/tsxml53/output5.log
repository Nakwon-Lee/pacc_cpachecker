scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.16-rc1/205_9a_array_safes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--arcnet--com90xx.ko-entry_point_true-unreach-call.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_22co_fic/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function __request_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __release_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ioremap_nocache to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iounmap to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function probe_irq_on to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function alloc_arcdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function request_threaded_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function register_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function probe_irq_off to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function unregister_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            17077 (14% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  11618 (68%)
  Because of loop head:            5372 (31%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         87 (1%)
  Times precision was empty:       4912 (29%)
  Times precision was {false}:     380 (2%)
  Times result was cached:         11037 (65%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      748 (4%)
  Times result was 'false':        724 (4%)
Number of strengthen sat checks:   0
Number of coverage checks:         25515
  BDD entailment checks:           7391
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       47
Number of predicates discovered:          15
Number of abstraction locations:          94
Max number of predicates per location:    7
Avg number of predicates per location:    2
Total predicates per abstraction:         34480
Max number of predicates per abstraction: 7
Avg number of predicates per abstraction: 30.57
Number of irrelevant predicates:          9851 (29%)
Number of preds handled by boolean abs:   1495 (4%)
  Total number of models for allsat:      819
  Max number of models for allsat:        4
  Avg number of models for allsat:        1.09

Time for post operator:                  4.196s
  Time for path formula creation:        3.970s
Time for strengthen operator:            0.189s
Time for prec operator:                  7.944s
  Time for abstraction:                  7.439s (Max:     0.025s, Count: 17077)
    Boolean abstraction:                 1.471s
    Solving time:                        1.676s (Max:     0.020s)
    Model enumeration time:              0.127s
    Time for BDD construction:           0.097s (Max:     0.010s)
Time for merge operator:                 0.327s
Time for coverage check:                 0.088s
  Time for BDD entailment checks:        0.070s
Total time for SMT solver (w/o itp):     1.803s

Number of path formula cache hits:   125803 (86%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     3.440s

Total number of created targets for pointer analysis: 3252
   Number of created targets for uf: *(void)* is 226
   Number of created targets for uf: *(struct_net_device)* is 225
   Number of created targets for uf: *signed_int is 81
   Number of created targets for uf: *unsigned_long_int is 5


Number of BDD nodes:                               376
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        1686 (count: 19015, min: 0, max: 140, avg: 0.09)
Time for BDD node cleanup:                             0.005s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.441s
Automaton transfers with branching:                0
Automaton transfer successors:                       125441 (count: 125441, min: 1, max: 1, avg: 1.00) [1 x 125441]

CPA algorithm statistics
------------------------
Number of iterations:            85628
Max size of waitlist:            19
Average size of waitlist:        7
Number of computed successors:   100157
Max successors for one state:    2
Number of times merged:          9062
Number of times stopped:         13360
Number of times breaked:         87

Total time for CPA algorithm:        19.298s (Max:     0.843s)
  Time for choose from waitlist:      0.170s
  Time for precision adjustment:      9.391s
  Time for transfer relation:         7.195s
  Time for merge operator:            0.737s
  Time for stop operator:             0.392s
  Time for adding to reached set:     0.414s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   87
Avg. length of target path (in blocks):                3637 (count: 87, min: 13, max: 86, avg: 41.80)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   3.882s
  Counterexample analysis:                             3.159s (Max:     0.099s, Calls: 87)
    Refinement sat check:                              2.110s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.008s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.132s
  Precision update:                                    0.102s
  ARG update:                                          0.350s

Length of refined path (in blocks):                    3174 (count: 87, min: 6, max: 85, avg: 36.48)
Number of affected states:                             2791 (count: 87, min: 1, max: 82, avg: 32.08)
Length (states) of path with itp 'true':                296 (count: 87, min: 0, max: 50, avg: 3.40)
Length (states) of path with itp non-trivial itp:      2791 (count: 87, min: 1, max: 82, avg: 32.08)
Length (states) of path with itp 'false':                87 (count: 87, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:          60 (count: 87, min: 0, max: 1, avg: 0.69)
Equal non-trivial interpolants along paths:            2644 (count: 87, min: 0, max: 80, avg: 30.39)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                87
Number of successful refinements:     87
Number of failed refinements:         0
Max. size of reached set before ref.: 2212
Max. size of reached set after ref.:  1582
Avg. size of reached set before ref.: 1019.37
Avg. size of reached set after ref.:  60.53

Total time for CEGAR algorithm:      23.464s
Time for refinements:                 4.154s
Average time for refinement:          0.047s
Max time for refinement:              0.113s

Code Coverage
-----------------------------
  Function coverage:      0.452
  Visited lines:          1620
  Total lines:            1817
  Line coverage:          0.892
  Visited conditions:     315
  Total conditions:       362
  Condition coverage:     0.870

CPAchecker general statistics
-----------------------------
Number of program locations:     2330
Number of CFA edges:             2520
Number of relevant variables:    200
Number of functions:             62
Number of loops:                 23
Size of reached set:             2655
  Number of reached locations:   794 (34%)
    Avg states per location:     3
    Max states per location:     30 (at node N790)
  Number of reached functions:   28 (45%)
  Number of partitions:          2607
    Avg size of partitions:      1
    Max size of partitions:      6 (with key [N342 (before line 5632), Function com90xx_probe called from node N1056, stack depth 3 [449f6452], stack [main, com90xx_init, com90xx_probe]])
  Number of target states:       0

Time for analysis setup:          5.214s
  Time for loading CPAs:          0.979s
  Time for loading parser:        0.689s
  Time for CFA construction:      3.412s
    Time for parsing file(s):     0.979s
    Time for AST to CFA:          1.236s
    Time for CFA sanity check:    0.214s
    Time for post-processing:     0.757s
      Time for var class.:        0.273s
Time for Analysis:               23.464s
CPU time for analysis:           23.460s
Time for analyzing result:        0.003s
Total time for CPAchecker:       28.682s
Total CPU time for CPAchecker:   28.670s
Time for statistics:              0.115s

Time for Garbage Collector:       0.440s (in 47 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 71MB (    68 MiB) max;     46MB (    44 MiB) avg;     74MB (    70 MiB) peak
Used non-heap memory:             41MB (    39 MiB) max;     35MB (    33 MiB) avg;     41MB (    39 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        42MB (    40 MiB) max;     37MB (    35 MiB) avg
Total process virtual memory:   8086MB (  7712 MiB) max;   8072MB (  7698 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
