scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.16-rc1/205_9a_array_safes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--arcnet--com90xx.ko-entry_point_true-unreach-call.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_022bas4z/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function unregister_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iounmap to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __release_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __request_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ioremap_nocache to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function probe_irq_on to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function alloc_arcdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function request_threaded_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function register_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function probe_irq_off to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            13368 (13% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  9170 (69%)
  Because of loop head:            4122 (31%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         76 (1%)
  Times precision was empty:       3944 (30%)
  Times precision was {false}:     563 (4%)
  Times result was cached:         7933 (59%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      928 (7%)
  Times result was 'false':        596 (4%)
Number of strengthen sat checks:   0
Number of coverage checks:         21644
  BDD entailment checks:           5960
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       47
Number of predicates discovered:          16
Number of abstraction locations:          87
Max number of predicates per location:    7
Avg number of predicates per location:    3
Total predicates per abstraction:         29255
Max number of predicates per abstraction: 7
Avg number of predicates per abstraction: 19.62
Number of irrelevant predicates:          11615 (40%)
Number of preds handled by boolean abs:   1741 (6%)
  Total number of models for allsat:      978
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.05

Time for post operator:                  4.801s
  Time for path formula creation:        4.618s
Time for strengthen operator:            0.254s
Time for prec operator:                  8.506s
  Time for abstraction:                  7.965s (Max:     0.025s, Count: 13368)
    Boolean abstraction:                 1.693s
    Solving time:                        2.183s (Max:     0.019s)
    Model enumeration time:              0.163s
    Time for BDD construction:           0.131s (Max:     0.012s)
Time for merge operator:                 0.376s
Time for coverage check:                 0.046s
  Time for BDD entailment checks:        0.039s
Total time for SMT solver (w/o itp):     2.346s

Number of path formula cache hits:   82829 (71%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     4.173s

Total number of created targets for pointer analysis: 4507
   Number of created targets for uf: *(void)* is 331
   Number of created targets for uf: *(struct_net_device)* is 385
   Number of created targets for uf: *signed_int is 481
   Number of created targets for uf: *unsigned_long_int is 5


Number of BDD nodes:                               370
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        2150 (count: 18571, min: 0, max: 258, avg: 0.12)
Time for BDD node cleanup:                             0.017s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.487s
Automaton transfers with branching:                0
Automaton transfer successors:                       101994 (count: 101994, min: 1, max: 1, avg: 1.00) [1 x 101994]

CPA algorithm statistics
------------------------
Number of iterations:            69089
Max size of waitlist:            36
Average size of waitlist:        14
Number of computed successors:   81568
Max successors for one state:    2
Number of times merged:          7842
Number of times stopped:         10962
Number of times breaked:         76

Total time for CPA algorithm:        20.410s (Max:     0.873s)
  Time for choose from waitlist:      0.193s
  Time for precision adjustment:      9.743s
  Time for transfer relation:         7.972s
  Time for merge operator:            0.750s
  Time for stop operator:             0.330s
  Time for adding to reached set:     0.393s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   76
Avg. length of target path (in blocks):                3466 (count: 76, min: 13, max: 124, avg: 45.61)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   3.690s
  Counterexample analysis:                             3.058s (Max:     0.148s, Calls: 76)
    Refinement sat check:                              2.035s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.001s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.113s
  Precision update:                                    0.111s
  ARG update:                                          0.311s

Length of refined path (in blocks):                    2893 (count: 76, min: 6, max: 112, avg: 38.07)
Number of affected states:                             2370 (count: 76, min: 1, max: 109, avg: 31.18)
Length (states) of path with itp 'true':                447 (count: 76, min: 0, max: 82, avg: 5.88)
Length (states) of path with itp non-trivial itp:      2370 (count: 76, min: 1, max: 109, avg: 31.18)
Length (states) of path with itp 'false':                76 (count: 76, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:          45 (count: 76, min: 0, max: 1, avg: 0.59)
Equal non-trivial interpolants along paths:            2249 (count: 76, min: 0, max: 107, avg: 29.59)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                76
Number of successful refinements:     76
Number of failed refinements:         0
Max. size of reached set before ref.: 3045
Max. size of reached set after ref.:  1585
Avg. size of reached set before ref.: 1019.78
Avg. size of reached set after ref.:  113.41

Total time for CEGAR algorithm:      24.467s
Time for refinements:                 4.041s
Average time for refinement:          0.053s
Max time for refinement:              0.167s

Code Coverage
-----------------------------
  Function coverage:      0.419
  Visited lines:          1510
  Total lines:            1817
  Line coverage:          0.831
  Visited conditions:     281
  Total conditions:       362
  Condition coverage:     0.776

CPAchecker general statistics
-----------------------------
Number of program locations:     2330
Number of CFA edges:             2520
Number of relevant variables:    200
Number of functions:             62
Number of loops:                 23
Size of reached set:             1127
  Number of reached locations:   689 (30%)
    Avg states per location:     1
    Max states per location:     7 (at node N1)
  Number of reached functions:   26 (42%)
  Number of partitions:          1119
    Avg size of partitions:      1
    Max size of partitions:      3 (with key [N342 (before line 5632), Function com90xx_probe called from node N1056, stack depth 3 [148ee7e0], stack [main, com90xx_init, com90xx_probe]])
  Number of target states:       0
  Size of final wait list        16

Time for analysis setup:          5.286s
  Time for loading CPAs:          0.990s
  Time for loading parser:        0.783s
  Time for CFA construction:      3.392s
    Time for parsing file(s):     1.057s
    Time for AST to CFA:          1.173s
    Time for CFA sanity check:    0.203s
    Time for post-processing:     0.767s
      Time for var class.:        0.273s
Time for Analysis:               24.467s
CPU time for analysis:           24.480s
Total time for CPAchecker:       29.758s
Total CPU time for CPAchecker:   29.750s
Time for statistics:              0.118s

Time for Garbage Collector:       0.482s (in 42 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 72MB (    68 MiB) max;     46MB (    44 MiB) avg;     76MB (    72 MiB) peak
Used non-heap memory:             41MB (    39 MiB) max;     35MB (    33 MiB) avg;     41MB (    39 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        42MB (    40 MiB) max;     36MB (    35 MiB) avg
Total process virtual memory:   8019MB (  7648 MiB) max;   8007MB (  7636 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
