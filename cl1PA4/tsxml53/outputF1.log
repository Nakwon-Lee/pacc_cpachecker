scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.16-rc1/205_9a_array_safes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--arcnet--com90xx.ko-entry_point_true-unreach-call.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_1ezjzsxf/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function __request_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __release_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ioremap_nocache to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iounmap to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function probe_irq_on to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function probe_irq_off to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function alloc_arcdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function request_threaded_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function register_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function unregister_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            41093 (12% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  25619 (62%)
  Because of loop head:            15394 (37%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         80 (0%)
  Times precision was empty:       10462 (25%)
  Times precision was {false}:     497 (1%)
  Times result was cached:         28909 (70%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      1225 (3%)
  Times result was 'false':        1943 (5%)
Number of strengthen sat checks:   0
Number of coverage checks:         94180
  BDD entailment checks:           37086
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       47
Number of predicates discovered:          16
Number of abstraction locations:          94
Max number of predicates per location:    7
Avg number of predicates per location:    2
Total predicates per abstraction:         83419
Max number of predicates per abstraction: 7
Avg number of predicates per abstraction: 48.44
Number of irrelevant predicates:          37755 (45%)
Number of preds handled by boolean abs:   2347 (3%)
  Total number of models for allsat:      1529
  Max number of models for allsat:        5
  Avg number of models for allsat:        1.25

Time for post operator:                  6.122s
  Time for path formula creation:        5.764s
Time for strengthen operator:            0.517s
Time for prec operator:                 12.266s
  Time for abstraction:                 11.255s (Max:     0.028s, Count: 41093)
    Boolean abstraction:                 2.385s
    Solving time:                        2.486s (Max:     0.019s)
    Model enumeration time:              0.292s
    Time for BDD construction:           0.102s (Max:     0.012s)
Time for merge operator:                 0.499s
Time for coverage check:                 0.080s
  Time for BDD entailment checks:        0.068s
Total time for SMT solver (w/o itp):     2.778s

Number of path formula cache hits:   384330 (92%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     4.538s

Total number of created targets for pointer analysis: 5749
   Number of created targets for uf: *(void)* is 331
   Number of created targets for uf: *(struct_net_device)* is 289
   Number of created targets for uf: *signed_int is 241
   Number of created targets for uf: *unsigned_long_int is 38


Number of BDD nodes:                               607
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        2631 (count: 57926, min: 0, max: 267, avg: 0.05)
Time for BDD node cleanup:                             0.018s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.831s
  Time for transition matches:                         0.382s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.008s
Automaton transfers with branching:                0
Automaton transfer successors:                       357177 (count: 357177, min: 1, max: 1, avg: 1.00) [1 x 357177]

CPA algorithm statistics
------------------------
Number of iterations:            243340
Max size of waitlist:            23
Average size of waitlist:        10
Number of computed successors:   286831
Max successors for one state:    2
Number of times merged:          28547
Number of times stopped:         41389
Number of times breaked:         80

Total time for CPA algorithm:        30.373s (Max:     2.018s)
  Time for choose from waitlist:      0.244s
  Time for precision adjustment:     14.753s
  Time for transfer relation:        11.496s
  Time for merge operator:            1.051s
  Time for stop operator:             0.669s
  Time for adding to reached set:     0.654s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   80
Avg. length of target path (in blocks):                3422 (count: 80, min: 13, max: 82, avg: 42.78)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   3.340s
  Counterexample analysis:                             2.357s (Max:     0.070s, Calls: 80)
    Refinement sat check:                              1.561s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.005s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.137s
  Precision update:                                    0.083s
  ARG update:                                          0.669s

Length of refined path (in blocks):                    3000 (count: 80, min: 6, max: 81, avg: 37.50)
Number of affected states:                             2562 (count: 80, min: 1, max: 78, avg: 32.03)
Length (states) of path with itp 'true':                358 (count: 80, min: 0, max: 46, avg: 4.47)
Length (states) of path with itp non-trivial itp:      2562 (count: 80, min: 1, max: 78, avg: 32.03)
Length (states) of path with itp 'false':                80 (count: 80, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:          60 (count: 80, min: 0, max: 1, avg: 0.75)
Equal non-trivial interpolants along paths:            2422 (count: 80, min: 0, max: 76, avg: 30.27)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                80
Number of successful refinements:     80
Number of failed refinements:         0
Max. size of reached set before ref.: 8193
Max. size of reached set after ref.:  2103
Avg. size of reached set before ref.: 3086.34
Avg. size of reached set after ref.:  121.15

Total time for CEGAR algorithm:      34.017s
Time for refinements:                 3.634s
Average time for refinement:          0.045s
Max time for refinement:              0.087s

Code Coverage
-----------------------------
  Function coverage:      0.452
  Visited lines:          1620
  Total lines:            1817
  Line coverage:          0.892
  Visited conditions:     315
  Total conditions:       362
  Condition coverage:     0.870

CPAchecker general statistics
-----------------------------
Number of program locations:     2330
Number of CFA edges:             2520
Number of relevant variables:    200
Number of functions:             62
Number of loops:                 23
Size of reached set:             6285
  Number of reached locations:   794 (34%)
    Avg states per location:     7
    Max states per location:     48 (at node N790)
  Number of reached functions:   28 (45%)
  Number of partitions:          6179
    Avg size of partitions:      1
    Max size of partitions:      9 (with key [N256 (before line 5528), Function com90xx_probe called from node N1056, stack depth 3 [42295bd4], stack [main, com90xx_init, com90xx_probe]])
  Number of target states:       0

Time for analysis setup:          5.497s
  Time for loading CPAs:          1.108s
  Time for loading parser:        0.746s
  Time for CFA construction:      3.502s
    Time for parsing file(s):     1.036s
    Time for AST to CFA:          1.199s
    Time for CFA sanity check:    0.228s
    Time for post-processing:     0.856s
      Time for var class.:        0.298s
Time for Analysis:               34.017s
CPU time for analysis:           34.000s
Time for analyzing result:        0.006s
Total time for CPAchecker:       39.525s
Total CPU time for CPAchecker:   39.510s
Time for statistics:              0.178s

Time for Garbage Collector:       1.011s (in 114 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 82MB (    78 MiB) max;     50MB (    48 MiB) avg;     85MB (    81 MiB) peak
Used non-heap memory:             40MB (    38 MiB) max;     36MB (    34 MiB) avg;     40MB (    39 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        42MB (    40 MiB) max;     38MB (    36 MiB) avg
Total process virtual memory:   8020MB (  7648 MiB) max;   8010MB (  7639 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
