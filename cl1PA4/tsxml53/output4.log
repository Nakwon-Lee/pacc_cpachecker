scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.16-rc1/205_9a_array_safes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--arcnet--com90xx.ko-entry_point_true-unreach-call.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_o2r_zio_/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function unregister_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __request_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __release_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ioremap_nocache to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iounmap to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function probe_irq_on to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function probe_irq_off to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function alloc_arcdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            25363 (12% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  14037 (55%)
  Because of loop head:            11259 (44%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         67 (0%)
  Times precision was empty:       8045 (32%)
  Times precision was {false}:     224 (1%)
  Times result was cached:         16276 (64%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      818 (3%)
  Times result was 'false':        1375 (5%)
Number of strengthen sat checks:   0
Number of coverage checks:         60071
  BDD entailment checks:           23981
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       47
Number of predicates discovered:          14
Number of abstraction locations:          61
Max number of predicates per location:    7
Avg number of predicates per location:    3
Total predicates per abstraction:         58571
Max number of predicates per abstraction: 7
Avg number of predicates per abstraction: 56.21
Number of irrelevant predicates:          17807 (30%)
Number of preds handled by boolean abs:   1894 (3%)
  Total number of models for allsat:      1007
  Max number of models for allsat:        5
  Avg number of models for allsat:        1.23

Time for post operator:                  3.951s
  Time for path formula creation:        3.790s
Time for strengthen operator:            0.346s
Time for prec operator:                  9.157s
  Time for abstraction:                  8.357s (Max:     0.024s, Count: 25363)
    Boolean abstraction:                 1.850s
    Solving time:                        1.757s (Max:     0.016s)
    Model enumeration time:              0.210s
    Time for BDD construction:           0.113s (Max:     0.013s)
Time for merge operator:                 0.269s
Time for coverage check:                 0.079s
  Time for BDD entailment checks:        0.050s
Total time for SMT solver (w/o itp):     1.967s

Number of path formula cache hits:   236678 (92%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     3.032s

Total number of created targets for pointer analysis: 2317
   Number of created targets for uf: *(void)* is 61
   Number of created targets for uf: *signed_int is 461
   Number of created targets for uf: *unsigned_long_int is 9


Number of BDD nodes:                               566
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        2095 (count: 38578, min: 0, max: 296, avg: 0.05)
Time for BDD node cleanup:                             0.042s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.671s
  Time for transition matches:                         0.279s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.001s
Automaton transfers with branching:                0
Automaton transfer successors:                       220459 (count: 220459, min: 1, max: 1, avg: 1.00) [1 x 220459]

CPA algorithm statistics
------------------------
Number of iterations:            149645
Max size of waitlist:            40
Average size of waitlist:        14
Number of computed successors:   178040
Max successors for one state:    2
Number of times merged:          18045
Number of times stopped:         25893
Number of times breaked:         67

Total time for CPA algorithm:        22.030s (Max:     1.124s)
  Time for choose from waitlist:      0.205s
  Time for precision adjustment:     10.869s
  Time for transfer relation:         7.843s
  Time for merge operator:            0.756s
  Time for stop operator:             0.512s
  Time for adding to reached set:     0.465s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   67
Avg. length of target path (in blocks):                2177 (count: 67, min: 13, max: 51, avg: 32.49)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   2.237s
  Counterexample analysis:                             1.467s (Max:     0.057s, Calls: 67)
    Refinement sat check:                              0.947s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.075s
  Precision update:                                    0.070s
  ARG update:                                          0.569s

Length of refined path (in blocks):                    1766 (count: 67, min: 6, max: 50, avg: 26.36)
Number of affected states:                             1440 (count: 67, min: 1, max: 47, avg: 21.49)
Length (states) of path with itp 'true':                259 (count: 67, min: 0, max: 35, avg: 3.87)
Length (states) of path with itp non-trivial itp:      1440 (count: 67, min: 1, max: 47, avg: 21.49)
Length (states) of path with itp 'false':                67 (count: 67, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:          41 (count: 67, min: 0, max: 1, avg: 0.61)
Equal non-trivial interpolants along paths:            1332 (count: 67, min: 0, max: 45, avg: 19.88)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                67
Number of successful refinements:     67
Number of failed refinements:         0
Max. size of reached set before ref.: 4235
Max. size of reached set after ref.:  3352
Avg. size of reached set before ref.: 2560.55
Avg. size of reached set after ref.:  325.73

Total time for CEGAR algorithm:      24.597s
Time for refinements:                 2.546s
Average time for refinement:          0.038s
Max time for refinement:              0.082s

Code Coverage
-----------------------------
  Function coverage:      0.210
  Visited lines:          1156
  Total lines:            1817
  Line coverage:          0.636
  Visited conditions:     112
  Total conditions:       362
  Condition coverage:     0.309

CPAchecker general statistics
-----------------------------
Number of program locations:     2330
Number of CFA edges:             2520
Number of relevant variables:    200
Number of functions:             62
Number of loops:                 23
Size of reached set:             1040
  Number of reached locations:   270 (12%)
    Avg states per location:     3
    Max states per location:     14 (at node N110)
  Number of reached functions:   13 (21%)
  Number of partitions:          1018
    Avg size of partitions:      1
    Max size of partitions:      9 (with key [N256 (before line 5528), Function com90xx_probe called from node N1056, stack depth 3 [3422e277], stack [main, com90xx_init, com90xx_probe]])
  Number of target states:       0
  Size of final wait list        10

Time for analysis setup:          5.164s
  Time for loading CPAs:          0.905s
  Time for loading parser:        0.710s
  Time for CFA construction:      3.375s
    Time for parsing file(s):     0.971s
    Time for AST to CFA:          1.173s
    Time for CFA sanity check:    0.214s
    Time for post-processing:     0.824s
      Time for var class.:        0.301s
Time for Analysis:               24.597s
CPU time for analysis:           24.600s
Total time for CPAchecker:       29.766s
Total CPU time for CPAchecker:   29.750s
Time for statistics:              0.130s

Time for Garbage Collector:       0.614s (in 75 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 71MB (    68 MiB) max;     46MB (    44 MiB) avg;     74MB (    70 MiB) peak
Used non-heap memory:             40MB (    38 MiB) max;     34MB (    33 MiB) avg;     40MB (    38 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        41MB (    39 MiB) max;     37MB (    35 MiB) avg
Total process virtual memory:   8019MB (  7647 MiB) max;   8007MB (  7636 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
