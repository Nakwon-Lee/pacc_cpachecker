scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.16-rc1/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-sound--drivers--snd-dummy.ko-entry_point_true-unreach-call.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_a_0dc0l2/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 4234: Function pointer *(timer->base->get_time) with type ktime_t (*)() is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 4248: Function pointer *(timer->base->get_time) with type ktime_t (*)() is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

line 5960: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___3 = ldv_zalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 5966: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___6 = ldv_zalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 5968: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___7 = ldv_zalloc(608UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 5970: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___8 = ldv_zalloc(608UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 5976: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___11 = ldv_zalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snd_pcm_lib_ioctl to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_complete_3 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_suspend_noirq_3 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_restore_noirq_3 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_poweroff_late_3 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_poweroff_noirq_3 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_thaw_noirq_3 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_freeze_late_3 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_prepare_3 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_freeze_noirq_3 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_resume_noirq_3 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_thaw_early_3 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_resume_early_3 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_restore_early_3 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_suspend_late_3 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snd_card_free to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function hrtimer_cancel to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tasklet_kill to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __wake_up to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snd_pcm_lib_free_pages to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Extern function (*(timer->base->get_time))() returning a composite is treated as nondet. (PredicateCPA:CExpressionVisitorWithPointerAliasing.visit, WARNING)

Assuming external function hrtimer_start to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function add_timer to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snd_pcm_suspend_all to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snd_pcm_hw_constraint_integer to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snd_pcm_hw_constraint_minmax to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 5819: Ignoring function call through function pointer *(timer->function): (*(timer->function))(timer->data); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function snd_pcm_period_elapsed to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 4877: Ignoring function call through function pointer *(dummy->timer_ops->free): (*(dummy->timer_ops->free))(substream); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function platform_device_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_driver_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Extern function ns_to_timeval(kt.tv64) returning a composite is treated as nondet. (PredicateCPA:CExpressionVisitorWithPointerAliasing.visit, WARNING)

Assuming external function free_pages to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __platform_driver_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function get_zeroed_page to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_register_full to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 4759: Ignoring function call through function pointer *(dummy->timer_ops->prepare): tmp = (*(dummy->timer_ops->prepare))(substream); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Recursion detected, aborting. To ignore recursion, add -skipRecursion to the command line. (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, INFO)

Error: line 4759: Unsupported feature (recursion): tmp = dummy_pcm_prepare(substream); (line was originally pointer call(dummy_pcm_prepare) tmp = (*((dummy->timer_ops)->prepare))(substream);) (CallstackTransferRelation.getAbstractSuccessorsForEdge, SEVERE)

PredicateCPA statistics
-----------------------
Number of abstractions:            858 (16% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  761 (89%)
  Because of loop head:            95 (11%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         2 (0%)
  Times precision was empty:       844 (98%)
  Times precision was {false}:     4 (0%)
  Times result was cached:         5 (1%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      5 (1%)
  Times result was 'false':        3 (0%)
Number of strengthen sat checks:   0
Number of coverage checks:         748
  BDD entailment checks:           94
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       88
Number of predicates discovered:          3
Number of abstraction locations:          3
Max number of predicates per location:    2
Avg number of predicates per location:    1
Total predicates per abstraction:         21
Max number of predicates per abstraction: 2
Avg number of predicates per abstraction: 2.33
Number of irrelevant predicates:          9 (43%)
Number of preds handled by boolean abs:   7 (33%)
  Total number of models for allsat:      5
  Max number of models for allsat:        1
  Avg number of models for allsat:        1.00

Time for post operator:                  1.861s
  Time for path formula creation:        1.829s
Time for strengthen operator:            0.049s
Time for prec operator:                  0.290s
  Time for abstraction:                  0.176s (Max:     0.057s, Count: 858)
    Boolean abstraction:                 0.044s
    Solving time:                        0.050s (Max:     0.027s)
    Model enumeration time:              0.003s
    Time for BDD construction:           0.000s (Max:     0.000s)
Time for merge operator:                 0.100s
Time for coverage check:                 0.020s
  Time for BDD entailment checks:        0.020s
Total time for SMT solver (w/o itp):     0.053s

Number of path formula cache hits:   3414 (54%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     1.699s

Total number of created targets for pointer analysis: 1555
   Number of created targets for uf: *(void)* is 12
   Number of created targets for uf: *signed_int is 61
   Number of created targets for uf: *unsigned_int is 139
   Number of created targets for uf: *unsigned_long_int is 49


Number of BDD nodes:                               203
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                          24 (count: 1000, min: 0, max: 24, avg: 0.02)
Time for BDD node cleanup:                             0.000s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.115s
Automaton transfers with branching:                0
Automaton transfer successors:                         5535 (count: 5535, min: 1, max: 1, avg: 1.00) [1 x 5535]

CPA algorithm statistics
------------------------
Number of iterations:            3224
Max size of waitlist:            75
Average size of waitlist:        50
Number of computed successors:   3811
Max successors for one state:    2
Number of times merged:          327
Number of times stopped:         415
Number of times breaked:         2

Total time for CPA algorithm:         3.418s (Max:     2.114s)
  Time for choose from waitlist:      0.007s
  Time for precision adjustment:      0.521s
  Time for transfer relation:         2.504s
  Time for merge operator:            0.143s
  Time for stop operator:             0.049s
  Time for adding to reached set:     0.069s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   2
Avg. length of target path (in blocks):                  36 (count: 2, min: 18, max: 18, avg: 18.00)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.201s
  Counterexample analysis:                             0.131s (Max:     0.077s, Calls: 2)
    Refinement sat check:                              0.105s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.014s
  Precision update:                                    0.001s
  ARG update:                                          0.050s

Length of refined path (in blocks):                      28 (count: 2, min: 14, max: 14, avg: 14.00)
Number of affected states:                                2 (count: 2, min: 1, max: 1, avg: 1.00)
Length (states) of path with itp 'true':                 24 (count: 2, min: 12, max: 12, avg: 12.00)
Length (states) of path with itp non-trivial itp:         2 (count: 2, min: 1, max: 1, avg: 1.00)
Length (states) of path with itp 'false':                 2 (count: 2, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 2, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:               0 (count: 2, min: 0, max: 0, avg: 0.00)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                2
Number of successful refinements:     2
Number of failed refinements:         0
Max. size of reached set before ref.: 1056
Max. size of reached set after ref.:  63
Avg. size of reached set before ref.: 1051.50
Avg. size of reached set after ref.:  63.00

Total time for CEGAR algorithm:       3.648s
Time for refinements:                 0.230s
Average time for refinement:          0.115s
Max time for refinement:              0.160s

Code Coverage
-----------------------------
  Function coverage:      0.598
  Visited lines:          1577
  Total lines:            2191
  Line coverage:          0.720
  Visited conditions:     410
  Total conditions:       736
  Condition coverage:     0.557

CPAchecker general statistics
-----------------------------
Number of program locations:     3315
Number of CFA edges:             3796
Number of relevant variables:    433
Number of functions:             117
Number of loops:                 16
Size of reached set:             1417
  Number of reached locations:   954 (29%)
    Avg states per location:     1
    Max states per location:     9 (at node N146)
  Number of reached functions:   70 (60%)
  Number of partitions:          1416
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N1503 (before line 5994), Function main called from node N1421, stack depth 1 [1931d99], stack [main]])
  Number of target states:       0
  Size of final wait list        63

Time for analysis setup:          5.482s
  Time for loading CPAs:          1.112s
  Time for loading parser:        0.648s
  Time for CFA construction:      3.624s
    Time for parsing file(s):     1.024s
    Time for AST to CFA:          1.130s
    Time for CFA sanity check:    0.250s
    Time for post-processing:     1.045s
      Time for var class.:        0.481s
Time for Analysis:                3.648s
CPU time for analysis:            3.650s
Total time for CPAchecker:        9.134s
Total CPU time for CPAchecker:    9.120s
Time for statistics:              0.149s

Time for Garbage Collector:       0.200s (in 10 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 64MB (    61 MiB) max;     37MB (    36 MiB) avg;     69MB (    66 MiB) peak
Used non-heap memory:             35MB (    33 MiB) max;     28MB (    26 MiB) avg;     35MB (    34 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        37MB (    35 MiB) max;     30MB (    28 MiB) avg
Total process virtual memory:   8086MB (  7712 MiB) max;   8047MB (  7675 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
