scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.16-rc1/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--hwmon--applesmc.ko-entry_point_true-unreach-call.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_hc1db_k0/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

line 4933: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp = ldv_zalloc(520UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 4935: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___0 = ldv_zalloc(1464UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 4937: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___1 = ldv_zalloc(80UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_release_3 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_complete_4 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_suspend_noirq_4 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_suspend_4 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_restore_noirq_4 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_poweroff_late_4 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_poweroff_noirq_4 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_poweroff_4 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_prepare_4 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_resume_noirq_4 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_resume_early_4 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_restore_early_4 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_suspend_late_4 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dmi_check_system to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __request_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function hwmon_device_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __platform_driver_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_final_state to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function led_classdev_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function destroy_workqueue to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function queue_work_on to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __release_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 4911: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp = ldv_zalloc(1416UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function msleep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_register_full to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_dev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock_nested to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_unregister_polled_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_free_polled_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sysfs_remove_file_ns to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_driver_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sysfs_create_file_ns to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_allocate_polled_device to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __alloc_workqueue_key to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function led_classdev_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            34493 (20% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  29726 (86%)
  Because of loop head:            4751 (14%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         16 (0%)
  Times precision was empty:       24527 (71%)
  Times precision was {false}:     230 (1%)
  Times result was cached:         9554 (28%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      182 (1%)
  Times result was 'false':        162 (0%)
Number of strengthen sat checks:   0
Number of coverage checks:         16458
  BDD entailment checks:           6342
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       51
Number of predicates discovered:          5
Number of abstraction locations:          65
Max number of predicates per location:    4
Avg number of predicates per location:    1
Total predicates per abstraction:         11051
Max number of predicates per abstraction: 4
Avg number of predicates per abstraction: 26.82
Number of irrelevant predicates:          8929 (81%)
Number of preds handled by boolean abs:   238 (2%)
  Total number of models for allsat:      252
  Max number of models for allsat:        8
  Avg number of models for allsat:        1.38

Time for post operator:                  8.161s
  Time for path formula creation:        7.889s
Time for strengthen operator:            0.353s
Time for prec operator:                  5.084s
  Time for abstraction:                  3.986s (Max:     0.065s, Count: 34493)
    Boolean abstraction:                 0.653s
    Solving time:                        0.582s (Max:     0.057s)
    Model enumeration time:              0.137s
    Time for BDD construction:           0.039s (Max:     0.008s)
Time for merge operator:                 0.444s
Time for coverage check:                 0.067s
  Time for BDD entailment checks:        0.062s
Total time for SMT solver (w/o itp):     0.719s

Number of path formula cache hits:   162030 (81%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     6.323s

Total number of created targets for pointer analysis: 4759
   Number of created targets for uf: *signed_int is 51
   Number of created targets for uf: *(char)* is 25
   Number of created targets for uf: *unsigned_char is 1261
   Number of created targets for uf: *(struct_applesmc_entry)* is 19
   Number of created targets for uf: *_Bool is 75
   Number of created targets for uf: *(struct_applesmc_dev_attr)* is 889
   Number of created targets for uf: *unsigned_int is 81


Number of BDD nodes:                               251
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         401 (count: 33162, min: 0, max: 59, avg: 0.01)
Time for BDD node cleanup:                             0.017s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.742s
  Time for transition matches:                         0.360s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.000s
Automaton transfers with branching:                0
Automaton transfer successors:                       169378 (count: 169378, min: 1, max: 1, avg: 1.00) [1 x 169378]

CPA algorithm statistics
------------------------
Number of iterations:            109359
Max size of waitlist:            294
Average size of waitlist:        107
Number of computed successors:   122446
Max successors for one state:    2
Number of times merged:          5058
Number of times stopped:         10439
Number of times breaked:         16

Total time for CPA algorithm:        23.297s (Max:     2.868s)
  Time for choose from waitlist:      0.287s
  Time for precision adjustment:      7.007s
  Time for transfer relation:        12.684s
  Time for merge operator:            0.826s
  Time for stop operator:             0.466s
  Time for adding to reached set:     0.575s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   16
Avg. length of target path (in blocks):                 538 (count: 16, min: 26, max: 39, avg: 33.63)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   1.219s
  Counterexample analysis:                             0.550s (Max:     0.056s, Calls: 16)
    Refinement sat check:                              0.442s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.003s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.049s
  Precision update:                                    0.032s
  ARG update:                                          0.556s

Length of refined path (in blocks):                     388 (count: 16, min: 8, max: 38, avg: 24.25)
Number of affected states:                              330 (count: 16, min: 1, max: 37, avg: 20.63)
Length (states) of path with itp 'true':                 42 (count: 16, min: 0, max: 6, avg: 2.63)
Length (states) of path with itp non-trivial itp:       330 (count: 16, min: 1, max: 37, avg: 20.63)
Length (states) of path with itp 'false':                16 (count: 16, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 16, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:             314 (count: 16, min: 0, max: 36, avg: 19.63)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                16
Number of successful refinements:     16
Number of failed refinements:         0
Max. size of reached set before ref.: 12604
Max. size of reached set after ref.:  33
Avg. size of reached set before ref.: 6498.13
Avg. size of reached set after ref.:  16.13

Total time for CEGAR algorithm:      24.773s
Time for refinements:                 1.476s
Average time for refinement:          0.092s
Max time for refinement:              0.163s

Code Coverage
-----------------------------
  Function coverage:      0.545
  Visited lines:          1220
  Total lines:            1790
  Line coverage:          0.682
  Visited conditions:     274
  Total conditions:       432
  Condition coverage:     0.634

CPAchecker general statistics
-----------------------------
Number of program locations:     2437
Number of CFA edges:             2721
Number of relevant variables:    383
Number of functions:             99
Number of loops:                 16
Size of reached set:             8133
  Number of reached locations:   758 (31%)
    Avg states per location:     10
    Max states per location:     126 (at node N22)
  Number of reached functions:   54 (55%)
  Number of partitions:          8112
    Avg size of partitions:      1
    Max size of partitions:      6 (with key [N1671 (before line 4948), Function main called from node N1642, stack depth 1 [695a69a1], stack [main]])
  Number of target states:       0
  Size of final wait list        207

Time for analysis setup:          5.497s
  Time for loading CPAs:          1.147s
  Time for loading parser:        0.732s
  Time for CFA construction:      3.470s
    Time for parsing file(s):     1.018s
    Time for AST to CFA:          1.178s
    Time for CFA sanity check:    0.282s
    Time for post-processing:     0.847s
      Time for var class.:        0.397s
Time for Analysis:               24.773s
CPU time for analysis:           24.770s
Total time for CPAchecker:       30.275s
Total CPU time for CPAchecker:   30.270s
Time for statistics:              0.271s

Time for Garbage Collector:       1.016s (in 47 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                108MB (   103 MiB) max;     54MB (    52 MiB) avg;    117MB (   112 MiB) peak
Used non-heap memory:             40MB (    38 MiB) max;     35MB (    33 MiB) avg;     40MB (    38 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        42MB (    40 MiB) max;     37MB (    35 MiB) avg
Total process virtual memory:   8086MB (  7712 MiB) max;   8072MB (  7698 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
