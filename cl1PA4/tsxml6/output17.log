scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.16-rc1/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--hwmon--applesmc.ko-entry_point_true-unreach-call.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_sv6k8v3c/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

line 4933: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp = ldv_zalloc(520UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 4935: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___0 = ldv_zalloc(1464UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 4937: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___1 = ldv_zalloc(80UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_release_3 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_complete_4 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_suspend_noirq_4 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_suspend_4 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_restore_noirq_4 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_poweroff_late_4 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_poweroff_noirq_4 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_poweroff_4 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_prepare_4 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_resume_noirq_4 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_resume_early_4 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_restore_early_4 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_suspend_late_4 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dmi_check_system to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __request_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __platform_driver_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __release_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_register_full to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock_nested to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            24353 (21% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  19095 (78%)
  Because of loop head:            5238 (22%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         20 (0%)
  Times precision was empty:       5134 (21%)
  Times precision was {false}:     537 (2%)
  Times result was cached:         18484 (76%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      198 (1%)
  Times result was 'false':        93 (0%)
Number of strengthen sat checks:   0
Number of coverage checks:         13446
  BDD entailment checks:           7020
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       51
Number of predicates discovered:          2
Number of abstraction locations:          86
Max number of predicates per location:    2
Avg number of predicates per location:    1
Total predicates per abstraction:         19306
Max number of predicates per abstraction: 2
Avg number of predicates per abstraction: 26.27
Number of irrelevant predicates:          15201 (79%)
Number of preds handled by boolean abs:   198 (1%)
  Total number of models for allsat:      199
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.01

Time for post operator:                  8.755s
  Time for path formula creation:        8.622s
Time for strengthen operator:            0.211s
Time for prec operator:                  5.869s
  Time for abstraction:                  4.858s (Max:     0.065s, Count: 24353)
    Boolean abstraction:                 0.350s
    Solving time:                        0.751s (Max:     0.033s)
    Model enumeration time:              0.013s
    Time for BDD construction:           0.058s (Max:     0.020s)
Time for merge operator:                 0.440s
Time for coverage check:                 0.119s
  Time for BDD entailment checks:        0.097s
Total time for SMT solver (w/o itp):     0.764s

Number of path formula cache hits:   59057 (46%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     7.448s

Total number of created targets for pointer analysis: 9033
   Number of created targets for uf: *unsigned_char is 535
   Number of created targets for uf: *(struct_applesmc_entry)* is 14
   Number of created targets for uf: *unsigned_int is 105


Number of BDD nodes:                               202
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         399 (count: 16050, min: 0, max: 144, avg: 0.02)
Time for BDD node cleanup:                             0.025s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.572s
  Time for transition matches:                         0.306s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.000s
Automaton transfers with branching:                0
Automaton transfer successors:                       118054 (count: 118054, min: 1, max: 1, avg: 1.00) [1 x 118054]

CPA algorithm statistics
------------------------
Number of iterations:            84996
Max size of waitlist:            31
Average size of waitlist:        23
Number of computed successors:   95558
Max successors for one state:    2
Number of times merged:          3213
Number of times stopped:         10100
Number of times breaked:         20

Total time for CPA algorithm:        23.320s (Max:     2.692s)
  Time for choose from waitlist:      0.248s
  Time for precision adjustment:      7.539s
  Time for transfer relation:        12.503s
  Time for merge operator:            0.748s
  Time for stop operator:             0.499s
  Time for adding to reached set:     0.528s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   20
Avg. length of target path (in blocks):                1087 (count: 20, min: 36, max: 90, avg: 54.35)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   1.453s
  Counterexample analysis:                             0.835s (Max:     0.075s, Calls: 20)
    Refinement sat check:                              0.618s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.001s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.089s
  Precision update:                                    0.016s
  ARG update:                                          0.459s

Length of refined path (in blocks):                    1036 (count: 20, min: 35, max: 89, avg: 51.80)
Number of affected states:                              979 (count: 20, min: 0, max: 88, avg: 48.95)
Length (states) of path with itp 'true':                 37 (count: 20, min: 0, max: 37, avg: 1.85)
Length (states) of path with itp non-trivial itp:       979 (count: 20, min: 0, max: 88, avg: 48.95)
Length (states) of path with itp 'false':                20 (count: 20, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 20, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:             960 (count: 20, min: 0, max: 87, avg: 48.00)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                20
Number of successful refinements:     20
Number of failed refinements:         0
Max. size of reached set before ref.: 8579
Max. size of reached set after ref.:  4052
Avg. size of reached set before ref.: 4128.95
Avg. size of reached set after ref.:  205.45

Total time for CEGAR algorithm:      24.978s
Time for refinements:                 1.653s
Average time for refinement:          0.082s
Max time for refinement:              0.162s

Code Coverage
-----------------------------
  Function coverage:      0.404
  Visited lines:          1050
  Total lines:            1790
  Line coverage:          0.587
  Visited conditions:     230
  Total conditions:       432
  Condition coverage:     0.532

CPAchecker general statistics
-----------------------------
Number of program locations:     2437
Number of CFA edges:             2721
Number of relevant variables:    383
Number of functions:             99
Number of loops:                 16
Size of reached set:             6895
  Number of reached locations:   578 (24%)
    Avg states per location:     11
    Max states per location:     175 (at node N46)
  Number of reached functions:   40 (40%)
  Number of partitions:          6891
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N546 (before line 3229), Function applesmc_get_upper_bound called from node N564, stack depth 7 [2a080a57], stack [main, applesmc_init, applesmc_init_smcreg, applesmc_init_smcreg_try, applesmc_read_key, applesmc_get_entry_by_key, applesmc_get_upper_bound]])
  Number of target states:       0
  Size of final wait list        21

Time for analysis setup:          5.255s
  Time for loading CPAs:          0.967s
  Time for loading parser:        0.728s
  Time for CFA construction:      3.443s
    Time for parsing file(s):     1.005s
    Time for AST to CFA:          1.111s
    Time for CFA sanity check:    0.288s
    Time for post-processing:     0.898s
      Time for var class.:        0.427s
Time for Analysis:               24.978s
CPU time for analysis:           24.970s
Total time for CPAchecker:       30.238s
Total CPU time for CPAchecker:   30.220s
Time for statistics:              0.274s

Time for Garbage Collector:       0.951s (in 45 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                100MB (    95 MiB) max;     53MB (    51 MiB) avg;    106MB (   101 MiB) peak
Used non-heap memory:             40MB (    38 MiB) max;     35MB (    33 MiB) avg;     40MB (    38 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        42MB (    40 MiB) max;     37MB (    35 MiB) avg
Total process virtual memory:   8085MB (  7711 MiB) max;   8072MB (  7698 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
