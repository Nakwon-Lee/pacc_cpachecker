scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.16-rc1/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--hwmon--applesmc.ko-entry_point_true-unreach-call.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_p2ssbhnb/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

line 4933: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp = ldv_zalloc(520UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 4935: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___0 = ldv_zalloc(1464UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 4937: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___1 = ldv_zalloc(80UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_release_3 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_complete_4 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_suspend_noirq_4 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_suspend_4 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_restore_noirq_4 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_poweroff_late_4 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_poweroff_noirq_4 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_poweroff_4 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_prepare_4 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_resume_noirq_4 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_resume_early_4 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_restore_early_4 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_suspend_late_4 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock_nested to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dmi_check_system to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __request_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __platform_driver_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function hwmon_device_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function led_classdev_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function destroy_workqueue to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function queue_work_on to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function msleep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __release_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_register_full to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sysfs_remove_file_ns to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_unregister_polled_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_free_polled_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_dev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_driver_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sysfs_create_file_ns to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_allocate_polled_device to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_set_abs_params to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_register_polled_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __alloc_workqueue_key to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function led_classdev_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function hwmon_device_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_final_state to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 4911: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp = ldv_zalloc(1416UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            3471575 (22% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  2695937 (78%)
  Because of loop head:            775478 (22%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         160 (0%)
  Times precision was empty:       57354 (2%)
  Times precision was {false}:     2331 (0%)
  Times result was cached:         3407023 (98%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      4867 (0%)
  Times result was 'false':        40081 (1%)
Number of strengthen sat checks:   0
Number of coverage checks:         1673903
  BDD entailment checks:           1010529
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       51
Number of predicates discovered:          10
Number of abstraction locations:          193
Max number of predicates per location:    9
Avg number of predicates per location:    2
Total predicates per abstraction:         5408957
Max number of predicates per abstraction: 9
Avg number of predicates per abstraction: 751.45
Number of irrelevant predicates:          2526681 (47%)
Number of preds handled by boolean abs:   7217 (0%)
  Total number of models for allsat:      6044
  Max number of models for allsat:        64
  Avg number of models for allsat:        1.24

Time for post operator:                144.961s
  Time for path formula creation:      136.394s
Time for strengthen operator:           16.169s
Time for prec operator:                361.249s
  Time for abstraction:                313.163s (Max:     3.094s, Count: 3471575)
    Boolean abstraction:                 6.835s
    Solving time:                        7.364s (Max:     0.059s)
    Model enumeration time:              0.843s
    Time for BDD construction:           0.178s (Max:     0.009s)
Time for merge operator:                 5.456s
Time for coverage check:                 1.396s
  Time for BDD entailment checks:        1.092s
Total time for SMT solver (w/o itp):     8.207s

Number of path formula cache hits:   17557922 (90%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    60.651s

Total number of created targets for pointer analysis: 211018
   Number of created targets for uf: *(char)* is 1081
   Number of created targets for uf: *signed_int is 1145
   Number of created targets for uf: *unsigned_char is 83
   Number of created targets for uf: *(struct_applesmc_entry)* is 46
   Number of created targets for uf: *_Bool is 395
   Number of created targets for uf: *unsigned_int is 457
   Number of created targets for uf: *(struct_applesmc_dev_attr)* is 13249
   Number of created targets for uf: *signed_short_int is 61
   Number of created targets for uf: *((char)*)* is 46


Number of BDD nodes:                               1525
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        9965 (count: 1122038, min: 0, max: 260, avg: 0.01)
Time for BDD node cleanup:                             0.212s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                 24.358s
  Time for transition matches:                        10.856s
  Time for transition assertions:                      0.002s
  Time for transition actions:                         0.000s
Automaton transfers with branching:                0
Automaton transfer successors:                     16076170 (count: 16076170, min: 1, max: 1, avg: 1.00) [1 x 16076170]

CPA algorithm statistics
------------------------
Number of iterations:            11668157
Max size of waitlist:            45
Average size of waitlist:        20
Number of computed successors:   13020826
Max successors for one state:    2
Number of times merged:          331687
Number of times stopped:         1310735
Number of times breaked:         160

Total time for CPA algorithm:       841.890s (Max:    28.064s)
  Time for choose from waitlist:      4.260s
  Time for precision adjustment:    456.800s
  Time for transfer relation:       300.639s
  Time for merge operator:           11.194s
  Time for stop operator:            15.138s
  Time for adding to reached set:    19.554s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   160
Avg. length of target path (in blocks):                9384 (count: 160, min: 26, max: 141, avg: 58.65)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  35.476s
  Counterexample analysis:                             4.069s (Max:     0.067s, Calls: 160)
    Refinement sat check:                              2.939s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.006s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.108s
  Precision update:                                    0.324s
  ARG update:                                         30.693s

Length of refined path (in blocks):                    7254 (count: 160, min: 8, max: 140, avg: 45.34)
Number of affected states:                             5878 (count: 160, min: 1, max: 139, avg: 36.74)
Length (states) of path with itp 'true':               1216 (count: 160, min: 0, max: 40, avg: 7.60)
Length (states) of path with itp non-trivial itp:      5878 (count: 160, min: 1, max: 139, avg: 36.74)
Length (states) of path with itp 'false':               160 (count: 160, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 160, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:            5718 (count: 160, min: 0, max: 138, avg: 35.74)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                160
Number of successful refinements:     160
Number of failed refinements:         0
Max. size of reached set before ref.: 364836
Max. size of reached set after ref.:  226454
Avg. size of reached set before ref.: 108255.22
Avg. size of reached set after ref.:  36667.95

Total time for CEGAR algorithm:     895.148s
Time for refinements:                48.075s
Average time for refinement:          0.300s
Max time for refinement:              1.476s

Code Coverage
-----------------------------
  Function coverage:      0.626
  Visited lines:          1473
  Total lines:            1790
  Line coverage:          0.823
  Visited conditions:     354
  Total conditions:       432
  Condition coverage:     0.819

CPAchecker general statistics
-----------------------------
Number of program locations:     2437
Number of CFA edges:             2721
Number of relevant variables:    383
Number of functions:             99
Number of loops:                 16
Size of reached set:             216047
  Number of reached locations:   997 (41%)
    Avg states per location:     216
    Max states per location:     5295 (at node N46)
  Number of reached functions:   62 (63%)
  Number of partitions:          215709
    Avg size of partitions:      1
    Max size of partitions:      7 (with key [N1671 (before line 4948), Function main called from node N1642, stack depth 1 [34cf5a97], stack [main]])
  Number of target states:       0
  Size of final wait list        24

Time for analysis setup:          5.076s
  Time for loading CPAs:          0.927s
  Time for loading parser:        0.722s
  Time for CFA construction:      3.269s
    Time for parsing file(s):     0.966s
    Time for AST to CFA:          1.080s
    Time for CFA sanity check:    0.200s
    Time for post-processing:     0.819s
      Time for var class.:        0.438s
Time for Analysis:              895.148s
CPU time for analysis:          895.100s
Total time for CPAchecker:      900.228s
Total CPU time for CPAchecker:  900.170s
Time for statistics:              2.262s

Time for Garbage Collector:     138.978s (in 1298 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:               1502MB (  1433 MiB) max;    544MB (   519 MiB) avg;   1563MB (  1491 MiB) peak
Used non-heap memory:             40MB (    38 MiB) max;     39MB (    37 MiB) avg;     41MB (    39 MiB) peak
Allocated heap memory:          1620MB (  1545 MiB) max;    796MB (   759 MiB) avg
Allocated non-heap memory:        42MB (    40 MiB) max;     41MB (    39 MiB) avg
Total process virtual memory:   8154MB (  7776 MiB) max;   8096MB (  7721 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
