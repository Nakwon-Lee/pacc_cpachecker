scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.16-rc1/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--hwmon--applesmc.ko-entry_point_true-unreach-call.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_wv3hgd_q/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

line 4933: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp = ldv_zalloc(520UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 4935: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___0 = ldv_zalloc(1464UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 4937: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___1 = ldv_zalloc(80UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_release_3 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_complete_4 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_suspend_noirq_4 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_suspend_4 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_restore_noirq_4 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_poweroff_late_4 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_poweroff_noirq_4 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_poweroff_4 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_prepare_4 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_resume_noirq_4 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_resume_early_4 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_restore_early_4 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_suspend_late_4 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function hwmon_device_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dmi_check_system to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __request_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_final_state to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function queue_work_on to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_dev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __platform_driver_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __release_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function led_classdev_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function destroy_workqueue to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_unregister_polled_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_free_polled_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 4911: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp = ldv_zalloc(1416UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function platform_device_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_driver_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sysfs_remove_file_ns to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_register_full to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __alloc_workqueue_key to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function led_classdev_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function hwmon_device_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_allocate_polled_device to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function msleep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock_nested to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sysfs_create_file_ns to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_set_abs_params to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_register_polled_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            1405345 (21% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  1099705 (78%)
  Because of loop head:            305443 (22%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         197 (0%)
  Times precision was empty:       123508 (9%)
  Times precision was {false}:     2588 (0%)
  Times result was cached:         1266476 (90%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      12773 (1%)
  Times result was 'false':        36541 (3%)
Number of strengthen sat checks:   0
Number of coverage checks:         815214
  BDD entailment checks:           497384
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       51
Number of predicates discovered:          9
Number of abstraction locations:          200
Max number of predicates per location:    8
Avg number of predicates per location:    3
Total predicates per abstraction:         4022389
Max number of predicates per abstraction: 8
Avg number of predicates per abstraction: 261.86
Number of irrelevant predicates:          1336133 (33%)
Number of preds handled by boolean abs:   28558 (1%)
  Total number of models for allsat:      20430
  Max number of models for allsat:        32
  Avg number of models for allsat:        1.60

Time for post operator:                 93.966s
  Time for path formula creation:       90.139s
Time for strengthen operator:            5.490s
Time for prec operator:                294.937s
  Time for abstraction:                275.275s (Max:     2.816s, Count: 1405345)
    Boolean abstraction:                16.591s
    Solving time:                       13.675s (Max:     0.049s)
    Model enumeration time:              2.678s
    Time for BDD construction:           0.498s (Max:     0.012s)
Time for merge operator:                 3.606s
Time for coverage check:                 0.587s
  Time for BDD entailment checks:        0.470s
Total time for SMT solver (w/o itp):    16.353s

Number of path formula cache hits:   6562511 (83%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    61.045s

Total number of created targets for pointer analysis: 287968
   Number of created targets for uf: *(char)* is 409
   Number of created targets for uf: *signed_int is 9049
   Number of created targets for uf: *unsigned_char is 3206
   Number of created targets for uf: *(struct_applesmc_entry)* is 18
   Number of created targets for uf: *_Bool is 109
   Number of created targets for uf: *(struct_applesmc_dev_attr)* is 153673
   Number of created targets for uf: *unsigned_int is 137
   Number of created targets for uf: *((char)*)* is 18
   Number of created targets for uf: *signed_short_int is 82


Number of BDD nodes:                               1798
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       25644 (count: 723278, min: 0, max: 1067, avg: 0.04)
Time for BDD node cleanup:                             0.138s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  9.810s
  Time for transition matches:                         5.524s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.001s
Automaton transfers with branching:                0
Automaton transfer successors:                      6714595 (count: 6714595, min: 1, max: 1, avg: 1.00) [1 x 6714595]

CPA algorithm statistics
------------------------
Number of iterations:            4428449
Max size of waitlist:            1196
Average size of waitlist:        221
Number of computed successors:   4967805
Max successors for one state:    2
Number of times merged:          158915
Number of times stopped:         456044
Number of times breaked:         197

Total time for CPA algorithm:       528.081s (Max:    54.041s)
  Time for choose from waitlist:      2.440s
  Time for precision adjustment:    330.853s
  Time for transfer relation:       159.058s
  Time for merge operator:            6.653s
  Time for stop operator:             6.518s
  Time for adding to reached set:     9.096s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   197
Avg. length of target path (in blocks):               19121 (count: 197, min: 35, max: 188, avg: 97.06)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  16.699s
  Counterexample analysis:                             7.431s (Max:     0.111s, Calls: 197)
    Refinement sat check:                              4.820s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.017s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.164s
  Precision update:                                    0.202s
  ARG update:                                          8.696s

Length of refined path (in blocks):                   14031 (count: 197, min: 8, max: 173, avg: 71.22)
Number of affected states:                            13490 (count: 197, min: 1, max: 172, avg: 68.48)
Length (states) of path with itp 'true':                344 (count: 197, min: 0, max: 71, avg: 1.75)
Length (states) of path with itp non-trivial itp:     13490 (count: 197, min: 1, max: 172, avg: 68.48)
Length (states) of path with itp 'false':               197 (count: 197, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 197, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:           13293 (count: 197, min: 0, max: 171, avg: 67.48)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                197
Number of successful refinements:     197
Number of failed refinements:         0
Max. size of reached set before ref.: 52959
Max. size of reached set after ref.:  28437
Avg. size of reached set before ref.: 20903.63
Avg. size of reached set after ref.:  368.38

Total time for CEGAR algorithm:     547.655s
Time for refinements:                19.522s
Average time for refinement:          0.099s
Max time for refinement:              0.423s

Code Coverage
-----------------------------
  Function coverage:      0.626
  Visited lines:          1479
  Total lines:            1790
  Line coverage:          0.826
  Visited conditions:     358
  Total conditions:       432
  Condition coverage:     0.829

CPAchecker general statistics
-----------------------------
Number of program locations:     2437
Number of CFA edges:             2721
Number of relevant variables:    383
Number of functions:             99
Number of loops:                 16
Size of reached set:             429775
  Number of reached locations:   1006 (41%)
    Avg states per location:     427
    Max states per location:     10580 (at node N46)
  Number of reached functions:   62 (63%)
  Number of partitions:          429119
    Avg size of partitions:      1
    Max size of partitions:      6 (with key [N1671 (before line 4948), Function main called from node N1642, stack depth 1 [ddf20fd], stack [main]])
  Number of target states:       0

Time for analysis setup:          5.414s
  Time for loading CPAs:          0.913s
  Time for loading parser:        0.742s
  Time for CFA construction:      3.602s
    Time for parsing file(s):     1.045s
    Time for AST to CFA:          1.232s
    Time for CFA sanity check:    0.200s
    Time for post-processing:     0.905s
      Time for var class.:        0.516s
Time for Analysis:              547.655s
CPU time for analysis:          547.600s
Time for analyzing result:        0.353s
Total time for CPAchecker:      553.084s
Total CPU time for CPAchecker:  553.030s
Time for statistics:              3.360s

Time for Garbage Collector:      52.709s (in 809 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:               1140MB (  1087 MiB) max;    380MB (   363 MiB) avg;   1194MB (  1138 MiB) peak
Used non-heap memory:             41MB (    39 MiB) max;     40MB (    38 MiB) avg;     42MB (    40 MiB) peak
Allocated heap memory:          1370MB (  1307 MiB) max;    558MB (   532 MiB) avg
Allocated non-heap memory:        43MB (    41 MiB) max;     43MB (    41 MiB) avg
Total process virtual memory:   8155MB (  7777 MiB) max;   8085MB (  7711 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
