scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.16-rc1/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--hwmon--applesmc.ko-entry_point_true-unreach-call.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_ytw1wksi/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

line 4933: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp = ldv_zalloc(520UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 4935: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___0 = ldv_zalloc(1464UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 4937: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___1 = ldv_zalloc(80UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_release_3 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_complete_4 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_suspend_noirq_4 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_suspend_4 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_restore_noirq_4 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_poweroff_late_4 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_poweroff_noirq_4 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_poweroff_4 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_prepare_4 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_resume_noirq_4 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_resume_early_4 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_restore_early_4 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_suspend_late_4 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock_nested to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function msleep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function queue_work_on to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_dev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function hwmon_device_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function led_classdev_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function destroy_workqueue to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_unregister_polled_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_free_polled_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sysfs_remove_file_ns to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_driver_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __release_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_final_state to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dmi_check_system to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __request_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 4911: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp = ldv_zalloc(1416UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function __platform_driver_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_register_full to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __alloc_workqueue_key to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function led_classdev_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function hwmon_device_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sysfs_create_file_ns to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            1309065 (21% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  1013399 (77%)
  Because of loop head:            295449 (23%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         217 (0%)
  Times precision was empty:       163110 (12%)
  Times precision was {false}:     5286 (0%)
  Times result was cached:         1105581 (84%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      35088 (3%)
  Times result was 'false':        14148 (1%)
Number of strengthen sat checks:   0
Number of coverage checks:         747574
  BDD entailment checks:           414452
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       51
Number of predicates discovered:          8
Number of abstraction locations:          155
Max number of predicates per location:    7
Avg number of predicates per location:    4
Total predicates per abstraction:         4305618
Max number of predicates per abstraction: 7
Avg number of predicates per abstraction: 106.64
Number of irrelevant predicates:          1703785 (40%)
Number of preds handled by boolean abs:   106741 (2%)
  Total number of models for allsat:      87873
  Max number of models for allsat:        16
  Avg number of models for allsat:        2.50

Time for post operator:                232.639s
  Time for path formula creation:      228.893s
Time for strengthen operator:            6.187s
Time for prec operator:                442.460s
  Time for abstraction:                416.377s (Max:     4.039s, Count: 1309065)
    Boolean abstraction:                73.018s
    Solving time:                       57.219s (Max:     0.055s)
    Model enumeration time:             13.215s
    Time for BDD construction:           1.621s (Max:     0.153s)
Time for merge operator:                11.538s
Time for coverage check:                 0.695s
  Time for BDD entailment checks:        0.563s
Total time for SMT solver (w/o itp):    70.434s

Number of path formula cache hits:   1869510 (28%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:   189.730s

Total number of created targets for pointer analysis: 879266
   Number of created targets for uf: *signed_int is 5623
   Number of created targets for uf: *(char)* is 5137
   Number of created targets for uf: *unsigned_char is 65043
   Number of created targets for uf: *_Bool is 1907
   Number of created targets for uf: *unsigned_int is 9067
   Number of created targets for uf: *(struct_applesmc_dev_attr)* is 5137


Number of BDD nodes:                               1167
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       69649 (count: 816410, min: 0, max: 2357, avg: 0.09)
Time for BDD node cleanup:                             0.169s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                 10.116s
  Time for transition matches:                         5.601s
  Time for transition assertions:                      0.001s
  Time for transition actions:                         0.005s
Automaton transfers with branching:                0
Automaton transfer successors:                      6259643 (count: 6259643, min: 1, max: 1, avg: 1.00) [1 x 6259643]

CPA algorithm statistics
------------------------
Number of iterations:            4542186
Max size of waitlist:            204
Average size of waitlist:        84
Number of computed successors:   5098876
Max successors for one state:    2
Number of times merged:          166561
Number of times stopped:         526741
Number of times breaked:         217

Total time for CPA algorithm:       852.213s (Max:    12.843s)
  Time for choose from waitlist:      2.478s
  Time for precision adjustment:    483.359s
  Time for transfer relation:       313.524s
  Time for merge operator:           15.656s
  Time for stop operator:             8.093s
  Time for adding to reached set:    11.474s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   217
Avg. length of target path (in blocks):               41638 (count: 217, min: 41, max: 432, avg: 191.88)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  30.854s
  Counterexample analysis:                            19.454s (Max:     0.270s, Calls: 217)
    Refinement sat check:                             10.159s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.022s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.240s
  Precision update:                                    0.120s
  ARG update:                                         10.758s

Length of refined path (in blocks):                   29890 (count: 217, min: 8, max: 345, avg: 137.74)
Number of affected states:                            23244 (count: 217, min: 1, max: 344, avg: 107.12)
Length (states) of path with itp 'true':               6429 (count: 217, min: 0, max: 277, avg: 29.63)
Length (states) of path with itp non-trivial itp:     23244 (count: 217, min: 1, max: 344, avg: 107.12)
Length (states) of path with itp 'false':               217 (count: 217, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 217, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:           23027 (count: 217, min: 0, max: 343, avg: 106.12)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                217
Number of successful refinements:     217
Number of failed refinements:         0
Max. size of reached set before ref.: 61517
Max. size of reached set after ref.:  42364
Avg. size of reached set before ref.: 24075.18
Avg. size of reached set after ref.:  3103.37

Total time for CEGAR algorithm:     894.919s
Time for refinements:                42.106s
Average time for refinement:          0.194s
Max time for refinement:              7.870s

Code Coverage
-----------------------------
  Function coverage:      0.515
  Visited lines:          1220
  Total lines:            1790
  Line coverage:          0.682
  Visited conditions:     266
  Total conditions:       432
  Condition coverage:     0.616

CPAchecker general statistics
-----------------------------
Number of program locations:     2437
Number of CFA edges:             2721
Number of relevant variables:    383
Number of functions:             99
Number of loops:                 16
Size of reached set:             7106
  Number of reached locations:   734 (30%)
    Avg states per location:     9
    Max states per location:     132 (at node N47)
  Number of reached functions:   51 (52%)
  Number of partitions:          7087
    Avg size of partitions:      1
    Max size of partitions:      5 (with key [N1690 (before line 4957), Function main called from node N1642, stack depth 1 [4482469c], stack [main]])
  Number of target states:       0
  Size of final wait list        58

Time for analysis setup:          5.354s
  Time for loading CPAs:          1.077s
  Time for loading parser:        0.760s
  Time for CFA construction:      3.381s
    Time for parsing file(s):     1.037s
    Time for AST to CFA:          1.115s
    Time for CFA sanity check:    0.221s
    Time for post-processing:     0.817s
      Time for var class.:        0.425s
Time for Analysis:              894.919s
CPU time for analysis:          894.860s
Total time for CPAchecker:      900.286s
Total CPU time for CPAchecker:  900.220s
Time for statistics:              0.483s

Time for Garbage Collector:      66.597s (in 451 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:               2347MB (  2239 MiB) max;   1026MB (   978 MiB) avg;   2372MB (  2262 MiB) peak
Used non-heap memory:             45MB (    43 MiB) max;     40MB (    38 MiB) avg;     45MB (    43 MiB) peak
Allocated heap memory:          3219MB (  3070 MiB) max;   1509MB (  1439 MiB) avg
Allocated non-heap memory:        47MB (    45 MiB) max;     47MB (    45 MiB) avg
Total process virtual memory:   9302MB (  8871 MiB) max;   8499MB (  8105 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
