scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.16-rc1/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--hwmon--applesmc.ko-entry_point_true-unreach-call.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_ihpqn7d6/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

line 4933: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp = ldv_zalloc(520UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 4935: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___0 = ldv_zalloc(1464UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 4937: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___1 = ldv_zalloc(80UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_release_3 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_complete_4 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_suspend_noirq_4 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_suspend_4 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_restore_noirq_4 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_poweroff_late_4 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_poweroff_noirq_4 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_poweroff_4 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_prepare_4 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_resume_noirq_4 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_resume_early_4 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_restore_early_4 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_suspend_late_4 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dmi_check_system to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __request_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function hwmon_device_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __platform_driver_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_final_state to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function led_classdev_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function destroy_workqueue to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function queue_work_on to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function msleep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock_nested to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __release_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 4911: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp = ldv_zalloc(1416UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function platform_device_register_full to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_dev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sysfs_remove_file_ns to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_unregister_polled_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_free_polled_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_driver_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sysfs_create_file_ns to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __alloc_workqueue_key to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function led_classdev_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function hwmon_device_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_allocate_polled_device to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_set_abs_params to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_register_polled_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            2540765 (21% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  1978339 (78%)
  Because of loop head:            562234 (22%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         192 (0%)
  Times precision was empty:       73535 (3%)
  Times precision was {false}:     3065 (0%)
  Times result was cached:         2448971 (96%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      15194 (1%)
  Times result was 'false':        31136 (1%)
Number of strengthen sat checks:   0
Number of coverage checks:         1289377
  BDD entailment checks:           729399
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       51
Number of predicates discovered:          8
Number of abstraction locations:          195
Max number of predicates per location:    7
Avg number of predicates per location:    2
Total predicates per abstraction:         5549788
Max number of predicates per abstraction: 7
Avg number of predicates per abstraction: 303.95
Number of irrelevant predicates:          3027683 (55%)
Number of preds handled by boolean abs:   24935 (0%)
  Total number of models for allsat:      19274
  Max number of models for allsat:        16
  Avg number of models for allsat:        1.27

Time for post operator:                199.430s
  Time for path formula creation:      193.456s
Time for strengthen operator:           10.349s
Time for prec operator:                389.831s
  Time for abstraction:                353.231s (Max:     3.855s, Count: 2540765)
    Boolean abstraction:                23.947s
    Solving time:                       22.380s (Max:     0.057s)
    Model enumeration time:              2.915s
    Time for BDD construction:           0.367s (Max:     0.009s)
Time for merge operator:                 9.307s
Time for coverage check:                 0.853s
  Time for BDD entailment checks:        0.655s
Total time for SMT solver (w/o itp):    25.295s

Number of path formula cache hits:   9231119 (67%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:   139.264s

Total number of created targets for pointer analysis: 650344
   Number of created targets for uf: *(char)* is 4009
   Number of created targets for uf: *signed_int is 4134
   Number of created targets for uf: *unsigned_char is 243
   Number of created targets for uf: *(struct_applesmc_entry)* is 280
   Number of created targets for uf: *_Bool is 49
   Number of created targets for uf: *unsigned_int is 1401
   Number of created targets for uf: *(struct_applesmc_dev_attr)* is 3841
   Number of created targets for uf: *((char)*)* is 168
   Number of created targets for uf: *signed_short_int is 7


Number of BDD nodes:                               513
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       29988 (count: 916970, min: 0, max: 1202, avg: 0.03)
Time for BDD node cleanup:                             0.218s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                 16.233s
  Time for transition matches:                         8.843s
  Time for transition assertions:                      0.002s
  Time for transition actions:                         0.004s
Automaton transfers with branching:                0
Automaton transfer successors:                     11939551 (count: 11939551, min: 1, max: 1, avg: 1.00) [1 x 11939551]

CPA algorithm statistics
------------------------
Number of iterations:            8647918
Max size of waitlist:            121
Average size of waitlist:        52
Number of computed successors:   9678062
Max successors for one state:    2
Number of times merged:          279989
Number of times stopped:         987987
Number of times breaked:         192

Total time for CPA algorithm:       862.246s (Max:    16.917s)
  Time for choose from waitlist:      3.880s
  Time for precision adjustment:    477.027s
  Time for transfer relation:       313.638s
  Time for merge operator:           15.405s
  Time for stop operator:            11.525s
  Time for adding to reached set:    14.884s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   192
Avg. length of target path (in blocks):               17364 (count: 192, min: 26, max: 206, avg: 90.44)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  28.219s
  Counterexample analysis:                             7.670s (Max:     0.106s, Calls: 192)
    Refinement sat check:                              5.182s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.012s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.163s
  Precision update:                                    0.140s
  ARG update:                                         20.097s

Length of refined path (in blocks):                   15112 (count: 192, min: 8, max: 184, avg: 78.71)
Number of affected states:                            14764 (count: 192, min: 1, max: 183, avg: 76.90)
Length (states) of path with itp 'true':                156 (count: 192, min: 0, max: 49, avg: 0.81)
Length (states) of path with itp non-trivial itp:     14764 (count: 192, min: 1, max: 183, avg: 76.90)
Length (states) of path with itp 'false':               192 (count: 192, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 192, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:           14572 (count: 192, min: 0, max: 182, avg: 75.90)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                192
Number of successful refinements:     192
Number of failed refinements:         0
Max. size of reached set before ref.: 152547
Max. size of reached set after ref.:  79539
Avg. size of reached set before ref.: 46024.96
Avg. size of reached set after ref.:  1021.68

Total time for CEGAR algorithm:     895.267s
Time for refinements:                32.837s
Average time for refinement:          0.171s
Max time for refinement:              0.601s

Code Coverage
-----------------------------
  Function coverage:      0.515
  Visited lines:          1233
  Total lines:            1790
  Line coverage:          0.689
  Visited conditions:     288
  Total conditions:       432
  Condition coverage:     0.667

CPAchecker general statistics
-----------------------------
Number of program locations:     2437
Number of CFA edges:             2721
Number of relevant variables:    383
Number of functions:             99
Number of loops:                 16
Size of reached set:             18309
  Number of reached locations:   768 (32%)
    Avg states per location:     23
    Max states per location:     422 (at node N46)
  Number of reached functions:   51 (52%)
  Number of partitions:          18296
    Avg size of partitions:      1
    Max size of partitions:      6 (with key [N1671 (before line 4948), Function main called from node N1642, stack depth 1 [4482469c], stack [main]])
  Number of target states:       0
  Size of final wait list        46

Time for analysis setup:          4.993s
  Time for loading CPAs:          0.868s
  Time for loading parser:        0.662s
  Time for CFA construction:      3.324s
    Time for parsing file(s):     0.990s
    Time for AST to CFA:          1.142s
    Time for CFA sanity check:    0.204s
    Time for post-processing:     0.804s
      Time for var class.:        0.426s
Time for Analysis:              895.267s
CPU time for analysis:          895.220s
Total time for CPAchecker:      900.264s
Total CPU time for CPAchecker:  900.210s
Time for statistics:              0.381s

Time for Garbage Collector:     105.375s (in 977 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:               2385MB (  2274 MiB) max;    833MB (   795 MiB) avg;   2446MB (  2333 MiB) peak
Used non-heap memory:             40MB (    38 MiB) max;     39MB (    37 MiB) avg;     40MB (    38 MiB) peak
Allocated heap memory:          3342MB (  3188 MiB) max;   1228MB (  1171 MiB) avg
Allocated non-heap memory:        42MB (    40 MiB) max;     42MB (    40 MiB) avg
Total process virtual memory:   8289MB (  7905 MiB) max;   8154MB (  7776 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
