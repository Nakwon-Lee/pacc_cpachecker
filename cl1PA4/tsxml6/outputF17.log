scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.16-rc1/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--hwmon--applesmc.ko-entry_point_true-unreach-call.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_vy_osvb9/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

line 4933: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp = ldv_zalloc(520UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 4935: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___0 = ldv_zalloc(1464UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 4937: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___1 = ldv_zalloc(80UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_release_3 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_complete_4 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_suspend_noirq_4 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_suspend_4 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_restore_noirq_4 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_poweroff_late_4 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_poweroff_noirq_4 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_poweroff_4 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_prepare_4 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_resume_noirq_4 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_resume_early_4 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_restore_early_4 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_suspend_late_4 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dmi_check_system to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __request_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __platform_driver_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __release_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_register_full to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock_nested to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function msleep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_driver_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sysfs_remove_file_ns to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sysfs_create_file_ns to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_allocate_polled_device to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_set_abs_params to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_register_polled_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_free_polled_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __alloc_workqueue_key to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function led_classdev_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_unregister_polled_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function hwmon_device_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function led_classdev_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function destroy_workqueue to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function queue_work_on to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function hwmon_device_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_dev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_final_state to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 4911: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp = ldv_zalloc(1416UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            1848933 (22% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  1439464 (78%)
  Because of loop head:            409299 (22%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         170 (0%)
  Times precision was empty:       16545 (1%)
  Times precision was {false}:     3467 (0%)
  Times result was cached:         1816691 (98%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      12230 (1%)
  Times result was 'false':        21810 (1%)
Number of strengthen sat checks:   0
Number of coverage checks:         888992
  BDD entailment checks:           527476
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       51
Number of predicates discovered:          8
Number of abstraction locations:          193
Max number of predicates per location:    7
Avg number of predicates per location:    3
Total predicates per abstraction:         5139975
Max number of predicates per abstraction: 7
Avg number of predicates per abstraction: 327.45
Number of irrelevant predicates:          3162750 (62%)
Number of preds handled by boolean abs:   22376 (0%)
  Total number of models for allsat:      19255
  Max number of models for allsat:        8
  Avg number of models for allsat:        1.57

Time for post operator:                225.229s
  Time for path formula creation:      220.181s
Time for strengthen operator:            8.458s
Time for prec operator:                410.783s
  Time for abstraction:                376.713s (Max:     7.069s, Count: 1848933)
    Boolean abstraction:                23.970s
    Solving time:                       23.141s (Max:     0.067s)
    Model enumeration time:              3.613s
    Time for BDD construction:           0.393s (Max:     0.008s)
Time for merge operator:                12.061s
Time for coverage check:                 0.714s
  Time for BDD entailment checks:        0.561s
Total time for SMT solver (w/o itp):    26.754s

Number of path formula cache hits:   5788182 (60%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:   167.630s

Total number of created targets for pointer analysis: 1221306
   Number of created targets for uf: *(char)* is 3385
   Number of created targets for uf: *signed_int is 14739
   Number of created targets for uf: *unsigned_char is 7135
   Number of created targets for uf: *(struct_applesmc_entry)* is 190
   Number of created targets for uf: *_Bool is 13
   Number of created targets for uf: *unsigned_int is 1072
   Number of created targets for uf: *(struct_applesmc_dev_attr)* is 13249
   Number of created targets for uf: *((char)*)* is 142
   Number of created targets for uf: *signed_short_int is 418


Number of BDD nodes:                               315
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       24451 (count: 642169, min: 0, max: 546, avg: 0.04)
Time for BDD node cleanup:                             0.141s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                 11.500s
  Time for transition matches:                         6.044s
  Time for transition assertions:                      0.001s
  Time for transition actions:                         0.004s
Automaton transfers with branching:                0
Automaton transfer successors:                      8585267 (count: 8585267, min: 1, max: 1, avg: 1.00) [1 x 8585267]

CPA algorithm statistics
------------------------
Number of iterations:            6224372
Max size of waitlist:            37
Average size of waitlist:        23
Number of computed successors:   6949587
Max successors for one state:    2
Number of times merged:          180758
Number of times stopped:         699851
Number of times breaked:         170

Total time for CPA algorithm:       859.369s (Max:    23.397s)
  Time for choose from waitlist:      3.345s
  Time for precision adjustment:    471.169s
  Time for transfer relation:       323.272s
  Time for merge operator:           16.479s
  Time for stop operator:            10.020s
  Time for adding to reached set:    14.312s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   170
Avg. length of target path (in blocks):               16141 (count: 170, min: 26, max: 202, avg: 94.95)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  31.439s
  Counterexample analysis:                            14.205s (Max:     5.655s, Calls: 170)
    Refinement sat check:                             11.259s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.015s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.187s
  Precision update:                                    0.136s
  ARG update:                                         16.747s

Length of refined path (in blocks):                   14443 (count: 170, min: 8, max: 175, avg: 84.96)
Number of affected states:                            13381 (count: 170, min: 0, max: 174, avg: 78.71)
Length (states) of path with itp 'true':                892 (count: 170, min: 0, max: 105, avg: 5.25)
Length (states) of path with itp non-trivial itp:     13381 (count: 170, min: 0, max: 174, avg: 78.71)
Length (states) of path with itp 'false':               170 (count: 170, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 170, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:           13212 (count: 170, min: 0, max: 173, avg: 77.72)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                170
Number of successful refinements:     170
Number of failed refinements:         0
Max. size of reached set before ref.: 96654
Max. size of reached set after ref.:  43120
Avg. size of reached set before ref.: 38463.09
Avg. size of reached set after ref.:  2093.51

Total time for CEGAR algorithm:     895.137s
Time for refinements:                35.426s
Average time for refinement:          0.208s
Max time for refinement:              6.012s

Code Coverage
-----------------------------
  Function coverage:      0.616
  Visited lines:          1442
  Total lines:            1790
  Line coverage:          0.806
  Visited conditions:     346
  Total conditions:       432
  Condition coverage:     0.801

CPAchecker general statistics
-----------------------------
Number of program locations:     2437
Number of CFA edges:             2721
Number of relevant variables:    383
Number of functions:             99
Number of loops:                 16
Size of reached set:             45097
  Number of reached locations:   966 (40%)
    Avg states per location:     46
    Max states per location:     1091 (at node N46)
  Number of reached functions:   61 (62%)
  Number of partitions:          45058
    Avg size of partitions:      1
    Max size of partitions:      3 (with key [N1887 (before line 5164), Function main called from node N1642, stack depth 1 [4482469c], stack [main]])
  Number of target states:       0
  Size of final wait list        22

Time for analysis setup:          5.134s
  Time for loading CPAs:          0.933s
  Time for loading parser:        0.664s
  Time for CFA construction:      3.419s
    Time for parsing file(s):     1.024s
    Time for AST to CFA:          1.092s
    Time for CFA sanity check:    0.206s
    Time for post-processing:     0.889s
      Time for var class.:        0.453s
Time for Analysis:              895.137s
CPU time for analysis:          895.090s
Total time for CPAchecker:      900.275s
Total CPU time for CPAchecker:  900.210s
Time for statistics:              0.758s

Time for Garbage Collector:      86.617s (in 624 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:               2115MB (  2017 MiB) max;    909MB (   867 MiB) avg;   2352MB (  2243 MiB) peak
Used non-heap memory:             40MB (    39 MiB) max;     39MB (    38 MiB) avg;     41MB (    39 MiB) peak
Allocated heap memory:          2809MB (  2679 MiB) max;   1328MB (  1266 MiB) avg
Allocated non-heap memory:        43MB (    41 MiB) max;     42MB (    40 MiB) avg
Total process virtual memory:   8290MB (  7906 MiB) max;   8185MB (  7806 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
