scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.16-rc1/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--hwmon--applesmc.ko-entry_point_true-unreach-call.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_t2ldjppl/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

line 4933: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp = ldv_zalloc(520UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 4935: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___0 = ldv_zalloc(1464UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 4937: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___1 = ldv_zalloc(80UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_release_3 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_complete_4 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_suspend_noirq_4 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_suspend_4 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_restore_noirq_4 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_poweroff_late_4 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_poweroff_noirq_4 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_poweroff_4 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_prepare_4 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_resume_noirq_4 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_resume_early_4 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_restore_early_4 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_suspend_late_4 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock_nested to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function msleep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function queue_work_on to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_dev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function hwmon_device_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function led_classdev_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function destroy_workqueue to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_unregister_polled_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_free_polled_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sysfs_remove_file_ns to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_driver_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __release_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_final_state to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dmi_check_system to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __request_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 4911: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp = ldv_zalloc(1416UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function __platform_driver_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_register_full to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __alloc_workqueue_key to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function led_classdev_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function hwmon_device_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sysfs_create_file_ns to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            1349752 (21% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  1044740 (77%)
  Because of loop head:            304787 (23%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         225 (0%)
  Times precision was empty:       163694 (12%)
  Times precision was {false}:     5380 (0%)
  Times result was cached:         1145256 (85%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      35422 (3%)
  Times result was 'false':        14646 (1%)
Number of strengthen sat checks:   0
Number of coverage checks:         769774
  BDD entailment checks:           427710
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       51
Number of predicates discovered:          8
Number of abstraction locations:          156
Max number of predicates per location:    7
Avg number of predicates per location:    4
Total predicates per abstraction:         4501190
Max number of predicates per abstraction: 7
Avg number of predicates per abstraction: 110.32
Number of irrelevant predicates:          1798630 (40%)
Number of preds handled by boolean abs:   107415 (2%)
  Total number of models for allsat:      88429
  Max number of models for allsat:        16
  Avg number of models for allsat:        2.50

Time for post operator:                229.424s
  Time for path formula creation:      225.430s
Time for strengthen operator:            7.416s
Time for prec operator:                455.110s
  Time for abstraction:                427.171s (Max:     8.186s, Count: 1349752)
    Boolean abstraction:                71.174s
    Solving time:                       56.789s (Max:     0.060s)
    Model enumeration time:             12.954s
    Time for BDD construction:           1.533s (Max:     0.012s)
Time for merge operator:                11.451s
Time for coverage check:                 0.729s
  Time for BDD entailment checks:        0.593s
Total time for SMT solver (w/o itp):    69.743s

Number of path formula cache hits:   1959530 (29%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:   187.637s

Total number of created targets for pointer analysis: 898108
   Number of created targets for uf: *signed_int is 5831
   Number of created targets for uf: *(char)* is 5329
   Number of created targets for uf: *unsigned_char is 66120
   Number of created targets for uf: *_Bool is 1973
   Number of created targets for uf: *unsigned_int is 9307
   Number of created targets for uf: *(struct_applesmc_dev_attr)* is 5353


Number of BDD nodes:                               1169
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       70368 (count: 832848, min: 0, max: 2231, avg: 0.08)
Time for BDD node cleanup:                             0.166s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                 10.491s
  Time for transition matches:                         5.903s
  Time for transition assertions:                      0.001s
  Time for transition actions:                         0.002s
Automaton transfers with branching:                0
Automaton transfer successors:                      6450890 (count: 6450890, min: 1, max: 1, avg: 1.00) [1 x 6450890]

CPA algorithm statistics
------------------------
Number of iterations:            4680800
Max size of waitlist:            204
Average size of waitlist:        83
Number of computed successors:   5253973
Max successors for one state:    2
Number of times merged:          171032
Number of times stopped:         542441
Number of times breaked:         225

Total time for CPA algorithm:       860.647s (Max:    17.793s)
  Time for choose from waitlist:      2.514s
  Time for precision adjustment:    499.069s
  Time for transfer relation:       308.582s
  Time for merge operator:           15.384s
  Time for stop operator:             8.101s
  Time for adding to reached set:    11.735s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   225
Avg. length of target path (in blocks):               43456 (count: 225, min: 41, max: 432, avg: 193.14)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  30.369s
  Counterexample analysis:                            20.043s (Max:     0.395s, Calls: 225)
    Refinement sat check:                             10.485s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.034s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.213s
  Precision update:                                    0.132s
  ARG update:                                          9.685s

Length of refined path (in blocks):                   31206 (count: 225, min: 8, max: 345, avg: 138.69)
Number of affected states:                            23724 (count: 225, min: 1, max: 344, avg: 105.44)
Length (states) of path with itp 'true':               7257 (count: 225, min: 0, max: 277, avg: 32.25)
Length (states) of path with itp non-trivial itp:     23724 (count: 225, min: 1, max: 344, avg: 105.44)
Length (states) of path with itp 'false':               225 (count: 225, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 225, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:           23499 (count: 225, min: 0, max: 343, avg: 104.44)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                225
Number of successful refinements:     225
Number of failed refinements:         0
Max. size of reached set before ref.: 61517
Max. size of reached set after ref.:  42364
Avg. size of reached set before ref.: 24348.91
Avg. size of reached set after ref.:  3512.23

Total time for CEGAR algorithm:     895.051s
Time for refinements:                33.729s
Average time for refinement:          0.149s
Max time for refinement:              0.494s

Code Coverage
-----------------------------
  Function coverage:      0.515
  Visited lines:          1223
  Total lines:            1790
  Line coverage:          0.683
  Visited conditions:     266
  Total conditions:       432
  Condition coverage:     0.616

CPAchecker general statistics
-----------------------------
Number of program locations:     2437
Number of CFA edges:             2721
Number of relevant variables:    383
Number of functions:             99
Number of loops:                 16
Size of reached set:             8635
  Number of reached locations:   737 (30%)
    Avg states per location:     11
    Max states per location:     173 (at node N46)
  Number of reached functions:   51 (52%)
  Number of partitions:          8616
    Avg size of partitions:      1
    Max size of partitions:      5 (with key [N1690 (before line 4957), Function main called from node N1642, stack depth 1 [4482469c], stack [main]])
  Number of target states:       0
  Size of final wait list        53

Time for analysis setup:          5.218s
  Time for loading CPAs:          0.948s
  Time for loading parser:        0.712s
  Time for CFA construction:      3.388s
    Time for parsing file(s):     0.952s
    Time for AST to CFA:          1.183s
    Time for CFA sanity check:    0.273s
    Time for post-processing:     0.821s
      Time for var class.:        0.387s
Time for Analysis:              895.051s
CPU time for analysis:          895.010s
Total time for CPAchecker:      900.273s
Total CPU time for CPAchecker:  900.210s
Time for statistics:              0.259s

Time for Garbage Collector:      63.977s (in 458 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:               2405MB (  2294 MiB) max;   1060MB (  1011 MiB) avg;   2426MB (  2314 MiB) peak
Used non-heap memory:             40MB (    38 MiB) max;     40MB (    38 MiB) avg;     41MB (    39 MiB) peak
Allocated heap memory:          3273MB (  3122 MiB) max;   1565MB (  1493 MiB) avg
Allocated non-heap memory:        42MB (    40 MiB) max;     42MB (    40 MiB) avg
Total process virtual memory:   9301MB (  8870 MiB) max;   8521MB (  8126 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
