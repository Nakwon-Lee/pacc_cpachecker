scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.16-rc1/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--hwmon--applesmc.ko-entry_point_true-unreach-call.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_lhx68wbd/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

line 4933: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp = ldv_zalloc(520UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 4935: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___0 = ldv_zalloc(1464UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 4937: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___1 = ldv_zalloc(80UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_release_3 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_complete_4 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_suspend_noirq_4 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_suspend_4 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_restore_noirq_4 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_poweroff_late_4 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_poweroff_noirq_4 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_poweroff_4 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_prepare_4 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_resume_noirq_4 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_resume_early_4 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_restore_early_4 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_suspend_late_4 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dmi_check_system to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __request_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_final_state to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function hwmon_device_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function msleep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __platform_driver_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __release_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function led_classdev_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function destroy_workqueue to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_unregister_polled_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_free_polled_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock_nested to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 4911: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp = ldv_zalloc(1416UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function queue_work_on to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_register_full to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_driver_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sysfs_remove_file_ns to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_dev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            39664 (21% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  31452 (79%)
  Because of loop head:            8203 (21%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         9 (0%)
  Times precision was empty:       39039 (98%)
  Times precision was {false}:     82 (0%)
  Times result was cached:         454 (1%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      89 (0%)
  Times result was 'false':        51 (0%)
Number of strengthen sat checks:   0
Number of coverage checks:         20510
  BDD entailment checks:           10584
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       51
Number of predicates discovered:          5
Number of abstraction locations:          18
Max number of predicates per location:    4
Avg number of predicates per location:    1
Total predicates per abstraction:         1061
Max number of predicates per abstraction: 4
Avg number of predicates per abstraction: 6.20
Number of irrelevant predicates:          713 (67%)
Number of preds handled by boolean abs:   154 (15%)
  Total number of models for allsat:      163
  Max number of models for allsat:        8
  Avg number of models for allsat:        1.83

Time for post operator:                 10.567s
  Time for path formula creation:       10.316s
Time for strengthen operator:            0.365s
Time for prec operator:                  2.883s
  Time for abstraction:                  1.384s (Max:     0.054s, Count: 39664)
    Boolean abstraction:                 0.368s
    Solving time:                        0.276s (Max:     0.037s)
    Model enumeration time:              0.078s
    Time for BDD construction:           0.027s (Max:     0.008s)
Time for merge operator:                 0.493s
Time for coverage check:                 0.073s
  Time for BDD entailment checks:        0.060s
Total time for SMT solver (w/o itp):     0.354s

Number of path formula cache hits:   115603 (54%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     9.006s

Total number of created targets for pointer analysis: 10752
   Number of created targets for uf: *unsigned_char is 745
   Number of created targets for uf: *(struct_applesmc_entry)* is 10
   Number of created targets for uf: *_Bool is 53
   Number of created targets for uf: *unsigned_int is 73
   Number of created targets for uf: *(struct_applesmc_dev_attr)* is 937


Number of BDD nodes:                               248
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         235 (count: 50614, min: 0, max: 85, avg: 0.00)
Time for BDD node cleanup:                             0.020s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.672s
  Time for transition matches:                         0.411s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.001s
Automaton transfers with branching:                0
Automaton transfer successors:                       193442 (count: 193442, min: 1, max: 1, avg: 1.00) [1 x 193442]

CPA algorithm statistics
------------------------
Number of iterations:            136047
Max size of waitlist:            277
Average size of waitlist:        146
Number of computed successors:   152624
Max successors for one state:    2
Number of times merged:          4963
Number of times stopped:         15321
Number of times breaked:         9

Total time for CPA algorithm:        23.682s (Max:     4.044s)
  Time for choose from waitlist:      0.228s
  Time for precision adjustment:      4.862s
  Time for transfer relation:        15.390s
  Time for merge operator:            0.775s
  Time for stop operator:             0.463s
  Time for adding to reached set:     0.593s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   9
Avg. length of target path (in blocks):                 321 (count: 9, min: 26, max: 45, avg: 35.67)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   1.061s
  Counterexample analysis:                             0.294s (Max:     0.047s, Calls: 9)
    Refinement sat check:                              0.205s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.001s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.015s
  Precision update:                                    0.010s
  ARG update:                                          0.730s

Length of refined path (in blocks):                     139 (count: 9, min: 8, max: 23, avg: 15.44)
Number of affected states:                               94 (count: 9, min: 1, max: 22, avg: 10.44)
Length (states) of path with itp 'true':                 36 (count: 9, min: 0, max: 6, avg: 4.00)
Length (states) of path with itp non-trivial itp:        94 (count: 9, min: 1, max: 22, avg: 10.44)
Length (states) of path with itp 'false':                 9 (count: 9, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 9, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:              85 (count: 9, min: 0, max: 21, avg: 9.44)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                9
Number of successful refinements:     9
Number of failed refinements:         0
Max. size of reached set before ref.: 30270
Max. size of reached set after ref.:  33
Avg. size of reached set before ref.: 14891.89
Avg. size of reached set after ref.:  23.00

Total time for CEGAR algorithm:      25.134s
Time for refinements:                 1.444s
Average time for refinement:          0.160s
Max time for refinement:              0.224s

Code Coverage
-----------------------------
  Function coverage:      0.434
  Visited lines:          1059
  Total lines:            1790
  Line coverage:          0.592
  Visited conditions:     208
  Total conditions:       432
  Condition coverage:     0.481

CPAchecker general statistics
-----------------------------
Number of program locations:     2437
Number of CFA edges:             2721
Number of relevant variables:    383
Number of functions:             99
Number of loops:                 16
Size of reached set:             3433
  Number of reached locations:   559 (23%)
    Avg states per location:     6
    Max states per location:     73 (at node N22)
  Number of reached functions:   43 (43%)
  Number of partitions:          3427
    Avg size of partitions:      1
    Max size of partitions:      3 (with key [N1671 (before line 4948), Function main called from node N1642, stack depth 1 [4482469c], stack [main]])
  Number of target states:       0
  Size of final wait list        126

Time for analysis setup:          5.133s
  Time for loading CPAs:          0.943s
  Time for loading parser:        0.700s
  Time for CFA construction:      3.347s
    Time for parsing file(s):     0.958s
    Time for AST to CFA:          1.158s
    Time for CFA sanity check:    0.201s
    Time for post-processing:     0.828s
      Time for var class.:        0.433s
Time for Analysis:               25.134s
CPU time for analysis:           25.130s
Total time for CPAchecker:       30.279s
Total CPU time for CPAchecker:   30.260s
Time for statistics:              0.152s

Time for Garbage Collector:       2.030s (in 56 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                131MB (   125 MiB) max;     65MB (    62 MiB) avg;    154MB (   146 MiB) peak
Used non-heap memory:             40MB (    38 MiB) max;     35MB (    33 MiB) avg;     40MB (    38 MiB) peak
Allocated heap memory:           179MB (   171 MiB) max;    131MB (   125 MiB) avg
Allocated non-heap memory:        41MB (    40 MiB) max;     37MB (    35 MiB) avg
Total process virtual memory:   8086MB (  7712 MiB) max;   8073MB (  7699 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
