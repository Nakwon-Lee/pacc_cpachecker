scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.16-rc1/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--isdn--mISDN--mISDN_dsp.ko-entry_point_true-unreach-call.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_klkmjyqi/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 14198: Function pointer *(elem->new) with type void *(*)(const char *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 14304: Function pointer *(entry->elem->process_rx) with type void (*)(void *, unsigned char *, int, unsigned int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 14267: Function pointer *(entry->elem->process_tx) with type void (*)(void *, unsigned char *, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 7611: Ignoring function call through function pointer *(timer->function): (*(timer->function))(timer->data); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function mISDN_unregister_Bprotocol to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 7705: Ignoring function call through function pointer *(timer->function): (*(timer->function))(timer->data); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function ldv_check_final_state to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __raw_spin_lock_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mISDN_clock_get to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function add_timer to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function vzalloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __init_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function lockdep_init_map to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __alloc_skb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

What!
Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            3055 (12% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  2256 (74%)
  Because of loop head:            789 (26%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         10 (0%)
  Times precision was empty:       2139 (70%)
  Times precision was {false}:     66 (2%)
  Times result was cached:         760 (25%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      90 (3%)
  Times result was 'false':        39 (1%)
Number of strengthen sat checks:   0
Number of coverage checks:         4291
  BDD entailment checks:           905
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       102
Number of predicates discovered:          3
Number of abstraction locations:          22
Max number of predicates per location:    2
Avg number of predicates per location:    1
Total predicates per abstraction:         1081
Max number of predicates per abstraction: 2
Avg number of predicates per abstraction: 6.93
Number of irrelevant predicates:          567 (52%)
Number of preds handled by boolean abs:   102 (9%)
  Total number of models for allsat:      90
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.00

Time for post operator:                  4.629s
  Time for path formula creation:        4.567s
Time for strengthen operator:            0.101s
Time for prec operator:                  2.594s
  Time for abstraction:                  2.303s (Max:     0.695s, Count: 3055)
    Boolean abstraction:                 0.875s
    Solving time:                        1.099s (Max:     0.516s)
    Model enumeration time:              0.041s
    Time for BDD construction:           0.016s (Max:     0.004s)
Time for merge operator:                 0.201s
Time for coverage check:                 0.055s
  Time for BDD entailment checks:        0.053s
Total time for SMT solver (w/o itp):     1.140s

Number of path formula cache hits:   24858 (79%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     4.177s

Total number of created targets for pointer analysis: 7886
   Number of created targets for uf: *signed_int is 82
   Number of created targets for uf: *unsigned_char is 1241
   Number of created targets for uf: *(struct_list_head)* is 47
   Number of created targets for uf: *unsigned_long_int is 3


Number of BDD nodes:                               207
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         194 (count: 3927, min: 0, max: 60, avg: 0.05)
Time for BDD node cleanup:                             0.018s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.215s
Automaton transfers with branching:                0
Automaton transfer successors:                        26291 (count: 26291, min: 1, max: 1, avg: 1.00) [1 x 26291]

CPA algorithm statistics
------------------------
Number of iterations:            13931
Max size of waitlist:            67
Average size of waitlist:        38
Number of computed successors:   16738
Max successors for one state:    2
Number of times merged:          1693
Number of times stopped:         2293
Number of times breaked:         10

Total time for CPA algorithm:        10.116s (Max:     2.504s)
  Time for choose from waitlist:      0.077s
  Time for precision adjustment:      3.070s
  Time for transfer relation:         5.964s
  Time for merge operator:            0.384s
  Time for stop operator:             0.201s
  Time for adding to reached set:     0.119s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   10
Avg. length of target path (in blocks):                 117 (count: 10, min: 8, max: 14, avg: 11.70)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  11.014s
  Counterexample analysis:                             5.975s (Max:     2.316s, Calls: 10)
    Refinement sat check:                              5.194s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          4.894s
  Predicate creation:                                  0.024s
  Precision update:                                    0.008s
  ARG update:                                          0.095s

Length of refined path (in blocks):                      79 (count: 9, min: 4, max: 11, avg: 8.78)
Number of affected states:                               60 (count: 9, min: 1, max: 10, avg: 6.67)
Length (states) of path with itp 'true':                 10 (count: 9, min: 0, max: 2, avg: 1.11)
Length (states) of path with itp non-trivial itp:        60 (count: 9, min: 1, max: 10, avg: 6.67)
Length (states) of path with itp 'false':                 9 (count: 9, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 9, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:              51 (count: 9, min: 0, max: 9, avg: 5.67)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                10
Number of successful refinements:     9
Number of failed refinements:         0
Max. size of reached set before ref.: 2120
Max. size of reached set after ref.:  13
Avg. size of reached set before ref.: 1448.40
Avg. size of reached set after ref.:  8.56

Total time for CEGAR algorithm:      21.197s
Time for refinements:                11.081s
Average time for refinement:          1.108s
Max time for refinement:              7.218s

Code Coverage
-----------------------------
  Function coverage:      0.160
  Visited lines:          1575
  Total lines:            5562
  Line coverage:          0.283
  Visited conditions:     204
  Total conditions:       1694
  Condition coverage:     0.120

CPAchecker general statistics
-----------------------------
Number of program locations:     7576
Number of CFA edges:             8592
Number of relevant variables:    921
Number of functions:             212
Number of loops:                 102
Size of reached set:             2120
  Number of reached locations:   494 (7%)
    Avg states per location:     4
    Max states per location:     16 (at node N3979)
  Number of reached functions:   34 (16%)
  Number of partitions:          2114
    Avg size of partitions:      1
    Max size of partitions:      4 (with key [N1585 (before line 7731), Function main called from node N1568, stack depth 1 [30798137], stack [main]])
  Number of target states:       1
  Size of final wait list        63

Time for analysis setup:          8.130s
  Time for loading CPAs:          1.315s
  Time for loading parser:        0.786s
  Time for CFA construction:      5.856s
    Time for parsing file(s):     1.350s
    Time for AST to CFA:          2.125s
    Time for CFA sanity check:    0.547s
    Time for post-processing:     1.627s
      Time for var class.:        0.787s
Time for Analysis:               21.206s
CPU time for analysis:           21.220s
Time for analyzing result:        0.002s
Total time for CPAchecker:       29.343s
Total CPU time for CPAchecker:   29.330s
Time for statistics:              0.187s

Time for Garbage Collector:       0.885s (in 101 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                115MB (   109 MiB) max;     53MB (    50 MiB) avg;    120MB (   115 MiB) peak
Used non-heap memory:             40MB (    38 MiB) max;     34MB (    32 MiB) avg;     40MB (    39 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        42MB (    40 MiB) max;     35MB (    34 MiB) avg
Total process virtual memory:   8083MB (  7709 MiB) max;   8069MB (  7695 MiB) avg

Verification result: FALSE. Property violation (__VERIFIER_error(); called in line 5951) found by chosen configuration.
More details about the verification run can be found in the directory "./output".
