scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.16-rc1/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--isdn--mISDN--mISDN_dsp.ko-entry_point_true-unreach-call.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_7hk6u7af/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 14198: Function pointer *(elem->new) with type void *(*)(const char *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 14304: Function pointer *(entry->elem->process_rx) with type void (*)(void *, unsigned char *, int, unsigned int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 14267: Function pointer *(entry->elem->process_tx) with type void (*)(void *, unsigned char *, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 7611: Ignoring function call through function pointer *(timer->function): (*(timer->function))(timer->data); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function __alloc_skb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function consume_skb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 11065: Ignoring function call through function pointer *(dsp->ch.recv): tmp = (*(dsp->ch.recv))(dsp->ch.peer, nskb); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 6803: Ignoring function call through function pointer *(ch->peer->ctrl): tmp = (*(ch->peer->ctrl))(ch->peer, 768U, (void *)(&cq)); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 6828: Ignoring function call through function pointer *(ch->peer->ctrl): tmp___0 = (*(ch->peer->ctrl))(ch->peer, 768U, (void *)(&cq)); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 7266: Ignoring function call through function pointer *(dsp->ch.peer->ctrl): (*(dsp->ch.peer->ctrl))(dsp->ch.peer, 512U, (void *)0); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Recursion detected, aborting. To ignore recursion, add -skipRecursion to the command line. (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, INFO)

Error: line 7266: Unsupported feature (recursion): dsp_ctrl(dsp->ch.peer, 512U, (void *)0); (line was originally pointer call(dsp_ctrl) (*((dsp->ch.peer)->ctrl))(dsp->ch.peer, 512U, (void *)0);) (CallstackTransferRelation.getAbstractSuccessorsForEdge, SEVERE)

PredicateCPA statistics
-----------------------
Number of abstractions:            101 (5% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  84 (83%)
  Because of loop head:            16 (16%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         1 (1%)
  Times precision was empty:       88 (87%)
  Times precision was {false}:     1 (1%)
  Times result was cached:         0 (0%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      12 (12%)
  Times result was 'false':        1 (1%)
Number of strengthen sat checks:   0
Number of coverage checks:         143
  BDD entailment checks:           9
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       102
Number of predicates discovered:          2
Number of abstraction locations:          11
Max number of predicates per location:    1
Avg number of predicates per location:    1
Total predicates per abstraction:         13
Max number of predicates per abstraction: 1
Avg number of predicates per abstraction: 1.00
Number of irrelevant predicates:          1 (8%)
Number of preds handled by boolean abs:   12 (92%)
  Total number of models for allsat:      12
  Max number of models for allsat:        1
  Avg number of models for allsat:        1.00

Time for post operator:                  2.345s
  Time for path formula creation:        2.324s
Time for strengthen operator:            0.055s
Time for prec operator:                  0.719s
  Time for abstraction:                  0.700s (Max:     0.568s, Count: 101)
    Boolean abstraction:                 0.487s
    Solving time:                        0.442s (Max:     0.385s)
    Model enumeration time:              0.037s
    Time for BDD construction:           0.004s (Max:     0.001s)
Time for merge operator:                 0.100s
Time for coverage check:                 0.011s
  Time for BDD entailment checks:        0.011s
Total time for SMT solver (w/o itp):     0.479s

Number of path formula cache hits:   245 (11%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     2.294s

Total number of created targets for pointer analysis: 2707
   Number of created targets for uf: *signed_int is 62
   Number of created targets for uf: *unsigned_char is 621
   Number of created targets for uf: *(struct_list_head)* is 7
   Number of created targets for uf: *(unsigned_char)* is 226
   Number of created targets for uf: *unsigned_int is 249
   Number of created targets for uf: *unsigned_long_int is 3


Number of BDD nodes:                               202
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                          27 (count: 179, min: 0, max: 27, avg: 0.15)
Time for BDD node cleanup:                             0.000s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.067s
Automaton transfers with branching:                0
Automaton transfer successors:                         2080 (count: 2080, min: 1, max: 1, avg: 1.00) [1 x 2080]

CPA algorithm statistics
------------------------
Number of iterations:            487
Max size of waitlist:            30
Average size of waitlist:        15
Number of computed successors:   600
Max successors for one state:    2
Number of times merged:          67
Number of times stopped:         76
Number of times breaked:         1

Total time for CPA algorithm:         3.645s (Max:     2.180s)
  Time for choose from waitlist:      0.009s
  Time for precision adjustment:      0.812s
  Time for transfer relation:         2.636s
  Time for merge operator:            0.109s
  Time for stop operator:             0.019s
  Time for adding to reached set:     0.025s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   1
Avg. length of target path (in blocks):                  12 (count: 1, min: 12, max: 12, avg: 12.00)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.770s
  Counterexample analysis:                             0.736s (Max:     0.736s, Calls: 1)
    Refinement sat check:                              0.706s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.019s
  Precision update:                                    0.010s
  ARG update:                                          0.003s

Length of refined path (in blocks):                      11 (count: 1, min: 11, max: 11, avg: 11.00)
Number of affected states:                               10 (count: 1, min: 10, max: 10, avg: 10.00)
Length (states) of path with itp 'true':                  0 (count: 1, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:        10 (count: 1, min: 10, max: 10, avg: 10.00)
Length (states) of path with itp 'false':                 1 (count: 1, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 1, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:               9 (count: 1, min: 9, max: 9, avg: 9.00)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                1
Number of successful refinements:     1
Number of failed refinements:         0
Max. size of reached set before ref.: 125
Max. size of reached set after ref.:  3
Avg. size of reached set before ref.: 125.00
Avg. size of reached set after ref.:  3.00

Total time for CEGAR algorithm:       4.433s
Time for refinements:                 0.788s
Average time for refinement:          0.788s
Max time for refinement:              0.788s

Code Coverage
-----------------------------
  Function coverage:      0.113
  Visited lines:          1356
  Total lines:            5562
  Line coverage:          0.244
  Visited conditions:     178
  Total conditions:       1694
  Condition coverage:     0.105

CPAchecker general statistics
-----------------------------
Number of program locations:     7576
Number of CFA edges:             8592
Number of relevant variables:    921
Number of functions:             212
Number of loops:                 102
Size of reached set:             402
  Number of reached locations:   365 (5%)
    Avg states per location:     1
    Max states per location:     10 (at node N6831)
  Number of reached functions:   24 (11%)
  Number of partitions:          402
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0
  Size of final wait list        29

Time for analysis setup:          8.301s
  Time for loading CPAs:          1.235s
  Time for loading parser:        0.696s
  Time for CFA construction:      6.198s
    Time for parsing file(s):     1.417s
    Time for AST to CFA:          2.226s
    Time for CFA sanity check:    0.547s
    Time for post-processing:     1.775s
      Time for var class.:        0.847s
Time for Analysis:                4.433s
CPU time for analysis:            4.430s
Total time for CPAchecker:       12.739s
Total CPU time for CPAchecker:   12.730s
Time for statistics:              0.135s

Time for Garbage Collector:       0.334s (in 16 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 71MB (    68 MiB) max;     44MB (    42 MiB) avg;     76MB (    72 MiB) peak
Used non-heap memory:             35MB (    33 MiB) max;     28MB (    27 MiB) avg;     36MB (    34 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        37MB (    35 MiB) max;     30MB (    28 MiB) avg
Total process virtual memory:   8083MB (  7709 MiB) max;   8052MB (  7679 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
