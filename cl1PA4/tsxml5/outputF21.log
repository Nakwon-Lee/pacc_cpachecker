scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.16-rc1/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--isdn--mISDN--mISDN_dsp.ko-entry_point_true-unreach-call.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_dup08pao/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 14198: Function pointer *(elem->new) with type void *(*)(const char *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 14304: Function pointer *(entry->elem->process_rx) with type void (*)(void *, unsigned char *, int, unsigned int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 14267: Function pointer *(entry->elem->process_tx) with type void (*)(void *, unsigned char *, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 7611: Ignoring function call through function pointer *(timer->function): (*(timer->function))(timer->data); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function __alloc_skb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function consume_skb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 11065: Ignoring function call through function pointer *(dsp->ch.recv): tmp = (*(dsp->ch.recv))(dsp->ch.peer, nskb); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 6803: Ignoring function call through function pointer *(ch->peer->ctrl): tmp = (*(ch->peer->ctrl))(ch->peer, 768U, (void *)(&cq)); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 6828: Ignoring function call through function pointer *(ch->peer->ctrl): tmp___0 = (*(ch->peer->ctrl))(ch->peer, 768U, (void *)(&cq)); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 7266: Ignoring function call through function pointer *(dsp->ch.peer->ctrl): (*(dsp->ch.peer->ctrl))(dsp->ch.peer, 512U, (void *)0); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Recursion detected, aborting. To ignore recursion, add -skipRecursion to the command line. (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, INFO)

Error: line 7266: Unsupported feature (recursion): dsp_ctrl(dsp->ch.peer, 512U, (void *)0); (line was originally pointer call(dsp_ctrl) (*((dsp->ch.peer)->ctrl))(dsp->ch.peer, 512U, (void *)0);) (CallstackTransferRelation.getAbstractSuccessorsForEdge, SEVERE)

PredicateCPA statistics
-----------------------
Number of abstractions:            122 (5% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  108 (89%)
  Because of loop head:            12 (10%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         2 (2%)
  Times precision was empty:       100 (82%)
  Times precision was {false}:     3 (2%)
  Times result was cached:         5 (4%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      14 (11%)
  Times result was 'false':        4 (3%)
Number of strengthen sat checks:   0
Number of coverage checks:         167
  BDD entailment checks:           5
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       102
Number of predicates discovered:          3
Number of abstraction locations:          12
Max number of predicates per location:    2
Avg number of predicates per location:    1
Total predicates per abstraction:         24
Max number of predicates per abstraction: 2
Avg number of predicates per abstraction: 1.41
Number of irrelevant predicates:          4 (17%)
Number of preds handled by boolean abs:   16 (67%)
  Total number of models for allsat:      14
  Max number of models for allsat:        1
  Avg number of models for allsat:        1.00

Time for post operator:                  2.209s
  Time for path formula creation:        2.186s
Time for strengthen operator:            0.041s
Time for prec operator:                  0.923s
  Time for abstraction:                  0.890s (Max:     0.698s, Count: 122)
    Boolean abstraction:                 0.630s
    Solving time:                        0.602s (Max:     0.525s)
    Model enumeration time:              0.025s
    Time for BDD construction:           0.001s (Max:     0.001s)
Time for merge operator:                 0.135s
Time for coverage check:                 0.015s
  Time for BDD entailment checks:        0.015s
Total time for SMT solver (w/o itp):     0.627s

Number of path formula cache hits:   437 (18%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     2.150s

Total number of created targets for pointer analysis: 2768
   Number of created targets for uf: *signed_int is 62
   Number of created targets for uf: *unsigned_char is 621
   Number of created targets for uf: *(struct_list_head)* is 7
   Number of created targets for uf: *(unsigned_char)* is 226
   Number of created targets for uf: *unsigned_int is 249
   Number of created targets for uf: *unsigned_long_int is 3


Number of BDD nodes:                               203
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                          37 (count: 214, min: 0, max: 37, avg: 0.17)
Time for BDD node cleanup:                             0.000s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.098s
Automaton transfers with branching:                0
Automaton transfer successors:                         2285 (count: 2285, min: 1, max: 1, avg: 1.00) [1 x 2285]

CPA algorithm statistics
------------------------
Number of iterations:            584
Max size of waitlist:            32
Average size of waitlist:        14
Number of computed successors:   723
Max successors for one state:    2
Number of times merged:          81
Number of times stopped:         86
Number of times breaked:         2

Total time for CPA algorithm:         3.844s (Max:     2.041s)
  Time for choose from waitlist:      0.009s
  Time for precision adjustment:      1.056s
  Time for transfer relation:         2.519s
  Time for merge operator:            0.157s
  Time for stop operator:             0.037s
  Time for adding to reached set:     0.045s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   2
Avg. length of target path (in blocks):                  20 (count: 2, min: 8, max: 12, avg: 10.00)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.802s
  Counterexample analysis:                             0.773s (Max:     0.391s, Calls: 2)
    Refinement sat check:                              0.734s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.011s
  Precision update:                                    0.002s
  ARG update:                                          0.003s

Length of refined path (in blocks):                      15 (count: 2, min: 4, max: 11, avg: 7.50)
Number of affected states:                               11 (count: 2, min: 1, max: 10, avg: 5.50)
Length (states) of path with itp 'true':                  2 (count: 2, min: 0, max: 2, avg: 1.00)
Length (states) of path with itp non-trivial itp:        11 (count: 2, min: 1, max: 10, avg: 5.50)
Length (states) of path with itp 'false':                 2 (count: 2, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 2, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:               9 (count: 2, min: 0, max: 9, avg: 4.50)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                2
Number of successful refinements:     2
Number of failed refinements:         0
Max. size of reached set before ref.: 127
Max. size of reached set after ref.:  13
Avg. size of reached set before ref.: 111.00
Avg. size of reached set after ref.:  8.00

Total time for CEGAR algorithm:       4.681s
Time for refinements:                 0.835s
Average time for refinement:          0.417s
Max time for refinement:              0.428s

Code Coverage
-----------------------------
  Function coverage:      0.108
  Visited lines:          1385
  Total lines:            5562
  Line coverage:          0.249
  Visited conditions:     178
  Total conditions:       1694
  Condition coverage:     0.105

CPAchecker general statistics
-----------------------------
Number of program locations:     7576
Number of CFA edges:             8592
Number of relevant variables:    921
Number of functions:             212
Number of loops:                 102
Size of reached set:             428
  Number of reached locations:   357 (5%)
    Avg states per location:     1
    Max states per location:     11 (at node N6832)
  Number of reached functions:   23 (11%)
  Number of partitions:          428
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0
  Size of final wait list        31

Time for analysis setup:          7.734s
  Time for loading CPAs:          1.096s
  Time for loading parser:        0.614s
  Time for CFA construction:      5.923s
    Time for parsing file(s):     1.306s
    Time for AST to CFA:          2.252s
    Time for CFA sanity check:    0.563s
    Time for post-processing:     1.593s
      Time for var class.:        0.757s
Time for Analysis:                4.681s
CPU time for analysis:            4.680s
Total time for CPAchecker:       12.419s
Total CPU time for CPAchecker:   12.390s
Time for statistics:              0.119s

Time for Garbage Collector:       0.367s (in 16 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 71MB (    68 MiB) max;     45MB (    43 MiB) avg;     76MB (    72 MiB) peak
Used non-heap memory:             35MB (    33 MiB) max;     28MB (    27 MiB) avg;     35MB (    34 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        36MB (    35 MiB) max;     30MB (    29 MiB) avg
Total process virtual memory:   8083MB (  7709 MiB) max;   8053MB (  7680 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
