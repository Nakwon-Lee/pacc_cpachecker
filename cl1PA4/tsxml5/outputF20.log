scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.16-rc1/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--isdn--mISDN--mISDN_dsp.ko-entry_point_true-unreach-call.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_n98rt0zn/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 14198: Function pointer *(elem->new) with type void *(*)(const char *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 14304: Function pointer *(entry->elem->process_rx) with type void (*)(void *, unsigned char *, int, unsigned int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 14267: Function pointer *(entry->elem->process_tx) with type void (*)(void *, unsigned char *, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 7611: Ignoring function call through function pointer *(timer->function): (*(timer->function))(timer->data); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 7705: Ignoring function call through function pointer *(timer->function): (*(timer->function))(timer->data); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function mISDN_unregister_Bprotocol to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __alloc_skb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function consume_skb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 11065: Ignoring function call through function pointer *(dsp->ch.recv): tmp = (*(dsp->ch.recv))(dsp->ch.peer, nskb); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function add_timer to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function class_destroy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function list_del to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_final_state to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function vzalloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __raw_spin_lock_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __init_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function lockdep_init_map to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function try_module_get to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __list_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __class_create to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mISDN_register_Bprotocol to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_name to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_create_file to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mISDN_clock_get to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 6803: Ignoring function call through function pointer *(ch->peer->ctrl): tmp = (*(ch->peer->ctrl))(ch->peer, 768U, (void *)(&cq)); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 6828: Ignoring function call through function pointer *(ch->peer->ctrl): tmp___0 = (*(ch->peer->ctrl))(ch->peer, 768U, (void *)(&cq)); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function skb_clone to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

What!
Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            35301 (15% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  25316 (72%)
  Because of loop head:            9875 (28%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         110 (0%)
  Times precision was empty:       9871 (28%)
  Times precision was {false}:     395 (1%)
  Times result was cached:         23949 (68%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      1086 (3%)
  Times result was 'false':        657 (2%)
Number of strengthen sat checks:   0
Number of coverage checks:         38976
  BDD entailment checks:           11438
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       270
Number of predicates discovered:          20
Number of abstraction locations:          137
Max number of predicates per location:    7
Avg number of predicates per location:    1
Total predicates per abstraction:         41463
Max number of predicates per abstraction: 6
Avg number of predicates per abstraction: 28.00
Number of irrelevant predicates:          10262 (25%)
Number of preds handled by boolean abs:   1464 (4%)
  Total number of models for allsat:      1150
  Max number of models for allsat:        4
  Avg number of models for allsat:        1.06

Time for post operator:                 32.943s
  Time for path formula creation:       32.748s
Time for strengthen operator:            0.279s
Time for prec operator:                292.878s
  Time for abstraction:                291.960s (Max:    33.721s, Count: 35301)
    Boolean abstraction:               233.155s
    Solving time:                      105.939s (Max:     9.992s)
    Model enumeration time:            154.444s
    Time for BDD construction:           0.082s (Max:     0.008s)
Time for merge operator:                 1.114s
Time for coverage check:                 0.045s
  Time for BDD entailment checks:        0.034s
Total time for SMT solver (w/o itp):   260.383s

Number of path formula cache hits:   231281 (82%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    30.503s

Total number of created targets for pointer analysis: 1138542
   Number of created targets for uf: *signed_int is 1329
   Number of created targets for uf: *unsigned_char is 11201
   Number of created targets for uf: *(struct_mISDNchannel)* is 13
   Number of created targets for uf: *(struct_list_head)* is 291
   Number of created targets for uf: *(unsigned_char)* is 8776
   Number of created targets for uf: *(Return_type:_[void],_Parameters:_1,_Parameter_1_type:_[unsigned_long_int],_VarArgs:_false)* is 13
   Number of created targets for uf: *unsigned_int is 10168
   Number of created targets for uf: *signed_short_int is 71
   Number of created targets for uf: *unsigned_long_int is 30


Number of BDD nodes:                               402
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        2482 (count: 30031, min: 0, max: 189, avg: 0.08)
Time for BDD node cleanup:                             0.018s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.582s
  Time for transition matches:                         0.285s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.001s
Automaton transfers with branching:                0
Automaton transfer successors:                       241478 (count: 241478, min: 1, max: 1, avg: 1.00) [1 x 241478]

CPA algorithm statistics
------------------------
Number of iterations:            147240
Max size of waitlist:            57
Average size of waitlist:        21
Number of computed successors:   171027
Max successors for one state:    2
Number of times merged:          13769
Number of times stopped:         21263
Number of times breaked:         110

Total time for CPA algorithm:       334.006s (Max:    38.541s)
  Time for choose from waitlist:      0.127s
  Time for precision adjustment:    294.378s
  Time for transfer relation:        36.456s
  Time for merge operator:            1.423s
  Time for stop operator:             0.360s
  Time for adding to reached set:     0.324s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   110
Avg. length of target path (in blocks):                4245 (count: 110, min: 8, max: 80, avg: 38.59)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  90.684s
  Counterexample analysis:                            84.677s (Max:     5.040s, Calls: 110)
    Refinement sat check:                             80.355s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.005s
  Error path post-processing:                          5.324s
  Predicate creation:                                  0.061s
  Precision update:                                    0.066s
  ARG update:                                          0.452s

Length of refined path (in blocks):                    3425 (count: 109, min: 4, max: 79, avg: 31.42)
Number of affected states:                             1993 (count: 109, min: 1, max: 57, avg: 18.28)
Length (states) of path with itp 'true':               1323 (count: 109, min: 0, max: 65, avg: 12.14)
Length (states) of path with itp non-trivial itp:      1993 (count: 109, min: 1, max: 57, avg: 18.28)
Length (states) of path with itp 'false':               109 (count: 109, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:          53 (count: 109, min: 0, max: 5, avg: 0.49)
Equal non-trivial interpolants along paths:            1831 (count: 109, min: 0, max: 56, avg: 16.80)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                110
Number of successful refinements:     109
Number of failed refinements:         0
Max. size of reached set before ref.: 8142
Max. size of reached set after ref.:  7722
Avg. size of reached set before ref.: 2859.85
Avg. size of reached set after ref.:  1518.12

Total time for CEGAR algorithm:     425.202s
Time for refinements:                91.089s
Average time for refinement:          0.828s
Max time for refinement:              7.233s

Code Coverage
-----------------------------
  Function coverage:      0.316
  Visited lines:          2498
  Total lines:            5562
  Line coverage:          0.449
  Visited conditions:     438
  Total conditions:       1694
  Condition coverage:     0.259

CPAchecker general statistics
-----------------------------
Number of program locations:     7576
Number of CFA edges:             8592
Number of relevant variables:    921
Number of functions:             212
Number of loops:                 102
Size of reached set:             6338
  Number of reached locations:   1187 (16%)
    Avg states per location:     5
    Max states per location:     24 (at node N3966)
  Number of reached functions:   67 (32%)
  Number of partitions:          6284
    Avg size of partitions:      1
    Max size of partitions:      4 (with key [N1585 (before line 7731), Function main called from node N1568, stack depth 1 [3f06ebe0], stack [main]])
  Number of target states:       1
  Size of final wait list        47

Time for analysis setup:          8.371s
  Time for loading CPAs:          1.292s
  Time for loading parser:        0.696s
  Time for CFA construction:      6.225s
    Time for parsing file(s):     1.442s
    Time for AST to CFA:          2.233s
    Time for CFA sanity check:    0.674s
    Time for post-processing:     1.595s
      Time for var class.:        0.749s
Time for Analysis:              425.202s
CPU time for analysis:          425.120s
Time for analyzing result:        0.013s
Total time for CPAchecker:      433.584s
Total CPU time for CPAchecker:  433.470s
Time for statistics:              0.226s

Time for Garbage Collector:       4.294s (in 556 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                145MB (   138 MiB) max;     72MB (    68 MiB) avg;    160MB (   153 MiB) peak
Used non-heap memory:             42MB (    40 MiB) max;     39MB (    37 MiB) avg;     42MB (    40 MiB) peak
Allocated heap memory:           207MB (   197 MiB) max;    128MB (   122 MiB) avg
Allocated non-heap memory:        44MB (    42 MiB) max;     42MB (    40 MiB) avg
Total process virtual memory:   8370MB (  7983 MiB) max;   8213MB (  7832 MiB) avg

Verification result: FALSE. Property violation (__VERIFIER_error(); called in line 5951) found by chosen configuration.
More details about the verification run can be found in the directory "./output".
