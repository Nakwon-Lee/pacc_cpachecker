scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.16-rc1/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--isdn--mISDN--mISDN_dsp.ko-entry_point_true-unreach-call.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_7lz3mt99/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 14198: Function pointer *(elem->new) with type void *(*)(const char *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 14304: Function pointer *(entry->elem->process_rx) with type void (*)(void *, unsigned char *, int, unsigned int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 14267: Function pointer *(entry->elem->process_tx) with type void (*)(void *, unsigned char *, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __raw_spin_lock_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __class_create to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mISDN_register_Bprotocol to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function add_timer to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_name to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __list_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_create_file to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_final_state to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mISDN_unregister_Bprotocol to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 7611: Ignoring function call through function pointer *(timer->function): (*(timer->function))(timer->data); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 7705: Ignoring function call through function pointer *(timer->function): (*(timer->function))(timer->data); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function mISDN_clock_get to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

What!
Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            8010 (9% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  4741 (59%)
  Because of loop head:            3239 (40%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         30 (0%)
  Times precision was empty:       1132 (14%)
  Times precision was {false}:     267 (3%)
  Times result was cached:         6248 (78%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      363 (5%)
  Times result was 'false':        120 (1%)
Number of strengthen sat checks:   0
Number of coverage checks:         10349
  BDD entailment checks:           2241
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       270
Number of predicates discovered:          4
Number of abstraction locations:          92
Max number of predicates per location:    2
Avg number of predicates per location:    1
Total predicates per abstraction:         9625
Max number of predicates per abstraction: 2
Avg number of predicates per abstraction: 15.28
Number of irrelevant predicates:          3501 (36%)
Number of preds handled by boolean abs:   425 (4%)
  Total number of models for allsat:      381
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.05

Time for post operator:                 31.619s
  Time for path formula creation:       31.539s
Time for strengthen operator:            0.159s
Time for prec operator:                350.310s
  Time for abstraction:                350.001s (Max:   107.712s, Count: 8010)
    Boolean abstraction:               296.334s
    Solving time:                      112.413s (Max:     6.455s)
    Model enumeration time:            212.616s
    Time for BDD construction:           0.039s (Max:     0.006s)
Time for merge operator:                 0.274s
Time for coverage check:                 0.033s
  Time for BDD entailment checks:        0.029s
Total time for SMT solver (w/o itp):   325.029s

Number of path formula cache hits:   71777 (72%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    30.759s

Total number of created targets for pointer analysis: 1412666
   Number of created targets for uf: *signed_int is 2881
   Number of created targets for uf: *unsigned_char is 9421
   Number of created targets for uf: *(struct_list_head)* is 7
   Number of created targets for uf: *signed_short_int is 92
   Number of created targets for uf: *unsigned_long_int is 4


Number of BDD nodes:                               211
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         745 (count: 6908, min: 0, max: 49, avg: 0.11)
Time for BDD node cleanup:                             0.007s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.336s
Automaton transfers with branching:                0
Automaton transfer successors:                        90180 (count: 90180, min: 1, max: 1, avg: 1.00) [1 x 90180]

CPA algorithm statistics
------------------------
Number of iterations:            38237
Max size of waitlist:            69
Average size of waitlist:        18
Number of computed successors:   44986
Max successors for one state:    2
Number of times merged:          4054
Number of times stopped:         6024
Number of times breaked:         30

Total time for CPA algorithm:       385.347s (Max:   113.564s)
  Time for choose from waitlist:      0.077s
  Time for precision adjustment:    350.801s
  Time for transfer relation:        33.269s
  Time for merge operator:            0.461s
  Time for stop operator:             0.156s
  Time for adding to reached set:     0.145s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   30
Avg. length of target path (in blocks):                1536 (count: 30, min: 11, max: 95, avg: 51.20)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  43.011s
  Counterexample analysis:                            38.013s (Max:     5.355s, Calls: 30)
    Refinement sat check:                             36.043s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          4.748s
  Predicate creation:                                  0.048s
  Precision update:                                    0.013s
  ARG update:                                          0.140s

Length of refined path (in blocks):                    1391 (count: 29, min: 4, max: 94, avg: 47.97)
Number of affected states:                             1251 (count: 29, min: 1, max: 93, avg: 43.14)
Length (states) of path with itp 'true':                111 (count: 29, min: 0, max: 23, avg: 3.83)
Length (states) of path with itp non-trivial itp:      1251 (count: 29, min: 1, max: 93, avg: 43.14)
Length (states) of path with itp 'false':                29 (count: 29, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 29, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:            1222 (count: 29, min: 0, max: 92, avg: 42.14)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                30
Number of successful refinements:     29
Number of failed refinements:         0
Max. size of reached set before ref.: 3468
Max. size of reached set after ref.:  299
Avg. size of reached set before ref.: 1344.00
Avg. size of reached set after ref.:  50.93

Total time for CEGAR algorithm:     428.517s
Time for refinements:                43.152s
Average time for refinement:          1.438s
Max time for refinement:              6.330s

Code Coverage
-----------------------------
  Function coverage:      0.222
  Visited lines:          2074
  Total lines:            5562
  Line coverage:          0.373
  Visited conditions:     256
  Total conditions:       1694
  Condition coverage:     0.151

CPAchecker general statistics
-----------------------------
Number of program locations:     7576
Number of CFA edges:             8592
Number of relevant variables:    921
Number of functions:             212
Number of loops:                 102
Size of reached set:             2933
  Number of reached locations:   689 (9%)
    Avg states per location:     4
    Max states per location:     17 (at node N6803)
  Number of reached functions:   47 (22%)
  Number of partitions:          2922
    Avg size of partitions:      1
    Max size of partitions:      3 (with key [N1585 (before line 7731), Function main called from node N1568, stack depth 1 [30798137], stack [main]])
  Number of target states:       1
  Size of final wait list        40

Time for analysis setup:          7.735s
  Time for loading CPAs:          1.066s
  Time for loading parser:        0.675s
  Time for CFA construction:      5.841s
    Time for parsing file(s):     1.346s
    Time for AST to CFA:          2.130s
    Time for CFA sanity check:    0.553s
    Time for post-processing:     1.586s
      Time for var class.:        0.750s
Time for Analysis:              428.517s
CPU time for analysis:          428.450s
Time for analyzing result:        0.010s
Total time for CPAchecker:      436.256s
Total CPU time for CPAchecker:  436.160s
Time for statistics:              0.175s

Time for Garbage Collector:       3.008s (in 438 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                119MB (   114 MiB) max;     60MB (    57 MiB) avg;    146MB (   139 MiB) peak
Used non-heap memory:             41MB (    39 MiB) max;     37MB (    35 MiB) avg;     42MB (    40 MiB) peak
Allocated heap memory:           176MB (   168 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        43MB (    41 MiB) max;     39MB (    37 MiB) avg
Total process virtual memory:   8371MB (  7983 MiB) max;   8223MB (  7842 MiB) avg

Verification result: FALSE. Property violation (__VERIFIER_error(); called in line 5951) found by chosen configuration.
More details about the verification run can be found in the directory "./output".
