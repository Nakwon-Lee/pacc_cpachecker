scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.16-rc1/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--isdn--mISDN--mISDN_dsp.ko-entry_point_true-unreach-call.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_x2sd4hiv/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 14198: Function pointer *(elem->new) with type void *(*)(const char *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 14304: Function pointer *(entry->elem->process_rx) with type void (*)(void *, unsigned char *, int, unsigned int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 14267: Function pointer *(entry->elem->process_tx) with type void (*)(void *, unsigned char *, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 7705: Ignoring function call through function pointer *(timer->function): (*(timer->function))(timer->data); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 7611: Ignoring function call through function pointer *(timer->function): (*(timer->function))(timer->data); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function mISDN_unregister_Bprotocol to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __alloc_skb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function consume_skb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 11065: Ignoring function call through function pointer *(dsp->ch.recv): tmp = (*(dsp->ch.recv))(dsp->ch.peer, nskb); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function add_timer to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function class_destroy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function list_del to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_final_state to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function vzalloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __raw_spin_lock_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __init_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function lockdep_init_map to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function try_module_get to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __list_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __class_create to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mISDN_register_Bprotocol to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_name to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_create_file to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mISDN_clock_get to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 6803: Ignoring function call through function pointer *(ch->peer->ctrl): tmp = (*(ch->peer->ctrl))(ch->peer, 768U, (void *)(&cq)); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 6828: Ignoring function call through function pointer *(ch->peer->ctrl): tmp___0 = (*(ch->peer->ctrl))(ch->peer, 768U, (void *)(&cq)); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function skb_clone to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

What!
Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            75983 (13% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  51518 (68%)
  Because of loop head:            24282 (32%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         183 (0%)
  Times precision was empty:       17694 (23%)
  Times precision was {false}:     781 (1%)
  Times result was cached:         54184 (71%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      3324 (4%)
  Times result was 'false':        1377 (2%)
Number of strengthen sat checks:   0
Number of coverage checks:         95773
  BDD entailment checks:           32245
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       270
Number of predicates discovered:          31
Number of abstraction locations:          145
Max number of predicates per location:    13
Avg number of predicates per location:    2
Total predicates per abstraction:         119079
Max number of predicates per abstraction: 13
Avg number of predicates per abstraction: 29.01
Number of irrelevant predicates:          42182 (35%)
Number of preds handled by boolean abs:   7740 (6%)
  Total number of models for allsat:      6192
  Max number of models for allsat:        24
  Avg number of models for allsat:        1.86

Time for post operator:                100.558s
  Time for path formula creation:      100.225s
Time for strengthen operator:            0.557s
Time for prec operator:                533.567s
  Time for abstraction:                531.800s (Max:    89.188s, Count: 75983)
    Boolean abstraction:               415.802s
    Solving time:                      183.673s (Max:     7.889s)
    Model enumeration time:            262.703s
    Time for BDD construction:           0.300s (Max:     0.012s)
Time for merge operator:                 3.382s
Time for coverage check:                 0.134s
  Time for BDD entailment checks:        0.119s
Total time for SMT solver (w/o itp):   446.376s

Number of path formula cache hits:   480945 (74%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    95.896s

Total number of created targets for pointer analysis: 3950983
   Number of created targets for uf: *signed_int is 7403
   Number of created targets for uf: *unsigned_char is 28521
   Number of created targets for uf: *(struct_list_head)* is 7
   Number of created targets for uf: *(struct_mISDNchannel)* is 38
   Number of created targets for uf: *(unsigned_char)* is 20701
   Number of created targets for uf: *(Return_type:_[void],_Parameters:_1,_Parameter_1_type:_[unsigned_long_int],_VarArgs:_false)* is 38
   Number of created targets for uf: *unsigned_int is 29017
   Number of created targets for uf: *signed_short_int is 302
   Number of created targets for uf: *unsigned_long_int is 75


Number of BDD nodes:                               5718
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        9341 (count: 74946, min: 0, max: 250, avg: 0.12)
Time for BDD node cleanup:                             0.033s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  1.129s
  Time for transition matches:                         0.605s
  Time for transition assertions:                      0.001s
  Time for transition actions:                         0.008s
Automaton transfers with branching:                0
Automaton transfer successors:                       574445 (count: 574445, min: 1, max: 1, avg: 1.00) [1 x 574445]

CPA algorithm statistics
------------------------
Number of iterations:            331064
Max size of waitlist:            98
Average size of waitlist:        38
Number of computed successors:   385709
Max successors for one state:    2
Number of times merged:          31764
Number of times stopped:         49857
Number of times breaked:         183

Total time for CPA algorithm:       650.651s (Max:    92.995s)
  Time for choose from waitlist:      0.269s
  Time for precision adjustment:    536.310s
  Time for transfer relation:       107.231s
  Time for merge operator:            3.968s
  Time for stop operator:             0.790s
  Time for adding to reached set:     0.707s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   183
Avg. length of target path (in blocks):                7981 (count: 183, min: 8, max: 86, avg: 43.61)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                 118.826s
  Counterexample analysis:                           111.275s (Max:     5.105s, Calls: 183)
    Refinement sat check:                            102.950s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.005s
  Error path post-processing:                          6.532s
  Predicate creation:                                  0.079s
  Precision update:                                    0.075s
  ARG update:                                          0.748s

Length of refined path (in blocks):                    6803 (count: 182, min: 4, max: 72, avg: 37.38)
Number of affected states:                             3213 (count: 182, min: 1, max: 60, avg: 17.65)
Length (states) of path with itp 'true':               3408 (count: 182, min: 0, max: 58, avg: 18.73)
Length (states) of path with itp non-trivial itp:      3213 (count: 182, min: 1, max: 60, avg: 17.65)
Length (states) of path with itp 'false':               182 (count: 182, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:          58 (count: 182, min: 0, max: 5, avg: 0.32)
Equal non-trivial interpolants along paths:            2973 (count: 182, min: 0, max: 59, avg: 16.34)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                183
Number of successful refinements:     182
Number of failed refinements:         0
Max. size of reached set before ref.: 16306
Max. size of reached set after ref.:  14793
Avg. size of reached set before ref.: 6069.34
Avg. size of reached set after ref.:  4264.91

Total time for CEGAR algorithm:     771.333s
Time for refinements:               120.146s
Average time for refinement:          0.656s
Max time for refinement:             11.645s

Code Coverage
-----------------------------
  Function coverage:      0.316
  Visited lines:          2498
  Total lines:            5562
  Line coverage:          0.449
  Visited conditions:     438
  Total conditions:       1694
  Condition coverage:     0.259

CPAchecker general statistics
-----------------------------
Number of program locations:     7576
Number of CFA edges:             8592
Number of relevant variables:    921
Number of functions:             212
Number of loops:                 102
Size of reached set:             9649
  Number of reached locations:   1187 (16%)
    Avg states per location:     8
    Max states per location:     47 (at node N3668)
  Number of reached functions:   67 (32%)
  Number of partitions:          9508
    Avg size of partitions:      1
    Max size of partitions:      7 (with key [N1598 (after line 7737), Function main called from node N1568, stack depth 1 [30798137], stack [main]])
  Number of target states:       1
  Size of final wait list        70

Time for analysis setup:          7.696s
  Time for loading CPAs:          1.002s
  Time for loading parser:        0.688s
  Time for CFA construction:      5.882s
    Time for parsing file(s):     1.395s
    Time for AST to CFA:          2.076s
    Time for CFA sanity check:    0.558s
    Time for post-processing:     1.606s
      Time for var class.:        0.739s
Time for Analysis:              771.333s
CPU time for analysis:          771.220s
Time for analyzing result:        0.005s
Total time for CPAchecker:      779.033s
Total CPU time for CPAchecker:  778.900s
Time for statistics:              0.305s

Time for Garbage Collector:      12.221s (in 1190 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                237MB (   226 MiB) max;     84MB (    80 MiB) avg;    268MB (   255 MiB) peak
Used non-heap memory:             43MB (    41 MiB) max;     40MB (    38 MiB) avg;     43MB (    41 MiB) peak
Allocated heap memory:           359MB (   342 MiB) max;    145MB (   139 MiB) avg
Allocated non-heap memory:        44MB (    42 MiB) max;     42MB (    40 MiB) avg
Total process virtual memory:   8621MB (  8222 MiB) max;   8315MB (  7930 MiB) avg

Verification result: FALSE. Property violation (__VERIFIER_error(); called in line 5951) found by chosen configuration.
More details about the verification run can be found in the directory "./output".
