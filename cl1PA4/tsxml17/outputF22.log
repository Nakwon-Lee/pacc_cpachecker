scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.16-rc1/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-sound--drivers--snd-aloop.ko-entry_point_true-unreach-call.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_hz8myfjq/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

line 6030: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp = ldv_zalloc(608UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 6034: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___1 = ldv_zalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 6040: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___4 = ldv_zalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 6048: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___8 = ldv_zalloc(608UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snd_pcm_lib_get_vmalloc_page to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snd_pcm_lib_ioctl to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_complete_3 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_suspend_noirq_3 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_restore_noirq_3 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_poweroff_late_3 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_poweroff_noirq_3 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_thaw_noirq_3 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_freeze_late_3 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_prepare_3 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_freeze_noirq_3 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_resume_noirq_3 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_thaw_early_3 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_resume_early_3 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_restore_early_3 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_suspend_late_3 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snd_pcm_stop to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snd_ctl_notify to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock_nested to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snd_pcm_format_width to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snd_card_new to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __mutex_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snd_pcm_new to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snd_pcm_set_ops to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __platform_driver_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function add_timer to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snd_pcm_format_set_silence to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snd_pcm_period_elapsed to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_driver_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_register_full to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snd_card_free to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snd_ctl_new1 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snd_ctl_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snprintf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snd_card_proc_new to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snd_card_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __wake_up to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snd_pcm_suspend_all to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_final_state to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snd_pcm_hw_constraint_integer to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snd_pcm_hw_rule_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __raw_spin_lock_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            1480235 (16% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  1422470 (96%)
  Because of loop head:            53264 (4%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         4501 (0%)
  Times precision was empty:       356048 (24%)
  Times precision was {false}:     4237 (0%)
  Times result was cached:         1110715 (75%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      9235 (1%)
  Times result was 'false':        24568 (2%)
Number of strengthen sat checks:   0
Number of coverage checks:         1977524
  BDD entailment checks:           336398
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       67
Number of predicates discovered:          11
Number of abstraction locations:          227
Max number of predicates per location:    8
Avg number of predicates per location:    2
Total predicates per abstraction:         3408230
Max number of predicates per abstraction: 8
Avg number of predicates per abstraction: 252.99
Number of irrelevant predicates:          2518708 (74%)
Number of preds handled by boolean abs:   16149 (0%)
  Total number of models for allsat:      12868
  Max number of models for allsat:        48
  Avg number of models for allsat:        1.39

Time for post operator:                124.109s
  Time for path formula creation:      120.100s
Time for strengthen operator:            7.162s
Time for prec operator:                192.216s
  Time for abstraction:                173.314s (Max:     3.493s, Count: 1480235)
    Boolean abstraction:                13.101s
    Solving time:                       12.430s (Max:     0.065s)
    Model enumeration time:              2.436s
    Time for BDD construction:           0.301s (Max:     0.011s)
Time for merge operator:                12.064s
Time for coverage check:                 0.582s
  Time for BDD entailment checks:        0.342s
Total time for SMT solver (w/o itp):    14.866s

Number of path formula cache hits:   9881594 (87%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    82.505s

Total number of created targets for pointer analysis: 22111
   Number of created targets for uf: *(void)* is 325
   Number of created targets for uf: *(struct_snd_pcm)* is 195
   Number of created targets for uf: *signed_int is 5716
   Number of created targets for uf: *(struct_snd_card)* is 90
   Number of created targets for uf: *unsigned_int is 9


Number of BDD nodes:                               2652
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       19198 (count: 772705, min: 0, max: 617, avg: 0.02)
Time for BDD node cleanup:                             0.142s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                 11.897s
  Time for transition matches:                         6.313s
  Time for transition assertions:                      0.011s
  Time for transition actions:                         0.031s
Automaton transfers with branching:                0
Automaton transfer successors:                      9471085 (count: 9471085, min: 1, max: 1, avg: 1.00) [1 x 9471085]

CPA algorithm statistics
------------------------
Number of iterations:            6529099
Max size of waitlist:            113
Average size of waitlist:        60
Number of computed successors:   7767168
Max successors for one state:    2
Number of times merged:          820563
Number of times stopped:         999342
Number of times breaked:         4501

Total time for CPA algorithm:       505.751s (Max:     4.294s)
  Time for choose from waitlist:      2.727s
  Time for precision adjustment:    239.376s
  Time for transfer relation:       206.175s
  Time for merge operator:           21.199s
  Time for stop operator:             7.917s
  Time for adding to reached set:    11.199s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   4501
Avg. length of target path (in blocks):              317405 (count: 4501, min: 18, max: 109, avg: 70.52)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                 152.571s
  Counterexample analysis:                           134.876s (Max:     0.086s, Calls: 4501)
    Refinement sat check:                             96.234s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.199s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.568s
  Precision update:                                    2.279s
  ARG update:                                         12.806s

Length of refined path (in blocks):                  311408 (count: 4500, min: 12, max: 108, avg: 69.20)
Number of affected states:                            62029 (count: 4500, min: 1, max: 56, avg: 13.78)
Length (states) of path with itp 'true':             244879 (count: 4500, min: 0, max: 92, avg: 54.42)
Length (states) of path with itp non-trivial itp:     62029 (count: 4500, min: 1, max: 56, avg: 13.78)
Length (states) of path with itp 'false':              4500 (count: 4500, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 4500, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:           57529 (count: 4500, min: 0, max: 55, avg: 12.78)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                4501
Number of successful refinements:     4500
Number of failed refinements:         0
Max. size of reached set before ref.: 49679
Max. size of reached set after ref.:  48819
Avg. size of reached set before ref.: 29832.31
Avg. size of reached set after ref.:  28340.43

Total time for CEGAR algorithm:     894.761s
Time for refinements:               280.156s
Average time for refinement:          0.062s
Max time for refinement:              1.601s

Code Coverage
-----------------------------
  Function coverage:      0.723
  Visited lines:          1955
  Total lines:            2207
  Line coverage:          0.886
  Visited conditions:     517
  Total conditions:       578
  Condition coverage:     0.894

CPAchecker general statistics
-----------------------------
Number of program locations:     3048
Number of CFA edges:             3375
Number of relevant variables:    412
Number of functions:             112
Number of loops:                 8
Size of reached set:             42374
  Number of reached locations:   1302 (43%)
    Avg states per location:     32
    Max states per location:     1008 (at node N205)
  Number of reached functions:   81 (72%)
  Number of partitions:          42261
    Avg size of partitions:      1
    Max size of partitions:      7 (with key [N1695 (before line 6060), Function main called from node N1638, stack depth 1 [551de37d], stack [main]])
  Number of target states:       1
  Size of final wait list        72

Time for analysis setup:          5.501s
  Time for loading CPAs:          0.932s
  Time for loading parser:        0.710s
  Time for CFA construction:      3.664s
    Time for parsing file(s):     1.067s
    Time for AST to CFA:          1.139s
    Time for CFA sanity check:    0.275s
    Time for post-processing:     1.010s
      Time for var class.:        0.423s
Time for Analysis:              894.761s
CPU time for analysis:          894.720s
Total time for CPAchecker:      900.270s
Total CPU time for CPAchecker:  900.220s
Time for statistics:              0.727s

Time for Garbage Collector:      56.307s (in 1489 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:               1179MB (  1125 MiB) max;    444MB (   423 MiB) avg;   1284MB (  1225 MiB) peak
Used non-heap memory:             41MB (    39 MiB) max;     41MB (    39 MiB) avg;     42MB (    40 MiB) peak
Allocated heap memory:          1541MB (  1470 MiB) max;    639MB (   609 MiB) avg
Allocated non-heap memory:        43MB (    41 MiB) max;     43MB (    41 MiB) avg
Total process virtual memory:   8154MB (  7776 MiB) max;   8092MB (  7717 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
