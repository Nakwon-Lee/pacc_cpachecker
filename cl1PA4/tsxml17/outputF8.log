scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.16-rc1/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-sound--drivers--snd-aloop.ko-entry_point_true-unreach-call.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_57mdgdri/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

line 6030: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp = ldv_zalloc(608UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 6034: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___1 = ldv_zalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 6040: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___4 = ldv_zalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 6048: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___8 = ldv_zalloc(608UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snd_pcm_lib_get_vmalloc_page to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snd_pcm_lib_ioctl to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_complete_3 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_suspend_noirq_3 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_restore_noirq_3 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_poweroff_late_3 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_poweroff_noirq_3 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_thaw_noirq_3 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_freeze_late_3 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_prepare_3 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_freeze_noirq_3 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_resume_noirq_3 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_thaw_early_3 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_resume_early_3 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_restore_early_3 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_suspend_late_3 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snd_pcm_stop to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snd_ctl_notify to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snd_pcm_format_width to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock_nested to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snd_card_new to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __mutex_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snd_pcm_new to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snd_pcm_set_ops to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __platform_driver_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function add_timer to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snd_pcm_format_set_silence to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snd_pcm_period_elapsed to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_driver_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_register_full to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snd_card_free to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snd_ctl_new1 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snd_ctl_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snprintf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snd_card_proc_new to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snd_card_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __wake_up to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snd_pcm_suspend_all to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_final_state to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snd_pcm_hw_constraint_integer to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snd_pcm_hw_rule_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __raw_spin_lock_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            1489725 (16% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  1429410 (96%)
  Because of loop head:            56657 (4%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         3658 (0%)
  Times precision was empty:       369345 (25%)
  Times precision was {false}:     4772 (0%)
  Times result was cached:         1103255 (74%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      12353 (1%)
  Times result was 'false':        25960 (2%)
Number of strengthen sat checks:   0
Number of coverage checks:         1848341
  BDD entailment checks:           354071
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       67
Number of predicates discovered:          11
Number of abstraction locations:          227
Max number of predicates per location:    8
Avg number of predicates per location:    2
Total predicates per abstraction:         3676122
Max number of predicates per abstraction: 8
Avg number of predicates per abstraction: 214.66
Number of irrelevant predicates:          2602475 (71%)
Number of preds handled by boolean abs:   22185 (1%)
  Total number of models for allsat:      17842
  Max number of models for allsat:        48
  Avg number of models for allsat:        1.44

Time for post operator:                155.268s
  Time for path formula creation:      151.020s
Time for strengthen operator:            7.461s
Time for prec operator:                211.931s
  Time for abstraction:                190.679s (Max:     2.798s, Count: 1489725)
    Boolean abstraction:                17.645s
    Solving time:                       16.769s (Max:     0.055s)
    Model enumeration time:              2.937s
    Time for BDD construction:           0.408s (Max:     0.018s)
Time for merge operator:                12.488s
Time for coverage check:                 0.664s
  Time for BDD entailment checks:        0.454s
Total time for SMT solver (w/o itp):    19.706s

Number of path formula cache hits:   9439666 (84%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:   110.183s

Total number of created targets for pointer analysis: 28746
   Number of created targets for uf: *(void)* is 809
   Number of created targets for uf: *(struct_snd_pcm)* is 609
   Number of created targets for uf: *signed_int is 7266
   Number of created targets for uf: *(struct_snd_card)* is 114
   Number of created targets for uf: *unsigned_int is 22


Number of BDD nodes:                               2668
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       25432 (count: 825399, min: 0, max: 839, avg: 0.03)
Time for BDD node cleanup:                             0.157s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                 12.903s
  Time for transition matches:                         6.893s
  Time for transition assertions:                      0.003s
  Time for transition actions:                         0.020s
Automaton transfers with branching:                0
Automaton transfer successors:                      9402397 (count: 9402397, min: 1, max: 1, avg: 1.00) [1 x 9402397]

CPA algorithm statistics
------------------------
Number of iterations:            6350664
Max size of waitlist:            112
Average size of waitlist:        58
Number of computed successors:   7493657
Max successors for one state:    2
Number of times merged:          747135
Number of times stopped:         940816
Number of times breaked:         3658

Total time for CPA algorithm:       561.544s (Max:     4.927s)
  Time for choose from waitlist:      2.428s
  Time for precision adjustment:    260.653s
  Time for transfer relation:       238.428s
  Time for merge operator:           22.840s
  Time for stop operator:             8.541s
  Time for adding to reached set:    11.088s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   3658
Avg. length of target path (in blocks):              266778 (count: 3658, min: 18, max: 124, avg: 72.93)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                 132.580s
  Counterexample analysis:                           115.438s (Max:     0.114s, Calls: 3658)
    Refinement sat check:                             81.981s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.140s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.518s
  Precision update:                                    2.016s
  ARG update:                                         12.912s

Length of refined path (in blocks):                  261558 (count: 3657, min: 12, max: 123, avg: 71.52)
Number of affected states:                            52397 (count: 3657, min: 1, max: 56, avg: 14.33)
Length (states) of path with itp 'true':             205504 (count: 3657, min: 0, max: 109, avg: 56.19)
Length (states) of path with itp non-trivial itp:     52397 (count: 3657, min: 1, max: 56, avg: 14.33)
Length (states) of path with itp 'false':              3657 (count: 3657, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 3657, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:           48740 (count: 3657, min: 0, max: 55, avg: 13.33)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                3658
Number of successful refinements:     3657
Number of failed refinements:         0
Max. size of reached set before ref.: 49757
Max. size of reached set after ref.:  48856
Avg. size of reached set before ref.: 30026.37
Avg. size of reached set after ref.:  28249.82

Total time for CEGAR algorithm:     894.770s
Time for refinements:               245.376s
Average time for refinement:          0.067s
Max time for refinement:              0.262s

Code Coverage
-----------------------------
  Function coverage:      0.723
  Visited lines:          1955
  Total lines:            2207
  Line coverage:          0.886
  Visited conditions:     517
  Total conditions:       578
  Condition coverage:     0.894

CPAchecker general statistics
-----------------------------
Number of program locations:     3048
Number of CFA edges:             3375
Number of relevant variables:    412
Number of functions:             112
Number of loops:                 8
Size of reached set:             43544
  Number of reached locations:   1302 (43%)
    Avg states per location:     33
    Max states per location:     1008 (at node N205)
  Number of reached functions:   81 (72%)
  Number of partitions:          43336
    Avg size of partitions:      1
    Max size of partitions:      8 (with key [N1833 (after line 6200), Function main called from node N1638, stack depth 1 [6a969fb8], stack [main]])
  Number of target states:       1
  Size of final wait list        74

Time for analysis setup:          5.497s
  Time for loading CPAs:          0.980s
  Time for loading parser:        0.701s
  Time for CFA construction:      3.708s
    Time for parsing file(s):     1.088s
    Time for AST to CFA:          1.165s
    Time for CFA sanity check:    0.259s
    Time for post-processing:     1.028s
      Time for var class.:        0.449s
Time for Analysis:              894.771s
CPU time for analysis:          894.710s
Total time for CPAchecker:      900.274s
Total CPU time for CPAchecker:  900.200s
Time for statistics:              0.669s

Time for Garbage Collector:      57.707s (in 1403 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:               1354MB (  1292 MiB) max;    474MB (   452 MiB) avg;   1377MB (  1313 MiB) peak
Used non-heap memory:             41MB (    39 MiB) max;     41MB (    39 MiB) avg;     42MB (    40 MiB) peak
Allocated heap memory:          1404MB (  1339 MiB) max;    684MB (   652 MiB) avg
Allocated non-heap memory:        43MB (    41 MiB) max;     43MB (    41 MiB) avg
Total process virtual memory:   8289MB (  7905 MiB) max;   8164MB (  7786 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
