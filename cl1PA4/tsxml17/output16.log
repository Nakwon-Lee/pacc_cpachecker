scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.16-rc1/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-sound--drivers--snd-aloop.ko-entry_point_true-unreach-call.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_k94ynnbd/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

line 6030: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp = ldv_zalloc(608UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 6034: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___1 = ldv_zalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 6040: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___4 = ldv_zalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 6048: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___8 = ldv_zalloc(608UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snd_pcm_lib_get_vmalloc_page to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snd_pcm_lib_ioctl to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_complete_3 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_suspend_noirq_3 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_restore_noirq_3 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_poweroff_late_3 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_poweroff_noirq_3 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_thaw_noirq_3 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_freeze_late_3 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_prepare_3 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_freeze_noirq_3 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_resume_noirq_3 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_thaw_early_3 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_resume_early_3 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_restore_early_3 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_suspend_late_3 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snd_pcm_format_width to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snd_pcm_stop to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snd_card_new to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __mutex_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snd_pcm_new to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snd_pcm_set_ops to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snd_card_free to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snd_ctl_new1 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snd_ctl_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock_nested to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snprintf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snd_card_proc_new to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snd_card_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snd_ctl_notify to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __platform_driver_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snd_pcm_format_set_silence to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __wake_up to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_driver_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snd_pcm_suspend_all to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            22333 (15% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  21161 (95%)
  Because of loop head:            1161 (5%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         11 (0%)
  Times precision was empty:       21774 (97%)
  Times precision was {false}:     185 (1%)
  Times result was cached:         314 (1%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      60 (0%)
  Times result was 'false':        160 (1%)
Number of strengthen sat checks:   0
Number of coverage checks:         20724
  BDD entailment checks:           2554
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       67
Number of predicates discovered:          5
Number of abstraction locations:          11
Max number of predicates per location:    4
Avg number of predicates per location:    1
Total predicates per abstraction:         912
Max number of predicates per abstraction: 4
Avg number of predicates per abstraction: 3.72
Number of irrelevant predicates:          622 (68%)
Number of preds handled by boolean abs:   119 (13%)
  Total number of models for allsat:      129
  Max number of models for allsat:        16
  Avg number of models for allsat:        2.15

Time for post operator:                 11.350s
  Time for path formula creation:       11.079s
Time for strengthen operator:            0.361s
Time for prec operator:                  2.315s
  Time for abstraction:                  1.560s (Max:     0.040s, Count: 22333)
    Boolean abstraction:                 0.468s
    Solving time:                        0.382s (Max:     0.021s)
    Model enumeration time:              0.088s
    Time for BDD construction:           0.051s (Max:     0.013s)
Time for merge operator:                 0.653s
Time for coverage check:                 0.063s
  Time for BDD entailment checks:        0.048s
Total time for SMT solver (w/o itp):     0.470s

Number of path formula cache hits:   108253 (66%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    10.335s

Total number of created targets for pointer analysis: 2325
   Number of created targets for uf: *(struct_snd_pcm)* is 31
   Number of created targets for uf: *signed_int is 901
   Number of created targets for uf: *(struct_snd_card)* is 16
   Number of created targets for uf: *unsigned_int is 481


Number of BDD nodes:                               259
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         166 (count: 25719, min: 0, max: 30, avg: 0.01)
Time for BDD node cleanup:                             0.018s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.748s
  Time for transition matches:                         0.334s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.001s
Automaton transfers with branching:                0
Automaton transfer successors:                       146001 (count: 146001, min: 1, max: 1, avg: 1.00) [1 x 146001]

CPA algorithm statistics
------------------------
Number of iterations:            92489
Max size of waitlist:            525
Average size of waitlist:        225
Number of computed successors:   107436
Max successors for one state:    2
Number of times merged:          9085
Number of times stopped:         11348
Number of times breaked:         11

Total time for CPA algorithm:        23.340s (Max:     3.754s)
  Time for choose from waitlist:      0.176s
  Time for precision adjustment:      4.186s
  Time for transfer relation:        15.569s
  Time for merge operator:            1.159s
  Time for stop operator:             0.442s
  Time for adding to reached set:     0.598s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   11
Avg. length of target path (in blocks):                 239 (count: 11, min: 18, max: 28, avg: 21.73)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.830s
  Counterexample analysis:                             0.343s (Max:     0.046s, Calls: 11)
    Refinement sat check:                              0.246s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.001s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.016s
  Precision update:                                    0.015s
  ARG update:                                          0.442s

Length of refined path (in blocks):                     129 (count: 10, min: 12, max: 15, avg: 12.90)
Number of affected states:                               23 (count: 10, min: 1, max: 6, avg: 2.30)
Length (states) of path with itp 'true':                 96 (count: 10, min: 8, max: 10, avg: 9.60)
Length (states) of path with itp non-trivial itp:        23 (count: 10, min: 1, max: 6, avg: 2.30)
Length (states) of path with itp 'false':                10 (count: 10, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 10, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:              13 (count: 10, min: 0, max: 5, avg: 1.30)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                11
Number of successful refinements:     10
Number of failed refinements:         0
Max. size of reached set before ref.: 14434
Max. size of reached set after ref.:  48
Avg. size of reached set before ref.: 8763.55
Avg. size of reached set after ref.:  47.00

Total time for CEGAR algorithm:      24.408s
Time for refinements:                 1.066s
Average time for refinement:          0.096s
Max time for refinement:              0.162s

Code Coverage
-----------------------------
  Function coverage:      0.545
  Visited lines:          1644
  Total lines:            2207
  Line coverage:          0.745
  Visited conditions:     424
  Total conditions:       578
  Condition coverage:     0.734

CPAchecker general statistics
-----------------------------
Number of program locations:     3048
Number of CFA edges:             3375
Number of relevant variables:    412
Number of functions:             112
Number of loops:                 8
Size of reached set:             8027
  Number of reached locations:   924 (30%)
    Avg states per location:     8
    Max states per location:     144 (at node N0)
  Number of reached functions:   61 (54%)
  Number of partitions:          8024
    Avg size of partitions:      1
    Max size of partitions:      3 (with key [N1695 (before line 6060), Function main called from node N1638, stack depth 1 [997d532], stack [main]])
  Number of target states:       1
  Size of final wait list        280

Time for analysis setup:          5.349s
  Time for loading CPAs:          1.067s
  Time for loading parser:        0.670s
  Time for CFA construction:      3.467s
    Time for parsing file(s):     1.010s
    Time for AST to CFA:          1.135s
    Time for CFA sanity check:    0.221s
    Time for post-processing:     0.913s
      Time for var class.:        0.455s
Time for Analysis:               24.408s
CPU time for analysis:           24.410s
Total time for CPAchecker:       29.764s
Total CPU time for CPAchecker:   29.750s
Time for statistics:              0.277s

Time for Garbage Collector:       1.155s (in 47 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                121MB (   115 MiB) max;     63MB (    60 MiB) avg;    128MB (   122 MiB) peak
Used non-heap memory:             39MB (    38 MiB) max;     35MB (    33 MiB) avg;     40MB (    38 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        42MB (    40 MiB) max;     37MB (    35 MiB) avg
Total process virtual memory:   8019MB (  7647 MiB) max;   8008MB (  7637 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
