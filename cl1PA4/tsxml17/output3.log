scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.16-rc1/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-sound--drivers--snd-aloop.ko-entry_point_true-unreach-call.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_xauzbt_c/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

line 6030: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp = ldv_zalloc(608UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 6034: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___1 = ldv_zalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 6040: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___4 = ldv_zalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 6048: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___8 = ldv_zalloc(608UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snd_pcm_lib_get_vmalloc_page to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snd_pcm_lib_ioctl to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_complete_3 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_suspend_noirq_3 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_restore_noirq_3 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_poweroff_late_3 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_poweroff_noirq_3 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_thaw_noirq_3 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_freeze_late_3 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_prepare_3 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_freeze_noirq_3 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_resume_noirq_3 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_thaw_early_3 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_resume_early_3 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_restore_early_3 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_suspend_late_3 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snd_pcm_format_width to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snd_card_new to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __mutex_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock_nested to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snd_pcm_stop to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snd_pcm_new to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snd_pcm_set_ops to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snd_card_free to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snd_ctl_new1 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snd_ctl_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snprintf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snd_card_proc_new to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snd_card_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __platform_driver_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snd_pcm_format_set_silence to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __wake_up to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snd_pcm_suspend_all to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snd_ctl_notify to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snd_pcm_hw_constraint_integer to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snd_pcm_hw_rule_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __raw_spin_lock_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_driver_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_final_state to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_register_full to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function add_timer to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            29593 (17% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  28020 (95%)
  Because of loop head:            1565 (5%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         8 (0%)
  Times precision was empty:       29011 (98%)
  Times precision was {false}:     138 (0%)
  Times result was cached:         385 (1%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      59 (0%)
  Times result was 'false':        108 (0%)
Number of strengthen sat checks:   0
Number of coverage checks:         27968
  BDD entailment checks:           4318
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       67
Number of predicates discovered:          4
Number of abstraction locations:          9
Max number of predicates per location:    3
Avg number of predicates per location:    1
Total predicates per abstraction:         1048
Max number of predicates per abstraction: 3
Avg number of predicates per abstraction: 5.32
Number of irrelevant predicates:          740 (71%)
Number of preds handled by boolean abs:   98 (9%)
  Total number of models for allsat:      111
  Max number of models for allsat:        8
  Avg number of models for allsat:        1.88

Time for post operator:                 10.267s
  Time for path formula creation:       10.067s
Time for strengthen operator:            0.433s
Time for prec operator:                  2.615s
  Time for abstraction:                  1.541s (Max:     0.043s, Count: 29593)
    Boolean abstraction:                 0.416s
    Solving time:                        0.328s (Max:     0.021s)
    Model enumeration time:              0.088s
    Time for BDD construction:           0.017s (Max:     0.004s)
Time for merge operator:                 0.776s
Time for coverage check:                 0.062s
  Time for BDD entailment checks:        0.049s
Total time for SMT solver (w/o itp):     0.416s

Number of path formula cache hits:   151719 (74%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     8.894s

Total number of created targets for pointer analysis: 1599
   Number of created targets for uf: *(struct_snd_pcm)* is 27
   Number of created targets for uf: *signed_int is 781
   Number of created targets for uf: *(struct_snd_card)* is 14


Number of BDD nodes:                               228
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         149 (count: 34434, min: 0, max: 23, avg: 0.00)
Time for BDD node cleanup:                             0.014s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.760s
  Time for transition matches:                         0.465s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.000s
Automaton transfers with branching:                0
Automaton transfer successors:                       176867 (count: 176867, min: 1, max: 1, avg: 1.00) [1 x 176867]

CPA algorithm statistics
------------------------
Number of iterations:            117518
Max size of waitlist:            394
Average size of waitlist:        153
Number of computed successors:   135339
Max successors for one state:    2
Number of times merged:          11825
Number of times stopped:         15576
Number of times breaked:         8

Total time for CPA algorithm:        24.031s (Max:     5.136s)
  Time for choose from waitlist:      0.250s
  Time for precision adjustment:      5.095s
  Time for transfer relation:        14.886s
  Time for merge operator:            1.366s
  Time for stop operator:             0.520s
  Time for adding to reached set:     0.589s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   8
Avg. length of target path (in blocks):                 165 (count: 8, min: 18, max: 24, avg: 20.63)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.815s
  Counterexample analysis:                             0.260s (Max:     0.044s, Calls: 8)
    Refinement sat check:                              0.157s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.001s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.016s
  Precision update:                                    0.003s
  ARG update:                                          0.528s

Length of refined path (in blocks):                     105 (count: 8, min: 12, max: 15, avg: 13.13)
Number of affected states:                               21 (count: 8, min: 1, max: 6, avg: 2.63)
Length (states) of path with itp 'true':                 76 (count: 8, min: 8, max: 10, avg: 9.50)
Length (states) of path with itp non-trivial itp:        21 (count: 8, min: 1, max: 6, avg: 2.63)
Length (states) of path with itp 'false':                 8 (count: 8, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 8, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:              13 (count: 8, min: 0, max: 5, avg: 1.63)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                8
Number of successful refinements:     8
Number of failed refinements:         0
Max. size of reached set before ref.: 20719
Max. size of reached set after ref.:  48
Avg. size of reached set before ref.: 13497.88
Avg. size of reached set after ref.:  46.75

Total time for CEGAR algorithm:      25.052s
Time for refinements:                 1.021s
Average time for refinement:          0.127s
Max time for refinement:              0.193s

Code Coverage
-----------------------------
  Function coverage:      0.652
  Visited lines:          1829
  Total lines:            2207
  Line coverage:          0.829
  Visited conditions:     481
  Total conditions:       578
  Condition coverage:     0.832

CPAchecker general statistics
-----------------------------
Number of program locations:     3048
Number of CFA edges:             3375
Number of relevant variables:    412
Number of functions:             112
Number of loops:                 8
Size of reached set:             12046
  Number of reached locations:   1164 (38%)
    Avg states per location:     10
    Max states per location:     102 (at node N206)
  Number of reached functions:   73 (65%)
  Number of partitions:          12040
    Avg size of partitions:      1
    Max size of partitions:      4 (with key [N1695 (before line 6060), Function main called from node N1638, stack depth 1 [551de37d], stack [main]])
  Number of target states:       0
  Size of final wait list        154

Time for analysis setup:          5.222s
  Time for loading CPAs:          0.913s
  Time for loading parser:        0.747s
  Time for CFA construction:      3.462s
    Time for parsing file(s):     1.033s
    Time for AST to CFA:          1.143s
    Time for CFA sanity check:    0.209s
    Time for post-processing:     0.892s
      Time for var class.:        0.405s
Time for Analysis:               25.052s
CPU time for analysis:           25.060s
Total time for CPAchecker:       30.279s
Total CPU time for CPAchecker:   30.270s
Time for statistics:              0.302s

Time for Garbage Collector:       1.230s (in 52 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                117MB (   112 MiB) max;     63MB (    60 MiB) avg;    128MB (   122 MiB) peak
Used non-heap memory:             41MB (    39 MiB) max;     35MB (    33 MiB) avg;     41MB (    39 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        43MB (    41 MiB) max;     37MB (    35 MiB) avg
Total process virtual memory:   8086MB (  7712 MiB) max;   8072MB (  7698 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
