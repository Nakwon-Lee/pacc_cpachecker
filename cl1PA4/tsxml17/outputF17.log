scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.16-rc1/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-sound--drivers--snd-aloop.ko-entry_point_true-unreach-call.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_w7g0thj7/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

line 6030: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp = ldv_zalloc(608UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 6034: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___1 = ldv_zalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 6040: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___4 = ldv_zalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 6048: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___8 = ldv_zalloc(608UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snd_pcm_lib_get_vmalloc_page to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snd_pcm_lib_ioctl to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_complete_3 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_suspend_noirq_3 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_restore_noirq_3 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_poweroff_late_3 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_poweroff_noirq_3 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_thaw_noirq_3 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_freeze_late_3 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_prepare_3 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_freeze_noirq_3 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_resume_noirq_3 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_thaw_early_3 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_resume_early_3 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_restore_early_3 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_suspend_late_3 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock_nested to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snd_pcm_format_width to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snd_card_new to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __mutex_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snd_pcm_stop to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snd_pcm_new to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snd_pcm_set_ops to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __platform_driver_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snd_pcm_format_set_silence to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snd_card_free to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snd_ctl_notify to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __wake_up to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_driver_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snd_pcm_suspend_all to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_final_state to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snd_ctl_new1 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snd_ctl_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snprintf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snd_card_proc_new to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_register_full to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function add_timer to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snd_pcm_period_elapsed to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snd_pcm_hw_constraint_integer to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snd_pcm_hw_rule_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snd_card_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __raw_spin_lock_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            675837 (17% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  631802 (93%)
  Because of loop head:            43693 (6%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         342 (0%)
  Times precision was empty:       217125 (32%)
  Times precision was {false}:     3229 (0%)
  Times result was cached:         450077 (67%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      5406 (1%)
  Times result was 'false':        18124 (3%)
Number of strengthen sat checks:   0
Number of coverage checks:         704158
  BDD entailment checks:           207220
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       67
Number of predicates discovered:          10
Number of abstraction locations:          221
Max number of predicates per location:    7
Avg number of predicates per location:    2
Total predicates per abstraction:         1382411
Max number of predicates per abstraction: 7
Avg number of predicates per abstraction: 160.09
Number of irrelevant predicates:          804518 (58%)
Number of preds handled by boolean abs:   8968 (1%)
  Total number of models for allsat:      7181
  Max number of models for allsat:        36
  Avg number of models for allsat:        1.33

Time for post operator:                 43.262s
  Time for path formula creation:       41.342s
Time for strengthen operator:            3.669s
Time for prec operator:                 94.654s
  Time for abstraction:                 84.862s (Max:     0.726s, Count: 675837)
    Boolean abstraction:                 8.196s
    Solving time:                        8.019s (Max:     0.068s)
    Model enumeration time:              1.630s
    Time for BDD construction:           0.302s (Max:     0.016s)
Time for merge operator:                 3.708s
Time for coverage check:                 0.335s
  Time for BDD entailment checks:        0.235s
Total time for SMT solver (w/o itp):     9.649s

Number of path formula cache hits:   4296545 (91%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    28.669s

Total number of created targets for pointer analysis: 28347
   Number of created targets for uf: *(void)* is 37
   Number of created targets for uf: *(struct_snd_pcm)* is 257
   Number of created targets for uf: *signed_int is 12671
   Number of created targets for uf: *(struct_snd_card)* is 201
   Number of created targets for uf: *unsigned_int is 13


Number of BDD nodes:                               1777
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       11226 (count: 479859, min: 0, max: 256, avg: 0.02)
Time for BDD node cleanup:                             0.106s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  5.367s
  Time for transition matches:                         2.747s
  Time for transition assertions:                      0.001s
  Time for transition actions:                         0.007s
Automaton transfers with branching:                0
Automaton transfer successors:                      3903403 (count: 3903403, min: 1, max: 1, avg: 1.00) [1 x 3903403]

CPA algorithm statistics
------------------------
Number of iterations:            2591786
Max size of waitlist:            664
Average size of waitlist:        244
Number of computed successors:   2994936
Max successors for one state:    2
Number of times merged:          248469
Number of times stopped:         334729
Number of times breaked:         342

Total time for CPA algorithm:       225.045s (Max:     2.855s)
  Time for choose from waitlist:      1.631s
  Time for precision adjustment:    116.265s
  Time for transfer relation:        82.730s
  Time for merge operator:            7.385s
  Time for stop operator:             3.895s
  Time for adding to reached set:     5.052s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   342
Avg. length of target path (in blocks):               17455 (count: 342, min: 18, max: 76, avg: 51.04)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  15.192s
  Counterexample analysis:                             8.686s (Max:     0.076s, Calls: 342)
    Refinement sat check:                              6.553s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.025s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.116s
  Precision update:                                    0.227s
  ARG update:                                          5.944s

Length of refined path (in blocks):                   15062 (count: 342, min: 12, max: 74, avg: 44.04)
Number of affected states:                             6197 (count: 342, min: 1, max: 57, avg: 18.12)
Length (states) of path with itp 'true':               8523 (count: 342, min: 0, max: 58, avg: 24.92)
Length (states) of path with itp non-trivial itp:      6197 (count: 342, min: 1, max: 57, avg: 18.12)
Length (states) of path with itp 'false':               342 (count: 342, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 342, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:            5855 (count: 342, min: 0, max: 56, avg: 17.12)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                342
Number of successful refinements:     342
Number of failed refinements:         0
Max. size of reached set before ref.: 41127
Max. size of reached set after ref.:  39879
Avg. size of reached set before ref.: 20249.20
Avg. size of reached set after ref.:  12641.02

Total time for CEGAR algorithm:     249.953s
Time for refinements:                21.327s
Average time for refinement:          0.062s
Max time for refinement:              0.805s

Code Coverage
-----------------------------
  Function coverage:      0.714
  Visited lines:          1968
  Total lines:            2207
  Line coverage:          0.892
  Visited conditions:     521
  Total conditions:       578
  Condition coverage:     0.901

CPAchecker general statistics
-----------------------------
Number of program locations:     3048
Number of CFA edges:             3375
Number of relevant variables:    412
Number of functions:             112
Number of loops:                 8
Size of reached set:             40086
  Number of reached locations:   1316 (43%)
    Avg states per location:     30
    Max states per location:     984 (at node N205)
  Number of reached functions:   80 (71%)
  Number of partitions:          40012
    Avg size of partitions:      1
    Max size of partitions:      6 (with key [N1695 (before line 6060), Function main called from node N1638, stack depth 1 [551de37d], stack [main]])
  Number of target states:       0

Time for analysis setup:          5.415s
  Time for loading CPAs:          0.961s
  Time for loading parser:        0.721s
  Time for CFA construction:      3.628s
    Time for parsing file(s):     1.101s
    Time for AST to CFA:          1.135s
    Time for CFA sanity check:    0.220s
    Time for post-processing:     0.970s
      Time for var class.:        0.421s
Time for Analysis:              249.953s
CPU time for analysis:          249.920s
Time for analyzing result:        0.033s
Total time for CPAchecker:      255.374s
Total CPU time for CPAchecker:  255.320s
Time for statistics:              0.634s

Time for Garbage Collector:      23.156s (in 745 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                384MB (   366 MiB) max;    163MB (   155 MiB) avg;    422MB (   403 MiB) peak
Used non-heap memory:             41MB (    39 MiB) max;     39MB (    37 MiB) avg;     41MB (    39 MiB) peak
Allocated heap memory:           478MB (   456 MiB) max;    243MB (   232 MiB) avg
Allocated non-heap memory:        43MB (    41 MiB) max;     42MB (    40 MiB) avg
Total process virtual memory:   8154MB (  7776 MiB) max;   8096MB (  7721 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
