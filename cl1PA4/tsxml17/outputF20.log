scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.16-rc1/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-sound--drivers--snd-aloop.ko-entry_point_true-unreach-call.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_299acupi/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

line 6030: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp = ldv_zalloc(608UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 6034: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___1 = ldv_zalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 6040: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___4 = ldv_zalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 6048: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___8 = ldv_zalloc(608UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snd_pcm_lib_get_vmalloc_page to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snd_pcm_lib_ioctl to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_complete_3 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_suspend_noirq_3 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_restore_noirq_3 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_poweroff_late_3 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_poweroff_noirq_3 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_thaw_noirq_3 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_freeze_late_3 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_prepare_3 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_freeze_noirq_3 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_resume_noirq_3 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_thaw_early_3 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_resume_early_3 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_restore_early_3 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_suspend_late_3 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock_nested to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snd_pcm_format_width to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snd_card_new to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __mutex_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snd_pcm_stop to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snd_pcm_format_set_silence to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snd_pcm_new to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snd_pcm_set_ops to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snd_card_free to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __platform_driver_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __wake_up to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snd_pcm_suspend_all to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snprintf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snd_card_proc_new to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snd_ctl_new1 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snd_ctl_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snd_card_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snd_ctl_notify to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_driver_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_final_state to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snd_pcm_hw_constraint_integer to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snd_pcm_hw_rule_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __raw_spin_lock_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_register_full to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function add_timer to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            3196801 (17% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  2989463 (94%)
  Because of loop head:            205587 (6%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         1751 (0%)
  Times precision was empty:       967453 (30%)
  Times precision was {false}:     4217 (0%)
  Times result was cached:         2219613 (69%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      5518 (0%)
  Times result was 'false':        37317 (1%)
Number of strengthen sat checks:   0
Number of coverage checks:         4393481
  BDD entailment checks:           1825915
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       67
Number of predicates discovered:          9
Number of abstraction locations:          191
Max number of predicates per location:    7
Avg number of predicates per location:    1
Total predicates per abstraction:         4338535
Max number of predicates per abstraction: 7
Avg number of predicates per abstraction: 445.66
Number of irrelevant predicates:          3508059 (81%)
Number of preds handled by boolean abs:   7710 (0%)
  Total number of models for allsat:      9143
  Max number of models for allsat:        36
  Avg number of models for allsat:        1.66

Time for post operator:                148.435s
  Time for path formula creation:      140.820s
Time for strengthen operator:           15.047s
Time for prec operator:                258.321s
  Time for abstraction:                217.523s (Max:     2.266s, Count: 3196801)
    Boolean abstraction:                 9.956s
    Solving time:                       10.760s (Max:     1.892s)
    Model enumeration time:              2.941s
    Time for BDD construction:           0.263s (Max:     0.013s)
Time for merge operator:                12.532s
Time for coverage check:                 1.854s
  Time for BDD entailment checks:        1.276s
Total time for SMT solver (w/o itp):    13.701s

Number of path formula cache hits:   21633935 (95%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    71.430s

Total number of created targets for pointer analysis: 66506
   Number of created targets for uf: *(void)* is 3189
   Number of created targets for uf: *(struct_snd_pcm)* is 793
   Number of created targets for uf: *signed_int is 26576
   Number of created targets for uf: *(struct_snd_card)* is 413
   Number of created targets for uf: *unsigned_int is 33


Number of BDD nodes:                               1789
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       11313 (count: 2857356, min: 0, max: 364, avg: 0.00)
Time for BDD node cleanup:                             0.377s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                 24.142s
  Time for transition matches:                        14.028s
  Time for transition assertions:                      0.002s
  Time for transition actions:                         0.015s
Automaton transfers with branching:                0
Automaton transfer successors:                     18580776 (count: 18580776, min: 1, max: 1, avg: 1.00) [1 x 18580776]

CPA algorithm statistics
------------------------
Number of iterations:            11887753
Max size of waitlist:            700
Average size of waitlist:        485
Number of computed successors:   13795812
Max successors for one state:    2
Number of times merged:          1283783
Number of times stopped:         1828091
Number of times breaked:         1751

Total time for CPA algorithm:       746.598s (Max:     4.173s)
  Time for choose from waitlist:      6.379s
  Time for precision adjustment:    340.015s
  Time for transfer relation:       301.958s
  Time for merge operator:           28.297s
  Time for stop operator:            16.783s
  Time for adding to reached set:    21.403s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   1751
Avg. length of target path (in blocks):              118812 (count: 1751, min: 18, max: 78, avg: 67.85)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  72.234s
  Counterexample analysis:                            48.522s (Max:     0.067s, Calls: 1751)
    Refinement sat check:                             34.746s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.069s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.253s
  Precision update:                                    0.811s
  ARG update:                                         21.849s

Length of refined path (in blocks):                  116317 (count: 1750, min: 12, max: 77, avg: 66.47)
Number of affected states:                            23837 (count: 1750, min: 1, max: 57, avg: 13.62)
Length (states) of path with itp 'true':              90730 (count: 1750, min: 0, max: 61, avg: 51.85)
Length (states) of path with itp non-trivial itp:     23837 (count: 1750, min: 1, max: 57, avg: 13.62)
Length (states) of path with itp 'false':              1750 (count: 1750, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 1750, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:           22087 (count: 1750, min: 0, max: 56, avg: 12.62)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                1751
Number of successful refinements:     1750
Number of failed refinements:         0
Max. size of reached set before ref.: 38039
Max. size of reached set after ref.:  31421
Avg. size of reached set before ref.: 29795.33
Avg. size of reached set after ref.:  22994.98

Total time for CEGAR algorithm:     894.452s
Time for refinements:               114.652s
Average time for refinement:          0.065s
Max time for refinement:              0.169s

Code Coverage
-----------------------------
  Function coverage:      0.714
  Visited lines:          1934
  Total lines:            2207
  Line coverage:          0.876
  Visited conditions:     509
  Total conditions:       578
  Condition coverage:     0.881

CPAchecker general statistics
-----------------------------
Number of program locations:     3048
Number of CFA edges:             3375
Number of relevant variables:    412
Number of functions:             112
Number of loops:                 8
Size of reached set:             30084
  Number of reached locations:   1265 (42%)
    Avg states per location:     23
    Max states per location:     219 (at node N206)
  Number of reached functions:   80 (71%)
  Number of partitions:          29990
    Avg size of partitions:      1
    Max size of partitions:      10 (with key [N1695 (before line 6060), Function main called from node N1638, stack depth 1 [551de37d], stack [main]])
  Number of target states:       1
  Size of final wait list        493

Time for analysis setup:          5.812s
  Time for loading CPAs:          1.042s
  Time for loading parser:        0.727s
  Time for CFA construction:      3.871s
    Time for parsing file(s):     1.077s
    Time for AST to CFA:          1.236s
    Time for CFA sanity check:    0.285s
    Time for post-processing:     1.100s
      Time for var class.:        0.452s
Time for Analysis:              894.452s
CPU time for analysis:          894.390s
Total time for CPAchecker:      900.269s
Total CPU time for CPAchecker:  900.190s
Time for statistics:              0.473s

Time for Garbage Collector:      46.553s (in 933 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:               1013MB (   966 MiB) max;    583MB (   556 MiB) avg;   1071MB (  1021 MiB) peak
Used non-heap memory:             41MB (    39 MiB) max;     41MB (    39 MiB) avg;     42MB (    40 MiB) peak
Allocated heap memory:          1185MB (  1130 MiB) max;    848MB (   808 MiB) avg
Allocated non-heap memory:        43MB (    41 MiB) max;     42MB (    40 MiB) avg
Total process virtual memory:   8153MB (  7775 MiB) max;   8140MB (  7763 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
