scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.16-rc1/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-sound--drivers--snd-aloop.ko-entry_point_true-unreach-call.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_1l_pfeqn/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

line 6030: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp = ldv_zalloc(608UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 6034: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___1 = ldv_zalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 6040: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___4 = ldv_zalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 6048: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___8 = ldv_zalloc(608UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snd_pcm_lib_get_vmalloc_page to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snd_pcm_lib_ioctl to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_complete_3 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_suspend_noirq_3 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_restore_noirq_3 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_poweroff_late_3 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_poweroff_noirq_3 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_thaw_noirq_3 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_freeze_late_3 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_prepare_3 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_freeze_noirq_3 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_resume_noirq_3 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_thaw_early_3 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_resume_early_3 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_restore_early_3 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_suspend_late_3 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snd_pcm_stop to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snd_ctl_notify to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock_nested to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snd_pcm_format_width to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snd_card_new to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __mutex_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snd_pcm_new to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snd_pcm_set_ops to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __platform_driver_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function add_timer to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snd_pcm_format_set_silence to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snd_pcm_period_elapsed to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_driver_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_register_full to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snd_card_free to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snd_ctl_new1 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snd_ctl_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snprintf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snd_card_proc_new to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snd_card_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __wake_up to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snd_pcm_suspend_all to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_final_state to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snd_pcm_hw_constraint_integer to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snd_pcm_hw_rule_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __raw_spin_lock_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            34543 (18% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  32775 (95%)
  Because of loop head:            1745 (5%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         23 (0%)
  Times precision was empty:       31838 (92%)
  Times precision was {false}:     344 (1%)
  Times result was cached:         2178 (6%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      183 (1%)
  Times result was 'false':        540 (2%)
Number of strengthen sat checks:   0
Number of coverage checks:         29473
  BDD entailment checks:           5135
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       67
Number of predicates discovered:          7
Number of abstraction locations:          72
Max number of predicates per location:    5
Avg number of predicates per location:    1
Total predicates per abstraction:         3437
Max number of predicates per abstraction: 5
Avg number of predicates per abstraction: 6.52
Number of irrelevant predicates:          1940 (56%)
Number of preds handled by boolean abs:   253 (7%)
  Total number of models for allsat:      286
  Max number of models for allsat:        16
  Avg number of models for allsat:        1.56

Time for post operator:                  8.158s
  Time for path formula creation:        7.872s
Time for strengthen operator:            0.398s
Time for prec operator:                  3.621s
  Time for abstraction:                  2.720s (Max:     0.071s, Count: 34543)
    Boolean abstraction:                 0.621s
    Solving time:                        0.479s (Max:     0.048s)
    Model enumeration time:              0.152s
    Time for BDD construction:           0.066s (Max:     0.010s)
Time for merge operator:                 0.619s
Time for coverage check:                 0.090s
  Time for BDD entailment checks:        0.081s
Total time for SMT solver (w/o itp):     0.631s

Number of path formula cache hits:   202108 (86%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     6.751s

Total number of created targets for pointer analysis: 430
   Number of created targets for uf: *(void)* is 5
   Number of created targets for uf: *(struct_snd_pcm)* is 3
   Number of created targets for uf: *signed_int is 126
   Number of created targets for uf: *(struct_snd_card)* is 3
   Number of created targets for uf: *unsigned_int is 19


Number of BDD nodes:                               308
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         431 (count: 39944, min: 0, max: 66, avg: 0.01)
Time for BDD node cleanup:                             0.015s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.698s
  Time for transition matches:                         0.266s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.000s
Automaton transfers with branching:                0
Automaton transfer successors:                       196811 (count: 196811, min: 1, max: 1, avg: 1.00) [1 x 196811]

CPA algorithm statistics
------------------------
Number of iterations:            134644
Max size of waitlist:            90
Average size of waitlist:        42
Number of computed successors:   154009
Max successors for one state:    2
Number of times merged:          12169
Number of times stopped:         17143
Number of times breaked:         23

Total time for CPA algorithm:        22.724s (Max:     4.379s)
  Time for choose from waitlist:      0.229s
  Time for precision adjustment:      5.734s
  Time for transfer relation:        13.005s
  Time for merge operator:            1.057s
  Time for stop operator:             0.581s
  Time for adding to reached set:     0.562s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   23
Avg. length of target path (in blocks):                 829 (count: 23, min: 18, max: 58, avg: 36.04)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   1.614s
  Counterexample analysis:                             0.858s (Max:     0.054s, Calls: 23)
    Refinement sat check:                              0.607s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.001s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.041s
  Precision update:                                    0.054s
  ARG update:                                          0.628s

Length of refined path (in blocks):                     640 (count: 23, min: 12, max: 57, avg: 27.83)
Number of affected states:                              463 (count: 23, min: 1, max: 56, avg: 20.13)
Length (states) of path with itp 'true':                154 (count: 23, min: 0, max: 18, avg: 6.70)
Length (states) of path with itp non-trivial itp:       463 (count: 23, min: 1, max: 56, avg: 20.13)
Length (states) of path with itp 'false':                23 (count: 23, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 23, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:             440 (count: 23, min: 0, max: 55, avg: 19.13)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                23
Number of successful refinements:     23
Number of failed refinements:         0
Max. size of reached set before ref.: 11854
Max. size of reached set after ref.:  2990
Avg. size of reached set before ref.: 5724.70
Avg. size of reached set after ref.:  286.00

Total time for CEGAR algorithm:      24.591s
Time for refinements:                 1.860s
Average time for refinement:          0.080s
Max time for refinement:              0.137s

Code Coverage
-----------------------------
  Function coverage:      0.714
  Visited lines:          1923
  Total lines:            2207
  Line coverage:          0.871
  Visited conditions:     503
  Total conditions:       578
  Condition coverage:     0.870

CPAchecker general statistics
-----------------------------
Number of program locations:     3048
Number of CFA edges:             3375
Number of relevant variables:    412
Number of functions:             112
Number of loops:                 8
Size of reached set:             11237
  Number of reached locations:   1258 (41%)
    Avg states per location:     8
    Max states per location:     288 (at node N205)
  Number of reached functions:   80 (71%)
  Number of partitions:          11229
    Avg size of partitions:      1
    Max size of partitions:      3 (with key [N1695 (before line 6060), Function main called from node N1638, stack depth 1 [997d532], stack [main]])
  Number of target states:       0
  Size of final wait list        72

Time for analysis setup:          5.639s
  Time for loading CPAs:          1.056s
  Time for loading parser:        0.702s
  Time for CFA construction:      3.714s
    Time for parsing file(s):     1.106s
    Time for AST to CFA:          1.169s
    Time for CFA sanity check:    0.239s
    Time for post-processing:     1.024s
      Time for var class.:        0.464s
Time for Analysis:               24.591s
CPU time for analysis:           24.590s
Total time for CPAchecker:       30.234s
Total CPU time for CPAchecker:   30.220s
Time for statistics:              0.314s

Time for Garbage Collector:       0.922s (in 53 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                110MB (   105 MiB) max;     55MB (    53 MiB) avg;    115MB (   110 MiB) peak
Used non-heap memory:             39MB (    38 MiB) max;     34MB (    33 MiB) avg;     40MB (    38 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        42MB (    40 MiB) max;     36MB (    35 MiB) avg
Total process virtual memory:   8086MB (  7711 MiB) max;   8073MB (  7699 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
