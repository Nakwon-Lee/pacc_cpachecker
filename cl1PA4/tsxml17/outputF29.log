scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.16-rc1/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-sound--drivers--snd-aloop.ko-entry_point_true-unreach-call.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_ryac5z1l/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

line 6030: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp = ldv_zalloc(608UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 6034: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___1 = ldv_zalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 6040: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___4 = ldv_zalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 6048: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___8 = ldv_zalloc(608UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snd_pcm_lib_get_vmalloc_page to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snd_pcm_lib_ioctl to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_complete_3 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_suspend_noirq_3 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_restore_noirq_3 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_poweroff_late_3 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_poweroff_noirq_3 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_thaw_noirq_3 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_freeze_late_3 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_prepare_3 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_freeze_noirq_3 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_resume_noirq_3 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_thaw_early_3 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_resume_early_3 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_restore_early_3 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_suspend_late_3 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snd_pcm_format_width to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snd_pcm_format_set_silence to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock_nested to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snd_pcm_stop to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function add_timer to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snd_ctl_notify to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snd_pcm_hw_constraint_integer to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snd_pcm_hw_rule_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __raw_spin_lock_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snd_pcm_period_elapsed to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_driver_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_final_state to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __platform_driver_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_register_full to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __wake_up to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snd_pcm_suspend_all to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snd_card_new to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __mutex_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snd_pcm_new to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snd_pcm_set_ops to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snd_card_free to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snprintf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snd_card_proc_new to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snd_card_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snd_ctl_new1 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snd_ctl_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            3211175 (17% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  3083637 (96%)
  Because of loop head:            124855 (4%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         2683 (0%)
  Times precision was empty:       537474 (17%)
  Times precision was {false}:     3987 (0%)
  Times result was cached:         2663559 (83%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      6155 (0%)
  Times result was 'false':        34239 (1%)
Number of strengthen sat checks:   0
Number of coverage checks:         3399611
  BDD entailment checks:           741369
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       67
Number of predicates discovered:          7
Number of abstraction locations:          226
Max number of predicates per location:    4
Avg number of predicates per location:    1
Total predicates per abstraction:         3094274
Max number of predicates per abstraction: 4
Avg number of predicates per abstraction: 305.10
Number of irrelevant predicates:          2276433 (74%)
Number of preds handled by boolean abs:   9106 (0%)
  Total number of models for allsat:      8500
  Max number of models for allsat:        6
  Avg number of models for allsat:        1.38

Time for post operator:                125.814s
  Time for path formula creation:      118.655s
Time for strengthen operator:           14.762s
Time for prec operator:                274.829s
  Time for abstraction:                241.854s (Max:     1.614s, Count: 3211175)
    Boolean abstraction:                11.152s
    Solving time:                       12.173s (Max:     1.576s)
    Model enumeration time:              1.082s
    Time for BDD construction:           0.251s (Max:     0.012s)
Time for merge operator:                10.137s
Time for coverage check:                 1.056s
  Time for BDD entailment checks:        0.646s
Total time for SMT solver (w/o itp):    13.255s

Number of path formula cache hits:   22287710 (96%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    65.880s

Total number of created targets for pointer analysis: 9998
   Number of created targets for uf: *(void)* is 41
   Number of created targets for uf: *(struct_snd_pcm)* is 33
   Number of created targets for uf: *signed_int is 386
   Number of created targets for uf: *(struct_snd_card)* is 7
   Number of created targets for uf: *unsigned_int is 5


Number of BDD nodes:                               310
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       12382 (count: 1337507, min: 0, max: 782, avg: 0.01)
Time for BDD node cleanup:                             0.216s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                 22.583s
  Time for transition matches:                        12.948s
  Time for transition assertions:                      0.006s
  Time for transition actions:                         0.016s
Automaton transfers with branching:                0
Automaton transfer successors:                     18928485 (count: 18928485, min: 1, max: 1, avg: 1.00) [1 x 18928485]

CPA algorithm statistics
------------------------
Number of iterations:            13135783
Max size of waitlist:            234
Average size of waitlist:        133
Number of computed successors:   15124283
Max successors for one state:    2
Number of times merged:          1329121
Number of times stopped:         1785186
Number of times breaked:         2683

Total time for CPA algorithm:       734.960s (Max:     3.598s)
  Time for choose from waitlist:      5.110s
  Time for precision adjustment:    359.632s
  Time for transfer relation:       279.981s
  Time for merge operator:           24.467s
  Time for stop operator:            15.232s
  Time for adding to reached set:    20.071s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   2683
Avg. length of target path (in blocks):              225043 (count: 2683, min: 26, max: 120, avg: 83.88)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                 117.592s
  Counterexample analysis:                            91.095s (Max:     0.086s, Calls: 2683)
    Refinement sat check:                             63.051s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.144s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.629s
  Precision update:                                    0.900s
  ARG update:                                         23.323s

Length of refined path (in blocks):                  220760 (count: 2682, min: 12, max: 119, avg: 82.31)
Number of affected states:                            88521 (count: 2682, min: 1, max: 106, avg: 33.01)
Length (states) of path with itp 'true':             129557 (count: 2682, min: 0, max: 86, avg: 48.31)
Length (states) of path with itp non-trivial itp:     88521 (count: 2682, min: 1, max: 106, avg: 33.01)
Length (states) of path with itp 'false':              2682 (count: 2682, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 2682, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:           85839 (count: 2682, min: 0, max: 105, avg: 32.01)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                2683
Number of successful refinements:     2682
Number of failed refinements:         0
Max. size of reached set before ref.: 31742
Max. size of reached set after ref.:  25866
Avg. size of reached set before ref.: 13046.48
Avg. size of reached set after ref.:  8090.55

Total time for CEGAR algorithm:     894.570s
Time for refinements:               145.457s
Average time for refinement:          0.054s
Max time for refinement:              0.213s

Code Coverage
-----------------------------
  Function coverage:      0.607
  Visited lines:          1739
  Total lines:            2207
  Line coverage:          0.788
  Visited conditions:     457
  Total conditions:       578
  Condition coverage:     0.791

CPAchecker general statistics
-----------------------------
Number of program locations:     3048
Number of CFA edges:             3375
Number of relevant variables:    412
Number of functions:             112
Number of loops:                 8
Size of reached set:             11247
  Number of reached locations:   1089 (36%)
    Avg states per location:     10
    Max states per location:     240 (at node N205)
  Number of reached functions:   68 (61%)
  Number of partitions:          11169
    Avg size of partitions:      1
    Max size of partitions:      6 (with key [N1695 (before line 6060), Function main called from node N1638, stack depth 1 [6a969fb8], stack [main]])
  Number of target states:       1
  Size of final wait list        173

Time for analysis setup:          5.665s
  Time for loading CPAs:          1.036s
  Time for loading parser:        0.729s
  Time for CFA construction:      3.735s
    Time for parsing file(s):     1.053s
    Time for AST to CFA:          1.143s
    Time for CFA sanity check:    0.286s
    Time for post-processing:     1.062s
      Time for var class.:        0.428s
Time for Analysis:              894.570s
CPU time for analysis:          894.510s
Total time for CPAchecker:      900.240s
Total CPU time for CPAchecker:  900.160s
Time for statistics:              0.275s

Time for Garbage Collector:      44.112s (in 1956 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                627MB (   598 MiB) max;    289MB (   276 MiB) avg;    639MB (   609 MiB) peak
Used non-heap memory:             41MB (    39 MiB) max;     40MB (    38 MiB) avg;     41MB (    39 MiB) peak
Allocated heap memory:           798MB (   761 MiB) max;    430MB (   411 MiB) avg
Allocated non-heap memory:        43MB (    41 MiB) max;     43MB (    41 MiB) avg
Total process virtual memory:   8220MB (  7839 MiB) max;   8105MB (  7730 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
