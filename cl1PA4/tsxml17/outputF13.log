scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.16-rc1/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-sound--drivers--snd-aloop.ko-entry_point_true-unreach-call.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_xrx338ec/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

line 6030: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp = ldv_zalloc(608UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 6034: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___1 = ldv_zalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 6040: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___4 = ldv_zalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 6048: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___8 = ldv_zalloc(608UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snd_pcm_lib_get_vmalloc_page to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snd_pcm_lib_ioctl to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_complete_3 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_suspend_noirq_3 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_restore_noirq_3 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_poweroff_late_3 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_poweroff_noirq_3 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_thaw_noirq_3 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_freeze_late_3 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_prepare_3 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_freeze_noirq_3 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_resume_noirq_3 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_thaw_early_3 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_resume_early_3 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_restore_early_3 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_suspend_late_3 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snd_pcm_format_width to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snd_pcm_format_set_silence to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock_nested to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snd_pcm_stop to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snd_ctl_notify to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function add_timer to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snd_pcm_period_elapsed to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_driver_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __platform_driver_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_register_full to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __wake_up to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snd_pcm_suspend_all to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snd_card_new to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __mutex_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snd_pcm_new to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snd_pcm_set_ops to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snd_card_free to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snd_ctl_new1 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snd_ctl_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snprintf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snd_card_proc_new to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snd_card_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_final_state to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snd_pcm_hw_constraint_integer to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snd_pcm_hw_rule_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __raw_spin_lock_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            2494179 (18% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  2383539 (96%)
  Because of loop head:            109353 (4%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         1287 (0%)
  Times precision was empty:       382381 (15%)
  Times precision was {false}:     3190 (0%)
  Times result was cached:         2094068 (84%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      14540 (1%)
  Times result was 'false':        17938 (1%)
Number of strengthen sat checks:   0
Number of coverage checks:         2144995
  BDD entailment checks:           494183
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       67
Number of predicates discovered:          10
Number of abstraction locations:          234
Max number of predicates per location:    7
Avg number of predicates per location:    2
Total predicates per abstraction:         4511333
Max number of predicates per abstraction: 7
Avg number of predicates per abstraction: 254.45
Number of irrelevant predicates:          1975218 (44%)
Number of preds handled by boolean abs:   21161 (0%)
  Total number of models for allsat:      18000
  Max number of models for allsat:        36
  Avg number of models for allsat:        1.24

Time for post operator:                184.406s
  Time for path formula creation:      177.190s
Time for strengthen operator:           12.143s
Time for prec operator:                314.341s
  Time for abstraction:                281.740s (Max:     0.869s, Count: 2494179)
    Boolean abstraction:                18.187s
    Solving time:                       16.876s (Max:     0.047s)
    Model enumeration time:              2.411s
    Time for BDD construction:           0.324s (Max:     0.009s)
Time for merge operator:                10.003s
Time for coverage check:                 0.899s
  Time for BDD entailment checks:        0.630s
Total time for SMT solver (w/o itp):    19.287s

Number of path formula cache hits:   15156809 (90%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:   126.139s

Total number of created targets for pointer analysis: 48705
   Number of created targets for uf: *(void)* is 1913
   Number of created targets for uf: *(struct_snd_pcm)* is 1151
   Number of created targets for uf: *signed_int is 13061
   Number of created targets for uf: *(struct_snd_card)* is 203
   Number of created targets for uf: *unsigned_int is 24


Number of BDD nodes:                               1354
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       29310 (count: 985082, min: 0, max: 711, avg: 0.03)
Time for BDD node cleanup:                             0.240s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                 17.373s
  Time for transition matches:                        10.152s
  Time for transition assertions:                      0.003s
  Time for transition actions:                         0.008s
Automaton transfers with branching:                0
Automaton transfer successors:                     13859338 (count: 13859338, min: 1, max: 1, avg: 1.00) [1 x 13859338]

CPA algorithm statistics
------------------------
Number of iterations:            9545980
Max size of waitlist:            83
Average size of waitlist:        53
Number of computed successors:   10818313
Max successors for one state:    2
Number of times merged:          825406
Number of times stopped:         1209369
Number of times breaked:         1287

Total time for CPA algorithm:       792.186s (Max:     7.416s)
  Time for choose from waitlist:      4.878s
  Time for precision adjustment:    387.441s
  Time for transfer relation:       317.529s
  Time for merge operator:           20.511s
  Time for stop operator:            14.127s
  Time for adding to reached set:    18.883s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   1287
Avg. length of target path (in blocks):               83056 (count: 1287, min: 18, max: 104, avg: 64.53)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  54.803s
  Counterexample analysis:                            35.427s (Max:     0.072s, Calls: 1287)
    Refinement sat check:                             25.681s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.054s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.236s
  Precision update:                                    0.656s
  ARG update:                                         17.905s

Length of refined path (in blocks):                   79117 (count: 1287, min: 12, max: 103, avg: 61.47)
Number of affected states:                            19854 (count: 1287, min: 1, max: 56, avg: 15.43)
Length (states) of path with itp 'true':              57976 (count: 1287, min: 0, max: 87, avg: 45.05)
Length (states) of path with itp non-trivial itp:     19854 (count: 1287, min: 1, max: 56, avg: 15.43)
Length (states) of path with itp 'false':              1287 (count: 1287, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 1287, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:           18567 (count: 1287, min: 0, max: 55, avg: 14.43)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                1287
Number of successful refinements:     1287
Number of failed refinements:         0
Max. size of reached set before ref.: 50662
Max. size of reached set after ref.:  43495
Avg. size of reached set before ref.: 26075.41
Avg. size of reached set after ref.:  18634.42

Total time for CEGAR algorithm:     895.099s
Time for refinements:                84.834s
Average time for refinement:          0.065s
Max time for refinement:              3.429s

Code Coverage
-----------------------------
  Function coverage:      0.714
  Visited lines:          1950
  Total lines:            2207
  Line coverage:          0.884
  Visited conditions:     517
  Total conditions:       578
  Condition coverage:     0.894

CPAchecker general statistics
-----------------------------
Number of program locations:     3048
Number of CFA edges:             3375
Number of relevant variables:    412
Number of functions:             112
Number of loops:                 8
Size of reached set:             14451
  Number of reached locations:   1297 (43%)
    Avg states per location:     11
    Max states per location:     367 (at node N205)
  Number of reached functions:   80 (71%)
  Number of partitions:          14426
    Avg size of partitions:      1
    Max size of partitions:      3 (with key [N1695 (before line 6060), Function main called from node N1638, stack depth 1 [6075b2d3], stack [main]])
  Number of target states:       0
  Size of final wait list        51

Time for analysis setup:          5.154s
  Time for loading CPAs:          0.932s
  Time for loading parser:        0.642s
  Time for CFA construction:      3.445s
    Time for parsing file(s):     1.015s
    Time for AST to CFA:          1.100s
    Time for CFA sanity check:    0.221s
    Time for post-processing:     0.930s
      Time for var class.:        0.458s
Time for Analysis:              895.099s
CPU time for analysis:          895.020s
Total time for CPAchecker:      900.257s
Total CPU time for CPAchecker:  900.170s
Time for statistics:              0.338s

Time for Garbage Collector:      52.475s (in 864 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:               1264MB (  1206 MiB) max;    734MB (   700 MiB) avg;   1285MB (  1226 MiB) peak
Used non-heap memory:             41MB (    39 MiB) max;     40MB (    38 MiB) avg;     41MB (    40 MiB) peak
Allocated heap memory:          1405MB (  1340 MiB) max;   1073MB (  1024 MiB) avg
Allocated non-heap memory:        43MB (    41 MiB) max;     43MB (    41 MiB) avg
Total process virtual memory:   8289MB (  7905 MiB) max;   8213MB (  7832 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
