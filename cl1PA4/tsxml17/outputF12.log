scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.16-rc1/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-sound--drivers--snd-aloop.ko-entry_point_true-unreach-call.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_hjmrzejm/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

line 6030: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp = ldv_zalloc(608UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 6034: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___1 = ldv_zalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 6040: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___4 = ldv_zalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 6048: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___8 = ldv_zalloc(608UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snd_pcm_lib_get_vmalloc_page to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snd_pcm_lib_ioctl to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_complete_3 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_suspend_noirq_3 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_restore_noirq_3 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_poweroff_late_3 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_poweroff_noirq_3 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_thaw_noirq_3 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_freeze_late_3 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_prepare_3 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_freeze_noirq_3 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_resume_noirq_3 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_thaw_early_3 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_resume_early_3 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_restore_early_3 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_suspend_late_3 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_driver_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snd_card_free to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __wake_up to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snd_pcm_suspend_all to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock_nested to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snd_pcm_format_set_silence to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function add_timer to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snd_pcm_period_elapsed to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __platform_driver_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_register_full to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snd_card_new to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __mutex_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snd_pcm_new to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snd_pcm_set_ops to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snd_ctl_new1 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snd_ctl_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snprintf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snd_card_proc_new to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snd_card_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snd_pcm_format_width to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snd_pcm_stop to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snd_ctl_notify to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_final_state to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snd_pcm_hw_constraint_integer to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snd_pcm_hw_rule_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __raw_spin_lock_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            970235 (18% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  915511 (94%)
  Because of loop head:            54498 (6%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         226 (0%)
  Times precision was empty:       202659 (21%)
  Times precision was {false}:     3329 (0%)
  Times result was cached:         759613 (78%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      4634 (0%)
  Times result was 'false':        13234 (1%)
Number of strengthen sat checks:   0
Number of coverage checks:         768552
  BDD entailment checks:           205068
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       67
Number of predicates discovered:          10
Number of abstraction locations:          221
Max number of predicates per location:    7
Avg number of predicates per location:    2
Total predicates per abstraction:         2444713
Max number of predicates per abstraction: 7
Avg number of predicates per abstraction: 307.01
Number of irrelevant predicates:          1791833 (73%)
Number of preds handled by boolean abs:   7675 (0%)
  Total number of models for allsat:      5238
  Max number of models for allsat:        36
  Avg number of models for allsat:        1.13

Time for post operator:                 96.320s
  Time for path formula creation:       93.678s
Time for strengthen operator:            5.366s
Time for prec operator:                143.086s
  Time for abstraction:                129.710s (Max:     0.788s, Count: 970235)
    Boolean abstraction:                 6.311s
    Solving time:                        7.142s (Max:     0.065s)
    Model enumeration time:              0.850s
    Time for BDD construction:           0.173s (Max:     0.008s)
Time for merge operator:                 4.955s
Time for coverage check:                 0.393s
  Time for BDD entailment checks:        0.287s
Total time for SMT solver (w/o itp):     7.992s

Number of path formula cache hits:   5339473 (85%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    73.444s

Total number of created targets for pointer analysis: 28596
   Number of created targets for uf: *(void)* is 321
   Number of created targets for uf: *(struct_snd_pcm)* is 161
   Number of created targets for uf: *signed_int is 8231
   Number of created targets for uf: *(struct_snd_card)* is 132
   Number of created targets for uf: *unsigned_int is 13


Number of BDD nodes:                               1107
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        9520 (count: 454272, min: 0, max: 250, avg: 0.02)
Time for BDD node cleanup:                             0.093s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                 10.491s
  Time for transition matches:                         4.654s
  Time for transition assertions:                      0.001s
  Time for transition actions:                         0.000s
Automaton transfers with branching:                0
Automaton transfer successors:                      5260547 (count: 5260547, min: 1, max: 1, avg: 1.00) [1 x 5260547]

CPA algorithm statistics
------------------------
Number of iterations:            3638957
Max size of waitlist:            50
Average size of waitlist:        23
Number of computed successors:   4095559
Max successors for one state:    2
Number of times merged:          281742
Number of times stopped:         440724
Number of times breaked:         226

Total time for CPA algorithm:       367.040s (Max:     5.317s)
  Time for choose from waitlist:      1.678s
  Time for precision adjustment:    175.701s
  Time for transfer relation:       154.735s
  Time for merge operator:            9.093s
  Time for stop operator:             5.518s
  Time for adding to reached set:     7.183s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   226
Avg. length of target path (in blocks):               11812 (count: 226, min: 18, max: 75, avg: 52.27)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  13.198s
  Counterexample analysis:                             5.839s (Max:     0.064s, Calls: 226)
    Refinement sat check:                              4.385s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.006s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.103s
  Precision update:                                    0.150s
  ARG update:                                          6.999s

Length of refined path (in blocks):                   10832 (count: 226, min: 12, max: 74, avg: 47.93)
Number of affected states:                             5301 (count: 226, min: 1, max: 57, avg: 23.46)
Length (states) of path with itp 'true':               5305 (count: 226, min: 0, max: 58, avg: 23.47)
Length (states) of path with itp non-trivial itp:      5301 (count: 226, min: 1, max: 57, avg: 23.46)
Length (states) of path with itp 'false':               226 (count: 226, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 226, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:            5075 (count: 226, min: 0, max: 56, avg: 22.46)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                226
Number of successful refinements:     226
Number of failed refinements:         0
Max. size of reached set before ref.: 34315
Max. size of reached set after ref.:  26577
Avg. size of reached set before ref.: 24718.89
Avg. size of reached set after ref.:  8722.46

Total time for CEGAR algorithm:     385.685s
Time for refinements:                17.190s
Average time for refinement:          0.076s
Max time for refinement:              0.223s

Code Coverage
-----------------------------
  Function coverage:      0.714
  Visited lines:          1968
  Total lines:            2207
  Line coverage:          0.892
  Visited conditions:     521
  Total conditions:       578
  Condition coverage:     0.901

CPAchecker general statistics
-----------------------------
Number of program locations:     3048
Number of CFA edges:             3375
Number of relevant variables:    412
Number of functions:             112
Number of loops:                 8
Size of reached set:             26407
  Number of reached locations:   1316 (43%)
    Avg states per location:     20
    Max states per location:     648 (at node N205)
  Number of reached functions:   80 (71%)
  Number of partitions:          26361
    Avg size of partitions:      1
    Max size of partitions:      4 (with key [N1695 (before line 6060), Function main called from node N1638, stack depth 1 [551de37d], stack [main]])
  Number of target states:       0

Time for analysis setup:          5.428s
  Time for loading CPAs:          1.001s
  Time for loading parser:        0.721s
  Time for CFA construction:      3.548s
    Time for parsing file(s):     1.011s
    Time for AST to CFA:          1.067s
    Time for CFA sanity check:    0.278s
    Time for post-processing:     1.020s
      Time for var class.:        0.401s
Time for Analysis:              385.685s
CPU time for analysis:          385.660s
Time for analyzing result:        0.023s
Total time for CPAchecker:      391.117s
Total CPU time for CPAchecker:  391.080s
Time for statistics:              0.624s

Time for Garbage Collector:      32.009s (in 594 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                738MB (   704 MiB) max;    351MB (   335 MiB) avg;    813MB (   775 MiB) peak
Used non-heap memory:             40MB (    38 MiB) max;     39MB (    37 MiB) avg;     40MB (    38 MiB) peak
Allocated heap memory:           928MB (   885 MiB) max;    518MB (   494 MiB) avg
Allocated non-heap memory:        42MB (    40 MiB) max;     41MB (    39 MiB) avg
Total process virtual memory:   8154MB (  7776 MiB) max;   8110MB (  7734 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
