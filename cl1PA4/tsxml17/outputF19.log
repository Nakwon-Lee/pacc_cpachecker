scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.16-rc1/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-sound--drivers--snd-aloop.ko-entry_point_true-unreach-call.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_oxf1cvnu/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

line 6030: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp = ldv_zalloc(608UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 6034: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___1 = ldv_zalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 6040: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___4 = ldv_zalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 6048: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___8 = ldv_zalloc(608UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snd_pcm_lib_get_vmalloc_page to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snd_pcm_lib_ioctl to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_complete_3 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_suspend_noirq_3 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_restore_noirq_3 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_poweroff_late_3 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_poweroff_noirq_3 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_thaw_noirq_3 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_freeze_late_3 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_prepare_3 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_freeze_noirq_3 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_resume_noirq_3 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_thaw_early_3 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_resume_early_3 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_restore_early_3 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_suspend_late_3 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snd_pcm_stop to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snd_ctl_notify to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock_nested to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snd_pcm_format_width to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snd_card_new to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __mutex_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snd_pcm_new to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snd_pcm_set_ops to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __platform_driver_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_driver_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snd_pcm_format_set_silence to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function add_timer to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snd_pcm_period_elapsed to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snd_card_free to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __wake_up to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snd_ctl_new1 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snd_ctl_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snd_pcm_suspend_all to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_register_full to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snprintf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snd_card_proc_new to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snd_card_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_final_state to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snd_pcm_hw_constraint_integer to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snd_pcm_hw_rule_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __raw_spin_lock_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            1356435 (18% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  1280884 (94%)
  Because of loop head:            75021 (6%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         530 (0%)
  Times precision was empty:       213551 (16%)
  Times precision was {false}:     2987 (0%)
  Times result was cached:         1130129 (83%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      9768 (1%)
  Times result was 'false':        18132 (1%)
Number of strengthen sat checks:   0
Number of coverage checks:         1090111
  BDD entailment checks:           288419
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       67
Number of predicates discovered:          10
Number of abstraction locations:          228
Max number of predicates per location:    7
Avg number of predicates per location:    2
Total predicates per abstraction:         4284821
Max number of predicates per abstraction: 7
Avg number of predicates per abstraction: 335.93
Number of irrelevant predicates:          3046930 (71%)
Number of preds handled by boolean abs:   17005 (0%)
  Total number of models for allsat:      12088
  Max number of models for allsat:        36
  Avg number of models for allsat:        1.24

Time for post operator:                100.012s
  Time for path formula creation:       96.812s
Time for strengthen operator:            6.411s
Time for prec operator:                212.740s
  Time for abstraction:                194.752s (Max:     1.541s, Count: 1356435)
    Boolean abstraction:                12.715s
    Solving time:                       12.523s (Max:     0.035s)
    Model enumeration time:              1.650s
    Time for BDD construction:           0.232s (Max:     0.006s)
Time for merge operator:                 5.151s
Time for coverage check:                 0.514s
  Time for BDD entailment checks:        0.335s
Total time for SMT solver (w/o itp):    14.173s

Number of path formula cache hits:   8052285 (90%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    70.152s

Total number of created targets for pointer analysis: 34443
   Number of created targets for uf: *(void)* is 165
   Number of created targets for uf: *(struct_snd_pcm)* is 117
   Number of created targets for uf: *signed_int is 11091
   Number of created targets for uf: *(struct_snd_card)* is 176
   Number of created targets for uf: *unsigned_int is 5


Number of BDD nodes:                               1417
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       19848 (count: 578182, min: 0, max: 583, avg: 0.03)
Time for BDD node cleanup:                             0.122s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                 10.531s
  Time for transition matches:                         6.064s
  Time for transition assertions:                      0.015s
  Time for transition actions:                         0.005s
Automaton transfers with branching:                0
Automaton transfer successors:                      7432698 (count: 7432698, min: 1, max: 1, avg: 1.00) [1 x 7432698]

CPA algorithm statistics
------------------------
Number of iterations:            5117197
Max size of waitlist:            94
Average size of waitlist:        48
Number of computed successors:   5775136
Max successors for one state:    2
Number of times merged:          400846
Number of times stopped:         617034
Number of times breaked:         530

Total time for CPA algorithm:       467.031s (Max:     5.576s)
  Time for choose from waitlist:      2.366s
  Time for precision adjustment:    253.749s
  Time for transfer relation:       170.288s
  Time for merge operator:           10.292s
  Time for stop operator:             6.662s
  Time for adding to reached set:     8.976s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   530
Avg. length of target path (in blocks):               28807 (count: 530, min: 18, max: 87, avg: 54.35)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  23.239s
  Counterexample analysis:                            12.911s (Max:     0.057s, Calls: 530)
    Refinement sat check:                              9.703s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.021s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.131s
  Precision update:                                    0.312s
  ARG update:                                          9.580s

Length of refined path (in blocks):                   27013 (count: 530, min: 12, max: 75, avg: 50.97)
Number of affected states:                             8852 (count: 530, min: 1, max: 57, avg: 16.70)
Length (states) of path with itp 'true':              17631 (count: 530, min: 0, max: 58, avg: 33.27)
Length (states) of path with itp non-trivial itp:      8852 (count: 530, min: 1, max: 57, avg: 16.70)
Length (states) of path with itp 'false':               530 (count: 530, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 530, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:            8322 (count: 530, min: 0, max: 56, avg: 15.70)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                530
Number of successful refinements:     530
Number of failed refinements:         0
Max. size of reached set before ref.: 52422
Max. size of reached set after ref.:  48137
Avg. size of reached set before ref.: 29501.91
Avg. size of reached set after ref.:  19879.72

Total time for CEGAR algorithm:     511.933s
Time for refinements:                36.243s
Average time for refinement:          0.068s
Max time for refinement:              0.559s

Code Coverage
-----------------------------
  Function coverage:      0.714
  Visited lines:          1968
  Total lines:            2207
  Line coverage:          0.892
  Visited conditions:     521
  Total conditions:       578
  Condition coverage:     0.901

CPAchecker general statistics
-----------------------------
Number of program locations:     3048
Number of CFA edges:             3375
Number of relevant variables:    412
Number of functions:             112
Number of loops:                 8
Size of reached set:             40212
  Number of reached locations:   1316 (43%)
    Avg states per location:     30
    Max states per location:     984 (at node N205)
  Number of reached functions:   80 (71%)
  Number of partitions:          40126
    Avg size of partitions:      1
    Max size of partitions:      6 (with key [N1695 (before line 6060), Function main called from node N1638, stack depth 1 [551de37d], stack [main]])
  Number of target states:       0

Time for analysis setup:          5.339s
  Time for loading CPAs:          1.002s
  Time for loading parser:        0.695s
  Time for CFA construction:      3.468s
    Time for parsing file(s):     0.977s
    Time for AST to CFA:          1.132s
    Time for CFA sanity check:    0.228s
    Time for post-processing:     0.944s
      Time for var class.:        0.437s
Time for Analysis:              511.933s
CPU time for analysis:          511.890s
Time for analyzing result:        0.036s
Total time for CPAchecker:      517.277s
Total CPU time for CPAchecker:  517.220s
Time for statistics:              0.656s

Time for Garbage Collector:      44.056s (in 901 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                847MB (   808 MiB) max;    365MB (   348 MiB) avg;    890MB (   849 MiB) peak
Used non-heap memory:             41MB (    39 MiB) max;     40MB (    38 MiB) avg;     42MB (    40 MiB) peak
Allocated heap memory:           965MB (   921 MiB) max;    533MB (   508 MiB) avg
Allocated non-heap memory:        43MB (    41 MiB) max;     43MB (    41 MiB) avg
Total process virtual memory:   8222MB (  7841 MiB) max;   8126MB (  7750 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
