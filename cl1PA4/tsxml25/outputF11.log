scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.16-rc1/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--staging--rtl8723au--r8723au.ko-entry_point_true-unreach-call.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_b74wodn0/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

lines 24027-24028: Dead code detected: __asm__ volatile (".pushsection .smp_locks,\"a\"\n.balign 4\n.long 671f - .\n.popsection\n671:\n\tlock; xaddb %b0, %1\n": "+q" (__ret),
                       "+m" (v->counter): : "memory", "cc"); (CFACreationUtils.addEdgeToCFA, INFO)

lines 24031-24032: Dead code detected: __asm__ volatile (".pushsection .smp_locks,\"a\"\n.balign 4\n.long 671f - .\n.popsection\n671:\n\tlock; xaddw %w0, %1\n": "+r" (__ret),
                       "+m" (v->counter): : "memory", "cc"); (CFACreationUtils.addEdgeToCFA, INFO)

lines 24039-24040: Dead code detected: __asm__ volatile (".pushsection .smp_locks,\"a\"\n.balign 4\n.long 671f - .\n.popsection\n671:\n\tlock; xaddq %q0, %1\n": "+r" (__ret),
                       "+m" (v->counter): : "memory", "cc"); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (4UL) {
  case 1UL:
  __asm__ volatile (".pushsection .smp_locks,\"a\"\n.balign 4\n.long 671f - .\n.popsection\n671:\n\tlock; xaddb %b0, %1\n": "+q" (__ret),
                       "+m" (v->counter): : "memory", "cc");
  goto ldv_5626;
  case 2UL:
  __asm__ volatile (".pushsection .smp_locks,\"a\"\n.balign 4\n.long 671f - .\n.popsection\n671:\n\tlock; xaddw %w0, %1\n": "+r" (__ret),
                       "+m" (v->counter): : "memory", "cc");
  goto ldv_5626;
  case 4UL:
  __asm__ volatile (".pushsection .smp_locks,\"a\"\n.balign 4\n.long 671f - .\n.popsection\n671:\n\tlock; xaddl %0, %1\n": "+r" (__ret),
                       "+m" (v->counter): : "memory", "cc");
  goto ldv_5626;
  case 8UL:
  __asm__ volatile (".pushsection .smp_locks,\"a\"\n.balign 4\n.long 671f - .\n.popsection\n671:\n\tlock; xaddq %q0, %1\n": "+r" (__ret),
                       "+m" (v->counter): : "memory", "cc");
  goto ldv_5626;
  default:
  __xadd_wrong_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 53727: Dead code detected: return (1U); (CFACreationUtils.addEdgeToCFA, INFO)

line 53875: Dead code detected: __ms = 5UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 53894: Dead code detected: __ms___0 = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 54011: Dead code detected: __ms = 5UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 54030: Dead code detected: __ms___0 = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 54081: Dead code detected: __ms = 5UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 54100: Dead code detected: __ms___0 = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 67206: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 67374: Dead code detected: __ms___2 = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 77530: Dead code detected: __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

line 77533: Dead code detected: __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

line 77536: Dead code detected: __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (8UL) {
  case 1UL:
  __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& current_task));
  goto ldv_3067;
  case 2UL:
  __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_3067;
  case 4UL:
  __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_3067;
  case 8UL:
  __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_3067;
  default:
  __bad_percpu_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 93820: Dead code detected: return (0U); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 12854: Function pointer *rw8 with type int (*)(struct rtw_adapter *, u16 , u8 *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

line 79060: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp = ldv_zalloc(32UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function down to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function msecs_to_jiffies to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock_nested to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_control_msg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function request_firmware to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function kmemdup to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function release_firmware to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function jiffies_to_msecs to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function msleep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memcmp to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            170514 (11% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  149463 (88%)
  Because of loop head:            21049 (12%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         2 (0%)
  Times precision was empty:       170483 (100%)
  Times precision was {false}:     2 (0%)
  Times result was cached:         19 (0%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      10 (0%)
  Times result was 'false':        3 (0%)
Number of strengthen sat checks:   0
Number of coverage checks:         358131
  BDD entailment checks:           41047
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       270
Number of predicates discovered:          2
Number of abstraction locations:          15
Max number of predicates per location:    1
Avg number of predicates per location:    1
Total predicates per abstraction:         31
Max number of predicates per abstraction: 1
Avg number of predicates per abstraction: 2.58
Number of irrelevant predicates:          3 (10%)
Number of preds handled by boolean abs:   10 (32%)
  Total number of models for allsat:      10
  Max number of models for allsat:        1
  Avg number of models for allsat:        1.00

Time for post operator:                377.696s
  Time for path formula creation:      376.821s
Time for strengthen operator:            1.639s
Time for prec operator:                  7.874s
  Time for abstraction:                  0.592s (Max:     0.029s, Count: 170514)
    Boolean abstraction:                 0.021s
    Solving time:                        0.025s (Max:     0.010s)
    Model enumeration time:              0.002s
    Time for BDD construction:           0.001s (Max:     0.001s)
Time for merge operator:               438.357s
Time for coverage check:                 0.112s
  Time for BDD entailment checks:        0.060s
Total time for SMT solver (w/o itp):     0.027s

Number of path formula cache hits:   994664 (56%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:   342.923s

Total number of created targets for pointer analysis: 13775434
   Number of created targets for uf: *unsigned_short_int is 41
   Number of created targets for uf: *signed_char is 4
   Number of created targets for uf: *signed_int is 357
   Number of created targets for uf: *unsigned_char is 133
   Number of created targets for uf: *unsigned_int is 543


Number of BDD nodes:                               202
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                          23 (count: 211606, min: 0, max: 23, avg: 0.00)
Time for BDD node cleanup:                             0.031s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  2.655s
  Time for transition matches:                         1.543s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.000s
Automaton transfers with branching:                0
Automaton transfer successors:                      1609103 (count: 1609103, min: 1, max: 1, avg: 1.00) [1 x 1609103]

CPA algorithm statistics
------------------------
Number of iterations:            1065814
Max size of waitlist:            48
Average size of waitlist:        34
Number of computed successors:   1265476
Max successors for one state:    2
Number of times merged:          158542
Number of times stopped:         199589
Number of times breaked:         2

Total time for CPA algorithm:       864.783s (Max:   859.721s)
  Time for choose from waitlist:      0.814s
  Time for precision adjustment:     16.713s
  Time for transfer relation:       397.267s
  Time for merge operator:          439.403s
  Time for stop operator:             1.687s
  Time for adding to reached set:     5.028s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   2
Avg. length of target path (in blocks):                 101 (count: 2, min: 31, max: 70, avg: 50.50)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   8.159s
  Counterexample analysis:                             8.111s (Max:     4.186s, Calls: 2)
    Refinement sat check:                              7.898s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.001s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.006s
  Precision update:                                    0.002s
  ARG update:                                          0.024s

Length of refined path (in blocks):                      52 (count: 2, min: 26, max: 26, avg: 26.00)
Number of affected states:                               26 (count: 2, min: 13, max: 13, avg: 13.00)
Length (states) of path with itp 'true':                 24 (count: 2, min: 12, max: 12, avg: 12.00)
Length (states) of path with itp non-trivial itp:        26 (count: 2, min: 13, max: 13, avg: 13.00)
Length (states) of path with itp 'false':                 2 (count: 2, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 2, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:              24 (count: 2, min: 12, max: 12, avg: 12.00)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                2
Number of successful refinements:     2
Number of failed refinements:         0
Max. size of reached set before ref.: 683
Max. size of reached set after ref.:  38
Avg. size of reached set before ref.: 442.00
Avg. size of reached set after ref.:  38.00

Total time for CEGAR algorithm:     872.971s
Time for refinements:                 8.188s
Average time for refinement:          4.094s
Max time for refinement:              4.213s

Code Coverage
-----------------------------
  Function coverage:      0.071
  Visited lines:          5353
  Total lines:            51303
  Line coverage:          0.104
  Visited conditions:     1414
  Total conditions:       19732
  Condition coverage:     0.072

CPAchecker general statistics
-----------------------------
Number of program locations:     76181
Number of CFA edges:             90520
Number of relevant variables:    12585
Number of functions:             2316
Number of loops:                 568
Size of reached set:             1065076
  Size of final wait list        41

Time for analysis setup:         27.268s
  Time for loading CPAs:          1.614s
  Time for loading parser:        0.768s
  Time for CFA construction:     24.678s
    Time for parsing file(s):     3.700s
    Time for AST to CFA:          8.422s
    Time for CFA sanity check:    2.440s
    Time for post-processing:     9.769s
      Time for var class.:        5.505s
Time for Analysis:              872.971s
CPU time for analysis:          872.910s
Total time for CPAchecker:      900.253s
Total CPU time for CPAchecker:  900.090s
Time for statistics:              7.780s

Time for Garbage Collector:      51.566s (in 630 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:               1720MB (  1640 MiB) max;    700MB (   668 MiB) avg;   1746MB (  1665 MiB) peak
Used non-heap memory:             49MB (    47 MiB) max;     40MB (    38 MiB) avg;     49MB (    47 MiB) peak
Allocated heap memory:          2192MB (  2091 MiB) max;   1063MB (  1014 MiB) avg
Allocated non-heap memory:        51MB (    49 MiB) max;     50MB (    48 MiB) avg
Total process virtual memory:   8155MB (  7777 MiB) max;   8149MB (  7772 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
