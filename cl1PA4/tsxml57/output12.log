scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.16-rc1/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--ethernet--sis--sis900.ko-entry_point_true-unreach-call.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_eycf1ngc/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 6002: Function pointer *(ops->alloc) with type void *(*)(struct device *, size_t , dma_addr_t *, gfp_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6034: Function pointer *(ops->free) with type void (*)(struct device *, size_t , void *, dma_addr_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 5871-5872: Function pointer *(ops->map_page) with type dma_addr_t (*)(struct device *, struct page *, unsigned long, size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 5925: Function pointer *(ops->mapping_error) with type int (*)(struct device *, dma_addr_t ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 5905: Function pointer *(ops->unmap_page) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

line 9328: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp = ldv_zalloc(196UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 9332: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___1 = ldv_zalloc(32UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 9338: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___4 = ldv_zalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ndo_uninit_5 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ndo_init_5 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function eth_mac_addr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function eth_change_mtu to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function eth_validate_addr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 9082: Ignoring function call through function pointer *(timer->function): (*(timer->function))(timer->data); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function __pci_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_final_state to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iowrite32 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ioread32 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __phys_addr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

lines 5871-5872: Ignoring function call through function pointer *(ops->map_page): addr = (*(ops->map_page))(dev, ((struct page *)0L) + (tmp___2 >> 12), ((unsigned long)ptr) & 4095UL, size, dir, attrs); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function debug_dma_map_page to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netif_carrier_off to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iowrite8 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 5905: Ignoring function call through function pointer *(ops->unmap_page): (*(ops->unmap_page))(dev, addr, size, dir, attrs); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function debug_dma_unmap_page to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function request_threaded_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function disable_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strlcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __netif_schedule to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 9267: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___0 = ldv_zalloc(44UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            33132 (16% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  25372 (77%)
  Because of loop head:            7737 (23%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         23 (0%)
  Times precision was empty:       30536 (92%)
  Times precision was {false}:     546 (2%)
  Times result was cached:         1873 (6%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      177 (1%)
  Times result was 'false':        412 (1%)
Number of strengthen sat checks:   0
Number of coverage checks:         22331
  BDD entailment checks:           5891
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       61
Number of predicates discovered:          3
Number of abstraction locations:          34
Max number of predicates per location:    2
Avg number of predicates per location:    1
Total predicates per abstraction:         3525
Max number of predicates per abstraction: 2
Avg number of predicates per abstraction: 4.88
Number of irrelevant predicates:          2210 (63%)
Number of preds handled by boolean abs:   211 (6%)
  Total number of models for allsat:      224
  Max number of models for allsat:        4
  Avg number of models for allsat:        1.27

Time for post operator:                  7.902s
  Time for path formula creation:        7.635s
Time for strengthen operator:            0.417s
Time for prec operator:                  3.933s
  Time for abstraction:                  3.165s (Max:     0.039s, Count: 33132)
    Boolean abstraction:                 0.550s
    Solving time:                        0.517s (Max:     0.017s)
    Model enumeration time:              0.109s
    Time for BDD construction:           0.113s (Max:     0.037s)
Time for merge operator:                 0.494s
Time for coverage check:                 0.077s
  Time for BDD entailment checks:        0.071s
Total time for SMT solver (w/o itp):     0.626s

Number of path formula cache hits:   179628 (77%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     6.597s

Total number of created targets for pointer analysis: 431
   Number of created targets for uf: *unsigned_char is 25
   Number of created targets for uf: *unsigned_int is 27


Number of BDD nodes:                               209
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         374 (count: 40294, min: 0, max: 76, avg: 0.01)
Time for BDD node cleanup:                             0.015s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.747s
  Time for transition matches:                         0.391s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.000s
Automaton transfers with branching:                0
Automaton transfer successors:                       202069 (count: 202069, min: 1, max: 1, avg: 1.00) [1 x 202069]

CPA algorithm statistics
------------------------
Number of iterations:            114049
Max size of waitlist:            232
Average size of waitlist:        118
Number of computed successors:   130958
Max successors for one state:    2
Number of times merged:          8220
Number of times stopped:         12894
Number of times breaked:         23

Total time for CPA algorithm:        22.348s (Max:     2.622s)
  Time for choose from waitlist:      0.256s
  Time for precision adjustment:      5.943s
  Time for transfer relation:        12.855s
  Time for merge operator:            0.825s
  Time for stop operator:             0.518s
  Time for adding to reached set:     0.582s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   23
Avg. length of target path (in blocks):                1353 (count: 23, min: 51, max: 75, avg: 58.83)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   1.325s
  Counterexample analysis:                             0.697s (Max:     0.050s, Calls: 23)
    Refinement sat check:                              0.399s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.001s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.021s
  Precision update:                                    0.016s
  ARG update:                                          0.561s

Length of refined path (in blocks):                     389 (count: 22, min: 14, max: 34, avg: 17.68)
Number of affected states:                              103 (count: 22, min: 1, max: 21, avg: 4.68)
Length (states) of path with itp 'true':                264 (count: 22, min: 12, max: 12, avg: 12.00)
Length (states) of path with itp non-trivial itp:       103 (count: 22, min: 1, max: 21, avg: 4.68)
Length (states) of path with itp 'false':                22 (count: 22, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 22, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:              81 (count: 22, min: 0, max: 20, avg: 3.68)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                23
Number of successful refinements:     22
Number of failed refinements:         0
Max. size of reached set before ref.: 6163
Max. size of reached set after ref.:  63
Avg. size of reached set before ref.: 5175.61
Avg. size of reached set after ref.:  63.00

Total time for CEGAR algorithm:      23.881s
Time for refinements:                 1.532s
Average time for refinement:          0.066s
Max time for refinement:              0.149s

Code Coverage
-----------------------------
  Function coverage:      0.488
  Visited lines:          2092
  Total lines:            3475
  Line coverage:          0.602
  Visited conditions:     359
  Total conditions:       806
  Condition coverage:     0.445

CPAchecker general statistics
-----------------------------
Number of program locations:     4802
Number of CFA edges:             5381
Number of relevant variables:    742
Number of functions:             166
Number of loops:                 47
Size of reached set:             6163
  Number of reached locations:   1000 (21%)
    Avg states per location:     6
    Max states per location:     174 (at node N488)
  Number of reached functions:   81 (49%)
  Number of partitions:          6149
    Avg size of partitions:      1
    Max size of partitions:      5 (with key [N3356 (before line 9356), Function main called from node N3303, stack depth 1 [5c77ba8f], stack [main]])
  Number of target states:       1
  Size of final wait list        227

Time for analysis setup:          6.364s
  Time for loading CPAs:          1.077s
  Time for loading parser:        0.676s
  Time for CFA construction:      4.475s
    Time for parsing file(s):     1.110s
    Time for AST to CFA:          1.658s
    Time for CFA sanity check:    0.322s
    Time for post-processing:     1.137s
      Time for var class.:        0.562s
Time for Analysis:               23.881s
CPU time for analysis:           23.880s
Total time for CPAchecker:       30.250s
Total CPU time for CPAchecker:   30.230s
Time for statistics:              0.241s

Time for Garbage Collector:       0.868s (in 54 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 91MB (    87 MiB) max;     54MB (    52 MiB) avg;     98MB (    93 MiB) peak
Used non-heap memory:             40MB (    38 MiB) max;     35MB (    33 MiB) avg;     41MB (    39 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        42MB (    40 MiB) max;     37MB (    35 MiB) avg
Total process virtual memory:   8085MB (  7710 MiB) max;   8072MB (  7698 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
