scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.16-rc1/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--ethernet--sis--sis900.ko-entry_point_true-unreach-call.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_ganpt6m_/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 6002: Function pointer *(ops->alloc) with type void *(*)(struct device *, size_t , dma_addr_t *, gfp_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6034: Function pointer *(ops->free) with type void (*)(struct device *, size_t , void *, dma_addr_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 5871-5872: Function pointer *(ops->map_page) with type dma_addr_t (*)(struct device *, struct page *, unsigned long, size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 5925: Function pointer *(ops->mapping_error) with type int (*)(struct device *, dma_addr_t ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 5905: Function pointer *(ops->unmap_page) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

line 9328: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp = ldv_zalloc(196UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 9332: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___1 = ldv_zalloc(32UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 9338: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___4 = ldv_zalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ndo_uninit_5 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ndo_init_5 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function eth_mac_addr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function eth_change_mtu to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function eth_validate_addr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 9082: Ignoring function call through function pointer *(timer->function): (*(timer->function))(timer->data); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function __pci_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_final_state to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iowrite32 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ioread32 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __phys_addr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

lines 5871-5872: Ignoring function call through function pointer *(ops->map_page): addr = (*(ops->map_page))(dev, ((struct page *)0L) + (tmp___2 >> 12), ((unsigned long)ptr) & 4095UL, size, dir, attrs); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function debug_dma_map_page to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netif_carrier_off to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iowrite8 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 5905: Ignoring function call through function pointer *(ops->unmap_page): (*(ops->unmap_page))(dev, addr, size, dir, attrs); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function debug_dma_unmap_page to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function request_threaded_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function disable_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strlcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __netif_schedule to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 9267: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___0 = ldv_zalloc(44UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function add_timer to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netif_carrier_on to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_enable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dma_set_mask to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_set_master to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function alloc_etherdev_mqs to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_request_regions to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_iomap to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_release_regions to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function unregister_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function debug_dma_free_coherent to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 6034: Ignoring function call through function pointer *(ops->free): (*(ops->free))(dev, size, vaddr, bus, attrs); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function debug_dma_mapping_error to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 5925: Ignoring function call through function pointer *(ops->mapping_error): tmp___0 = (*(ops->mapping_error))(dev, dma_addr); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function __dev_kfree_skb_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mii_ethtool_gset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __raw_spin_lock_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_restore_state to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_set_power_state to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dev_kfree_skb_any to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 6002: Ignoring function call through function pointer *(ops->alloc): memory = (*(ops->alloc))(dev, size, dma_handle, tmp___1, attrs); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function debug_dma_alloc_coherent to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __netdev_alloc_skb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netif_device_attach to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_iounmap to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            1668384 (16% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  1109306 (66%)
  Because of loop head:            558724 (33%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         354 (0%)
  Times precision was empty:       276791 (17%)
  Times precision was {false}:     5199 (0%)
  Times result was cached:         1342117 (80%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      44277 (3%)
  Times result was 'false':        35096 (2%)
Number of strengthen sat checks:   0
Number of coverage checks:         1317643
  BDD entailment checks:           634205
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       61
Number of predicates discovered:          29
Number of abstraction locations:          180
Max number of predicates per location:    14
Avg number of predicates per location:    7
Total predicates per abstraction:         12102490
Max number of predicates per abstraction: 14
Avg number of predicates per abstraction: 244.61
Number of irrelevant predicates:          3339539 (28%)
Number of preds handled by boolean abs:   276711 (2%)
  Total number of models for allsat:      84769
  Max number of models for allsat:        40
  Avg number of models for allsat:        1.91

Time for post operator:                104.149s
  Time for path formula creation:       99.563s
Time for strengthen operator:            8.322s
Time for prec operator:                566.812s
  Time for abstraction:                547.391s (Max:     3.888s, Count: 1668384)
    Boolean abstraction:                48.057s
    Solving time:                       36.319s (Max:     0.017s)
    Model enumeration time:              6.539s
    Time for BDD construction:           1.796s (Max:     0.106s)
Time for merge operator:                 4.585s
Time for coverage check:                 0.834s
  Time for BDD entailment checks:        0.647s
Total time for SMT solver (w/o itp):    42.858s

Number of path formula cache hits:   10217253 (84%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    69.773s

Total number of created targets for pointer analysis: 18310
   Number of created targets for uf: *(void)* is 125
   Number of created targets for uf: *signed_int is 85
   Number of created targets for uf: *unsigned_char is 88
   Number of created targets for uf: *unsigned_int is 3


Number of BDD nodes:                               21380
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       98505 (count: 1210731, min: 0, max: 991, avg: 0.08)
Time for BDD node cleanup:                             0.251s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                 15.424s
  Time for transition matches:                         9.467s
  Time for transition assertions:                      0.001s
  Time for transition actions:                         0.000s
Automaton transfers with branching:                0
Automaton transfer successors:                     10531004 (count: 10531004, min: 1, max: 1, avg: 1.00) [1 x 10531004]

CPA algorithm statistics
------------------------
Number of iterations:            5712860
Max size of waitlist:            370
Average size of waitlist:        112
Number of computed successors:   6490993
Max successors for one state:    2
Number of times merged:          341719
Number of times stopped:         690982
Number of times breaked:         354

Total time for CPA algorithm:       864.114s (Max:    15.925s)
  Time for choose from waitlist:      2.755s
  Time for precision adjustment:    614.022s
  Time for transfer relation:       202.377s
  Time for merge operator:           10.061s
  Time for stop operator:             7.803s
  Time for adding to reached set:    11.133s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   354
Avg. length of target path (in blocks):               33591 (count: 354, min: 35, max: 201, avg: 94.89)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  24.012s
  Counterexample analysis:                            11.576s (Max:     0.130s, Calls: 354)
    Refinement sat check:                              6.001s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.044s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.219s
  Precision update:                                    0.304s
  ARG update:                                         11.640s

Length of refined path (in blocks):                   24431 (count: 354, min: 14, max: 199, avg: 69.01)
Number of affected states:                            21561 (count: 354, min: 0, max: 198, avg: 60.91)
Length (states) of path with itp 'true':               2516 (count: 354, min: 0, max: 84, avg: 7.11)
Length (states) of path with itp non-trivial itp:     21561 (count: 354, min: 0, max: 198, avg: 60.91)
Length (states) of path with itp 'false':               354 (count: 354, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:         194 (count: 354, min: 0, max: 6, avg: 0.55)
Equal non-trivial interpolants along paths:           21014 (count: 354, min: 0, max: 197, avg: 59.36)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                354
Number of successful refinements:     354
Number of failed refinements:         0
Max. size of reached set before ref.: 79403
Max. size of reached set after ref.:  45070
Avg. size of reached set before ref.: 19247.06
Avg. size of reached set after ref.:  3140.60

Total time for CEGAR algorithm:     893.963s
Time for refinements:                28.938s
Average time for refinement:          0.081s
Max time for refinement:              0.289s

Code Coverage
-----------------------------
  Function coverage:      0.283
  Visited lines:          1803
  Total lines:            3475
  Line coverage:          0.519
  Visited conditions:     356
  Total conditions:       806
  Condition coverage:     0.442

CPAchecker general statistics
-----------------------------
Number of program locations:     4802
Number of CFA edges:             5381
Number of relevant variables:    742
Number of functions:             166
Number of loops:                 47
Size of reached set:             63230
  Number of reached locations:   876 (18%)
    Avg states per location:     72
    Max states per location:     1462 (at node N1367)
  Number of reached functions:   47 (28%)
  Number of partitions:          61941
    Avg size of partitions:      1
    Max size of partitions:      10 (with key [N3356 (before line 9356), Function main called from node N3303, stack depth 1 [7a0ef219], stack [main]])
  Number of target states:       0
  Size of final wait list        168

Time for analysis setup:          6.271s
  Time for loading CPAs:          1.000s
  Time for loading parser:        0.699s
  Time for CFA construction:      4.437s
    Time for parsing file(s):     1.177s
    Time for AST to CFA:          1.632s
    Time for CFA sanity check:    0.358s
    Time for post-processing:     1.080s
      Time for var class.:        0.544s
Time for Analysis:              893.963s
CPU time for analysis:          893.860s
Total time for CPAchecker:      900.238s
Total CPU time for CPAchecker:  900.120s
Time for statistics:              0.836s

Time for Garbage Collector:      75.022s (in 1587 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:               1129MB (  1077 MiB) max;    420MB (   400 MiB) avg;   1214MB (  1158 MiB) peak
Used non-heap memory:             40MB (    39 MiB) max;     40MB (    38 MiB) avg;     41MB (    39 MiB) peak
Allocated heap memory:          1337MB (  1275 MiB) max;    615MB (   586 MiB) avg
Allocated non-heap memory:        43MB (    41 MiB) max;     42MB (    40 MiB) avg
Total process virtual memory:   8897MB (  8485 MiB) max;   8445MB (  8054 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
