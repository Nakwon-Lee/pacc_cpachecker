scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.16-rc1/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--ethernet--sis--sis900.ko-entry_point_true-unreach-call.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_6n79iqsx/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 6002: Function pointer *(ops->alloc) with type void *(*)(struct device *, size_t , dma_addr_t *, gfp_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6034: Function pointer *(ops->free) with type void (*)(struct device *, size_t , void *, dma_addr_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 5871-5872: Function pointer *(ops->map_page) with type dma_addr_t (*)(struct device *, struct page *, unsigned long, size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 5925: Function pointer *(ops->mapping_error) with type int (*)(struct device *, dma_addr_t ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 5905: Function pointer *(ops->unmap_page) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

line 9328: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp = ldv_zalloc(196UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 9332: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___1 = ldv_zalloc(32UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 9338: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___4 = ldv_zalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ndo_uninit_5 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ndo_init_5 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function eth_mac_addr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function eth_change_mtu to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function eth_validate_addr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 9082: Ignoring function call through function pointer *(timer->function): (*(timer->function))(timer->data); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function __pci_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_final_state to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iowrite32 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function disable_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netif_carrier_off to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ioread32 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strlcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_enable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dma_set_mask to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_set_master to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function alloc_etherdev_mqs to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_request_regions to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_iomap to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_release_regions to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function unregister_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mii_ethtool_gset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 9267: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___0 = ldv_zalloc(44UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function pci_restore_state to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_set_power_state to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __raw_spin_lock_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __netif_schedule to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function request_threaded_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iowrite8 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 5905: Ignoring function call through function pointer *(ops->unmap_page): (*(ops->unmap_page))(dev, addr, size, dir, attrs); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function debug_dma_unmap_page to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __phys_addr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

lines 5871-5872: Ignoring function call through function pointer *(ops->map_page): addr = (*(ops->map_page))(dev, ((struct page *)0L) + (tmp___2 >> 12), ((unsigned long)ptr) & 4095UL, size, dir, attrs); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function debug_dma_map_page to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dev_kfree_skb_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function enable_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netif_device_detach to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_save_state to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function debug_dma_mapping_error to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 5925: Ignoring function call through function pointer *(ops->mapping_error): tmp___0 = (*(ops->mapping_error))(dev, dma_addr); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function pci_iounmap to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function debug_dma_free_coherent to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 6034: Ignoring function call through function pointer *(ops->free): (*(ops->free))(dev, size, vaddr, bus, attrs); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 6002: Ignoring function call through function pointer *(ops->alloc): memory = (*(ops->alloc))(dev, size, dma_handle, tmp___1, attrs); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function debug_dma_alloc_coherent to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dev_kfree_skb_any to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function add_timer to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function consume_skb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __netdev_alloc_skb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netif_device_attach to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_get_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ioread16 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netif_carrier_on to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function get_random_bytes to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_dev_put to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function register_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function yield to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            2980675 (17% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  2269780 (76%)
  Because of loop head:            710313 (24%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         582 (0%)
  Times precision was empty:       1295712 (43%)
  Times precision was {false}:     6983 (0%)
  Times result was cached:         1657701 (56%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      20279 (1%)
  Times result was 'false':        54233 (2%)
Number of strengthen sat checks:   0
Number of coverage checks:         2515434
  BDD entailment checks:           1007572
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       61
Number of predicates discovered:          32
Number of abstraction locations:          340
Max number of predicates per location:    14
Avg number of predicates per location:    5
Total predicates per abstraction:         13046080
Max number of predicates per abstraction: 14
Avg number of predicates per abstraction: 478.54
Number of irrelevant predicates:          8501121 (65%)
Number of preds handled by boolean abs:   81682 (1%)
  Total number of models for allsat:      36059
  Max number of models for allsat:        80
  Avg number of models for allsat:        1.78

Time for post operator:                 93.004s
  Time for path formula creation:       85.683s
Time for strengthen operator:           12.606s
Time for prec operator:                440.594s
  Time for abstraction:                408.128s (Max:     1.492s, Count: 2980675)
    Boolean abstraction:                18.974s
    Solving time:                       16.282s (Max:     0.029s)
    Model enumeration time:              2.900s
    Time for BDD construction:           0.747s (Max:     0.012s)
Time for merge operator:                 5.195s
Time for coverage check:                 1.191s
  Time for BDD entailment checks:        0.875s
Total time for SMT solver (w/o itp):    19.182s

Number of path formula cache hits:   20163199 (97%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    34.056s

Total number of created targets for pointer analysis: 11964
   Number of created targets for uf: *(void)* is 250
   Number of created targets for uf: *signed_int is 10
   Number of created targets for uf: *unsigned_char is 369
   Number of created targets for uf: *unsigned_long_long_int is 45
   Number of created targets for uf: *unsigned_int is 29


Number of BDD nodes:                               25735
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       48485 (count: 2467446, min: 0, max: 648, avg: 0.02)
Time for BDD node cleanup:                             0.450s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                 23.286s
  Time for transition matches:                        13.615s
  Time for transition assertions:                      0.001s
  Time for transition actions:                         0.005s
Automaton transfers with branching:                0
Automaton transfer successors:                     17341308 (count: 17341308, min: 1, max: 1, avg: 1.00) [1 x 17341308]

CPA algorithm statistics
------------------------
Number of iterations:            10323383
Max size of waitlist:            866
Average size of waitlist:        254
Number of computed successors:   11743266
Max successors for one state:    2
Number of times merged:          753931
Number of times stopped:         1240821
Number of times breaked:         582

Total time for CPA algorithm:       843.042s (Max:     8.329s)
  Time for choose from waitlist:      5.088s
  Time for precision adjustment:    520.773s
  Time for transfer relation:       244.294s
  Time for merge operator:           15.131s
  Time for stop operator:            13.017s
  Time for adding to reached set:    17.727s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   582
Avg. length of target path (in blocks):               44713 (count: 582, min: 35, max: 146, avg: 76.83)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  35.757s
  Counterexample analysis:                            14.918s (Max:     0.069s, Calls: 582)
    Refinement sat check:                              8.587s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.025s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.180s
  Precision update:                                    0.612s
  ARG update:                                         19.728s

Length of refined path (in blocks):                   32826 (count: 582, min: 14, max: 123, avg: 56.40)
Number of affected states:                            20778 (count: 582, min: 1, max: 122, avg: 35.70)
Length (states) of path with itp 'true':              11466 (count: 582, min: 0, max: 84, avg: 19.70)
Length (states) of path with itp non-trivial itp:     20778 (count: 582, min: 1, max: 122, avg: 35.70)
Length (states) of path with itp 'false':               582 (count: 582, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:         218 (count: 582, min: 0, max: 6, avg: 0.37)
Equal non-trivial interpolants along paths:           19978 (count: 582, min: 0, max: 120, avg: 34.33)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                582
Number of successful refinements:     582
Number of failed refinements:         0
Max. size of reached set before ref.: 97048
Max. size of reached set after ref.:  51351
Avg. size of reached set before ref.: 25573.36
Avg. size of reached set after ref.:  7628.22

Total time for CEGAR algorithm:     893.625s
Time for refinements:                46.977s
Average time for refinement:          0.080s
Max time for refinement:              0.668s

Code Coverage
-----------------------------
  Function coverage:      0.434
  Visited lines:          1952
  Total lines:            3475
  Line coverage:          0.562
  Visited conditions:     340
  Total conditions:       806
  Condition coverage:     0.422

CPAchecker general statistics
-----------------------------
Number of program locations:     4802
Number of CFA edges:             5381
Number of relevant variables:    742
Number of functions:             166
Number of loops:                 47
Size of reached set:             4142
  Number of reached locations:   971 (20%)
    Avg states per location:     4
    Max states per location:     70 (at node N488)
  Number of reached functions:   72 (43%)
  Number of partitions:          4112
    Avg size of partitions:      1
    Max size of partitions:      4 (with key [N3356 (before line 9356), Function main called from node N3303, stack depth 1 [5c77ba8f], stack [main]])
  Number of target states:       0
  Size of final wait list        27

Time for analysis setup:          6.630s
  Time for loading CPAs:          1.199s
  Time for loading parser:        0.731s
  Time for CFA construction:      4.534s
    Time for parsing file(s):     1.116s
    Time for AST to CFA:          1.736s
    Time for CFA sanity check:    0.333s
    Time for post-processing:     1.134s
      Time for var class.:        0.524s
Time for Analysis:              893.625s
CPU time for analysis:          893.540s
Total time for CPAchecker:      900.259s
Total CPU time for CPAchecker:  900.160s
Time for statistics:              0.181s

Time for Garbage Collector:      90.682s (in 1975 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                667MB (   636 MiB) max;    312MB (   297 MiB) avg;    701MB (   669 MiB) peak
Used non-heap memory:             45MB (    43 MiB) max;     40MB (    38 MiB) avg;     45MB (    43 MiB) peak
Allocated heap memory:           741MB (   706 MiB) max;    454MB (   433 MiB) avg
Allocated non-heap memory:        46MB (    44 MiB) max;     46MB (    44 MiB) avg
Total process virtual memory:   8424MB (  8034 MiB) max;   8238MB (  7856 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
