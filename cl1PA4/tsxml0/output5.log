scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.16-rc1/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--nfc--st21nfca--st21nfca_i2c.ko-entry_point_true-unreach-call.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_vp5x_uut/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

line 4270: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___3 = ldv_zalloc(32UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function i2c_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function i2c_del_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_handler1_2 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_final_state to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_handler1_1 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_dev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_pr_debug to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function print_hex_dump to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function skb_push to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function crc_ccitt to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function skb_put to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usleep_range to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock_nested to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function skb_trim to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function i2c_master_recv to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function msleep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function nfc_hci_recv_frame to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function kfree_skb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function st21nfca_hci_remove to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 3013: Ignoring function call through function pointer *(adap->algo->functionality): tmp = (*(adap->algo->functionality))(adap); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function i2c_master_send to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function skb_pull to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function devm_kmalloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __alloc_skb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            43271 (15% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  35945 (83%)
  Because of loop head:            7297 (17%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         29 (0%)
  Times precision was empty:       18360 (42%)
  Times precision was {false}:     275 (1%)
  Times result was cached:         24474 (57%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      162 (0%)
  Times result was 'false':        581 (1%)
Number of strengthen sat checks:   0
Number of coverage checks:         63185
  BDD entailment checks:           13637
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       60
Number of predicates discovered:          4
Number of abstraction locations:          50
Max number of predicates per location:    3
Avg number of predicates per location:    1
Total predicates per abstraction:         26554
Max number of predicates per abstraction: 3
Avg number of predicates per abstraction: 60.76
Number of irrelevant predicates:          14028 (53%)
Number of preds handled by boolean abs:   204 (1%)
  Total number of models for allsat:      177
  Max number of models for allsat:        4
  Avg number of models for allsat:        1.09

Time for post operator:                  4.884s
  Time for path formula creation:        4.607s
Time for strengthen operator:            0.385s
Time for prec operator:                  6.502s
  Time for abstraction:                  5.489s (Max:     0.031s, Count: 43271)
    Boolean abstraction:                 0.270s
    Solving time:                        0.445s (Max:     0.014s)
    Model enumeration time:              0.019s
    Time for BDD construction:           0.027s (Max:     0.009s)
Time for merge operator:                 0.357s
Time for coverage check:                 0.071s
  Time for BDD entailment checks:        0.041s
Total time for SMT solver (w/o itp):     0.464s

Number of path formula cache hits:   342920 (96%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     3.587s

Total number of created targets for pointer analysis: 4206
   Number of created targets for uf: *signed_int is 35
   Number of created targets for uf: *unsigned_char is 329


Number of BDD nodes:                               225
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         357 (count: 34371, min: 0, max: 53, avg: 0.01)
Time for BDD node cleanup:                             0.018s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.902s
  Time for transition matches:                         0.429s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.002s
Automaton transfers with branching:                0
Automaton transfer successors:                       292751 (count: 292751, min: 1, max: 1, avg: 1.00) [1 x 292751]

CPA algorithm statistics
------------------------
Number of iterations:            186908
Max size of waitlist:            165
Average size of waitlist:        85
Number of computed successors:   225289
Max successors for one state:    2
Number of times merged:          24774
Number of times stopped:         35390
Number of times breaked:         29

Total time for CPA algorithm:        23.377s (Max:     2.358s)
  Time for choose from waitlist:      0.207s
  Time for precision adjustment:      9.209s
  Time for transfer relation:        10.303s
  Time for merge operator:            1.081s
  Time for stop operator:             0.607s
  Time for adding to reached set:     0.623s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   29
Avg. length of target path (in blocks):                 812 (count: 29, min: 22, max: 31, avg: 28.00)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   1.394s
  Counterexample analysis:                             0.516s (Max:     0.030s, Calls: 29)
    Refinement sat check:                              0.366s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.006s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.081s
  Precision update:                                    0.043s
  ARG update:                                          0.725s

Length of refined path (in blocks):                     628 (count: 29, min: 12, max: 30, avg: 21.66)
Number of affected states:                              489 (count: 29, min: 1, max: 29, avg: 16.86)
Length (states) of path with itp 'true':                110 (count: 29, min: 0, max: 10, avg: 3.79)
Length (states) of path with itp non-trivial itp:       489 (count: 29, min: 1, max: 29, avg: 16.86)
Length (states) of path with itp 'false':                29 (count: 29, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 29, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:             460 (count: 29, min: 0, max: 28, avg: 15.86)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                29
Number of successful refinements:     29
Number of failed refinements:         0
Max. size of reached set before ref.: 9676
Max. size of reached set after ref.:  53
Avg. size of reached set before ref.: 6356.00
Avg. size of reached set after ref.:  21.97

Total time for CEGAR algorithm:      25.073s
Time for refinements:                 1.692s
Average time for refinement:          0.058s
Max time for refinement:              0.114s

Code Coverage
-----------------------------
  Function coverage:      0.457
  Visited lines:          1100
  Total lines:            1437
  Line coverage:          0.765
  Visited conditions:     210
  Total conditions:       360
  Condition coverage:     0.583

CPAchecker general statistics
-----------------------------
Number of program locations:     1934
Number of CFA edges:             2111
Number of relevant variables:    308
Number of functions:             70
Number of loops:                 10
Size of reached set:             5631
  Number of reached locations:   502 (26%)
    Avg states per location:     11
    Max states per location:     139 (at node N59)
  Number of reached functions:   32 (46%)
  Number of partitions:          5570
    Avg size of partitions:      1
    Max size of partitions:      5 (with key [N1138 (before line 4280), Function main called from node N1105, stack depth 1 [538613b3], stack [main]])
  Number of target states:       0
  Size of final wait list        155

Time for analysis setup:          5.162s
  Time for loading CPAs:          1.006s
  Time for loading parser:        0.807s
  Time for CFA construction:      3.159s
    Time for parsing file(s):     0.946s
    Time for AST to CFA:          1.093s
    Time for CFA sanity check:    0.170s
    Time for post-processing:     0.725s
      Time for var class.:        0.326s
Time for Analysis:               25.073s
CPU time for analysis:           25.080s
Total time for CPAchecker:       30.243s
Total CPU time for CPAchecker:   30.240s
Time for statistics:              0.215s

Time for Garbage Collector:       1.217s (in 78 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 90MB (    86 MiB) max;     49MB (    46 MiB) avg;    100MB (    95 MiB) peak
Used non-heap memory:             38MB (    37 MiB) max;     34MB (    32 MiB) avg;     39MB (    37 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        40MB (    38 MiB) max;     36MB (    34 MiB) avg
Total process virtual memory:   8086MB (  7711 MiB) max;   8071MB (  7697 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
