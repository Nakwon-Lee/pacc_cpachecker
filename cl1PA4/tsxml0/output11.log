scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.16-rc1/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--nfc--st21nfca--st21nfca_i2c.ko-entry_point_true-unreach-call.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_f8ku5ybk/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

line 4270: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___3 = ldv_zalloc(32UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_handler1_1 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_handler1_2 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function i2c_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_final_state to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function i2c_del_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_dev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock_nested to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function nfc_hci_recv_frame to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function msleep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function kfree_skb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function skb_trim to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function i2c_master_recv to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function skb_pull to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function crc_ccitt to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function print_hex_dump to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __alloc_skb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_pr_debug to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function skb_push to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function skb_put to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function i2c_master_send to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 3013: Ignoring function call through function pointer *(adap->algo->functionality): tmp = (*(adap->algo->functionality))(adap); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function usleep_range to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function devm_kmalloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            29849 (13% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  25767 (86%)
  Because of loop head:            4046 (14%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         36 (0%)
  Times precision was empty:       6628 (22%)
  Times precision was {false}:     359 (1%)
  Times result was cached:         22463 (75%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      399 (1%)
  Times result was 'false':        525 (2%)
Number of strengthen sat checks:   0
Number of coverage checks:         46111
  BDD entailment checks:           8759
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       60
Number of predicates discovered:          4
Number of abstraction locations:          63
Max number of predicates per location:    3
Avg number of predicates per location:    1
Total predicates per abstraction:         26814
Max number of predicates per abstraction: 3
Avg number of predicates per abstraction: 35.37
Number of irrelevant predicates:          6832 (25%)
Number of preds handled by boolean abs:   522 (2%)
  Total number of models for allsat:      419
  Max number of models for allsat:        4
  Avg number of models for allsat:        1.05

Time for post operator:                  5.629s
  Time for path formula creation:        5.378s
Time for strengthen operator:            0.276s
Time for prec operator:                  7.868s
  Time for abstraction:                  7.052s (Max:     0.050s, Count: 29849)
    Boolean abstraction:                 0.688s
    Solving time:                        0.932s (Max:     0.048s)
    Model enumeration time:              0.043s
    Time for BDD construction:           0.089s (Max:     0.010s)
Time for merge operator:                 0.519s
Time for coverage check:                 0.073s
  Time for BDD entailment checks:        0.061s
Total time for SMT solver (w/o itp):     0.975s

Number of path formula cache hits:   250684 (92%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     4.638s

Total number of created targets for pointer analysis: 4425
   Number of created targets for uf: *signed_int is 35
   Number of created targets for uf: *unsigned_char is 817


Number of BDD nodes:                               218
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         828 (count: 19599, min: 0, max: 106, avg: 0.04)
Time for BDD node cleanup:                             0.011s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.703s
  Time for transition matches:                         0.280s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.000s
Automaton transfers with branching:                0
Automaton transfer successors:                       227567 (count: 227567, min: 1, max: 1, avg: 1.00) [1 x 227567]

CPA algorithm statistics
------------------------
Number of iterations:            138675
Max size of waitlist:            215
Average size of waitlist:        105
Number of computed successors:   168410
Max successors for one state:    2
Number of times merged:          18676
Number of times stopped:         24898
Number of times breaked:         36

Total time for CPA algorithm:        23.553s (Max:     1.733s)
  Time for choose from waitlist:      0.236s
  Time for precision adjustment:      9.934s
  Time for transfer relation:         9.964s
  Time for merge operator:            1.142s
  Time for stop operator:             0.510s
  Time for adding to reached set:     0.490s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   36
Avg. length of target path (in blocks):                1124 (count: 36, min: 22, max: 49, avg: 31.22)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   1.549s
  Counterexample analysis:                             0.801s (Max:     0.050s, Calls: 36)
    Refinement sat check:                              0.543s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.001s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.049s
  Precision update:                                    0.090s
  ARG update:                                          0.563s

Length of refined path (in blocks):                     869 (count: 36, min: 12, max: 48, avg: 24.14)
Number of affected states:                              693 (count: 36, min: 1, max: 47, avg: 19.25)
Length (states) of path with itp 'true':                140 (count: 36, min: 0, max: 10, avg: 3.89)
Length (states) of path with itp non-trivial itp:       693 (count: 36, min: 1, max: 47, avg: 19.25)
Length (states) of path with itp 'false':                36 (count: 36, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 36, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:             657 (count: 36, min: 0, max: 46, avg: 18.25)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                36
Number of successful refinements:     36
Number of failed refinements:         0
Max. size of reached set before ref.: 8522
Max. size of reached set after ref.:  53
Avg. size of reached set before ref.: 3852.64
Avg. size of reached set after ref.:  22.44

Total time for CEGAR algorithm:      25.357s
Time for refinements:                 1.804s
Average time for refinement:          0.050s
Max time for refinement:              0.097s

Code Coverage
-----------------------------
  Function coverage:      0.457
  Visited lines:          1070
  Total lines:            1437
  Line coverage:          0.745
  Visited conditions:     204
  Total conditions:       360
  Condition coverage:     0.567

CPAchecker general statistics
-----------------------------
Number of program locations:     1934
Number of CFA edges:             2111
Number of relevant variables:    308
Number of functions:             70
Number of loops:                 10
Size of reached set:             5101
  Number of reached locations:   470 (24%)
    Avg states per location:     10
    Max states per location:     134 (at node N59)
  Number of reached functions:   32 (46%)
  Number of partitions:          5086
    Avg size of partitions:      1
    Max size of partitions:      3 (with key [N1138 (before line 4280), Function main called from node N1105, stack depth 1 [538613b3], stack [main]])
  Number of target states:       0
  Size of final wait list        111

Time for analysis setup:          4.884s
  Time for loading CPAs:          0.987s
  Time for loading parser:        0.725s
  Time for CFA construction:      3.053s
    Time for parsing file(s):     0.932s
    Time for AST to CFA:          1.013s
    Time for CFA sanity check:    0.176s
    Time for post-processing:     0.719s
      Time for var class.:        0.323s
Time for Analysis:               25.357s
CPU time for analysis:           25.350s
Total time for CPAchecker:       30.250s
Total CPU time for CPAchecker:   30.230s
Time for statistics:              0.195s

Time for Garbage Collector:       0.970s (in 68 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 90MB (    85 MiB) max;     49MB (    46 MiB) avg;     96MB (    91 MiB) peak
Used non-heap memory:             39MB (    37 MiB) max;     35MB (    33 MiB) avg;     40MB (    38 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        41MB (    39 MiB) max;     37MB (    35 MiB) avg
Total process virtual memory:   8086MB (  7711 MiB) max;   8073MB (  7699 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
