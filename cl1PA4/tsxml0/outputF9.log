scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.16-rc1/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--nfc--st21nfca--st21nfca_i2c.ko-entry_point_true-unreach-call.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_7w3axury/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

line 4270: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___3 = ldv_zalloc(32UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_handler1_2 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_handler1_1 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function i2c_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_final_state to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function i2c_del_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_dev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_pr_debug to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function print_hex_dump to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function skb_push to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function crc_ccitt to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function skb_put to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock_nested to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function i2c_master_send to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function msleep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function skb_pull to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function skb_trim to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function nfc_hci_recv_frame to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function kfree_skb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function i2c_master_recv to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 3013: Ignoring function call through function pointer *(adap->algo->functionality): tmp = (*(adap->algo->functionality))(adap); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function __alloc_skb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function st21nfca_hci_remove to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usleep_range to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function devm_kmalloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __mutex_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function devm_request_threaded_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function st21nfca_hci_probe to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function devm_gpio_request to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function gpio_to_desc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function gpiod_direction_input to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function gpiod_direction_output_raw to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function gpiod_to_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            102967 (14% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  86926 (84%)
  Because of loop head:            15962 (16%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         79 (0%)
  Times precision was empty:       20500 (20%)
  Times precision was {false}:     711 (1%)
  Times result was cached:         80519 (78%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      1237 (1%)
  Times result was 'false':        2070 (2%)
Number of strengthen sat checks:   0
Number of coverage checks:         159370
  BDD entailment checks:           33182
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       60
Number of predicates discovered:          4
Number of abstraction locations:          119
Max number of predicates per location:    3
Avg number of predicates per location:    1
Total predicates per abstraction:         175655
Max number of predicates per abstraction: 3
Avg number of predicates per abstraction: 90.17
Number of irrelevant predicates:          65236 (37%)
Number of preds handled by boolean abs:   1626 (1%)
  Total number of models for allsat:      1269
  Max number of models for allsat:        4
  Avg number of models for allsat:        1.03

Time for post operator:                 10.250s
  Time for path formula creation:        9.753s
Time for strengthen operator:            0.801s
Time for prec operator:                 20.302s
  Time for abstraction:                 18.657s (Max:     0.062s, Count: 102967)
    Boolean abstraction:                 1.689s
    Solving time:                        2.407s (Max:     0.047s)
    Model enumeration time:              0.119s
    Time for BDD construction:           0.095s (Max:     0.009s)
Time for merge operator:                 0.943s
Time for coverage check:                 0.131s
  Time for BDD entailment checks:        0.095s
Total time for SMT solver (w/o itp):     2.526s

Number of path formula cache hits:   842778 (93%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     7.946s

Total number of created targets for pointer analysis: 30078
   Number of created targets for uf: *(void)* is 5
   Number of created targets for uf: *signed_int is 111
   Number of created targets for uf: *unsigned_char is 2062
   Number of created targets for uf: *char is 37
   Number of created targets for uf: *unsigned_int is 4


Number of BDD nodes:                               228
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        2502 (count: 64766, min: 0, max: 119, avg: 0.04)
Time for BDD node cleanup:                             0.041s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  1.385s
  Time for transition matches:                         0.758s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.003s
Automaton transfers with branching:                0
Automaton transfer successors:                       758488 (count: 758488, min: 1, max: 1, avg: 1.00) [1 x 758488]

CPA algorithm statistics
------------------------
Number of iterations:            468431
Max size of waitlist:            234
Average size of waitlist:        96
Number of computed successors:   567980
Max successors for one state:    2
Number of times merged:          63094
Number of times stopped:         86545
Number of times breaked:         79

Total time for CPA algorithm:        51.558s (Max:     1.620s)
  Time for choose from waitlist:      0.334s
  Time for precision adjustment:     25.217s
  Time for transfer relation:        19.437s
  Time for merge operator:            2.135s
  Time for stop operator:             1.028s
  Time for adding to reached set:     1.184s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   79
Avg. length of target path (in blocks):                2993 (count: 79, min: 22, max: 64, avg: 37.89)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   3.095s
  Counterexample analysis:                             1.627s (Max:     0.042s, Calls: 79)
    Refinement sat check:                              1.176s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.013s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.068s
  Precision update:                                    0.052s
  ARG update:                                          1.258s

Length of refined path (in blocks):                    2325 (count: 79, min: 12, max: 63, avg: 29.43)
Number of affected states:                             1876 (count: 79, min: 1, max: 62, avg: 23.75)
Length (states) of path with itp 'true':                370 (count: 79, min: 0, max: 10, avg: 4.68)
Length (states) of path with itp non-trivial itp:      1876 (count: 79, min: 1, max: 62, avg: 23.75)
Length (states) of path with itp 'false':                79 (count: 79, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 79, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:            1797 (count: 79, min: 0, max: 61, avg: 22.75)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                79
Number of successful refinements:     79
Number of failed refinements:         0
Max. size of reached set before ref.: 9986
Max. size of reached set after ref.:  53
Avg. size of reached set before ref.: 5978.08
Avg. size of reached set after ref.:  26.42

Total time for CEGAR algorithm:      55.414s
Time for refinements:                 3.845s
Average time for refinement:          0.048s
Max time for refinement:              0.272s

Code Coverage
-----------------------------
  Function coverage:      0.643
  Visited lines:          1297
  Total lines:            1437
  Line coverage:          0.903
  Visited conditions:     283
  Total conditions:       360
  Condition coverage:     0.786

CPAchecker general statistics
-----------------------------
Number of program locations:     1934
Number of CFA edges:             2111
Number of relevant variables:    308
Number of functions:             70
Number of loops:                 10
Size of reached set:             9185
  Number of reached locations:   697 (36%)
    Avg states per location:     13
    Max states per location:     204 (at node N58)
  Number of reached functions:   45 (64%)
  Number of partitions:          9128
    Avg size of partitions:      1
    Max size of partitions:      4 (with key [N1138 (before line 4280), Function main called from node N1105, stack depth 1 [9f46d94], stack [main]])
  Number of target states:       0

Time for analysis setup:          5.017s
  Time for loading CPAs:          0.910s
  Time for loading parser:        0.772s
  Time for CFA construction:      3.169s
    Time for parsing file(s):     0.953s
    Time for AST to CFA:          1.036s
    Time for CFA sanity check:    0.185s
    Time for post-processing:     0.828s
      Time for var class.:        0.399s
Time for Analysis:               55.414s
CPU time for analysis:           55.420s
Time for analyzing result:        0.009s
Total time for CPAchecker:       60.437s
Total CPU time for CPAchecker:   60.430s
Time for statistics:              0.269s

Time for Garbage Collector:       3.411s (in 235 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                125MB (   119 MiB) max;     65MB (    62 MiB) avg;    128MB (   122 MiB) peak
Used non-heap memory:             39MB (    37 MiB) max;     36MB (    35 MiB) avg;     39MB (    38 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        41MB (    39 MiB) max;     38MB (    37 MiB) avg
Total process virtual memory:   8086MB (  7711 MiB) max;   8078MB (  7704 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
