scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.16-rc1/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--nfc--st21nfca--st21nfca_i2c.ko-entry_point_true-unreach-call.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_f2971urd/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

line 4270: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___3 = ldv_zalloc(32UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_handler1_2 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_handler1_1 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function i2c_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_final_state to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function i2c_del_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_dev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_pr_debug to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function print_hex_dump to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function skb_push to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function crc_ccitt to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function skb_put to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock_nested to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function i2c_master_send to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function msleep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function skb_pull to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function skb_trim to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function nfc_hci_recv_frame to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function kfree_skb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function i2c_master_recv to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 3013: Ignoring function call through function pointer *(adap->algo->functionality): tmp = (*(adap->algo->functionality))(adap); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function __alloc_skb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function st21nfca_hci_remove to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            31265 (13% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  26117 (84%)
  Because of loop head:            5109 (16%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         39 (0%)
  Times precision was empty:       8930 (29%)
  Times precision was {false}:     367 (1%)
  Times result was cached:         21410 (68%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      558 (2%)
  Times result was 'false':        623 (2%)
Number of strengthen sat checks:   0
Number of coverage checks:         49771
  BDD entailment checks:           8675
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       60
Number of predicates discovered:          4
Number of abstraction locations:          55
Max number of predicates per location:    3
Avg number of predicates per location:    1
Total predicates per abstraction:         31582
Max number of predicates per abstraction: 3
Avg number of predicates per abstraction: 34.14
Number of irrelevant predicates:          10111 (32%)
Number of preds handled by boolean abs:   710 (2%)
  Total number of models for allsat:      567
  Max number of models for allsat:        4
  Avg number of models for allsat:        1.02

Time for post operator:                  6.137s
  Time for path formula creation:        5.905s
Time for strengthen operator:            0.342s
Time for prec operator:                  8.042s
  Time for abstraction:                  7.299s (Max:     0.050s, Count: 31265)
    Boolean abstraction:                 0.878s
    Solving time:                        1.197s (Max:     0.048s)
    Model enumeration time:              0.047s
    Time for BDD construction:           0.085s (Max:     0.008s)
Time for merge operator:                 0.519s
Time for coverage check:                 0.068s
  Time for BDD entailment checks:        0.039s
Total time for SMT solver (w/o itp):     1.244s

Number of path formula cache hits:   260101 (89%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     5.079s

Total number of created targets for pointer analysis: 16621
   Number of created targets for uf: *signed_int is 57
   Number of created targets for uf: *unsigned_char is 1173


Number of BDD nodes:                               220
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        1133 (count: 22811, min: 0, max: 100, avg: 0.05)
Time for BDD node cleanup:                             0.027s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.745s
  Time for transition matches:                         0.329s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.000s
Automaton transfers with branching:                0
Automaton transfer successors:                       245707 (count: 245707, min: 1, max: 1, avg: 1.00) [1 x 245707]

CPA algorithm statistics
------------------------
Number of iterations:            147112
Max size of waitlist:            195
Average size of waitlist:        92
Number of computed successors:   179946
Max successors for one state:    2
Number of times merged:          20548
Number of times stopped:         27316
Number of times breaked:         39

Total time for CPA algorithm:        24.009s (Max:     1.538s)
  Time for choose from waitlist:      0.196s
  Time for precision adjustment:     10.015s
  Time for transfer relation:        10.442s
  Time for merge operator:            1.077s
  Time for stop operator:             0.419s
  Time for adding to reached set:     0.485s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   39
Avg. length of target path (in blocks):                1231 (count: 39, min: 22, max: 46, avg: 31.56)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   1.442s
  Counterexample analysis:                             0.847s (Max:     0.042s, Calls: 39)
    Refinement sat check:                              0.574s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.041s
  Precision update:                                    0.041s
  ARG update:                                          0.488s

Length of refined path (in blocks):                     918 (count: 39, min: 12, max: 39, avg: 23.54)
Number of affected states:                              689 (count: 39, min: 1, max: 38, avg: 17.67)
Length (states) of path with itp 'true':                190 (count: 39, min: 0, max: 10, avg: 4.87)
Length (states) of path with itp non-trivial itp:       689 (count: 39, min: 1, max: 38, avg: 17.67)
Length (states) of path with itp 'false':                39 (count: 39, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 39, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:             650 (count: 39, min: 0, max: 37, avg: 16.67)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                39
Number of successful refinements:     39
Number of failed refinements:         0
Max. size of reached set before ref.: 7014
Max. size of reached set after ref.:  53
Avg. size of reached set before ref.: 3749.38
Avg. size of reached set after ref.:  27.36

Total time for CEGAR algorithm:      25.721s
Time for refinements:                 1.711s
Average time for refinement:          0.043s
Max time for refinement:              0.104s

Code Coverage
-----------------------------
  Function coverage:      0.457
  Visited lines:          1087
  Total lines:            1437
  Line coverage:          0.756
  Visited conditions:     208
  Total conditions:       360
  Condition coverage:     0.578

CPAchecker general statistics
-----------------------------
Number of program locations:     1934
Number of CFA edges:             2111
Number of relevant variables:    308
Number of functions:             70
Number of loops:                 10
Size of reached set:             6849
  Number of reached locations:   485 (25%)
    Avg states per location:     14
    Max states per location:     189 (at node N59)
  Number of reached functions:   32 (46%)
  Number of partitions:          6836
    Avg size of partitions:      1
    Max size of partitions:      5 (with key [N1138 (before line 4280), Function main called from node N1105, stack depth 1 [9f46d94], stack [main]])
  Number of target states:       0
  Size of final wait list        182

Time for analysis setup:          4.551s
  Time for loading CPAs:          0.896s
  Time for loading parser:        0.708s
  Time for CFA construction:      2.852s
    Time for parsing file(s):     0.912s
    Time for AST to CFA:          0.923s
    Time for CFA sanity check:    0.162s
    Time for post-processing:     0.686s
      Time for var class.:        0.320s
Time for Analysis:               25.721s
CPU time for analysis:           25.720s
Total time for CPAchecker:       30.277s
Total CPU time for CPAchecker:   30.270s
Time for statistics:              0.174s

Time for Garbage Collector:       0.846s (in 74 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 78MB (    74 MiB) max;     49MB (    47 MiB) avg;     85MB (    81 MiB) peak
Used non-heap memory:             39MB (    37 MiB) max;     35MB (    33 MiB) avg;     39MB (    37 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        40MB (    38 MiB) max;     36MB (    35 MiB) avg
Total process virtual memory:   8086MB (  7712 MiB) max;   8074MB (  7700 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
