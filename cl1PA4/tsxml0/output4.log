scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.16-rc1/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--nfc--st21nfca--st21nfca_i2c.ko-entry_point_true-unreach-call.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_ffmuf05i/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

line 4270: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___3 = ldv_zalloc(32UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function i2c_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function i2c_del_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_handler1_2 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_final_state to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_handler1_1 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_dev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_pr_debug to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function print_hex_dump to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function skb_push to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function crc_ccitt to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function skb_put to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usleep_range to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock_nested to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function skb_trim to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function i2c_master_recv to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function msleep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function nfc_hci_recv_frame to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function kfree_skb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function st21nfca_hci_remove to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 3013: Ignoring function call through function pointer *(adap->algo->functionality): tmp = (*(adap->algo->functionality))(adap); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function i2c_master_send to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function skb_pull to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function devm_kmalloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __alloc_skb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            39978 (15% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  33217 (83%)
  Because of loop head:            6733 (17%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         28 (0%)
  Times precision was empty:       17346 (43%)
  Times precision was {false}:     275 (1%)
  Times result was cached:         22206 (56%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      151 (0%)
  Times result was 'false':        536 (1%)
Number of strengthen sat checks:   0
Number of coverage checks:         58114
  BDD entailment checks:           12452
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       60
Number of predicates discovered:          4
Number of abstraction locations:          50
Max number of predicates per location:    3
Avg number of predicates per location:    1
Total predicates per abstraction:         23871
Max number of predicates per abstraction: 3
Avg number of predicates per abstraction: 56.04
Number of irrelevant predicates:          12781 (54%)
Number of preds handled by boolean abs:   186 (1%)
  Total number of models for allsat:      166
  Max number of models for allsat:        4
  Avg number of models for allsat:        1.10

Time for post operator:                  5.198s
  Time for path formula creation:        4.858s
Time for strengthen operator:            0.455s
Time for prec operator:                  6.156s
  Time for abstraction:                  5.071s (Max:     0.052s, Count: 39978)
    Boolean abstraction:                 0.269s
    Solving time:                        0.390s (Max:     0.014s)
    Model enumeration time:              0.022s
    Time for BDD construction:           0.049s (Max:     0.010s)
Time for merge operator:                 0.363s
Time for coverage check:                 0.091s
  Time for BDD entailment checks:        0.068s
Total time for SMT solver (w/o itp):     0.412s

Number of path formula cache hits:   315020 (96%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     3.908s

Total number of created targets for pointer analysis: 4206
   Number of created targets for uf: *signed_int is 35
   Number of created targets for uf: *unsigned_char is 315


Number of BDD nodes:                               225
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         325 (count: 32106, min: 0, max: 53, avg: 0.01)
Time for BDD node cleanup:                             0.020s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.854s
  Time for transition matches:                         0.360s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.002s
Automaton transfers with branching:                0
Automaton transfer successors:                       270042 (count: 270042, min: 1, max: 1, avg: 1.00) [1 x 270042]

CPA algorithm statistics
------------------------
Number of iterations:            172427
Max size of waitlist:            165
Average size of waitlist:        84
Number of computed successors:   207811
Max successors for one state:    2
Number of times merged:          22831
Number of times stopped:         32651
Number of times breaked:         28

Total time for CPA algorithm:        23.545s (Max:     2.313s)
  Time for choose from waitlist:      0.264s
  Time for precision adjustment:      8.805s
  Time for transfer relation:        10.524s
  Time for merge operator:            1.099s
  Time for stop operator:             0.651s
  Time for adding to reached set:     0.606s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   28
Avg. length of target path (in blocks):                 781 (count: 28, min: 22, max: 31, avg: 27.89)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   1.392s
  Counterexample analysis:                             0.551s (Max:     0.035s, Calls: 28)
    Refinement sat check:                              0.396s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.001s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.049s
  Precision update:                                    0.036s
  ARG update:                                          0.713s

Length of refined path (in blocks):                     611 (count: 28, min: 12, max: 30, avg: 21.82)
Number of affected states:                              483 (count: 28, min: 1, max: 29, avg: 17.25)
Length (states) of path with itp 'true':                100 (count: 28, min: 0, max: 10, avg: 3.57)
Length (states) of path with itp non-trivial itp:       483 (count: 28, min: 1, max: 29, avg: 17.25)
Length (states) of path with itp 'false':                28 (count: 28, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 28, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:             455 (count: 28, min: 0, max: 28, avg: 16.25)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                28
Number of successful refinements:     28
Number of failed refinements:         0
Max. size of reached set before ref.: 9676
Max. size of reached set after ref.:  53
Avg. size of reached set before ref.: 6246.61
Avg. size of reached set after ref.:  20.86

Total time for CEGAR algorithm:      25.230s
Time for refinements:                 1.681s
Average time for refinement:          0.060s
Max time for refinement:              0.135s

Code Coverage
-----------------------------
  Function coverage:      0.143
  Visited lines:          718
  Total lines:            1437
  Line coverage:          0.500
  Visited conditions:     86
  Total conditions:       360
  Condition coverage:     0.239

CPAchecker general statistics
-----------------------------
Number of program locations:     1934
Number of CFA edges:             2111
Number of relevant variables:    308
Number of functions:             70
Number of loops:                 10
Size of reached set:             303
  Number of reached locations:   164 (8%)
    Avg states per location:     1
    Max states per location:     10 (at node N54)
  Number of reached functions:   10 (14%)
  Number of partitions:          303
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0
  Size of final wait list        22

Time for analysis setup:          4.993s
  Time for loading CPAs:          0.961s
  Time for loading parser:        0.730s
  Time for CFA construction:      3.173s
    Time for parsing file(s):     1.073s
    Time for AST to CFA:          0.995s
    Time for CFA sanity check:    0.170s
    Time for post-processing:     0.709s
      Time for var class.:        0.334s
Time for Analysis:               25.230s
CPU time for analysis:           25.240s
Total time for CPAchecker:       30.230s
Total CPU time for CPAchecker:   30.220s
Time for statistics:              0.119s

Time for Garbage Collector:       1.139s (in 72 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 90MB (    86 MiB) max;     48MB (    45 MiB) avg;     96MB (    91 MiB) peak
Used non-heap memory:             38MB (    37 MiB) max;     34MB (    32 MiB) avg;     39MB (    37 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        40MB (    38 MiB) max;     36MB (    34 MiB) avg
Total process virtual memory:   8087MB (  7712 MiB) max;   8073MB (  7699 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
