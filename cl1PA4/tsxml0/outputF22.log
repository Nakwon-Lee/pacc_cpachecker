scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.16-rc1/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--nfc--st21nfca--st21nfca_i2c.ko-entry_point_true-unreach-call.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_pnyonyxr/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

line 4270: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___3 = ldv_zalloc(32UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function i2c_del_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_final_state to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function i2c_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_dev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_pr_debug to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function print_hex_dump to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function skb_push to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function crc_ccitt to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function skb_put to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock_nested to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function i2c_master_send to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function msleep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function skb_pull to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function skb_trim to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_handler1_2 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_handler1_1 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usleep_range to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function st21nfca_hci_remove to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 3013: Ignoring function call through function pointer *(adap->algo->functionality): tmp = (*(adap->algo->functionality))(adap); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function devm_kmalloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __alloc_skb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __mutex_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function devm_request_threaded_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function i2c_master_recv to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function st21nfca_hci_probe to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function devm_gpio_request to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function gpio_to_desc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function gpiod_direction_input to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function gpiod_direction_output_raw to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function gpiod_to_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function nfc_hci_recv_frame to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function kfree_skb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            76999 (17% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  65841 (86%)
  Because of loop head:            11106 (14%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         52 (0%)
  Times precision was empty:       26020 (34%)
  Times precision was {false}:     905 (1%)
  Times result was cached:         49603 (64%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      471 (1%)
  Times result was 'false':        763 (1%)
Number of strengthen sat checks:   0
Number of coverage checks:         85645
  BDD entailment checks:           23355
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       60
Number of predicates discovered:          4
Number of abstraction locations:          119
Max number of predicates per location:    3
Avg number of predicates per location:    1
Total predicates per abstraction:         75707
Max number of predicates per abstraction: 3
Avg number of predicates per abstraction: 55.02
Number of irrelevant predicates:          41914 (55%)
Number of preds handled by boolean abs:   655 (1%)
  Total number of models for allsat:      518
  Max number of models for allsat:        4
  Avg number of models for allsat:        1.10

Time for post operator:                 11.300s
  Time for path formula creation:       10.940s
Time for strengthen operator:            0.666s
Time for prec operator:                 12.650s
  Time for abstraction:                 11.167s (Max:     0.282s, Count: 76999)
    Boolean abstraction:                 0.705s
    Solving time:                        1.441s (Max:     0.033s)
    Model enumeration time:              0.065s
    Time for BDD construction:           0.096s (Max:     0.011s)
Time for merge operator:                 0.710s
Time for coverage check:                 0.114s
  Time for BDD entailment checks:        0.085s
Total time for SMT solver (w/o itp):     1.506s

Number of path formula cache hits:   467251 (85%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     9.463s

Total number of created targets for pointer analysis: 34063
   Number of created targets for uf: *(void)* is 99
   Number of created targets for uf: *(struct_sk_buff)* is 24
   Number of created targets for uf: *signed_int is 7
   Number of created targets for uf: *unsigned_char is 2497
   Number of created targets for uf: *(struct_i2c_client)* is 24
   Number of created targets for uf: *char is 589
   Number of created targets for uf: *unsigned_int is 136


Number of BDD nodes:                               232
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         975 (count: 56806, min: 0, max: 79, avg: 0.02)
Time for BDD node cleanup:                             0.045s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.973s
  Time for transition matches:                         0.399s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.009s
Automaton transfers with branching:                0
Automaton transfer successors:                       457483 (count: 457483, min: 1, max: 1, avg: 1.00) [1 x 457483]

CPA algorithm statistics
------------------------
Number of iterations:            304175
Max size of waitlist:            116
Average size of waitlist:        46
Number of computed successors:   356418
Max successors for one state:    2
Number of times merged:          31145
Number of times stopped:         49195
Number of times breaked:         52

Total time for CPA algorithm:        40.649s (Max:     2.045s)
  Time for choose from waitlist:      0.395s
  Time for precision adjustment:     16.308s
  Time for transfer relation:        18.553s
  Time for merge operator:            1.435s
  Time for stop operator:             0.886s
  Time for adding to reached set:     0.913s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   52
Avg. length of target path (in blocks):                2546 (count: 52, min: 26, max: 75, avg: 48.96)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   2.462s
  Counterexample analysis:                             1.288s (Max:     0.059s, Calls: 52)
    Refinement sat check:                              0.886s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.011s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.096s
  Precision update:                                    0.060s
  ARG update:                                          0.970s

Length of refined path (in blocks):                    2308 (count: 52, min: 12, max: 74, avg: 44.38)
Number of affected states:                             2136 (count: 52, min: 1, max: 73, avg: 41.08)
Length (states) of path with itp 'true':                120 (count: 52, min: 0, max: 10, avg: 2.31)
Length (states) of path with itp non-trivial itp:      2136 (count: 52, min: 1, max: 73, avg: 41.08)
Length (states) of path with itp 'false':                52 (count: 52, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 52, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:            2084 (count: 52, min: 0, max: 72, avg: 40.08)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                52
Number of successful refinements:     52
Number of failed refinements:         0
Max. size of reached set before ref.: 9454
Max. size of reached set after ref.:  53
Avg. size of reached set before ref.: 5778.87
Avg. size of reached set after ref.:  14.54

Total time for CEGAR algorithm:      43.527s
Time for refinements:                 2.867s
Average time for refinement:          0.055s
Max time for refinement:              0.111s

Code Coverage
-----------------------------
  Function coverage:      0.643
  Visited lines:          1297
  Total lines:            1437
  Line coverage:          0.903
  Visited conditions:     283
  Total conditions:       360
  Condition coverage:     0.786

CPAchecker general statistics
-----------------------------
Number of program locations:     1934
Number of CFA edges:             2111
Number of relevant variables:    308
Number of functions:             70
Number of loops:                 10
Size of reached set:             6716
  Number of reached locations:   697 (36%)
    Avg states per location:     9
    Max states per location:     152 (at node N58)
  Number of reached functions:   45 (64%)
  Number of partitions:          6712
    Avg size of partitions:      1
    Max size of partitions:      3 (with key [N1138 (before line 4280), Function main called from node N1105, stack depth 1 [9f46d94], stack [main]])
  Number of target states:       0

Time for analysis setup:          4.735s
  Time for loading CPAs:          0.891s
  Time for loading parser:        0.695s
  Time for CFA construction:      3.039s
    Time for parsing file(s):     0.976s
    Time for AST to CFA:          0.976s
    Time for CFA sanity check:    0.166s
    Time for post-processing:     0.741s
      Time for var class.:        0.333s
Time for Analysis:               43.527s
CPU time for analysis:           43.530s
Time for analyzing result:        0.007s
Total time for CPAchecker:       48.267s
Total CPU time for CPAchecker:   48.250s
Time for statistics:              0.234s

Time for Garbage Collector:       2.477s (in 139 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                119MB (   113 MiB) max;     60MB (    57 MiB) avg;    130MB (   124 MiB) peak
Used non-heap memory:             40MB (    38 MiB) max;     37MB (    35 MiB) avg;     40MB (    38 MiB) peak
Allocated heap memory:           134MB (   127 MiB) max;    128MB (   122 MiB) avg
Allocated non-heap memory:        42MB (    40 MiB) max;     38MB (    37 MiB) avg
Total process virtual memory:   8087MB (  7712 MiB) max;   8078MB (  7703 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
