scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.16-rc1/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--nfc--st21nfca--st21nfca_i2c.ko-entry_point_true-unreach-call.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_tkp9brb4/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

line 4270: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___3 = ldv_zalloc(32UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function i2c_del_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function i2c_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usleep_range to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_dev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function st21nfca_hci_remove to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_handler1_2 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_handler1_1 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_final_state to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock_nested to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function skb_trim to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function i2c_master_recv to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function msleep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function skb_pull to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function crc_ccitt to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function print_hex_dump to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function nfc_hci_recv_frame to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function kfree_skb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __alloc_skb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_pr_debug to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function skb_push to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function skb_put to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function i2c_master_send to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 3013: Ignoring function call through function pointer *(adap->algo->functionality): tmp = (*(adap->algo->functionality))(adap); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function devm_kmalloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __mutex_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function devm_gpio_request to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function gpio_to_desc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function gpiod_direction_input to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function gpiod_direction_output_raw to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function gpiod_to_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function devm_request_threaded_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function st21nfca_hci_probe to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            44552 (15% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  36434 (82%)
  Because of loop head:            8084 (18%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         34 (0%)
  Times precision was empty:       14731 (33%)
  Times precision was {false}:     327 (1%)
  Times result was cached:         29238 (66%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      256 (1%)
  Times result was 'false':        843 (2%)
Number of strengthen sat checks:   0
Number of coverage checks:         63467
  BDD entailment checks:           14545
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       60
Number of predicates discovered:          4
Number of abstraction locations:          71
Max number of predicates per location:    3
Avg number of predicates per location:    1
Total predicates per abstraction:         32597
Max number of predicates per abstraction: 3
Avg number of predicates per abstraction: 55.91
Number of irrelevant predicates:          6605 (20%)
Number of preds handled by boolean abs:   309 (1%)
  Total number of models for allsat:      271
  Max number of models for allsat:        4
  Avg number of models for allsat:        1.06

Time for post operator:                  4.617s
  Time for path formula creation:        4.311s
Time for strengthen operator:            0.351s
Time for prec operator:                  7.759s
  Time for abstraction:                  6.847s (Max:     0.063s, Count: 44552)
    Boolean abstraction:                 0.411s
    Solving time:                        0.634s (Max:     0.052s)
    Model enumeration time:              0.027s
    Time for BDD construction:           0.057s (Max:     0.011s)
Time for merge operator:                 0.419s
Time for coverage check:                 0.084s
  Time for BDD entailment checks:        0.075s
Total time for SMT solver (w/o itp):     0.661s

Number of path formula cache hits:   350010 (96%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     3.316s

Total number of created targets for pointer analysis: 2423
   Number of created targets for uf: *(void)* is 3
   Number of created targets for uf: *(struct_sk_buff)* is 5
   Number of created targets for uf: *signed_int is 19
   Number of created targets for uf: *unsigned_char is 97
   Number of created targets for uf: *char is 17
   Number of created targets for uf: *unsigned_int is 3


Number of BDD nodes:                               227
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         545 (count: 32515, min: 0, max: 46, avg: 0.02)
Time for BDD node cleanup:                             0.017s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.694s
  Time for transition matches:                         0.369s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.000s
Automaton transfers with branching:                0
Automaton transfer successors:                       298038 (count: 298038, min: 1, max: 1, avg: 1.00) [1 x 298038]

CPA algorithm statistics
------------------------
Number of iterations:            191988
Max size of waitlist:            21
Average size of waitlist:        11
Number of computed successors:   230126
Max successors for one state:    2
Number of times merged:          24461
Number of times stopped:         36978
Number of times breaked:         34

Total time for CPA algorithm:        23.699s (Max:     1.583s)
  Time for choose from waitlist:      0.236s
  Time for precision adjustment:     10.189s
  Time for transfer relation:         9.623s
  Time for merge operator:            1.037s
  Time for stop operator:             0.549s
  Time for adding to reached set:     0.495s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   34
Avg. length of target path (in blocks):                1004 (count: 34, min: 22, max: 39, avg: 29.53)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   1.601s
  Counterexample analysis:                             0.697s (Max:     0.032s, Calls: 34)
    Refinement sat check:                              0.432s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.002s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.040s
  Precision update:                                    0.039s
  ARG update:                                          0.787s

Length of refined path (in blocks):                     776 (count: 33, min: 12, max: 38, avg: 23.52)
Number of affected states:                              633 (count: 33, min: 1, max: 37, avg: 19.18)
Length (states) of path with itp 'true':                110 (count: 33, min: 0, max: 10, avg: 3.33)
Length (states) of path with itp non-trivial itp:       633 (count: 33, min: 1, max: 37, avg: 19.18)
Length (states) of path with itp 'false':                33 (count: 33, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 33, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:             600 (count: 33, min: 0, max: 36, avg: 18.18)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                34
Number of successful refinements:     33
Number of failed refinements:         0
Max. size of reached set before ref.: 9691
Max. size of reached set after ref.:  53
Avg. size of reached set before ref.: 5675.15
Avg. size of reached set after ref.:  19.67

Total time for CEGAR algorithm:      25.616s
Time for refinements:                 1.909s
Average time for refinement:          0.056s
Max time for refinement:              0.151s

Code Coverage
-----------------------------
  Function coverage:      0.657
  Visited lines:          1300
  Total lines:            1437
  Line coverage:          0.905
  Visited conditions:     283
  Total conditions:       360
  Condition coverage:     0.786

CPAchecker general statistics
-----------------------------
Number of program locations:     1934
Number of CFA edges:             2111
Number of relevant variables:    308
Number of functions:             70
Number of loops:                 10
Size of reached set:             9425
  Number of reached locations:   701 (36%)
    Avg states per location:     13
    Max states per location:     208 (at node N58)
  Number of reached functions:   46 (66%)
  Number of partitions:          9403
    Avg size of partitions:      1
    Max size of partitions:      6 (with key [N1138 (before line 4280), Function main called from node N1105, stack depth 1 [538613b3], stack [main]])
  Number of target states:       1
  Size of final wait list        13

Time for analysis setup:          4.646s
  Time for loading CPAs:          0.888s
  Time for loading parser:        0.726s
  Time for CFA construction:      2.914s
    Time for parsing file(s):     0.848s
    Time for AST to CFA:          0.999s
    Time for CFA sanity check:    0.183s
    Time for post-processing:     0.676s
      Time for var class.:        0.321s
Time for Analysis:               25.617s
CPU time for analysis:           25.620s
Total time for CPAchecker:       30.268s
Total CPU time for CPAchecker:   30.270s
Time for statistics:              0.279s

Time for Garbage Collector:       1.183s (in 84 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 99MB (    94 MiB) max;     51MB (    49 MiB) avg;    108MB (   103 MiB) peak
Used non-heap memory:             38MB (    37 MiB) max;     34MB (    33 MiB) avg;     39MB (    37 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        40MB (    38 MiB) max;     36MB (    34 MiB) avg
Total process virtual memory:   8087MB (  7712 MiB) max;   8073MB (  7699 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
