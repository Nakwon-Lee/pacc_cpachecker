scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.16-rc1/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--nfc--st21nfca--st21nfca_i2c.ko-entry_point_true-unreach-call.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_43msz_37/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

line 4270: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___3 = ldv_zalloc(32UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function i2c_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function i2c_del_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_handler1_2 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_final_state to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_handler1_1 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_dev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_pr_debug to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function print_hex_dump to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function skb_push to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function crc_ccitt to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function skb_put to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usleep_range to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock_nested to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function skb_trim to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function i2c_master_recv to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function msleep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function nfc_hci_recv_frame to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function kfree_skb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function st21nfca_hci_remove to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 3013: Ignoring function call through function pointer *(adap->algo->functionality): tmp = (*(adap->algo->functionality))(adap); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function i2c_master_send to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function skb_pull to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function devm_kmalloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __alloc_skb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __mutex_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function devm_gpio_request to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function gpio_to_desc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function gpiod_direction_input to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function devm_request_threaded_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function gpiod_direction_output_raw to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function gpiod_to_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function st21nfca_hci_probe to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            117840 (15% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  97756 (83%)
  Because of loop head:            20021 (17%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         63 (0%)
  Times precision was empty:       33665 (29%)
  Times precision was {false}:     677 (1%)
  Times result was cached:         83046 (70%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      452 (0%)
  Times result was 'false':        1778 (2%)
Number of strengthen sat checks:   0
Number of coverage checks:         172368
  BDD entailment checks:           40926
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       60
Number of predicates discovered:          4
Number of abstraction locations:          119
Max number of predicates per location:    3
Avg number of predicates per location:    1
Total predicates per abstraction:         100762
Max number of predicates per abstraction: 3
Avg number of predicates per abstraction: 89.25
Number of irrelevant predicates:          44667 (44%)
Number of preds handled by boolean abs:   553 (1%)
  Total number of models for allsat:      477
  Max number of models for allsat:        4
  Avg number of models for allsat:        1.06

Time for post operator:                  8.438s
  Time for path formula creation:        7.837s
Time for strengthen operator:            0.884s
Time for prec operator:                 15.549s
  Time for abstraction:                 13.561s (Max:     0.194s, Count: 117840)
    Boolean abstraction:                 0.496s
    Solving time:                        1.042s (Max:     0.015s)
    Model enumeration time:              0.030s
    Time for BDD construction:           0.053s (Max:     0.007s)
Time for merge operator:                 0.581s
Time for coverage check:                 0.092s
  Time for BDD entailment checks:        0.069s
Total time for SMT solver (w/o itp):     1.072s

Number of path formula cache hits:   921599 (96%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     5.730s

Total number of created targets for pointer analysis: 13360
   Number of created targets for uf: *(void)* is 3
   Number of created targets for uf: *signed_int is 113
   Number of created targets for uf: *unsigned_char is 998
   Number of created targets for uf: *char is 41
   Number of created targets for uf: *unsigned_int is 3


Number of BDD nodes:                               228
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         926 (count: 80820, min: 0, max: 53, avg: 0.01)
Time for BDD node cleanup:                             0.024s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  1.602s
  Time for transition matches:                         0.763s
  Time for transition assertions:                      0.005s
  Time for transition actions:                         0.001s
Automaton transfers with branching:                0
Automaton transfer successors:                       789703 (count: 789703, min: 1, max: 1, avg: 1.00) [1 x 789703]

CPA algorithm statistics
------------------------
Number of iterations:            506133
Max size of waitlist:            181
Average size of waitlist:        83
Number of computed successors:   608378
Max successors for one state:    2
Number of times merged:          65721
Number of times stopped:         95771
Number of times breaked:         63

Total time for CPA algorithm:        46.262s (Max:     2.364s)
  Time for choose from waitlist:      0.323s
  Time for precision adjustment:     20.918s
  Time for transfer relation:        18.594s
  Time for merge operator:            1.836s
  Time for stop operator:             0.986s
  Time for adding to reached set:     1.208s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   63
Avg. length of target path (in blocks):                2275 (count: 63, min: 22, max: 64, avg: 36.11)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   2.632s
  Counterexample analysis:                             1.150s (Max:     0.052s, Calls: 63)
    Refinement sat check:                              0.823s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.002s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.081s
  Precision update:                                    0.043s
  ARG update:                                          1.275s

Length of refined path (in blocks):                    1919 (count: 63, min: 12, max: 63, avg: 30.46)
Number of affected states:                             1646 (count: 63, min: 1, max: 62, avg: 26.13)
Length (states) of path with itp 'true':                210 (count: 63, min: 0, max: 10, avg: 3.33)
Length (states) of path with itp non-trivial itp:      1646 (count: 63, min: 1, max: 62, avg: 26.13)
Length (states) of path with itp 'false':                63 (count: 63, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 63, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:            1583 (count: 63, min: 0, max: 61, avg: 25.13)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                63
Number of successful refinements:     63
Number of failed refinements:         0
Max. size of reached set before ref.: 11622
Max. size of reached set after ref.:  53
Avg. size of reached set before ref.: 8020.71
Avg. size of reached set after ref.:  19.67

Total time for CEGAR algorithm:      49.470s
Time for refinements:                 3.207s
Average time for refinement:          0.050s
Max time for refinement:              0.150s

Code Coverage
-----------------------------
  Function coverage:      0.643
  Visited lines:          1297
  Total lines:            1437
  Line coverage:          0.903
  Visited conditions:     283
  Total conditions:       360
  Condition coverage:     0.786

CPAchecker general statistics
-----------------------------
Number of program locations:     1934
Number of CFA edges:             2111
Number of relevant variables:    308
Number of functions:             70
Number of loops:                 10
Size of reached set:             6764
  Number of reached locations:   697 (36%)
    Avg states per location:     9
    Max states per location:     152 (at node N58)
  Number of reached functions:   45 (64%)
  Number of partitions:          6744
    Avg size of partitions:      1
    Max size of partitions:      3 (with key [N1138 (before line 4280), Function main called from node N1105, stack depth 1 [9f46d94], stack [main]])
  Number of target states:       0

Time for analysis setup:          5.027s
  Time for loading CPAs:          0.954s
  Time for loading parser:        0.744s
  Time for CFA construction:      3.153s
    Time for parsing file(s):     0.996s
    Time for AST to CFA:          0.987s
    Time for CFA sanity check:    0.187s
    Time for post-processing:     0.783s
      Time for var class.:        0.357s
Time for Analysis:               49.470s
CPU time for analysis:           49.460s
Time for analyzing result:        0.005s
Total time for CPAchecker:       54.501s
Total CPU time for CPAchecker:   54.500s
Time for statistics:              0.221s

Time for Garbage Collector:       3.429s (in 216 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                125MB (   119 MiB) max;     63MB (    60 MiB) avg;    128MB (   122 MiB) peak
Used non-heap memory:             39MB (    37 MiB) max;     36MB (    34 MiB) avg;     39MB (    38 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        40MB (    39 MiB) max;     38MB (    36 MiB) avg
Total process virtual memory:   8087MB (  7712 MiB) max;   8078MB (  7704 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
