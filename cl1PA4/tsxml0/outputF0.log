scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.16-rc1/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--nfc--st21nfca--st21nfca_i2c.ko-entry_point_true-unreach-call.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_saru_e5h/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

line 4270: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___3 = ldv_zalloc(32UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function i2c_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_final_state to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function i2c_del_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_handler1_2 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_dev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_handler1_1 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_pr_debug to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function print_hex_dump to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function skb_push to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function crc_ccitt to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function skb_put to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock_nested to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function i2c_master_send to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function msleep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function skb_pull to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function skb_trim to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function st21nfca_hci_remove to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usleep_range to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 3013: Ignoring function call through function pointer *(adap->algo->functionality): tmp = (*(adap->algo->functionality))(adap); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function devm_kmalloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __alloc_skb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __mutex_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function i2c_master_recv to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function devm_request_threaded_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function st21nfca_hci_probe to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function devm_gpio_request to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function gpio_to_desc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function gpiod_direction_input to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function gpiod_direction_output_raw to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function nfc_hci_recv_frame to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function kfree_skb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function gpiod_to_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            133809 (16% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  111346 (83%)
  Because of loop head:            22380 (17%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         83 (0%)
  Times precision was empty:       43190 (32%)
  Times precision was {false}:     1113 (1%)
  Times result was cached:         88298 (66%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      1208 (1%)
  Times result was 'false':        1200 (1%)
Number of strengthen sat checks:   0
Number of coverage checks:         174725
  BDD entailment checks:           57465
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       60
Number of predicates discovered:          4
Number of abstraction locations:          119
Max number of predicates per location:    3
Avg number of predicates per location:    1
Total predicates per abstraction:         195250
Max number of predicates per abstraction: 3
Avg number of predicates per abstraction: 84.12
Number of irrelevant predicates:          103209 (53%)
Number of preds handled by boolean abs:   1631 (1%)
  Total number of models for allsat:      1250
  Max number of models for allsat:        4
  Avg number of models for allsat:        1.03

Time for post operator:                 12.949s
  Time for path formula creation:       12.270s
Time for strengthen operator:            0.934s
Time for prec operator:                 20.677s
  Time for abstraction:                 18.428s (Max:     0.284s, Count: 133809)
    Boolean abstraction:                 1.282s
    Solving time:                        1.832s (Max:     0.028s)
    Model enumeration time:              0.125s
    Time for BDD construction:           0.104s (Max:     0.016s)
Time for merge operator:                 0.984s
Time for coverage check:                 0.152s
  Time for BDD entailment checks:        0.098s
Total time for SMT solver (w/o itp):     1.957s

Number of path formula cache hits:   898009 (89%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     9.827s

Total number of created targets for pointer analysis: 55120
   Number of created targets for uf: *(void)* is 121
   Number of created targets for uf: *(struct_sk_buff)* is 46
   Number of created targets for uf: *signed_int is 13
   Number of created targets for uf: *unsigned_char is 4613
   Number of created targets for uf: *(struct_i2c_client)* is 46
   Number of created targets for uf: *char is 525
   Number of created targets for uf: *unsigned_int is 4


Number of BDD nodes:                               234
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        2436 (count: 113714, min: 0, max: 79, avg: 0.02)
Time for BDD node cleanup:                             0.043s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  1.642s
  Time for transition matches:                         0.848s
  Time for transition assertions:                      0.006s
  Time for transition actions:                         0.008s
Automaton transfers with branching:                0
Automaton transfer successors:                       843349 (count: 843349, min: 1, max: 1, avg: 1.00) [1 x 843349]

CPA algorithm statistics
------------------------
Number of iterations:            538056
Max size of waitlist:            238
Average size of waitlist:        95
Number of computed successors:   638591
Max successors for one state:    2
Number of times merged:          58630
Number of times stopped:         88211
Number of times breaked:         83

Total time for CPA algorithm:        58.435s (Max:     1.904s)
  Time for choose from waitlist:      0.381s
  Time for precision adjustment:     26.226s
  Time for transfer relation:        24.359s
  Time for merge operator:            2.246s
  Time for stop operator:             1.200s
  Time for adding to reached set:     1.225s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   83
Avg. length of target path (in blocks):                3550 (count: 83, min: 26, max: 68, avg: 42.77)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   3.112s
  Counterexample analysis:                             1.691s (Max:     0.057s, Calls: 83)
    Refinement sat check:                              1.186s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.004s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.069s
  Precision update:                                    0.099s
  ARG update:                                          1.161s

Length of refined path (in blocks):                    2785 (count: 83, min: 12, max: 67, avg: 33.55)
Number of affected states:                             2272 (count: 83, min: 1, max: 66, avg: 27.37)
Length (states) of path with itp 'true':                430 (count: 83, min: 0, max: 10, avg: 5.18)
Length (states) of path with itp non-trivial itp:      2272 (count: 83, min: 1, max: 66, avg: 27.37)
Length (states) of path with itp 'false':                83 (count: 83, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 83, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:            2189 (count: 83, min: 0, max: 65, avg: 26.37)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                83
Number of successful refinements:     83
Number of failed refinements:         0
Max. size of reached set before ref.: 12175
Max. size of reached set after ref.:  53
Avg. size of reached set before ref.: 6536.33
Avg. size of reached set after ref.:  28.90

Total time for CEGAR algorithm:      62.090s
Time for refinements:                 3.642s
Average time for refinement:          0.043s
Max time for refinement:              0.104s

Code Coverage
-----------------------------
  Function coverage:      0.643
  Visited lines:          1297
  Total lines:            1437
  Line coverage:          0.903
  Visited conditions:     283
  Total conditions:       360
  Condition coverage:     0.786

CPAchecker general statistics
-----------------------------
Number of program locations:     1934
Number of CFA edges:             2111
Number of relevant variables:    308
Number of functions:             70
Number of loops:                 10
Size of reached set:             9065
  Number of reached locations:   697 (36%)
    Avg states per location:     13
    Max states per location:     204 (at node N58)
  Number of reached functions:   45 (64%)
  Number of partitions:          9056
    Avg size of partitions:      1
    Max size of partitions:      4 (with key [N1138 (before line 4280), Function main called from node N1105, stack depth 1 [538613b3], stack [main]])
  Number of target states:       0

Time for analysis setup:          4.939s
  Time for loading CPAs:          0.927s
  Time for loading parser:        0.693s
  Time for CFA construction:      3.152s
    Time for parsing file(s):     0.955s
    Time for AST to CFA:          1.052s
    Time for CFA sanity check:    0.200s
    Time for post-processing:     0.718s
      Time for var class.:        0.333s
Time for Analysis:               62.091s
CPU time for analysis:           62.100s
Time for analyzing result:        0.010s
Total time for CPAchecker:       67.035s
Total CPU time for CPAchecker:   67.020s
Time for statistics:              0.255s

Time for Garbage Collector:       4.018s (in 244 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                141MB (   134 MiB) max;     68MB (    65 MiB) avg;    148MB (   141 MiB) peak
Used non-heap memory:             40MB (    38 MiB) max;     37MB (    35 MiB) avg;     40MB (    38 MiB) peak
Allocated heap memory:           148MB (   142 MiB) max;    131MB (   125 MiB) avg
Allocated non-heap memory:        41MB (    39 MiB) max;     39MB (    37 MiB) avg
Total process virtual memory:   8087MB (  7712 MiB) max;   8080MB (  7706 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
