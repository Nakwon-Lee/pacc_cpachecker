scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.16-rc1/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--nfc--st21nfca--st21nfca_i2c.ko-entry_point_true-unreach-call.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_qjnz52k6/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

line 4270: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___3 = ldv_zalloc(32UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function i2c_del_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_final_state to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function i2c_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_pr_debug to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function print_hex_dump to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_dev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function skb_push to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function crc_ccitt to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function skb_put to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock_nested to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function i2c_master_send to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function msleep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function skb_pull to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function skb_trim to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_handler1_2 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_handler1_1 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usleep_range to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function st21nfca_hci_remove to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 3013: Ignoring function call through function pointer *(adap->algo->functionality): tmp = (*(adap->algo->functionality))(adap); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function devm_kmalloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __alloc_skb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __mutex_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function devm_request_threaded_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function i2c_master_recv to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function st21nfca_hci_probe to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function devm_gpio_request to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function gpio_to_desc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function gpiod_direction_input to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function gpiod_direction_output_raw to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            44233 (18% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  37874 (86%)
  Because of loop head:            6325 (14%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         34 (0%)
  Times precision was empty:       29652 (67%)
  Times precision was {false}:     275 (1%)
  Times result was cached:         14034 (32%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      272 (1%)
  Times result was 'false':        197 (0%)
Number of strengthen sat checks:   0
Number of coverage checks:         46206
  BDD entailment checks:           15048
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       60
Number of predicates discovered:          4
Number of abstraction locations:          58
Max number of predicates per location:    3
Avg number of predicates per location:    1
Total predicates per abstraction:         23021
Max number of predicates per abstraction: 3
Avg number of predicates per abstraction: 42.09
Number of irrelevant predicates:          17365 (75%)
Number of preds handled by boolean abs:   365 (2%)
  Total number of models for allsat:      292
  Max number of models for allsat:        4
  Avg number of models for allsat:        1.07

Time for post operator:                  5.710s
  Time for path formula creation:        5.399s
Time for strengthen operator:            0.401s
Time for prec operator:                  6.177s
  Time for abstraction:                  5.084s (Max:     0.033s, Count: 44233)
    Boolean abstraction:                 0.543s
    Solving time:                        0.682s (Max:     0.019s)
    Model enumeration time:              0.043s
    Time for BDD construction:           0.090s (Max:     0.012s)
Time for merge operator:                 0.410s
Time for coverage check:                 0.123s
  Time for BDD entailment checks:        0.086s
Total time for SMT solver (w/o itp):     0.725s

Number of path formula cache hits:   284099 (93%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     4.420s

Total number of created targets for pointer analysis: 7220
   Number of created targets for uf: *(void)* is 17
   Number of created targets for uf: *(struct_sk_buff)* is 11
   Number of created targets for uf: *signed_int is 49
   Number of created targets for uf: *unsigned_char is 529
   Number of created targets for uf: *(struct_i2c_client)* is 11
   Number of created targets for uf: *char is 145
   Number of created targets for uf: *unsigned_int is 49


Number of BDD nodes:                               223
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         574 (count: 47771, min: 0, max: 77, avg: 0.01)
Time for BDD node cleanup:                             0.016s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.771s
  Time for transition matches:                         0.371s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.003s
Automaton transfers with branching:                0
Automaton transfer successors:                       250774 (count: 250774, min: 1, max: 1, avg: 1.00) [1 x 250774]

CPA algorithm statistics
------------------------
Number of iterations:            168916
Max size of waitlist:            156
Average size of waitlist:        65
Number of computed successors:   196202
Max successors for one state:    2
Number of times merged:          15579
Number of times stopped:         25593
Number of times breaked:         34

Total time for CPA algorithm:        23.656s (Max:     2.162s)
  Time for choose from waitlist:      0.253s
  Time for precision adjustment:      8.825s
  Time for transfer relation:        10.856s
  Time for merge operator:            0.977s
  Time for stop operator:             0.694s
  Time for adding to reached set:     0.620s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   34
Avg. length of target path (in blocks):                1193 (count: 34, min: 26, max: 44, avg: 35.09)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   1.688s
  Counterexample analysis:                             0.798s (Max:     0.057s, Calls: 34)
    Refinement sat check:                              0.532s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.051s
  Precision update:                                    0.046s
  ARG update:                                          0.755s

Length of refined path (in blocks):                     818 (count: 34, min: 12, max: 43, avg: 24.06)
Number of affected states:                              574 (count: 34, min: 1, max: 42, avg: 16.88)
Length (states) of path with itp 'true':                210 (count: 34, min: 0, max: 10, avg: 6.18)
Length (states) of path with itp non-trivial itp:       574 (count: 34, min: 1, max: 42, avg: 16.88)
Length (states) of path with itp 'false':                34 (count: 34, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 34, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:             540 (count: 34, min: 0, max: 41, avg: 15.88)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                34
Number of successful refinements:     34
Number of failed refinements:         0
Max. size of reached set before ref.: 7115
Max. size of reached set after ref.:  53
Avg. size of reached set before ref.: 5025.85
Avg. size of reached set after ref.:  33.88

Total time for CEGAR algorithm:      25.664s
Time for refinements:                 2.001s
Average time for refinement:          0.058s
Max time for refinement:              0.133s

Code Coverage
-----------------------------
  Function coverage:      0.357
  Visited lines:          904
  Total lines:            1437
  Line coverage:          0.629
  Visited conditions:     126
  Total conditions:       360
  Condition coverage:     0.350

CPAchecker general statistics
-----------------------------
Number of program locations:     1934
Number of CFA edges:             2111
Number of relevant variables:    308
Number of functions:             70
Number of loops:                 10
Size of reached set:             685
  Number of reached locations:   303 (16%)
    Avg states per location:     2
    Max states per location:     19 (at node N54)
  Number of reached functions:   25 (36%)
  Number of partitions:          684
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N1138 (before line 4280), Function main called from node N1105, stack depth 1 [9f46d94], stack [main]])
  Number of target states:       0
  Size of final wait list        30

Time for analysis setup:          4.606s
  Time for loading CPAs:          0.888s
  Time for loading parser:        0.723s
  Time for CFA construction:      2.899s
    Time for parsing file(s):     0.892s
    Time for AST to CFA:          0.969s
    Time for CFA sanity check:    0.164s
    Time for post-processing:     0.669s
      Time for var class.:        0.320s
Time for Analysis:               25.664s
CPU time for analysis:           25.660s
Total time for CPAchecker:       30.277s
Total CPU time for CPAchecker:   30.260s
Time for statistics:              0.107s

Time for Garbage Collector:       0.929s (in 67 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 74MB (    71 MiB) max;     47MB (    45 MiB) avg;     77MB (    73 MiB) peak
Used non-heap memory:             38MB (    37 MiB) max;     34MB (    33 MiB) avg;     39MB (    37 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        40MB (    38 MiB) max;     36MB (    34 MiB) avg
Total process virtual memory:   8087MB (  7712 MiB) max;   8073MB (  7699 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
