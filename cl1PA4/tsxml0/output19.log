scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.16-rc1/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--nfc--st21nfca--st21nfca_i2c.ko-entry_point_true-unreach-call.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_1036dfzd/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

line 4270: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___3 = ldv_zalloc(32UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function i2c_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function i2c_del_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_handler1_2 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_final_state to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_handler1_1 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_dev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_pr_debug to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function print_hex_dump to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function skb_push to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function crc_ccitt to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function skb_put to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usleep_range to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock_nested to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function skb_trim to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function i2c_master_recv to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function msleep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function nfc_hci_recv_frame to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function kfree_skb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function st21nfca_hci_remove to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 3013: Ignoring function call through function pointer *(adap->algo->functionality): tmp = (*(adap->algo->functionality))(adap); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function i2c_master_send to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function skb_pull to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function devm_kmalloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __alloc_skb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            47225 (15% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  39226 (83%)
  Because of loop head:            7968 (17%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         31 (0%)
  Times precision was empty:       19575 (41%)
  Times precision was {false}:     280 (1%)
  Times result was cached:         27196 (58%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      174 (0%)
  Times result was 'false':        646 (1%)
Number of strengthen sat checks:   0
Number of coverage checks:         68964
  BDD entailment checks:           15126
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       60
Number of predicates discovered:          4
Number of abstraction locations:          50
Max number of predicates per location:    3
Avg number of predicates per location:    1
Total predicates per abstraction:         29793
Max number of predicates per abstraction: 3
Avg number of predicates per abstraction: 65.62
Number of irrelevant predicates:          15705 (53%)
Number of preds handled by boolean abs:   218 (1%)
  Total number of models for allsat:      190
  Max number of models for allsat:        4
  Avg number of models for allsat:        1.09

Time for post operator:                  4.705s
  Time for path formula creation:        4.462s
Time for strengthen operator:            0.440s
Time for prec operator:                  7.183s
  Time for abstraction:                  6.019s (Max:     0.039s, Count: 47225)
    Boolean abstraction:                 0.246s
    Solving time:                        0.450s (Max:     0.014s)
    Model enumeration time:              0.034s
    Time for BDD construction:           0.026s (Max:     0.008s)
Time for merge operator:                 0.370s
Time for coverage check:                 0.096s
  Time for BDD entailment checks:        0.076s
Total time for SMT solver (w/o itp):     0.484s

Number of path formula cache hits:   375191 (96%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     3.362s

Total number of created targets for pointer analysis: 4206
   Number of created targets for uf: *signed_int is 35
   Number of created targets for uf: *unsigned_char is 329


Number of BDD nodes:                               226
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         371 (count: 37172, min: 0, max: 53, avg: 0.01)
Time for BDD node cleanup:                             0.023s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.884s
  Time for transition matches:                         0.506s
  Time for transition assertions:                      0.001s
  Time for transition actions:                         0.001s
Automaton transfers with branching:                0
Automaton transfer successors:                       318988 (count: 318988, min: 1, max: 1, avg: 1.00) [1 x 318988]

CPA algorithm statistics
------------------------
Number of iterations:            203691
Max size of waitlist:            165
Average size of waitlist:        86
Number of computed successors:   245449
Max successors for one state:    2
Number of times merged:          26919
Number of times stopped:         38546
Number of times breaked:         31

Total time for CPA algorithm:        23.833s (Max:     2.144s)
  Time for choose from waitlist:      0.260s
  Time for precision adjustment:      9.689s
  Time for transfer relation:        10.057s
  Time for merge operator:            1.047s
  Time for stop operator:             0.650s
  Time for adding to reached set:     0.588s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   31
Avg. length of target path (in blocks):                 874 (count: 31, min: 22, max: 31, avg: 28.19)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   1.397s
  Counterexample analysis:                             0.516s (Max:     0.026s, Calls: 31)
    Refinement sat check:                              0.335s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.009s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.051s
  Precision update:                                    0.027s
  ARG update:                                          0.764s

Length of refined path (in blocks):                     662 (count: 31, min: 12, max: 30, avg: 21.35)
Number of affected states:                              501 (count: 31, min: 1, max: 29, avg: 16.16)
Length (states) of path with itp 'true':                130 (count: 31, min: 0, max: 10, avg: 4.19)
Length (states) of path with itp non-trivial itp:       501 (count: 31, min: 1, max: 29, avg: 16.16)
Length (states) of path with itp 'false':                31 (count: 31, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 31, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:             470 (count: 31, min: 0, max: 28, avg: 15.16)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                31
Number of successful refinements:     31
Number of failed refinements:         0
Max. size of reached set before ref.: 9676
Max. size of reached set after ref.:  53
Avg. size of reached set before ref.: 6554.19
Avg. size of reached set after ref.:  23.97

Total time for CEGAR algorithm:      25.578s
Time for refinements:                 1.741s
Average time for refinement:          0.056s
Max time for refinement:              0.121s

Code Coverage
-----------------------------
  Function coverage:      0.414
  Visited lines:          1040
  Total lines:            1437
  Line coverage:          0.724
  Visited conditions:     184
  Total conditions:       360
  Condition coverage:     0.511

CPAchecker general statistics
-----------------------------
Number of program locations:     1934
Number of CFA edges:             2111
Number of relevant variables:    308
Number of functions:             70
Number of loops:                 10
Size of reached set:             3820
  Number of reached locations:   432 (22%)
    Avg states per location:     8
    Max states per location:     104 (at node N59)
  Number of reached functions:   29 (41%)
  Number of partitions:          3778
    Avg size of partitions:      1
    Max size of partitions:      6 (with key [N1138 (before line 4280), Function main called from node N1105, stack depth 1 [538613b3], stack [main]])
  Number of target states:       0
  Size of final wait list        151

Time for analysis setup:          4.660s
  Time for loading CPAs:          0.843s
  Time for loading parser:        0.708s
  Time for CFA construction:      2.995s
    Time for parsing file(s):     0.899s
    Time for AST to CFA:          1.034s
    Time for CFA sanity check:    0.159s
    Time for post-processing:     0.702s
      Time for var class.:        0.334s
Time for Analysis:               25.578s
CPU time for analysis:           25.570s
Total time for CPAchecker:       30.243s
Total CPU time for CPAchecker:   30.230s
Time for statistics:              0.163s

Time for Garbage Collector:       1.229s (in 85 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 96MB (    92 MiB) max;     50MB (    48 MiB) avg;    104MB (    99 MiB) peak
Used non-heap memory:             38MB (    36 MiB) max;     34MB (    33 MiB) avg;     38MB (    37 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        40MB (    38 MiB) max;     36MB (    34 MiB) avg
Total process virtual memory:   8087MB (  7712 MiB) max;   8074MB (  7699 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
