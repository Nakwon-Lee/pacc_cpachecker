scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.16-rc1/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--nfc--st21nfca--st21nfca_i2c.ko-entry_point_true-unreach-call.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_q5r93vdk/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

line 4270: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___3 = ldv_zalloc(32UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function i2c_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_final_state to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function i2c_del_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_handler1_2 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_dev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_handler1_1 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_pr_debug to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function print_hex_dump to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function skb_push to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function crc_ccitt to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function skb_put to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock_nested to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function i2c_master_send to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function msleep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function skb_pull to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function skb_trim to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function st21nfca_hci_remove to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usleep_range to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 3013: Ignoring function call through function pointer *(adap->algo->functionality): tmp = (*(adap->algo->functionality))(adap); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function devm_kmalloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __alloc_skb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __mutex_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function i2c_master_recv to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function devm_request_threaded_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function st21nfca_hci_probe to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            36903 (17% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  30555 (83%)
  Because of loop head:            6312 (17%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         36 (0%)
  Times precision was empty:       22956 (62%)
  Times precision was {false}:     324 (1%)
  Times result was cached:         13213 (36%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      410 (1%)
  Times result was 'false':        204 (1%)
Number of strengthen sat checks:   0
Number of coverage checks:         41917
  BDD entailment checks:           14653
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       60
Number of predicates discovered:          4
Number of abstraction locations:          65
Max number of predicates per location:    3
Avg number of predicates per location:    1
Total predicates per abstraction:         23342
Max number of predicates per abstraction: 3
Avg number of predicates per abstraction: 31.80
Number of irrelevant predicates:          16739 (72%)
Number of preds handled by boolean abs:   523 (2%)
  Total number of models for allsat:      435
  Max number of models for allsat:        4
  Avg number of models for allsat:        1.06

Time for post operator:                  5.676s
  Time for path formula creation:        5.410s
Time for strengthen operator:            0.383s
Time for prec operator:                  6.731s
  Time for abstraction:                  5.718s (Max:     0.034s, Count: 36903)
    Boolean abstraction:                 0.732s
    Solving time:                        0.806s (Max:     0.020s)
    Model enumeration time:              0.051s
    Time for BDD construction:           0.091s (Max:     0.010s)
Time for merge operator:                 0.295s
Time for coverage check:                 0.079s
  Time for BDD entailment checks:        0.056s
Total time for SMT solver (w/o itp):     0.857s

Number of path formula cache hits:   248914 (92%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     4.397s

Total number of created targets for pointer analysis: 7329
   Number of created targets for uf: *(void)* is 21
   Number of created targets for uf: *(struct_sk_buff)* is 12
   Number of created targets for uf: *signed_int is 55
   Number of created targets for uf: *unsigned_char is 621
   Number of created targets for uf: *(struct_i2c_client)* is 12
   Number of created targets for uf: *char is 81


Number of BDD nodes:                               231
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         815 (count: 41736, min: 0, max: 77, avg: 0.02)
Time for BDD node cleanup:                             0.022s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.832s
  Time for transition matches:                         0.396s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.000s
Automaton transfers with branching:                0
Automaton transfer successors:                       222938 (count: 222938, min: 1, max: 1, avg: 1.00) [1 x 222938]

CPA algorithm statistics
------------------------
Number of iterations:            142076
Max size of waitlist:            158
Average size of waitlist:        84
Number of computed successors:   167363
Max successors for one state:    2
Number of times merged:          13632
Number of times stopped:         21034
Number of times breaked:         36

Total time for CPA algorithm:        23.466s (Max:     1.883s)
  Time for choose from waitlist:      0.268s
  Time for precision adjustment:      8.763s
  Time for transfer relation:        10.886s
  Time for merge operator:            0.857s
  Time for stop operator:             0.520s
  Time for adding to reached set:     0.553s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   36
Avg. length of target path (in blocks):                1279 (count: 36, min: 26, max: 44, avg: 35.53)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   1.654s
  Counterexample analysis:                             0.867s (Max:     0.039s, Calls: 36)
    Refinement sat check:                              0.569s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.006s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.049s
  Precision update:                                    0.038s
  ARG update:                                          0.665s

Length of refined path (in blocks):                     902 (count: 36, min: 12, max: 43, avg: 25.06)
Number of affected states:                              656 (count: 36, min: 1, max: 42, avg: 18.22)
Length (states) of path with itp 'true':                210 (count: 36, min: 0, max: 10, avg: 5.83)
Length (states) of path with itp non-trivial itp:       656 (count: 36, min: 1, max: 42, avg: 18.22)
Length (states) of path with itp 'false':                36 (count: 36, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 36, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:             620 (count: 36, min: 0, max: 41, avg: 17.22)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                36
Number of successful refinements:     36
Number of failed refinements:         0
Max. size of reached set before ref.: 5593
Max. size of reached set after ref.:  53
Avg. size of reached set before ref.: 4017.56
Avg. size of reached set after ref.:  32.17

Total time for CEGAR algorithm:      25.423s
Time for refinements:                 1.953s
Average time for refinement:          0.054s
Max time for refinement:              0.098s

Code Coverage
-----------------------------
  Function coverage:      0.429
  Visited lines:          992
  Total lines:            1437
  Line coverage:          0.690
  Visited conditions:     148
  Total conditions:       360
  Condition coverage:     0.411

CPAchecker general statistics
-----------------------------
Number of program locations:     1934
Number of CFA edges:             2111
Number of relevant variables:    308
Number of functions:             70
Number of loops:                 10
Size of reached set:             2650
  Number of reached locations:   391 (20%)
    Avg states per location:     6
    Max states per location:     77 (at node N59)
  Number of reached functions:   30 (43%)
  Number of partitions:          2638
    Avg size of partitions:      1
    Max size of partitions:      5 (with key [N1138 (before line 4280), Function main called from node N1105, stack depth 1 [9f46d94], stack [main]])
  Number of target states:       0
  Size of final wait list        91

Time for analysis setup:          4.840s
  Time for loading CPAs:          0.994s
  Time for loading parser:        0.756s
  Time for CFA construction:      2.971s
    Time for parsing file(s):     0.937s
    Time for AST to CFA:          0.970s
    Time for CFA sanity check:    0.170s
    Time for post-processing:     0.711s
      Time for var class.:        0.358s
Time for Analysis:               25.424s
CPU time for analysis:           25.430s
Total time for CPAchecker:       30.278s
Total CPU time for CPAchecker:   30.270s
Time for statistics:              0.154s

Time for Garbage Collector:       0.759s (in 59 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 71MB (    68 MiB) max;     46MB (    44 MiB) avg;     75MB (    72 MiB) peak
Used non-heap memory:             40MB (    38 MiB) max;     35MB (    33 MiB) avg;     40MB (    38 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        41MB (    39 MiB) max;     36MB (    35 MiB) avg
Total process virtual memory:   8087MB (  7712 MiB) max;   8073MB (  7699 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
