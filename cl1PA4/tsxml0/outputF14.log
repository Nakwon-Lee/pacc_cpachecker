scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.16-rc1/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--nfc--st21nfca--st21nfca_i2c.ko-entry_point_true-unreach-call.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_ej3nyawb/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

line 4270: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___3 = ldv_zalloc(32UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function i2c_del_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_final_state to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function i2c_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_handler1_2 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_dev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_handler1_1 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_pr_debug to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function print_hex_dump to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function skb_push to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function crc_ccitt to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function skb_put to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock_nested to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function i2c_master_send to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function msleep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function skb_pull to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function skb_trim to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usleep_range to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 3013: Ignoring function call through function pointer *(adap->algo->functionality): tmp = (*(adap->algo->functionality))(adap); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function devm_kmalloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __alloc_skb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __mutex_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function devm_request_threaded_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function i2c_master_recv to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function st21nfca_hci_probe to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function st21nfca_hci_remove to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function nfc_hci_recv_frame to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function kfree_skb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function devm_gpio_request to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function gpio_to_desc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function gpiod_direction_input to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function gpiod_direction_output_raw to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function gpiod_to_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            74674 (15% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  61007 (82%)
  Because of loop head:            13605 (18%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         62 (0%)
  Times precision was empty:       29507 (40%)
  Times precision was {false}:     988 (1%)
  Times result was cached:         43575 (58%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      604 (1%)
  Times result was 'false':        682 (1%)
Number of strengthen sat checks:   0
Number of coverage checks:         106047
  BDD entailment checks:           26601
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       60
Number of predicates discovered:          4
Number of abstraction locations:          119
Max number of predicates per location:    3
Avg number of predicates per location:    1
Total predicates per abstraction:         71937
Max number of predicates per abstraction: 3
Avg number of predicates per abstraction: 45.19
Number of irrelevant predicates:          39063 (54%)
Number of preds handled by boolean abs:   736 (1%)
  Total number of models for allsat:      662
  Max number of models for allsat:        4
  Avg number of models for allsat:        1.10

Time for post operator:                 12.222s
  Time for path formula creation:       11.696s
Time for strengthen operator:            0.754s
Time for prec operator:                 12.791s
  Time for abstraction:                 11.153s (Max:     0.033s, Count: 74674)
    Boolean abstraction:                 0.812s
    Solving time:                        1.463s (Max:     0.031s)
    Model enumeration time:              0.052s
    Time for BDD construction:           0.076s (Max:     0.009s)
Time for merge operator:                 0.751s
Time for coverage check:                 0.120s
  Time for BDD entailment checks:        0.080s
Total time for SMT solver (w/o itp):     1.515s

Number of path formula cache hits:   524550 (86%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     9.869s

Total number of created targets for pointer analysis: 30099
   Number of created targets for uf: *(void)* is 115
   Number of created targets for uf: *(struct_sk_buff)* is 12
   Number of created targets for uf: *signed_int is 73
   Number of created targets for uf: *unsigned_char is 2265
   Number of created targets for uf: *(struct_i2c_client)* is 12
   Number of created targets for uf: *char is 545
   Number of created targets for uf: *unsigned_int is 73


Number of BDD nodes:                               232
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        1236 (count: 64806, min: 0, max: 88, avg: 0.02)
Time for BDD node cleanup:                             0.032s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  1.350s
  Time for transition matches:                         0.732s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.001s
Automaton transfers with branching:                0
Automaton transfer successors:                       513934 (count: 513934, min: 1, max: 1, avg: 1.00) [1 x 513934]

CPA algorithm statistics
------------------------
Number of iterations:            322840
Max size of waitlist:            122
Average size of waitlist:        62
Number of computed successors:   385918
Max successors for one state:    2
Number of times merged:          39723
Number of times stopped:         58130
Number of times breaked:         62

Total time for CPA algorithm:        43.673s (Max:     2.401s)
  Time for choose from waitlist:      0.405s
  Time for precision adjustment:     16.996s
  Time for transfer relation:        20.410s
  Time for merge operator:            1.851s
  Time for stop operator:             0.874s
  Time for adding to reached set:     1.075s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   62
Avg. length of target path (in blocks):                2823 (count: 62, min: 26, max: 72, avg: 45.53)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   2.770s
  Counterexample analysis:                             1.448s (Max:     0.056s, Calls: 62)
    Refinement sat check:                              0.928s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.001s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.063s
  Precision update:                                    0.069s
  ARG update:                                          1.111s

Length of refined path (in blocks):                    2399 (count: 62, min: 12, max: 71, avg: 38.69)
Number of affected states:                             2117 (count: 62, min: 1, max: 70, avg: 34.15)
Length (states) of path with itp 'true':                220 (count: 62, min: 0, max: 10, avg: 3.55)
Length (states) of path with itp non-trivial itp:      2117 (count: 62, min: 1, max: 70, avg: 34.15)
Length (states) of path with itp 'false':                62 (count: 62, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 62, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:            2055 (count: 62, min: 0, max: 69, avg: 33.15)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                62
Number of successful refinements:     62
Number of failed refinements:         0
Max. size of reached set before ref.: 8897
Max. size of reached set after ref.:  53
Avg. size of reached set before ref.: 5187.95
Avg. size of reached set after ref.:  20.74

Total time for CEGAR algorithm:      46.852s
Time for refinements:                 3.170s
Average time for refinement:          0.051s
Max time for refinement:              0.144s

Code Coverage
-----------------------------
  Function coverage:      0.643
  Visited lines:          1297
  Total lines:            1437
  Line coverage:          0.903
  Visited conditions:     283
  Total conditions:       360
  Condition coverage:     0.786

CPAchecker general statistics
-----------------------------
Number of program locations:     1934
Number of CFA edges:             2111
Number of relevant variables:    308
Number of functions:             70
Number of loops:                 10
Size of reached set:             6740
  Number of reached locations:   697 (36%)
    Avg states per location:     9
    Max states per location:     152 (at node N58)
  Number of reached functions:   45 (64%)
  Number of partitions:          6728
    Avg size of partitions:      1
    Max size of partitions:      3 (with key [N1138 (before line 4280), Function main called from node N1105, stack depth 1 [538613b3], stack [main]])
  Number of target states:       0

Time for analysis setup:          5.071s
  Time for loading CPAs:          1.014s
  Time for loading parser:        0.708s
  Time for CFA construction:      3.170s
    Time for parsing file(s):     0.964s
    Time for AST to CFA:          1.012s
    Time for CFA sanity check:    0.188s
    Time for post-processing:     0.802s
      Time for var class.:        0.378s
Time for Analysis:               46.853s
CPU time for analysis:           46.840s
Time for analyzing result:        0.005s
Total time for CPAchecker:       51.936s
Total CPU time for CPAchecker:   51.910s
Time for statistics:              0.192s

Time for Garbage Collector:       2.512s (in 146 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                123MB (   118 MiB) max;     60MB (    57 MiB) avg;    131MB (   125 MiB) peak
Used non-heap memory:             40MB (    38 MiB) max;     36MB (    34 MiB) avg;     40MB (    38 MiB) peak
Allocated heap memory:           141MB (   135 MiB) max;    128MB (   122 MiB) avg
Allocated non-heap memory:        41MB (    39 MiB) max;     38MB (    36 MiB) avg
Total process virtual memory:   8087MB (  7712 MiB) max;   8078MB (  7704 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
