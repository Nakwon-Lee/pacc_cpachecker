scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.16-rc1/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--nfc--st21nfca--st21nfca_i2c.ko-entry_point_true-unreach-call.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_kzf94ql7/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

line 4270: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___3 = ldv_zalloc(32UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_pr_debug to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function print_hex_dump to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function skb_push to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function crc_ccitt to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function skb_put to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock_nested to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function i2c_master_send to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function msleep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function skb_pull to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function skb_trim to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usleep_range to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_handler1_1 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_dev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function nfc_hci_recv_frame to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function kfree_skb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __alloc_skb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function i2c_master_recv to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function i2c_del_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_final_state to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function i2c_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 3013: Ignoring function call through function pointer *(adap->algo->functionality): tmp = (*(adap->algo->functionality))(adap); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function devm_kmalloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __mutex_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function devm_request_threaded_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function st21nfca_hci_probe to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function devm_gpio_request to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function gpio_to_desc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function gpiod_direction_input to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function gpiod_to_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            17833 (15% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  14886 (83%)
  Because of loop head:            2900 (16%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         47 (0%)
  Times precision was empty:       3715 (21%)
  Times precision was {false}:     444 (2%)
  Times result was cached:         13195 (74%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      479 (3%)
  Times result was 'false':        360 (2%)
Number of strengthen sat checks:   0
Number of coverage checks:         24629
  BDD entailment checks:           5295
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       60
Number of predicates discovered:          3
Number of abstraction locations:          99
Max number of predicates per location:    2
Avg number of predicates per location:    1
Total predicates per abstraction:         25622
Max number of predicates per abstraction: 2
Avg number of predicates per abstraction: 27.76
Number of irrelevant predicates:          6496 (25%)
Number of preds handled by boolean abs:   588 (2%)
  Total number of models for allsat:      491
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.03

Time for post operator:                  6.822s
  Time for path formula creation:        6.664s
Time for strengthen operator:            0.268s
Time for prec operator:                  7.835s
  Time for abstraction:                  7.199s (Max:     0.043s, Count: 17833)
    Boolean abstraction:                 0.865s
    Solving time:                        1.199s (Max:     0.026s)
    Model enumeration time:              0.102s
    Time for BDD construction:           0.072s (Max:     0.008s)
Time for merge operator:                 0.594s
Time for coverage check:                 0.106s
  Time for BDD entailment checks:        0.094s
Total time for SMT solver (w/o itp):     1.301s

Number of path formula cache hits:   115843 (81%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     6.046s

Total number of created targets for pointer analysis: 19173
   Number of created targets for uf: *(void)* is 3
   Number of created targets for uf: *(struct_sk_buff)* is 21
   Number of created targets for uf: *signed_int is 102
   Number of created targets for uf: *unsigned_char is 1697
   Number of created targets for uf: *char is 9
   Number of created targets for uf: *unsigned_int is 2


Number of BDD nodes:                               208
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         975 (count: 14165, min: 0, max: 122, avg: 0.07)
Time for BDD node cleanup:                             0.030s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.613s
  Time for transition matches:                         0.259s
  Time for transition assertions:                      0.001s
  Time for transition actions:                         0.002s
Automaton transfers with branching:                0
Automaton transfer successors:                       120820 (count: 120820, min: 1, max: 1, avg: 1.00) [1 x 120820]

CPA algorithm statistics
------------------------
Number of iterations:            77379
Max size of waitlist:            61
Average size of waitlist:        21
Number of computed successors:   93239
Max successors for one state:    2
Number of times merged:          9667
Number of times stopped:         13829
Number of times breaked:         47

Total time for CPA algorithm:        23.097s (Max:     1.382s)
  Time for choose from waitlist:      0.181s
  Time for precision adjustment:      9.443s
  Time for transfer relation:        10.432s
  Time for merge operator:            1.065s
  Time for stop operator:             0.428s
  Time for adding to reached set:     0.468s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   47
Avg. length of target path (in blocks):                2105 (count: 47, min: 22, max: 74, avg: 44.79)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   2.057s
  Counterexample analysis:                             1.497s (Max:     0.061s, Calls: 47)
    Refinement sat check:                              1.004s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.015s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.079s
  Precision update:                                    0.072s
  ARG update:                                          0.333s

Length of refined path (in blocks):                    1710 (count: 47, min: 12, max: 73, avg: 36.38)
Number of affected states:                             1493 (count: 47, min: 1, max: 72, avg: 31.77)
Length (states) of path with itp 'true':                170 (count: 47, min: 0, max: 10, avg: 3.62)
Length (states) of path with itp non-trivial itp:      1493 (count: 47, min: 1, max: 72, avg: 31.77)
Length (states) of path with itp 'false':                47 (count: 47, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 47, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:            1446 (count: 47, min: 0, max: 71, avg: 30.77)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                47
Number of successful refinements:     47
Number of failed refinements:         0
Max. size of reached set before ref.: 3948
Max. size of reached set after ref.:  53
Avg. size of reached set before ref.: 1623.36
Avg. size of reached set after ref.:  21.09

Total time for CEGAR algorithm:      25.405s
Time for refinements:                 2.307s
Average time for refinement:          0.049s
Max time for refinement:              0.094s

Code Coverage
-----------------------------
  Function coverage:      0.629
  Visited lines:          1226
  Total lines:            1437
  Line coverage:          0.853
  Visited conditions:     255
  Total conditions:       360
  Condition coverage:     0.708

CPAchecker general statistics
-----------------------------
Number of program locations:     1934
Number of CFA edges:             2111
Number of relevant variables:    308
Number of functions:             70
Number of loops:                 10
Size of reached set:             3743
  Number of reached locations:   627 (32%)
    Avg states per location:     5
    Max states per location:     79 (at node N58)
  Number of reached functions:   44 (63%)
  Number of partitions:          3734
    Avg size of partitions:      1
    Max size of partitions:      4 (with key [N1138 (before line 4280), Function main called from node N1105, stack depth 1 [538613b3], stack [main]])
  Number of target states:       0
  Size of final wait list        32

Time for analysis setup:          4.821s
  Time for loading CPAs:          0.999s
  Time for loading parser:        0.743s
  Time for CFA construction:      2.951s
    Time for parsing file(s):     0.841s
    Time for AST to CFA:          1.013s
    Time for CFA sanity check:    0.176s
    Time for post-processing:     0.713s
      Time for var class.:        0.316s
Time for Analysis:               25.405s
CPU time for analysis:           25.400s
Total time for CPAchecker:       30.230s
Total CPU time for CPAchecker:   30.210s
Time for statistics:              0.223s

Time for Garbage Collector:       0.633s (in 47 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 72MB (    69 MiB) max;     47MB (    45 MiB) avg;     76MB (    73 MiB) peak
Used non-heap memory:             41MB (    39 MiB) max;     36MB (    34 MiB) avg;     41MB (    39 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        42MB (    40 MiB) max;     37MB (    35 MiB) avg
Total process virtual memory:   8086MB (  7712 MiB) max;   8073MB (  7699 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
