scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.16-rc1/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--nfc--st21nfca--st21nfca_i2c.ko-entry_point_true-unreach-call.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_6lt_uq31/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

line 4270: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___3 = ldv_zalloc(32UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_handler1_2 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_handler1_1 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function i2c_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_final_state to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function i2c_del_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_dev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_pr_debug to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function print_hex_dump to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function skb_push to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function crc_ccitt to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function skb_put to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock_nested to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function i2c_master_send to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function msleep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function skb_pull to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function skb_trim to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function nfc_hci_recv_frame to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function kfree_skb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function i2c_master_recv to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 3013: Ignoring function call through function pointer *(adap->algo->functionality): tmp = (*(adap->algo->functionality))(adap); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function __alloc_skb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function st21nfca_hci_remove to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            29820 (13% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  24886 (83%)
  Because of loop head:            4895 (16%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         39 (0%)
  Times precision was empty:       8526 (29%)
  Times precision was {false}:     365 (1%)
  Times result was cached:         20401 (68%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      528 (2%)
  Times result was 'false':        594 (2%)
Number of strengthen sat checks:   0
Number of coverage checks:         47574
  BDD entailment checks:           8268
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       60
Number of predicates discovered:          4
Number of abstraction locations:          55
Max number of predicates per location:    3
Avg number of predicates per location:    1
Total predicates per abstraction:         29542
Max number of predicates per abstraction: 3
Avg number of predicates per abstraction: 33.08
Number of irrelevant predicates:          9591 (32%)
Number of preds handled by boolean abs:   651 (2%)
  Total number of models for allsat:      536
  Max number of models for allsat:        4
  Avg number of models for allsat:        1.02

Time for post operator:                  6.041s
  Time for path formula creation:        5.819s
Time for strengthen operator:            0.356s
Time for prec operator:                  7.724s
  Time for abstraction:                  6.910s (Max:     0.041s, Count: 29820)
    Boolean abstraction:                 0.998s
    Solving time:                        1.269s (Max:     0.038s)
    Model enumeration time:              0.068s
    Time for BDD construction:           0.089s (Max:     0.008s)
Time for merge operator:                 0.553s
Time for coverage check:                 0.041s
  Time for BDD entailment checks:        0.024s
Total time for SMT solver (w/o itp):     1.342s

Number of path formula cache hits:   248242 (89%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     5.083s

Total number of created targets for pointer analysis: 16408
   Number of created targets for uf: *signed_int is 77
   Number of created targets for uf: *unsigned_char is 1669


Number of BDD nodes:                               220
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        1083 (count: 21806, min: 0, max: 110, avg: 0.05)
Time for BDD node cleanup:                             0.020s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.830s
  Time for transition matches:                         0.406s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.000s
Automaton transfers with branching:                0
Automaton transfer successors:                       234999 (count: 234999, min: 1, max: 1, avg: 1.00) [1 x 234999]

CPA algorithm statistics
------------------------
Number of iterations:            140508
Max size of waitlist:            195
Average size of waitlist:        92
Number of computed successors:   171930
Max successors for one state:    2
Number of times merged:          19653
Number of times stopped:         26107
Number of times breaked:         39

Total time for CPA algorithm:        23.792s (Max:     1.728s)
  Time for choose from waitlist:      0.234s
  Time for precision adjustment:      9.814s
  Time for transfer relation:        10.483s
  Time for merge operator:            1.109s
  Time for stop operator:             0.450s
  Time for adding to reached set:     0.503s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   39
Avg. length of target path (in blocks):                1231 (count: 39, min: 22, max: 46, avg: 31.56)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   1.548s
  Counterexample analysis:                             0.823s (Max:     0.039s, Calls: 39)
    Refinement sat check:                              0.579s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.028s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.067s
  Precision update:                                    0.055s
  ARG update:                                          0.553s

Length of refined path (in blocks):                     918 (count: 39, min: 12, max: 39, avg: 23.54)
Number of affected states:                              689 (count: 39, min: 1, max: 38, avg: 17.67)
Length (states) of path with itp 'true':                190 (count: 39, min: 0, max: 10, avg: 4.87)
Length (states) of path with itp non-trivial itp:       689 (count: 39, min: 1, max: 38, avg: 17.67)
Length (states) of path with itp 'false':                39 (count: 39, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 39, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:             650 (count: 39, min: 0, max: 37, avg: 16.67)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                39
Number of successful refinements:     39
Number of failed refinements:         0
Max. size of reached set before ref.: 7014
Max. size of reached set after ref.:  53
Avg. size of reached set before ref.: 3749.38
Avg. size of reached set after ref.:  27.36

Total time for CEGAR algorithm:      25.581s
Time for refinements:                 1.785s
Average time for refinement:          0.045s
Max time for refinement:              0.120s

Code Coverage
-----------------------------
  Function coverage:      0.043
  Visited lines:          619
  Total lines:            1437
  Line coverage:          0.431
  Visited conditions:     16
  Total conditions:       360
  Condition coverage:     0.044

CPAchecker general statistics
-----------------------------
Number of program locations:     1934
Number of CFA edges:             2111
Number of relevant variables:    308
Number of functions:             70
Number of loops:                 10
Size of reached set:             70
  Number of reached locations:   38 (2%)
    Avg states per location:     1
    Max states per location:     5 (at node N15)
  Number of reached functions:   3 (4%)
  Number of partitions:          70
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0
  Size of final wait list        7

Time for analysis setup:          4.687s
  Time for loading CPAs:          0.901s
  Time for loading parser:        0.740s
  Time for CFA construction:      2.883s
    Time for parsing file(s):     0.852s
    Time for AST to CFA:          0.955s
    Time for CFA sanity check:    0.171s
    Time for post-processing:     0.704s
      Time for var class.:        0.326s
Time for Analysis:               25.581s
CPU time for analysis:           25.580s
Total time for CPAchecker:       30.277s
Total CPU time for CPAchecker:   30.270s
Time for statistics:              0.071s

Time for Garbage Collector:       0.890s (in 71 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 78MB (    74 MiB) max;     48MB (    45 MiB) avg;     82MB (    79 MiB) peak
Used non-heap memory:             39MB (    37 MiB) max;     35MB (    33 MiB) avg;     39MB (    37 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        41MB (    39 MiB) max;     36MB (    35 MiB) avg
Total process virtual memory:   8084MB (  7710 MiB) max;   8073MB (  7699 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
