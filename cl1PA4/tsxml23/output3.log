scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.16-rc1/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--usb--misc--usbtest.ko-entry_point_true-unreach-call.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_3vdaoy9u/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_reset_resume_1 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_pr_debug to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_deregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_final_state to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _dev_info to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_dev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock_interruptible_nested to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function do_gettimeofday to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_get_descriptor to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_set_interface to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_control_msg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_get_status to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_warn to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __init_waitqueue_head to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_alloc_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_submit_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function msleep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_kill_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function wait_for_completion to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function completion_done to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_unlink_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_free_coherent to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_free_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_alloc_coherent to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_clear_halt to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function msecs_to_jiffies to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function wait_for_completion_timeout to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            16207 (15% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  13776 (85%)
  Because of loop head:            2393 (15%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         38 (0%)
  Times precision was empty:       6329 (39%)
  Times precision was {false}:     480 (3%)
  Times result was cached:         9117 (56%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      281 (2%)
  Times result was 'false':        546 (3%)
Number of strengthen sat checks:   0
Number of coverage checks:         20593
  BDD entailment checks:           3705
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       42
Number of predicates discovered:          6
Number of abstraction locations:          96
Max number of predicates per location:    3
Avg number of predicates per location:    1
Total predicates per abstraction:         10596
Max number of predicates per abstraction: 3
Avg number of predicates per abstraction: 13.92
Number of irrelevant predicates:          4105 (39%)
Number of preds handled by boolean abs:   320 (3%)
  Total number of models for allsat:      310
  Max number of models for allsat:        4
  Avg number of models for allsat:        1.10

Time for post operator:                  7.349s
  Time for path formula creation:        7.094s
Time for strengthen operator:            0.240s
Time for prec operator:                  5.251s
  Time for abstraction:                  4.623s (Max:     0.023s, Count: 16207)
    Boolean abstraction:                 0.583s
    Solving time:                        0.930s (Max:     0.017s)
    Model enumeration time:              0.038s
    Time for BDD construction:           0.048s (Max:     0.009s)
Time for merge operator:                 0.763s
Time for coverage check:                 0.083s
  Time for BDD entailment checks:        0.053s
Total time for SMT solver (w/o itp):     0.968s

Number of path formula cache hits:   101258 (78%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     6.330s

Total number of created targets for pointer analysis: 1812
   Number of created targets for uf: *(void)* is 17
   Number of created targets for uf: *unsigned_short_int is 67
   Number of created targets for uf: *signed_long_int is 81
   Number of created targets for uf: *unsigned_int is 128


Number of BDD nodes:                               236
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         612 (count: 14169, min: 0, max: 114, avg: 0.04)
Time for BDD node cleanup:                             0.007s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.808s
  Time for transition matches:                         0.300s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.000s
Automaton transfers with branching:                0
Automaton transfer successors:                       110786 (count: 110786, min: 1, max: 1, avg: 1.00) [1 x 110786]

CPA algorithm statistics
------------------------
Number of iterations:            73191
Max size of waitlist:            62
Average size of waitlist:        32
Number of computed successors:   86644
Max successors for one state:    2
Number of times merged:          8444
Number of times stopped:         11574
Number of times breaked:         38

Total time for CPA algorithm:        21.883s (Max:     2.423s)
  Time for choose from waitlist:      0.197s
  Time for precision adjustment:      6.951s
  Time for transfer relation:        11.038s
  Time for merge operator:            1.337s
  Time for stop operator:             0.481s
  Time for adding to reached set:     0.502s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   38
Avg. length of target path (in blocks):                2311 (count: 38, min: 35, max: 79, avg: 60.82)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   2.178s
  Counterexample analysis:                             1.540s (Max:     0.060s, Calls: 38)
    Refinement sat check:                              0.954s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.001s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.103s
  Precision update:                                    0.046s
  ARG update:                                          0.412s

Length of refined path (in blocks):                    2073 (count: 38, min: 6, max: 78, avg: 54.55)
Number of affected states:                             1622 (count: 38, min: 1, max: 77, avg: 42.68)
Length (states) of path with itp 'true':                413 (count: 38, min: 0, max: 49, avg: 10.87)
Length (states) of path with itp non-trivial itp:      1622 (count: 38, min: 1, max: 77, avg: 42.68)
Length (states) of path with itp 'false':                38 (count: 38, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:          18 (count: 38, min: 0, max: 2, avg: 0.47)
Equal non-trivial interpolants along paths:            1566 (count: 38, min: 0, max: 76, avg: 41.21)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                38
Number of successful refinements:     38
Number of failed refinements:         0
Max. size of reached set before ref.: 3638
Max. size of reached set after ref.:  3121
Avg. size of reached set before ref.: 2610.61
Avg. size of reached set after ref.:  744.11

Total time for CEGAR algorithm:      24.317s
Time for refinements:                 2.399s
Average time for refinement:          0.063s
Max time for refinement:              0.145s

Code Coverage
-----------------------------
  Function coverage:      0.509
  Visited lines:          1678
  Total lines:            2819
  Line coverage:          0.595
  Visited conditions:     514
  Total conditions:       936
  Condition coverage:     0.549

CPAchecker general statistics
-----------------------------
Number of program locations:     3934
Number of CFA edges:             4519
Number of relevant variables:    657
Number of functions:             114
Number of loops:                 44
Size of reached set:             3598
  Number of reached locations:   1120 (28%)
    Avg states per location:     3
    Max states per location:     31 (at node N3523)
  Number of reached functions:   58 (51%)
  Number of partitions:          3586
    Avg size of partitions:      1
    Max size of partitions:      3 (with key [N3223 (before line 7230), Function main called from node N3200, stack depth 1 [b25b095], stack [main]])
  Number of target states:       0
  Size of final wait list        50

Time for analysis setup:          5.948s
  Time for loading CPAs:          1.051s
  Time for loading parser:        0.731s
  Time for CFA construction:      3.982s
    Time for parsing file(s):     1.030s
    Time for AST to CFA:          1.292s
    Time for CFA sanity check:    0.373s
    Time for post-processing:     1.118s
      Time for var class.:        0.525s
Time for Analysis:               24.317s
CPU time for analysis:           24.320s
Total time for CPAchecker:       30.274s
Total CPU time for CPAchecker:   30.270s
Time for statistics:              0.177s

Time for Garbage Collector:       0.624s (in 40 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 78MB (    74 MiB) max;     50MB (    47 MiB) avg;     81MB (    78 MiB) peak
Used non-heap memory:             40MB (    38 MiB) max;     35MB (    33 MiB) avg;     40MB (    38 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        42MB (    40 MiB) max;     37MB (    35 MiB) avg
Total process virtual memory:   8086MB (  7711 MiB) max;   8072MB (  7698 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
