scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.16-rc1/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--usb--misc--usbtest.ko-entry_point_true-unreach-call.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_531pdnaq/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_reset_resume_1 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_deregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_pr_debug to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_dev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _dev_info to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock_interruptible_nested to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function do_gettimeofday to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_final_state to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __mutex_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_set_interface to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_warn to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_alloc_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_alloc_coherent to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_free_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __init_waitqueue_head to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_submit_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function msecs_to_jiffies to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function wait_for_completion_timeout to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_kill_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_free_coherent to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sg_init_table to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __virt_addr_valid to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __phys_addr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_control_msg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __raw_spin_lock_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            21116 (16% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  17670 (84%)
  Because of loop head:            3407 (16%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         39 (0%)
  Times precision was empty:       9030 (43%)
  Times precision was {false}:     236 (1%)
  Times result was cached:         11249 (53%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      601 (3%)
  Times result was 'false':        1230 (6%)
Number of strengthen sat checks:   0
Number of coverage checks:         23924
  BDD entailment checks:           4912
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       42
Number of predicates discovered:          13
Number of abstraction locations:          101
Max number of predicates per location:    7
Avg number of predicates per location:    1
Total predicates per abstraction:         19612
Max number of predicates per abstraction: 7
Avg number of predicates per abstraction: 23.43
Number of irrelevant predicates:          6451 (33%)
Number of preds handled by boolean abs:   1244 (6%)
  Total number of models for allsat:      673
  Max number of models for allsat:        8
  Avg number of models for allsat:        1.12

Time for post operator:                  6.620s
  Time for path formula creation:        6.445s
Time for strengthen operator:            0.350s
Time for prec operator:                  6.941s
  Time for abstraction:                  6.223s (Max:     0.031s, Count: 21116)
    Boolean abstraction:                 1.216s
    Solving time:                        0.963s (Max:     0.018s)
    Model enumeration time:              0.124s
    Time for BDD construction:           0.099s (Max:     0.010s)
Time for merge operator:                 0.459s
Time for coverage check:                 0.068s
  Time for BDD entailment checks:        0.057s
Total time for SMT solver (w/o itp):     1.087s

Number of path formula cache hits:   122983 (81%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     5.516s

Total number of created targets for pointer analysis: 2513
   Number of created targets for uf: *(void)* is 33
   Number of created targets for uf: *(struct_urb)* is 161
   Number of created targets for uf: *signed_long_int is 11
   Number of created targets for uf: *unsigned_int is 29
   Number of created targets for uf: *unsigned_long_int is 193


Number of BDD nodes:                               515
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        1359 (count: 18977, min: 0, max: 205, avg: 0.07)
Time for BDD node cleanup:                             0.013s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.602s
  Time for transition matches:                         0.301s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.002s
Automaton transfers with branching:                0
Automaton transfer successors:                       129168 (count: 129168, min: 1, max: 1, avg: 1.00) [1 x 129168]

CPA algorithm statistics
------------------------
Number of iterations:            89821
Max size of waitlist:            44
Average size of waitlist:        25
Number of computed successors:   105379
Max successors for one state:    2
Number of times merged:          9506
Number of times stopped:         13349
Number of times breaked:         39

Total time for CPA algorithm:        21.869s (Max:     1.789s)
  Time for choose from waitlist:      0.185s
  Time for precision adjustment:      8.595s
  Time for transfer relation:        10.335s
  Time for merge operator:            0.824s
  Time for stop operator:             0.442s
  Time for adding to reached set:     0.414s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   39
Avg. length of target path (in blocks):                1514 (count: 39, min: 12, max: 61, avg: 38.82)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   1.796s
  Counterexample analysis:                             1.169s (Max:     0.055s, Calls: 39)
    Refinement sat check:                              0.769s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.001s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.063s
  Precision update:                                    0.073s
  ARG update:                                          0.435s

Length of refined path (in blocks):                    1111 (count: 39, min: 6, max: 56, avg: 28.49)
Number of affected states:                              967 (count: 39, min: 1, max: 55, avg: 24.79)
Length (states) of path with itp 'true':                105 (count: 39, min: 0, max: 34, avg: 2.69)
Length (states) of path with itp non-trivial itp:       967 (count: 39, min: 1, max: 55, avg: 24.79)
Length (states) of path with itp 'false':                39 (count: 39, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:          13 (count: 39, min: 0, max: 3, avg: 0.33)
Equal non-trivial interpolants along paths:             915 (count: 39, min: 0, max: 54, avg: 23.46)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                39
Number of successful refinements:     39
Number of failed refinements:         0
Max. size of reached set before ref.: 5757
Max. size of reached set after ref.:  1598
Avg. size of reached set before ref.: 2401.85
Avg. size of reached set after ref.:  86.08

Total time for CEGAR algorithm:      23.894s
Time for refinements:                 2.020s
Average time for refinement:          0.051s
Max time for refinement:              0.099s

Code Coverage
-----------------------------
  Function coverage:      0.105
  Visited lines:          824
  Total lines:            2819
  Line coverage:          0.292
  Visited conditions:     80
  Total conditions:       936
  Condition coverage:     0.085

CPAchecker general statistics
-----------------------------
Number of program locations:     3934
Number of CFA edges:             4519
Number of relevant variables:    657
Number of functions:             114
Number of loops:                 44
Size of reached set:             486
  Number of reached locations:   170 (4%)
    Avg states per location:     2
    Max states per location:     9 (at node N129)
  Number of reached functions:   12 (11%)
  Number of partitions:          483
    Avg size of partitions:      1
    Max size of partitions:      3 (with key [N3223 (before line 7230), Function main called from node N3200, stack depth 1 [59c33386], stack [main]])
  Number of target states:       0

Time for analysis setup:          5.745s
  Time for loading CPAs:          0.924s
  Time for loading parser:        0.669s
  Time for CFA construction:      4.005s
    Time for parsing file(s):     1.102s
    Time for AST to CFA:          1.302s
    Time for CFA sanity check:    0.334s
    Time for post-processing:     1.076s
      Time for var class.:        0.535s
Time for Analysis:               23.895s
CPU time for analysis:           23.900s
Time for analyzing result:        0.009s
Total time for CPAchecker:       29.653s
Total CPU time for CPAchecker:   29.640s
Time for statistics:              0.125s

Time for Garbage Collector:       0.706s (in 47 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 82MB (    78 MiB) max;     49MB (    46 MiB) avg;     84MB (    80 MiB) peak
Used non-heap memory:             40MB (    38 MiB) max;     35MB (    33 MiB) avg;     40MB (    38 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        41MB (    39 MiB) max;     36MB (    35 MiB) avg
Total process virtual memory:   8086MB (  7712 MiB) max;   8073MB (  7699 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
