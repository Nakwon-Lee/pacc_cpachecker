scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.16-rc1/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--usb--misc--usbtest.ko-entry_point_true-unreach-call.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run__g5n317y/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_reset_resume_1 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _dev_info to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_deregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_final_state to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_pr_debug to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __mutex_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_set_interface to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_warn to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock_interruptible_nested to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function do_gettimeofday to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __init_waitqueue_head to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_alloc_coherent to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 3752: Destroying the void* pointer kmalloc_array::tmp produces garbage or the memory pointed by it is unused: tmp = kmalloc_array(n, size, flags | 32768U); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function usb_free_coherent to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_alloc_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_free_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_dev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_unlink_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_submit_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function complete to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function wait_for_completion to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_get_status to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_control_msg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_clear_halt to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function msecs_to_jiffies to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function wait_for_completion_timeout to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_kill_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function msleep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function completion_done to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_get_descriptor to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sg_init_table to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __virt_addr_valid to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __phys_addr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_sg_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_sg_wait to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __raw_spin_lock_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            1930657 (15% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  1502621 (78%)
  Because of loop head:            427792 (22%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         244 (0%)
  Times precision was empty:       135642 (7%)
  Times precision was {false}:     3105 (0%)
  Times result was cached:         1781512 (92%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      10398 (1%)
  Times result was 'false':        87311 (5%)
Number of strengthen sat checks:   0
Number of coverage checks:         2473755
  BDD entailment checks:           644939
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       42
Number of predicates discovered:          25
Number of abstraction locations:          299
Max number of predicates per location:    10
Avg number of predicates per location:    2
Total predicates per abstraction:         3899839
Max number of predicates per abstraction: 10
Avg number of predicates per abstraction: 288.81
Number of irrelevant predicates:          1473494 (38%)
Number of preds handled by boolean abs:   14920 (0%)
  Total number of models for allsat:      12215
  Max number of models for allsat:        7
  Avg number of models for allsat:        1.17

Time for post operator:                192.267s
  Time for path formula creation:      185.889s
Time for strengthen operator:           10.994s
Time for prec operator:                279.570s
  Time for abstraction:                254.830s (Max:     1.442s, Count: 1930657)
    Boolean abstraction:                16.472s
    Solving time:                       18.632s (Max:     0.046s)
    Model enumeration time:              1.754s
    Time for BDD construction:           0.257s (Max:     0.009s)
Time for merge operator:                14.856s
Time for coverage check:                 0.861s
  Time for BDD entailment checks:        0.595s
Total time for SMT solver (w/o itp):    20.386s

Number of path formula cache hits:   12411021 (81%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:   146.768s

Total number of created targets for pointer analysis: 249057
   Number of created targets for uf: *(void)* is 22
   Number of created targets for uf: *unsigned_short_int is 9666
   Number of created targets for uf: *((struct_urb)*)* is 29
   Number of created targets for uf: *signed_int is 41
   Number of created targets for uf: *(struct_urb)* is 281
   Number of created targets for uf: *signed_long_int is 6691
   Number of created targets for uf: *unsigned_int is 4827
   Number of created targets for uf: *unsigned_long_int is 18393


Number of BDD nodes:                               935
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       21457 (count: 860311, min: 0, max: 1348, avg: 0.02)
Time for BDD node cleanup:                             0.138s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                 20.323s
  Time for transition matches:                        12.169s
  Time for transition assertions:                      0.004s
  Time for transition actions:                         0.013s
Automaton transfers with branching:                0
Automaton transfer successors:                     13268108 (count: 13268108, min: 1, max: 1, avg: 1.00) [1 x 13268108]

CPA algorithm statistics
------------------------
Number of iterations:            8970410
Max size of waitlist:            258
Average size of waitlist:        114
Number of computed successors:   10510490
Max successors for one state:    2
Number of times merged:          914408
Number of times stopped:         1418416
Number of times breaked:         244

Total time for CPA algorithm:       764.088s (Max:    12.462s)
  Time for choose from waitlist:      3.826s
  Time for precision adjustment:    355.580s
  Time for transfer relation:       326.084s
  Time for merge operator:           25.290s
  Time for stop operator:            11.971s
  Time for adding to reached set:    15.945s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   244
Avg. length of target path (in blocks):               18652 (count: 244, min: 31, max: 122, avg: 76.44)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  32.172s
  Counterexample analysis:                             7.546s (Max:     0.088s, Calls: 244)
    Refinement sat check:                              4.923s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.008s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.197s
  Precision update:                                    0.274s
  ARG update:                                         23.941s

Length of refined path (in blocks):                   12939 (count: 244, min: 6, max: 110, avg: 53.03)
Number of affected states:                            11880 (count: 244, min: 1, max: 88, avg: 48.69)
Length (states) of path with itp 'true':                815 (count: 244, min: 0, max: 62, avg: 3.34)
Length (states) of path with itp non-trivial itp:     11880 (count: 244, min: 1, max: 88, avg: 48.69)
Length (states) of path with itp 'false':               244 (count: 244, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:          35 (count: 244, min: 0, max: 4, avg: 0.14)
Equal non-trivial interpolants along paths:           11601 (count: 244, min: 0, max: 87, avg: 47.55)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                244
Number of successful refinements:     244
Number of failed refinements:         0
Max. size of reached set before ref.: 94808
Max. size of reached set after ref.:  29953
Avg. size of reached set before ref.: 37598.00
Avg. size of reached set after ref.:  695.26

Total time for CEGAR algorithm:     802.581s
Time for refinements:                38.294s
Average time for refinement:          0.156s
Max time for refinement:              0.643s

Code Coverage
-----------------------------
  Function coverage:      0.105
  Visited lines:          824
  Total lines:            2819
  Line coverage:          0.292
  Visited conditions:     80
  Total conditions:       936
  Condition coverage:     0.085

CPAchecker general statistics
-----------------------------
Number of program locations:     3934
Number of CFA edges:             4519
Number of relevant variables:    657
Number of functions:             114
Number of loops:                 44
Size of reached set:             495
  Number of reached locations:   170 (4%)
    Avg states per location:     2
    Max states per location:     9 (at node N129)
  Number of reached functions:   12 (11%)
  Number of partitions:          491
    Avg size of partitions:      1
    Max size of partitions:      3 (with key [N3223 (before line 7230), Function main called from node N3200, stack depth 1 [10ef5fa0], stack [main]])
  Number of target states:       0

Time for analysis setup:          5.996s
  Time for loading CPAs:          1.017s
  Time for loading parser:        0.693s
  Time for CFA construction:      4.170s
    Time for parsing file(s):     1.080s
    Time for AST to CFA:          1.437s
    Time for CFA sanity check:    0.338s
    Time for post-processing:     1.111s
      Time for var class.:        0.529s
Time for Analysis:              802.581s
CPU time for analysis:          802.520s
Time for analyzing result:        0.001s
Total time for CPAchecker:      808.581s
Total CPU time for CPAchecker:  808.510s
Time for statistics:              0.085s

Time for Garbage Collector:      90.054s (in 903 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:               1884MB (  1796 MiB) max;    847MB (   807 MiB) avg;   1915MB (  1827 MiB) peak
Used non-heap memory:             40MB (    38 MiB) max;     40MB (    38 MiB) avg;     41MB (    39 MiB) peak
Allocated heap memory:          2191MB (  2089 MiB) max;   1275MB (  1216 MiB) avg
Allocated non-heap memory:        43MB (    41 MiB) max;     43MB (    41 MiB) avg
Total process virtual memory:   8222MB (  7842 MiB) max;   8131MB (  7754 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
