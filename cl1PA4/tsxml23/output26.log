scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.16-rc1/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--usb--misc--usbtest.ko-entry_point_true-unreach-call.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_i73u7lyr/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_reset_resume_1 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_deregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_pr_debug to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _dev_info to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_final_state to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock_interruptible_nested to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function do_gettimeofday to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __init_waitqueue_head to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_dev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_set_interface to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sg_init_table to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __mutex_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __raw_spin_lock_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_get_descriptor to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_alloc_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_warn to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_get_status to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_control_msg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_sg_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_sg_wait to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __virt_addr_valid to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            33414 (15% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  30424 (91%)
  Because of loop head:            2963 (9%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         27 (0%)
  Times precision was empty:       16772 (50%)
  Times precision was {false}:     218 (1%)
  Times result was cached:         16214 (49%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      210 (1%)
  Times result was 'false':        1109 (3%)
Number of strengthen sat checks:   0
Number of coverage checks:         37562
  BDD entailment checks:           6338
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       42
Number of predicates discovered:          4
Number of abstraction locations:          58
Max number of predicates per location:    3
Avg number of predicates per location:    1
Total predicates per abstraction:         18571
Max number of predicates per abstraction: 3
Avg number of predicates per abstraction: 43.39
Number of irrelevant predicates:          8952 (48%)
Number of preds handled by boolean abs:   249 (1%)
  Total number of models for allsat:      229
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.09

Time for post operator:                  5.273s
  Time for path formula creation:        5.030s
Time for strengthen operator:            0.358s
Time for prec operator:                  5.926s
  Time for abstraction:                  4.970s (Max:     0.044s, Count: 33414)
    Boolean abstraction:                 0.644s
    Solving time:                        0.627s (Max:     0.039s)
    Model enumeration time:              0.075s
    Time for BDD construction:           0.040s (Max:     0.010s)
Time for merge operator:                 0.396s
Time for coverage check:                 0.055s
  Time for BDD entailment checks:        0.036s
Total time for SMT solver (w/o itp):     0.702s

Number of path formula cache hits:   247595 (94%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     3.955s

Total number of created targets for pointer analysis: 662
   Number of created targets for uf: *(void)* is 9
   Number of created targets for uf: *signed_int is 2
   Number of created targets for uf: *signed_long_int is 103
   Number of created targets for uf: *unsigned_int is 41
   Number of created targets for uf: *unsigned_long_int is 71


Number of BDD nodes:                               215
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         444 (count: 25578, min: 0, max: 66, avg: 0.02)
Time for BDD node cleanup:                             0.012s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.772s
  Time for transition matches:                         0.421s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.001s
Automaton transfers with branching:                0
Automaton transfer successors:                       220291 (count: 220291, min: 1, max: 1, avg: 1.00) [1 x 220291]

CPA algorithm statistics
------------------------
Number of iterations:            131019
Max size of waitlist:            325
Average size of waitlist:        152
Number of computed successors:   157057
Max successors for one state:    2
Number of times merged:          15612
Number of times stopped:         20355
Number of times breaked:         27

Total time for CPA algorithm:        22.518s (Max:     2.004s)
  Time for choose from waitlist:      0.312s
  Time for precision adjustment:      8.243s
  Time for transfer relation:        10.313s
  Time for merge operator:            0.995s
  Time for stop operator:             0.563s
  Time for adding to reached set:     0.663s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   27
Avg. length of target path (in blocks):                 741 (count: 27, min: 12, max: 34, avg: 27.44)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   1.291s
  Counterexample analysis:                             0.566s (Max:     0.036s, Calls: 27)
    Refinement sat check:                              0.388s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.001s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.080s
  Precision update:                                    0.026s
  ARG update:                                          0.588s

Length of refined path (in blocks):                     633 (count: 27, min: 6, max: 33, avg: 23.44)
Number of affected states:                              586 (count: 27, min: 1, max: 32, avg: 21.70)
Length (states) of path with itp 'true':                 20 (count: 27, min: 0, max: 4, avg: 0.74)
Length (states) of path with itp non-trivial itp:       586 (count: 27, min: 1, max: 32, avg: 21.70)
Length (states) of path with itp 'false':                27 (count: 27, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 27, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:             559 (count: 27, min: 0, max: 31, avg: 20.70)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                27
Number of successful refinements:     27
Number of failed refinements:         0
Max. size of reached set before ref.: 9746
Max. size of reached set after ref.:  23
Avg. size of reached set before ref.: 4758.44
Avg. size of reached set after ref.:  6.70

Total time for CEGAR algorithm:      24.055s
Time for refinements:                 1.536s
Average time for refinement:          0.056s
Max time for refinement:              0.106s

Code Coverage
-----------------------------
  Function coverage:      0.456
  Visited lines:          1598
  Total lines:            2819
  Line coverage:          0.567
  Visited conditions:     452
  Total conditions:       936
  Condition coverage:     0.483

CPAchecker general statistics
-----------------------------
Number of program locations:     3934
Number of CFA edges:             4519
Number of relevant variables:    657
Number of functions:             114
Number of loops:                 44
Size of reached set:             7296
  Number of reached locations:   958 (24%)
    Avg states per location:     7
    Max states per location:     99 (at node N275)
  Number of reached functions:   52 (46%)
  Number of partitions:          7283
    Avg size of partitions:      1
    Max size of partitions:      5 (with key [N3223 (before line 7230), Function main called from node N3200, stack depth 1 [10ef5fa0], stack [main]])
  Number of target states:       0
  Size of final wait list        245

Time for analysis setup:          6.200s
  Time for loading CPAs:          1.049s
  Time for loading parser:        0.735s
  Time for CFA construction:      4.285s
    Time for parsing file(s):     1.134s
    Time for AST to CFA:          1.432s
    Time for CFA sanity check:    0.351s
    Time for post-processing:     1.172s
      Time for var class.:        0.576s
Time for Analysis:               24.055s
CPU time for analysis:           24.040s
Total time for CPAchecker:       30.259s
Total CPU time for CPAchecker:   30.240s
Time for statistics:              0.251s

Time for Garbage Collector:       0.998s (in 61 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 94MB (    90 MiB) max;     52MB (    49 MiB) avg;    101MB (    96 MiB) peak
Used non-heap memory:             40MB (    38 MiB) max;     35MB (    33 MiB) avg;     40MB (    38 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        42MB (    40 MiB) max;     36MB (    35 MiB) avg
Total process virtual memory:   8086MB (  7712 MiB) max;   8072MB (  7698 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
