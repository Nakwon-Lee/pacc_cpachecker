scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.16-rc1/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--usb--misc--usbtest.ko-entry_point_true-unreach-call.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_ufvx063j/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_reset_resume_1 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_deregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_pr_debug to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _dev_info to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_final_state to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock_interruptible_nested to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function do_gettimeofday to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __init_waitqueue_head to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_dev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_set_interface to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sg_init_table to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __mutex_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __raw_spin_lock_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_get_descriptor to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_alloc_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_warn to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_get_status to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_control_msg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_sg_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_sg_wait to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __virt_addr_valid to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            39053 (15% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  35584 (91%)
  Because of loop head:            3439 (9%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         30 (0%)
  Times precision was empty:       19272 (49%)
  Times precision was {false}:     219 (1%)
  Times result was cached:         19351 (50%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      211 (1%)
  Times result was 'false':        1345 (3%)
Number of strengthen sat checks:   0
Number of coverage checks:         43149
  BDD entailment checks:           7349
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       42
Number of predicates discovered:          4
Number of abstraction locations:          61
Max number of predicates per location:    3
Avg number of predicates per location:    1
Total predicates per abstraction:         21959
Max number of predicates per abstraction: 3
Avg number of predicates per abstraction: 51.07
Number of irrelevant predicates:          10366 (47%)
Number of preds handled by boolean abs:   250 (1%)
  Total number of models for allsat:      230
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.09

Time for post operator:                  5.512s
  Time for path formula creation:        5.224s
Time for strengthen operator:            0.517s
Time for prec operator:                  5.695s
  Time for abstraction:                  4.866s (Max:     0.059s, Count: 39053)
    Boolean abstraction:                 0.726s
    Solving time:                        0.728s (Max:     0.043s)
    Model enumeration time:              0.075s
    Time for BDD construction:           0.050s (Max:     0.013s)
Time for merge operator:                 0.444s
Time for coverage check:                 0.049s
  Time for BDD entailment checks:        0.033s
Total time for SMT solver (w/o itp):     0.803s

Number of path formula cache hits:   289767 (94%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     4.057s

Total number of created targets for pointer analysis: 666
   Number of created targets for uf: *(void)* is 9
   Number of created targets for uf: *signed_int is 2
   Number of created targets for uf: *signed_long_int is 105
   Number of created targets for uf: *unsigned_int is 41
   Number of created targets for uf: *unsigned_long_int is 71


Number of BDD nodes:                               215
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         446 (count: 29110, min: 0, max: 66, avg: 0.02)
Time for BDD node cleanup:                             0.007s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.664s
  Time for transition matches:                         0.335s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.000s
Automaton transfers with branching:                0
Automaton transfer successors:                       254889 (count: 254889, min: 1, max: 1, avg: 1.00) [1 x 254889]

CPA algorithm statistics
------------------------
Number of iterations:            152434
Max size of waitlist:            325
Average size of waitlist:        159
Number of computed successors:   182390
Max successors for one state:    2
Number of times merged:          17900
Number of times stopped:         23418
Number of times breaked:         30

Total time for CPA algorithm:        22.349s (Max:     2.015s)
  Time for choose from waitlist:      0.260s
  Time for precision adjustment:      8.217s
  Time for transfer relation:        10.458s
  Time for merge operator:            0.944s
  Time for stop operator:             0.494s
  Time for adding to reached set:     0.628s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   30
Avg. length of target path (in blocks):                 843 (count: 30, min: 12, max: 34, avg: 28.10)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   1.458s
  Counterexample analysis:                             0.601s (Max:     0.032s, Calls: 30)
    Refinement sat check:                              0.428s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.001s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.083s
  Precision update:                                    0.040s
  ARG update:                                          0.703s

Length of refined path (in blocks):                     732 (count: 30, min: 6, max: 33, avg: 24.40)
Number of affected states:                              682 (count: 30, min: 1, max: 32, avg: 22.73)
Length (states) of path with itp 'true':                 20 (count: 30, min: 0, max: 4, avg: 0.67)
Length (states) of path with itp non-trivial itp:       682 (count: 30, min: 1, max: 32, avg: 22.73)
Length (states) of path with itp 'false':                30 (count: 30, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 30, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:             652 (count: 30, min: 0, max: 31, avg: 21.73)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                30
Number of successful refinements:     30
Number of failed refinements:         0
Max. size of reached set before ref.: 9796
Max. size of reached set after ref.:  23
Avg. size of reached set before ref.: 5260.50
Avg. size of reached set after ref.:  6.33

Total time for CEGAR algorithm:      24.151s
Time for refinements:                 1.802s
Average time for refinement:          0.060s
Max time for refinement:              0.164s

Code Coverage
-----------------------------
  Function coverage:      0.009
  Visited lines:          674
  Total lines:            2819
  Line coverage:          0.239
  Visited conditions:     0
  Total conditions:       936
  Condition coverage:     0.000

CPAchecker general statistics
-----------------------------
Number of program locations:     3934
Number of CFA edges:             4519
Number of relevant variables:    657
Number of functions:             114
Number of loops:                 44
Size of reached set:             3
  Number of reached locations:   3 (0%)
    Avg states per location:     1
    Max states per location:     1 (at node N3200)
  Number of reached functions:   1 (1%)
  Number of partitions:          3
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0
  Size of final wait list        1

Time for analysis setup:          6.108s
  Time for loading CPAs:          1.017s
  Time for loading parser:        0.723s
  Time for CFA construction:      4.251s
    Time for parsing file(s):     1.184s
    Time for AST to CFA:          1.432s
    Time for CFA sanity check:    0.311s
    Time for post-processing:     1.086s
      Time for var class.:        0.541s
Time for Analysis:               24.151s
CPU time for analysis:           24.150s
Total time for CPAchecker:       30.264s
Total CPU time for CPAchecker:   30.230s
Time for statistics:              0.087s

Time for Garbage Collector:       1.035s (in 69 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 96MB (    91 MiB) max;     52MB (    49 MiB) avg;    104MB (   100 MiB) peak
Used non-heap memory:             40MB (    38 MiB) max;     35MB (    33 MiB) avg;     40MB (    38 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        41MB (    39 MiB) max;     36MB (    35 MiB) avg
Total process virtual memory:   8086MB (  7712 MiB) max;   8072MB (  7698 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
