scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.16-rc1/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--usb--misc--usbtest.ko-entry_point_true-unreach-call.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_lq6__szr/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_reset_resume_1 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_deregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_pr_debug to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_dev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _dev_info to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock_interruptible_nested to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function do_gettimeofday to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_final_state to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __mutex_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_set_interface to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_warn to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_alloc_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_alloc_coherent to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_free_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __init_waitqueue_head to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_submit_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function msecs_to_jiffies to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function wait_for_completion_timeout to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_kill_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_free_coherent to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sg_init_table to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __virt_addr_valid to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __phys_addr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_control_msg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __raw_spin_lock_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            25128 (17% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  21374 (85%)
  Because of loop head:            3699 (15%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         55 (0%)
  Times precision was empty:       9579 (38%)
  Times precision was {false}:     305 (1%)
  Times result was cached:         14377 (57%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      867 (3%)
  Times result was 'false':        1291 (5%)
Number of strengthen sat checks:   0
Number of coverage checks:         27037
  BDD entailment checks:           6067
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       42
Number of predicates discovered:          17
Number of abstraction locations:          124
Max number of predicates per location:    8
Avg number of predicates per location:    1
Total predicates per abstraction:         26907
Max number of predicates per abstraction: 8
Avg number of predicates per abstraction: 22.96
Number of irrelevant predicates:          10121 (38%)
Number of preds handled by boolean abs:   1715 (6%)
  Total number of models for allsat:      1120
  Max number of models for allsat:        7
  Avg number of models for allsat:        1.29

Time for post operator:                  7.545s
  Time for path formula creation:        7.325s
Time for strengthen operator:            0.333s
Time for prec operator:                  8.514s
  Time for abstraction:                  7.708s (Max:     0.029s, Count: 25128)
    Boolean abstraction:                 1.578s
    Solving time:                        1.292s (Max:     0.022s)
    Model enumeration time:              0.183s
    Time for BDD construction:           0.164s (Max:     0.009s)
Time for merge operator:                 0.622s
Time for coverage check:                 0.063s
  Time for BDD entailment checks:        0.044s
Total time for SMT solver (w/o itp):     1.475s

Number of path formula cache hits:   136794 (79%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     6.441s

Total number of created targets for pointer analysis: 2551
   Number of created targets for uf: *(void)* is 68
   Number of created targets for uf: *(struct_urb)* is 161
   Number of created targets for uf: *signed_long_int is 11
   Number of created targets for uf: *unsigned_int is 25
   Number of created targets for uf: *unsigned_long_int is 193


Number of BDD nodes:                               516
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        1907 (count: 22661, min: 0, max: 197, avg: 0.08)
Time for BDD node cleanup:                             0.017s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.635s
  Time for transition matches:                         0.286s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.009s
Automaton transfers with branching:                0
Automaton transfer successors:                       147687 (count: 147687, min: 1, max: 1, avg: 1.00) [1 x 147687]

CPA algorithm statistics
------------------------
Number of iterations:            103112
Max size of waitlist:            42
Average size of waitlist:        22
Number of computed successors:   120251
Max successors for one state:    2
Number of times merged:          10485
Number of times stopped:         14858
Number of times breaked:         55

Total time for CPA algorithm:        25.920s (Max:     1.969s)
  Time for choose from waitlist:      0.190s
  Time for precision adjustment:     10.641s
  Time for transfer relation:        11.652s
  Time for merge operator:            1.081s
  Time for stop operator:             0.459s
  Time for adding to reached set:     0.553s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   55
Avg. length of target path (in blocks):                2258 (count: 55, min: 12, max: 61, avg: 41.05)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   2.352s
  Counterexample analysis:                             1.534s (Max:     0.056s, Calls: 55)
    Refinement sat check:                              0.999s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.003s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.088s
  Precision update:                                    0.084s
  ARG update:                                          0.601s

Length of refined path (in blocks):                    1821 (count: 55, min: 6, max: 56, avg: 33.11)
Number of affected states:                             1523 (count: 55, min: 1, max: 55, avg: 27.69)
Length (states) of path with itp 'true':                243 (count: 55, min: 0, max: 34, avg: 4.42)
Length (states) of path with itp non-trivial itp:      1523 (count: 55, min: 1, max: 55, avg: 27.69)
Length (states) of path with itp 'false':                55 (count: 55, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:          17 (count: 55, min: 0, max: 3, avg: 0.31)
Equal non-trivial interpolants along paths:            1451 (count: 55, min: 0, max: 54, avg: 26.38)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                55
Number of successful refinements:     55
Number of failed refinements:         0
Max. size of reached set before ref.: 5605
Max. size of reached set after ref.:  1658
Avg. size of reached set before ref.: 2013.13
Avg. size of reached set after ref.:  129.18

Total time for CEGAR algorithm:      28.579s
Time for refinements:                 2.642s
Average time for refinement:          0.048s
Max time for refinement:              0.088s

Code Coverage
-----------------------------
  Function coverage:      0.105
  Visited lines:          824
  Total lines:            2819
  Line coverage:          0.292
  Visited conditions:     80
  Total conditions:       936
  Condition coverage:     0.085

CPAchecker general statistics
-----------------------------
Number of program locations:     3934
Number of CFA edges:             4519
Number of relevant variables:    657
Number of functions:             114
Number of loops:                 44
Size of reached set:             486
  Number of reached locations:   170 (4%)
    Avg states per location:     2
    Max states per location:     9 (at node N129)
  Number of reached functions:   12 (11%)
  Number of partitions:          483
    Avg size of partitions:      1
    Max size of partitions:      3 (with key [N3223 (before line 7230), Function main called from node N3200, stack depth 1 [10ef5fa0], stack [main]])
  Number of target states:       0

Time for analysis setup:          6.504s
  Time for loading CPAs:          1.164s
  Time for loading parser:        0.787s
  Time for CFA construction:      4.436s
    Time for parsing file(s):     1.206s
    Time for AST to CFA:          1.436s
    Time for CFA sanity check:    0.376s
    Time for post-processing:     1.223s
      Time for var class.:        0.560s
Time for Analysis:               28.579s
CPU time for analysis:           28.580s
Time for analyzing result:        0.000s
Total time for CPAchecker:       35.092s
Total CPU time for CPAchecker:   35.070s
Time for statistics:              0.117s

Time for Garbage Collector:       0.799s (in 54 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 80MB (    76 MiB) max;     49MB (    47 MiB) avg;     88MB (    84 MiB) peak
Used non-heap memory:             41MB (    39 MiB) max;     35MB (    34 MiB) avg;     41MB (    39 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        42MB (    40 MiB) max;     37MB (    35 MiB) avg
Total process virtual memory:   8086MB (  7712 MiB) max;   8073MB (  7699 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
