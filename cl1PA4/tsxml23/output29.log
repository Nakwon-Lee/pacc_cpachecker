scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.16-rc1/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--usb--misc--usbtest.ko-entry_point_true-unreach-call.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_wt4dy31g/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_reset_resume_1 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _dev_info to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_deregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_final_state to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_pr_debug to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __mutex_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_set_interface to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_warn to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock_interruptible_nested to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function do_gettimeofday to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __init_waitqueue_head to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_alloc_coherent to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 3752: Destroying the void* pointer kmalloc_array::tmp produces garbage or the memory pointed by it is unused: tmp = kmalloc_array(n, size, flags | 32768U); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function usb_free_coherent to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_alloc_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_free_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_dev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_unlink_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_submit_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function complete to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function wait_for_completion to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_get_status to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_control_msg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_clear_halt to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function msecs_to_jiffies to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function wait_for_completion_timeout to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_kill_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            15115 (15% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  12737 (84%)
  Because of loop head:            2342 (15%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         36 (0%)
  Times precision was empty:       6955 (46%)
  Times precision was {false}:     483 (3%)
  Times result was cached:         7262 (48%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      415 (3%)
  Times result was 'false':        425 (3%)
Number of strengthen sat checks:   0
Number of coverage checks:         17725
  BDD entailment checks:           3639
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       42
Number of predicates discovered:          6
Number of abstraction locations:          107
Max number of predicates per location:    3
Avg number of predicates per location:    1
Total predicates per abstraction:         10227
Max number of predicates per abstraction: 3
Avg number of predicates per abstraction: 11.39
Number of irrelevant predicates:          4356 (43%)
Number of preds handled by boolean abs:   537 (5%)
  Total number of models for allsat:      469
  Max number of models for allsat:        4
  Avg number of models for allsat:        1.13

Time for post operator:                  7.267s
  Time for path formula creation:        7.075s
Time for strengthen operator:            0.191s
Time for prec operator:                  5.962s
  Time for abstraction:                  5.385s (Max:     0.036s, Count: 15115)
    Boolean abstraction:                 1.067s
    Solving time:                        1.295s (Max:     0.035s)
    Model enumeration time:              0.138s
    Time for BDD construction:           0.089s (Max:     0.009s)
Time for merge operator:                 0.485s
Time for coverage check:                 0.052s
  Time for BDD entailment checks:        0.041s
Total time for SMT solver (w/o itp):     1.433s

Number of path formula cache hits:   87866 (76%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     6.476s

Total number of created targets for pointer analysis: 2851
   Number of created targets for uf: *(void)* is 94
   Number of created targets for uf: *unsigned_short_int is 133
   Number of created targets for uf: *signed_long_int is 2
   Number of created targets for uf: *unsigned_int is 74


Number of BDD nodes:                               237
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         845 (count: 15552, min: 0, max: 116, avg: 0.05)
Time for BDD node cleanup:                             0.004s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.603s
  Time for transition matches:                         0.265s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.001s
Automaton transfers with branching:                0
Automaton transfer successors:                        99686 (count: 99686, min: 1, max: 1, avg: 1.00) [1 x 99686]

CPA algorithm statistics
------------------------
Number of iterations:            66053
Max size of waitlist:            87
Average size of waitlist:        41
Number of computed successors:   78236
Max successors for one state:    2
Number of times merged:          7043
Number of times stopped:         9943
Number of times breaked:         36

Total time for CPA algorithm:        21.149s (Max:     2.075s)
  Time for choose from waitlist:      0.160s
  Time for precision adjustment:      7.479s
  Time for transfer relation:        10.648s
  Time for merge operator:            0.877s
  Time for stop operator:             0.439s
  Time for adding to reached set:     0.411s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   36
Avg. length of target path (in blocks):                2352 (count: 36, min: 41, max: 89, avg: 65.33)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   2.247s
  Counterexample analysis:                             1.649s (Max:     0.081s, Calls: 36)
    Refinement sat check:                              1.076s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.001s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.071s
  Precision update:                                    0.054s
  ARG update:                                          0.430s

Length of refined path (in blocks):                    2086 (count: 36, min: 6, max: 88, avg: 57.94)
Number of affected states:                             1637 (count: 36, min: 1, max: 87, avg: 45.47)
Length (states) of path with itp 'true':                413 (count: 36, min: 0, max: 49, avg: 11.47)
Length (states) of path with itp non-trivial itp:      1637 (count: 36, min: 1, max: 87, avg: 45.47)
Length (states) of path with itp 'false':                36 (count: 36, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:          18 (count: 36, min: 0, max: 2, avg: 0.50)
Equal non-trivial interpolants along paths:            1583 (count: 36, min: 0, max: 86, avg: 43.97)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                36
Number of successful refinements:     36
Number of failed refinements:         0
Max. size of reached set before ref.: 6086
Max. size of reached set after ref.:  2046
Avg. size of reached set before ref.: 2237.78
Avg. size of reached set after ref.:  516.53

Total time for CEGAR algorithm:      23.698s
Time for refinements:                 2.516s
Average time for refinement:          0.069s
Max time for refinement:              0.132s

Code Coverage
-----------------------------
  Function coverage:      0.544
  Visited lines:          1553
  Total lines:            2819
  Line coverage:          0.551
  Visited conditions:     420
  Total conditions:       936
  Condition coverage:     0.449

CPAchecker general statistics
-----------------------------
Number of program locations:     3934
Number of CFA edges:             4519
Number of relevant variables:    657
Number of functions:             114
Number of loops:                 44
Size of reached set:             5902
  Number of reached locations:   964 (25%)
    Avg states per location:     6
    Max states per location:     59 (at node N634)
  Number of reached functions:   62 (54%)
  Number of partitions:          5853
    Avg size of partitions:      1
    Max size of partitions:      3 (with key [N3223 (before line 7230), Function main called from node N3200, stack depth 1 [b25b095], stack [main]])
  Number of target states:       0
  Size of final wait list        57

Time for analysis setup:          6.037s
  Time for loading CPAs:          0.996s
  Time for loading parser:        0.757s
  Time for CFA construction:      4.151s
    Time for parsing file(s):     1.147s
    Time for AST to CFA:          1.383s
    Time for CFA sanity check:    0.325s
    Time for post-processing:     1.077s
      Time for var class.:        0.510s
Time for Analysis:               23.698s
CPU time for analysis:           23.700s
Total time for CPAchecker:       29.742s
Total CPU time for CPAchecker:   29.730s
Time for statistics:              0.220s

Time for Garbage Collector:       0.646s (in 38 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 79MB (    75 MiB) max;     49MB (    47 MiB) avg;     81MB (    78 MiB) peak
Used non-heap memory:             41MB (    39 MiB) max;     35MB (    33 MiB) avg;     41MB (    39 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        42MB (    40 MiB) max;     37MB (    35 MiB) avg
Total process virtual memory:   8019MB (  7648 MiB) max;   8006MB (  7636 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
