scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.16-rc1/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--usb--misc--usbtest.ko-entry_point_true-unreach-call.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_n7vt363u/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_reset_resume_1 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_pr_debug to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_deregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_final_state to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _dev_info to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_dev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock_interruptible_nested to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function do_gettimeofday to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_get_descriptor to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_set_interface to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_control_msg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_get_status to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_warn to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __init_waitqueue_head to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_alloc_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_submit_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function msleep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_kill_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function wait_for_completion to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function completion_done to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_unlink_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_free_coherent to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_free_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_alloc_coherent to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_clear_halt to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function msecs_to_jiffies to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function wait_for_completion_timeout to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 3752: Destroying the void* pointer kmalloc_array::tmp produces garbage or the memory pointed by it is unused: tmp = kmalloc_array(n, size, flags | 32768U); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function complete to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __raw_spin_lock_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __mutex_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sg_init_table to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __virt_addr_valid to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __phys_addr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_sg_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_sg_wait to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            377596 (14% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  301058 (80%)
  Because of loop head:            76349 (20%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         189 (0%)
  Times precision was empty:       29588 (8%)
  Times precision was {false}:     2306 (1%)
  Times result was cached:         344013 (91%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      1689 (0%)
  Times result was 'false':        17318 (5%)
Number of strengthen sat checks:   0
Number of coverage checks:         520646
  BDD entailment checks:           125642
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       42
Number of predicates discovered:          25
Number of abstraction locations:          276
Max number of predicates per location:    10
Avg number of predicates per location:    1
Total predicates per abstraction:         525470
Max number of predicates per abstraction: 10
Avg number of predicates per abstraction: 131.53
Number of irrelevant predicates:          156411 (30%)
Number of preds handled by boolean abs:   3073 (1%)
  Total number of models for allsat:      2517
  Max number of models for allsat:        7
  Avg number of models for allsat:        1.49

Time for post operator:                 35.030s
  Time for path formula creation:       33.630s
Time for strengthen operator:            2.434s
Time for prec operator:                 62.880s
  Time for abstraction:                 57.523s (Max:     0.821s, Count: 377596)
    Boolean abstraction:                 2.505s
    Solving time:                        5.987s (Max:     0.055s)
    Model enumeration time:              0.261s
    Time for BDD construction:           0.118s (Max:     0.008s)
Time for merge operator:                 3.103s
Time for coverage check:                 0.256s
  Time for BDD entailment checks:        0.192s
Total time for SMT solver (w/o itp):     6.248s

Number of path formula cache hits:   2865160 (89%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    25.712s

Total number of created targets for pointer analysis: 14776
   Number of created targets for uf: *(void)* is 134
   Number of created targets for uf: *unsigned_short_int is 872
   Number of created targets for uf: *signed_int is 17
   Number of created targets for uf: *(struct_urb)* is 61
   Number of created targets for uf: *signed_long_int is 1047
   Number of created targets for uf: *unsigned_int is 97
   Number of created targets for uf: *unsigned_long_int is 769


Number of BDD nodes:                               880
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        3671 (count: 177783, min: 0, max: 184, avg: 0.02)
Time for BDD node cleanup:                             0.077s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  4.329s
  Time for transition matches:                         2.311s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.002s
Automaton transfers with branching:                0
Automaton transfer successors:                      2726076 (count: 2726076, min: 1, max: 1, avg: 1.00) [1 x 2726076]

CPA algorithm statistics
------------------------
Number of iterations:            1816423
Max size of waitlist:            151
Average size of waitlist:        63
Number of computed successors:   2138604
Max successors for one state:    2
Number of times merged:          197502
Number of times stopped:         293183
Number of times breaked:         189

Total time for CPA algorithm:       165.821s (Max:     4.204s)
  Time for choose from waitlist:      0.970s
  Time for precision adjustment:     81.131s
  Time for transfer relation:        63.928s
  Time for merge operator:            6.288s
  Time for stop operator:             3.032s
  Time for adding to reached set:     3.921s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   189
Avg. length of target path (in blocks):               13997 (count: 189, min: 31, max: 125, avg: 74.06)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  10.655s
  Counterexample analysis:                             5.943s (Max:     0.070s, Calls: 189)
    Refinement sat check:                              3.852s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.009s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.180s
  Precision update:                                    0.143s
  ARG update:                                          4.175s

Length of refined path (in blocks):                   13054 (count: 189, min: 6, max: 124, avg: 69.07)
Number of affected states:                             8578 (count: 189, min: 1, max: 87, avg: 45.39)
Length (states) of path with itp 'true':               4287 (count: 189, min: 0, max: 82, avg: 22.68)
Length (states) of path with itp non-trivial itp:      8578 (count: 189, min: 1, max: 87, avg: 45.39)
Length (states) of path with itp 'false':               189 (count: 189, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:          35 (count: 189, min: 0, max: 4, avg: 0.19)
Equal non-trivial interpolants along paths:            8354 (count: 189, min: 0, max: 86, avg: 44.20)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                189
Number of successful refinements:     189
Number of failed refinements:         0
Max. size of reached set before ref.: 42393
Max. size of reached set after ref.:  40964
Avg. size of reached set before ref.: 19803.83
Avg. size of reached set after ref.:  10133.94

Total time for CEGAR algorithm:     181.964s
Time for refinements:                14.361s
Average time for refinement:          0.075s
Max time for refinement:              0.171s

Code Coverage
-----------------------------
  Function coverage:      0.105
  Visited lines:          824
  Total lines:            2819
  Line coverage:          0.292
  Visited conditions:     80
  Total conditions:       936
  Condition coverage:     0.085

CPAchecker general statistics
-----------------------------
Number of program locations:     3934
Number of CFA edges:             4519
Number of relevant variables:    657
Number of functions:             114
Number of loops:                 44
Size of reached set:             495
  Number of reached locations:   170 (4%)
    Avg states per location:     2
    Max states per location:     9 (at node N129)
  Number of reached functions:   12 (11%)
  Number of partitions:          491
    Avg size of partitions:      1
    Max size of partitions:      3 (with key [N3223 (before line 7230), Function main called from node N3200, stack depth 1 [10ef5fa0], stack [main]])
  Number of target states:       0

Time for analysis setup:          6.103s
  Time for loading CPAs:          1.058s
  Time for loading parser:        0.726s
  Time for CFA construction:      4.142s
    Time for parsing file(s):     1.132s
    Time for AST to CFA:          1.330s
    Time for CFA sanity check:    0.321s
    Time for post-processing:     1.188s
      Time for var class.:        0.554s
Time for Analysis:              181.964s
CPU time for analysis:          181.930s
Time for analyzing result:        0.001s
Total time for CPAchecker:      188.071s
Total CPU time for CPAchecker:  188.020s
Time for statistics:              0.119s

Time for Garbage Collector:      19.034s (in 597 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                299MB (   285 MiB) max;    125MB (   119 MiB) avg;    311MB (   296 MiB) peak
Used non-heap memory:             40MB (    38 MiB) max;     38MB (    37 MiB) avg;     41MB (    39 MiB) peak
Allocated heap memory:           320MB (   305 MiB) max;    193MB (   184 MiB) avg
Allocated non-heap memory:        43MB (    41 MiB) max;     42MB (    40 MiB) avg
Total process virtual memory:   8087MB (  7712 MiB) max;   8082MB (  7708 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
