scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.16-rc1/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--usb--misc--usbtest.ko-entry_point_true-unreach-call.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_sud_8pmw/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_reset_resume_1 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _dev_info to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_deregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_final_state to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_pr_debug to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __mutex_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_warn to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock_interruptible_nested to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function do_gettimeofday to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sg_init_table to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __init_waitqueue_head to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_get_descriptor to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_get_status to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_set_interface to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_dev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __raw_spin_lock_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_control_msg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __virt_addr_valid to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_alloc_coherent to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_sg_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_sg_wait to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_submit_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function wait_for_completion to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __phys_addr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_free_coherent to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_free_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 3752: Destroying the void* pointer kmalloc_array::tmp produces garbage or the memory pointed by it is unused: tmp = kmalloc_array(n, size, flags | 32768U); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function usb_unlink_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function complete to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_alloc_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function msecs_to_jiffies to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function wait_for_completion_timeout to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_kill_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            1592779 (16% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  1406828 (88%)
  Because of loop head:            185607 (12%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         344 (0%)
  Times precision was empty:       347746 (22%)
  Times precision was {false}:     3493 (0%)
  Times result was cached:         1235387 (78%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      6153 (0%)
  Times result was 'false':        26595 (2%)
Number of strengthen sat checks:   0
Number of coverage checks:         1688834
  BDD entailment checks:           403244
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       42
Number of predicates discovered:          17
Number of abstraction locations:          275
Max number of predicates per location:    10
Avg number of predicates per location:    2
Total predicates per abstraction:         2750984
Max number of predicates per abstraction: 10
Avg number of predicates per abstraction: 285.19
Number of irrelevant predicates:          1715713 (62%)
Number of preds handled by boolean abs:   8982 (0%)
  Total number of models for allsat:      6672
  Max number of models for allsat:        7
  Avg number of models for allsat:        1.08

Time for post operator:                121.460s
  Time for path formula creation:      115.980s
Time for strengthen operator:            7.875s
Time for prec operator:                190.682s
  Time for abstraction:                168.808s (Max:     1.284s, Count: 1592779)
    Boolean abstraction:                10.804s
    Solving time:                       16.306s (Max:     0.049s)
    Model enumeration time:              1.082s
    Time for BDD construction:           0.206s (Max:     0.012s)
Time for merge operator:                 8.522s
Time for coverage check:                 0.696s
  Time for BDD entailment checks:        0.506s
Total time for SMT solver (w/o itp):    17.388s

Number of path formula cache hits:   10405935 (88%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    87.388s

Total number of created targets for pointer analysis: 71425
   Number of created targets for uf: *(void)* is 17
   Number of created targets for uf: *((struct_urb)*)* is 7
   Number of created targets for uf: *signed_int is 102
   Number of created targets for uf: *(struct_urb)* is 181
   Number of created targets for uf: *signed_long_int is 12493
   Number of created targets for uf: *unsigned_int is 583
   Number of created targets for uf: *unsigned_long_int is 6361


Number of BDD nodes:                               566
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       12550 (count: 807799, min: 0, max: 472, avg: 0.02)
Time for BDD node cleanup:                             0.148s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                 13.527s
  Time for transition matches:                         7.967s
  Time for transition assertions:                      0.005s
  Time for transition actions:                         0.002s
Automaton transfers with branching:                0
Automaton transfer successors:                      9965713 (count: 9965713, min: 1, max: 1, avg: 1.00) [1 x 9965713]

CPA algorithm statistics
------------------------
Number of iterations:            6267660
Max size of waitlist:            726
Average size of waitlist:        310
Number of computed successors:   7389552
Max successors for one state:    2
Number of times merged:          642795
Number of times stopped:         940077
Number of times breaked:         344

Total time for CPA algorithm:       522.755s (Max:     5.030s)
  Time for choose from waitlist:      3.927s
  Time for precision adjustment:    239.418s
  Time for transfer relation:       217.290s
  Time for merge operator:           18.125s
  Time for stop operator:             9.159s
  Time for adding to reached set:    12.683s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   344
Avg. length of target path (in blocks):               19293 (count: 344, min: 12, max: 83, avg: 56.08)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  21.636s
  Counterexample analysis:                             7.158s (Max:     0.062s, Calls: 344)
    Refinement sat check:                              4.982s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.009s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.142s
  Precision update:                                    0.183s
  ARG update:                                         13.935s

Length of refined path (in blocks):                   15506 (count: 344, min: 6, max: 69, avg: 45.08)
Number of affected states:                             9795 (count: 344, min: 1, max: 68, avg: 28.47)
Length (states) of path with itp 'true':               5367 (count: 344, min: 0, max: 54, avg: 15.60)
Length (states) of path with itp non-trivial itp:      9795 (count: 344, min: 1, max: 68, avg: 28.47)
Length (states) of path with itp 'false':               344 (count: 344, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:          13 (count: 344, min: 0, max: 3, avg: 0.04)
Equal non-trivial interpolants along paths:            9438 (count: 344, min: 0, max: 67, avg: 27.44)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                344
Number of successful refinements:     344
Number of failed refinements:         0
Max. size of reached set before ref.: 36990
Max. size of reached set after ref.:  12192
Avg. size of reached set before ref.: 21991.17
Avg. size of reached set after ref.:  3321.45

Total time for CEGAR algorithm:     550.231s
Time for refinements:                26.651s
Average time for refinement:          0.077s
Max time for refinement:              0.221s

Code Coverage
-----------------------------
  Function coverage:      0.105
  Visited lines:          824
  Total lines:            2819
  Line coverage:          0.292
  Visited conditions:     80
  Total conditions:       936
  Condition coverage:     0.085

CPAchecker general statistics
-----------------------------
Number of program locations:     3934
Number of CFA edges:             4519
Number of relevant variables:    657
Number of functions:             114
Number of loops:                 44
Size of reached set:             495
  Number of reached locations:   170 (4%)
    Avg states per location:     2
    Max states per location:     9 (at node N129)
  Number of reached functions:   12 (11%)
  Number of partitions:          491
    Avg size of partitions:      1
    Max size of partitions:      3 (with key [N3223 (before line 7230), Function main called from node N3200, stack depth 1 [10ef5fa0], stack [main]])
  Number of target states:       0

Time for analysis setup:          6.066s
  Time for loading CPAs:          1.102s
  Time for loading parser:        0.630s
  Time for CFA construction:      4.178s
    Time for parsing file(s):     1.132s
    Time for AST to CFA:          1.384s
    Time for CFA sanity check:    0.348s
    Time for post-processing:     1.135s
      Time for var class.:        0.588s
Time for Analysis:              550.232s
CPU time for analysis:          550.180s
Time for analyzing result:        0.001s
Total time for CPAchecker:      556.308s
Total CPU time for CPAchecker:  556.240s
Time for statistics:              0.095s

Time for Garbage Collector:      42.117s (in 658 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:               1028MB (   980 MiB) max;    488MB (   465 MiB) avg;   1037MB (   989 MiB) peak
Used non-heap memory:             41MB (    39 MiB) max;     40MB (    38 MiB) avg;     42MB (    40 MiB) peak
Allocated heap memory:          1292MB (  1232 MiB) max;    735MB (   701 MiB) avg
Allocated non-heap memory:        43MB (    41 MiB) max;     42MB (    40 MiB) avg
Total process virtual memory:   8154MB (  7777 MiB) max;   8111MB (  7736 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
