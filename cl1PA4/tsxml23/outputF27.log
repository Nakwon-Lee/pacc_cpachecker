scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.16-rc1/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--usb--misc--usbtest.ko-entry_point_true-unreach-call.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_sd0lw3xt/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_reset_resume_1 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_deregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_pr_debug to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _dev_info to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_final_state to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock_interruptible_nested to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function do_gettimeofday to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __init_waitqueue_head to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_dev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_set_interface to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sg_init_table to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __mutex_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __raw_spin_lock_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_get_descriptor to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_alloc_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_warn to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_get_status to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_control_msg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_sg_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_sg_wait to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __virt_addr_valid to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __phys_addr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_alloc_coherent to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_free_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 3752: Destroying the void* pointer kmalloc_array::tmp produces garbage or the memory pointed by it is unused: tmp = kmalloc_array(n, size, flags | 32768U); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function usb_free_coherent to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_submit_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function msecs_to_jiffies to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function wait_for_completion_timeout to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_kill_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_clear_halt to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function msleep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function wait_for_completion to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            704943 (16% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  622130 (88%)
  Because of loop head:            82664 (12%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         149 (0%)
  Times precision was empty:       189972 (27%)
  Times precision was {false}:     948 (0%)
  Times result was cached:         511319 (73%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      2704 (0%)
  Times result was 'false':        28815 (4%)
Number of strengthen sat checks:   0
Number of coverage checks:         740514
  BDD entailment checks:           172888
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       42
Number of predicates discovered:          13
Number of abstraction locations:          192
Max number of predicates per location:    8
Avg number of predicates per location:    1
Total predicates per abstraction:         748937
Max number of predicates per abstraction: 8
Avg number of predicates per abstraction: 205.08
Number of irrelevant predicates:          334439 (45%)
Number of preds handled by boolean abs:   4601 (1%)
  Total number of models for allsat:      3120
  Max number of models for allsat:        7
  Avg number of models for allsat:        1.15

Time for post operator:                 38.006s
  Time for path formula creation:       35.678s
Time for strengthen operator:            4.308s
Time for prec operator:                 78.441s
  Time for abstraction:                 69.379s (Max:     0.913s, Count: 704943)
    Boolean abstraction:                 5.260s
    Solving time:                        5.091s (Max:     0.050s)
    Model enumeration time:              0.532s
    Time for BDD construction:           0.141s (Max:     0.009s)
Time for merge operator:                 2.787s
Time for coverage check:                 0.273s
  Time for BDD entailment checks:        0.196s
Total time for SMT solver (w/o itp):     5.623s

Number of path formula cache hits:   4926247 (94%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    22.731s

Total number of created targets for pointer analysis: 21636
   Number of created targets for uf: *(void)* is 25
   Number of created targets for uf: *unsigned_short_int is 41
   Number of created targets for uf: *signed_int is 9
   Number of created targets for uf: *(struct_urb)* is 431
   Number of created targets for uf: *signed_long_int is 2311
   Number of created targets for uf: *unsigned_int is 641
   Number of created targets for uf: *unsigned_long_int is 385


Number of BDD nodes:                               698
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        5818 (count: 385159, min: 0, max: 219, avg: 0.02)
Time for BDD node cleanup:                             0.091s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  6.416s
  Time for transition matches:                         3.659s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.002s
Automaton transfers with branching:                0
Automaton transfer successors:                      4348146 (count: 4348146, min: 1, max: 1, avg: 1.00) [1 x 4348146]

CPA algorithm statistics
------------------------
Number of iterations:            2810631
Max size of waitlist:            963
Average size of waitlist:        365
Number of computed successors:   3296379
Max successors for one state:    2
Number of times merged:          283813
Number of times stopped:         392032
Number of times breaked:         149

Total time for CPA algorithm:       214.989s (Max:     3.562s)
  Time for choose from waitlist:      1.735s
  Time for precision adjustment:    103.007s
  Time for transfer relation:        82.812s
  Time for merge operator:            7.115s
  Time for stop operator:             4.524s
  Time for adding to reached set:     5.719s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   149
Avg. length of target path (in blocks):                6140 (count: 149, min: 12, max: 67, avg: 41.21)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   9.417s
  Counterexample analysis:                             2.666s (Max:     0.036s, Calls: 149)
    Refinement sat check:                              1.870s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.010s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.130s
  Precision update:                                    0.086s
  ARG update:                                          6.418s

Length of refined path (in blocks):                    4981 (count: 149, min: 6, max: 54, avg: 33.43)
Number of affected states:                             4471 (count: 149, min: 1, max: 53, avg: 30.01)
Length (states) of path with itp 'true':                361 (count: 149, min: 0, max: 34, avg: 2.42)
Length (states) of path with itp non-trivial itp:      4471 (count: 149, min: 1, max: 53, avg: 30.01)
Length (states) of path with itp 'false':               149 (count: 149, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:          15 (count: 149, min: 0, max: 3, avg: 0.10)
Equal non-trivial interpolants along paths:            4307 (count: 149, min: 0, max: 52, avg: 28.91)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                149
Number of successful refinements:     149
Number of failed refinements:         0
Max. size of reached set before ref.: 49106
Max. size of reached set after ref.:  25636
Avg. size of reached set before ref.: 20430.46
Avg. size of reached set after ref.:  1134.85

Total time for CEGAR algorithm:     226.650s
Time for refinements:                11.517s
Average time for refinement:          0.077s
Max time for refinement:              0.210s

Code Coverage
-----------------------------
  Function coverage:      0.105
  Visited lines:          824
  Total lines:            2819
  Line coverage:          0.292
  Visited conditions:     80
  Total conditions:       936
  Condition coverage:     0.085

CPAchecker general statistics
-----------------------------
Number of program locations:     3934
Number of CFA edges:             4519
Number of relevant variables:    657
Number of functions:             114
Number of loops:                 44
Size of reached set:             486
  Number of reached locations:   170 (4%)
    Avg states per location:     2
    Max states per location:     9 (at node N129)
  Number of reached functions:   12 (11%)
  Number of partitions:          483
    Avg size of partitions:      1
    Max size of partitions:      3 (with key [N3223 (before line 7230), Function main called from node N3200, stack depth 1 [10ef5fa0], stack [main]])
  Number of target states:       0

Time for analysis setup:          6.122s
  Time for loading CPAs:          1.058s
  Time for loading parser:        0.763s
  Time for CFA construction:      4.133s
    Time for parsing file(s):     1.122s
    Time for AST to CFA:          1.317s
    Time for CFA sanity check:    0.341s
    Time for post-processing:     1.135s
      Time for var class.:        0.533s
Time for Analysis:              226.651s
CPU time for analysis:          226.620s
Time for analyzing result:        0.000s
Total time for CPAchecker:      232.778s
Total CPU time for CPAchecker:  232.740s
Time for statistics:              0.117s

Time for Garbage Collector:      28.235s (in 858 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                345MB (   329 MiB) max;    133MB (   127 MiB) avg;    368MB (   351 MiB) peak
Used non-heap memory:             40MB (    38 MiB) max;     39MB (    37 MiB) avg;     41MB (    39 MiB) peak
Allocated heap memory:           395MB (   376 MiB) max;    202MB (   193 MiB) avg
Allocated non-heap memory:        42MB (    40 MiB) max;     41MB (    39 MiB) avg
Total process virtual memory:   8083MB (  7709 MiB) max;   8082MB (  7707 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
