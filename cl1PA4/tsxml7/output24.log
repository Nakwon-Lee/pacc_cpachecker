scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.16-rc1/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--scsi--dpt_i2o.ko-entry_point_true-unreach-call.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_py7c_1m2/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 4660: Dead code detected: __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

line 4663: Dead code detected: __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

line 4666: Dead code detected: __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (8UL) {
  case 1UL:
  __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& current_task));
  goto ldv_3067;
  case 2UL:
  __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_3067;
  case 4UL:
  __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_3067;
  case 8UL:
  __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_3067;
  default:
  __bad_percpu_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 6909: Dead code detected: tmp___1 = get_current(); (CFACreationUtils.addEdgeToCFA, INFO)

line 6914: Dead code detected: tmp___2 = get_current(); (CFACreationUtils.addEdgeToCFA, INFO)

line 6919: Dead code detected: tmp___3 = get_current(); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (8UL) {
    case 1UL:
    tmp___1 = get_current();
    __asm__ volatile ("xchgb %b0, %1\n": "+q" (__ret), "+m" (tmp___1->state): : "memory",
                         "cc");
    goto ldv_36746;
    case 2UL:
    tmp___2 = get_current();
    __asm__ volatile ("xchgw %w0, %1\n": "+r" (__ret), "+m" (tmp___2->state): : "memory",
                         "cc");
    goto ldv_36746;
    case 4UL:
    tmp___3 = get_current();
    __asm__ volatile ("xchgl %0, %1\n": "+r" (__ret), "+m" (tmp___3->state): : "memory",
                         "cc");
    goto ldv_36746;
    case 8UL:
    tmp___4 = get_current();
    __asm__ volatile ("xchgq %q0, %1\n": "+r" (__ret), "+m" (tmp___4->state): : "memory",
                         "cc");
    goto ldv_36746;
    default:
    __xchg_wrong_size();
    } (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 8818: Function pointer *(cmd->scsi_done) with type void (*)(struct scsi_cmnd *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 8487: Function pointer *(cmd->scsi_done) with type void (*)(struct scsi_cmnd *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 5920: Function pointer *(cmd->scsi_done) with type void (*)(struct scsi_cmnd *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 5898: Function pointer *(cmd->scsi_done) with type void (*)(struct scsi_cmnd *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 8237: Function pointer *(cmd->scsi_done) with type void (*)(struct scsi_cmnd *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 5187: Function pointer *(ops->alloc) with type void *(*)(struct device *, size_t , dma_addr_t *, gfp_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 5219: Function pointer *(ops->free) with type void (*)(struct device *, size_t , void *, dma_addr_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

line 9950: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___5 = ldv_zalloc(496UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 9952: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___6 = ldv_zalloc(264UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function noop_llseek to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock_nested to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function seq_printf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __init_waitqueue_head to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_get_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_enable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_request_regions to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_set_master to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_final_state to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function scsi_adjust_queue_depth to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_dev_get to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iounmap to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_release_regions to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_dev_put to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_destroy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dma_set_mask to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dma_get_required_mask to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function schedule_timeout_uninterruptible to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function scsi_add_host_with_dma to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function scsi_remove_host to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dma_supported to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            18753 (14% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  14749 (79%)
  Because of loop head:            3987 (21%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         17 (0%)
  Times precision was empty:       15947 (85%)
  Times precision was {false}:     276 (1%)
  Times result was cached:         2297 (12%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      233 (1%)
  Times result was 'false':        168 (1%)
Number of strengthen sat checks:   0
Number of coverage checks:         12361
  BDD entailment checks:           3497
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       68
Number of predicates discovered:          3
Number of abstraction locations:          40
Max number of predicates per location:    2
Avg number of predicates per location:    1
Total predicates per abstraction:         3662
Max number of predicates per abstraction: 2
Avg number of predicates per abstraction: 7.19
Number of irrelevant predicates:          2610 (71%)
Number of preds handled by boolean abs:   267 (7%)
  Total number of models for allsat:      257
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.10

Time for post operator:                  9.821s
  Time for path formula creation:        9.633s
Time for strengthen operator:            0.317s
Time for prec operator:                  3.399s
  Time for abstraction:                  2.713s (Max:     0.028s, Count: 18753)
    Boolean abstraction:                 0.403s
    Solving time:                        0.391s (Max:     0.015s)
    Model enumeration time:              0.032s
    Time for BDD construction:           0.060s (Max:     0.008s)
Time for merge operator:                 0.487s
Time for coverage check:                 0.069s
  Time for BDD entailment checks:        0.063s
Total time for SMT solver (w/o itp):     0.423s

Number of path formula cache hits:   82712 (58%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     8.924s

Total number of created targets for pointer analysis: 6633
   Number of created targets for uf: *signed_int is 29
   Number of created targets for uf: *unsigned_long_long_int is 5
   Number of created targets for uf: *unsigned_int is 213


Number of BDD nodes:                               210
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         463 (count: 22262, min: 0, max: 87, avg: 0.02)
Time for BDD node cleanup:                             0.020s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.605s
  Time for transition matches:                         0.344s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.000s
Automaton transfers with branching:                0
Automaton transfer successors:                       129635 (count: 129635, min: 1, max: 1, avg: 1.00) [1 x 129635]

CPA algorithm statistics
------------------------
Number of iterations:            68612
Max size of waitlist:            391
Average size of waitlist:        175
Number of computed successors:   80517
Max successors for one state:    2
Number of times merged:          4432
Number of times stopped:         7077
Number of times breaked:         17

Total time for CPA algorithm:        21.576s (Max:     2.227s)
  Time for choose from waitlist:      0.205s
  Time for precision adjustment:      4.988s
  Time for transfer relation:        13.598s
  Time for merge operator:            0.848s
  Time for stop operator:             0.396s
  Time for adding to reached set:     0.425s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   17
Avg. length of target path (in blocks):                 389 (count: 17, min: 13, max: 38, avg: 22.88)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.791s
  Counterexample analysis:                             0.336s (Max:     0.032s, Calls: 17)
    Refinement sat check:                              0.229s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.001s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.028s
  Precision update:                                    0.034s
  ARG update:                                          0.366s

Length of refined path (in blocks):                     279 (count: 17, min: 8, max: 33, avg: 16.41)
Number of affected states:                              178 (count: 17, min: 1, max: 26, avg: 10.47)
Length (states) of path with itp 'true':                 84 (count: 17, min: 0, max: 6, avg: 4.94)
Length (states) of path with itp non-trivial itp:       178 (count: 17, min: 1, max: 26, avg: 10.47)
Length (states) of path with itp 'false':                17 (count: 17, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 17, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:             161 (count: 17, min: 0, max: 25, avg: 9.47)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                17
Number of successful refinements:     17
Number of failed refinements:         0
Max. size of reached set before ref.: 6227
Max. size of reached set after ref.:  33
Avg. size of reached set before ref.: 4242.41
Avg. size of reached set after ref.:  27.71

Total time for CEGAR algorithm:      22.613s
Time for refinements:                 1.035s
Average time for refinement:          0.060s
Max time for refinement:              0.101s

Code Coverage
-----------------------------
  Function coverage:      0.380
  Visited lines:          1614
  Total lines:            4039
  Line coverage:          0.400
  Visited conditions:     268
  Total conditions:       1102
  Condition coverage:     0.243

CPAchecker general statistics
-----------------------------
Number of program locations:     5485
Number of CFA edges:             6252
Number of relevant variables:    834
Number of functions:             142
Number of loops:                 66
Size of reached set:             1623
  Number of reached locations:   649 (12%)
    Avg states per location:     2
    Max states per location:     29 (at node N98)
  Number of reached functions:   54 (38%)
  Number of partitions:          1613
    Avg size of partitions:      1
    Max size of partitions:      3 (with key [N529 (before line 5570), Function adpt_detect called from node N4372, stack depth 3 [7cf0ea82], stack [main, adpt_init, adpt_detect]])
  Number of target states:       0
  Size of final wait list        125

Time for analysis setup:          7.135s
  Time for loading CPAs:          1.066s
  Time for loading parser:        0.657s
  Time for CFA construction:      5.249s
    Time for parsing file(s):     1.231s
    Time for AST to CFA:          1.973s
    Time for CFA sanity check:    0.410s
    Time for post-processing:     1.404s
      Time for var class.:        0.708s
Time for Analysis:               22.613s
CPU time for analysis:           22.620s
Total time for CPAchecker:       29.752s
Total CPU time for CPAchecker:   29.740s
Time for statistics:              0.122s

Time for Garbage Collector:       0.895s (in 43 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                100MB (    96 MiB) max;     56MB (    53 MiB) avg;    108MB (   103 MiB) peak
Used non-heap memory:             40MB (    38 MiB) max;     34MB (    33 MiB) avg;     40MB (    39 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        42MB (    40 MiB) max;     36MB (    35 MiB) avg
Total process virtual memory:   8085MB (  7711 MiB) max;   8071MB (  7697 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
