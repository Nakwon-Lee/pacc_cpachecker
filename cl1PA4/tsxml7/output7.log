scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.16-rc1/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--scsi--dpt_i2o.ko-entry_point_true-unreach-call.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_g5zj7cd3/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 4660: Dead code detected: __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

line 4663: Dead code detected: __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

line 4666: Dead code detected: __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (8UL) {
  case 1UL:
  __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& current_task));
  goto ldv_3067;
  case 2UL:
  __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_3067;
  case 4UL:
  __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_3067;
  case 8UL:
  __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_3067;
  default:
  __bad_percpu_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 6909: Dead code detected: tmp___1 = get_current(); (CFACreationUtils.addEdgeToCFA, INFO)

line 6914: Dead code detected: tmp___2 = get_current(); (CFACreationUtils.addEdgeToCFA, INFO)

line 6919: Dead code detected: tmp___3 = get_current(); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (8UL) {
    case 1UL:
    tmp___1 = get_current();
    __asm__ volatile ("xchgb %b0, %1\n": "+q" (__ret), "+m" (tmp___1->state): : "memory",
                         "cc");
    goto ldv_36746;
    case 2UL:
    tmp___2 = get_current();
    __asm__ volatile ("xchgw %w0, %1\n": "+r" (__ret), "+m" (tmp___2->state): : "memory",
                         "cc");
    goto ldv_36746;
    case 4UL:
    tmp___3 = get_current();
    __asm__ volatile ("xchgl %0, %1\n": "+r" (__ret), "+m" (tmp___3->state): : "memory",
                         "cc");
    goto ldv_36746;
    case 8UL:
    tmp___4 = get_current();
    __asm__ volatile ("xchgq %q0, %1\n": "+r" (__ret), "+m" (tmp___4->state): : "memory",
                         "cc");
    goto ldv_36746;
    default:
    __xchg_wrong_size();
    } (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 8818: Function pointer *(cmd->scsi_done) with type void (*)(struct scsi_cmnd *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 8487: Function pointer *(cmd->scsi_done) with type void (*)(struct scsi_cmnd *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 5920: Function pointer *(cmd->scsi_done) with type void (*)(struct scsi_cmnd *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 5898: Function pointer *(cmd->scsi_done) with type void (*)(struct scsi_cmnd *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 8237: Function pointer *(cmd->scsi_done) with type void (*)(struct scsi_cmnd *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 5187: Function pointer *(ops->alloc) with type void *(*)(struct device *, size_t , dma_addr_t *, gfp_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 5219: Function pointer *(ops->free) with type void (*)(struct device *, size_t , void *, dma_addr_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

line 9950: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___5 = ldv_zalloc(496UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 9952: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___6 = ldv_zalloc(264UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function noop_llseek to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock_nested to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function seq_printf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __init_waitqueue_head to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_get_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_enable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_request_regions to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_set_master to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_final_state to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function scsi_adjust_queue_depth to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_dev_get to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iounmap to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_release_regions to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_dev_put to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_destroy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dma_set_mask to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dma_get_required_mask to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function schedule_timeout_uninterruptible to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function scsi_add_host_with_dma to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function scsi_remove_host to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dma_supported to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            20113 (15% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  15821 (79%)
  Because of loop head:            4274 (21%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         18 (0%)
  Times precision was empty:       16732 (83%)
  Times precision was {false}:     322 (2%)
  Times result was cached:         2759 (14%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      300 (1%)
  Times result was 'false':        185 (1%)
Number of strengthen sat checks:   0
Number of coverage checks:         13211
  BDD entailment checks:           3759
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       68
Number of predicates discovered:          4
Number of abstraction locations:          46
Max number of predicates per location:    3
Avg number of predicates per location:    1
Total predicates per abstraction:         4498
Max number of predicates per abstraction: 3
Avg number of predicates per abstraction: 7.23
Number of irrelevant predicates:          3194 (71%)
Number of preds handled by boolean abs:   380 (8%)
  Total number of models for allsat:      324
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.08

Time for post operator:                  9.666s
  Time for path formula creation:        9.454s
Time for strengthen operator:            0.388s
Time for prec operator:                  3.861s
  Time for abstraction:                  3.095s (Max:     0.044s, Count: 20113)
    Boolean abstraction:                 0.526s
    Solving time:                        0.520s (Max:     0.014s)
    Model enumeration time:              0.070s
    Time for BDD construction:           0.054s (Max:     0.009s)
Time for merge operator:                 0.368s
Time for coverage check:                 0.059s
  Time for BDD entailment checks:        0.049s
Total time for SMT solver (w/o itp):     0.590s

Number of path formula cache hits:   91450 (60%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     8.798s

Total number of created targets for pointer analysis: 6753
   Number of created targets for uf: *signed_int is 29
   Number of created targets for uf: *unsigned_long_long_int is 5
   Number of created targets for uf: *unsigned_int is 105


Number of BDD nodes:                               216
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         629 (count: 23958, min: 0, max: 134, avg: 0.03)
Time for BDD node cleanup:                             0.042s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.589s
  Time for transition matches:                         0.266s
  Time for transition assertions:                      0.001s
  Time for transition actions:                         0.000s
Automaton transfers with branching:                0
Automaton transfer successors:                       138680 (count: 138680, min: 1, max: 1, avg: 1.00) [1 x 138680]

CPA algorithm statistics
------------------------
Number of iterations:            73437
Max size of waitlist:            391
Average size of waitlist:        173
Number of computed successors:   86152
Max successors for one state:    2
Number of times merged:          4726
Number of times stopped:         7548
Number of times breaked:         18

Total time for CPA algorithm:        21.753s (Max:     2.125s)
  Time for choose from waitlist:      0.165s
  Time for precision adjustment:      5.388s
  Time for transfer relation:        13.459s
  Time for merge operator:            0.684s
  Time for stop operator:             0.444s
  Time for adding to reached set:     0.458s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   18
Avg. length of target path (in blocks):                 413 (count: 18, min: 13, max: 38, avg: 22.94)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.910s
  Counterexample analysis:                             0.402s (Max:     0.033s, Calls: 18)
    Refinement sat check:                              0.259s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.030s
  Precision update:                                    0.021s
  ARG update:                                          0.436s

Length of refined path (in blocks):                     302 (count: 18, min: 8, max: 33, avg: 16.78)
Number of affected states:                              200 (count: 18, min: 1, max: 26, avg: 11.11)
Length (states) of path with itp 'true':                 84 (count: 18, min: 0, max: 6, avg: 4.67)
Length (states) of path with itp non-trivial itp:       200 (count: 18, min: 1, max: 26, avg: 11.11)
Length (states) of path with itp 'false':                18 (count: 18, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 18, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:             182 (count: 18, min: 0, max: 25, avg: 10.11)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                18
Number of successful refinements:     18
Number of failed refinements:         0
Max. size of reached set before ref.: 6227
Max. size of reached set after ref.:  33
Avg. size of reached set before ref.: 4207.56
Avg. size of reached set after ref.:  26.33

Total time for CEGAR algorithm:      22.894s
Time for refinements:                 1.140s
Average time for refinement:          0.063s
Max time for refinement:              0.119s

Code Coverage
-----------------------------
  Function coverage:      0.394
  Visited lines:          1666
  Total lines:            4039
  Line coverage:          0.412
  Visited conditions:     292
  Total conditions:       1102
  Condition coverage:     0.265

CPAchecker general statistics
-----------------------------
Number of program locations:     5485
Number of CFA edges:             6252
Number of relevant variables:    834
Number of functions:             142
Number of loops:                 66
Size of reached set:             3157
  Number of reached locations:   708 (13%)
    Avg states per location:     4
    Max states per location:     62 (at node N98)
  Number of reached functions:   56 (39%)
  Number of partitions:          3138
    Avg size of partitions:      1
    Max size of partitions:      4 (with key [N529 (before line 5570), Function adpt_detect called from node N4372, stack depth 3 [545e05f0], stack [main, adpt_init, adpt_detect]])
  Number of target states:       0
  Size of final wait list        226

Time for analysis setup:          7.372s
  Time for loading CPAs:          1.129s
  Time for loading parser:        0.652s
  Time for CFA construction:      5.424s
    Time for parsing file(s):     1.237s
    Time for AST to CFA:          2.091s
    Time for CFA sanity check:    0.372s
    Time for post-processing:     1.534s
      Time for var class.:        0.656s
Time for Analysis:               22.894s
CPU time for analysis:           22.890s
Total time for CPAchecker:       30.271s
Total CPU time for CPAchecker:   30.250s
Time for statistics:              0.215s

Time for Garbage Collector:       0.997s (in 46 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                106MB (   101 MiB) max;     56MB (    54 MiB) avg;    111MB (   106 MiB) peak
Used non-heap memory:             40MB (    38 MiB) max;     34MB (    33 MiB) avg;     40MB (    38 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        42MB (    40 MiB) max;     36MB (    34 MiB) avg
Total process virtual memory:   8085MB (  7711 MiB) max;   8071MB (  7697 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
