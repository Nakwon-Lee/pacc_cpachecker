scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.0/usb_urb-drivers-scsi-dc395x.ko_true-unreach-call.cil.out.i.pp.i


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_1c8e3lte/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

lines 4726-4750: Dead code detected: __asm__ volatile (""
                         "771:\n\t"
                         "call *%c[paravirt_opptr];"
                         "\n"
                         "772:\n"
                         ".pushsection .parainstructions,\"a\"\n"
                         " "
                         ".balign 8"
                         " "
                         "\n"
                         " "
                         ".quad"
                         " "
                         " 771b\n"
                         "  .byte "
                         "%c[paravirt_typenum]"
                         "\n"
                         "  .byte 772b-771b\n"
                         "  .short "
                         "%c[paravirt_clobber]"
                         "\n"
                         ".popsection\n"
                         "": "=a" (__eax): [paravirt_typenum] "i" ((unsigned long )((unsigned int )(& ((struct paravirt_patch_template *)0)->pv_irq_ops.save_fl.func)) / sizeof(void *)),
                         [paravirt_opptr] "i" (& pv_irq_ops.save_fl.func), [paravirt_clobber] "i" (1): "memory",
                         "cc"); (CFACreationUtils.addEdgeToCFA, INFO)

line 6185: Dead code detected: __mptr___2 = (struct list_head const *)i->list.next; (CFACreationUtils.addEdgeToCFA, INFO)

line 10279: Dead code detected: [(((int)(*((cmd->sense_buffer) + 2))) & 15) == 2] (CFACreationUtils.addEdgeToCFA, INFO)

line 10279: Dead code detected: [!((((int)(*((cmd->sense_buffer) + 2))) & 15) == 2)] (CFACreationUtils.addEdgeToCFA, INFO)

line 10282: Dead code detected: [!((((int)(*((cmd->sense_buffer) + 2))) & 15) == 6)] (CFACreationUtils.addEdgeToCFA, INFO)

line 10285: Dead code detected: [!((((int)(*((cmd->sense_buffer) + 2))) & 15) == 5)] (CFACreationUtils.addEdgeToCFA, INFO)

line 10288: Dead code detected: [!((((int)(*((cmd->sense_buffer) + 2))) & 15) == 3)] (CFACreationUtils.addEdgeToCFA, INFO)

line 10291: Dead code detected: [!((((int)(*((cmd->sense_buffer) + 2))) & 15) == 4)] (CFACreationUtils.addEdgeToCFA, INFO)

line 10280: Dead code detected: Goto: case_2 (CFACreationUtils.addEdgeToCFA, INFO)

line 10283: Dead code detected: Goto: case_6 (CFACreationUtils.addEdgeToCFA, INFO)

line 10286: Dead code detected: Goto: case_5 (CFACreationUtils.addEdgeToCFA, INFO)

line 10289: Dead code detected: Goto: case_3 (CFACreationUtils.addEdgeToCFA, INFO)

line 10292: Dead code detected: Goto: case_4 (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label case_3 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_4 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_5 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_6 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_2 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

line 13217: Dead code detected: Goto: while_break (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label while_break is not reachable. (CFAFunctionBuilder.leave, INFO)

line 13280: Dead code detected: Goto: while_break (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label while_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 6991: Function pointer *done with type void (*)(struct scsi_cmnd *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 5290-5292: Function pointer *(ops->map_page) with type dma_addr_t (*)(struct device *dev, struct page *page, unsigned long offset, size_t size, enum dma_data_direction dir, struct dma_attrs *attrs) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 5504: Function pointer *(ops->sync_sg_for_cpu) with type void (*)(struct device *dev, struct scatterlist *sg, int nents, enum dma_data_direction dir) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 5433: Function pointer *(ops->sync_single_for_device) with type void (*)(struct device *dev, dma_addr_t dma_handle, size_t size, enum dma_data_direction dir) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 5362: Function pointer *(ops->unmap_page) with type void (*)(struct device *dev, dma_addr_t dma_handle, size_t size, enum dma_data_direction dir, struct dma_attrs *attrs) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 10737: Function pointer *(cmd->scsi_done) with type void (*)(struct scsi_cmnd *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 10682: Function pointer *(p->scsi_done) with type void (*)(struct scsi_cmnd *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 10615: Function pointer *(cmd->scsi_done) with type void (*)(struct scsi_cmnd *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __pci_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function del_timer to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __list_del_entry to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __list_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function init_timer_key to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function add_timer to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 5362: Ignoring function call through function pointer *(ops->unmap_page): (*(ops->unmap_page))(dev, addr, size, dir, attrs); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function debug_dma_unmap_page to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function debug_dma_map_page to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 5504: Ignoring function call through function pointer *(ops->sync_sg_for_cpu): (*(ops->sync_sg_for_cpu))(dev, sg, nelems, dir); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function debug_dma_sync_sg_for_cpu to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function trace_hardirqs_off to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function scsi_kmap_atomic_sg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function scsi_kunmap_atomic_sg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function trace_hardirqs_on to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 7846: Ignoring call via function pointer dc395x_handle_interrupt::dc395x_statev for which no suitable target was found in line: (*dc395x_statev)(acb, srb, &scsi_status); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 7846: Ignoring function call through function pointer *dc395x_statev: (*dc395x_statev)(acb, srb, &scsi_status); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 7850: Ignoring call via function pointer dc395x_handle_interrupt::dc395x_statev for which no suitable target was found in line: (*dc395x_statev)(acb, srb, &scsi_status); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 7850: Ignoring function call through function pointer *dc395x_statev: (*dc395x_statev)(acb, srb, &scsi_status); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function pci_enable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function scsi_host_alloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __request_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function request_threaded_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __release_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function scsi_host_put to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_disable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function list_del to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function scsi_dma_unmap to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 10682: Ignoring function call through function pointer *(p->scsi_done): (*(p->scsi_done))(p); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 10737: Ignoring function call through function pointer *(cmd->scsi_done): (*(cmd->scsi_done))(cmd); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function pci_set_master to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function scsi_add_host_with_dma to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function scsi_scan_host to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 5433: Ignoring function call through function pointer *(ops->sync_single_for_device): (*(ops->sync_single_for_device))(dev, addr, size, dir); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function debug_dma_sync_single_for_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 10615: Ignoring function call through function pointer *(cmd->scsi_done): (*(cmd->scsi_done))(cmd); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            51861 (2% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            50191 (97%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         1670 (3%)
  Times precision was empty:       11237 (22%)
  Times precision was {false}:     1317 (3%)
  Times result was cached:         33650 (65%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      5657 (11%)
  Times result was 'false':        3464 (7%)
Number of strengthen sat checks:   0
Number of coverage checks:         328162
  BDD entailment checks:           25190
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       341
Number of predicates discovered:          5
Number of abstraction locations:          55
Max number of predicates per location:    4
Avg number of predicates per location:    3
Total predicates per abstraction:         117712
Max number of predicates per abstraction: 4
Avg number of predicates per abstraction: 16.88
Number of irrelevant predicates:          27800 (24%)
Number of preds handled by boolean abs:   12922 (11%)
  Total number of models for allsat:      5552
  Max number of models for allsat:        2
  Avg number of models for allsat:        0.98

Time for post operator:                 85.133s
  Time for path formula creation:       83.248s
Time for strengthen operator:            3.202s
Time for prec operator:                242.763s
  Time for abstraction:                238.947s (Max:     1.803s, Count: 51861)
    Boolean abstraction:               153.984s
    Solving time:                      168.153s (Max:     0.732s)
    Model enumeration time:             16.285s
    Time for BDD construction:           0.297s (Max:     0.013s)
Time for merge operator:                16.573s
Time for coverage check:                 0.092s
  Time for BDD entailment checks:        0.046s
Total time for SMT solver (w/o itp):   184.438s

Number of path formula cache hits:   2299668 (73%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    58.968s

Total number of created targets for pointer analysis: 230700
   Number of created targets for uf: *unsigned_short_int is 113
   Number of created targets for uf: *(struct_ScsiReqBlk)* is 3
   Number of created targets for uf: *signed_int is 1171
   Number of created targets for uf: *unsigned_char is 333
   Number of created targets for uf: *(struct_list_head)* is 468
   Number of created targets for uf: *unsigned_int is 3
   Number of created targets for uf: *(struct_AdapterCtlBlk)* is 77
   Number of created targets for uf: *unsigned_long_int is 9


Number of BDD nodes:                               242
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       11121 (count: 78099, min: 0, max: 253, avg: 0.14)
Time for BDD node cleanup:                             0.029s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  5.127s
  Time for transition matches:                         2.999s
  Time for transition assertions:                      0.003s
  Time for transition actions:                         0.017s
Automaton transfers with branching:                0
Automaton transfer successors:                      3001129 (count: 3001129, min: 1, max: 1, avg: 1.00) [1 x 3001129]

CPA algorithm statistics
------------------------
Number of iterations:            1937691
Max size of waitlist:            171
Average size of waitlist:        85
Number of computed successors:   2124923
Max successors for one state:    2
Number of times merged:          151486
Number of times stopped:         172976
Number of times breaked:         97

Total time for CPA algorithm:       434.691s (Max:    66.628s)
  Time for choose from waitlist:      1.161s
  Time for precision adjustment:    264.353s
  Time for transfer relation:       134.535s
  Time for merge operator:           19.286s
  Time for stop operator:             2.541s
  Time for adding to reached set:     5.678s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   97
Avg. length of target path (in blocks):                1699 (count: 97, min: 1, max: 58, avg: 17.52)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  10.635s
  Counterexample analysis:                             6.454s (Max:     0.173s, Calls: 97)
    Refinement sat check:                              5.492s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.003s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.054s
  Precision update:                                    0.051s
  ARG update:                                          3.903s

Length of refined path (in blocks):                    1128 (count: 97, min: 1, max: 41, avg: 11.63)
Number of affected states:                             1031 (count: 97, min: 0, max: 40, avg: 10.63)
Length (states) of path with itp 'true':                  0 (count: 97, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:      1031 (count: 97, min: 0, max: 40, avg: 10.63)
Length (states) of path with itp 'false':                34 (count: 97, min: 0, max: 1, avg: 0.35)
Different non-trivial interpolants along paths:           0 (count: 97, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:             936 (count: 97, min: 0, max: 39, avg: 9.65)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                97
Number of successful refinements:     97
Number of failed refinements:         0
Max. size of reached set before ref.: 30588
Max. size of reached set after ref.:  28
Avg. size of reached set before ref.: 17873.81
Avg. size of reached set after ref.:  27.88

Total time for CEGAR algorithm:     446.765s
Time for refinements:                12.063s
Average time for refinement:          0.124s
Max time for refinement:              0.299s

Code Coverage
-----------------------------
  Function coverage:      0.895
  Visited lines:          4184
  Total lines:            4449
  Line coverage:          0.940
  Visited conditions:     934
  Total conditions:       990
  Condition coverage:     0.943

CPAchecker general statistics
-----------------------------
Number of program locations:     6354
Number of CFA edges:             7258
Number of relevant variables:    976
Number of functions:             162
Number of loops:                 64
Size of reached set:             217428
  Number of reached locations:   3458 (54%)
    Avg states per location:     62
    Max states per location:     4505 (at node N205)
  Number of reached functions:   145 (90%)
  Number of partitions:          217422
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N6367 (before lines 13039-13155), Function main called from node N6337, stack depth 1 [62b09715], stack [main]])
  Number of target states:       0

Time for analysis setup:          7.949s
  Time for loading CPAs:          1.053s
  Time for loading parser:        0.784s
  Time for CFA construction:      5.903s
    Time for parsing file(s):     1.366s
    Time for AST to CFA:          2.257s
    Time for CFA sanity check:    0.529s
    Time for post-processing:     1.468s
      Time for var class.:        0.710s
Time for Analysis:              446.765s
CPU time for analysis:          446.740s
Time for analyzing result:        0.220s
Total time for CPAchecker:      454.724s
Total CPU time for CPAchecker:  454.680s
Time for statistics:              2.476s

Time for Garbage Collector:      22.737s (in 444 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                648MB (   618 MiB) max;    292MB (   279 MiB) avg;    679MB (   648 MiB) peak
Used non-heap memory:             41MB (    39 MiB) max;     40MB (    38 MiB) avg;     42MB (    40 MiB) peak
Allocated heap memory:           688MB (   656 MiB) max;    420MB (   400 MiB) avg
Allocated non-heap memory:        43MB (    41 MiB) max;     42MB (    40 MiB) avg
Total process virtual memory:   8530MB (  8135 MiB) max;   8295MB (  7911 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
