scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.4-simple/43_1a_cilled_true-unreach-call_ok_nondet_linux-43_1a-drivers--input--joystick--spaceorb.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_g3osamur/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __serio_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_event to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function serio_close to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_unregister_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snprintf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function serio_open to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_register_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_set_abs_params to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_free_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function serio_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_final_state to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            240 (2% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            222 (93%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         18 (8%)
  Times precision was empty:       104 (43%)
  Times precision was {false}:     43 (18%)
  Times result was cached:         67 (28%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      26 (11%)
  Times result was 'false':        12 (5%)
Number of strengthen sat checks:   0
Number of coverage checks:         661
  BDD entailment checks:           119
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       238
Number of predicates discovered:          2
Number of abstraction locations:          11
Max number of predicates per location:    1
Avg number of predicates per location:    1
Total predicates per abstraction:         136
Max number of predicates per abstraction: 1
Avg number of predicates per abstraction: 1.97
Number of irrelevant predicates:          58 (43%)
Number of preds handled by boolean abs:   26 (19%)
  Total number of models for allsat:      26
  Max number of models for allsat:        1
  Avg number of models for allsat:        1.00

Time for post operator:                  1.735s
  Time for path formula creation:        1.699s
Time for strengthen operator:            0.085s
Time for prec operator:                  0.668s
  Time for abstraction:                  0.573s (Max:     0.054s, Count: 240)
    Boolean abstraction:                 0.186s
    Solving time:                        0.239s (Max:     0.046s)
    Model enumeration time:              0.009s
    Time for BDD construction:           0.014s (Max:     0.009s)
Time for merge operator:                 0.311s
Time for coverage check:                 0.009s
  Time for BDD entailment checks:        0.009s
Total time for SMT solver (w/o itp):     0.248s

Number of path formula cache hits:   7110 (53%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     1.634s

Total number of created targets for pointer analysis: 1562
   Number of created targets for uf: *signed_int is 361
   Number of created targets for uf: *unsigned_char is 351


Number of BDD nodes:                               202
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                          43 (count: 600, min: 0, max: 22, avg: 0.07)
Time for BDD node cleanup:                             0.001s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.191s
Automaton transfers with branching:                0
Automaton transfer successors:                        13222 (count: 13222, min: 1, max: 1, avg: 1.00) [1 x 13222]

CPA algorithm statistics
------------------------
Number of iterations:            3990
Max size of waitlist:            29
Average size of waitlist:        15
Number of computed successors:   4480
Max successors for one state:    2
Number of times merged:          271
Number of times stopped:         385
Number of times breaked:         6

Total time for CPA algorithm:         4.164s (Max:     1.223s)
  Time for choose from waitlist:      0.056s
  Time for precision adjustment:      0.926s
  Time for transfer relation:         2.601s
  Time for merge operator:            0.358s
  Time for stop operator:             0.046s
  Time for adding to reached set:     0.039s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   6
Avg. length of target path (in blocks):                  29 (count: 6, min: 2, max: 7, avg: 4.83)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.195s
  Counterexample analysis:                             0.101s (Max:     0.030s, Calls: 6)
    Refinement sat check:                              0.067s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.021s
  Precision update:                                    0.011s
  ARG update:                                          0.055s

Length of refined path (in blocks):                      29 (count: 6, min: 2, max: 7, avg: 4.83)
Number of affected states:                               23 (count: 6, min: 1, max: 6, avg: 3.83)
Length (states) of path with itp 'true':                  0 (count: 6, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:        23 (count: 6, min: 1, max: 6, avg: 3.83)
Length (states) of path with itp 'false':                 0 (count: 6, min: 0, max: 0, avg: 0.00)
Different non-trivial interpolants along paths:           0 (count: 6, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:              17 (count: 6, min: 0, max: 5, avg: 2.83)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                6
Number of successful refinements:     6
Number of failed refinements:         0
Max. size of reached set before ref.: 686
Max. size of reached set after ref.:  10
Avg. size of reached set before ref.: 622.17
Avg. size of reached set after ref.:  10.00

Total time for CEGAR algorithm:       4.396s
Time for refinements:                 0.230s
Average time for refinement:          0.038s
Max time for refinement:              0.079s

Code Coverage
-----------------------------
  Function coverage:      0.739
  Visited lines:          1172
  Total lines:            1194
  Line coverage:          0.982
  Visited conditions:     78
  Total conditions:       86
  Condition coverage:     0.907

CPAchecker general statistics
-----------------------------
Number of program locations:     1325
Number of CFA edges:             1369
Number of relevant variables:    254
Number of functions:             23
Number of loops:                 10
Size of reached set:             411
  Number of reached locations:   276 (21%)
    Avg states per location:     1
    Max states per location:     7 (at node N966)
  Number of reached functions:   17 (74%)
  Number of partitions:          411
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0

Time for analysis setup:          4.400s
  Time for loading CPAs:          0.983s
  Time for loading parser:        0.738s
  Time for CFA construction:      2.531s
    Time for parsing file(s):     0.897s
    Time for AST to CFA:          0.714s
    Time for CFA sanity check:    0.166s
    Time for post-processing:     0.563s
      Time for var class.:        0.266s
Time for Analysis:                4.396s
CPU time for analysis:            4.390s
Time for analyzing result:        0.005s
Total time for CPAchecker:        8.803s
Total CPU time for CPAchecker:    8.780s
Time for statistics:              0.123s

Time for Garbage Collector:       0.173s (in 9 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 63MB (    60 MiB) max;     35MB (    34 MiB) avg;     66MB (    63 MiB) peak
Used non-heap memory:             34MB (    33 MiB) max;     27MB (    26 MiB) avg;     35MB (    33 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        36MB (    35 MiB) max;     29MB (    28 MiB) avg
Total process virtual memory:   8132MB (  7755 MiB) max;   8092MB (  7717 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
