scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.4-simple/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--ide--cmd640.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_qvsj7uk9/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 4053: Function pointer *__cil_tmp2 with type void (*)() is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 4053: Ignoring call via function pointer slow_down_io::__cil_tmp2 for which no suitable target was found in line: (*__cil_tmp2)(); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 4053: Ignoring function call through function pointer *__cil_tmp2: (*__cil_tmp2)(); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __request_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __release_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ide_host_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 4447: Ignoring call via function pointer __get_cmd640_reg for which no suitable target was found in line: b = (*__get_cmd640_reg)(reg); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 4447: Ignoring function call through function pointer *__get_cmd640_reg: b = (*__get_cmd640_reg)(reg); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function ide_pio_cycle_time to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ide_timing_find_mode to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 5173: Ignoring call via function pointer __get_cmd640_reg for which no suitable target was found in line: tmp___9 = (*__get_cmd640_reg)(__cil_tmp45); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 5173: Ignoring function call through function pointer *__get_cmd640_reg: tmp___9 = (*__get_cmd640_reg)(__cil_tmp45); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5183: Ignoring call via function pointer __put_cmd640_reg for which no suitable target was found in line: (*__put_cmd640_reg)(__cil_tmp53, setup_count); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 5183: Ignoring function call through function pointer *__put_cmd640_reg: (*__put_cmd640_reg)(__cil_tmp53, setup_count); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5189: Ignoring call via function pointer __put_cmd640_reg for which no suitable target was found in line: (*__put_cmd640_reg)(__cil_tmp57, tmp___10); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 5189: Ignoring function call through function pointer *__put_cmd640_reg: (*__put_cmd640_reg)(__cil_tmp57, tmp___10); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 4872: Ignoring call via function pointer __get_cmd640_reg for which no suitable target was found in line: b = (*__get_cmd640_reg)(__cil_tmp13); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 4895: Ignoring call via function pointer __put_cmd640_reg for which no suitable target was found in line: (*__put_cmd640_reg)(__cil_tmp27, b); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 4895: Ignoring function call through function pointer *__put_cmd640_reg: (*__put_cmd640_reg)(__cil_tmp27, b); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 4477: Ignoring call via function pointer __put_cmd640_reg for which no suitable target was found in line: (*__put_cmd640_reg)(reg, val); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 4477: Ignoring function call through function pointer *__put_cmd640_reg: (*__put_cmd640_reg)(reg, val); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            453 (0% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            418 (92%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         35 (8%)
  Times precision was empty:       257 (57%)
  Times precision was {false}:     62 (14%)
  Times result was cached:         98 (22%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      36 (8%)
  Times result was 'false':        45 (10%)
Number of strengthen sat checks:   0
Number of coverage checks:         3428
  BDD entailment checks:           330
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       386
Number of predicates discovered:          2
Number of abstraction locations:          6
Max number of predicates per location:    1
Avg number of predicates per location:    1
Total predicates per abstraction:         196
Max number of predicates per abstraction: 1
Avg number of predicates per abstraction: 2.00
Number of irrelevant predicates:          107 (55%)
Number of preds handled by boolean abs:   36 (18%)
  Total number of models for allsat:      29
  Max number of models for allsat:        1
  Avg number of models for allsat:        0.81

Time for post operator:                  5.924s
  Time for path formula creation:        5.646s
Time for strengthen operator:            0.293s
Time for prec operator:                  2.358s
  Time for abstraction:                  2.124s (Max:     0.398s, Count: 453)
    Boolean abstraction:                 0.497s
    Solving time:                        1.369s (Max:     0.368s)
    Model enumeration time:              0.048s
    Time for BDD construction:           0.002s (Max:     0.001s)
Time for merge operator:                 0.605s
Time for coverage check:                 0.043s
  Time for BDD entailment checks:        0.042s
Total time for SMT solver (w/o itp):     1.417s

Number of path formula cache hits:   47382 (49%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     4.819s

Total number of created targets for pointer analysis: 2342
   Number of created targets for uf: *(struct_ide_hw)* is 43
   Number of created targets for uf: *unsigned_char is 269
   Number of created targets for uf: *_Bool is 3


Number of BDD nodes:                               202
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                          64 (count: 1137, min: 0, max: 16, avg: 0.06)
Time for BDD node cleanup:                             0.016s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.692s
  Time for transition matches:                         0.315s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.000s
Automaton transfers with branching:                0
Automaton transfer successors:                        95981 (count: 95981, min: 1, max: 1, avg: 1.00) [1 x 95981]

CPA algorithm statistics
------------------------
Number of iterations:            55087
Max size of waitlist:            137
Average size of waitlist:        47
Number of computed successors:   56968
Max successors for one state:    2
Number of times merged:          1549
Number of times stopped:         1814
Number of times breaked:         13

Total time for CPA algorithm:        15.955s (Max:     8.795s)
  Time for choose from waitlist:      0.259s
  Time for precision adjustment:      3.786s
  Time for transfer relation:         9.586s
  Time for merge operator:            0.767s
  Time for stop operator:             0.295s
  Time for adding to reached set:     0.340s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   13
Avg. length of target path (in blocks):                  51 (count: 13, min: 1, max: 6, avg: 3.92)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.840s
  Counterexample analysis:                             0.345s (Max:     0.054s, Calls: 13)
    Refinement sat check:                              0.282s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.020s
  Precision update:                                    0.028s
  ARG update:                                          0.334s

Length of refined path (in blocks):                      51 (count: 13, min: 1, max: 6, avg: 3.92)
Number of affected states:                               38 (count: 13, min: 0, max: 5, avg: 2.92)
Length (states) of path with itp 'true':                  0 (count: 13, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:        38 (count: 13, min: 0, max: 5, avg: 2.92)
Length (states) of path with itp 'false':                 0 (count: 13, min: 0, max: 0, avg: 0.00)
Different non-trivial interpolants along paths:           0 (count: 13, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:              27 (count: 13, min: 0, max: 4, avg: 2.08)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                13
Number of successful refinements:     13
Number of failed refinements:         0
Max. size of reached set before ref.: 22104
Max. size of reached set after ref.:  20589
Avg. size of reached set before ref.: 13802.62
Avg. size of reached set after ref.:  10099.00

Total time for CEGAR algorithm:      17.532s
Time for refinements:                 1.319s
Average time for refinement:          0.101s
Max time for refinement:              0.291s

Code Coverage
-----------------------------
  Function coverage:      0.837
  Visited lines:          2063
  Total lines:            2107
  Line coverage:          0.979
  Visited conditions:     202
  Total conditions:       222
  Condition coverage:     0.910

CPAchecker general statistics
-----------------------------
Number of program locations:     2477
Number of CFA edges:             2662
Number of relevant variables:    405
Number of functions:             49
Number of loops:                 5
Size of reached set:             6963
  Number of reached locations:   750 (30%)
    Avg states per location:     9
    Max states per location:     239 (at node N0)
  Number of reached functions:   41 (84%)
  Number of partitions:          6946
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N1512 (before line 5926), Function cmd640x_init called from node N1687, stack depth 2 [3d829787], stack [main, cmd640x_init], ABS0: true])
  Number of target states:       0

Time for analysis setup:          5.579s
  Time for loading CPAs:          1.031s
  Time for loading parser:        0.769s
  Time for CFA construction:      3.614s
    Time for parsing file(s):     1.064s
    Time for AST to CFA:          1.214s
    Time for CFA sanity check:    0.307s
    Time for post-processing:     0.869s
      Time for var class.:        0.396s
Time for Analysis:               17.532s
CPU time for analysis:           17.530s
Time for analyzing result:        0.010s
Total time for CPAchecker:       23.126s
Total CPU time for CPAchecker:   23.100s
Time for statistics:              0.271s

Time for Garbage Collector:       0.751s (in 28 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                102MB (    97 MiB) max;     55MB (    52 MiB) avg;    104MB (   100 MiB) peak
Used non-heap memory:             39MB (    37 MiB) max;     33MB (    31 MiB) avg;     40MB (    38 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        41MB (    39 MiB) max;     35MB (    33 MiB) avg
Total process virtual memory:   8133MB (  7756 MiB) max;   8116MB (  7740 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
