scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/seq-pthread/cs_read_write_lock_true-unreach-call.i


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_qnfhx138/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 828: Dead code detected: __CS_cs(); (CFACreationUtils.addEdgeToCFA, INFO)

line 828: Dead code detected: [!(__CS_ret != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 828: Dead code detected: return 0; (CFACreationUtils.addEdgeToCFA, INFO)

line 829: Dead code detected: goto __CS_ERROR; (CFACreationUtils.addEdgeToCFA, INFO)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

line 910: Ignoring function call through function pointer *(__CS_thread[1]): (*(__CS_thread[1]))(0); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 916: Ignoring function call through function pointer *(__CS_thread[2]): (*(__CS_thread[2]))(0); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 922: Ignoring function call through function pointer *(__CS_thread[3]): (*(__CS_thread[3]))(0); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 928: Ignoring function call through function pointer *(__CS_thread[4]): (*(__CS_thread[4]))(0); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Warning: Could not replay error path to get a more precise model (build_model: too many iterations) (PredicateCPA:Mathsat5NativeApi.processSolveResult, WARNING)

The satisfying assignment may be imprecise! (PredicateCPA:PathChecker.createCounterexample, WARNING)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            81 (0% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            70 (86%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         11 (14%)
  Times precision was empty:       3 (4%)
  Times precision was {false}:     10 (12%)
  Times result was cached:         0 (0%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      68 (84%)
  Times result was 'false':        28 (35%)
Number of strengthen sat checks:   0
Number of coverage checks:         10082
  BDD entailment checks:           116
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       1017
Number of predicates discovered:          9
Number of abstraction locations:          3
Max number of predicates per location:    6
Avg number of predicates per location:    3
Total predicates per abstraction:         252
Max number of predicates per abstraction: 6
Avg number of predicates per abstraction: 3.23
Number of irrelevant predicates:          43 (17%)
Number of preds handled by boolean abs:   209 (83%)
  Total number of models for allsat:      145
  Max number of models for allsat:        12
  Avg number of models for allsat:        2.13

Time for post operator:                  7.595s
  Time for path formula creation:        7.461s
Time for strengthen operator:            0.097s
Time for prec operator:                292.738s
  Time for abstraction:                292.629s (Max:    58.746s, Count: 81)
    Boolean abstraction:                 0.942s
    Solving time:                      289.745s (Max:    58.474s)
    Model enumeration time:              0.383s
    Time for BDD construction:           0.071s (Max:     0.011s)
Time for merge operator:                 1.676s
Time for coverage check:                 0.024s
  Time for BDD entailment checks:        0.019s
Total time for SMT solver (w/o itp):   290.128s

Number of path formula cache hits:   11866 (30%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     7.154s

Total number of created targets for pointer analysis: 62696
   Number of created targets for uf: *signed_int is 136
   Number of created targets for uf: *unsigned_char is 385
   Number of created targets for uf: *(unsigned_char)* is 11
   Number of created targets for uf: *(Return_type:_[(void)*],_Parameters:_1,_Parameter_1_type:_[(void)*],_VarArgs:_false)* is 37


Number of BDD nodes:                               429
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         306 (count: 663, min: 0, max: 84, avg: 0.46)
Time for BDD node cleanup:                             0.010s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.312s
Automaton transfers with branching:                0
Automaton transfer successors:                        37297 (count: 37297, min: 1, max: 1, avg: 1.00) [1 x 37297]

CPA algorithm statistics
------------------------
Number of iterations:            23673
Max size of waitlist:            32
Average size of waitlist:        11
Number of computed successors:   28820
Max successors for one state:    2
Number of times merged:          4983
Number of times stopped:         4984
Number of times breaked:         8

Total time for CPA algorithm:       306.117s (Max:    61.382s)
  Time for choose from waitlist:      0.142s
  Time for precision adjustment:    293.451s
  Time for transfer relation:         9.509s
  Time for merge operator:            2.039s
  Time for stop operator:             0.223s
  Time for adding to reached set:     0.203s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   8
Avg. length of target path (in blocks):                  57 (count: 8, min: 2, max: 16, avg: 7.13)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                 101.934s
  Counterexample analysis:                            53.958s (Max:    48.610s, Calls: 8)
    Refinement sat check:                             24.831s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.001s
  Error path post-processing:                         47.822s
  Predicate creation:                                  0.010s
  Precision update:                                    0.007s
  ARG update:                                          0.106s

Length of refined path (in blocks):                      36 (count: 7, min: 2, max: 9, avg: 5.14)
Number of affected states:                               24 (count: 7, min: 1, max: 8, avg: 3.43)
Length (states) of path with itp 'true':                  5 (count: 7, min: 0, max: 1, avg: 0.71)
Length (states) of path with itp non-trivial itp:        24 (count: 7, min: 1, max: 8, avg: 3.43)
Length (states) of path with itp 'false':                 5 (count: 7, min: 0, max: 1, avg: 0.71)
Different non-trivial interpolants along paths:          12 (count: 7, min: 0, max: 4, avg: 1.71)
Equal non-trivial interpolants along paths:               5 (count: 7, min: 0, max: 5, avg: 0.71)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                8
Number of successful refinements:     7
Number of failed refinements:         0
Max. size of reached set before ref.: 6515
Max. size of reached set after ref.:  2155
Avg. size of reached set before ref.: 4323.75
Avg. size of reached set after ref.:  1540.14

Total time for CEGAR algorithm:     408.193s
Time for refinements:               102.063s
Average time for refinement:         12.757s
Max time for refinement:             96.447s

Code Coverage
-----------------------------
  Function coverage:      0.571
  Visited lines:          310
  Total lines:            349
  Line coverage:          0.888
  Visited conditions:     156
  Total conditions:       182
  Condition coverage:     0.857

CPAchecker general statistics
-----------------------------
Number of program locations:     732
Number of CFA edges:             836
Number of relevant variables:    57
Number of functions:             21
Number of loops:                 4
Size of reached set:             6515
  Number of reached locations:   281 (38%)
    Avg states per location:     23
    Max states per location:     279 (at node N8)
  Number of reached functions:   12 (57%)
  Number of partitions:          6502
    Avg size of partitions:      1
    Max size of partitions:      12 (with key [N338 (before line 876), Function main called from node N318, stack depth 1 [492691d7], stack [main]])
  Number of target states:       1
  Size of final wait list        18

Time for analysis setup:          3.690s
  Time for loading CPAs:          0.718s
  Time for loading parser:        0.828s
  Time for CFA construction:      1.908s
    Time for parsing file(s):     0.618s
    Time for AST to CFA:          0.572s
    Time for CFA sanity check:    0.133s
    Time for post-processing:     0.438s
      Time for var class.:        0.166s
Time for Analysis:              408.193s
CPU time for analysis:          408.180s
Time for analyzing result:        0.005s
Total time for CPAchecker:      411.888s
Total CPU time for CPAchecker:  411.860s
Time for statistics:              0.204s

Time for Garbage Collector:       0.479s (in 32 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 74MB (    71 MiB) max;     48MB (    46 MiB) avg;     76MB (    73 MiB) peak
Used non-heap memory:             37MB (    35 MiB) max;     36MB (    34 MiB) avg;     38MB (    36 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        39MB (    37 MiB) max;     39MB (    37 MiB) avg
Total process virtual memory:   8338MB (  7951 MiB) max;   8308MB (  7923 MiB) avg

Verification result: FALSE. Property violation (__VERIFIER_error(); called in line 636) found by chosen configuration.
More details about the verification run can be found in the directory "./output".
