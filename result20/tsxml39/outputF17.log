scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 9600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-32_7a-drivers--net--arcnet--com90xx.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 9600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_ct6cmof5/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker 1.6.1-svn 6608050+ (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 5948: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_handler_precall to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function unregister_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iounmap to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __release_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __request_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ioremap_nocache to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function probe_irq_on to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function alloc_arcdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function request_threaded_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function register_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function probe_irq_off to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            17829 (12% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  12886 (72%)
  Because of loop head:            4854 (27%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         89 (0%)
  Times precision was empty:       2580 (14%)
  Times precision was {false}:     250 (1%)
  Times result was cached:         14164 (79%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      835 (5%)
  Times result was 'false':        1030 (6%)
Number of strengthen sat checks:   0
Number of coverage checks:         26908
  BDD entailment checks:           8126
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       47
Number of predicates discovered:          8
Number of abstraction locations:          70
Max number of predicates per location:    6
Avg number of predicates per location:    3
Total predicates per abstraction:         43651
Max number of predicates per abstraction: 6
Avg number of predicates per abstraction: 40.23
Number of irrelevant predicates:          12297 (28%)
Number of preds handled by boolean abs:   1662 (4%)
  Total number of models for allsat:      863
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.03

Time for post operator:                  1.444s
  Time for path formula creation:        1.399s
Time for strengthen operator:            0.109s
Time for prec operator:                  4.642s
  Time for abstraction:                  4.270s (Max:     0.016s, Count: 17829)
    Boolean abstraction:                 0.769s
    Solving time:                        0.764s (Max:     0.015s)
    Model enumeration time:              0.084s
    Time for BDD construction:           0.054s (Max:     0.012s)
Time for merge operator:                 0.168s
Time for coverage check:                 0.025s
  Time for BDD entailment checks:        0.021s
Total time for SMT solver (w/o itp):     0.848s

Number of path formula cache hits:   163168 (95%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     1.136s

Total number of created targets for pointer analysis: 1357
   Number of created targets for uf: *(struct_net_device)* is 129
   Number of created targets for uf: *signed_int is 41
   Number of created targets for uf: *unsigned_long_int is 3


Number of BDD nodes:                               257
Size of BDD node table:                            464047
Size of BDD cache:                                 46411
Size of BDD node cleanup queue:                        1781 (count: 17266, min: 0, max: 356, avg: 0.10)
Time for BDD node cleanup:                             0.015s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.286s
Automaton transfers with branching:                0
Automaton transfer successors:                       147589 (count: 147589, min: 1, max: 1, avg: 1.00) [1 x 147589]

CPA algorithm statistics
------------------------
Number of iterations:            98443
Max size of waitlist:            15
Average size of waitlist:        7
Number of computed successors:   114121
Max successors for one state:    2
Number of times merged:          9391
Number of times stopped:         14125
Number of times breaked:         89

Total time for CPA algorithm:         9.637s (Max:     0.419s)
  Time for choose from waitlist:      0.090s
  Time for precision adjustment:      5.345s
  Time for transfer relation:         3.074s
  Time for merge operator:            0.323s
  Time for stop operator:             0.184s
  Time for adding to reached set:     0.195s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   89
Avg. length of target path (in blocks):                3183 (count: 89, min: 10, max: 59, avg: 35.76)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   1.522s
  Counterexample analysis:                             1.104s (Max:     0.033s, Calls: 89)
    Refinement sat check:                              0.781s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.002s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.091s
  Precision update:                                    0.036s
  ARG update:                                          0.229s

Length of refined path (in blocks):                    3072 (count: 89, min: 6, max: 58, avg: 34.52)
Number of affected states:                             2886 (count: 89, min: 5, max: 56, avg: 32.43)
Length (states) of path with itp 'true':                 97 (count: 89, min: 0, max: 13, avg: 1.09)
Length (states) of path with itp non-trivial itp:      2886 (count: 89, min: 5, max: 56, avg: 32.43)
Length (states) of path with itp 'false':                89 (count: 89, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 89, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:            2797 (count: 89, min: 4, max: 55, avg: 31.43)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                89
Number of successful refinements:     89
Number of failed refinements:         0
Max. size of reached set before ref.: 1881
Max. size of reached set after ref.:  135
Avg. size of reached set before ref.: 1106.36
Avg. size of reached set after ref.:  7.31

Total time for CEGAR algorithm:      11.301s
Time for refinements:                 1.664s
Average time for refinement:          0.018s
Max time for refinement:              0.041s

Code Coverage
-----------------------------
  Function coverage:      0.309
  Visited lines:          1424
  Total lines:            1668
  Line coverage:          0.854
  Visited conditions:     258
  Total conditions:       342
  Condition coverage:     0.754

CPAchecker general statistics
-----------------------------
Number of program locations:     2136
Number of CFA edges:             2331
Number of relevant variables:    147
Number of functions:             55
Number of loops:                 18
Size of reached set:             1152
  Number of reached locations:   663 (31%)
    Avg states per location:     1
    Max states per location:     12 (at node N723)
  Number of reached functions:   17 (31%)
  Number of partitions:          1145
    Avg size of partitions:      1
    Max size of partitions:      3 (with key [N189 (before line 4887), Function com90xx_probe called from node N988, stack depth 3 [754a705d], stack [main, com90xx_init, com90xx_probe]])
  Number of target states:       0

Time for analysis setup:          2.806s
  Time for loading CPAs:          0.575s
  Time for loading parser:        0.404s
  Time for CFA construction:      1.749s
    Time for parsing file(s):     0.556s
    Time for AST to CFA:          0.532s
    Time for CFA sanity check:    0.134s
    Time for post-processing:     0.427s
      Time for var class.:        0.172s
Time for Analysis:               11.302s
CPU time for analysis:           11.290s
Time for analyzing result:        0.000s
Total time for CPAchecker:       14.111s
Total CPU time for CPAchecker:   14.100s
Time for statistics:              0.054s

Time for Garbage Collector:       0.184s (in 26 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                104MB (    99 MiB) max;     63MB (    60 MiB) avg;    113MB (   108 MiB) peak
Used non-heap memory:             39MB (    37 MiB) max;     34MB (    32 MiB) avg;     39MB (    37 MiB) peak
Allocated heap memory:           255MB (   243 MiB) max;    255MB (   243 MiB) avg
Allocated non-heap memory:        41MB (    39 MiB) max;     35MB (    34 MiB) avg
Total process virtual memory:  12081MB ( 11521 MiB) max;  12066MB ( 11507 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
