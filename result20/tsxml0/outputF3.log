scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 9600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-32_7a-drivers--pcmcia--pcmcia.ko-ldv_main2_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 9600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_1tzox1kg/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker 1.6.1-svn 6608050+ (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 8092: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 10240: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 13226: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 13958: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

lines 8967-8968: Function pointer *(s->resource_ops->find_io) with type int (*)(struct pcmcia_socket *, unsigned int, unsigned int *, unsigned int, unsigned int, struct resource **) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7665: Function pointer *(p_drv->resume) with type int (*)(struct pcmcia_device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7558: Function pointer *(p_drv->suspend) with type int (*)(struct pcmcia_device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 5899: Function pointer *(p_drv->probe) with type int (*)(struct pcmcia_device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6080: Function pointer *(p_drv->remove) with type void (*)(struct pcmcia_device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 13736: Function pointer *(cfg_mem->conf_check) with type int (*)(struct pcmcia_device *, void *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9490: Function pointer *(s->ops->set_socket) with type int (*)(struct pcmcia_socket *, socket_state_t *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9535: Function pointer *(s->ops->set_socket) with type int (*)(struct pcmcia_socket *, socket_state_t *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9670: Function pointer *(s->ops->set_io_map) with type int (*)(struct pcmcia_socket *, struct pccard_io_map *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9170: Function pointer *(s->ops->set_io_map) with type int (*)(struct pcmcia_socket *, struct pccard_io_map *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9183: Function pointer *(s->ops->set_io_map) with type int (*)(struct pcmcia_socket *, struct pccard_io_map *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9245: Function pointer *(s->ops->set_socket) with type int (*)(struct pcmcia_socket *, socket_state_t *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9092: Function pointer *(s->ops->set_mem_map) with type int (*)(struct pcmcia_socket *, struct pccard_mem_map *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9307: Function pointer *(s->ops->set_io_map) with type int (*)(struct pcmcia_socket *, struct pccard_io_map *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9282: Function pointer *(s->ops->set_socket) with type int (*)(struct pcmcia_socket *, socket_state_t *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9410: Function pointer *(s->ops->set_mem_map) with type int (*)(struct pcmcia_socket *, struct pccard_mem_map *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 10100: Function pointer *(s->ops->set_mem_map) with type int (*)(struct pcmcia_socket *, struct pccard_mem_map *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 10654: Function pointer *(s->ops->set_mem_map) with type int (*)(struct pcmcia_socket *, struct pccard_mem_map *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

line 13137: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: var_group1 = ldv_init_zalloc(228); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 13138: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: var_group1 = ldv_init_zalloc(36); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function ldv_handler_precall to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_printk to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pcmcia_parse_uevents to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _dev_info to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function list_del to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_dev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_warn to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_pr_debug to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iounmap to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __list_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ioremap_nocache to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            2391889 (13% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  2029960 (85%)
  Because of loop head:            357246 (15%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         4683 (0%)
  Times precision was empty:       162909 (7%)
  Times precision was {false}:     724 (0%)
  Times result was cached:         2221051 (93%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      7205 (0%)
  Times result was 'false':        161697 (7%)
Number of strengthen sat checks:   0
Number of coverage checks:         3233242
  BDD entailment checks:           729994
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       50
Number of predicates discovered:          10
Number of abstraction locations:          226
Max number of predicates per location:    6
Avg number of predicates per location:    4
Total predicates per abstraction:         10847411
Max number of predicates per abstraction: 6
Avg number of predicates per abstraction: 1368.07
Number of irrelevant predicates:          771185 (7%)
Number of preds handled by boolean abs:   24215 (0%)
  Total number of models for allsat:      7046
  Max number of models for allsat:        2
  Avg number of models for allsat:        0.98

Time for post operator:                 45.562s
  Time for path formula creation:       42.280s
Time for strengthen operator:            7.900s
Time for prec operator:                451.145s
  Time for abstraction:                435.739s (Max:     0.429s, Count: 2391889)
    Boolean abstraction:                19.430s
    Solving time:                       19.045s (Max:     0.037s)
    Model enumeration time:              1.111s
    Time for BDD construction:           0.173s (Max:     0.011s)
Time for merge operator:                 4.634s
Time for coverage check:                 0.422s
  Time for BDD entailment checks:        0.281s
Total time for SMT solver (w/o itp):    20.156s

Number of path formula cache hits:   22206534 (99%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     9.421s

Total number of created targets for pointer analysis: 163543
   Number of created targets for uf: *unsigned_short_int is 10
   Number of created targets for uf: *unsigned_char is 883
   Number of created targets for uf: *(unsigned_char)* is 10
   Number of created targets for uf: *unsigned_int is 18
   Number of created targets for uf: *char is 541


Number of BDD nodes:                               400
Size of BDD node table:                            464047
Size of BDD cache:                                 46411
Size of BDD node cleanup queue:                       14387 (count: 951704, min: 0, max: 230, avg: 0.02)
Time for BDD node cleanup:                             0.053s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                 10.785s
  Time for transition matches:                         6.131s
  Time for transition assertions:                      0.001s
  Time for transition actions:                         0.020s
Automaton transfers with branching:                0
Automaton transfer successors:                     18995280 (count: 18995280, min: 1, max: 1, avg: 1.00) [1 x 18995280]

CPA algorithm statistics
------------------------
Number of iterations:            11471764
Max size of waitlist:            2758
Average size of waitlist:        910
Number of computed successors:   13905933
Max successors for one state:    2
Number of times merged:          1251624
Number of times stopped:         1899944
Number of times breaked:         4683

Total time for CPA algorithm:       672.020s (Max:     4.317s)
  Time for choose from waitlist:      2.019s
  Time for precision adjustment:    496.401s
  Time for transfer relation:       132.131s
  Time for merge operator:           11.933s
  Time for stop operator:             7.600s
  Time for adding to reached set:     8.102s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   4683
Avg. length of target path (in blocks):              189858 (count: 4683, min: 10, max: 66, avg: 40.54)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  69.363s
  Counterexample analysis:                            52.678s (Max:     0.053s, Calls: 4683)
    Refinement sat check:                             40.065s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.073s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.247s
  Precision update:                                    1.862s
  ARG update:                                         13.800s

Length of refined path (in blocks):                  176703 (count: 4683, min: 9, max: 56, avg: 37.73)
Number of affected states:                            40962 (count: 4683, min: 2, max: 50, avg: 8.75)
Length (states) of path with itp 'true':             131058 (count: 4683, min: 5, max: 50, avg: 27.99)
Length (states) of path with itp non-trivial itp:     40962 (count: 4683, min: 2, max: 50, avg: 8.75)
Length (states) of path with itp 'false':              4683 (count: 4683, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 4683, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:           36279 (count: 4683, min: 1, max: 49, avg: 7.75)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                4683
Number of successful refinements:     4683
Number of failed refinements:         0
Max. size of reached set before ref.: 96363
Max. size of reached set after ref.:  83660
Avg. size of reached set before ref.: 33496.10
Avg. size of reached set after ref.:  30977.40

Total time for CEGAR algorithm:     895.952s
Time for refinements:               153.847s
Average time for refinement:          0.032s
Max time for refinement:              0.477s

Code Coverage
-----------------------------
  Function coverage:      0.207
  Visited lines:          2266
  Total lines:            5886
  Line coverage:          0.385
  Visited conditions:     586
  Total conditions:       1648
  Condition coverage:     0.356

CPAchecker general statistics
-----------------------------
Number of program locations:     8302
Number of CFA edges:             9421
Number of relevant variables:    1233
Number of functions:             324
Number of loops:                 63
Size of reached set:             49196
  Number of reached locations:   1360 (16%)
    Avg states per location:     36
    Max states per location:     755 (at node N7349)
  Number of reached functions:   67 (21%)
  Number of partitions:          49190
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N6420 (before line 12832), Function pccard_validate_cis called from node N6640, stack depth 3 [17ecacbf], stack [main, pccard_show_cis, pccard_validate_cis]])
  Number of target states:       0
  Size of final wait list        1742

Time for analysis setup:          4.406s
  Time for loading CPAs:          0.680s
  Time for loading parser:        0.407s
  Time for CFA construction:      3.229s
    Time for parsing file(s):     0.734s
    Time for AST to CFA:          1.171s
    Time for CFA sanity check:    0.322s
    Time for post-processing:     0.900s
      Time for var class.:        0.442s
Time for Analysis:              895.952s
CPU time for analysis:          895.940s
Total time for CPAchecker:      900.361s
Total CPU time for CPAchecker:  900.340s
Time for statistics:              0.423s

Time for Garbage Collector:      75.244s (in 4765 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                413MB (   394 MiB) max;    195MB (   186 MiB) avg;    420MB (   400 MiB) peak
Used non-heap memory:             41MB (    39 MiB) max;     40MB (    38 MiB) avg;     41MB (    39 MiB) peak
Allocated heap memory:           421MB (   401 MiB) max;    304MB (   290 MiB) avg
Allocated non-heap memory:        43MB (    41 MiB) max;     43MB (    41 MiB) avg
Total process virtual memory:  12215MB ( 11649 MiB) max;  12191MB ( 11626 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
