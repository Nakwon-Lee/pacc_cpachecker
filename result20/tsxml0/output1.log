scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 9600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-32_7a-drivers--pcmcia--pcmcia.ko-ldv_main2_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 9600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_lm7hhnmt/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker 1.6.1-svn 6608050+ (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 8092: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 10240: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 13226: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 13958: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

lines 8967-8968: Function pointer *(s->resource_ops->find_io) with type int (*)(struct pcmcia_socket *, unsigned int, unsigned int *, unsigned int, unsigned int, struct resource **) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7665: Function pointer *(p_drv->resume) with type int (*)(struct pcmcia_device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7558: Function pointer *(p_drv->suspend) with type int (*)(struct pcmcia_device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 5899: Function pointer *(p_drv->probe) with type int (*)(struct pcmcia_device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6080: Function pointer *(p_drv->remove) with type void (*)(struct pcmcia_device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 13736: Function pointer *(cfg_mem->conf_check) with type int (*)(struct pcmcia_device *, void *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9490: Function pointer *(s->ops->set_socket) with type int (*)(struct pcmcia_socket *, socket_state_t *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9535: Function pointer *(s->ops->set_socket) with type int (*)(struct pcmcia_socket *, socket_state_t *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9670: Function pointer *(s->ops->set_io_map) with type int (*)(struct pcmcia_socket *, struct pccard_io_map *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9170: Function pointer *(s->ops->set_io_map) with type int (*)(struct pcmcia_socket *, struct pccard_io_map *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9183: Function pointer *(s->ops->set_io_map) with type int (*)(struct pcmcia_socket *, struct pccard_io_map *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9245: Function pointer *(s->ops->set_socket) with type int (*)(struct pcmcia_socket *, socket_state_t *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9092: Function pointer *(s->ops->set_mem_map) with type int (*)(struct pcmcia_socket *, struct pccard_mem_map *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9307: Function pointer *(s->ops->set_io_map) with type int (*)(struct pcmcia_socket *, struct pccard_io_map *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9282: Function pointer *(s->ops->set_socket) with type int (*)(struct pcmcia_socket *, socket_state_t *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9410: Function pointer *(s->ops->set_mem_map) with type int (*)(struct pcmcia_socket *, struct pccard_mem_map *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 10100: Function pointer *(s->ops->set_mem_map) with type int (*)(struct pcmcia_socket *, struct pccard_mem_map *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 10654: Function pointer *(s->ops->set_mem_map) with type int (*)(struct pcmcia_socket *, struct pccard_mem_map *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

line 13137: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: var_group1 = ldv_init_zalloc(228); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 13138: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: var_group1 = ldv_init_zalloc(36); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function ldv_handler_precall to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_printk to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pcmcia_parse_uevents to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function list_del to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _dev_info to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_dev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            63223 (13% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  58392 (92%)
  Because of loop head:            4760 (8%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         71 (0%)
  Times precision was empty:       17759 (28%)
  Times precision was {false}:     1066 (2%)
  Times result was cached:         43667 (69%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      731 (1%)
  Times result was 'false':        8288 (13%)
Number of strengthen sat checks:   0
Number of coverage checks:         74915
  BDD entailment checks:           12959
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       30
Number of predicates discovered:          7
Number of abstraction locations:          53
Max number of predicates per location:    5
Avg number of predicates per location:    2
Total predicates per abstraction:         49894
Max number of predicates per abstraction: 5
Avg number of predicates per abstraction: 27.77
Number of irrelevant predicates:          20706 (41%)
Number of preds handled by boolean abs:   1229 (2%)
  Total number of models for allsat:      723
  Max number of models for allsat:        1
  Avg number of models for allsat:        0.99

Time for post operator:                  5.045s
  Time for path formula creation:        4.834s
Time for strengthen operator:            0.348s
Time for prec operator:                 11.592s
  Time for abstraction:                 10.957s (Max:     0.028s, Count: 63223)
    Boolean abstraction:                 1.506s
    Solving time:                        3.923s (Max:     0.026s)
    Model enumeration time:              0.096s
    Time for BDD construction:           0.040s (Max:     0.008s)
Time for merge operator:                 0.688s
Time for coverage check:                 0.049s
  Time for BDD entailment checks:        0.043s
Total time for SMT solver (w/o itp):     4.019s

Number of path formula cache hits:   545855 (94%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     3.681s

Total number of created targets for pointer analysis: 23736
   Number of created targets for uf: *unsigned_char is 145
   Number of created targets for uf: *unsigned_int is 18


Number of BDD nodes:                               237
Size of BDD node table:                            464047
Size of BDD cache:                                 46411
Size of BDD node cleanup queue:                        1533 (count: 43095, min: 0, max: 141, avg: 0.04)
Time for BDD node cleanup:                             0.005s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.516s
  Time for transition matches:                         0.290s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.001s
Automaton transfers with branching:                0
Automaton transfer successors:                       501721 (count: 501721, min: 1, max: 1, avg: 1.00) [1 x 501721]

CPA algorithm statistics
------------------------
Number of iterations:            293886
Max size of waitlist:            708
Average size of waitlist:        177
Number of computed successors:   358789
Max successors for one state:    2
Number of times merged:          30978
Number of times stopped:         43166
Number of times breaked:         71

Total time for CPA algorithm:        24.664s (Max:     1.918s)
  Time for choose from waitlist:      0.146s
  Time for precision adjustment:     13.131s
  Time for transfer relation:         8.701s
  Time for merge operator:            1.004s
  Time for stop operator:             0.409s
  Time for adding to reached set:     0.479s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   71
Avg. length of target path (in blocks):                1302 (count: 71, min: 10, max: 27, avg: 18.34)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   1.138s
  Counterexample analysis:                             0.576s (Max:     0.035s, Calls: 71)
    Refinement sat check:                              0.443s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.001s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.048s
  Precision update:                                    0.024s
  ARG update:                                          0.468s

Length of refined path (in blocks):                    1213 (count: 70, min: 9, max: 26, avg: 17.33)
Number of affected states:                              697 (count: 70, min: 3, max: 20, avg: 9.96)
Length (states) of path with itp 'true':                446 (count: 70, min: 5, max: 11, avg: 6.37)
Length (states) of path with itp non-trivial itp:       697 (count: 70, min: 3, max: 20, avg: 9.96)
Length (states) of path with itp 'false':                70 (count: 70, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 70, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:             627 (count: 70, min: 2, max: 19, avg: 8.96)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                71
Number of successful refinements:     70
Number of failed refinements:         0
Max. size of reached set before ref.: 10533
Max. size of reached set after ref.:  7229
Avg. size of reached set before ref.: 5971.49
Avg. size of reached set after ref.:  1666.29

Total time for CEGAR algorithm:      26.082s
Time for refinements:                 1.358s
Average time for refinement:          0.019s
Max time for refinement:              0.085s

Code Coverage
-----------------------------
  Function coverage:      0.080
  Visited lines:          1318
  Total lines:            5886
  Line coverage:          0.224
  Visited conditions:     168
  Total conditions:       1648
  Condition coverage:     0.102

CPAchecker general statistics
-----------------------------
Number of program locations:     8302
Number of CFA edges:             9421
Number of relevant variables:    1233
Number of functions:             324
Number of loops:                 63
Size of reached set:             7265
  Number of reached locations:   403 (5%)
    Avg states per location:     18
    Max states per location:     144 (at node N7658)
  Number of reached functions:   26 (8%)
  Number of partitions:          7263
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N6713 (before line 13149), Function main called from node N6685, stack depth 1 [5773d271], stack [main]])
  Number of target states:       1
  Size of final wait list        261

Time for analysis setup:          4.286s
  Time for loading CPAs:          0.614s
  Time for loading parser:        0.393s
  Time for CFA construction:      3.197s
    Time for parsing file(s):     0.732s
    Time for AST to CFA:          1.148s
    Time for CFA sanity check:    0.308s
    Time for post-processing:     0.905s
      Time for var class.:        0.436s
Time for Analysis:               26.082s
CPU time for analysis:           26.080s
Total time for CPAchecker:       30.371s
Total CPU time for CPAchecker:   30.350s
Time for statistics:              0.160s

Time for Garbage Collector:       0.844s (in 92 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                132MB (   126 MiB) max;     85MB (    81 MiB) avg;    141MB (   134 MiB) peak
Used non-heap memory:             40MB (    38 MiB) max;     36MB (    35 MiB) avg;     40MB (    38 MiB) peak
Allocated heap memory:           255MB (   243 MiB) max;    255MB (   243 MiB) avg
Allocated non-heap memory:        42MB (    40 MiB) max;     39MB (    37 MiB) avg
Total process virtual memory:  12148MB ( 11585 MiB) max;  12137MB ( 11575 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
