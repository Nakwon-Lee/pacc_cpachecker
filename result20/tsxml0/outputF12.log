scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 9600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-32_7a-drivers--pcmcia--pcmcia.ko-ldv_main2_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 9600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_pbolimy6/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker 1.6.1-svn 6608050+ (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 8092: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 10240: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 13226: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 13958: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

lines 8967-8968: Function pointer *(s->resource_ops->find_io) with type int (*)(struct pcmcia_socket *, unsigned int, unsigned int *, unsigned int, unsigned int, struct resource **) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7665: Function pointer *(p_drv->resume) with type int (*)(struct pcmcia_device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7558: Function pointer *(p_drv->suspend) with type int (*)(struct pcmcia_device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 5899: Function pointer *(p_drv->probe) with type int (*)(struct pcmcia_device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6080: Function pointer *(p_drv->remove) with type void (*)(struct pcmcia_device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 13736: Function pointer *(cfg_mem->conf_check) with type int (*)(struct pcmcia_device *, void *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9490: Function pointer *(s->ops->set_socket) with type int (*)(struct pcmcia_socket *, socket_state_t *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9535: Function pointer *(s->ops->set_socket) with type int (*)(struct pcmcia_socket *, socket_state_t *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9670: Function pointer *(s->ops->set_io_map) with type int (*)(struct pcmcia_socket *, struct pccard_io_map *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9170: Function pointer *(s->ops->set_io_map) with type int (*)(struct pcmcia_socket *, struct pccard_io_map *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9183: Function pointer *(s->ops->set_io_map) with type int (*)(struct pcmcia_socket *, struct pccard_io_map *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9245: Function pointer *(s->ops->set_socket) with type int (*)(struct pcmcia_socket *, socket_state_t *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9092: Function pointer *(s->ops->set_mem_map) with type int (*)(struct pcmcia_socket *, struct pccard_mem_map *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9307: Function pointer *(s->ops->set_io_map) with type int (*)(struct pcmcia_socket *, struct pccard_io_map *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9282: Function pointer *(s->ops->set_socket) with type int (*)(struct pcmcia_socket *, socket_state_t *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9410: Function pointer *(s->ops->set_mem_map) with type int (*)(struct pcmcia_socket *, struct pccard_mem_map *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 10100: Function pointer *(s->ops->set_mem_map) with type int (*)(struct pcmcia_socket *, struct pccard_mem_map *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 10654: Function pointer *(s->ops->set_mem_map) with type int (*)(struct pcmcia_socket *, struct pccard_mem_map *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

line 13137: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: var_group1 = ldv_init_zalloc(228); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 13138: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: var_group1 = ldv_init_zalloc(36); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function ldv_handler_precall to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_printk to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pcmcia_parse_uevents to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function list_del to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _dev_info to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_warn to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            1807509 (12% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  1449152 (80%)
  Because of loop head:            358061 (20%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         296 (0%)
  Times precision was empty:       287720 (16%)
  Times precision was {false}:     12369 (1%)
  Times result was cached:         1465318 (81%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      42102 (2%)
  Times result was 'false':        218237 (12%)
Number of strengthen sat checks:   0
Number of coverage checks:         2502412
  BDD entailment checks:           697396
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       50
Number of predicates discovered:          9
Number of abstraction locations:          144
Max number of predicates per location:    6
Avg number of predicates per location:    3
Total predicates per abstraction:         5472995
Max number of predicates per abstraction: 6
Avg number of predicates per abstraction: 100.48
Number of irrelevant predicates:          3188408 (58%)
Number of preds handled by boolean abs:   94657 (2%)
  Total number of models for allsat:      39262
  Max number of models for allsat:        2
  Avg number of models for allsat:        0.93

Time for post operator:                134.370s
  Time for path formula creation:      130.756s
Time for strengthen operator:            7.035s
Time for prec operator:                565.945s
  Time for abstraction:                551.746s (Max:     2.224s, Count: 1807509)
    Boolean abstraction:               191.653s
    Solving time:                      236.365s (Max:     0.235s)
    Model enumeration time:             10.684s
    Time for BDD construction:           0.540s (Max:     0.005s)
Time for merge operator:                25.203s
Time for coverage check:                 0.468s
  Time for BDD entailment checks:        0.359s
Total time for SMT solver (w/o itp):   247.049s

Number of path formula cache hits:   14966668 (88%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    99.105s

Total number of created targets for pointer analysis: 2681827
   Number of created targets for uf: *unsigned_short_int is 225
   Number of created targets for uf: *unsigned_char is 26388
   Number of created targets for uf: *(unsigned_char)* is 225
   Number of created targets for uf: *unsigned_int is 1269
   Number of created targets for uf: *char is 8961


Number of BDD nodes:                               396
Size of BDD node table:                            464047
Size of BDD cache:                                 46411
Size of BDD node cleanup queue:                       80837 (count: 1382729, min: 0, max: 1195, avg: 0.06)
Time for BDD node cleanup:                             0.110s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                 11.806s
  Time for transition matches:                         5.706s
  Time for transition assertions:                      0.001s
  Time for transition actions:                         0.000s
Automaton transfers with branching:                0
Automaton transfer successors:                     14894665 (count: 14894665, min: 1, max: 1, avg: 1.00) [1 x 14894665]

CPA algorithm statistics
------------------------
Number of iterations:            8766469
Max size of waitlist:            2167
Average size of waitlist:        976
Number of computed successors:   10717696
Max successors for one state:    2
Number of times merged:          902508
Number of times stopped:         1447446
Number of times breaked:         296

Total time for CPA algorithm:       874.544s (Max:    13.629s)
  Time for choose from waitlist:      2.741s
  Time for precision adjustment:    601.238s
  Time for transfer relation:       209.355s
  Time for merge operator:           31.523s
  Time for stop operator:             7.602s
  Time for adding to reached set:     9.869s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   296
Avg. length of target path (in blocks):               10069 (count: 296, min: 10, max: 56, avg: 34.02)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  17.051s
  Counterexample analysis:                             3.958s (Max:     0.035s, Calls: 296)
    Refinement sat check:                              3.074s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.005s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.088s
  Precision update:                                    0.081s
  ARG update:                                         12.842s

Length of refined path (in blocks):                    9638 (count: 295, min: 9, max: 55, avg: 32.67)
Number of affected states:                             6696 (count: 295, min: 2, max: 45, avg: 22.70)
Length (states) of path with itp 'true':               2647 (count: 295, min: 5, max: 40, avg: 8.97)
Length (states) of path with itp non-trivial itp:      6696 (count: 295, min: 2, max: 45, avg: 22.70)
Length (states) of path with itp 'false':               295 (count: 295, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 295, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:            6401 (count: 295, min: 1, max: 44, avg: 21.70)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                296
Number of successful refinements:     295
Number of failed refinements:         0
Max. size of reached set before ref.: 69289
Max. size of reached set after ref.:  53936
Avg. size of reached set before ref.: 33318.19
Avg. size of reached set after ref.:  2746.34

Total time for CEGAR algorithm:     895.790s
Time for refinements:                20.924s
Average time for refinement:          0.070s
Max time for refinement:              0.234s

Code Coverage
-----------------------------
  Function coverage:      0.170
  Visited lines:          2100
  Total lines:            5886
  Line coverage:          0.357
  Visited conditions:     522
  Total conditions:       1648
  Condition coverage:     0.317

CPAchecker general statistics
-----------------------------
Number of program locations:     8302
Number of CFA edges:             9421
Number of relevant variables:    1233
Number of functions:             324
Number of loops:                 63
Size of reached set:             66150
  Number of reached locations:   1168 (14%)
    Avg states per location:     56
    Max states per location:     837 (at node N7658)
  Number of reached functions:   55 (17%)
  Number of partitions:          65756
    Avg size of partitions:      1
    Max size of partitions:      3 (with key [N6713 (before line 13149), Function main called from node N6685, stack depth 1 [a457c2b], stack [main]])
  Number of target states:       1
  Size of final wait list        1885

Time for analysis setup:          4.551s
  Time for loading CPAs:          0.660s
  Time for loading parser:        0.421s
  Time for CFA construction:      3.374s
    Time for parsing file(s):     0.732s
    Time for AST to CFA:          1.180s
    Time for CFA sanity check:    0.367s
    Time for post-processing:     0.994s
      Time for var class.:        0.471s
Time for Analysis:              895.790s
CPU time for analysis:          895.740s
Total time for CPAchecker:      900.342s
Total CPU time for CPAchecker:  900.290s
Time for statistics:              0.583s

Time for Garbage Collector:      45.500s (in 1209 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:               1406MB (  1341 MiB) max;    748MB (   714 MiB) avg;   1517MB (  1447 MiB) peak
Used non-heap memory:             41MB (    39 MiB) max;     40MB (    38 MiB) avg;     42MB (    40 MiB) peak
Allocated heap memory:          1925MB (  1836 MiB) max;   1184MB (  1129 MiB) avg
Allocated non-heap memory:        44MB (    42 MiB) max;     43MB (    41 MiB) avg
Total process virtual memory:  12847MB ( 12252 MiB) max;  12491MB ( 11912 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
