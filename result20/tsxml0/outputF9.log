scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 9600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-32_7a-drivers--pcmcia--pcmcia.ko-ldv_main2_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 9600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_fy8bx4dv/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker 1.6.1-svn 6608050+ (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 8092: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 10240: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 13226: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 13958: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

lines 8967-8968: Function pointer *(s->resource_ops->find_io) with type int (*)(struct pcmcia_socket *, unsigned int, unsigned int *, unsigned int, unsigned int, struct resource **) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7665: Function pointer *(p_drv->resume) with type int (*)(struct pcmcia_device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7558: Function pointer *(p_drv->suspend) with type int (*)(struct pcmcia_device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 5899: Function pointer *(p_drv->probe) with type int (*)(struct pcmcia_device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6080: Function pointer *(p_drv->remove) with type void (*)(struct pcmcia_device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 13736: Function pointer *(cfg_mem->conf_check) with type int (*)(struct pcmcia_device *, void *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9490: Function pointer *(s->ops->set_socket) with type int (*)(struct pcmcia_socket *, socket_state_t *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9535: Function pointer *(s->ops->set_socket) with type int (*)(struct pcmcia_socket *, socket_state_t *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9670: Function pointer *(s->ops->set_io_map) with type int (*)(struct pcmcia_socket *, struct pccard_io_map *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9170: Function pointer *(s->ops->set_io_map) with type int (*)(struct pcmcia_socket *, struct pccard_io_map *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9183: Function pointer *(s->ops->set_io_map) with type int (*)(struct pcmcia_socket *, struct pccard_io_map *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9245: Function pointer *(s->ops->set_socket) with type int (*)(struct pcmcia_socket *, socket_state_t *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9092: Function pointer *(s->ops->set_mem_map) with type int (*)(struct pcmcia_socket *, struct pccard_mem_map *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9307: Function pointer *(s->ops->set_io_map) with type int (*)(struct pcmcia_socket *, struct pccard_io_map *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9282: Function pointer *(s->ops->set_socket) with type int (*)(struct pcmcia_socket *, socket_state_t *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9410: Function pointer *(s->ops->set_mem_map) with type int (*)(struct pcmcia_socket *, struct pccard_mem_map *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 10100: Function pointer *(s->ops->set_mem_map) with type int (*)(struct pcmcia_socket *, struct pccard_mem_map *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 10654: Function pointer *(s->ops->set_mem_map) with type int (*)(struct pcmcia_socket *, struct pccard_mem_map *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

line 13137: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: var_group1 = ldv_init_zalloc(228); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 13138: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: var_group1 = ldv_init_zalloc(36); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function ldv_handler_precall to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_dev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iounmap to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __list_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ioremap_nocache to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_printk to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function list_del to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            1657111 (17% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  1503380 (91%)
  Because of loop head:            136742 (8%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         16989 (1%)
  Times precision was empty:       251798 (15%)
  Times precision was {false}:     1323 (0%)
  Times result was cached:         1402733 (85%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      1257 (0%)
  Times result was 'false':        88626 (5%)
Number of strengthen sat checks:   0
Number of coverage checks:         1397485
  BDD entailment checks:           371167
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       30
Number of predicates discovered:          4
Number of abstraction locations:          88
Max number of predicates per location:    3
Avg number of predicates per location:    1
Total predicates per abstraction:         1664695
Max number of predicates per abstraction: 3
Avg number of predicates per abstraction: 645.23
Number of irrelevant predicates:          513338 (31%)
Number of preds handled by boolean abs:   1420 (0%)
  Total number of models for allsat:      1285
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.02

Time for post operator:                 26.838s
  Time for path formula creation:       25.084s
Time for strengthen operator:            4.275s
Time for prec operator:                109.267s
  Time for abstraction:                 99.753s (Max:     0.030s, Count: 1657111)
    Boolean abstraction:                 3.053s
    Solving time:                        6.307s (Max:     0.023s)
    Model enumeration time:              0.176s
    Time for BDD construction:           0.069s (Max:     0.010s)
Time for merge operator:                 2.581s
Time for coverage check:                 0.282s
  Time for BDD entailment checks:        0.192s
Total time for SMT solver (w/o itp):     6.483s

Number of path formula cache hits:   11920862 (99%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     6.664s

Total number of created targets for pointer analysis: 101570
   Number of created targets for uf: *unsigned_char is 596
   Number of created targets for uf: *unsigned_int is 826


Number of BDD nodes:                               207
Size of BDD node table:                            464047
Size of BDD cache:                                 46411
Size of BDD node cleanup queue:                        2534 (count: 637336, min: 0, max: 113, avg: 0.00)
Time for BDD node cleanup:                             0.092s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  6.036s
  Time for transition matches:                         3.514s
  Time for transition assertions:                      0.007s
  Time for transition actions:                         0.031s
Automaton transfers with branching:                0
Automaton transfer successors:                      9994909 (count: 9994909, min: 1, max: 1, avg: 1.00) [1 x 9994909]

CPA algorithm statistics
------------------------
Number of iterations:            6825704
Max size of waitlist:            49
Average size of waitlist:        35
Number of computed successors:   7836164
Max successors for one state:    2
Number of times merged:          513159
Number of times stopped:         804837
Number of times breaked:         16989

Total time for CPA algorithm:       232.044s (Max:     0.801s)
  Time for choose from waitlist:      1.575s
  Time for precision adjustment:    130.778s
  Time for transfer relation:        76.764s
  Time for merge operator:            5.622s
  Time for stop operator:             4.515s
  Time for adding to reached set:     5.355s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   16989
Avg. length of target path (in blocks):             1374153 (count: 16989, min: 29, max: 115, avg: 80.88)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                 634.226s
  Counterexample analysis:                           621.208s (Max:     0.091s, Calls: 16989)
    Refinement sat check:                            467.816s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.351s
  Error path post-processing:                          0.000s
  Predicate creation:                                  1.257s
  Precision update:                                    1.307s
  ARG update:                                          6.298s

Length of refined path (in blocks):                 1348206 (count: 16989, min: 21, max: 114, avg: 79.36)
Number of affected states:                           280234 (count: 16989, min: 0, max: 50, avg: 16.50)
Length (states) of path with itp 'true':            1050983 (count: 16989, min: 5, max: 93, avg: 61.86)
Length (states) of path with itp non-trivial itp:    280234 (count: 16989, min: 0, max: 50, avg: 16.50)
Length (states) of path with itp 'false':             16989 (count: 16989, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 16989, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:          263248 (count: 16989, min: 0, max: 49, avg: 15.50)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                16989
Number of successful refinements:     16989
Number of failed refinements:         0
Max. size of reached set before ref.: 3960
Max. size of reached set after ref.:  3721
Avg. size of reached set before ref.: 2104.94
Avg. size of reached set after ref.:  1696.46

Total time for CEGAR algorithm:     895.984s
Time for refinements:               653.947s
Average time for refinement:          0.038s
Max time for refinement:              0.100s

Code Coverage
-----------------------------
  Function coverage:      0.105
  Visited lines:          1449
  Total lines:            5886
  Line coverage:          0.246
  Visited conditions:     206
  Total conditions:       1648
  Condition coverage:     0.125

CPAchecker general statistics
-----------------------------
Number of program locations:     8302
Number of CFA edges:             9421
Number of relevant variables:    1233
Number of functions:             324
Number of loops:                 63
Size of reached set:             3070
  Number of reached locations:   542 (7%)
    Avg states per location:     5
    Max states per location:     42 (at node N4332)
  Number of reached functions:   34 (10%)
  Number of partitions:          3055
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N6724 (before line 13160), Function main called from node N6685, stack depth 1 [5773d271], stack [main]])
  Number of target states:       0
  Size of final wait list        34

Time for analysis setup:          4.368s
  Time for loading CPAs:          0.630s
  Time for loading parser:        0.382s
  Time for CFA construction:      3.258s
    Time for parsing file(s):     0.737s
    Time for AST to CFA:          1.184s
    Time for CFA sanity check:    0.277s
    Time for post-processing:     0.905s
      Time for var class.:        0.474s
Time for Analysis:              895.984s
CPU time for analysis:          895.960s
Total time for CPAchecker:      900.355s
Total CPU time for CPAchecker:  900.320s
Time for statistics:              0.081s

Time for Garbage Collector:       5.669s (in 1918 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                170MB (   162 MiB) max;    117MB (   111 MiB) avg;    178MB (   170 MiB) peak
Used non-heap memory:             41MB (    39 MiB) max;     40MB (    39 MiB) avg;     41MB (    40 MiB) peak
Allocated heap memory:           255MB (   243 MiB) max;    255MB (   243 MiB) avg
Allocated non-heap memory:        43MB (    41 MiB) max;     43MB (    41 MiB) avg
Total process virtual memory:  12347MB ( 11775 MiB) max;  12225MB ( 11659 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
