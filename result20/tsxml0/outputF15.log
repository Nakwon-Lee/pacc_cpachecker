scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 9600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-32_7a-drivers--pcmcia--pcmcia.ko-ldv_main2_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 9600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_uf97z3kb/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker 1.6.1-svn 6608050+ (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 8092: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 10240: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 13226: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 13958: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

lines 8967-8968: Function pointer *(s->resource_ops->find_io) with type int (*)(struct pcmcia_socket *, unsigned int, unsigned int *, unsigned int, unsigned int, struct resource **) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7665: Function pointer *(p_drv->resume) with type int (*)(struct pcmcia_device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7558: Function pointer *(p_drv->suspend) with type int (*)(struct pcmcia_device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 5899: Function pointer *(p_drv->probe) with type int (*)(struct pcmcia_device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6080: Function pointer *(p_drv->remove) with type void (*)(struct pcmcia_device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 13736: Function pointer *(cfg_mem->conf_check) with type int (*)(struct pcmcia_device *, void *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9490: Function pointer *(s->ops->set_socket) with type int (*)(struct pcmcia_socket *, socket_state_t *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9535: Function pointer *(s->ops->set_socket) with type int (*)(struct pcmcia_socket *, socket_state_t *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9670: Function pointer *(s->ops->set_io_map) with type int (*)(struct pcmcia_socket *, struct pccard_io_map *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9170: Function pointer *(s->ops->set_io_map) with type int (*)(struct pcmcia_socket *, struct pccard_io_map *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9183: Function pointer *(s->ops->set_io_map) with type int (*)(struct pcmcia_socket *, struct pccard_io_map *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9245: Function pointer *(s->ops->set_socket) with type int (*)(struct pcmcia_socket *, socket_state_t *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9092: Function pointer *(s->ops->set_mem_map) with type int (*)(struct pcmcia_socket *, struct pccard_mem_map *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9307: Function pointer *(s->ops->set_io_map) with type int (*)(struct pcmcia_socket *, struct pccard_io_map *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9282: Function pointer *(s->ops->set_socket) with type int (*)(struct pcmcia_socket *, socket_state_t *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9410: Function pointer *(s->ops->set_mem_map) with type int (*)(struct pcmcia_socket *, struct pccard_mem_map *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 10100: Function pointer *(s->ops->set_mem_map) with type int (*)(struct pcmcia_socket *, struct pccard_mem_map *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 10654: Function pointer *(s->ops->set_mem_map) with type int (*)(struct pcmcia_socket *, struct pccard_mem_map *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

line 13137: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: var_group1 = ldv_init_zalloc(228); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 13138: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: var_group1 = ldv_init_zalloc(36); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function ldv_handler_precall to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_printk to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pcmcia_parse_uevents to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _dev_info to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_dev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function list_del to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_warn to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_pr_debug to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iounmap to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ioremap_nocache to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __list_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            1173776 (18% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  1052256 (90%)
  Because of loop head:            116035 (10%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         5485 (0%)
  Times precision was empty:       180840 (15%)
  Times precision was {false}:     1116 (0%)
  Times result was cached:         983959 (84%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      7861 (1%)
  Times result was 'false':        124381 (11%)
Number of strengthen sat checks:   0
Number of coverage checks:         901643
  BDD entailment checks:           252601
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       35
Number of predicates discovered:          14
Number of abstraction locations:          193
Max number of predicates per location:    6
Avg number of predicates per location:    4
Total predicates per abstraction:         4366780
Max number of predicates per abstraction: 12
Avg number of predicates per abstraction: 486.44
Number of irrelevant predicates:          594201 (14%)
Number of preds handled by boolean abs:   24715 (1%)
  Total number of models for allsat:      8723
  Max number of models for allsat:        10
  Avg number of models for allsat:        1.11

Time for post operator:                 31.588s
  Time for path formula creation:       30.450s
Time for strengthen operator:            2.787s
Time for prec operator:                140.650s
  Time for abstraction:                133.600s (Max:     0.396s, Count: 1173776)
    Boolean abstraction:                13.264s
    Solving time:                       13.742s (Max:     0.023s)
    Model enumeration time:              1.194s
    Time for BDD construction:           0.171s (Max:     0.010s)
Time for merge operator:                 2.812s
Time for coverage check:                 0.176s
  Time for BDD entailment checks:        0.134s
Total time for SMT solver (w/o itp):    14.936s

Number of path formula cache hits:   7120096 (92%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    19.734s

Total number of created targets for pointer analysis: 243457
   Number of created targets for uf: *unsigned_short_int is 19
   Number of created targets for uf: *unsigned_char is 18
   Number of created targets for uf: *(unsigned_char)* is 10
   Number of created targets for uf: *unsigned_int is 18
   Number of created targets for uf: *char is 541


Number of BDD nodes:                               2205
Size of BDD node table:                            464047
Size of BDD cache:                                 46411
Size of BDD node cleanup queue:                       16240 (count: 489531, min: 0, max: 377, avg: 0.03)
Time for BDD node cleanup:                             0.057s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  4.452s
  Time for transition matches:                         2.626s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.023s
Automaton transfers with branching:                0
Automaton transfer successors:                      6447715 (count: 6447715, min: 1, max: 1, avg: 1.00) [1 x 6447715]

CPA algorithm statistics
------------------------
Number of iterations:            4493267
Max size of waitlist:            1069
Average size of waitlist:        313
Number of computed successors:   5209659
Max successors for one state:    2
Number of times merged:          324521
Number of times stopped:         537799
Number of times breaked:         5485

Total time for CPA algorithm:       245.621s (Max:    13.708s)
  Time for choose from waitlist:      1.181s
  Time for precision adjustment:    157.589s
  Time for transfer relation:        68.390s
  Time for merge operator:            5.076s
  Time for stop operator:             3.113s
  Time for adding to reached set:     4.282s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   5485
Avg. length of target path (in blocks):              313146 (count: 5485, min: 10, max: 92, avg: 57.09)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                 115.360s
  Counterexample analysis:                           107.485s (Max:     0.052s, Calls: 5485)
    Refinement sat check:                             82.388s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.100s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.403s
  Precision update:                                    1.846s
  ARG update:                                          4.479s

Length of refined path (in blocks):                  306886 (count: 5485, min: 9, max: 91, avg: 55.95)
Number of affected states:                            70911 (count: 5485, min: 2, max: 56, avg: 12.93)
Length (states) of path with itp 'true':             230490 (count: 5485, min: 5, max: 84, avg: 42.02)
Length (states) of path with itp non-trivial itp:     70911 (count: 5485, min: 2, max: 56, avg: 12.93)
Length (states) of path with itp 'false':              5485 (count: 5485, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 5485, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:           65426 (count: 5485, min: 1, max: 55, avg: 11.93)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                5485
Number of successful refinements:     5485
Number of failed refinements:         0
Max. size of reached set before ref.: 123307
Max. size of reached set after ref.:  123268
Avg. size of reached set before ref.: 95524.35
Avg. size of reached set after ref.:  94717.73

Total time for CEGAR algorithm:     895.898s
Time for refinements:               397.852s
Average time for refinement:          0.072s
Max time for refinement:              1.061s

Code Coverage
-----------------------------
  Function coverage:      0.191
  Visited lines:          2050
  Total lines:            5886
  Line coverage:          0.348
  Visited conditions:     466
  Total conditions:       1648
  Condition coverage:     0.283

CPAchecker general statistics
-----------------------------
Number of program locations:     8302
Number of CFA edges:             9421
Number of relevant variables:    1233
Number of functions:             324
Number of loops:                 63
Size of reached set:             123166
  Number of reached locations:   1142 (14%)
    Avg states per location:     107
    Max states per location:     3153 (at node N4716)
  Number of reached functions:   62 (19%)
  Number of partitions:          123163
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N6420 (before line 12832), Function pccard_validate_cis called from node N6640, stack depth 3 [3a016348], stack [main, pccard_show_cis, pccard_validate_cis]])
  Number of target states:       0
  Size of final wait list        1065

Time for analysis setup:          4.443s
  Time for loading CPAs:          0.660s
  Time for loading parser:        0.431s
  Time for CFA construction:      3.266s
    Time for parsing file(s):     0.750s
    Time for AST to CFA:          1.168s
    Time for CFA sanity check:    0.340s
    Time for post-processing:     0.902s
      Time for var class.:        0.452s
Time for Analysis:              895.898s
CPU time for analysis:          895.890s
Total time for CPAchecker:      900.344s
Total CPU time for CPAchecker:  900.330s
Time for statistics:              0.895s

Time for Garbage Collector:      27.145s (in 1961 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                694MB (   662 MiB) max;    387MB (   369 MiB) avg;    705MB (   672 MiB) peak
Used non-heap memory:             42MB (    40 MiB) max;     41MB (    39 MiB) avg;     43MB (    41 MiB) peak
Allocated heap memory:           837MB (   798 MiB) max;    590MB (   563 MiB) avg
Allocated non-heap memory:        44MB (    42 MiB) max;     44MB (    42 MiB) avg
Total process virtual memory:  12283MB ( 11714 MiB) max;  12207MB ( 11642 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
