scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 9600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-32_7a-drivers--pcmcia--pcmcia.ko-ldv_main2_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 9600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_zw1m5slj/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker 1.6.1-svn 6608050+ (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 8092: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 10240: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 13226: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 13958: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

lines 8967-8968: Function pointer *(s->resource_ops->find_io) with type int (*)(struct pcmcia_socket *, unsigned int, unsigned int *, unsigned int, unsigned int, struct resource **) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7665: Function pointer *(p_drv->resume) with type int (*)(struct pcmcia_device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7558: Function pointer *(p_drv->suspend) with type int (*)(struct pcmcia_device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 5899: Function pointer *(p_drv->probe) with type int (*)(struct pcmcia_device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6080: Function pointer *(p_drv->remove) with type void (*)(struct pcmcia_device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 13736: Function pointer *(cfg_mem->conf_check) with type int (*)(struct pcmcia_device *, void *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9490: Function pointer *(s->ops->set_socket) with type int (*)(struct pcmcia_socket *, socket_state_t *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9535: Function pointer *(s->ops->set_socket) with type int (*)(struct pcmcia_socket *, socket_state_t *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9670: Function pointer *(s->ops->set_io_map) with type int (*)(struct pcmcia_socket *, struct pccard_io_map *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9170: Function pointer *(s->ops->set_io_map) with type int (*)(struct pcmcia_socket *, struct pccard_io_map *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9183: Function pointer *(s->ops->set_io_map) with type int (*)(struct pcmcia_socket *, struct pccard_io_map *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9245: Function pointer *(s->ops->set_socket) with type int (*)(struct pcmcia_socket *, socket_state_t *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9092: Function pointer *(s->ops->set_mem_map) with type int (*)(struct pcmcia_socket *, struct pccard_mem_map *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9307: Function pointer *(s->ops->set_io_map) with type int (*)(struct pcmcia_socket *, struct pccard_io_map *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9282: Function pointer *(s->ops->set_socket) with type int (*)(struct pcmcia_socket *, socket_state_t *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9410: Function pointer *(s->ops->set_mem_map) with type int (*)(struct pcmcia_socket *, struct pccard_mem_map *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 10100: Function pointer *(s->ops->set_mem_map) with type int (*)(struct pcmcia_socket *, struct pccard_mem_map *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 10654: Function pointer *(s->ops->set_mem_map) with type int (*)(struct pcmcia_socket *, struct pccard_mem_map *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

line 13137: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: var_group1 = ldv_init_zalloc(228); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 13138: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: var_group1 = ldv_init_zalloc(36); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function ldv_handler_precall to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_printk to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pcmcia_parse_uevents to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _dev_info to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_dev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function list_del to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_warn to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_pr_debug to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iounmap to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ioremap_nocache to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __list_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            1173973 (18% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  1052437 (90%)
  Because of loop head:            116044 (10%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         5492 (0%)
  Times precision was empty:       180890 (15%)
  Times precision was {false}:     1118 (0%)
  Times result was cached:         984103 (84%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      7862 (1%)
  Times result was 'false':        124392 (11%)
Number of strengthen sat checks:   0
Number of coverage checks:         901794
  BDD entailment checks:           252656
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       35
Number of predicates discovered:          14
Number of abstraction locations:          191
Max number of predicates per location:    6
Avg number of predicates per location:    4
Total predicates per abstraction:         4367306
Max number of predicates per abstraction: 12
Avg number of predicates per abstraction: 486.34
Number of irrelevant predicates:          594576 (14%)
Number of preds handled by boolean abs:   24716 (1%)
  Total number of models for allsat:      8724
  Max number of models for allsat:        10
  Avg number of models for allsat:        1.11

Time for post operator:                 31.021s
  Time for path formula creation:       29.798s
Time for strengthen operator:            3.143s
Time for prec operator:                143.482s
  Time for abstraction:                136.380s (Max:     0.228s, Count: 1173973)
    Boolean abstraction:                13.402s
    Solving time:                       13.810s (Max:     0.027s)
    Model enumeration time:              1.238s
    Time for BDD construction:           0.201s (Max:     0.021s)
Time for merge operator:                 2.673s
Time for coverage check:                 0.193s
  Time for BDD entailment checks:        0.134s
Total time for SMT solver (w/o itp):    15.048s

Number of path formula cache hits:   7121086 (92%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    19.356s

Total number of created targets for pointer analysis: 243457
   Number of created targets for uf: *unsigned_short_int is 19
   Number of created targets for uf: *unsigned_char is 333
   Number of created targets for uf: *(unsigned_char)* is 10
   Number of created targets for uf: *unsigned_int is 5883
   Number of created targets for uf: *char is 541


Number of BDD nodes:                               2205
Size of BDD node table:                            464047
Size of BDD cache:                                 46411
Size of BDD node cleanup queue:                       16244 (count: 489652, min: 0, max: 411, avg: 0.03)
Time for BDD node cleanup:                             0.053s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  4.229s
  Time for transition matches:                         2.387s
  Time for transition assertions:                      0.003s
  Time for transition actions:                         0.017s
Automaton transfers with branching:                0
Automaton transfer successors:                      6448641 (count: 6448641, min: 1, max: 1, avg: 1.00) [1 x 6448641]

CPA algorithm statistics
------------------------
Number of iterations:            4493969
Max size of waitlist:            1069
Average size of waitlist:        313
Number of computed successors:   5210454
Max successors for one state:    2
Number of times merged:          324569
Number of times stopped:         537864
Number of times breaked:         5492

Total time for CPA algorithm:       247.313s (Max:    13.690s)
  Time for choose from waitlist:      0.918s
  Time for precision adjustment:    161.463s
  Time for transfer relation:        67.186s
  Time for merge operator:            4.859s
  Time for stop operator:             3.123s
  Time for adding to reached set:     4.030s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   5492
Avg. length of target path (in blocks):              313549 (count: 5492, min: 10, max: 92, avg: 57.09)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                 115.382s
  Counterexample analysis:                           107.253s (Max:     0.047s, Calls: 5492)
    Refinement sat check:                             82.087s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.106s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.575s
  Precision update:                                    1.840s
  ARG update:                                          4.530s

Length of refined path (in blocks):                  307282 (count: 5492, min: 9, max: 91, avg: 55.95)
Number of affected states:                            70989 (count: 5492, min: 2, max: 56, avg: 12.93)
Length (states) of path with itp 'true':             230801 (count: 5492, min: 5, max: 84, avg: 42.02)
Length (states) of path with itp non-trivial itp:     70989 (count: 5492, min: 2, max: 56, avg: 12.93)
Length (states) of path with itp 'false':              5492 (count: 5492, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 5492, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:           65497 (count: 5492, min: 1, max: 55, avg: 11.93)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                5492
Number of successful refinements:     5492
Number of failed refinements:         0
Max. size of reached set before ref.: 123307
Max. size of reached set after ref.:  123268
Avg. size of reached set before ref.: 95559.73
Avg. size of reached set after ref.:  94753.96

Total time for CEGAR algorithm:     895.898s
Time for refinements:               396.624s
Average time for refinement:          0.072s
Max time for refinement:              1.056s

Code Coverage
-----------------------------
  Function coverage:      0.173
  Visited lines:          1926
  Total lines:            5886
  Line coverage:          0.327
  Visited conditions:     424
  Total conditions:       1648
  Condition coverage:     0.257

CPAchecker general statistics
-----------------------------
Number of program locations:     8302
Number of CFA edges:             9421
Number of relevant variables:    1233
Number of functions:             324
Number of loops:                 63
Size of reached set:             122894
  Number of reached locations:   1016 (12%)
    Avg states per location:     120
    Max states per location:     3151 (at node N4716)
  Number of reached functions:   56 (17%)
  Number of partitions:          122893
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N6420 (before line 12832), Function pccard_validate_cis called from node N6640, stack depth 3 [202415c4], stack [main, pccard_show_cis, pccard_validate_cis]])
  Number of target states:       0
  Size of final wait list        1060

Time for analysis setup:          4.516s
  Time for loading CPAs:          0.700s
  Time for loading parser:        0.378s
  Time for CFA construction:      3.350s
    Time for parsing file(s):     0.730s
    Time for AST to CFA:          1.223s
    Time for CFA sanity check:    0.343s
    Time for post-processing:     0.952s
      Time for var class.:        0.427s
Time for Analysis:              895.898s
CPU time for analysis:          895.900s
Total time for CPAchecker:      900.417s
Total CPU time for CPAchecker:  900.410s
Time for statistics:              0.973s

Time for Garbage Collector:      27.221s (in 1957 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                702MB (   669 MiB) max;    388MB (   370 MiB) avg;    712MB (   679 MiB) peak
Used non-heap memory:             48MB (    45 MiB) max;     41MB (    40 MiB) avg;     48MB (    46 MiB) peak
Allocated heap memory:           831MB (   793 MiB) max;    590MB (   563 MiB) avg
Allocated non-heap memory:        50MB (    48 MiB) max;     50MB (    48 MiB) avg
Total process virtual memory:  12286MB ( 11716 MiB) max;  12209MB ( 11643 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
