scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 9600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-32_7a-drivers--pcmcia--pcmcia.ko-ldv_main2_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 9600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_onqnpufq/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker 1.6.1-svn 6608050+ (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 8092: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 10240: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 13226: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 13958: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

lines 8967-8968: Function pointer *(s->resource_ops->find_io) with type int (*)(struct pcmcia_socket *, unsigned int, unsigned int *, unsigned int, unsigned int, struct resource **) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7665: Function pointer *(p_drv->resume) with type int (*)(struct pcmcia_device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7558: Function pointer *(p_drv->suspend) with type int (*)(struct pcmcia_device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 5899: Function pointer *(p_drv->probe) with type int (*)(struct pcmcia_device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6080: Function pointer *(p_drv->remove) with type void (*)(struct pcmcia_device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 13736: Function pointer *(cfg_mem->conf_check) with type int (*)(struct pcmcia_device *, void *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9490: Function pointer *(s->ops->set_socket) with type int (*)(struct pcmcia_socket *, socket_state_t *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9535: Function pointer *(s->ops->set_socket) with type int (*)(struct pcmcia_socket *, socket_state_t *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9670: Function pointer *(s->ops->set_io_map) with type int (*)(struct pcmcia_socket *, struct pccard_io_map *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9170: Function pointer *(s->ops->set_io_map) with type int (*)(struct pcmcia_socket *, struct pccard_io_map *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9183: Function pointer *(s->ops->set_io_map) with type int (*)(struct pcmcia_socket *, struct pccard_io_map *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9245: Function pointer *(s->ops->set_socket) with type int (*)(struct pcmcia_socket *, socket_state_t *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9092: Function pointer *(s->ops->set_mem_map) with type int (*)(struct pcmcia_socket *, struct pccard_mem_map *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9307: Function pointer *(s->ops->set_io_map) with type int (*)(struct pcmcia_socket *, struct pccard_io_map *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9282: Function pointer *(s->ops->set_socket) with type int (*)(struct pcmcia_socket *, socket_state_t *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9410: Function pointer *(s->ops->set_mem_map) with type int (*)(struct pcmcia_socket *, struct pccard_mem_map *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 10100: Function pointer *(s->ops->set_mem_map) with type int (*)(struct pcmcia_socket *, struct pccard_mem_map *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 10654: Function pointer *(s->ops->set_mem_map) with type int (*)(struct pcmcia_socket *, struct pccard_mem_map *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

line 13137: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: var_group1 = ldv_init_zalloc(228); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 13138: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: var_group1 = ldv_init_zalloc(36); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function ldv_handler_precall to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_printk to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pcmcia_parse_uevents to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _dev_info to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function list_del to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_dev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            47984 (12% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  43051 (90%)
  Because of loop head:            4755 (10%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         178 (0%)
  Times precision was empty:       15032 (31%)
  Times precision was {false}:     782 (2%)
  Times result was cached:         31161 (65%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      1009 (2%)
  Times result was 'false':        6804 (14%)
Number of strengthen sat checks:   0
Number of coverage checks:         67050
  BDD entailment checks:           14846
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       30
Number of predicates discovered:          7
Number of abstraction locations:          55
Max number of predicates per location:    6
Avg number of predicates per location:    3
Total predicates per abstraction:         67678
Max number of predicates per abstraction: 6
Avg number of predicates per abstraction: 37.79
Number of irrelevant predicates:          40060 (59%)
Number of preds handled by boolean abs:   1894 (3%)
  Total number of models for allsat:      925
  Max number of models for allsat:        1
  Avg number of models for allsat:        0.92

Time for post operator:                  3.904s
  Time for path formula creation:        3.717s
Time for strengthen operator:            0.273s
Time for prec operator:                 12.470s
  Time for abstraction:                 12.029s (Max:     0.028s, Count: 47984)
    Boolean abstraction:                 2.688s
    Solving time:                        4.367s (Max:     0.026s)
    Model enumeration time:              0.152s
    Time for BDD construction:           0.058s (Max:     0.008s)
Time for merge operator:                 0.533s
Time for coverage check:                 0.052s
  Time for BDD entailment checks:        0.033s
Total time for SMT solver (w/o itp):     4.519s

Number of path formula cache hits:   427798 (95%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     2.916s

Total number of created targets for pointer analysis: 15850
   Number of created targets for uf: *unsigned_char is 2911
   Number of created targets for uf: *unsigned_int is 22


Number of BDD nodes:                               238
Size of BDD node table:                            464047
Size of BDD cache:                                 46411
Size of BDD node cleanup queue:                        1934 (count: 41820, min: 0, max: 190, avg: 0.05)
Time for BDD node cleanup:                             0.002s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.514s
  Time for transition matches:                         0.227s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.026s
Automaton transfers with branching:                0
Automaton transfer successors:                       387701 (count: 387701, min: 1, max: 1, avg: 1.00) [1 x 387701]

CPA algorithm statistics
------------------------
Number of iterations:            228843
Max size of waitlist:            405
Average size of waitlist:        134
Number of computed successors:   280205
Max successors for one state:    2
Number of times merged:          26102
Number of times stopped:         34989
Number of times breaked:         178

Total time for CPA algorithm:        23.391s (Max:     1.704s)
  Time for choose from waitlist:      0.149s
  Time for precision adjustment:     13.727s
  Time for transfer relation:         7.198s
  Time for merge operator:            0.847s
  Time for stop operator:             0.355s
  Time for adding to reached set:     0.359s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   178
Avg. length of target path (in blocks):                3547 (count: 178, min: 10, max: 26, avg: 19.93)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   1.981s
  Counterexample analysis:                             1.417s (Max:     0.031s, Calls: 178)
    Refinement sat check:                              1.060s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.012s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.032s
  Precision update:                                    0.071s
  ARG update:                                          0.399s

Length of refined path (in blocks):                    3369 (count: 178, min: 9, max: 25, avg: 18.93)
Number of affected states:                             1491 (count: 178, min: 3, max: 19, avg: 8.38)
Length (states) of path with itp 'true':               1700 (count: 178, min: 5, max: 20, avg: 9.55)
Length (states) of path with itp non-trivial itp:      1491 (count: 178, min: 3, max: 19, avg: 8.38)
Length (states) of path with itp 'false':               178 (count: 178, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 178, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:            1313 (count: 178, min: 2, max: 18, avg: 7.38)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                178
Number of successful refinements:     178
Number of failed refinements:         0
Max. size of reached set before ref.: 10633
Max. size of reached set after ref.:  9490
Avg. size of reached set before ref.: 2966.08
Avg. size of reached set after ref.:  1649.89

Total time for CEGAR algorithm:      25.876s
Time for refinements:                 2.328s
Average time for refinement:          0.013s
Max time for refinement:              0.049s

Code Coverage
-----------------------------
  Function coverage:      0.080
  Visited lines:          1338
  Total lines:            5886
  Line coverage:          0.227
  Visited conditions:     172
  Total conditions:       1648
  Condition coverage:     0.104

CPAchecker general statistics
-----------------------------
Number of program locations:     8302
Number of CFA edges:             9421
Number of relevant variables:    1233
Number of functions:             324
Number of loops:                 63
Size of reached set:             4131
  Number of reached locations:   418 (5%)
    Avg states per location:     9
    Max states per location:     82 (at node N4717)
  Number of reached functions:   26 (8%)
  Number of partitions:          4101
    Avg size of partitions:      1
    Max size of partitions:      4 (with key [N6602 (before line 13014), Function pccard_extract_cis called from node N6648, stack depth 3 [43badf37], stack [main, pccard_show_cis, pccard_extract_cis]])
  Number of target states:       0
  Size of final wait list        159

Time for analysis setup:          4.473s
  Time for loading CPAs:          0.682s
  Time for loading parser:        0.436s
  Time for CFA construction:      3.283s
    Time for parsing file(s):     0.724s
    Time for AST to CFA:          1.163s
    Time for CFA sanity check:    0.339s
    Time for post-processing:     0.933s
      Time for var class.:        0.433s
Time for Analysis:               25.876s
CPU time for analysis:           25.870s
Total time for CPAchecker:       30.359s
Total CPU time for CPAchecker:   30.350s
Time for statistics:              0.134s

Time for Garbage Collector:       0.829s (in 82 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                128MB (   122 MiB) max;     80MB (    76 MiB) avg;    133MB (   127 MiB) peak
Used non-heap memory:             40MB (    38 MiB) max;     36MB (    35 MiB) avg;     40MB (    38 MiB) peak
Allocated heap memory:           255MB (   243 MiB) max;    255MB (   243 MiB) avg
Allocated non-heap memory:        41MB (    39 MiB) max;     38MB (    36 MiB) avg
Total process virtual memory:  12148MB ( 11585 MiB) max;  12137MB ( 11575 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
