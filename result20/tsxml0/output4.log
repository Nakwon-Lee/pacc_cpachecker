scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 9600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-32_7a-drivers--pcmcia--pcmcia.ko-ldv_main2_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 9600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_iia06a13/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker 1.6.1-svn 6608050+ (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 8092: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 10240: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 13226: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 13958: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

lines 8967-8968: Function pointer *(s->resource_ops->find_io) with type int (*)(struct pcmcia_socket *, unsigned int, unsigned int *, unsigned int, unsigned int, struct resource **) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7665: Function pointer *(p_drv->resume) with type int (*)(struct pcmcia_device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7558: Function pointer *(p_drv->suspend) with type int (*)(struct pcmcia_device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 5899: Function pointer *(p_drv->probe) with type int (*)(struct pcmcia_device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6080: Function pointer *(p_drv->remove) with type void (*)(struct pcmcia_device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 13736: Function pointer *(cfg_mem->conf_check) with type int (*)(struct pcmcia_device *, void *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9490: Function pointer *(s->ops->set_socket) with type int (*)(struct pcmcia_socket *, socket_state_t *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9535: Function pointer *(s->ops->set_socket) with type int (*)(struct pcmcia_socket *, socket_state_t *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9670: Function pointer *(s->ops->set_io_map) with type int (*)(struct pcmcia_socket *, struct pccard_io_map *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9170: Function pointer *(s->ops->set_io_map) with type int (*)(struct pcmcia_socket *, struct pccard_io_map *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9183: Function pointer *(s->ops->set_io_map) with type int (*)(struct pcmcia_socket *, struct pccard_io_map *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9245: Function pointer *(s->ops->set_socket) with type int (*)(struct pcmcia_socket *, socket_state_t *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9092: Function pointer *(s->ops->set_mem_map) with type int (*)(struct pcmcia_socket *, struct pccard_mem_map *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9307: Function pointer *(s->ops->set_io_map) with type int (*)(struct pcmcia_socket *, struct pccard_io_map *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9282: Function pointer *(s->ops->set_socket) with type int (*)(struct pcmcia_socket *, socket_state_t *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9410: Function pointer *(s->ops->set_mem_map) with type int (*)(struct pcmcia_socket *, struct pccard_mem_map *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 10100: Function pointer *(s->ops->set_mem_map) with type int (*)(struct pcmcia_socket *, struct pccard_mem_map *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 10654: Function pointer *(s->ops->set_mem_map) with type int (*)(struct pcmcia_socket *, struct pccard_mem_map *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

line 13137: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: var_group1 = ldv_init_zalloc(228); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 13138: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: var_group1 = ldv_init_zalloc(36); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function ldv_handler_precall to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_printk to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pcmcia_parse_uevents to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _dev_info to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function list_del to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_dev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iounmap to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ioremap_nocache to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __list_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            24075 (14% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  21614 (90%)
  Because of loop head:            2037 (8%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         424 (2%)
  Times precision was empty:       6450 (27%)
  Times precision was {false}:     502 (2%)
  Times result was cached:         16414 (68%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      709 (3%)
  Times result was 'false':        1250 (5%)
Number of strengthen sat checks:   0
Number of coverage checks:         30255
  BDD entailment checks:           8897
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       30
Number of predicates discovered:          4
Number of abstraction locations:          94
Max number of predicates per location:    3
Avg number of predicates per location:    1
Total predicates per abstraction:         22778
Max number of predicates per abstraction: 3
Avg number of predicates per abstraction: 18.81
Number of irrelevant predicates:          12042 (53%)
Number of preds handled by boolean abs:   803 (4%)
  Total number of models for allsat:      712
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.00

Time for post operator:                  4.364s
  Time for path formula creation:        4.284s
Time for strengthen operator:            0.124s
Time for prec operator:                  6.693s
  Time for abstraction:                  6.307s (Max:     0.017s, Count: 24075)
    Boolean abstraction:                 1.848s
    Solving time:                        2.628s (Max:     0.016s)
    Model enumeration time:              0.091s
    Time for BDD construction:           0.063s (Max:     0.009s)
Time for merge operator:                 0.517s
Time for coverage check:                 0.043s
  Time for BDD entailment checks:        0.036s
Total time for SMT solver (w/o itp):     2.719s

Number of path formula cache hits:   155789 (77%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     3.890s

Total number of created targets for pointer analysis: 25725
   Number of created targets for uf: *unsigned_char is 1482
   Number of created targets for uf: *unsigned_int is 22


Number of BDD nodes:                               207
Size of BDD node table:                            464047
Size of BDD cache:                                 46411
Size of BDD node cleanup queue:                        1418 (count: 22218, min: 0, max: 195, avg: 0.06)
Time for BDD node cleanup:                             0.000s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.396s
Automaton transfers with branching:                0
Automaton transfer successors:                       176077 (count: 176077, min: 1, max: 1, avg: 1.00) [1 x 176077]

CPA algorithm statistics
------------------------
Number of iterations:            111468
Max size of waitlist:            66
Average size of waitlist:        44
Number of computed successors:   131511
Max successors for one state:    2
Number of times merged:          10679
Number of times stopped:         15438
Number of times breaked:         424

Total time for CPA algorithm:        15.399s (Max:     0.566s)
  Time for choose from waitlist:      0.085s
  Time for precision adjustment:      7.378s
  Time for transfer relation:         6.400s
  Time for merge operator:            0.699s
  Time for stop operator:             0.191s
  Time for adding to reached set:     0.190s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   424
Avg. length of target path (in blocks):               17490 (count: 424, min: 13, max: 70, avg: 41.25)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   8.787s
  Counterexample analysis:                             8.167s (Max:     0.043s, Calls: 424)
    Refinement sat check:                              6.412s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.017s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.084s
  Precision update:                                    0.128s
  ARG update:                                          0.244s

Length of refined path (in blocks):                   16746 (count: 424, min: 12, max: 69, avg: 39.50)
Number of affected states:                             3898 (count: 424, min: 4, max: 27, avg: 9.19)
Length (states) of path with itp 'true':              12424 (count: 424, min: 5, max: 59, avg: 29.30)
Length (states) of path with itp non-trivial itp:      3898 (count: 424, min: 4, max: 27, avg: 9.19)
Length (states) of path with itp 'false':               424 (count: 424, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 424, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:            3474 (count: 424, min: 3, max: 26, avg: 8.19)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                424
Number of successful refinements:     424
Number of failed refinements:         0
Max. size of reached set before ref.: 3397
Max. size of reached set after ref.:  2950
Avg. size of reached set before ref.: 2234.84
Avg. size of reached set after ref.:  1970.74

Total time for CEGAR algorithm:      25.493s
Time for refinements:                 9.576s
Average time for refinement:          0.022s
Max time for refinement:              0.054s

Code Coverage
-----------------------------
  Function coverage:      0.120
  Visited lines:          1517
  Total lines:            5886
  Line coverage:          0.258
  Visited conditions:     222
  Total conditions:       1648
  Condition coverage:     0.135

CPAchecker general statistics
-----------------------------
Number of program locations:     8302
Number of CFA edges:             9421
Number of relevant variables:    1233
Number of functions:             324
Number of loops:                 63
Size of reached set:             2845
  Number of reached locations:   604 (7%)
    Avg states per location:     4
    Max states per location:     34 (at node N7712)
  Number of reached functions:   39 (12%)
  Number of partitions:          2841
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N4992 (before line 11333), Function follow_link called from node N5092, stack depth 6 [54543211], stack [main, pccard_show_cis, pccard_extract_cis, pccard_get_first_tuple, pccard_get_next_tuple, follow_link]])
  Number of target states:       0
  Size of final wait list        47

Time for analysis setup:          4.345s
  Time for loading CPAs:          0.640s
  Time for loading parser:        0.405s
  Time for CFA construction:      3.223s
    Time for parsing file(s):     0.709s
    Time for AST to CFA:          1.182s
    Time for CFA sanity check:    0.311s
    Time for post-processing:     0.907s
      Time for var class.:        0.432s
Time for Analysis:               25.493s
CPU time for analysis:           25.490s
Total time for CPAchecker:       29.840s
Total CPU time for CPAchecker:   29.830s
Time for statistics:              0.092s

Time for Garbage Collector:       0.499s (in 43 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                131MB (   125 MiB) max;     83MB (    79 MiB) avg;    139MB (   133 MiB) peak
Used non-heap memory:             42MB (    40 MiB) max;     38MB (    36 MiB) avg;     43MB (    41 MiB) peak
Allocated heap memory:           255MB (   243 MiB) max;    255MB (   243 MiB) avg
Allocated non-heap memory:        44MB (    42 MiB) max;     39MB (    38 MiB) avg
Total process virtual memory:  12147MB ( 11585 MiB) max;  12137MB ( 11575 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
