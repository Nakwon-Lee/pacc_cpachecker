scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 9600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-32_7a-drivers--pcmcia--pcmcia.ko-ldv_main2_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 9600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_0ic2ds_n/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker 1.6.1-svn 6608050+ (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 8092: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 10240: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 13226: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 13958: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

lines 8967-8968: Function pointer *(s->resource_ops->find_io) with type int (*)(struct pcmcia_socket *, unsigned int, unsigned int *, unsigned int, unsigned int, struct resource **) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7665: Function pointer *(p_drv->resume) with type int (*)(struct pcmcia_device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7558: Function pointer *(p_drv->suspend) with type int (*)(struct pcmcia_device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 5899: Function pointer *(p_drv->probe) with type int (*)(struct pcmcia_device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6080: Function pointer *(p_drv->remove) with type void (*)(struct pcmcia_device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 13736: Function pointer *(cfg_mem->conf_check) with type int (*)(struct pcmcia_device *, void *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9490: Function pointer *(s->ops->set_socket) with type int (*)(struct pcmcia_socket *, socket_state_t *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9535: Function pointer *(s->ops->set_socket) with type int (*)(struct pcmcia_socket *, socket_state_t *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9670: Function pointer *(s->ops->set_io_map) with type int (*)(struct pcmcia_socket *, struct pccard_io_map *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9170: Function pointer *(s->ops->set_io_map) with type int (*)(struct pcmcia_socket *, struct pccard_io_map *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9183: Function pointer *(s->ops->set_io_map) with type int (*)(struct pcmcia_socket *, struct pccard_io_map *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9245: Function pointer *(s->ops->set_socket) with type int (*)(struct pcmcia_socket *, socket_state_t *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9092: Function pointer *(s->ops->set_mem_map) with type int (*)(struct pcmcia_socket *, struct pccard_mem_map *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9307: Function pointer *(s->ops->set_io_map) with type int (*)(struct pcmcia_socket *, struct pccard_io_map *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9282: Function pointer *(s->ops->set_socket) with type int (*)(struct pcmcia_socket *, socket_state_t *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9410: Function pointer *(s->ops->set_mem_map) with type int (*)(struct pcmcia_socket *, struct pccard_mem_map *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 10100: Function pointer *(s->ops->set_mem_map) with type int (*)(struct pcmcia_socket *, struct pccard_mem_map *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 10654: Function pointer *(s->ops->set_mem_map) with type int (*)(struct pcmcia_socket *, struct pccard_mem_map *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

line 13137: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: var_group1 = ldv_init_zalloc(228); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 13138: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: var_group1 = ldv_init_zalloc(36); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function ldv_handler_precall to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_printk to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pcmcia_parse_uevents to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _dev_info to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_dev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function list_del to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_warn to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_pr_debug to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iounmap to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ioremap_nocache to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __list_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            1665408 (18% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  1490178 (89%)
  Because of loop head:            171025 (10%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         4205 (0%)
  Times precision was empty:       83128 (5%)
  Times precision was {false}:     907 (0%)
  Times result was cached:         1568011 (94%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      13362 (1%)
  Times result was 'false':        199801 (12%)
Number of strengthen sat checks:   0
Number of coverage checks:         1281478
  BDD entailment checks:           371566
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       35
Number of predicates discovered:          15
Number of abstraction locations:          205
Max number of predicates per location:    7
Avg number of predicates per location:    4
Total predicates per abstraction:         7031881
Max number of predicates per abstraction: 12
Avg number of predicates per abstraction: 492.81
Number of irrelevant predicates:          794864 (11%)
Number of preds handled by boolean abs:   42367 (1%)
  Total number of models for allsat:      17863
  Max number of models for allsat:        10
  Avg number of models for allsat:        1.34

Time for post operator:                 34.871s
  Time for path formula creation:       32.903s
Time for strengthen operator:            4.028s
Time for prec operator:                238.773s
  Time for abstraction:                227.928s (Max:     0.527s, Count: 1665408)
    Boolean abstraction:                22.800s
    Solving time:                       20.609s (Max:     0.026s)
    Model enumeration time:              2.921s
    Time for BDD construction:           0.241s (Max:     0.011s)
Time for merge operator:                 3.000s
Time for coverage check:                 0.232s
  Time for BDD entailment checks:        0.174s
Total time for SMT solver (w/o itp):    23.530s

Number of path formula cache hits:   10442658 (96%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    15.262s

Total number of created targets for pointer analysis: 155453
   Number of created targets for uf: *unsigned_short_int is 31
   Number of created targets for uf: *unsigned_char is 18
   Number of created targets for uf: *(unsigned_char)* is 26
   Number of created targets for uf: *unsigned_int is 18
   Number of created targets for uf: *char is 901


Number of BDD nodes:                               2937
Size of BDD node table:                            464047
Size of BDD cache:                                 46411
Size of BDD node cleanup queue:                       27074 (count: 543242, min: 0, max: 459, avg: 0.05)
Time for BDD node cleanup:                             0.049s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  6.253s
  Time for transition matches:                         3.834s
  Time for transition assertions:                      0.004s
  Time for transition actions:                         0.014s
Automaton transfers with branching:                0
Automaton transfer successors:                      9011543 (count: 9011543, min: 1, max: 1, avg: 1.00) [1 x 9011543]

CPA algorithm statistics
------------------------
Number of iterations:            6313534
Max size of waitlist:            1100
Average size of waitlist:        343
Number of computed successors:   7347520
Max successors for one state:    2
Number of times merged:          454956
Number of times stopped:         769226
Number of times breaked:         4205

Total time for CPA algorithm:       374.581s (Max:    17.117s)
  Time for choose from waitlist:      1.413s
  Time for precision adjustment:    262.989s
  Time for transfer relation:        85.586s
  Time for merge operator:            6.149s
  Time for stop operator:             4.482s
  Time for adding to reached set:     5.423s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   4205
Avg. length of target path (in blocks):              320132 (count: 4205, min: 10, max: 110, avg: 76.13)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                 109.728s
  Counterexample analysis:                           100.065s (Max:     0.060s, Calls: 4205)
    Refinement sat check:                             72.968s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.094s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.320s
  Precision update:                                    1.420s
  ARG update:                                          6.904s

Length of refined path (in blocks):                  312115 (count: 4205, min: 9, max: 109, avg: 74.22)
Number of affected states:                            47162 (count: 4205, min: 2, max: 103, avg: 11.22)
Length (states) of path with itp 'true':             260748 (count: 4205, min: 5, max: 100, avg: 62.01)
Length (states) of path with itp non-trivial itp:     47162 (count: 4205, min: 2, max: 103, avg: 11.22)
Length (states) of path with itp 'false':              4205 (count: 4205, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 4205, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:           42957 (count: 4205, min: 1, max: 102, avg: 10.22)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                4205
Number of successful refinements:     4205
Number of failed refinements:         0
Max. size of reached set before ref.: 126591
Max. size of reached set after ref.:  123287
Avg. size of reached set before ref.: 98023.14
Avg. size of reached set after ref.:  96522.91

Total time for CEGAR algorithm:     896.047s
Time for refinements:               323.482s
Average time for refinement:          0.076s
Max time for refinement:              0.601s

Code Coverage
-----------------------------
  Function coverage:      0.173
  Visited lines:          1920
  Total lines:            5886
  Line coverage:          0.326
  Visited conditions:     410
  Total conditions:       1648
  Condition coverage:     0.249

CPAchecker general statistics
-----------------------------
Number of program locations:     8302
Number of CFA edges:             9421
Number of relevant variables:    1233
Number of functions:             324
Number of loops:                 63
Size of reached set:             70026
  Number of reached locations:   997 (12%)
    Avg states per location:     70
    Max states per location:     1748 (at node N4716)
  Number of reached functions:   56 (17%)
  Number of partitions:          70026
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0
  Size of final wait list        606

Time for analysis setup:          4.296s
  Time for loading CPAs:          0.674s
  Time for loading parser:        0.359s
  Time for CFA construction:      3.177s
    Time for parsing file(s):     0.733s
    Time for AST to CFA:          1.142s
    Time for CFA sanity check:    0.279s
    Time for post-processing:     0.874s
      Time for var class.:        0.450s
Time for Analysis:              896.047s
CPU time for analysis:          896.040s
Total time for CPAchecker:      900.345s
Total CPU time for CPAchecker:  900.330s
Time for statistics:              0.629s

Time for Garbage Collector:      37.786s (in 2395 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                488MB (   465 MiB) max;    289MB (   275 MiB) avg;    493MB (   470 MiB) peak
Used non-heap memory:             42MB (    40 MiB) max;     42MB (    40 MiB) avg;     43MB (    41 MiB) peak
Allocated heap memory:           494MB (   471 MiB) max;    430MB (   410 MiB) avg
Allocated non-heap memory:        45MB (    43 MiB) max;     45MB (    43 MiB) avg
Total process virtual memory:  12282MB ( 11713 MiB) max;  12245MB ( 11678 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
