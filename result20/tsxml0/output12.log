scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 9600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-32_7a-drivers--pcmcia--pcmcia.ko-ldv_main2_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 9600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_p4lqxx0f/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker 1.6.1-svn 6608050+ (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 8092: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 10240: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 13226: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 13958: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

lines 8967-8968: Function pointer *(s->resource_ops->find_io) with type int (*)(struct pcmcia_socket *, unsigned int, unsigned int *, unsigned int, unsigned int, struct resource **) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7665: Function pointer *(p_drv->resume) with type int (*)(struct pcmcia_device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7558: Function pointer *(p_drv->suspend) with type int (*)(struct pcmcia_device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 5899: Function pointer *(p_drv->probe) with type int (*)(struct pcmcia_device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6080: Function pointer *(p_drv->remove) with type void (*)(struct pcmcia_device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 13736: Function pointer *(cfg_mem->conf_check) with type int (*)(struct pcmcia_device *, void *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9490: Function pointer *(s->ops->set_socket) with type int (*)(struct pcmcia_socket *, socket_state_t *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9535: Function pointer *(s->ops->set_socket) with type int (*)(struct pcmcia_socket *, socket_state_t *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9670: Function pointer *(s->ops->set_io_map) with type int (*)(struct pcmcia_socket *, struct pccard_io_map *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9170: Function pointer *(s->ops->set_io_map) with type int (*)(struct pcmcia_socket *, struct pccard_io_map *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9183: Function pointer *(s->ops->set_io_map) with type int (*)(struct pcmcia_socket *, struct pccard_io_map *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9245: Function pointer *(s->ops->set_socket) with type int (*)(struct pcmcia_socket *, socket_state_t *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9092: Function pointer *(s->ops->set_mem_map) with type int (*)(struct pcmcia_socket *, struct pccard_mem_map *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9307: Function pointer *(s->ops->set_io_map) with type int (*)(struct pcmcia_socket *, struct pccard_io_map *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9282: Function pointer *(s->ops->set_socket) with type int (*)(struct pcmcia_socket *, socket_state_t *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9410: Function pointer *(s->ops->set_mem_map) with type int (*)(struct pcmcia_socket *, struct pccard_mem_map *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 10100: Function pointer *(s->ops->set_mem_map) with type int (*)(struct pcmcia_socket *, struct pccard_mem_map *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 10654: Function pointer *(s->ops->set_mem_map) with type int (*)(struct pcmcia_socket *, struct pccard_mem_map *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

line 13137: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: var_group1 = ldv_init_zalloc(228); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 13138: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: var_group1 = ldv_init_zalloc(36); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function ldv_handler_precall to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_printk to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pcmcia_parse_uevents to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            55274 (12% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  50933 (92%)
  Because of loop head:            4292 (8%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         49 (0%)
  Times precision was empty:       16808 (30%)
  Times precision was {false}:     980 (2%)
  Times result was cached:         36809 (67%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      677 (1%)
  Times result was 'false':        7321 (13%)
Number of strengthen sat checks:   0
Number of coverage checks:         68341
  BDD entailment checks:           11713
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       30
Number of predicates discovered:          6
Number of abstraction locations:          44
Max number of predicates per location:    5
Avg number of predicates per location:    2
Total predicates per abstraction:         42385
Max number of predicates per abstraction: 5
Avg number of predicates per abstraction: 25.58
Number of irrelevant predicates:          15241 (36%)
Number of preds handled by boolean abs:   1164 (3%)
  Total number of models for allsat:      665
  Max number of models for allsat:        1
  Avg number of models for allsat:        0.98

Time for post operator:                  4.896s
  Time for path formula creation:        4.645s
Time for strengthen operator:            0.330s
Time for prec operator:                 11.570s
  Time for abstraction:                 10.985s (Max:     0.032s, Count: 55274)
    Boolean abstraction:                 1.635s
    Solving time:                        4.084s (Max:     0.029s)
    Model enumeration time:              0.130s
    Time for BDD construction:           0.023s (Max:     0.005s)
Time for merge operator:                 0.770s
Time for coverage check:                 0.030s
  Time for BDD entailment checks:        0.020s
Total time for SMT solver (w/o itp):     4.214s

Number of path formula cache hits:   487406 (94%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     3.675s

Total number of created targets for pointer analysis: 23233
   Number of created targets for uf: *unsigned_char is 97
   Number of created targets for uf: *unsigned_int is 18


Number of BDD nodes:                               243
Size of BDD node table:                            464047
Size of BDD cache:                                 46411
Size of BDD node cleanup queue:                        1410 (count: 39891, min: 0, max: 219, avg: 0.04)
Time for BDD node cleanup:                             0.011s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.526s
  Time for transition matches:                         0.235s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.004s
Automaton transfers with branching:                0
Automaton transfer successors:                       450900 (count: 450900, min: 1, max: 1, avg: 1.00) [1 x 450900]

CPA algorithm statistics
------------------------
Number of iterations:            260864
Max size of waitlist:            608
Average size of waitlist:        179
Number of computed successors:   319406
Max successors for one state:    2
Number of times merged:          28314
Number of times stopped:         39317
Number of times breaked:         49

Total time for CPA algorithm:        24.643s (Max:     2.974s)
  Time for choose from waitlist:      0.170s
  Time for precision adjustment:     13.019s
  Time for transfer relation:         8.436s
  Time for merge operator:            1.201s
  Time for stop operator:             0.440s
  Time for adding to reached set:     0.515s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   49
Avg. length of target path (in blocks):                 901 (count: 49, min: 10, max: 32, avg: 18.39)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   1.051s
  Counterexample analysis:                             0.477s (Max:     0.041s, Calls: 49)
    Refinement sat check:                              0.358s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.001s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.031s
  Precision update:                                    0.013s
  ARG update:                                          0.495s

Length of refined path (in blocks):                     852 (count: 49, min: 9, max: 31, avg: 17.39)
Number of affected states:                              558 (count: 49, min: 3, max: 25, avg: 11.39)
Length (states) of path with itp 'true':                245 (count: 49, min: 5, max: 5, avg: 5.00)
Length (states) of path with itp non-trivial itp:       558 (count: 49, min: 3, max: 25, avg: 11.39)
Length (states) of path with itp 'false':                49 (count: 49, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 49, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:             509 (count: 49, min: 2, max: 24, avg: 10.39)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                49
Number of successful refinements:     49
Number of failed refinements:         0
Max. size of reached set before ref.: 9533
Max. size of reached set after ref.:  19
Avg. size of reached set before ref.: 5496.67
Avg. size of reached set after ref.:  19.00

Total time for CEGAR algorithm:      25.889s
Time for refinements:                 1.244s
Average time for refinement:          0.025s
Max time for refinement:              0.080s

Code Coverage
-----------------------------
  Function coverage:      0.065
  Visited lines:          1289
  Total lines:            5886
  Line coverage:          0.219
  Visited conditions:     162
  Total conditions:       1648
  Condition coverage:     0.098

CPAchecker general statistics
-----------------------------
Number of program locations:     8302
Number of CFA edges:             9421
Number of relevant variables:    1233
Number of functions:             324
Number of loops:                 63
Size of reached set:             4362
  Number of reached locations:   363 (4%)
    Avg states per location:     12
    Max states per location:     103 (at node N4716)
  Number of reached functions:   21 (6%)
  Number of partitions:          4357
    Avg size of partitions:      1
    Max size of partitions:      3 (with key [N6652 (before line 13072), Function pccard_show_cis called from node N6712, stack depth 2 [63a28b2b], stack [main, pccard_show_cis]])
  Number of target states:       0
  Size of final wait list        195

Time for analysis setup:          4.484s
  Time for loading CPAs:          0.752s
  Time for loading parser:        0.395s
  Time for CFA construction:      3.239s
    Time for parsing file(s):     0.697s
    Time for AST to CFA:          1.117s
    Time for CFA sanity check:    0.342s
    Time for post-processing:     0.987s
      Time for var class.:        0.457s
Time for Analysis:               25.889s
CPU time for analysis:           25.890s
Total time for CPAchecker:       30.376s
Total CPU time for CPAchecker:   30.360s
Time for statistics:              0.115s

Time for Garbage Collector:       0.851s (in 82 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                134MB (   127 MiB) max;     87MB (    83 MiB) avg;    140MB (   133 MiB) peak
Used non-heap memory:             47MB (    44 MiB) max;     42MB (    40 MiB) avg;     47MB (    45 MiB) peak
Allocated heap memory:           255MB (   243 MiB) max;    255MB (   243 MiB) avg
Allocated non-heap memory:        49MB (    46 MiB) max;     44MB (    42 MiB) avg
Total process virtual memory:  12150MB ( 11587 MiB) max;  12138MB ( 11576 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
