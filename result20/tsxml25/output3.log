scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 9600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-32_7a-drivers--media--tuners--tda18271.ko-ldv_main2_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 9600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run__3amgkrg/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker 1.6.1-svn 6608050+ (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 4795: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 5973: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 8196: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 7059: Function pointer *(fe->callback) with type int (*)(void *, int, int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7187: Function pointer *(fe->ops.analog_ops.standby) with type void (*)(struct dvb_frontend *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_handler_precall to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

lines 7261-7262: Ignoring parameters passed as varargs to function _tda_printk: _tda_printk(priv, "\017", "tda18271_set_analog_params", "setting tda18271 to system %s\n", mode) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

line 7182: Ignoring parameters passed as varargs to function _tda_printk: _tda_printk(priv, "\f", "tda18271_set_params", "modulation type not supported!\n") (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

line 7187: Ignoring function call through function pointer *(fe->ops.analog_ops.standby): (*(fe->ops.analog_ops.standby))(fe); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function __builtin_va_start to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Cannot get declaration of function __builtin_va_start, ignoring calls to it. (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5899: Return type of function __builtin_va_end is void, but result is used as type int: __builtin_va_end((__va_list_tag *)(&args)); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function __builtin_va_end to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

lines 7086-7087: Ignoring parameters passed as varargs to function _tda_printk: _tda_printk(priv, "\017", "tda18271_tune", "freq = %d, ifc = %d, bw = %d, agc_mode = %d, std = %d\n", freq, __CPAchecker_TMP_1, bw, __CPAchecker_TMP_2, __CPAchecker_TMP_3) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

lines 7508-7509: Ignoring parameters passed as varargs to function _tda_printk: _tda_printk(priv, "\017", "tda18271_update_std_map", "Using custom std config for %s\n", (char *)"fm") (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

lines 7526-7527: Ignoring parameters passed as varargs to function _tda_printk: _tda_printk(priv, "\017", "tda18271_update_std_map", "Using custom std config for %s\n", (char *)"atv b") (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

lines 7544-7545: Ignoring parameters passed as varargs to function _tda_printk: _tda_printk(priv, "\017", "tda18271_update_std_map", "Using custom std config for %s\n", (char *)"atv dk") (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

lines 7562-7563: Ignoring parameters passed as varargs to function _tda_printk: _tda_printk(priv, "\017", "tda18271_update_std_map", "Using custom std config for %s\n", (char *)"atv gh") (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

lines 7580-7581: Ignoring parameters passed as varargs to function _tda_printk: _tda_printk(priv, "\017", "tda18271_update_std_map", "Using custom std config for %s\n", (char *)"atv i") (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

lines 7598-7599: Ignoring parameters passed as varargs to function _tda_printk: _tda_printk(priv, "\017", "tda18271_update_std_map", "Using custom std config for %s\n", (char *)"atv l") (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

lines 7616-7617: Ignoring parameters passed as varargs to function _tda_printk: _tda_printk(priv, "\017", "tda18271_update_std_map", "Using custom std config for %s\n", (char *)"atv l\'") (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

lines 7634-7635: Ignoring parameters passed as varargs to function _tda_printk: _tda_printk(priv, "\017", "tda18271_update_std_map", "Using custom std config for %s\n", (char *)"atv mn") (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

lines 7652-7653: Ignoring parameters passed as varargs to function _tda_printk: _tda_printk(priv, "\017", "tda18271_update_std_map", "Using custom std config for %s\n", (char *)"atsc 6") (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

lines 7670-7671: Ignoring parameters passed as varargs to function _tda_printk: _tda_printk(priv, "\017", "tda18271_update_std_map", "Using custom std config for %s\n", (char *)"dvbt 6") (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

lines 7688-7689: Ignoring parameters passed as varargs to function _tda_printk: _tda_printk(priv, "\017", "tda18271_update_std_map", "Using custom std config for %s\n", (char *)"dvbt 7") (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

lines 7706-7707: Ignoring parameters passed as varargs to function _tda_printk: _tda_printk(priv, "\017", "tda18271_update_std_map", "Using custom std config for %s\n", (char *)"dvbt 8") (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

lines 7724-7725: Ignoring parameters passed as varargs to function _tda_printk: _tda_printk(priv, "\017", "tda18271_update_std_map", "Using custom std config for %s\n", (char *)"qam 6") (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

lines 7742-7743: Ignoring parameters passed as varargs to function _tda_printk: _tda_printk(priv, "\017", "tda18271_update_std_map", "Using custom std config for %s\n", (char *)"qam 8") (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

Assuming external function mutex_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function list_del to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

lines 5610-5611: Ignoring parameters passed as varargs to function _tda_printk: _tda_printk(priv, "\017", "tda18271_set_standby_mode", "sm = %d, sm_lt = %d, sm_xt = %d\n", sm, sm_lt, sm_xt) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            8394 (12% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  7591 (90%)
  Because of loop head:            736 (9%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         67 (1%)
  Times precision was empty:       2568 (31%)
  Times precision was {false}:     140 (2%)
  Times result was cached:         5248 (63%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      438 (5%)
  Times result was 'false':        336 (4%)
Number of strengthen sat checks:   0
Number of coverage checks:         12611
  BDD entailment checks:           1629
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       76
Number of predicates discovered:          5
Number of abstraction locations:          42
Max number of predicates per location:    4
Avg number of predicates per location:    3
Total predicates per abstraction:         20117
Max number of predicates per abstraction: 4
Avg number of predicates per abstraction: 34.80
Number of irrelevant predicates:          4954 (25%)
Number of preds handled by boolean abs:   1023 (5%)
  Total number of models for allsat:      438
  Max number of models for allsat:        1
  Avg number of models for allsat:        1.00

Time for post operator:                  2.344s
  Time for path formula creation:        2.276s
Time for strengthen operator:            0.063s
Time for prec operator:                 12.091s
  Time for abstraction:                 11.954s (Max:     0.335s, Count: 8394)
    Boolean abstraction:                 7.447s
    Solving time:                        8.993s (Max:     0.330s)
    Model enumeration time:              0.249s
    Time for BDD construction:           0.034s (Max:     0.006s)
Time for merge operator:                 0.108s
Time for coverage check:                 0.032s
  Time for BDD entailment checks:        0.029s
Total time for SMT solver (w/o itp):     9.242s

Number of path formula cache hits:   79595 (94%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     2.006s

Total number of created targets for pointer analysis: 10207
   Number of created targets for uf: *signed_int is 33
   Number of created targets for uf: *unsigned_char is 685
   Number of created targets for uf: *(struct_list_head)* is 2
   Number of created targets for uf: *unsigned_int is 2850


Number of BDD nodes:                               217
Size of BDD node table:                            464047
Size of BDD cache:                                 46411
Size of BDD node cleanup queue:                         904 (count: 7563, min: 0, max: 134, avg: 0.12)
Time for BDD node cleanup:                             0.002s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.137s
Automaton transfers with branching:                0
Automaton transfer successors:                        72028 (count: 72028, min: 1, max: 1, avg: 1.00) [1 x 72028]

CPA algorithm statistics
------------------------
Number of iterations:            46292
Max size of waitlist:            69
Average size of waitlist:        24
Number of computed successors:   55505
Max successors for one state:    2
Number of times merged:          5491
Number of times stopped:         6578
Number of times breaked:         67

Total time for CPA algorithm:        16.467s (Max:     1.126s)
  Time for choose from waitlist:      0.045s
  Time for precision adjustment:     12.463s
  Time for transfer relation:         3.287s
  Time for merge operator:            0.211s
  Time for stop operator:             0.099s
  Time for adding to reached set:     0.112s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   67
Avg. length of target path (in blocks):                 941 (count: 67, min: 6, max: 19, avg: 14.04)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   9.669s
  Counterexample analysis:                             9.477s (Max:     0.264s, Calls: 67)
    Refinement sat check:                              8.878s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.032s
  Precision update:                                    0.033s
  ARG update:                                          0.101s

Length of refined path (in blocks):                     874 (count: 67, min: 5, max: 18, avg: 13.04)
Number of affected states:                              731 (count: 67, min: 3, max: 16, avg: 10.91)
Length (states) of path with itp 'true':                 76 (count: 67, min: 1, max: 10, avg: 1.13)
Length (states) of path with itp non-trivial itp:       731 (count: 67, min: 3, max: 16, avg: 10.91)
Length (states) of path with itp 'false':                67 (count: 67, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 67, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:             664 (count: 67, min: 2, max: 15, avg: 9.91)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                67
Number of successful refinements:     67
Number of failed refinements:         0
Max. size of reached set before ref.: 1384
Max. size of reached set after ref.:  554
Avg. size of reached set before ref.: 720.33
Avg. size of reached set after ref.:  14.18

Total time for CEGAR algorithm:      26.249s
Time for refinements:                 9.771s
Average time for refinement:          0.145s
Max time for refinement:              0.269s

Code Coverage
-----------------------------
  Function coverage:      0.235
  Visited lines:          1043
  Total lines:            3050
  Line coverage:          0.342
  Visited conditions:     212
  Total conditions:       906
  Condition coverage:     0.234

CPAchecker general statistics
-----------------------------
Number of program locations:     4267
Number of CFA edges:             5026
Number of relevant variables:    590
Number of functions:             132
Number of loops:                 19
Size of reached set:             1278
  Number of reached locations:   509 (12%)
    Avg states per location:     2
    Max states per location:     41 (at node N1324)
  Number of reached functions:   31 (23%)
  Number of partitions:          1278
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0
  Size of final wait list        52

Time for analysis setup:          3.585s
  Time for loading CPAs:          0.568s
  Time for loading parser:        0.366s
  Time for CFA construction:      2.561s
    Time for parsing file(s):     0.639s
    Time for AST to CFA:          0.966s
    Time for CFA sanity check:    0.190s
    Time for post-processing:     0.640s
      Time for var class.:        0.382s
Time for Analysis:               26.249s
CPU time for analysis:           26.250s
Total time for CPAchecker:       29.837s
Total CPU time for CPAchecker:   29.830s
Time for statistics:              0.058s

Time for Garbage Collector:       0.247s (in 26 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                112MB (   107 MiB) max;     72MB (    68 MiB) avg;    120MB (   114 MiB) peak
Used non-heap memory:             40MB (    38 MiB) max;     36MB (    34 MiB) avg;     40MB (    38 MiB) peak
Allocated heap memory:           255MB (   243 MiB) max;    255MB (   243 MiB) avg
Allocated non-heap memory:        42MB (    40 MiB) max;     37MB (    36 MiB) avg
Total process virtual memory:  12146MB ( 11584 MiB) max;  12137MB ( 11575 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
