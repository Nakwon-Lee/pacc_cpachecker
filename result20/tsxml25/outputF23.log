scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 9600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-32_7a-drivers--media--tuners--tda18271.ko-ldv_main2_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 9600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_kj6_d2ml/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker 1.6.1-svn 6608050+ (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 4795: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 5973: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 8196: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 7059: Function pointer *(fe->callback) with type int (*)(void *, int, int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7187: Function pointer *(fe->ops.analog_ops.standby) with type void (*)(struct dvb_frontend *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_handler_precall to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function list_del to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

lines 5610-5611: Ignoring parameters passed as varargs to function _tda_printk: _tda_printk(priv, "\017", "tda18271_set_standby_mode", "sm = %d, sm_lt = %d, sm_xt = %d\n", sm, sm_lt, sm_xt) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

Assuming external function __builtin_va_start to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Cannot get declaration of function __builtin_va_start, ignoring calls to it. (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5899: Return type of function __builtin_va_end is void, but result is used as type int: __builtin_va_end((__va_list_tag *)(&args)); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function __builtin_va_end to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

lines 7261-7262: Ignoring parameters passed as varargs to function _tda_printk: _tda_printk(priv, "\017", "tda18271_set_analog_params", "setting tda18271 to system %s\n", mode) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

lines 7086-7087: Ignoring parameters passed as varargs to function _tda_printk: _tda_printk(priv, "\017", "tda18271_tune", "freq = %d, ifc = %d, bw = %d, agc_mode = %d, std = %d\n", freq, __CPAchecker_TMP_1, bw, __CPAchecker_TMP_2, __CPAchecker_TMP_3) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

line 7067: Ignoring parameters passed as varargs to function _tda_printk: _tda_printk(priv, "\v", "tda18271_agc", "unsupported configuration: %d\n", priv->config) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

line 7053: Ignoring parameters passed as varargs to function _tda_printk: _tda_printk(priv, "\017", "tda18271_agc", "invoking callback\n") (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

line 7059: Ignoring function call through function pointer *(fe->callback): ret = (*(fe->callback))(priv->i2c_props.adap->algo_data, 0, 0, __CPAchecker_TMP_2); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 7043: Ignoring parameters passed as varargs to function _tda_printk: _tda_printk(priv, "\017", "tda18271_agc", "no agc configuration provided\n") (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

line 7094: Ignoring parameters passed as varargs to function _tda_printk: _tda_printk(priv, "\v", "tda18271_tune", "error %d on line %d\n", ret, 945) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

line 7099: Ignoring parameters passed as varargs to function _tda_printk: _tda_printk(priv, "\f", "tda18271_tune", "failed to configure agc\n") (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

line 7182: Ignoring parameters passed as varargs to function _tda_printk: _tda_printk(priv, "\f", "tda18271_set_params", "modulation type not supported!\n") (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

line 7187: Ignoring function call through function pointer *(fe->ops.analog_ops.standby): (*(fe->ops.analog_ops.standby))(fe); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function i2c_unlock_adapter to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

lines 5362-5363: Ignoring parameters passed as varargs to function _tda_printk: _tda_printk(priv, "\v", "__tda18271_write_regs", "ERROR: idx = 0x%x, len = %d, i2c_transfer returned: %d\n", idx, max, ret) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

line 6987: Ignoring parameters passed as varargs to function _tda_printk: _tda_printk(priv, "\v", "tda18271_init", "error %d on line %d\n", ret, 871) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

lines 6085-6086: Ignoring parameters passed as varargs to function _tda_printk: _tda_printk(priv, "\v", "tda18271_toggle_output", "error %d on line %d\n", ret, 87) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

lines 6096-6098: Ignoring parameters passed as varargs to function _tda_printk: _tda_printk(priv, "\017", "tda18271_toggle_output", "%s mode: xtal oscillator %s, slave tuner loop thru %s\n", __CPAchecker_TMP_3, __CPAchecker_TMP_5, __CPAchecker_TMP_7) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

Assuming external function __i2c_transfer to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 7106: Ignoring parameters passed as varargs to function _tda_printk: _tda_printk(priv, "\v", "tda18271_tune", "error %d on line %d\n", ret, 949) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

lines 7269-7270: Ignoring parameters passed as varargs to function _tda_printk: _tda_printk(priv, "\v", "tda18271_set_analog_params", "error %d on line %d\n", ret, 1080) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

line 7194: Ignoring parameters passed as varargs to function _tda_printk: _tda_printk(priv, "\v", "tda18271_set_params", "error %d on line %d\n", ret, 1024) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

Recursion detected, aborting. To ignore recursion, add -skipRecursion to the command line. (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, INFO)

Error: line 7837: Unsupported feature (recursion): tda18271_init(fe); (CallstackTransferRelation.getAbstractSuccessorsForEdge, SEVERE)

PredicateCPA statistics
-----------------------
Number of abstractions:            12281 (16% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  11548 (94%)
  Because of loop head:            582 (5%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         151 (1%)
  Times precision was empty:       4688 (38%)
  Times precision was {false}:     199 (2%)
  Times result was cached:         6882 (56%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      512 (4%)
  Times result was 'false':        939 (8%)
Number of strengthen sat checks:   0
Number of coverage checks:         10026
  BDD entailment checks:           1930
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       39
Number of predicates discovered:          11
Number of abstraction locations:          73
Max number of predicates per location:    8
Avg number of predicates per location:    2
Total predicates per abstraction:         19560
Max number of predicates per abstraction: 9
Avg number of predicates per abstraction: 27.51
Number of irrelevant predicates:          9811 (50%)
Number of preds handled by boolean abs:   904 (5%)
  Total number of models for allsat:      504
  Max number of models for allsat:        2
  Avg number of models for allsat:        0.98

Time for post operator:                  2.647s
  Time for path formula creation:        2.593s
Time for strengthen operator:            0.060s
Time for prec operator:                 11.538s
  Time for abstraction:                 11.352s (Max:     0.279s, Count: 12281)
    Boolean abstraction:                 7.141s
    Solving time:                        8.819s (Max:     0.260s)
    Model enumeration time:              0.223s
    Time for BDD construction:           0.054s (Max:     0.012s)
Time for merge operator:                 0.107s
Time for coverage check:                 0.020s
  Time for BDD entailment checks:        0.018s
Total time for SMT solver (w/o itp):     9.042s

Number of path formula cache hits:   81598 (90%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     2.311s

Total number of created targets for pointer analysis: 26084
   Number of created targets for uf: *unsigned_short_int is 27
   Number of created targets for uf: *signed_int is 33
   Number of created targets for uf: *unsigned_char is 8209
   Number of created targets for uf: *(struct_list_head)* is 2
   Number of created targets for uf: *unsigned_int is 519


Number of BDD nodes:                               256
Size of BDD node table:                            464047
Size of BDD cache:                                 46411
Size of BDD node cleanup queue:                        1208 (count: 10919, min: 0, max: 123, avg: 0.11)
Time for BDD node cleanup:                             0.020s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.158s
Automaton transfers with branching:                0
Automaton transfer successors:                        77562 (count: 77562, min: 1, max: 1, avg: 1.00) [1 x 77562]

CPA algorithm statistics
------------------------
Number of iterations:            54002
Max size of waitlist:            44
Average size of waitlist:        18
Number of computed successors:   61803
Max successors for one state:    2
Number of times merged:          4048
Number of times stopped:         5460
Number of times breaked:         151

Total time for CPA algorithm:        16.516s (Max:     0.978s)
  Time for choose from waitlist:      0.063s
  Time for precision adjustment:     11.950s
  Time for transfer relation:         3.819s
  Time for merge operator:            0.189s
  Time for stop operator:             0.132s
  Time for adding to reached set:     0.101s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   151
Avg. length of target path (in blocks):                3255 (count: 151, min: 6, max: 38, avg: 21.56)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  23.177s
  Counterexample analysis:                            22.929s (Max:     0.376s, Calls: 151)
    Refinement sat check:                             21.539s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.001s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.038s
  Precision update:                                    0.027s
  ARG update:                                          0.136s

Length of refined path (in blocks):                    2881 (count: 151, min: 5, max: 36, avg: 19.08)
Number of affected states:                             1165 (count: 151, min: 0, max: 21, avg: 7.72)
Length (states) of path with itp 'true':               1565 (count: 151, min: 1, max: 31, avg: 10.36)
Length (states) of path with itp non-trivial itp:      1165 (count: 151, min: 0, max: 21, avg: 7.72)
Length (states) of path with itp 'false':               151 (count: 151, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 151, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:            1033 (count: 151, min: 0, max: 20, avg: 6.84)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                151
Number of successful refinements:     151
Number of failed refinements:         0
Max. size of reached set before ref.: 2560
Max. size of reached set after ref.:  2513
Avg. size of reached set before ref.: 1246.83
Avg. size of reached set after ref.:  892.17

Total time for CEGAR algorithm:      39.966s
Time for refinements:                23.391s
Average time for refinement:          0.154s
Max time for refinement:              0.384s

Code Coverage
-----------------------------
  Function coverage:      0.273
  Visited lines:          1079
  Total lines:            3050
  Line coverage:          0.354
  Visited conditions:     192
  Total conditions:       906
  Condition coverage:     0.212

CPAchecker general statistics
-----------------------------
Number of program locations:     4267
Number of CFA edges:             5026
Number of relevant variables:    590
Number of functions:             132
Number of loops:                 19
Size of reached set:             1852
  Number of reached locations:   501 (12%)
    Avg states per location:     3
    Max states per location:     58 (at node N1323)
  Number of reached functions:   36 (27%)
  Number of partitions:          1851
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N3333 (before line 8143), Function main called from node N3259, stack depth 1 [234c5e41], stack [main]])
  Number of target states:       0
  Size of final wait list        27

Time for analysis setup:          3.577s
  Time for loading CPAs:          0.544s
  Time for loading parser:        0.400s
  Time for CFA construction:      2.553s
    Time for parsing file(s):     0.616s
    Time for AST to CFA:          0.957s
    Time for CFA sanity check:    0.186s
    Time for post-processing:     0.671s
      Time for var class.:        0.386s
Time for Analysis:               39.967s
CPU time for analysis:           39.970s
Total time for CPAchecker:       43.545s
Total CPU time for CPAchecker:   43.540s
Time for statistics:              0.078s

Time for Garbage Collector:       0.239s (in 25 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                114MB (   109 MiB) max;     75MB (    71 MiB) avg;    119MB (   114 MiB) peak
Used non-heap memory:             40MB (    38 MiB) max;     36MB (    35 MiB) avg;     41MB (    39 MiB) peak
Allocated heap memory:           255MB (   243 MiB) max;    255MB (   243 MiB) avg
Allocated non-heap memory:        42MB (    40 MiB) max;     38MB (    37 MiB) avg
Total process virtual memory:  12077MB ( 11518 MiB) max;  12073MB ( 11514 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
