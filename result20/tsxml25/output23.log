scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 9600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-32_7a-drivers--media--tuners--tda18271.ko-ldv_main2_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 9600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_ui11lb8j/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker 1.6.1-svn 6608050+ (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 4795: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 5973: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 8196: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 7059: Function pointer *(fe->callback) with type int (*)(void *, int, int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7187: Function pointer *(fe->ops.analog_ops.standby) with type void (*)(struct dvb_frontend *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_handler_precall to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function list_del to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

lines 5610-5611: Ignoring parameters passed as varargs to function _tda_printk: _tda_printk(priv, "\017", "tda18271_set_standby_mode", "sm = %d, sm_lt = %d, sm_xt = %d\n", sm, sm_lt, sm_xt) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

Assuming external function __builtin_va_start to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Cannot get declaration of function __builtin_va_start, ignoring calls to it. (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5899: Return type of function __builtin_va_end is void, but result is used as type int: __builtin_va_end((__va_list_tag *)(&args)); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function __builtin_va_end to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

lines 7261-7262: Ignoring parameters passed as varargs to function _tda_printk: _tda_printk(priv, "\017", "tda18271_set_analog_params", "setting tda18271 to system %s\n", mode) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

lines 7086-7087: Ignoring parameters passed as varargs to function _tda_printk: _tda_printk(priv, "\017", "tda18271_tune", "freq = %d, ifc = %d, bw = %d, agc_mode = %d, std = %d\n", freq, __CPAchecker_TMP_1, bw, __CPAchecker_TMP_2, __CPAchecker_TMP_3) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

line 7067: Ignoring parameters passed as varargs to function _tda_printk: _tda_printk(priv, "\v", "tda18271_agc", "unsupported configuration: %d\n", priv->config) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

line 7053: Ignoring parameters passed as varargs to function _tda_printk: _tda_printk(priv, "\017", "tda18271_agc", "invoking callback\n") (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

line 7059: Ignoring function call through function pointer *(fe->callback): ret = (*(fe->callback))(priv->i2c_props.adap->algo_data, 0, 0, __CPAchecker_TMP_2); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 7043: Ignoring parameters passed as varargs to function _tda_printk: _tda_printk(priv, "\017", "tda18271_agc", "no agc configuration provided\n") (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

line 7094: Ignoring parameters passed as varargs to function _tda_printk: _tda_printk(priv, "\v", "tda18271_tune", "error %d on line %d\n", ret, 945) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

line 7099: Ignoring parameters passed as varargs to function _tda_printk: _tda_printk(priv, "\f", "tda18271_tune", "failed to configure agc\n") (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

line 7182: Ignoring parameters passed as varargs to function _tda_printk: _tda_printk(priv, "\f", "tda18271_set_params", "modulation type not supported!\n") (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

line 7187: Ignoring function call through function pointer *(fe->ops.analog_ops.standby): (*(fe->ops.analog_ops.standby))(fe); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function i2c_unlock_adapter to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

lines 5362-5363: Ignoring parameters passed as varargs to function _tda_printk: _tda_printk(priv, "\v", "__tda18271_write_regs", "ERROR: idx = 0x%x, len = %d, i2c_transfer returned: %d\n", idx, max, ret) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

line 6987: Ignoring parameters passed as varargs to function _tda_printk: _tda_printk(priv, "\v", "tda18271_init", "error %d on line %d\n", ret, 871) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            9917 (15% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  9443 (95%)
  Because of loop head:            385 (4%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         89 (1%)
  Times precision was empty:       3574 (36%)
  Times precision was {false}:     163 (2%)
  Times result was cached:         5771 (58%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      409 (4%)
  Times result was 'false':        845 (9%)
Number of strengthen sat checks:   0
Number of coverage checks:         8381
  BDD entailment checks:           1547
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       39
Number of predicates discovered:          9
Number of abstraction locations:          64
Max number of predicates per location:    8
Avg number of predicates per location:    2
Total predicates per abstraction:         15890
Max number of predicates per abstraction: 8
Avg number of predicates per abstraction: 27.78
Number of irrelevant predicates:          7181 (45%)
Number of preds handled by boolean abs:   744 (5%)
  Total number of models for allsat:      399
  Max number of models for allsat:        1
  Avg number of models for allsat:        0.98

Time for post operator:                  2.557s
  Time for path formula creation:        2.510s
Time for strengthen operator:            0.103s
Time for prec operator:                 10.760s
  Time for abstraction:                 10.513s (Max:     0.286s, Count: 9917)
    Boolean abstraction:                 6.967s
    Solving time:                        8.255s (Max:     0.268s)
    Model enumeration time:              0.234s
    Time for BDD construction:           0.020s (Max:     0.003s)
Time for merge operator:                 0.057s
Time for coverage check:                 0.020s
  Time for BDD entailment checks:        0.020s
Total time for SMT solver (w/o itp):     8.489s

Number of path formula cache hits:   69488 (92%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     2.160s

Total number of created targets for pointer analysis: 23701
   Number of created targets for uf: *signed_int is 33
   Number of created targets for uf: *unsigned_char is 8209
   Number of created targets for uf: *(struct_list_head)* is 2
   Number of created targets for uf: *unsigned_int is 2332


Number of BDD nodes:                               250
Size of BDD node table:                            464047
Size of BDD cache:                                 46411
Size of BDD node cleanup queue:                         946 (count: 8590, min: 0, max: 123, avg: 0.11)
Time for BDD node cleanup:                             0.007s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.135s
Automaton transfers with branching:                0
Automaton transfer successors:                        64001 (count: 64001, min: 1, max: 1, avg: 1.00) [1 x 64001]

CPA algorithm statistics
------------------------
Number of iterations:            44088
Max size of waitlist:            44
Average size of waitlist:        16
Number of computed successors:   50566
Max successors for one state:    2
Number of times merged:          3417
Number of times stopped:         4559
Number of times breaked:         89

Total time for CPA algorithm:        15.405s (Max:     0.941s)
  Time for choose from waitlist:      0.052s
  Time for precision adjustment:     11.073s
  Time for transfer relation:         3.674s
  Time for merge operator:            0.150s
  Time for stop operator:             0.118s
  Time for adding to reached set:     0.082s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   89
Avg. length of target path (in blocks):                1222 (count: 89, min: 6, max: 30, avg: 13.73)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  11.307s
  Counterexample analysis:                            11.142s (Max:     0.270s, Calls: 89)
    Refinement sat check:                             10.427s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.036s
  Precision update:                                    0.014s
  ARG update:                                          0.091s

Length of refined path (in blocks):                    1067 (count: 88, min: 5, max: 25, avg: 12.13)
Number of affected states:                              606 (count: 88, min: 0, max: 18, avg: 6.89)
Length (states) of path with itp 'true':                373 (count: 88, min: 1, max: 24, avg: 4.24)
Length (states) of path with itp non-trivial itp:       606 (count: 88, min: 0, max: 18, avg: 6.89)
Length (states) of path with itp 'false':                88 (count: 88, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 88, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:             521 (count: 88, min: 0, max: 17, avg: 5.92)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                89
Number of successful refinements:     88
Number of failed refinements:         0
Max. size of reached set before ref.: 2560
Max. size of reached set after ref.:  2513
Avg. size of reached set before ref.: 729.80
Avg. size of reached set after ref.:  224.88

Total time for CEGAR algorithm:      26.839s
Time for refinements:                11.420s
Average time for refinement:          0.128s
Max time for refinement:              0.273s

Code Coverage
-----------------------------
  Function coverage:      0.273
  Visited lines:          1010
  Total lines:            3050
  Line coverage:          0.331
  Visited conditions:     170
  Total conditions:       906
  Condition coverage:     0.188

CPAchecker general statistics
-----------------------------
Number of program locations:     4267
Number of CFA edges:             5026
Number of relevant variables:    590
Number of functions:             132
Number of loops:                 19
Size of reached set:             2560
  Number of reached locations:   455 (11%)
    Avg states per location:     5
    Max states per location:     92 (at node N1323)
  Number of reached functions:   36 (27%)
  Number of partitions:          2555
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N2580 (after lines 7261-7262), Function tda18271_set_analog_params called from node N3306, stack depth 2 [414331e4], stack [main, tda18271_set_analog_params]])
  Number of target states:       1
  Size of final wait list        37

Time for analysis setup:          3.539s
  Time for loading CPAs:          0.550s
  Time for loading parser:        0.421s
  Time for CFA construction:      2.497s
    Time for parsing file(s):     0.565s
    Time for AST to CFA:          0.958s
    Time for CFA sanity check:    0.186s
    Time for post-processing:     0.657s
      Time for var class.:        0.369s
Time for Analysis:               26.839s
CPU time for analysis:           26.850s
Total time for CPAchecker:       30.380s
Total CPU time for CPAchecker:   30.370s
Time for statistics:              0.100s

Time for Garbage Collector:       0.215s (in 20 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                111MB (   106 MiB) max;     72MB (    68 MiB) avg;    119MB (   114 MiB) peak
Used non-heap memory:             40MB (    38 MiB) max;     35MB (    33 MiB) avg;     40MB (    38 MiB) peak
Allocated heap memory:           255MB (   243 MiB) max;    255MB (   243 MiB) avg
Allocated non-heap memory:        41MB (    39 MiB) max;     37MB (    35 MiB) avg
Total process virtual memory:  12080MB ( 11520 MiB) max;  12071MB ( 11512 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
