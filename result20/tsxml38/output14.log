scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 9600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-32_7a-drivers--video--smscufx.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 9600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_c_wn99ba/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker 1.6.1-svn 6608050+ (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 7471: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_handler_precall to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_sys_write to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function down_timeout to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_submit_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __list_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function schedule_delayed_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function up to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __list_del_entry to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sys_fillrect to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sys_copyarea to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sys_imageblit to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_pr_debug to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function vmalloc_to_pfn to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function remap_pfn_range to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function might_fault to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _copy_to_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_deferred_io_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_deferred_io_cleanup to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function down_interruptible to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_free_coherent to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_free_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_control_msg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function msleep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_var_to_videomode to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_dealloc_cmap to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_destroy_modedb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function vfree to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_destroy_modelist to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function framebuffer_release to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value_probe to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            57426 (22% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  47125 (82%)
  Because of loop head:            10274 (18%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         27 (0%)
  Times precision was empty:       36480 (64%)
  Times precision was {false}:     1654 (3%)
  Times result was cached:         19147 (33%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      145 (0%)
  Times result was 'false':        4 (0%)
Number of strengthen sat checks:   0
Number of coverage checks:         29785
  BDD entailment checks:           13127
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       40
Number of predicates discovered:          2
Number of abstraction locations:          116
Max number of predicates per location:    1
Avg number of predicates per location:    1
Total predicates per abstraction:         20946
Max number of predicates per abstraction: 1
Avg number of predicates per abstraction: 11.64
Number of irrelevant predicates:          15798 (75%)
Number of preds handled by boolean abs:   145 (1%)
  Total number of models for allsat:      145
  Max number of models for allsat:        1
  Avg number of models for allsat:        1.00

Time for post operator:                 13.344s
  Time for path formula creation:       13.179s
Time for strengthen operator:            0.240s
Time for prec operator:                  4.928s
  Time for abstraction:                  4.294s (Max:     0.030s, Count: 57426)
    Boolean abstraction:                 0.081s
    Solving time:                        1.129s (Max:     0.015s)
    Model enumeration time:              0.012s
    Time for BDD construction:           0.003s (Max:     0.001s)
Time for merge operator:                 0.436s
Time for coverage check:                 0.036s
  Time for BDD entailment checks:        0.032s
Total time for SMT solver (w/o itp):     1.141s

Number of path formula cache hits:   51214 (19%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    12.647s

Total number of created targets for pointer analysis: 73251
   Number of created targets for uf: *unsigned_int is 359


Number of BDD nodes:                               202
Size of BDD node table:                            464047
Size of BDD cache:                                 46411
Size of BDD node cleanup queue:                         283 (count: 58750, min: 0, max: 30, avg: 0.00)
Time for BDD node cleanup:                             0.008s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.427s
Automaton transfers with branching:                0
Automaton transfer successors:                       265346 (count: 265400, min: 0, max: 1, avg: 1.00) [0 x 54, 1 x 265346]

CPA algorithm statistics
------------------------
Number of iterations:            179480
Max size of waitlist:            54
Average size of waitlist:        26
Number of computed successors:   200833
Max successors for one state:    2
Number of times merged:          8329
Number of times stopped:         20835
Number of times breaked:         27

Total time for CPA algorithm:        25.632s (Max:     2.782s)
  Time for choose from waitlist:      0.137s
  Time for precision adjustment:      6.516s
  Time for transfer relation:        16.768s
  Time for merge operator:            0.666s
  Time for stop operator:             0.312s
  Time for adding to reached set:     0.377s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   27
Avg. length of target path (in blocks):                 787 (count: 27, min: 16, max: 55, avg: 29.15)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.685s
  Counterexample analysis:                             0.196s (Max:     0.018s, Calls: 27)
    Refinement sat check:                              0.139s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.001s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.059s
  Precision update:                                    0.006s
  ARG update:                                          0.404s

Length of refined path (in blocks):                     760 (count: 27, min: 15, max: 54, avg: 28.15)
Number of affected states:                              706 (count: 27, min: 13, max: 52, avg: 26.15)
Length (states) of path with itp 'true':                 27 (count: 27, min: 1, max: 1, avg: 1.00)
Length (states) of path with itp non-trivial itp:       706 (count: 27, min: 13, max: 52, avg: 26.15)
Length (states) of path with itp 'false':                27 (count: 27, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 27, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:             679 (count: 27, min: 12, max: 51, avg: 25.15)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                27
Number of successful refinements:     27
Number of failed refinements:         0
Max. size of reached set before ref.: 7248
Max. size of reached set after ref.:  6
Avg. size of reached set before ref.: 6549.00
Avg. size of reached set after ref.:  6.00

Total time for CEGAR algorithm:      26.469s
Time for refinements:                 0.836s
Average time for refinement:          0.030s
Max time for refinement:              0.096s

Code Coverage
-----------------------------
  Function coverage:      0.424
  Visited lines:          1403
  Total lines:            3007
  Line coverage:          0.467
  Visited conditions:     219
  Total conditions:       782
  Condition coverage:     0.280

CPAchecker general statistics
-----------------------------
Number of program locations:     4028
Number of CFA edges:             4596
Number of relevant variables:    609
Number of functions:             118
Number of loops:                 31
Size of reached set:             3333
  Number of reached locations:   660 (16%)
    Avg states per location:     5
    Max states per location:     92 (at node N3229)
  Number of reached functions:   50 (42%)
  Number of partitions:          3321
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N3137 (before line 7418), Function main called from node N3012, stack depth 1 [6ba30587], stack [main]])
  Number of target states:       0
  Size of final wait list        36

Time for analysis setup:          3.390s
  Time for loading CPAs:          0.570s
  Time for loading parser:        0.445s
  Time for CFA construction:      2.308s
    Time for parsing file(s):     0.589s
    Time for AST to CFA:          0.774s
    Time for CFA sanity check:    0.198s
    Time for post-processing:     0.599s
      Time for var class.:        0.317s
Time for Analysis:               26.469s
CPU time for analysis:           26.470s
Total time for CPAchecker:       29.860s
Total CPU time for CPAchecker:   29.860s
Time for statistics:              0.090s

Time for Garbage Collector:       1.198s (in 58 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                192MB (   183 MiB) max;    101MB (    96 MiB) avg;    208MB (   199 MiB) peak
Used non-heap memory:             41MB (    39 MiB) max;     37MB (    35 MiB) avg;     41MB (    39 MiB) peak
Allocated heap memory:           255MB (   243 MiB) max;    255MB (   243 MiB) avg
Allocated non-heap memory:        43MB (    41 MiB) max;     39MB (    37 MiB) avg
Total process virtual memory:  12147MB ( 11584 MiB) max;  12137MB ( 11575 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
