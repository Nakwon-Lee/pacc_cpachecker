scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 9600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-32_7a-drivers--video--smscufx.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 9600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_132objcz/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker 1.6.1-svn 6608050+ (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 7471: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_handler_precall to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_dealloc_cmap to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_destroy_modedb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function vfree to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_destroy_modelist to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function framebuffer_release to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_pr_debug to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function down_interruptible to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __list_del_entry to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_free_coherent to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_free_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_dev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __raw_spin_lock_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __init_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function lockdep_init_map to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function init_timer_key to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_alloc_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_alloc_coherent to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __list_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function framebuffer_alloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_alloc_cmap to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_control_msg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function msleep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_edid_to_monspecs to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_videomode_to_var to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function vmalloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_find_best_display to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_add_videomode to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_find_nearest_mode to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_var_to_videomode to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function down_timeout to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_submit_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function schedule_delayed_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function up to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function register_framebuffer to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _dev_info to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function might_fault to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _copy_to_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_deferred_io_cleanup to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_sys_write to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_deferred_io_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function vmalloc_to_pfn to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function remap_pfn_range to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sys_imageblit to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sys_copyarea to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sys_fillrect to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value_probe to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            3396751 (20% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  2755522 (81%)
  Because of loop head:            633163 (19%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         8066 (0%)
  Times precision was empty:       599298 (18%)
  Times precision was {false}:     5047 (0%)
  Times result was cached:         2788623 (82%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      3783 (0%)
  Times result was 'false':        68018 (2%)
Number of strengthen sat checks:   0
Number of coverage checks:         2430706
  BDD entailment checks:           1083490
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       40
Number of predicates discovered:          10
Number of abstraction locations:          193
Max number of predicates per location:    8
Avg number of predicates per location:    1
Total predicates per abstraction:         9315354
Max number of predicates per abstraction: 8
Avg number of predicates per abstraction: 1054.97
Number of irrelevant predicates:          2773709 (30%)
Number of preds handled by boolean abs:   6691 (0%)
  Total number of models for allsat:      4546
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.20

Time for post operator:                 46.743s
  Time for path formula creation:       43.816s
Time for strengthen operator:            7.232s
Time for prec operator:                319.787s
  Time for abstraction:                299.762s (Max:     0.054s, Count: 3396751)
    Boolean abstraction:                 3.142s
    Solving time:                        7.253s (Max:     0.041s)
    Model enumeration time:              0.388s
    Time for BDD construction:           0.080s (Max:     0.009s)
Time for merge operator:                 2.830s
Time for coverage check:                 0.518s
  Time for BDD entailment checks:        0.405s
Total time for SMT solver (w/o itp):     7.641s

Number of path formula cache hits:   21063023 (99%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     8.053s

Total number of created targets for pointer analysis: 78720
   Number of created targets for uf: *signed_int is 16
   Number of created targets for uf: *(struct_usb_device)* is 5
   Number of created targets for uf: *(struct_urb)* is 13
   Number of created targets for uf: *(struct_list_head)* is 904
   Number of created targets for uf: *(unsigned_char)* is 59
   Number of created targets for uf: *(struct_ufx_data)* is 13
   Number of created targets for uf: *unsigned_int is 79
   Number of created targets for uf: *unsigned_long_int is 25
   Number of created targets for uf: *(struct_fb_info)* is 7


Number of BDD nodes:                               268
Size of BDD node table:                            464047
Size of BDD cache:                                 46411
Size of BDD node cleanup queue:                        7655 (count: 1754731, min: 0, max: 556, avg: 0.00)
Time for BDD node cleanup:                             0.146s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                 10.334s
  Time for transition matches:                         6.374s
  Time for transition assertions:                      0.002s
  Time for transition actions:                         0.017s
Automaton transfers with branching:                0
Automaton transfer successors:                     17221378 (count: 17221382, min: 0, max: 1, avg: 1.00) [0 x 4, 1 x 17221378]

CPA algorithm statistics
------------------------
Number of iterations:            11771139
Max size of waitlist:            46
Average size of waitlist:        31
Number of computed successors:   13334217
Max successors for one state:    2
Number of times merged:          673608
Number of times stopped:         1462738
Number of times breaked:         8066

Total time for CPA algorithm:       545.344s (Max:     2.401s)
  Time for choose from waitlist:      2.432s
  Time for precision adjustment:    360.728s
  Time for transfer relation:       143.016s
  Time for merge operator:            7.511s
  Time for stop operator:             7.524s
  Time for adding to reached set:     9.743s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   8066
Avg. length of target path (in blocks):             1278440 (count: 8066, min: 16, max: 276, avg: 158.50)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                 308.774s
  Counterexample analysis:                           293.678s (Max:     0.094s, Calls: 8066)
    Refinement sat check:                            129.923s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.343s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.843s
  Precision update:                                    1.326s
  ARG update:                                          9.904s

Length of refined path (in blocks):                 1251929 (count: 8065, min: 15, max: 275, avg: 155.23)
Number of affected states:                           214234 (count: 8065, min: 0, max: 273, avg: 26.56)
Length (states) of path with itp 'true':            1029630 (count: 8065, min: 1, max: 146, avg: 127.67)
Length (states) of path with itp non-trivial itp:    214234 (count: 8065, min: 0, max: 273, avg: 26.56)
Length (states) of path with itp 'false':              8065 (count: 8065, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           2 (count: 8065, min: 0, max: 1, avg: 0.00)
Equal non-trivial interpolants along paths:          206715 (count: 8065, min: 0, max: 272, avg: 25.63)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                8066
Number of successful refinements:     8065
Number of failed refinements:         0
Max. size of reached set before ref.: 17495
Max. size of reached set after ref.:  7259
Avg. size of reached set before ref.: 6902.59
Avg. size of reached set after ref.:  5439.91

Total time for CEGAR algorithm:     897.292s
Time for refinements:               336.947s
Average time for refinement:          0.041s
Max time for refinement:              0.112s

Code Coverage
-----------------------------
  Function coverage:      0.508
  Visited lines:          1696
  Total lines:            3007
  Line coverage:          0.564
  Visited conditions:     313
  Total conditions:       782
  Condition coverage:     0.400

CPAchecker general statistics
-----------------------------
Number of program locations:     4028
Number of CFA edges:             4596
Number of relevant variables:    609
Number of functions:             118
Number of loops:                 31
Size of reached set:             5208
  Number of reached locations:   949 (24%)
    Avg states per location:     5
    Max states per location:     216 (at node N3229)
  Number of reached functions:   60 (51%)
  Number of partitions:          5193
    Avg size of partitions:      1
    Max size of partitions:      4 (with key [N2315 (before line 6525), Function ufx_setup_modes called from node N2650, stack depth 3 [210efbf6], stack [main, ufx_usb_probe, ufx_setup_modes]])
  Number of target states:       1
  Size of final wait list        29

Time for analysis setup:          3.078s
  Time for loading CPAs:          0.511s
  Time for loading parser:        0.368s
  Time for CFA construction:      2.148s
    Time for parsing file(s):     0.558s
    Time for AST to CFA:          0.694s
    Time for CFA sanity check:    0.168s
    Time for post-processing:     0.559s
      Time for var class.:        0.295s
Time for Analysis:              897.292s
CPU time for analysis:          897.270s
Total time for CPAchecker:      900.374s
Total CPU time for CPAchecker:  900.340s
Time for statistics:              0.102s

Time for Garbage Collector:      14.946s (in 3917 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                249MB (   238 MiB) max;    155MB (   148 MiB) avg;    257MB (   245 MiB) peak
Used non-heap memory:             42MB (    40 MiB) max;     40MB (    38 MiB) avg;     43MB (    41 MiB) peak
Allocated heap memory:           255MB (   243 MiB) max;    255MB (   243 MiB) avg
Allocated non-heap memory:        45MB (    43 MiB) max;     44MB (    42 MiB) avg
Total process virtual memory:  12282MB ( 11713 MiB) max;  12220MB ( 11654 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
