scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 9600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-32_7a-drivers--video--smscufx.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 9600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_lhbdsgbg/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker 1.6.1-svn 6608050+ (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 7471: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_handler_precall to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sys_fillrect to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sys_copyarea to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sys_imageblit to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_var_to_videomode to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_pr_debug to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function schedule_delayed_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_sys_write to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_deferred_io_cleanup to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_deferred_io_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function vmalloc_to_pfn to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function remap_pfn_range to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function down_interruptible to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __list_del_entry to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_free_coherent to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_free_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function might_fault to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _copy_to_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function down_timeout to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_submit_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __list_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function up to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_control_msg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function msleep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_dealloc_cmap to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_destroy_modedb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function vfree to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_destroy_modelist to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function framebuffer_release to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value_probe to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_dev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __raw_spin_lock_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function lockdep_init_map to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __init_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function init_timer_key to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_alloc_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_alloc_coherent to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function framebuffer_alloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_alloc_cmap to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_edid_to_monspecs to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_videomode_to_var to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_find_nearest_mode to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_add_videomode to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function vmalloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_find_best_display to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function register_framebuffer to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _dev_info to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            1227049 (21% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  1033699 (84%)
  Because of loop head:            192232 (16%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         1118 (0%)
  Times precision was empty:       146166 (12%)
  Times precision was {false}:     3358 (0%)
  Times result was cached:         1060469 (86%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      17056 (1%)
  Times result was 'false':        14471 (1%)
Number of strengthen sat checks:   0
Number of coverage checks:         652024
  BDD entailment checks:           268262
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       40
Number of predicates discovered:          12
Number of abstraction locations:          352
Max number of predicates per location:    10
Avg number of predicates per location:    4
Total predicates per abstraction:         5096407
Max number of predicates per abstraction: 10
Avg number of predicates per abstraction: 249.65
Number of irrelevant predicates:          800799 (16%)
Number of preds handled by boolean abs:   49579 (1%)
  Total number of models for allsat:      17280
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.01

Time for post operator:                 16.250s
  Time for path formula creation:       15.219s
Time for strengthen operator:            2.954s
Time for prec operator:                202.361s
  Time for abstraction:                195.159s (Max:     2.142s, Count: 1227049)
    Boolean abstraction:                43.838s
    Solving time:                       44.010s (Max:     2.093s)
    Model enumeration time:              1.542s
    Time for BDD construction:           0.283s (Max:     0.012s)
Time for merge operator:                 0.822s
Time for coverage check:                 0.202s
  Time for BDD entailment checks:        0.154s
Total time for SMT solver (w/o itp):    45.552s

Number of path formula cache hits:   7112140 (98%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     6.218s

Total number of created targets for pointer analysis: 43933
   Number of created targets for uf: *signed_int is 90
   Number of created targets for uf: *(struct_usb_device)* is 2
   Number of created targets for uf: *(struct_urb)* is 4
   Number of created targets for uf: *(struct_list_head)* is 13
   Number of created targets for uf: *(unsigned_char)* is 33
   Number of created targets for uf: *(struct_ufx_data)* is 4
   Number of created targets for uf: *unsigned_int is 295
   Number of created targets for uf: *(struct_fb_info)* is 5
   Number of created targets for uf: *unsigned_long_int is 3


Number of BDD nodes:                               533
Size of BDD node table:                            464047
Size of BDD cache:                                 46411
Size of BDD node cleanup queue:                       34446 (count: 536238, min: 0, max: 552, avg: 0.06)
Time for BDD node cleanup:                             0.041s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  3.843s
  Time for transition matches:                         2.299s
  Time for transition assertions:                      0.001s
  Time for transition actions:                         0.016s
Automaton transfers with branching:                0
Automaton transfer successors:                      5840697 (count: 5841290, min: 0, max: 1, avg: 1.00) [0 x 593, 1 x 5840697]

CPA algorithm statistics
------------------------
Number of iterations:            3923879
Max size of waitlist:            23
Average size of waitlist:        5
Number of computed successors:   4383024
Max successors for one state:    2
Number of times merged:          191881
Number of times stopped:         433957
Number of times breaked:         1118

Total time for CPA algorithm:       284.706s (Max:     2.836s)
  Time for choose from waitlist:      0.906s
  Time for precision adjustment:    217.905s
  Time for transfer relation:        51.215s
  Time for merge operator:            2.383s
  Time for stop operator:             3.096s
  Time for adding to reached set:     3.544s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   1118
Avg. length of target path (in blocks):              143324 (count: 1118, min: 6, max: 266, avg: 128.20)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  32.726s
  Counterexample analysis:                            27.479s (Max:     0.070s, Calls: 1118)
    Refinement sat check:                             13.865s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.035s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.399s
  Precision update:                                    0.722s
  ARG update:                                          3.483s

Length of refined path (in blocks):                  141348 (count: 1118, min: 5, max: 265, avg: 126.43)
Number of affected states:                            83800 (count: 1118, min: 2, max: 263, avg: 74.96)
Length (states) of path with itp 'true':              56430 (count: 1118, min: 1, max: 131, avg: 50.47)
Length (states) of path with itp non-trivial itp:     83800 (count: 1118, min: 2, max: 263, avg: 74.96)
Length (states) of path with itp 'false':              1118 (count: 1118, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           3 (count: 1118, min: 0, max: 1, avg: 0.00)
Equal non-trivial interpolants along paths:           82679 (count: 1118, min: 1, max: 262, avg: 73.95)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                1118
Number of successful refinements:     1118
Number of failed refinements:         0
Max. size of reached set before ref.: 13035
Max. size of reached set after ref.:  10964
Avg. size of reached set before ref.: 8204.04
Avg. size of reached set after ref.:  4698.46

Total time for CEGAR algorithm:     323.944s
Time for refinements:                37.281s
Average time for refinement:          0.033s
Max time for refinement:              0.250s

Code Coverage
-----------------------------
  Function coverage:      0.661
  Visited lines:          2699
  Total lines:            3007
  Line coverage:          0.898
  Visited conditions:     669
  Total conditions:       782
  Condition coverage:     0.855

CPAchecker general statistics
-----------------------------
Number of program locations:     4028
Number of CFA edges:             4596
Number of relevant variables:    609
Number of functions:             118
Number of loops:                 31
Size of reached set:             15351
  Number of reached locations:   1868 (46%)
    Avg states per location:     8
    Max states per location:     615 (at node N3229)
  Number of reached functions:   78 (66%)
  Number of partitions:          15330
    Avg size of partitions:      1
    Max size of partitions:      4 (with key [N2265 (before line 6471), Function ufx_setup_modes called from node N2650, stack depth 3 [23fc4f72], stack [main, ufx_usb_probe, ufx_setup_modes]])
  Number of target states:       0

Time for analysis setup:          3.275s
  Time for loading CPAs:          0.548s
  Time for loading parser:        0.393s
  Time for CFA construction:      2.275s
    Time for parsing file(s):     0.585s
    Time for AST to CFA:          0.746s
    Time for CFA sanity check:    0.212s
    Time for post-processing:     0.582s
      Time for var class.:        0.320s
Time for Analysis:              323.944s
CPU time for analysis:          323.920s
Time for analyzing result:        0.008s
Total time for CPAchecker:      327.221s
Total CPU time for CPAchecker:  327.200s
Time for statistics:              0.212s

Time for Garbage Collector:      10.912s (in 1467 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                250MB (   238 MiB) max;    128MB (   122 MiB) avg;    256MB (   244 MiB) peak
Used non-heap memory:             41MB (    39 MiB) max;     40MB (    38 MiB) avg;     42MB (    40 MiB) peak
Allocated heap memory:           255MB (   243 MiB) max;    255MB (   243 MiB) avg
Allocated non-heap memory:        43MB (    41 MiB) max;     42MB (    40 MiB) avg
Total process virtual memory:  12350MB ( 11778 MiB) max;  12197MB ( 11632 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
