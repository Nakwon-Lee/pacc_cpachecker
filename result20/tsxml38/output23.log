scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 9600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-32_7a-drivers--video--smscufx.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 9600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_34o330ad/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker 1.6.1-svn 6608050+ (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 7471: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_handler_precall to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function schedule_delayed_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_deferred_io_cleanup to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sys_imageblit to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sys_copyarea to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sys_fillrect to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_sys_write to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_pr_debug to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_var_to_videomode to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function vmalloc_to_pfn to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function remap_pfn_range to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function might_fault to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _copy_to_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_dealloc_cmap to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_destroy_modedb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function vfree to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_destroy_modelist to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function framebuffer_release to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value_probe to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function down_timeout to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_deferred_io_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_dev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __raw_spin_lock_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function lockdep_init_map to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function framebuffer_alloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_alloc_cmap to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __init_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function init_timer_key to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_control_msg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_alloc_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_alloc_coherent to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_free_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __list_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __list_del_entry to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_submit_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            72231 (15% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  63264 (88%)
  Because of loop head:            8611 (12%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         356 (0%)
  Times precision was empty:       15885 (22%)
  Times precision was {false}:     608 (1%)
  Times result was cached:         53883 (75%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      1855 (3%)
  Times result was 'false':        1626 (2%)
Number of strengthen sat checks:   0
Number of coverage checks:         52597
  BDD entailment checks:           15137
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       40
Number of predicates discovered:          6
Number of abstraction locations:          163
Max number of predicates per location:    5
Avg number of predicates per location:    3
Total predicates per abstraction:         197897
Max number of predicates per abstraction: 5
Avg number of predicates per abstraction: 80.35
Number of irrelevant predicates:          108243 (55%)
Number of preds handled by boolean abs:   4271 (2%)
  Total number of models for allsat:      1850
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.00

Time for post operator:                  3.532s
  Time for path formula creation:        3.348s
Time for strengthen operator:            0.349s
Time for prec operator:                 10.980s
  Time for abstraction:                 10.357s (Max:     0.033s, Count: 72231)
    Boolean abstraction:                 1.410s
    Solving time:                        1.511s (Max:     0.029s)
    Model enumeration time:              0.084s
    Time for BDD construction:           0.103s (Max:     0.009s)
Time for merge operator:                 0.159s
Time for coverage check:                 0.063s
  Time for BDD entailment checks:        0.049s
Total time for SMT solver (w/o itp):     1.595s

Number of path formula cache hits:   534773 (96%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     2.514s

Total number of created targets for pointer analysis: 2190
   Number of created targets for uf: *signed_int is 47
   Number of created targets for uf: *(struct_usb_device)* is 2
   Number of created targets for uf: *(struct_urb)* is 2
   Number of created targets for uf: *(struct_list_head)* is 15
   Number of created targets for uf: *(struct_ufx_data)* is 2
   Number of created targets for uf: *unsigned_int is 14
   Number of created targets for uf: *(struct_fb_info)* is 5
   Number of created targets for uf: *unsigned_long_int is 3


Number of BDD nodes:                               240
Size of BDD node table:                            464047
Size of BDD cache:                                 46411
Size of BDD node cleanup queue:                        3780 (count: 45279, min: 0, max: 218, avg: 0.08)
Time for BDD node cleanup:                             0.002s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.685s
  Time for transition matches:                         0.388s
  Time for transition assertions:                      0.003s
  Time for transition actions:                         0.000s
Automaton transfers with branching:                0
Automaton transfer successors:                       471497 (count: 471631, min: 0, max: 1, avg: 1.00) [0 x 134, 1 x 471497]

CPA algorithm statistics
------------------------
Number of iterations:            255920
Max size of waitlist:            67
Average size of waitlist:        25
Number of computed successors:   296133
Max successors for one state:    2
Number of times merged:          18730
Number of times stopped:         27658
Number of times breaked:         356

Total time for CPA algorithm:        22.139s (Max:     0.570s)
  Time for choose from waitlist:      0.208s
  Time for precision adjustment:     12.416s
  Time for transfer relation:         7.418s
  Time for merge operator:            0.471s
  Time for stop operator:             0.378s
  Time for adding to reached set:     0.368s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   356
Avg. length of target path (in blocks):               16243 (count: 356, min: 6, max: 91, avg: 45.63)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   3.900s
  Counterexample analysis:                             3.028s (Max:     0.033s, Calls: 356)
    Refinement sat check:                              1.974s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.002s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.145s
  Precision update:                                    0.143s
  ARG update:                                          0.448s

Length of refined path (in blocks):                   15449 (count: 356, min: 5, max: 88, avg: 43.40)
Number of affected states:                            12328 (count: 356, min: 3, max: 86, avg: 34.63)
Length (states) of path with itp 'true':               2765 (count: 356, min: 1, max: 12, avg: 7.77)
Length (states) of path with itp non-trivial itp:     12328 (count: 356, min: 3, max: 86, avg: 34.63)
Length (states) of path with itp 'false':               356 (count: 356, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 356, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:           11972 (count: 356, min: 2, max: 85, avg: 33.63)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                356
Number of successful refinements:     356
Number of failed refinements:         0
Max. size of reached set before ref.: 2895
Max. size of reached set after ref.:  1650
Avg. size of reached set before ref.: 1240.88
Avg. size of reached set after ref.:  493.17

Total time for CEGAR algorithm:      26.535s
Time for refinements:                 4.253s
Average time for refinement:          0.011s
Max time for refinement:              0.036s

Code Coverage
-----------------------------
  Function coverage:      0.331
  Visited lines:          1178
  Total lines:            3007
  Line coverage:          0.392
  Visited conditions:     158
  Total conditions:       782
  Condition coverage:     0.202

CPAchecker general statistics
-----------------------------
Number of program locations:     4028
Number of CFA edges:             4596
Number of relevant variables:    609
Number of functions:             118
Number of loops:                 31
Size of reached set:             665
  Number of reached locations:   434 (11%)
    Avg states per location:     1
    Max states per location:     15 (at node N1332)
  Number of reached functions:   39 (33%)
  Number of partitions:          665
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0
  Size of final wait list        17

Time for analysis setup:          3.309s
  Time for loading CPAs:          0.611s
  Time for loading parser:        0.357s
  Time for CFA construction:      2.270s
    Time for parsing file(s):     0.590s
    Time for AST to CFA:          0.726s
    Time for CFA sanity check:    0.215s
    Time for post-processing:     0.615s
      Time for var class.:        0.304s
Time for Analysis:               26.535s
CPU time for analysis:           26.540s
Total time for CPAchecker:       29.847s
Total CPU time for CPAchecker:   29.850s
Time for statistics:              0.057s

Time for Garbage Collector:       0.497s (in 77 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                116MB (   111 MiB) max;     74MB (    71 MiB) avg;    124MB (   118 MiB) peak
Used non-heap memory:             41MB (    39 MiB) max;     37MB (    35 MiB) avg;     41MB (    39 MiB) peak
Allocated heap memory:           255MB (   243 MiB) max;    255MB (   243 MiB) avg
Allocated non-heap memory:        42MB (    40 MiB) max;     39MB (    37 MiB) avg
Total process virtual memory:  12148MB ( 11585 MiB) max;  12138MB ( 11576 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
