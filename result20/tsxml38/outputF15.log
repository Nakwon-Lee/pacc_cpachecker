scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 9600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-32_7a-drivers--video--smscufx.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 9600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_ngsfk25b/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker 1.6.1-svn 6608050+ (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 7471: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_handler_precall to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_sys_write to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function down_timeout to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_submit_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __list_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function schedule_delayed_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function up to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __list_del_entry to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sys_fillrect to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sys_copyarea to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sys_imageblit to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_pr_debug to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function vmalloc_to_pfn to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function remap_pfn_range to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function might_fault to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _copy_to_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_deferred_io_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_deferred_io_cleanup to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function down_interruptible to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_free_coherent to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_free_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_control_msg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function msleep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_var_to_videomode to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_dealloc_cmap to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_destroy_modedb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function vfree to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_destroy_modelist to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function framebuffer_release to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value_probe to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_dev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __raw_spin_lock_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __init_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function lockdep_init_map to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function framebuffer_alloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_alloc_cmap to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function init_timer_key to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function register_framebuffer to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _dev_info to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_alloc_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_alloc_coherent to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_edid_to_monspecs to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_videomode_to_var to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_find_nearest_mode to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_add_videomode to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function vmalloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_find_best_display to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            1609676 (21% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  1339514 (83%)
  Because of loop head:            269500 (17%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         662 (0%)
  Times precision was empty:       240519 (15%)
  Times precision was {false}:     18934 (1%)
  Times result was cached:         1288415 (80%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      61808 (4%)
  Times result was 'false':        7198 (0%)
Number of strengthen sat checks:   0
Number of coverage checks:         850333
  BDD entailment checks:           365747
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       40
Number of predicates discovered:          16
Number of abstraction locations:          308
Max number of predicates per location:    10
Avg number of predicates per location:    4
Total predicates per abstraction:         5481285
Max number of predicates per abstraction: 10
Avg number of predicates per abstraction: 67.89
Number of irrelevant predicates:          2428733 (44%)
Number of preds handled by boolean abs:   133258 (2%)
  Total number of models for allsat:      61891
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.00

Time for post operator:                 60.446s
  Time for path formula creation:       58.745s
Time for strengthen operator:            3.885s
Time for prec operator:                693.347s
  Time for abstraction:                682.029s (Max:   183.254s, Count: 1609676)
    Boolean abstraction:               458.488s
    Solving time:                      479.780s (Max:   182.106s)
    Model enumeration time:              8.397s
    Time for BDD construction:           0.566s (Max:     0.017s)
Time for merge operator:                 2.150s
Time for coverage check:                 0.305s
  Time for BDD entailment checks:        0.248s
Total time for SMT solver (w/o itp):   488.177s

Number of path formula cache hits:   8206879 (90%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    43.078s

Total number of created targets for pointer analysis: 669841
   Number of created targets for uf: *signed_int is 35
   Number of created targets for uf: *(struct_usb_device)* is 20
   Number of created targets for uf: *(struct_urb)* is 23
   Number of created targets for uf: *(struct_list_head)* is 216
   Number of created targets for uf: *(unsigned_char)* is 407
   Number of created targets for uf: *(struct_ufx_data)* is 54
   Number of created targets for uf: *unsigned_int is 2451
   Number of created targets for uf: *(struct_fb_info)* is 43
   Number of created targets for uf: *unsigned_long_int is 28


Number of BDD nodes:                               850
Size of BDD node table:                            464047
Size of BDD cache:                                 46411
Size of BDD node cleanup queue:                      124262 (count: 1073246, min: 0, max: 3240, avg: 0.12)
Time for BDD node cleanup:                             0.118s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  5.327s
  Time for transition matches:                         3.176s
  Time for transition assertions:                      0.003s
  Time for transition actions:                         0.002s
Automaton transfers with branching:                0
Automaton transfer successors:                      7530306 (count: 7531124, min: 0, max: 1, avg: 1.00) [0 x 818, 1 x 7530306]

CPA algorithm statistics
------------------------
Number of iterations:            5093421
Max size of waitlist:            84
Average size of waitlist:        34
Number of computed successors:   5690608
Max successors for one state:    2
Number of times merged:          242293
Number of times stopped:         576934
Number of times breaked:         662

Total time for CPA algorithm:       847.308s (Max:   183.665s)
  Time for choose from waitlist:      1.332s
  Time for precision adjustment:    714.910s
  Time for transfer relation:       109.585s
  Time for merge operator:            4.404s
  Time for stop operator:             4.059s
  Time for adding to reached set:     5.185s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   662
Avg. length of target path (in blocks):              118064 (count: 662, min: 16, max: 404, avg: 178.34)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  43.339s
  Counterexample analysis:                            36.735s (Max:     0.201s, Calls: 662)
    Refinement sat check:                             15.669s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.045s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.275s
  Precision update:                                    0.376s
  ARG update:                                          5.541s

Length of refined path (in blocks):                  116420 (count: 662, min: 15, max: 403, avg: 175.86)
Number of affected states:                            55449 (count: 662, min: 2, max: 356, avg: 83.76)
Length (states) of path with itp 'true':              60309 (count: 662, min: 1, max: 348, avg: 91.10)
Length (states) of path with itp non-trivial itp:     55449 (count: 662, min: 2, max: 356, avg: 83.76)
Length (states) of path with itp 'false':               662 (count: 662, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           5 (count: 662, min: 0, max: 3, avg: 0.01)
Equal non-trivial interpolants along paths:           54782 (count: 662, min: 1, max: 355, avg: 82.75)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                662
Number of successful refinements:     662
Number of failed refinements:         0
Max. size of reached set before ref.: 26724
Max. size of reached set after ref.:  25420
Avg. size of reached set before ref.: 14090.97
Avg. size of reached set after ref.:  6413.26

Total time for CEGAR algorithm:     897.059s
Time for refinements:                47.814s
Average time for refinement:          0.072s
Max time for refinement:              0.220s

Code Coverage
-----------------------------
  Function coverage:      0.653
  Visited lines:          2516
  Total lines:            3007
  Line coverage:          0.837
  Visited conditions:     589
  Total conditions:       782
  Condition coverage:     0.753

CPAchecker general statistics
-----------------------------
Number of program locations:     4028
Number of CFA edges:             4596
Number of relevant variables:    609
Number of functions:             118
Number of loops:                 31
Size of reached set:             23836
  Number of reached locations:   1658 (41%)
    Avg states per location:     14
    Max states per location:     943 (at node N3229)
  Number of reached functions:   77 (65%)
  Number of partitions:          23743
    Avg size of partitions:      1
    Max size of partitions:      4 (with key [N2265 (before line 6471), Function ufx_setup_modes called from node N2650, stack depth 3 [388c9a54], stack [main, ufx_usb_probe, ufx_setup_modes]])
  Number of target states:       0
  Size of final wait list        49

Time for analysis setup:          3.292s
  Time for loading CPAs:          0.619s
  Time for loading parser:        0.420s
  Time for CFA construction:      2.186s
    Time for parsing file(s):     0.551s
    Time for AST to CFA:          0.705s
    Time for CFA sanity check:    0.203s
    Time for post-processing:     0.585s
      Time for var class.:        0.304s
Time for Analysis:              897.059s
CPU time for analysis:          897.020s
Total time for CPAchecker:      900.353s
Total CPU time for CPAchecker:  900.310s
Time for statistics:              0.347s

Time for Garbage Collector:      17.068s (in 697 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                739MB (   704 MiB) max;    494MB (   471 MiB) avg;    782MB (   746 MiB) peak
Used non-heap memory:             41MB (    40 MiB) max;     40MB (    39 MiB) avg;     42MB (    40 MiB) peak
Allocated heap memory:          1006MB (   959 MiB) max;    732MB (   699 MiB) avg
Allocated non-heap memory:        44MB (    42 MiB) max;     43MB (    41 MiB) avg
Total process virtual memory:  17191MB ( 16394 MiB) max;  15129MB ( 14428 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
