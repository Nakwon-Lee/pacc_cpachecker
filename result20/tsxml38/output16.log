scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 9600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-32_7a-drivers--video--smscufx.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 9600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run__tbqnv6v/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker 1.6.1-svn 6608050+ (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 7471: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_handler_precall to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_dealloc_cmap to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_destroy_modedb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function vfree to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_destroy_modelist to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function framebuffer_release to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_pr_debug to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function down_interruptible to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __list_del_entry to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_free_coherent to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_free_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_dev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __raw_spin_lock_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __init_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function lockdep_init_map to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function init_timer_key to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_alloc_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_alloc_coherent to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __list_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function framebuffer_alloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_alloc_cmap to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_control_msg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function msleep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_edid_to_monspecs to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_videomode_to_var to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function vmalloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_find_best_display to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_add_videomode to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            36100 (20% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  29839 (83%)
  Because of loop head:            6183 (17%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         78 (0%)
  Times precision was empty:       10792 (30%)
  Times precision was {false}:     1692 (5%)
  Times result was cached:         21054 (58%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      2562 (7%)
  Times result was 'false':        423 (1%)
Number of strengthen sat checks:   0
Number of coverage checks:         23396
  BDD entailment checks:           10196
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       40
Number of predicates discovered:          8
Number of abstraction locations:          121
Max number of predicates per location:    6
Avg number of predicates per location:    1
Total predicates per abstraction:         64341
Max number of predicates per abstraction: 6
Avg number of predicates per abstraction: 15.12
Number of irrelevant predicates:          31186 (48%)
Number of preds handled by boolean abs:   4622 (7%)
  Total number of models for allsat:      3081
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.20

Time for post operator:                  6.326s
  Time for path formula creation:        6.202s
Time for strengthen operator:            0.148s
Time for prec operator:                 11.024s
  Time for abstraction:                 10.415s (Max:     0.024s, Count: 36100)
    Boolean abstraction:                 2.276s
    Solving time:                        3.853s (Max:     0.017s)
    Model enumeration time:              0.301s
    Time for BDD construction:           0.066s (Max:     0.006s)
Time for merge operator:                 0.333s
Time for coverage check:                 0.036s
  Time for BDD entailment checks:        0.029s
Total time for SMT solver (w/o itp):     4.154s

Number of path formula cache hits:   147578 (71%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     5.461s

Total number of created targets for pointer analysis: 35884
   Number of created targets for uf: *signed_int is 7
   Number of created targets for uf: *(struct_usb_device)* is 2
   Number of created targets for uf: *(struct_urb)* is 4
   Number of created targets for uf: *(struct_list_head)* is 22
   Number of created targets for uf: *(unsigned_char)* is 29
   Number of created targets for uf: *(struct_ufx_data)* is 4
   Number of created targets for uf: *unsigned_int is 199
   Number of created targets for uf: *unsigned_long_int is 10
   Number of created targets for uf: *(struct_fb_info)* is 4


Number of BDD nodes:                               252
Size of BDD node table:                            464047
Size of BDD cache:                                 46411
Size of BDD node cleanup queue:                        4983 (count: 44996, min: 0, max: 413, avg: 0.11)
Time for BDD node cleanup:                             0.008s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.301s
Automaton transfers with branching:                0
Automaton transfer successors:                       179877 (count: 179877, min: 1, max: 1, avg: 1.00) [1 x 179877]

CPA algorithm statistics
------------------------
Number of iterations:            122113
Max size of waitlist:            42
Average size of waitlist:        30
Number of computed successors:   137558
Max successors for one state:    2
Number of times merged:          6600
Number of times stopped:         14566
Number of times breaked:         78

Total time for CPA algorithm:        22.266s (Max:     2.395s)
  Time for choose from waitlist:      0.108s
  Time for precision adjustment:     11.973s
  Time for transfer relation:         8.690s
  Time for merge operator:            0.457s
  Time for stop operator:             0.198s
  Time for adding to reached set:     0.181s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   78
Avg. length of target path (in blocks):               12195 (count: 78, min: 118, max: 181, avg: 156.35)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   3.879s
  Counterexample analysis:                             3.410s (Max:     0.087s, Calls: 78)
    Refinement sat check:                              1.549s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.017s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.059s
  Precision update:                                    0.030s
  ARG update:                                          0.279s

Length of refined path (in blocks):                   11822 (count: 78, min: 52, max: 179, avg: 151.56)
Number of affected states:                             2241 (count: 78, min: 0, max: 128, avg: 28.73)
Length (states) of path with itp 'true':               9503 (count: 78, min: 1, max: 146, avg: 121.83)
Length (states) of path with itp non-trivial itp:      2241 (count: 78, min: 0, max: 128, avg: 28.73)
Length (states) of path with itp 'false':                78 (count: 78, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           2 (count: 78, min: 0, max: 1, avg: 0.03)
Equal non-trivial interpolants along paths:            2168 (count: 78, min: 0, max: 127, avg: 27.79)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                78
Number of successful refinements:     78
Number of failed refinements:         0
Max. size of reached set before ref.: 8789
Max. size of reached set after ref.:  7123
Avg. size of reached set before ref.: 7189.62
Avg. size of reached set after ref.:  5715.51

Total time for CEGAR algorithm:      26.957s
Time for refinements:                 4.410s
Average time for refinement:          0.056s
Max time for refinement:              0.130s

Code Coverage
-----------------------------
  Function coverage:      0.492
  Visited lines:          1646
  Total lines:            3007
  Line coverage:          0.547
  Visited conditions:     299
  Total conditions:       782
  Condition coverage:     0.382

CPAchecker general statistics
-----------------------------
Number of program locations:     4028
Number of CFA edges:             4596
Number of relevant variables:    609
Number of functions:             118
Number of loops:                 31
Size of reached set:             7589
  Number of reached locations:   907 (23%)
    Avg states per location:     8
    Max states per location:     335 (at node N3229)
  Number of reached functions:   58 (49%)
  Number of partitions:          7556
    Avg size of partitions:      1
    Max size of partitions:      3 (with key [N2265 (before line 6471), Function ufx_setup_modes called from node N2650, stack depth 3 [7aff1fa3], stack [main, ufx_usb_probe, ufx_setup_modes]])
  Number of target states:       0
  Size of final wait list        36

Time for analysis setup:          3.400s
  Time for loading CPAs:          0.598s
  Time for loading parser:        0.427s
  Time for CFA construction:      2.292s
    Time for parsing file(s):     0.609s
    Time for AST to CFA:          0.758s
    Time for CFA sanity check:    0.200s
    Time for post-processing:     0.596s
      Time for var class.:        0.304s
Time for Analysis:               26.957s
CPU time for analysis:           26.960s
Total time for CPAchecker:       30.359s
Total CPU time for CPAchecker:   30.350s
Time for statistics:              0.155s

Time for Garbage Collector:       0.601s (in 46 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                134MB (   128 MiB) max;     84MB (    80 MiB) avg;    141MB (   134 MiB) peak
Used non-heap memory:             41MB (    40 MiB) max;     37MB (    36 MiB) avg;     42MB (    40 MiB) peak
Allocated heap memory:           255MB (   243 MiB) max;    255MB (   243 MiB) avg
Allocated non-heap memory:        43MB (    41 MiB) max;     39MB (    37 MiB) avg
Total process virtual memory:  12081MB ( 11521 MiB) max;  12072MB ( 11513 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
