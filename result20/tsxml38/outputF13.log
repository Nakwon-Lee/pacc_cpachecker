scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 9600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-32_7a-drivers--video--smscufx.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 9600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_d4q3iz0i/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker 1.6.1-svn 6608050+ (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 7471: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_handler_precall to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_control_msg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_pr_debug to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function msleep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sys_fillrect to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function down_timeout to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __list_del_entry to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_submit_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __list_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function schedule_delayed_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function up to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sys_copyarea to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sys_imageblit to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_var_to_videomode to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function down_interruptible to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_free_coherent to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_free_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_sys_write to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_deferred_io_cleanup to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_deferred_io_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function vmalloc_to_pfn to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function remap_pfn_range to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function might_fault to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _copy_to_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_dealloc_cmap to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_destroy_modedb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function vfree to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_destroy_modelist to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function framebuffer_release to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_dev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __raw_spin_lock_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function lockdep_init_map to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __init_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function init_timer_key to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_alloc_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_alloc_coherent to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function framebuffer_alloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_alloc_cmap to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_edid_to_monspecs to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_videomode_to_var to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function vmalloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_find_nearest_mode to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_add_videomode to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_find_best_display to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function register_framebuffer to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _dev_info to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value_probe to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            1634889 (20% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  1359445 (83%)
  Because of loop head:            270152 (17%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         5292 (0%)
  Times precision was empty:       472759 (29%)
  Times precision was {false}:     14531 (1%)
  Times result was cached:         1132624 (69%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      14975 (1%)
  Times result was 'false':        38815 (2%)
Number of strengthen sat checks:   0
Number of coverage checks:         1100589
  BDD entailment checks:           444273
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       40
Number of predicates discovered:          13
Number of abstraction locations:          192
Max number of predicates per location:    9
Avg number of predicates per location:    3
Total predicates per abstraction:         3783560
Max number of predicates per abstraction: 9
Avg number of predicates per abstraction: 128.23
Number of irrelevant predicates:          2955652 (78%)
Number of preds handled by boolean abs:   22908 (1%)
  Total number of models for allsat:      15774
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.05

Time for post operator:                 66.245s
  Time for path formula creation:       64.622s
Time for strengthen operator:            4.274s
Time for prec operator:                429.054s
  Time for abstraction:                417.624s (Max:     3.921s, Count: 1634889)
    Boolean abstraction:               251.514s
    Solving time:                      280.432s (Max:     3.867s)
    Model enumeration time:              5.392s
    Time for BDD construction:           0.184s (Max:     0.009s)
Time for merge operator:                 3.851s
Time for coverage check:                 0.274s
  Time for BDD entailment checks:        0.203s
Total time for SMT solver (w/o itp):   285.824s

Number of path formula cache hits:   8970035 (90%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    43.275s

Total number of created targets for pointer analysis: 703075
   Number of created targets for uf: *signed_int is 9
   Number of created targets for uf: *(struct_usb_device)* is 2
   Number of created targets for uf: *(struct_urb)* is 4
   Number of created targets for uf: *(struct_list_head)* is 3053
   Number of created targets for uf: *(unsigned_char)* is 1287
   Number of created targets for uf: *(struct_ufx_data)* is 4
   Number of created targets for uf: *unsigned_int is 3442
   Number of created targets for uf: *unsigned_long_int is 646
   Number of created targets for uf: *(struct_fb_info)* is 5


Number of BDD nodes:                               331
Size of BDD node table:                            464047
Size of BDD cache:                                 46411
Size of BDD node cleanup queue:                       30085 (count: 1087957, min: 0, max: 2066, avg: 0.03)
Time for BDD node cleanup:                             0.095s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  5.521s
  Time for transition matches:                         2.963s
  Time for transition assertions:                      0.002s
  Time for transition actions:                         0.015s
Automaton transfers with branching:                0
Automaton transfer successors:                      8322663 (count: 8322757, min: 0, max: 1, avg: 1.00) [0 x 94, 1 x 8322663]

CPA algorithm statistics
------------------------
Number of iterations:            5689348
Max size of waitlist:            30
Average size of waitlist:        17
Number of computed successors:   6428474
Max successors for one state:    2
Number of times merged:          328158
Number of times stopped:         670510
Number of times breaked:         5292

Total time for CPA algorithm:       591.125s (Max:     5.603s)
  Time for choose from waitlist:      1.299s
  Time for precision adjustment:    450.409s
  Time for transfer relation:       115.994s
  Time for merge operator:            6.260s
  Time for stop operator:             4.057s
  Time for adding to reached set:     5.353s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   5292
Avg. length of target path (in blocks):             1000013 (count: 5292, min: 6, max: 321, avg: 188.97)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                 253.704s
  Counterexample analysis:                           243.212s (Max:     0.122s, Calls: 5292)
    Refinement sat check:                            104.163s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.284s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.614s
  Precision update:                                    1.387s
  ARG update:                                          6.099s

Length of refined path (in blocks):                  987558 (count: 5292, min: 5, max: 320, avg: 186.61)
Number of affected states:                           136757 (count: 5292, min: 2, max: 276, avg: 25.84)
Length (states) of path with itp 'true':             845509 (count: 5292, min: 1, max: 270, avg: 159.77)
Length (states) of path with itp non-trivial itp:    136757 (count: 5292, min: 2, max: 276, avg: 25.84)
Length (states) of path with itp 'false':              5292 (count: 5292, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           9 (count: 5292, min: 0, max: 1, avg: 0.00)
Equal non-trivial interpolants along paths:          131456 (count: 5292, min: 1, max: 275, avg: 24.84)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                5292
Number of successful refinements:     5292
Number of failed refinements:         0
Max. size of reached set before ref.: 15571
Max. size of reached set after ref.:  10624
Avg. size of reached set before ref.: 10665.97
Avg. size of reached set after ref.:  9585.26

Total time for CEGAR algorithm:     897.033s
Time for refinements:               287.535s
Average time for refinement:          0.054s
Max time for refinement:              0.896s

Code Coverage
-----------------------------
  Function coverage:      0.017
  Visited lines:          660
  Total lines:            3007
  Line coverage:          0.219
  Visited conditions:     0
  Total conditions:       782
  Condition coverage:     0.000

CPAchecker general statistics
-----------------------------
Number of program locations:     4028
Number of CFA edges:             4596
Number of relevant variables:    609
Number of functions:             118
Number of loops:                 31
Size of reached set:             6
  Number of reached locations:   6 (0%)
    Avg states per location:     1
    Max states per location:     1 (at node N3012)
  Number of reached functions:   2 (2%)
  Number of partitions:          6
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0
  Size of final wait list        1

Time for analysis setup:          3.359s
  Time for loading CPAs:          0.643s
  Time for loading parser:        0.375s
  Time for CFA construction:      2.270s
    Time for parsing file(s):     0.594s
    Time for AST to CFA:          0.730s
    Time for CFA sanity check:    0.197s
    Time for post-processing:     0.602s
      Time for var class.:        0.321s
Time for Analysis:              897.033s
CPU time for analysis:          896.970s
Total time for CPAchecker:      900.395s
Total CPU time for CPAchecker:  900.330s
Time for statistics:              0.055s

Time for Garbage Collector:      18.278s (in 1146 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                649MB (   619 MiB) max;    344MB (   328 MiB) avg;    667MB (   636 MiB) peak
Used non-heap memory:             42MB (    40 MiB) max;     40MB (    39 MiB) avg;     42MB (    40 MiB) peak
Allocated heap memory:           729MB (   695 MiB) max;    520MB (   495 MiB) avg
Allocated non-heap memory:        44MB (    42 MiB) max;     44MB (    42 MiB) avg
Total process virtual memory:  12627MB ( 12042 MiB) max;  12360MB ( 11787 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
