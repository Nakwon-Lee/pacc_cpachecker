scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 9600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-32_7a-drivers--video--smscufx.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 9600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_46lnoz9e/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker 1.6.1-svn 6608050+ (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 7471: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_handler_precall to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sys_imageblit to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sys_copyarea to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sys_fillrect to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_var_to_videomode to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_pr_debug to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function schedule_delayed_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_sys_write to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_deferred_io_cleanup to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_deferred_io_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function vmalloc_to_pfn to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function remap_pfn_range to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function down_interruptible to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __list_del_entry to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_free_coherent to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_free_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function might_fault to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _copy_to_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function down_timeout to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_submit_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __list_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function up to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_control_msg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function msleep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_dealloc_cmap to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_destroy_modedb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function vfree to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_destroy_modelist to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function framebuffer_release to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value_probe to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_dev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __raw_spin_lock_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function lockdep_init_map to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __init_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function init_timer_key to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_alloc_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_alloc_coherent to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function framebuffer_alloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_alloc_cmap to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_edid_to_monspecs to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_videomode_to_var to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_find_nearest_mode to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_add_videomode to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function vmalloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_find_best_display to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function register_framebuffer to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _dev_info to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            1461590 (21% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  1240509 (85%)
  Because of loop head:            220299 (15%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         782 (0%)
  Times precision was empty:       224296 (15%)
  Times precision was {false}:     3344 (0%)
  Times result was cached:         1209015 (83%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      24935 (2%)
  Times result was 'false':        14321 (1%)
Number of strengthen sat checks:   0
Number of coverage checks:         822474
  BDD entailment checks:           377032
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       40
Number of predicates discovered:          12
Number of abstraction locations:          352
Max number of predicates per location:    10
Avg number of predicates per location:    4
Total predicates per abstraction:         6036069
Max number of predicates per abstraction: 10
Avg number of predicates per abstraction: 213.45
Number of irrelevant predicates:          1266185 (21%)
Number of preds handled by boolean abs:   86182 (1%)
  Total number of models for allsat:      25638
  Max number of models for allsat:        4
  Avg number of models for allsat:        1.03

Time for post operator:                 21.122s
  Time for path formula creation:       19.691s
Time for strengthen operator:            3.163s
Time for prec operator:                308.033s
  Time for abstraction:                299.417s (Max:     3.476s, Count: 1461590)
    Boolean abstraction:               128.095s
    Solving time:                      125.558s (Max:     3.381s)
    Model enumeration time:              3.442s
    Time for BDD construction:           0.363s (Max:     0.015s)
Time for merge operator:                 1.107s
Time for coverage check:                 0.261s
  Time for BDD entailment checks:        0.202s
Total time for SMT solver (w/o itp):   129.000s

Number of path formula cache hits:   8406636 (98%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     6.948s

Total number of created targets for pointer analysis: 77168
   Number of created targets for uf: *signed_int is 9
   Number of created targets for uf: *(struct_usb_device)* is 2
   Number of created targets for uf: *(struct_urb)* is 4
   Number of created targets for uf: *(struct_list_head)* is 269
   Number of created targets for uf: *(unsigned_char)* is 51
   Number of created targets for uf: *(struct_ufx_data)* is 4
   Number of created targets for uf: *unsigned_int is 167
   Number of created targets for uf: *unsigned_long_int is 112
   Number of created targets for uf: *(struct_fb_info)* is 5


Number of BDD nodes:                               974
Size of BDD node table:                            464047
Size of BDD cache:                                 46411
Size of BDD node cleanup queue:                       50556 (count: 770125, min: 0, max: 896, avg: 0.07)
Time for BDD node cleanup:                             0.070s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  4.528s
  Time for transition matches:                         2.681s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.005s
Automaton transfers with branching:                0
Automaton transfer successors:                      6900320 (count: 6900914, min: 0, max: 1, avg: 1.00) [0 x 594, 1 x 6900320]

CPA algorithm statistics
------------------------
Number of iterations:            4657996
Max size of waitlist:            38
Average size of waitlist:        9
Number of computed successors:   5193788
Max successors for one state:    2
Number of times merged:          222721
Number of times stopped:         508577
Number of times breaked:         782

Total time for CPA algorithm:       406.466s (Max:     5.317s)
  Time for choose from waitlist:      1.116s
  Time for precision adjustment:    326.030s
  Time for transfer relation:        62.156s
  Time for merge operator:            3.081s
  Time for stop operator:             3.401s
  Time for adding to reached set:     4.113s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   782
Avg. length of target path (in blocks):               94777 (count: 782, min: 6, max: 266, avg: 121.20)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  24.844s
  Counterexample analysis:                            19.394s (Max:     0.087s, Calls: 782)
    Refinement sat check:                              9.523s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.028s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.377s
  Precision update:                                    0.512s
  ARG update:                                          4.200s

Length of refined path (in blocks):                   92866 (count: 782, min: 5, max: 265, avg: 118.75)
Number of affected states:                            76644 (count: 782, min: 2, max: 263, avg: 98.01)
Length (states) of path with itp 'true':              15440 (count: 782, min: 1, max: 159, avg: 19.74)
Length (states) of path with itp non-trivial itp:     76644 (count: 782, min: 2, max: 263, avg: 98.01)
Length (states) of path with itp 'false':               782 (count: 782, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           3 (count: 782, min: 0, max: 1, avg: 0.00)
Equal non-trivial interpolants along paths:           75859 (count: 782, min: 1, max: 262, avg: 97.01)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                782
Number of successful refinements:     782
Number of failed refinements:         0
Max. size of reached set before ref.: 22185
Max. size of reached set after ref.:  19082
Avg. size of reached set before ref.: 8230.53
Avg. size of reached set after ref.:  2281.02

Total time for CEGAR algorithm:     434.738s
Time for refinements:                27.554s
Average time for refinement:          0.035s
Max time for refinement:              0.093s

Code Coverage
-----------------------------
  Function coverage:      0.661
  Visited lines:          2699
  Total lines:            3007
  Line coverage:          0.898
  Visited conditions:     669
  Total conditions:       782
  Condition coverage:     0.855

CPAchecker general statistics
-----------------------------
Number of program locations:     4028
Number of CFA edges:             4596
Number of relevant variables:    609
Number of functions:             118
Number of loops:                 31
Size of reached set:             18377
  Number of reached locations:   1868 (46%)
    Avg states per location:     9
    Max states per location:     741 (at node N3229)
  Number of reached functions:   78 (66%)
  Number of partitions:          18339
    Avg size of partitions:      1
    Max size of partitions:      4 (with key [N2265 (before line 6471), Function ufx_setup_modes called from node N2650, stack depth 3 [2bdb43a0], stack [main, ufx_usb_probe, ufx_setup_modes]])
  Number of target states:       0

Time for analysis setup:          3.347s
  Time for loading CPAs:          0.597s
  Time for loading parser:        0.367s
  Time for CFA construction:      2.298s
    Time for parsing file(s):     0.606s
    Time for AST to CFA:          0.720s
    Time for CFA sanity check:    0.225s
    Time for post-processing:     0.613s
      Time for var class.:        0.293s
Time for Analysis:              434.738s
CPU time for analysis:          434.730s
Time for analyzing result:        0.009s
Total time for CPAchecker:      438.088s
Total CPU time for CPAchecker:  438.070s
Time for statistics:              0.232s

Time for Garbage Collector:      16.195s (in 1714 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                251MB (   239 MiB) max;    147MB (   140 MiB) avg;    256MB (   245 MiB) peak
Used non-heap memory:             42MB (    40 MiB) max;     40MB (    39 MiB) avg;     42MB (    40 MiB) peak
Allocated heap memory:           255MB (   243 MiB) max;    255MB (   243 MiB) avg
Allocated non-heap memory:        44MB (    42 MiB) max;     43MB (    41 MiB) avg
Total process virtual memory:  12619MB ( 12034 MiB) max;  12286MB ( 11717 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
