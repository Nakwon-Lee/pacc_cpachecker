scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 9600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-32_7a-drivers--video--smscufx.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 9600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_1wic2c_n/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker 1.6.1-svn 6608050+ (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 7471: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_handler_precall to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_sys_write to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function down_timeout to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_submit_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __list_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function schedule_delayed_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function up to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __list_del_entry to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sys_fillrect to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sys_copyarea to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sys_imageblit to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_pr_debug to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function vmalloc_to_pfn to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function remap_pfn_range to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function might_fault to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _copy_to_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_deferred_io_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_deferred_io_cleanup to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function down_interruptible to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_free_coherent to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_free_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_control_msg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function msleep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_var_to_videomode to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_dealloc_cmap to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_destroy_modedb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function vfree to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_destroy_modelist to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function framebuffer_release to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value_probe to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_dev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __raw_spin_lock_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function lockdep_init_map to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function framebuffer_alloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_alloc_cmap to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __init_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function init_timer_key to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function register_framebuffer to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _dev_info to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_alloc_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_alloc_coherent to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_edid_to_monspecs to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_videomode_to_var to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_find_nearest_mode to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_add_videomode to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function vmalloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_find_best_display to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            2182998 (21% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  1810598 (83%)
  Because of loop head:            371710 (17%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         690 (0%)
  Times precision was empty:       311660 (14%)
  Times precision was {false}:     26671 (1%)
  Times result was cached:         1761791 (81%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      82876 (4%)
  Times result was 'false':        11263 (1%)
Number of strengthen sat checks:   0
Number of coverage checks:         1167482
  BDD entailment checks:           509470
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       40
Number of predicates discovered:          13
Number of abstraction locations:          318
Max number of predicates per location:    11
Avg number of predicates per location:    5
Total predicates per abstraction:         8613105
Max number of predicates per abstraction: 11
Avg number of predicates per abstraction: 78.62
Number of irrelevant predicates:          3150423 (37%)
Number of preds handled by boolean abs:   203679 (2%)
  Total number of models for allsat:      85711
  Max number of models for allsat:        4
  Avg number of models for allsat:        1.03

Time for post operator:                102.038s
  Time for path formula creation:      100.189s
Time for strengthen operator:            4.848s
Time for prec operator:                633.860s
  Time for abstraction:                617.749s (Max:     2.448s, Count: 2182998)
    Boolean abstraction:               220.739s
    Solving time:                      286.112s (Max:     2.384s)
    Model enumeration time:             11.958s
    Time for BDD construction:           0.871s (Max:     0.031s)
Time for merge operator:                 3.554s
Time for coverage check:                 0.379s
  Time for BDD entailment checks:        0.302s
Total time for SMT solver (w/o itp):   298.070s

Number of path formula cache hits:   10567096 (86%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    76.848s

Total number of created targets for pointer analysis: 1590358
   Number of created targets for uf: *signed_int is 337
   Number of created targets for uf: *(struct_usb_device)* is 2
   Number of created targets for uf: *(struct_urb)* is 2
   Number of created targets for uf: *(struct_list_head)* is 3982
   Number of created targets for uf: *(unsigned_char)* is 63
   Number of created targets for uf: *(struct_ufx_data)* is 2
   Number of created targets for uf: *unsigned_int is 18007
   Number of created targets for uf: *unsigned_long_int is 25
   Number of created targets for uf: *(struct_fb_info)* is 5


Number of BDD nodes:                               1488
Size of BDD node table:                            464047
Size of BDD cache:                                 46411
Size of BDD node cleanup queue:                      166606 (count: 1454035, min: 0, max: 1967, avg: 0.11)
Time for BDD node cleanup:                             0.183s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  7.219s
  Time for transition matches:                         4.364s
  Time for transition assertions:                      0.002s
  Time for transition actions:                         0.009s
Automaton transfers with branching:                0
Automaton transfer successors:                     10178143 (count: 10179233, min: 0, max: 1, avg: 1.00) [0 x 1090, 1 x 10178143]

CPA algorithm statistics
------------------------
Number of iterations:            6909618
Max size of waitlist:            87
Average size of waitlist:        28
Number of computed successors:   7725596
Max successors for one state:    2
Number of times merged:          329006
Number of times stopped:         790761
Number of times breaked:         690

Total time for CPA algorithm:       866.042s (Max:     6.573s)
  Time for choose from waitlist:      1.946s
  Time for precision adjustment:    663.870s
  Time for transfer relation:       170.873s
  Time for merge operator:            6.501s
  Time for stop operator:             5.700s
  Time for adding to reached set:     6.621s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   690
Avg. length of target path (in blocks):               77107 (count: 690, min: 6, max: 291, avg: 111.75)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  26.347s
  Counterexample analysis:                            16.704s (Max:     0.109s, Calls: 690)
    Refinement sat check:                              8.601s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.035s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.244s
  Precision update:                                    0.370s
  ARG update:                                          8.757s

Length of refined path (in blocks):                   75859 (count: 690, min: 5, max: 287, avg: 109.94)
Number of affected states:                            57862 (count: 690, min: 2, max: 274, avg: 83.86)
Length (states) of path with itp 'true':              17307 (count: 690, min: 1, max: 246, avg: 25.08)
Length (states) of path with itp non-trivial itp:     57862 (count: 690, min: 2, max: 274, avg: 83.86)
Length (states) of path with itp 'false':               690 (count: 690, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           3 (count: 690, min: 0, max: 1, avg: 0.00)
Equal non-trivial interpolants along paths:           57169 (count: 690, min: 1, max: 273, avg: 82.85)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                690
Number of successful refinements:     690
Number of failed refinements:         0
Max. size of reached set before ref.: 25114
Max. size of reached set after ref.:  17130
Avg. size of reached set before ref.: 12900.70
Avg. size of reached set after ref.:  2880.66

Total time for CEGAR algorithm:     896.894s
Time for refinements:                29.987s
Average time for refinement:          0.043s
Max time for refinement:              1.489s

Code Coverage
-----------------------------
  Function coverage:      0.593
  Visited lines:          2258
  Total lines:            3007
  Line coverage:          0.751
  Visited conditions:     499
  Total conditions:       782
  Condition coverage:     0.638

CPAchecker general statistics
-----------------------------
Number of program locations:     4028
Number of CFA edges:             4596
Number of relevant variables:    609
Number of functions:             118
Number of loops:                 31
Size of reached set:             9747
  Number of reached locations:   1402 (35%)
    Avg states per location:     6
    Max states per location:     385 (at node N3229)
  Number of reached functions:   70 (59%)
  Number of partitions:          9741
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N2929 (before line 7199), Function ufx_alloc_urb_list called from node N2493, stack depth 3 [11c4b33d], stack [main, ufx_usb_probe, ufx_alloc_urb_list]])
  Number of target states:       0
  Size of final wait list        32

Time for analysis setup:          3.477s
  Time for loading CPAs:          0.636s
  Time for loading parser:        0.426s
  Time for CFA construction:      2.324s
    Time for parsing file(s):     0.584s
    Time for AST to CFA:          0.793s
    Time for CFA sanity check:    0.209s
    Time for post-processing:     0.613s
      Time for var class.:        0.319s
Time for Analysis:              896.894s
CPU time for analysis:          896.880s
Total time for CPAchecker:      900.374s
Total CPU time for CPAchecker:  900.350s
Time for statistics:              0.179s

Time for Garbage Collector:      30.102s (in 846 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:               1285MB (  1225 MiB) max;    640MB (   610 MiB) avg;   1297MB (  1237 MiB) peak
Used non-heap memory:             42MB (    40 MiB) max;     40MB (    39 MiB) avg;     42MB (    40 MiB) peak
Allocated heap memory:          1750MB (  1669 MiB) max;    974MB (   929 MiB) avg
Allocated non-heap memory:        44MB (    42 MiB) max;     44MB (    42 MiB) avg
Total process virtual memory:  19614MB ( 18706 MiB) max;  16016MB ( 15274 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
