scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 9600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-32_7a-drivers--video--smscufx.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 9600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_sdybrfv1/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker 1.6.1-svn 6608050+ (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 7471: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_handler_precall to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_sys_write to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function down_timeout to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_submit_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __list_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function schedule_delayed_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function up to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __list_del_entry to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sys_fillrect to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sys_copyarea to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sys_imageblit to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_pr_debug to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function vmalloc_to_pfn to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function remap_pfn_range to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function might_fault to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _copy_to_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_deferred_io_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_deferred_io_cleanup to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function down_interruptible to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_free_coherent to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_free_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_control_msg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function msleep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_var_to_videomode to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_dealloc_cmap to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_destroy_modedb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function vfree to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_destroy_modelist to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function framebuffer_release to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value_probe to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_dev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __raw_spin_lock_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function lockdep_init_map to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function framebuffer_alloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_alloc_cmap to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __init_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function init_timer_key to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function register_framebuffer to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _dev_info to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_alloc_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_alloc_coherent to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_edid_to_monspecs to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_videomode_to_var to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_find_nearest_mode to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_add_videomode to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function vmalloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_find_best_display to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            2225625 (21% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  1846030 (83%)
  Because of loop head:            378894 (17%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         701 (0%)
  Times precision was empty:       316594 (14%)
  Times precision was {false}:     27009 (1%)
  Times result was cached:         1798616 (81%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      83406 (4%)
  Times result was 'false':        11769 (1%)
Number of strengthen sat checks:   0
Number of coverage checks:         1192573
  BDD entailment checks:           521001
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       40
Number of predicates discovered:          13
Number of abstraction locations:          319
Max number of predicates per location:    11
Avg number of predicates per location:    5
Total predicates per abstraction:         8889466
Max number of predicates per abstraction: 11
Avg number of predicates per abstraction: 80.51
Number of irrelevant predicates:          3248718 (37%)
Number of preds handled by boolean abs:   205000 (2%)
  Total number of models for allsat:      86241
  Max number of models for allsat:        4
  Avg number of models for allsat:        1.03

Time for post operator:                110.546s
  Time for path formula creation:      108.595s
Time for strengthen operator:            4.917s
Time for prec operator:                628.381s
  Time for abstraction:                611.402s (Max:     2.413s, Count: 2225625)
    Boolean abstraction:               223.132s
    Solving time:                      289.202s (Max:     2.348s)
    Model enumeration time:             11.840s
    Time for BDD construction:           0.838s (Max:     0.008s)
Time for merge operator:                 4.062s
Time for coverage check:                 0.341s
  Time for BDD entailment checks:        0.274s
Total time for SMT solver (w/o itp):   301.042s

Number of path formula cache hits:   10790865 (86%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    83.003s

Total number of created targets for pointer analysis: 1610483
   Number of created targets for uf: *signed_int is 346
   Number of created targets for uf: *(struct_usb_device)* is 2
   Number of created targets for uf: *(struct_urb)* is 2
   Number of created targets for uf: *(struct_list_head)* is 4082
   Number of created targets for uf: *(unsigned_char)* is 63
   Number of created targets for uf: *(struct_ufx_data)* is 2
   Number of created targets for uf: *unsigned_int is 18199
   Number of created targets for uf: *unsigned_long_int is 25
   Number of created targets for uf: *(struct_fb_info)* is 5


Number of BDD nodes:                               1488
Size of BDD node table:                            464047
Size of BDD cache:                                 46411
Size of BDD node cleanup queue:                      167652 (count: 1475455, min: 0, max: 1951, avg: 0.11)
Time for BDD node cleanup:                             0.103s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  7.180s
  Time for transition matches:                         4.375s
  Time for transition assertions:                      0.002s
  Time for transition actions:                         0.008s
Automaton transfers with branching:                0
Automaton transfer successors:                     10379493 (count: 10380593, min: 0, max: 1, avg: 1.00) [0 x 1100, 1 x 10379493]

CPA algorithm statistics
------------------------
Number of iterations:            7047293
Max size of waitlist:            87
Average size of waitlist:        28
Number of computed successors:   7879746
Max successors for one state:    2
Number of times merged:          335786
Number of times stopped:         806548
Number of times breaked:         701

Total time for CPA algorithm:       867.312s (Max:     6.665s)
  Time for choose from waitlist:      2.105s
  Time for precision adjustment:    655.941s
  Time for transfer relation:       177.980s
  Time for merge operator:            6.895s
  Time for stop operator:             5.534s
  Time for adding to reached set:     8.488s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   701
Avg. length of target path (in blocks):               78914 (count: 701, min: 6, max: 291, avg: 112.57)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  25.171s
  Counterexample analysis:                            16.964s (Max:     0.118s, Calls: 701)
    Refinement sat check:                              8.754s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.016s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.285s
  Precision update:                                    0.421s
  ARG update:                                          7.174s

Length of refined path (in blocks):                   77652 (count: 701, min: 5, max: 287, avg: 110.77)
Number of affected states:                            58878 (count: 701, min: 2, max: 274, avg: 83.99)
Length (states) of path with itp 'true':              18073 (count: 701, min: 1, max: 246, avg: 25.78)
Length (states) of path with itp non-trivial itp:     58878 (count: 701, min: 2, max: 274, avg: 83.99)
Length (states) of path with itp 'false':               701 (count: 701, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           3 (count: 701, min: 0, max: 1, avg: 0.00)
Equal non-trivial interpolants along paths:           58174 (count: 701, min: 1, max: 273, avg: 82.99)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                701
Number of successful refinements:     701
Number of failed refinements:         0
Max. size of reached set before ref.: 25141
Max. size of reached set after ref.:  17130
Avg. size of reached set before ref.: 13027.19
Avg. size of reached set after ref.:  2985.38

Total time for CEGAR algorithm:     897.054s
Time for refinements:                28.755s
Average time for refinement:          0.041s
Max time for refinement:              0.153s

Code Coverage
-----------------------------
  Function coverage:      0.653
  Visited lines:          2568
  Total lines:            3007
  Line coverage:          0.854
  Visited conditions:     613
  Total conditions:       782
  Condition coverage:     0.784

CPAchecker general statistics
-----------------------------
Number of program locations:     4028
Number of CFA edges:             4596
Number of relevant variables:    609
Number of functions:             118
Number of loops:                 31
Size of reached set:             22115
  Number of reached locations:   1718 (43%)
    Avg states per location:     12
    Max states per location:     865 (at node N3230)
  Number of reached functions:   77 (65%)
  Number of partitions:          22009
    Avg size of partitions:      1
    Max size of partitions:      5 (with key [N2265 (before line 6471), Function ufx_setup_modes called from node N2650, stack depth 3 [59881a93], stack [main, ufx_usb_probe, ufx_setup_modes]])
  Number of target states:       0
  Size of final wait list        42

Time for analysis setup:          3.299s
  Time for loading CPAs:          0.546s
  Time for loading parser:        0.420s
  Time for CFA construction:      2.277s
    Time for parsing file(s):     0.608s
    Time for AST to CFA:          0.774s
    Time for CFA sanity check:    0.180s
    Time for post-processing:     0.564s
      Time for var class.:        0.302s
Time for Analysis:              897.054s
CPU time for analysis:          897.040s
Total time for CPAchecker:      900.356s
Total CPU time for CPAchecker:  900.340s
Time for statistics:              0.296s

Time for Garbage Collector:      30.221s (in 848 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:               1289MB (  1229 MiB) max;    646MB (   616 MiB) avg;   1302MB (  1242 MiB) peak
Used non-heap memory:             41MB (    39 MiB) max;     40MB (    38 MiB) avg;     42MB (    40 MiB) peak
Allocated heap memory:          1715MB (  1636 MiB) max;    994MB (   948 MiB) avg
Allocated non-heap memory:        43MB (    41 MiB) max;     43MB (    41 MiB) avg
Total process virtual memory:  19618MB ( 18709 MiB) max;  16022MB ( 15280 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
