scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 9600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-32_7a-drivers--net--wireless--ipw2x00--ipw2100.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 9600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_q8ydexx7/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker 1.6.1-svn 6608050+ (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 6578: Dead code detected: __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

line 6581: Dead code detected: __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

line 6584: Dead code detected: __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (8UL) {
  case 1UL:
  __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& current_task));
  goto ldv_2861;
  case 2UL:
  __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_2861;
  case 4UL:
  __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_2861;
  case 8UL:
  __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_2861;
  default:
  __bad_percpu_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 6738: Dead code detected: __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& kernel_stack)); (CFACreationUtils.addEdgeToCFA, INFO)

line 6741: Dead code detected: __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack)); (CFACreationUtils.addEdgeToCFA, INFO)

line 6744: Dead code detected: __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (8UL) {
  case 1UL:
  __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& kernel_stack));
  goto ldv_6413;
  case 2UL:
  __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack));
  goto ldv_6413;
  case 4UL:
  __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack));
  goto ldv_6413;
  case 8UL:
  __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack));
  goto ldv_6413;
  default:
  __bad_percpu_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 21710: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 7158: Function pointer *(ops->alloc) with type void *(*)(struct device *, size_t , dma_addr_t *, gfp_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7191: Function pointer *(ops->free) with type void (*)(struct device *, size_t , void *, dma_addr_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 6981-6982: Function pointer *(ops->map_page) with type dma_addr_t (*)(struct device *, struct page *, unsigned long, size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7048: Function pointer *(ops->sync_single_for_cpu) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7081: Function pointer *(ops->sync_single_for_device) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7015: Function pointer *(ops->unmap_page) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 20380: Function pointer *(crypt->ops->set_flags) with type unsigned long int (*)(unsigned long, void *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_handler_precall to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pm_qos_add_request to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __pci_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function driver_create_file to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function driver_remove_file to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pm_qos_remove_request to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strlcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netif_carrier_on to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ioread32 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __tasklet_schedule to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iowrite32 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netif_device_detach to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_save_state to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_disable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_set_power_state to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function get_seconds to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sysfs_remove_group to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function release_firmware to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_enable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_restore_state to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netif_device_attach to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snprintf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ioread8 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netif_carrier_off to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function schedule_delayed_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __wake_up to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function cancel_delayed_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function list_del to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function libipw_txb_free to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __list_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            56054 (21% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  53420 (95%)
  Because of loop head:            2270 (4%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         364 (1%)
  Times precision was empty:       16501 (29%)
  Times precision was {false}:     586 (1%)
  Times result was cached:         37554 (67%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      1413 (3%)
  Times result was 'false':        2690 (5%)
Number of strengthen sat checks:   0
Number of coverage checks:         21940
  BDD entailment checks:           9312
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       65
Number of predicates discovered:          9
Number of abstraction locations:          157
Max number of predicates per location:    9
Avg number of predicates per location:    2
Total predicates per abstraction:         152561
Max number of predicates per abstraction: 9
Avg number of predicates per abstraction: 76.32
Number of irrelevant predicates:          97567 (64%)
Number of preds handled by boolean abs:   2802 (2%)
  Total number of models for allsat:      1448
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.02

Time for post operator:                  4.034s
  Time for path formula creation:        3.919s
Time for strengthen operator:            0.166s
Time for prec operator:                  8.409s
  Time for abstraction:                  7.855s (Max:     0.029s, Count: 56054)
    Boolean abstraction:                 1.069s
    Solving time:                        1.168s (Max:     0.029s)
    Model enumeration time:              0.094s
    Time for BDD construction:           0.081s (Max:     0.010s)
Time for merge operator:                 0.096s
Time for coverage check:                 0.020s
  Time for BDD entailment checks:        0.017s
Total time for SMT solver (w/o itp):     1.262s

Number of path formula cache hits:   275228 (88%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     3.006s

Total number of created targets for pointer analysis: 10822
   Number of created targets for uf: *signed_int is 2
   Number of created targets for uf: *unsigned_char is 4961
   Number of created targets for uf: *(struct_firmware)* is 2
   Number of created targets for uf: *char is 613
   Number of created targets for uf: *unsigned_int is 256


Number of BDD nodes:                               365
Size of BDD node table:                            464047
Size of BDD cache:                                 46411
Size of BDD node cleanup queue:                        3039 (count: 37605, min: 0, max: 172, avg: 0.08)
Time for BDD node cleanup:                             0.010s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.356s
Automaton transfers with branching:                0
Automaton transfer successors:                       261018 (count: 261018, min: 1, max: 1, avg: 1.00) [1 x 261018]

CPA algorithm statistics
------------------------
Number of iterations:            179761
Max size of waitlist:            30
Average size of waitlist:        18
Number of computed successors:   197151
Max successors for one state:    2
Number of times merged:          6314
Number of times stopped:         12368
Number of times breaked:         364

Total time for CPA algorithm:        19.116s (Max:     0.858s)
  Time for choose from waitlist:      0.080s
  Time for precision adjustment:      9.558s
  Time for transfer relation:         8.142s
  Time for merge operator:            0.276s
  Time for stop operator:             0.269s
  Time for adding to reached set:     0.280s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   364
Avg. length of target path (in blocks):                7940 (count: 364, min: 7, max: 103, avg: 21.81)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   5.122s
  Counterexample analysis:                             4.417s (Max:     0.049s, Calls: 364)
    Refinement sat check:                              3.430s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.005s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.078s
  Precision update:                                    0.198s
  ARG update:                                          0.301s

Length of refined path (in blocks):                    7385 (count: 364, min: 6, max: 102, avg: 20.29)
Number of affected states:                             3888 (count: 364, min: 3, max: 100, avg: 10.68)
Length (states) of path with itp 'true':               3133 (count: 364, min: 1, max: 22, avg: 8.61)
Length (states) of path with itp non-trivial itp:      3888 (count: 364, min: 3, max: 100, avg: 10.68)
Length (states) of path with itp 'false':               364 (count: 364, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 364, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:            3524 (count: 364, min: 2, max: 99, avg: 9.68)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                364
Number of successful refinements:     364
Number of failed refinements:         0
Max. size of reached set before ref.: 5687
Max. size of reached set after ref.:  4736
Avg. size of reached set before ref.: 1027.76
Avg. size of reached set after ref.:  533.69

Total time for CEGAR algorithm:      24.681s
Time for refinements:                 5.443s
Average time for refinement:          0.014s
Max time for refinement:              0.064s

Code Coverage
-----------------------------
  Function coverage:      0.166
  Visited lines:          1624
  Total lines:            10994
  Line coverage:          0.148
  Visited conditions:     162
  Total conditions:       2874
  Condition coverage:     0.056

CPAchecker general statistics
-----------------------------
Number of program locations:     15461
Number of CFA edges:             17614
Number of relevant variables:    1912
Number of functions:             380
Number of loops:                 79
Size of reached set:             2255
  Number of reached locations:   597 (4%)
    Avg states per location:     3
    Max states per location:     59 (at node N484)
  Number of reached functions:   63 (17%)
  Number of partitions:          2227
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N13997 (before line 21654), Function main called from node N13860, stack depth 1 [49d658bf], stack [main]])
  Number of target states:       0
  Size of final wait list        21

Time for analysis setup:          5.693s
  Time for loading CPAs:          0.759s
  Time for loading parser:        0.393s
  Time for CFA construction:      4.458s
    Time for parsing file(s):     0.856s
    Time for AST to CFA:          1.657s
    Time for CFA sanity check:    0.466s
    Time for post-processing:     1.350s
      Time for var class.:        0.721s
Time for Analysis:               24.681s
CPU time for analysis:           24.690s
Total time for CPAchecker:       30.376s
Total CPU time for CPAchecker:   30.360s
Time for statistics:              0.102s

Time for Garbage Collector:       0.673s (in 67 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                136MB (   130 MiB) max;     90MB (    86 MiB) avg;    146MB (   139 MiB) peak
Used non-heap memory:             42MB (    40 MiB) max;     37MB (    35 MiB) avg;     42MB (    40 MiB) peak
Allocated heap memory:           255MB (   243 MiB) max;    255MB (   243 MiB) avg
Allocated non-heap memory:        44MB (    42 MiB) max;     39MB (    37 MiB) avg
Total process virtual memory:  12147MB ( 11584 MiB) max;  12136MB ( 11573 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
