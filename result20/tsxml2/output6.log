scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 9600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-32_7a-drivers--net--wireless--ipw2x00--ipw2100.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 9600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_m__jn_4_/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker 1.6.1-svn 6608050+ (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 6578: Dead code detected: __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

line 6581: Dead code detected: __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

line 6584: Dead code detected: __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (8UL) {
  case 1UL:
  __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& current_task));
  goto ldv_2861;
  case 2UL:
  __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_2861;
  case 4UL:
  __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_2861;
  case 8UL:
  __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_2861;
  default:
  __bad_percpu_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 6738: Dead code detected: __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& kernel_stack)); (CFACreationUtils.addEdgeToCFA, INFO)

line 6741: Dead code detected: __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack)); (CFACreationUtils.addEdgeToCFA, INFO)

line 6744: Dead code detected: __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (8UL) {
  case 1UL:
  __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& kernel_stack));
  goto ldv_6413;
  case 2UL:
  __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack));
  goto ldv_6413;
  case 4UL:
  __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack));
  goto ldv_6413;
  case 8UL:
  __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack));
  goto ldv_6413;
  default:
  __bad_percpu_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 21710: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 7158: Function pointer *(ops->alloc) with type void *(*)(struct device *, size_t , dma_addr_t *, gfp_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7191: Function pointer *(ops->free) with type void (*)(struct device *, size_t , void *, dma_addr_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 6981-6982: Function pointer *(ops->map_page) with type dma_addr_t (*)(struct device *, struct page *, unsigned long, size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7048: Function pointer *(ops->sync_single_for_cpu) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7081: Function pointer *(ops->sync_single_for_device) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7015: Function pointer *(ops->unmap_page) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 20380: Function pointer *(crypt->ops->set_flags) with type unsigned long int (*)(unsigned long, void *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_handler_precall to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pm_qos_add_request to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __pci_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function driver_create_file to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strlcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snprintf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iowrite32 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ioread32 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ioread8 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netif_carrier_on to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function driver_remove_file to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pm_qos_remove_request to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            41745 (22% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  39337 (94%)
  Because of loop head:            2351 (6%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         57 (0%)
  Times precision was empty:       3253 (8%)
  Times precision was {false}:     536 (1%)
  Times result was cached:         34357 (82%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      3599 (9%)
  Times result was 'false':        2924 (7%)
Number of strengthen sat checks:   0
Number of coverage checks:         14075
  BDD entailment checks:           5991
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       65
Number of predicates discovered:          7
Number of abstraction locations:          66
Max number of predicates per location:    5
Avg number of predicates per location:    3
Total predicates per abstraction:         108221
Max number of predicates per abstraction: 5
Avg number of predicates per abstraction: 26.17
Number of irrelevant predicates:          37332 (34%)
Number of preds handled by boolean abs:   7175 (7%)
  Total number of models for allsat:      3378
  Max number of models for allsat:        2
  Avg number of models for allsat:        0.94

Time for post operator:                  5.893s
  Time for path formula creation:        5.801s
Time for strengthen operator:            0.176s
Time for prec operator:                 10.684s
  Time for abstraction:                 10.161s (Max:     0.028s, Count: 41745)
    Boolean abstraction:                 2.737s
    Solving time:                        2.713s (Max:     0.027s)
    Model enumeration time:              0.143s
    Time for BDD construction:           0.137s (Max:     0.010s)
Time for merge operator:                 0.198s
Time for coverage check:                 0.019s
  Time for BDD entailment checks:        0.014s
Total time for SMT solver (w/o itp):     2.856s

Number of path formula cache hits:   149108 (69%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     4.980s

Total number of created targets for pointer analysis: 23304
   Number of created targets for uf: *unsigned_char is 10481
   Number of created targets for uf: *unsigned_int is 659
   Number of created targets for uf: *char is 1781


Number of BDD nodes:                               248
Size of BDD node table:                            464047
Size of BDD cache:                                 46411
Size of BDD node cleanup queue:                        7095 (count: 34272, min: 0, max: 404, avg: 0.21)
Time for BDD node cleanup:                             0.006s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.268s
Automaton transfers with branching:                0
Automaton transfer successors:                       187794 (count: 187794, min: 1, max: 1, avg: 1.00) [1 x 187794]

CPA algorithm statistics
------------------------
Number of iterations:            127859
Max size of waitlist:            46
Average size of waitlist:        30
Number of computed successors:   139724
Max successors for one state:    2
Number of times merged:          4042
Number of times stopped:         7345
Number of times breaked:         57

Total time for CPA algorithm:        22.260s (Max:     0.981s)
  Time for choose from waitlist:      0.088s
  Time for precision adjustment:     11.534s
  Time for transfer relation:         9.299s
  Time for merge operator:            0.345s
  Time for stop operator:             0.201s
  Time for adding to reached set:     0.248s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   57
Avg. length of target path (in blocks):                3807 (count: 57, min: 7, max: 106, avg: 66.79)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   1.857s
  Counterexample analysis:                             1.448s (Max:     0.051s, Calls: 57)
    Refinement sat check:                              1.054s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.001s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.032s
  Precision update:                                    0.040s
  ARG update:                                          0.273s

Length of refined path (in blocks):                    3367 (count: 57, min: 6, max: 103, avg: 59.07)
Number of affected states:                             3022 (count: 57, min: 4, max: 101, avg: 53.02)
Length (states) of path with itp 'true':                288 (count: 57, min: 1, max: 22, avg: 5.05)
Length (states) of path with itp non-trivial itp:      3022 (count: 57, min: 4, max: 101, avg: 53.02)
Length (states) of path with itp 'false':                57 (count: 57, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 57, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:            2965 (count: 57, min: 3, max: 100, avg: 52.02)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                57
Number of successful refinements:     57
Number of failed refinements:         0
Max. size of reached set before ref.: 3536
Max. size of reached set after ref.:  427
Avg. size of reached set before ref.: 2346.61
Avg. size of reached set after ref.:  79.79

Total time for CEGAR algorithm:      24.287s
Time for refinements:                 2.024s
Average time for refinement:          0.035s
Max time for refinement:              0.068s

Code Coverage
-----------------------------
  Function coverage:      0.076
  Visited lines:          1269
  Total lines:            10994
  Line coverage:          0.115
  Visited conditions:     76
  Total conditions:       2874
  Condition coverage:     0.026

CPAchecker general statistics
-----------------------------
Number of program locations:     15461
Number of CFA edges:             17614
Number of relevant variables:    1912
Number of functions:             380
Number of loops:                 79
Size of reached set:             247
  Number of reached locations:   205 (1%)
    Avg states per location:     1
    Max states per location:     4 (at node N856)
  Number of reached functions:   29 (8%)
  Number of partitions:          247
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0
  Size of final wait list        18

Time for analysis setup:          6.065s
  Time for loading CPAs:          0.883s
  Time for loading parser:        0.412s
  Time for CFA construction:      4.670s
    Time for parsing file(s):     0.862s
    Time for AST to CFA:          1.729s
    Time for CFA sanity check:    0.598s
    Time for post-processing:     1.405s
      Time for var class.:        0.775s
Time for Analysis:               24.287s
CPU time for analysis:           24.280s
Total time for CPAchecker:       30.354s
Total CPU time for CPAchecker:   30.330s
Time for statistics:              0.081s

Time for Garbage Collector:       0.893s (in 62 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                162MB (   155 MiB) max;    107MB (   102 MiB) avg;    169MB (   161 MiB) peak
Used non-heap memory:             49MB (    47 MiB) max;     42MB (    40 MiB) avg;     49MB (    47 MiB) peak
Allocated heap memory:           255MB (   243 MiB) max;    255MB (   243 MiB) avg
Allocated non-heap memory:        51MB (    48 MiB) max;     44MB (    42 MiB) avg
Total process virtual memory:  12146MB ( 11584 MiB) max;  12137MB ( 11575 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
