scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 9600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-32_7a-drivers--net--wireless--ipw2x00--ipw2100.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 9600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_8qgukvde/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker 1.6.1-svn 6608050+ (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 6578: Dead code detected: __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

line 6581: Dead code detected: __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

line 6584: Dead code detected: __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (8UL) {
  case 1UL:
  __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& current_task));
  goto ldv_2861;
  case 2UL:
  __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_2861;
  case 4UL:
  __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_2861;
  case 8UL:
  __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_2861;
  default:
  __bad_percpu_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 6738: Dead code detected: __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& kernel_stack)); (CFACreationUtils.addEdgeToCFA, INFO)

line 6741: Dead code detected: __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack)); (CFACreationUtils.addEdgeToCFA, INFO)

line 6744: Dead code detected: __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (8UL) {
  case 1UL:
  __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& kernel_stack));
  goto ldv_6413;
  case 2UL:
  __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack));
  goto ldv_6413;
  case 4UL:
  __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack));
  goto ldv_6413;
  case 8UL:
  __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack));
  goto ldv_6413;
  default:
  __bad_percpu_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 21710: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 7158: Function pointer *(ops->alloc) with type void *(*)(struct device *, size_t , dma_addr_t *, gfp_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7191: Function pointer *(ops->free) with type void (*)(struct device *, size_t , void *, dma_addr_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 6981-6982: Function pointer *(ops->map_page) with type dma_addr_t (*)(struct device *, struct page *, unsigned long, size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7048: Function pointer *(ops->sync_single_for_cpu) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7081: Function pointer *(ops->sync_single_for_device) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7015: Function pointer *(ops->unmap_page) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 20380: Function pointer *(crypt->ops->set_flags) with type unsigned long int (*)(unsigned long, void *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_handler_precall to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pm_qos_add_request to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __pci_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function driver_create_file to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function driver_remove_file to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pm_qos_remove_request to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strlcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netif_carrier_on to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ioread32 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __tasklet_schedule to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iowrite32 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netif_device_detach to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_save_state to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_disable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_set_power_state to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function get_seconds to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sysfs_remove_group to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function release_firmware to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snprintf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_enable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_restore_state to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netif_device_attach to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ioread8 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netif_carrier_off to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function schedule_delayed_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __wake_up to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function cancel_delayed_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function list_del to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function libipw_txb_free to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __list_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function libipw_networks_age to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pm_qos_update_request to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function libipw_set_geo to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function wiphy_rfkill_set_hw_state to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function request_firmware to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function schedule_timeout_uninterruptible to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iowrite16 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iowrite8 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ioread16 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            2312632 (21% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  2233414 (97%)
  Because of loop head:            78343 (3%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         875 (0%)
  Times precision was empty:       63763 (3%)
  Times precision was {false}:     2188 (0%)
  Times result was cached:         2175425 (94%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      71256 (3%)
  Times result was 'false':        228029 (10%)
Number of strengthen sat checks:   0
Number of coverage checks:         919426
  BDD entailment checks:           419612
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       65
Number of predicates discovered:          12
Number of abstraction locations:          395
Max number of predicates per location:    12
Avg number of predicates per location:    6
Total predicates per abstraction:         20608431
Max number of predicates per abstraction: 12
Avg number of predicates per abstraction: 280.60
Number of irrelevant predicates:          6663106 (32%)
Number of preds handled by boolean abs:   374615 (2%)
  Total number of models for allsat:      126086
  Max number of models for allsat:        4
  Avg number of models for allsat:        1.77

Time for post operator:                 82.394s
  Time for path formula creation:       80.282s
Time for strengthen operator:            4.895s
Time for prec operator:                576.717s
  Time for abstraction:                559.670s (Max:     1.008s, Count: 2312632)
    Boolean abstraction:                53.942s
    Solving time:                       43.703s (Max:     0.053s)
    Model enumeration time:              5.699s
    Time for BDD construction:           1.333s (Max:     0.012s)
Time for merge operator:                 1.950s
Time for coverage check:                 0.304s
  Time for BDD entailment checks:        0.259s
Total time for SMT solver (w/o itp):    49.402s

Number of path formula cache hits:   11571879 (90%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    49.638s

Total number of created targets for pointer analysis: 336194
   Number of created targets for uf: *(void)* is 269
   Number of created targets for uf: *signed_int is 317
   Number of created targets for uf: *unsigned_char is 8561
   Number of created targets for uf: *(struct_list_head)* is 464
   Number of created targets for uf: *(struct_firmware)* is 317
   Number of created targets for uf: *char is 3295
   Number of created targets for uf: *unsigned_int is 5669
   Number of created targets for uf: *unsigned_long_int is 29


Number of BDD nodes:                               3332
Size of BDD node table:                            464047
Size of BDD cache:                                 46411
Size of BDD node cleanup queue:                      140513 (count: 978142, min: 0, max: 1398, avg: 0.14)
Time for BDD node cleanup:                             0.101s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  8.524s
  Time for transition matches:                         4.963s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.005s
Automaton transfers with branching:                0
Automaton transfer successors:                     10866230 (count: 10866230, min: 1, max: 1, avg: 1.00) [1 x 10866230]

CPA algorithm statistics
------------------------
Number of iterations:            7390431
Max size of waitlist:            62
Average size of waitlist:        31
Number of computed successors:   8055885
Max successors for one state:    2
Number of times merged:          249907
Number of times stopped:         422674
Number of times breaked:         875

Total time for CPA algorithm:       851.838s (Max:     6.499s)
  Time for choose from waitlist:      1.954s
  Time for precision adjustment:    603.050s
  Time for transfer relation:       219.054s
  Time for merge operator:            4.071s
  Time for stop operator:             5.134s
  Time for adding to reached set:     8.070s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   875
Avg. length of target path (in blocks):               98407 (count: 875, min: 7, max: 492, avg: 112.47)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  37.936s
  Counterexample analysis:                            28.801s (Max:     0.146s, Calls: 875)
    Refinement sat check:                             14.348s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.033s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.504s
  Precision update:                                    0.450s
  ARG update:                                          7.738s

Length of refined path (in blocks):                   91990 (count: 875, min: 6, max: 491, avg: 105.13)
Number of affected states:                            81506 (count: 875, min: 3, max: 489, avg: 93.15)
Length (states) of path with itp 'true':               9609 (count: 875, min: 0, max: 208, avg: 10.98)
Length (states) of path with itp non-trivial itp:     81506 (count: 875, min: 3, max: 489, avg: 93.15)
Length (states) of path with itp 'false':               875 (count: 875, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 875, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:           80631 (count: 875, min: 2, max: 488, avg: 92.15)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                875
Number of successful refinements:     875
Number of failed refinements:         0
Max. size of reached set before ref.: 51663
Max. size of reached set after ref.:  30859
Avg. size of reached set before ref.: 10458.36
Avg. size of reached set after ref.:  2015.38

Total time for CEGAR algorithm:     894.553s
Time for refinements:                41.833s
Average time for refinement:          0.047s
Max time for refinement:              0.273s

Code Coverage
-----------------------------
  Function coverage:      0.245
  Visited lines:          2323
  Total lines:            10994
  Line coverage:          0.211
  Visited conditions:     442
  Total conditions:       2874
  Condition coverage:     0.154

CPAchecker general statistics
-----------------------------
Number of program locations:     15461
Number of CFA edges:             17614
Number of relevant variables:    1912
Number of functions:             380
Number of loops:                 79
Size of reached set:             17571
  Number of reached locations:   1403 (9%)
    Avg states per location:     12
    Max states per location:     469 (at node N484)
  Number of reached functions:   93 (24%)
  Number of partitions:          17297
    Avg size of partitions:      1
    Max size of partitions:      6 (with key [N2047 (before line 9113), Function ipw2100_start_adapter called from node N3219, stack depth 4 [5c3281ed], stack [main, ipw2100_resume, ipw2100_up, ipw2100_start_adapter]])
  Number of target states:       0
  Size of final wait list        31

Time for analysis setup:          5.795s
  Time for loading CPAs:          0.712s
  Time for loading parser:        0.364s
  Time for CFA construction:      4.623s
    Time for parsing file(s):     0.801s
    Time for AST to CFA:          1.648s
    Time for CFA sanity check:    0.539s
    Time for post-processing:     1.534s
      Time for var class.:        0.827s
Time for Analysis:              894.553s
CPU time for analysis:          894.510s
Total time for CPAchecker:      900.357s
Total CPU time for CPAchecker:  900.310s
Time for statistics:              0.264s

Time for Garbage Collector:      40.344s (in 1544 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:               1100MB (  1049 MiB) max;    542MB (   517 MiB) avg;   1130MB (  1077 MiB) peak
Used non-heap memory:             42MB (    40 MiB) max;     41MB (    39 MiB) avg;     42MB (    40 MiB) peak
Allocated heap memory:          1174MB (  1119 MiB) max;    812MB (   774 MiB) avg
Allocated non-heap memory:        45MB (    42 MiB) max;     44MB (    42 MiB) avg
Total process virtual memory:  13356MB ( 12737 MiB) max;  12794MB ( 12201 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
