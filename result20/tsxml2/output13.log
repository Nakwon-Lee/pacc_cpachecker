scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 9600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-32_7a-drivers--net--wireless--ipw2x00--ipw2100.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 9600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_u4leohgz/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker 1.6.1-svn 6608050+ (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 6578: Dead code detected: __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

line 6581: Dead code detected: __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

line 6584: Dead code detected: __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (8UL) {
  case 1UL:
  __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& current_task));
  goto ldv_2861;
  case 2UL:
  __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_2861;
  case 4UL:
  __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_2861;
  case 8UL:
  __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_2861;
  default:
  __bad_percpu_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 6738: Dead code detected: __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& kernel_stack)); (CFACreationUtils.addEdgeToCFA, INFO)

line 6741: Dead code detected: __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack)); (CFACreationUtils.addEdgeToCFA, INFO)

line 6744: Dead code detected: __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (8UL) {
  case 1UL:
  __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& kernel_stack));
  goto ldv_6413;
  case 2UL:
  __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack));
  goto ldv_6413;
  case 4UL:
  __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack));
  goto ldv_6413;
  case 8UL:
  __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack));
  goto ldv_6413;
  default:
  __bad_percpu_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 21710: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 7158: Function pointer *(ops->alloc) with type void *(*)(struct device *, size_t , dma_addr_t *, gfp_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7191: Function pointer *(ops->free) with type void (*)(struct device *, size_t , void *, dma_addr_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 6981-6982: Function pointer *(ops->map_page) with type dma_addr_t (*)(struct device *, struct page *, unsigned long, size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7048: Function pointer *(ops->sync_single_for_cpu) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7081: Function pointer *(ops->sync_single_for_device) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7015: Function pointer *(ops->unmap_page) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 20380: Function pointer *(crypt->ops->set_flags) with type unsigned long int (*)(unsigned long, void *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_handler_precall to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pm_qos_add_request to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __pci_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function driver_create_file to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_iomap to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function unregister_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function wiphy_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_iounmap to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_release_regions to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_disable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value_probe to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function driver_remove_file to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pm_qos_remove_request to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function alloc_libipw to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_enable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function cancel_delayed_work_sync to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function cancel_work_sync to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function cancel_delayed_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_set_power_state to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_restore_state to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netif_device_attach to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function get_seconds to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function libipw_networks_age to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pm_qos_update_request to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sysfs_remove_group to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function release_firmware to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netif_device_detach to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_save_state to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            23583 (9% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  22760 (97%)
  Because of loop head:            731 (3%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         92 (0%)
  Times precision was empty:       13326 (57%)
  Times precision was {false}:     236 (1%)
  Times result was cached:         9235 (39%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      786 (3%)
  Times result was 'false':        1083 (5%)
Number of strengthen sat checks:   0
Number of coverage checks:         14576
  BDD entailment checks:           4218
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       113
Number of predicates discovered:          7
Number of abstraction locations:          62
Max number of predicates per location:    6
Avg number of predicates per location:    4
Total predicates per abstraction:         40744
Max number of predicates per abstraction: 6
Avg number of predicates per abstraction: 39.87
Number of irrelevant predicates:          17434 (43%)
Number of preds handled by boolean abs:   2011 (5%)
  Total number of models for allsat:      779
  Max number of models for allsat:        1
  Avg number of models for allsat:        0.99

Time for post operator:                  7.607s
  Time for path formula creation:        7.506s
Time for strengthen operator:            0.183s
Time for prec operator:                 10.223s
  Time for abstraction:                  9.771s (Max:     0.997s, Count: 23583)
    Boolean abstraction:                 0.614s
    Solving time:                        2.154s (Max:     0.925s)
    Model enumeration time:              0.053s
    Time for BDD construction:           0.057s (Max:     0.012s)
Time for merge operator:                 0.112s
Time for coverage check:                 0.024s
  Time for BDD entailment checks:        0.022s
Total time for SMT solver (w/o itp):     2.207s

Number of path formula cache hits:   258399 (92%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     6.471s

Total number of created targets for pointer analysis: 189552
   Number of created targets for uf: *signed_int is 2
   Number of created targets for uf: *unsigned_char is 881
   Number of created targets for uf: *(struct_firmware)* is 2
   Number of created targets for uf: *unsigned_int is 1472
   Number of created targets for uf: *char is 309


Number of BDD nodes:                               230
Size of BDD node table:                            464047
Size of BDD cache:                                 46411
Size of BDD node cleanup queue:                        1651 (count: 23606, min: 0, max: 111, avg: 0.07)
Time for BDD node cleanup:                             0.013s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.435s
Automaton transfers with branching:                0
Automaton transfer successors:                       256236 (count: 256236, min: 1, max: 1, avg: 1.00) [1 x 256236]

CPA algorithm statistics
------------------------
Number of iterations:            89262
Max size of waitlist:            117
Average size of waitlist:        46
Number of computed successors:   104046
Max successors for one state:    2
Number of times merged:          5179
Number of times stopped:         7766
Number of times breaked:         92

Total time for CPA algorithm:        22.511s (Max:     2.963s)
  Time for choose from waitlist:      0.114s
  Time for precision adjustment:     11.003s
  Time for transfer relation:        10.338s
  Time for merge operator:            0.236s
  Time for stop operator:             0.162s
  Time for adding to reached set:     0.180s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   92
Avg. length of target path (in blocks):                1813 (count: 92, min: 7, max: 31, avg: 19.71)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   1.640s
  Counterexample analysis:                             1.287s (Max:     0.025s, Calls: 92)
    Refinement sat check:                              1.044s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.035s
  Precision update:                                    0.092s
  ARG update:                                          0.200s

Length of refined path (in blocks):                    1613 (count: 92, min: 6, max: 30, avg: 17.53)
Number of affected states:                             1289 (count: 92, min: 3, max: 28, avg: 14.01)
Length (states) of path with itp 'true':                232 (count: 92, min: 1, max: 16, avg: 2.52)
Length (states) of path with itp non-trivial itp:      1289 (count: 92, min: 3, max: 28, avg: 14.01)
Length (states) of path with itp 'false':                92 (count: 92, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 92, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:            1197 (count: 92, min: 2, max: 27, avg: 13.01)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                92
Number of successful refinements:     92
Number of failed refinements:         0
Max. size of reached set before ref.: 1898
Max. size of reached set after ref.:  775
Avg. size of reached set before ref.: 1127.58
Avg. size of reached set after ref.:  98.18

Total time for CEGAR algorithm:      24.283s
Time for refinements:                 1.759s
Average time for refinement:          0.019s
Max time for refinement:              0.053s

Code Coverage
-----------------------------
  Function coverage:      0.111
  Visited lines:          1824
  Total lines:            10994
  Line coverage:          0.166
  Visited conditions:     108
  Total conditions:       2874
  Condition coverage:     0.038

CPAchecker general statistics
-----------------------------
Number of program locations:     15461
Number of CFA edges:             17614
Number of relevant variables:    1912
Number of functions:             380
Number of loops:                 79
Size of reached set:             494
  Number of reached locations:   313 (2%)
    Avg states per location:     1
    Max states per location:     11 (at node N720)
  Number of reached functions:   42 (11%)
  Number of partitions:          494
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0
  Size of final wait list        31

Time for analysis setup:          6.082s
  Time for loading CPAs:          0.708s
  Time for loading parser:        0.395s
  Time for CFA construction:      4.895s
    Time for parsing file(s):     0.853s
    Time for AST to CFA:          1.792s
    Time for CFA sanity check:    0.544s
    Time for post-processing:     1.612s
      Time for var class.:        0.890s
Time for Analysis:               24.283s
CPU time for analysis:           24.280s
Total time for CPAchecker:       30.368s
Total CPU time for CPAchecker:   30.350s
Time for statistics:              0.091s

Time for Garbage Collector:       0.749s (in 82 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                135MB (   129 MiB) max;     91MB (    87 MiB) avg;    144MB (   137 MiB) peak
Used non-heap memory:             40MB (    39 MiB) max;     36MB (    34 MiB) avg;     41MB (    39 MiB) peak
Allocated heap memory:           255MB (   243 MiB) max;    255MB (   243 MiB) avg
Allocated non-heap memory:        42MB (    40 MiB) max;     38MB (    36 MiB) avg
Total process virtual memory:  12146MB ( 11584 MiB) max;  12135MB ( 11573 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
