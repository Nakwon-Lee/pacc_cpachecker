scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 9600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-32_7a-drivers--net--wireless--ipw2x00--ipw2100.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 9600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_299mv46q/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker 1.6.1-svn 6608050+ (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 6578: Dead code detected: __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

line 6581: Dead code detected: __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

line 6584: Dead code detected: __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (8UL) {
  case 1UL:
  __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& current_task));
  goto ldv_2861;
  case 2UL:
  __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_2861;
  case 4UL:
  __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_2861;
  case 8UL:
  __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_2861;
  default:
  __bad_percpu_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 6738: Dead code detected: __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& kernel_stack)); (CFACreationUtils.addEdgeToCFA, INFO)

line 6741: Dead code detected: __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack)); (CFACreationUtils.addEdgeToCFA, INFO)

line 6744: Dead code detected: __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (8UL) {
  case 1UL:
  __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& kernel_stack));
  goto ldv_6413;
  case 2UL:
  __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack));
  goto ldv_6413;
  case 4UL:
  __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack));
  goto ldv_6413;
  case 8UL:
  __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack));
  goto ldv_6413;
  default:
  __bad_percpu_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 21710: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 7158: Function pointer *(ops->alloc) with type void *(*)(struct device *, size_t , dma_addr_t *, gfp_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7191: Function pointer *(ops->free) with type void (*)(struct device *, size_t , void *, dma_addr_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 6981-6982: Function pointer *(ops->map_page) with type dma_addr_t (*)(struct device *, struct page *, unsigned long, size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7048: Function pointer *(ops->sync_single_for_cpu) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7081: Function pointer *(ops->sync_single_for_device) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7015: Function pointer *(ops->unmap_page) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 20380: Function pointer *(crypt->ops->set_flags) with type unsigned long int (*)(unsigned long, void *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_handler_precall to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pm_qos_add_request to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __pci_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function driver_create_file to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_iomap to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function unregister_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function wiphy_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_iounmap to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_release_regions to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_disable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value_probe to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function driver_remove_file to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pm_qos_remove_request to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function alloc_libipw to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_enable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function cancel_delayed_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function cancel_delayed_work_sync to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function cancel_work_sync to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function get_seconds to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netif_carrier_off to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netif_carrier_on to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            21056 (11% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  20273 (96%)
  Because of loop head:            691 (3%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         92 (0%)
  Times precision was empty:       12725 (60%)
  Times precision was {false}:     317 (2%)
  Times result was cached:         7604 (36%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      410 (2%)
  Times result was 'false':        247 (1%)
Number of strengthen sat checks:   0
Number of coverage checks:         19782
  BDD entailment checks:           4762
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       113
Number of predicates discovered:          8
Number of abstraction locations:          38
Max number of predicates per location:    6
Avg number of predicates per location:    3
Total predicates per abstraction:         20061
Max number of predicates per abstraction: 7
Avg number of predicates per abstraction: 27.59
Number of irrelevant predicates:          16325 (81%)
Number of preds handled by boolean abs:   703 (4%)
  Total number of models for allsat:      459
  Max number of models for allsat:        4
  Avg number of models for allsat:        1.12

Time for post operator:                 11.261s
  Time for path formula creation:       11.076s
Time for strengthen operator:            0.176s
Time for prec operator:                  6.480s
  Time for abstraction:                  6.112s (Max:     0.744s, Count: 21056)
    Boolean abstraction:                 1.960s
    Solving time:                        3.157s (Max:     0.508s)
    Model enumeration time:              0.480s
    Time for BDD construction:           0.081s (Max:     0.010s)
Time for merge operator:                 0.256s
Time for coverage check:                 0.027s
  Time for BDD entailment checks:        0.024s
Total time for SMT solver (w/o itp):     3.637s

Number of path formula cache hits:   170663 (79%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    10.288s

Total number of created targets for pointer analysis: 292269
   Number of created targets for uf: *unsigned_char is 721
   Number of created targets for uf: *unsigned_int is 2009
   Number of created targets for uf: *char is 253


Number of BDD nodes:                               249
Size of BDD node table:                            464047
Size of BDD cache:                                 46411
Size of BDD node cleanup queue:                         880 (count: 21664, min: 0, max: 71, avg: 0.04)
Time for BDD node cleanup:                             0.015s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.424s
Automaton transfers with branching:                0
Automaton transfer successors:                       195359 (count: 195359, min: 1, max: 1, avg: 1.00) [1 x 195359]

CPA algorithm statistics
------------------------
Number of iterations:            89952
Max size of waitlist:            124
Average size of waitlist:        63
Number of computed successors:   105952
Max successors for one state:    2
Number of times merged:          7510
Number of times stopped:         10035
Number of times breaked:         92

Total time for CPA algorithm:        22.789s (Max:     1.556s)
  Time for choose from waitlist:      0.130s
  Time for precision adjustment:      7.241s
  Time for transfer relation:        14.017s
  Time for merge operator:            0.456s
  Time for stop operator:             0.229s
  Time for adding to reached set:     0.244s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   92
Avg. length of target path (in blocks):                2461 (count: 92, min: 12, max: 41, avg: 26.75)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   1.773s
  Counterexample analysis:                             1.416s (Max:     0.026s, Calls: 92)
    Refinement sat check:                              1.103s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.052s
  Precision update:                                    0.060s
  ARG update:                                          0.203s

Length of refined path (in blocks):                    1457 (count: 92, min: 7, max: 29, avg: 15.84)
Number of affected states:                              799 (count: 92, min: 0, max: 27, avg: 8.68)
Length (states) of path with itp 'true':                566 (count: 92, min: 1, max: 15, avg: 6.15)
Length (states) of path with itp non-trivial itp:       799 (count: 92, min: 0, max: 27, avg: 8.68)
Length (states) of path with itp 'false':                92 (count: 92, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 92, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:             725 (count: 92, min: 0, max: 26, avg: 7.88)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                92
Number of successful refinements:     92
Number of failed refinements:         0
Max. size of reached set before ref.: 1865
Max. size of reached set after ref.:  664
Avg. size of reached set before ref.: 1258.47
Avg. size of reached set after ref.:  237.43

Total time for CEGAR algorithm:      24.688s
Time for refinements:                 1.879s
Average time for refinement:          0.020s
Max time for refinement:              0.054s

Code Coverage
-----------------------------
  Function coverage:      0.111
  Visited lines:          1819
  Total lines:            10994
  Line coverage:          0.165
  Visited conditions:     178
  Total conditions:       2874
  Condition coverage:     0.062

CPAchecker general statistics
-----------------------------
Number of program locations:     15461
Number of CFA edges:             17614
Number of relevant variables:    1912
Number of functions:             380
Number of loops:                 79
Size of reached set:             1735
  Number of reached locations:   446 (3%)
    Avg states per location:     3
    Max states per location:     38 (at node N720)
  Number of reached functions:   42 (11%)
  Number of partitions:          1724
    Avg size of partitions:      1
    Max size of partitions:      4 (with key [N13997 (before line 21654), Function main called from node N13860, stack depth 1 [49d658bf], stack [main]])
  Number of target states:       0
  Size of final wait list        112

Time for analysis setup:          5.782s
  Time for loading CPAs:          0.756s
  Time for loading parser:        0.381s
  Time for CFA construction:      4.552s
    Time for parsing file(s):     0.867s
    Time for AST to CFA:          1.638s
    Time for CFA sanity check:    0.577s
    Time for post-processing:     1.399s
      Time for var class.:        0.686s
Time for Analysis:               24.688s
CPU time for analysis:           24.680s
Total time for CPAchecker:       30.472s
Total CPU time for CPAchecker:   30.450s
Time for statistics:              0.102s

Time for Garbage Collector:       0.711s (in 52 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                144MB (   137 MiB) max;     93MB (    89 MiB) avg;    151MB (   144 MiB) peak
Used non-heap memory:             41MB (    39 MiB) max;     36MB (    35 MiB) avg;     41MB (    40 MiB) peak
Allocated heap memory:           255MB (   243 MiB) max;    255MB (   243 MiB) avg
Allocated non-heap memory:        43MB (    41 MiB) max;     38MB (    37 MiB) avg
Total process virtual memory:  12149MB ( 11586 MiB) max;  12136MB ( 11574 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
