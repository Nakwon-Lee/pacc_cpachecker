scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 9600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-32_7a-drivers--net--wireless--ipw2x00--ipw2100.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 9600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_iqfzx84b/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker 1.6.1-svn 6608050+ (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 6578: Dead code detected: __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

line 6581: Dead code detected: __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

line 6584: Dead code detected: __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (8UL) {
  case 1UL:
  __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& current_task));
  goto ldv_2861;
  case 2UL:
  __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_2861;
  case 4UL:
  __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_2861;
  case 8UL:
  __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_2861;
  default:
  __bad_percpu_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 6738: Dead code detected: __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& kernel_stack)); (CFACreationUtils.addEdgeToCFA, INFO)

line 6741: Dead code detected: __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack)); (CFACreationUtils.addEdgeToCFA, INFO)

line 6744: Dead code detected: __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (8UL) {
  case 1UL:
  __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& kernel_stack));
  goto ldv_6413;
  case 2UL:
  __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack));
  goto ldv_6413;
  case 4UL:
  __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack));
  goto ldv_6413;
  case 8UL:
  __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack));
  goto ldv_6413;
  default:
  __bad_percpu_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 21710: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 7158: Function pointer *(ops->alloc) with type void *(*)(struct device *, size_t , dma_addr_t *, gfp_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7191: Function pointer *(ops->free) with type void (*)(struct device *, size_t , void *, dma_addr_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 6981-6982: Function pointer *(ops->map_page) with type dma_addr_t (*)(struct device *, struct page *, unsigned long, size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7048: Function pointer *(ops->sync_single_for_cpu) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7081: Function pointer *(ops->sync_single_for_device) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7015: Function pointer *(ops->unmap_page) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 20380: Function pointer *(crypt->ops->set_flags) with type unsigned long int (*)(unsigned long, void *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_handler_precall to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pm_qos_add_request to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __pci_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function driver_create_file to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strlcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iowrite32 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ioread32 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ioread8 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snprintf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function driver_remove_file to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pm_qos_remove_request to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netif_carrier_on to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netif_carrier_off to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function list_del to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function libipw_txb_free to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __list_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function get_seconds to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function schedule_delayed_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __wake_up to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function debug_dma_map_page to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 7081: Ignoring function call through function pointer *(ops->sync_single_for_device): (*(ops->sync_single_for_device))(dev, addr, size, dir); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function debug_dma_sync_single_for_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function schedule_timeout_uninterruptible to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function prepare_to_wait to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function finish_wait to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function schedule_timeout to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function cancel_delayed_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function wireless_send_event to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function libipw_networks_age to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pm_qos_update_request to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function request_firmware to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function release_firmware to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iowrite16 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iowrite8 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ioread16 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function libipw_set_geo to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function wiphy_rfkill_set_hw_state to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            1373677 (20% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  1289930 (94%)
  Because of loop head:            83367 (6%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         380 (0%)
  Times precision was empty:       209689 (15%)
  Times precision was {false}:     6128 (0%)
  Times result was cached:         1127633 (82%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      30227 (2%)
  Times result was 'false':        64733 (5%)
Number of strengthen sat checks:   0
Number of coverage checks:         667949
  BDD entailment checks:           244265
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       118
Number of predicates discovered:          15
Number of abstraction locations:          388
Max number of predicates per location:    11
Avg number of predicates per location:    3
Total predicates per abstraction:         6117336
Max number of predicates per abstraction: 11
Avg number of predicates per abstraction: 168.27
Number of irrelevant predicates:          3616120 (59%)
Number of preds handled by boolean abs:   86194 (1%)
  Total number of models for allsat:      82301
  Max number of models for allsat:        16
  Avg number of models for allsat:        2.72

Time for post operator:                187.022s
  Time for path formula creation:      184.733s
Time for strengthen operator:            3.813s
Time for prec operator:                402.195s
  Time for abstraction:                387.977s (Max:     3.848s, Count: 1373677)
    Boolean abstraction:               166.009s
    Solving time:                       88.844s (Max:     0.710s)
    Model enumeration time:             97.528s
    Time for BDD construction:           0.776s (Max:     0.008s)
Time for merge operator:                 4.197s
Time for coverage check:                 0.204s
  Time for BDD entailment checks:        0.134s
Total time for SMT solver (w/o itp):   186.372s

Number of path formula cache hits:   4180146 (54%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:   159.064s

Total number of created targets for pointer analysis: 2039958
   Number of created targets for uf: *unsigned_short_int is 443
   Number of created targets for uf: *(void)* is 249
   Number of created targets for uf: *signed_int is 769
   Number of created targets for uf: *unsigned_char is 2561
   Number of created targets for uf: *(struct_list_head)* is 3879
   Number of created targets for uf: *(struct_firmware)* is 2225
   Number of created targets for uf: *unsigned_int is 53
   Number of created targets for uf: *char is 11495
   Number of created targets for uf: *unsigned_long_int is 497


Number of BDD nodes:                               1431
Size of BDD node table:                            464047
Size of BDD cache:                                 46411
Size of BDD node cleanup queue:                       60440 (count: 686794, min: 0, max: 1171, avg: 0.09)
Time for BDD node cleanup:                             0.065s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  6.481s
  Time for transition matches:                         4.456s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.003s
Automaton transfers with branching:                0
Automaton transfer successors:                      7028434 (count: 7028434, min: 1, max: 1, avg: 1.00) [1 x 7028434]

CPA algorithm statistics
------------------------
Number of iterations:            4664082
Max size of waitlist:            57
Average size of waitlist:        26
Number of computed successors:   5117163
Max successors for one state:    2
Number of times merged:          211842
Number of times stopped:         389199
Number of times breaked:         380

Total time for CPA algorithm:       727.617s (Max:    10.994s)
  Time for choose from waitlist:      1.409s
  Time for precision adjustment:    423.469s
  Time for transfer relation:       279.682s
  Time for merge operator:            6.171s
  Time for stop operator:             3.733s
  Time for adding to reached set:     5.601s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   380
Avg. length of target path (in blocks):              113100 (count: 380, min: 7, max: 744, avg: 297.63)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                 160.034s
  Counterexample analysis:                           153.735s (Max:     0.897s, Calls: 380)
    Refinement sat check:                            116.047s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.153s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.293s
  Precision update:                                    0.309s
  ARG update:                                          5.246s

Length of refined path (in blocks):                   73664 (count: 380, min: 6, max: 592, avg: 193.85)
Number of affected states:                            55732 (count: 380, min: 1, max: 554, avg: 146.66)
Length (states) of path with itp 'true':              17552 (count: 380, min: 0, max: 570, avg: 46.19)
Length (states) of path with itp non-trivial itp:     55732 (count: 380, min: 1, max: 554, avg: 146.66)
Length (states) of path with itp 'false':               380 (count: 380, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 380, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:           55352 (count: 380, min: 0, max: 553, avg: 145.66)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                380
Number of successful refinements:     380
Number of failed refinements:         0
Max. size of reached set before ref.: 60851
Max. size of reached set after ref.:  51777
Avg. size of reached set before ref.: 24338.38
Avg. size of reached set after ref.:  12126.19

Total time for CEGAR algorithm:     894.721s
Time for refinements:               164.712s
Average time for refinement:          0.433s
Max time for refinement:              0.930s

Code Coverage
-----------------------------
  Function coverage:      0.271
  Visited lines:          2938
  Total lines:            10994
  Line coverage:          0.267
  Visited conditions:     588
  Total conditions:       2874
  Condition coverage:     0.205

CPAchecker general statistics
-----------------------------
Number of program locations:     15461
Number of CFA edges:             17614
Number of relevant variables:    1912
Number of functions:             380
Number of loops:                 79
Size of reached set:             22597
  Number of reached locations:   1872 (12%)
    Avg states per location:     12
    Max states per location:     422 (at node N104)
  Number of reached functions:   103 (27%)
  Number of partitions:          22373
    Avg size of partitions:      1
    Max size of partitions:      8 (with key [N2047 (before line 9113), Function ipw2100_start_adapter called from node N3219, stack depth 5 [10817947], stack [main, ipw2100_set_address, ipw2100_reset_adapter, ipw2100_up, ipw2100_start_adapter]])
  Number of target states:       0
  Size of final wait list        27

Time for analysis setup:          5.664s
  Time for loading CPAs:          0.689s
  Time for loading parser:        0.372s
  Time for CFA construction:      4.530s
    Time for parsing file(s):     0.813s
    Time for AST to CFA:          1.669s
    Time for CFA sanity check:    0.409s
    Time for post-processing:     1.513s
      Time for var class.:        0.882s
Time for Analysis:              894.721s
CPU time for analysis:          894.730s
Total time for CPAchecker:      900.388s
Total CPU time for CPAchecker:  900.380s
Time for statistics:              0.318s

Time for Garbage Collector:      39.254s (in 653 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:               1886MB (  1798 MiB) max;    944MB (   900 MiB) avg;   1933MB (  1844 MiB) peak
Used non-heap memory:             43MB (    41 MiB) max;     41MB (    39 MiB) avg;     43MB (    41 MiB) peak
Allocated heap memory:          2357MB (  2247 MiB) max;   1436MB (  1369 MiB) avg
Allocated non-heap memory:        44MB (    42 MiB) max;     44MB (    42 MiB) avg
Total process virtual memory:  13829MB ( 13188 MiB) max;  12830MB ( 12235 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
