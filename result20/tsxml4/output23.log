scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 9600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-32_7a-drivers--message--i2o--i2o_core.ko-ldv_main4_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 9600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_yk_3nb52/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker 1.6.1-svn 6608050+ (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 4394: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 5089: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 5980: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 6585: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 7272: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 7304: Dead code detected: __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

line 7307: Dead code detected: __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

line 7310: Dead code detected: __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (8UL) {
  case 1UL:
  __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& current_task));
  goto ldv_2861;
  case 2UL:
  __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_2861;
  case 4UL:
  __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_2861;
  case 8UL:
  __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_2861;
  default:
  __bad_percpu_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 8024: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 8767: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 8382: Function pointer *(ops->alloc) with type void *(*)(struct device *, size_t , dma_addr_t *, gfp_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 8415: Function pointer *(ops->free) with type void (*)(struct device *, size_t , void *, dma_addr_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 8289: Function pointer *(ops->map_sg) with type int (*)(struct device *, struct scatterlist *, int, enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 2842-2843: Function pointer *(ops->map_page) with type dma_addr_t (*)(struct device *, struct page *, unsigned long, size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 8242-8243: Function pointer *(ops->map_page) with type dma_addr_t (*)(struct device *, struct page *, unsigned long, size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 8306: Function pointer *(ops->mapping_error) with type int (*)(struct device *, dma_addr_t ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 2876: Function pointer *(ops->unmap_page) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 4475: Function pointer *(drv->notify_controller_add) with type void (*)(struct i2o_controller *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 4489: Function pointer *(drv->notify_controller_remove) with type void (*)(struct i2o_controller *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 4502: Function pointer *(drv->notify_device_add) with type void (*)(struct i2o_device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 4515: Function pointer *(drv->notify_device_remove) with type void (*)(struct i2o_device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_handler_precall to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_enable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 4857: Ignoring function call through function pointer *(drv->reply): tmp___6 = (*(drv->reply))(c, m, msg); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function __dynamic_pr_debug to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __init_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function lockdep_init_map to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function queue_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function list_del to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __wake_up to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function debug_dma_free_coherent to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 8415: Ignoring function call through function pointer *(ops->free): (*(ops->free))(dev, size, vaddr, bus, attrs); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function dma_set_mask to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_set_master to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value_probe to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            64477 (14% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  58727 (91%)
  Because of loop head:            5670 (9%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         80 (0%)
  Times precision was empty:       10785 (17%)
  Times precision was {false}:     475 (1%)
  Times result was cached:         51237 (79%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      1980 (3%)
  Times result was 'false':        761 (1%)
Number of strengthen sat checks:   0
Number of coverage checks:         73191
  BDD entailment checks:           14215
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       34
Number of predicates discovered:          8
Number of abstraction locations:          93
Max number of predicates per location:    6
Avg number of predicates per location:    3
Total predicates per abstraction:         114230
Max number of predicates per abstraction: 6
Avg number of predicates per abstraction: 46.53
Number of irrelevant predicates:          27372 (24%)
Number of preds handled by boolean abs:   4096 (4%)
  Total number of models for allsat:      1978
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.00

Time for post operator:                  8.629s
  Time for path formula creation:        8.390s
Time for strengthen operator:            0.408s
Time for prec operator:                  7.122s
  Time for abstraction:                  6.310s (Max:     0.020s, Count: 64477)
    Boolean abstraction:                 0.710s
    Solving time:                        0.610s (Max:     0.012s)
    Model enumeration time:              0.057s
    Time for BDD construction:           0.071s (Max:     0.007s)
Time for merge operator:                 0.541s
Time for coverage check:                 0.067s
  Time for BDD entailment checks:        0.054s
Total time for SMT solver (w/o itp):     0.667s

Number of path formula cache hits:   405466 (77%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     7.034s

Total number of created targets for pointer analysis: 1475
   Number of created targets for uf: *(struct_i2o_controller)* is 99
   Number of created targets for uf: *signed_int is 353
   Number of created targets for uf: *(char)* is 2
   Number of created targets for uf: *(struct_list_head)* is 3
   Number of created targets for uf: *(struct_i2o_device)* is 99


Number of BDD nodes:                               301
Size of BDD node table:                            464047
Size of BDD cache:                                 46411
Size of BDD node cleanup queue:                        4142 (count: 39465, min: 0, max: 284, avg: 0.10)
Time for BDD node cleanup:                             0.006s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.648s
  Time for transition matches:                         0.328s
  Time for transition assertions:                      0.003s
  Time for transition actions:                         0.002s
Automaton transfers with branching:                0
Automaton transfer successors:                       456014 (count: 456014, min: 1, max: 1, avg: 1.00) [1 x 456014]

CPA algorithm statistics
------------------------
Number of iterations:            273823
Max size of waitlist:            60
Average size of waitlist:        23
Number of computed successors:   317478
Max successors for one state:    2
Number of times merged:          29488
Number of times stopped:         41204
Number of times breaked:         80

Total time for CPA algorithm:        24.518s (Max:     1.281s)
  Time for choose from waitlist:      0.151s
  Time for precision adjustment:      8.718s
  Time for transfer relation:        12.741s
  Time for merge operator:            0.989s
  Time for stop operator:             0.456s
  Time for adding to reached set:     0.428s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   80
Avg. length of target path (in blocks):                3664 (count: 80, min: 12, max: 72, avg: 45.80)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   1.461s
  Counterexample analysis:                             0.794s (Max:     0.023s, Calls: 80)
    Refinement sat check:                              0.517s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.001s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.063s
  Precision update:                                    0.036s
  ARG update:                                          0.520s

Length of refined path (in blocks):                    3484 (count: 80, min: 11, max: 71, avg: 43.55)
Number of affected states:                             3192 (count: 80, min: 4, max: 69, avg: 39.90)
Length (states) of path with itp 'true':                212 (count: 80, min: 1, max: 36, avg: 2.65)
Length (states) of path with itp non-trivial itp:      3192 (count: 80, min: 4, max: 69, avg: 39.90)
Length (states) of path with itp 'false':                80 (count: 80, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 80, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:            3112 (count: 80, min: 3, max: 68, avg: 38.90)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                80
Number of successful refinements:     80
Number of failed refinements:         0
Max. size of reached set before ref.: 4656
Max. size of reached set after ref.:  1285
Avg. size of reached set before ref.: 3497.13
Avg. size of reached set after ref.:  64.90

Total time for CEGAR algorithm:      26.255s
Time for refinements:                 1.723s
Average time for refinement:          0.021s
Max time for refinement:              0.062s

Code Coverage
-----------------------------
  Function coverage:      0.143
  Visited lines:          907
  Total lines:            4179
  Line coverage:          0.217
  Visited conditions:     92
  Total conditions:       1002
  Condition coverage:     0.092

CPAchecker general statistics
-----------------------------
Number of program locations:     5733
Number of CFA edges:             6471
Number of relevant variables:    903
Number of functions:             258
Number of loops:                 58
Size of reached set:             935
  Number of reached locations:   322 (6%)
    Avg states per location:     2
    Max states per location:     31 (at node N5062)
  Number of reached functions:   37 (14%)
  Number of partitions:          927
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N3559 (before line 6926), Function i2o_pci_interrupt called from node N3805, stack depth 2 [86ffaaf], stack [main, i2o_pci_interrupt]])
  Number of target states:       0
  Size of final wait list        26

Time for analysis setup:          3.600s
  Time for loading CPAs:          0.605s
  Time for loading parser:        0.374s
  Time for CFA construction:      2.556s
    Time for parsing file(s):     0.614s
    Time for AST to CFA:          0.834s
    Time for CFA sanity check:    0.297s
    Time for post-processing:     0.704s
      Time for var class.:        0.363s
Time for Analysis:               26.255s
CPU time for analysis:           26.250s
Total time for CPAchecker:       29.858s
Total CPU time for CPAchecker:   29.850s
Time for statistics:              0.060s

Time for Garbage Collector:       0.844s (in 73 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                148MB (   141 MiB) max;     91MB (    87 MiB) avg;    156MB (   149 MiB) peak
Used non-heap memory:             41MB (    39 MiB) max;     37MB (    35 MiB) avg;     41MB (    39 MiB) peak
Allocated heap memory:           255MB (   243 MiB) max;    255MB (   243 MiB) avg
Allocated non-heap memory:        43MB (    41 MiB) max;     39MB (    37 MiB) avg
Total process virtual memory:  12082MB ( 11522 MiB) max;  12072MB ( 11513 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
