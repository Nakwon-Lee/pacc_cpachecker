scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 9600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-32_7a-drivers--message--i2o--i2o_core.ko-ldv_main4_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 9600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_8ohq_7az/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker 1.6.1-svn 6608050+ (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 4394: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 5089: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 5980: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 6585: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 7272: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 7304: Dead code detected: __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

line 7307: Dead code detected: __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

line 7310: Dead code detected: __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (8UL) {
  case 1UL:
  __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& current_task));
  goto ldv_2861;
  case 2UL:
  __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_2861;
  case 4UL:
  __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_2861;
  case 8UL:
  __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_2861;
  default:
  __bad_percpu_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 8024: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 8767: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 8382: Function pointer *(ops->alloc) with type void *(*)(struct device *, size_t , dma_addr_t *, gfp_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 8415: Function pointer *(ops->free) with type void (*)(struct device *, size_t , void *, dma_addr_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 8289: Function pointer *(ops->map_sg) with type int (*)(struct device *, struct scatterlist *, int, enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 2842-2843: Function pointer *(ops->map_page) with type dma_addr_t (*)(struct device *, struct page *, unsigned long, size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 8242-8243: Function pointer *(ops->map_page) with type dma_addr_t (*)(struct device *, struct page *, unsigned long, size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 8306: Function pointer *(ops->mapping_error) with type int (*)(struct device *, dma_addr_t ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 2876: Function pointer *(ops->unmap_page) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 4475: Function pointer *(drv->notify_controller_add) with type void (*)(struct i2o_controller *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 4489: Function pointer *(drv->notify_controller_remove) with type void (*)(struct i2o_controller *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 4502: Function pointer *(drv->notify_device_add) with type void (*)(struct i2o_device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 4515: Function pointer *(drv->notify_device_remove) with type void (*)(struct i2o_device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_handler_precall to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_enable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dma_set_mask to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_set_master to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snprintf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function kmem_cache_create to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mempool_create to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function kmem_cache_destroy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __raw_spin_lock_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __mutex_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_initialize to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_name to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_get_slot to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_request_regions to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ioremap_nocache to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 8382: Ignoring function call through function pointer *(ops->alloc): memory = (*(ops->alloc))(dev, size, dma_handle, tmp___1, attrs); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function debug_dma_alloc_coherent to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function debug_dma_free_coherent to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 8415: Ignoring function call through function pointer *(ops->free): (*(ops->free))(dev, size, vaddr, bus, attrs); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function iounmap to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_release_regions to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_dev_put to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function request_threaded_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mempool_destroy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mempool_alloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mempool_free to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function schedule_timeout_uninterruptible to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __init_waitqueue_head to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __list_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function prepare_to_wait to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function finish_wait to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function schedule_timeout to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            46151 (21% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  43428 (94%)
  Because of loop head:            2344 (5%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         379 (1%)
  Times precision was empty:       20743 (45%)
  Times precision was {false}:     883 (2%)
  Times result was cached:         23972 (52%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      553 (1%)
  Times result was 'false':        1069 (2%)
Number of strengthen sat checks:   0
Number of coverage checks:         29687
  BDD entailment checks:           5781
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       34
Number of predicates discovered:          4
Number of abstraction locations:          147
Max number of predicates per location:    3
Avg number of predicates per location:    1
Total predicates per abstraction:         36086
Max number of predicates per abstraction: 3
Avg number of predicates per abstraction: 25.13
Number of irrelevant predicates:          20369 (56%)
Number of preds handled by boolean abs:   748 (2%)
  Total number of models for allsat:      543
  Max number of models for allsat:        1
  Avg number of models for allsat:        0.98

Time for post operator:                  5.473s
  Time for path formula creation:        5.360s
Time for strengthen operator:            0.208s
Time for prec operator:                  4.639s
  Time for abstraction:                  3.967s (Max:     0.042s, Count: 46151)
    Boolean abstraction:                 0.374s
    Solving time:                        0.538s (Max:     0.012s)
    Model enumeration time:              0.033s
    Time for BDD construction:           0.028s (Max:     0.009s)
Time for merge operator:                 0.416s
Time for coverage check:                 0.032s
  Time for BDD entailment checks:        0.029s
Total time for SMT solver (w/o itp):     0.571s

Number of path formula cache hits:   208886 (80%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     4.436s

Total number of created targets for pointer analysis: 4309
   Number of created targets for uf: *(void)* is 134
   Number of created targets for uf: *(struct___wait_queue_head)* is 35
   Number of created targets for uf: *signed_int is 4
   Number of created targets for uf: *(char)* is 3
   Number of created targets for uf: *(struct_list_head)* is 216
   Number of created targets for uf: *(struct_pci_dev)* is 6
   Number of created targets for uf: *(struct_kmem_cache)* is 2
   Number of created targets for uf: *unsigned_long_long_int is 102
   Number of created targets for uf: *(struct_mempool_s)* is 2
   Number of created targets for uf: *unsigned_int is 21
   Number of created targets for uf: *unsigned_long_int is 15


Number of BDD nodes:                               207
Size of BDD node table:                            464047
Size of BDD cache:                                 46411
Size of BDD node cleanup queue:                        1119 (count: 34276, min: 0, max: 232, avg: 0.03)
Time for BDD node cleanup:                             0.012s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.451s
Automaton transfers with branching:                0
Automaton transfer successors:                       216861 (count: 216861, min: 1, max: 1, avg: 1.00) [1 x 216861]

CPA algorithm statistics
------------------------
Number of iterations:            152466
Max size of waitlist:            34
Average size of waitlist:        19
Number of computed successors:   171126
Max successors for one state:    2
Number of times merged:          11953
Number of times stopped:         17033
Number of times breaked:         379

Total time for CPA algorithm:        15.861s (Max:     2.654s)
  Time for choose from waitlist:      0.103s
  Time for precision adjustment:      5.846s
  Time for transfer relation:         8.059s
  Time for merge operator:            0.653s
  Time for stop operator:             0.286s
  Time for adding to reached set:     0.274s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   379
Avg. length of target path (in blocks):               24807 (count: 379, min: 29, max: 207, avg: 65.45)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   8.086s
  Counterexample analysis:                             7.262s (Max:     0.078s, Calls: 379)
    Refinement sat check:                              4.802s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.014s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.060s
  Precision update:                                    0.171s
  ARG update:                                          0.403s

Length of refined path (in blocks):                   24156 (count: 379, min: 28, max: 204, avg: 63.74)
Number of affected states:                             4328 (count: 379, min: 6, max: 202, avg: 11.42)
Length (states) of path with itp 'true':              19449 (count: 379, min: 1, max: 187, avg: 51.32)
Length (states) of path with itp non-trivial itp:      4328 (count: 379, min: 6, max: 202, avg: 11.42)
Length (states) of path with itp 'false':               379 (count: 379, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 379, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:            3949 (count: 379, min: 5, max: 201, avg: 10.42)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                379
Number of successful refinements:     379
Number of failed refinements:         0
Max. size of reached set before ref.: 34136
Max. size of reached set after ref.:  33902
Avg. size of reached set before ref.: 5291.92
Avg. size of reached set after ref.:  4917.86

Total time for CEGAR algorithm:      26.676s
Time for refinements:                 9.680s
Average time for refinement:          0.025s
Max time for refinement:              0.154s

Code Coverage
-----------------------------
  Function coverage:      0.167
  Visited lines:          964
  Total lines:            4179
  Line coverage:          0.231
  Visited conditions:     160
  Total conditions:       1002
  Condition coverage:     0.160

CPAchecker general statistics
-----------------------------
Number of program locations:     5733
Number of CFA edges:             6471
Number of relevant variables:    903
Number of functions:             258
Number of loops:                 58
Size of reached set:             11258
  Number of reached locations:   500 (9%)
    Avg states per location:     22
    Max states per location:     461 (at node N5062)
  Number of reached functions:   43 (17%)
  Number of partitions:          11244
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N3701 (before line 7081), Function i2o_pci_probe called from node N3782, stack depth 2 [377df2aa], stack [main, i2o_pci_probe]])
  Number of target states:       0
  Size of final wait list        19

Time for analysis setup:          3.661s
  Time for loading CPAs:          0.622s
  Time for loading parser:        0.368s
  Time for CFA construction:      2.575s
    Time for parsing file(s):     0.637s
    Time for AST to CFA:          0.863s
    Time for CFA sanity check:    0.281s
    Time for post-processing:     0.695s
      Time for var class.:        0.342s
Time for Analysis:               26.676s
CPU time for analysis:           26.680s
Total time for CPAchecker:       30.340s
Total CPU time for CPAchecker:   30.330s
Time for statistics:              0.190s

Time for Garbage Collector:       0.840s (in 44 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                175MB (   167 MiB) max;     92MB (    88 MiB) avg;    185MB (   177 MiB) peak
Used non-heap memory:             43MB (    41 MiB) max;     38MB (    36 MiB) avg;     43MB (    41 MiB) peak
Allocated heap memory:           255MB (   243 MiB) max;    255MB (   243 MiB) avg
Allocated non-heap memory:        44MB (    42 MiB) max;     39MB (    38 MiB) avg
Total process virtual memory:  12149MB ( 11587 MiB) max;  12139MB ( 11576 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
