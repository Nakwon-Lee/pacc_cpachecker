scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 9600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-32_7a-drivers--message--i2o--i2o_core.ko-ldv_main4_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 9600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_ngfdjhhi/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker 1.6.1-svn 6608050+ (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 4394: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 5089: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 5980: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 6585: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 7272: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 7304: Dead code detected: __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

line 7307: Dead code detected: __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

line 7310: Dead code detected: __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (8UL) {
  case 1UL:
  __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& current_task));
  goto ldv_2861;
  case 2UL:
  __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_2861;
  case 4UL:
  __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_2861;
  case 8UL:
  __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_2861;
  default:
  __bad_percpu_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 8024: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 8767: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 8382: Function pointer *(ops->alloc) with type void *(*)(struct device *, size_t , dma_addr_t *, gfp_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 8415: Function pointer *(ops->free) with type void (*)(struct device *, size_t , void *, dma_addr_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 8289: Function pointer *(ops->map_sg) with type int (*)(struct device *, struct scatterlist *, int, enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 2842-2843: Function pointer *(ops->map_page) with type dma_addr_t (*)(struct device *, struct page *, unsigned long, size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 8242-8243: Function pointer *(ops->map_page) with type dma_addr_t (*)(struct device *, struct page *, unsigned long, size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 8306: Function pointer *(ops->mapping_error) with type int (*)(struct device *, dma_addr_t ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 2876: Function pointer *(ops->unmap_page) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 4475: Function pointer *(drv->notify_controller_add) with type void (*)(struct i2o_controller *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 4489: Function pointer *(drv->notify_controller_remove) with type void (*)(struct i2o_controller *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 4502: Function pointer *(drv->notify_device_add) with type void (*)(struct i2o_device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 4515: Function pointer *(drv->notify_device_remove) with type void (*)(struct i2o_device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_handler_precall to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_enable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value_probe to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dma_set_mask to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_set_master to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_disable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snprintf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_get_slot to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_request_regions to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mempool_destroy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function kmem_cache_destroy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iounmap to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_release_regions to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function debug_dma_free_coherent to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 8415: Ignoring function call through function pointer *(ops->free): (*(ops->free))(dev, size, vaddr, bus, attrs); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function device_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mempool_alloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function schedule_timeout_uninterruptible to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __init_waitqueue_head to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mempool_free to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __list_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function prepare_to_wait to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function finish_wait to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function schedule_timeout to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __raw_spin_lock_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            70991 (23% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  65567 (92%)
  Because of loop head:            5293 (7%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         131 (0%)
  Times precision was empty:       4872 (7%)
  Times precision was {false}:     794 (1%)
  Times result was cached:         61259 (86%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      4066 (6%)
  Times result was 'false':        1602 (2%)
Number of strengthen sat checks:   0
Number of coverage checks:         24147
  BDD entailment checks:           9265
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       34
Number of predicates discovered:          7
Number of abstraction locations:          170
Max number of predicates per location:    5
Avg number of predicates per location:    4
Total predicates per abstraction:         269311
Max number of predicates per abstraction: 5
Avg number of predicates per abstraction: 55.41
Number of irrelevant predicates:          60091 (22%)
Number of preds handled by boolean abs:   10480 (4%)
  Total number of models for allsat:      4055
  Max number of models for allsat:        1
  Avg number of models for allsat:        1.00

Time for post operator:                  4.054s
  Time for path formula creation:        3.900s
Time for strengthen operator:            0.204s
Time for prec operator:                 13.166s
  Time for abstraction:                 12.422s (Max:     0.022s, Count: 70991)
    Boolean abstraction:                 1.476s
    Solving time:                        1.366s (Max:     0.013s)
    Model enumeration time:              0.126s
    Time for BDD construction:           0.050s (Max:     0.003s)
Time for merge operator:                 0.196s
Time for coverage check:                 0.033s
  Time for BDD entailment checks:        0.031s
Total time for SMT solver (w/o itp):     1.492s

Number of path formula cache hits:   342151 (92%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     2.982s

Total number of created targets for pointer analysis: 3303
   Number of created targets for uf: *(void)* is 156
   Number of created targets for uf: *(struct___wait_queue_head)* is 57
   Number of created targets for uf: *(char)* is 2
   Number of created targets for uf: *signed_int is 4
   Number of created targets for uf: *(struct_list_head)* is 160
   Number of created targets for uf: *(struct_pci_dev)* is 2
   Number of created targets for uf: *unsigned_long_long_int is 68
   Number of created targets for uf: *unsigned_int is 26


Number of BDD nodes:                               248
Size of BDD node table:                            464047
Size of BDD cache:                                 46411
Size of BDD node cleanup queue:                        8087 (count: 42571, min: 0, max: 409, avg: 0.19)
Time for BDD node cleanup:                             0.003s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.394s
Automaton transfers with branching:                0
Automaton transfer successors:                       302642 (count: 302642, min: 1, max: 1, avg: 1.00) [1 x 302642]

CPA algorithm statistics
------------------------
Number of iterations:            206255
Max size of waitlist:            38
Average size of waitlist:        18
Number of computed successors:   225975
Max successors for one state:    2
Number of times merged:          7441
Number of times stopped:         15544
Number of times breaked:         131

Total time for CPA algorithm:        22.739s (Max:     0.556s)
  Time for choose from waitlist:      0.141s
  Time for precision adjustment:     14.263s
  Time for transfer relation:         6.744s
  Time for merge operator:            0.350s
  Time for stop operator:             0.299s
  Time for adding to reached set:     0.312s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   131
Avg. length of target path (in blocks):               11674 (count: 131, min: 6, max: 167, avg: 89.11)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   3.098s
  Counterexample analysis:                             2.490s (Max:     0.056s, Calls: 131)
    Refinement sat check:                              1.387s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.004s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.088s
  Precision update:                                    0.128s
  ARG update:                                          0.301s

Length of refined path (in blocks):                   11495 (count: 131, min: 5, max: 166, avg: 87.75)
Number of affected states:                            11132 (count: 131, min: 3, max: 164, avg: 84.98)
Length (states) of path with itp 'true':                232 (count: 131, min: 1, max: 102, avg: 1.77)
Length (states) of path with itp non-trivial itp:     11132 (count: 131, min: 3, max: 164, avg: 84.98)
Length (states) of path with itp 'false':               131 (count: 131, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 131, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:           11001 (count: 131, min: 2, max: 163, avg: 83.98)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                131
Number of successful refinements:     131
Number of failed refinements:         0
Max. size of reached set before ref.: 2880
Max. size of reached set after ref.:  1493
Avg. size of reached set before ref.: 1596.05
Avg. size of reached set after ref.:  17.35

Total time for CEGAR algorithm:      26.123s
Time for refinements:                 3.373s
Average time for refinement:          0.025s
Max time for refinement:              0.094s

Code Coverage
-----------------------------
  Function coverage:      0.240
  Visited lines:          1112
  Total lines:            4179
  Line coverage:          0.266
  Visited conditions:     142
  Total conditions:       1002
  Condition coverage:     0.142

CPAchecker general statistics
-----------------------------
Number of program locations:     5733
Number of CFA edges:             6471
Number of relevant variables:    903
Number of functions:             258
Number of loops:                 58
Size of reached set:             2019
  Number of reached locations:   573 (10%)
    Avg states per location:     3
    Max states per location:     62 (at node N5062)
  Number of reached functions:   62 (24%)
  Number of partitions:          2008
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N575 (before line 3417), Function i2o_iop_quiesce_all called from node N711, stack depth 5 [7ee3bf47], stack [main, i2o_pci_probe, i2o_iop_add, i2o_iop_reset, i2o_iop_quiesce_all]])
  Number of target states:       0
  Size of final wait list        26

Time for analysis setup:          3.716s
  Time for loading CPAs:          0.629s
  Time for loading parser:        0.411s
  Time for CFA construction:      2.579s
    Time for parsing file(s):     0.626s
    Time for AST to CFA:          0.876s
    Time for CFA sanity check:    0.262s
    Time for post-processing:     0.710s
      Time for var class.:        0.353s
Time for Analysis:               26.123s
CPU time for analysis:           26.120s
Total time for CPAchecker:       29.841s
Total CPU time for CPAchecker:   29.840s
Time for statistics:              0.072s

Time for Garbage Collector:       0.527s (in 74 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                121MB (   116 MiB) max;     78MB (    75 MiB) avg;    130MB (   124 MiB) peak
Used non-heap memory:             42MB (    40 MiB) max;     37MB (    35 MiB) avg;     42MB (    40 MiB) peak
Allocated heap memory:           255MB (   243 MiB) max;    255MB (   243 MiB) avg
Allocated non-heap memory:        43MB (    41 MiB) max;     39MB (    37 MiB) avg
Total process virtual memory:  12147MB ( 11584 MiB) max;  12137MB ( 11575 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
