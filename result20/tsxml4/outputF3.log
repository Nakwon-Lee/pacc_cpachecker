scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 9600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-32_7a-drivers--message--i2o--i2o_core.ko-ldv_main4_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 9600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_sl46_i5v/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker 1.6.1-svn 6608050+ (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 4394: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 5089: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 5980: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 6585: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 7272: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 7304: Dead code detected: __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

line 7307: Dead code detected: __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

line 7310: Dead code detected: __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (8UL) {
  case 1UL:
  __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& current_task));
  goto ldv_2861;
  case 2UL:
  __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_2861;
  case 4UL:
  __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_2861;
  case 8UL:
  __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_2861;
  default:
  __bad_percpu_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 8024: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 8767: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 8382: Function pointer *(ops->alloc) with type void *(*)(struct device *, size_t , dma_addr_t *, gfp_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 8415: Function pointer *(ops->free) with type void (*)(struct device *, size_t , void *, dma_addr_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 8289: Function pointer *(ops->map_sg) with type int (*)(struct device *, struct scatterlist *, int, enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 2842-2843: Function pointer *(ops->map_page) with type dma_addr_t (*)(struct device *, struct page *, unsigned long, size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 8242-8243: Function pointer *(ops->map_page) with type dma_addr_t (*)(struct device *, struct page *, unsigned long, size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 8306: Function pointer *(ops->mapping_error) with type int (*)(struct device *, dma_addr_t ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 2876: Function pointer *(ops->unmap_page) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 4475: Function pointer *(drv->notify_controller_add) with type void (*)(struct i2o_controller *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 4489: Function pointer *(drv->notify_controller_remove) with type void (*)(struct i2o_controller *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 4502: Function pointer *(drv->notify_device_add) with type void (*)(struct i2o_device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 4515: Function pointer *(drv->notify_device_remove) with type void (*)(struct i2o_device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_handler_precall to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_enable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value_probe to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dma_set_mask to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_set_master to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_disable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snprintf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_get_slot to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_request_regions to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mempool_destroy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function kmem_cache_destroy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iounmap to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_release_regions to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function debug_dma_free_coherent to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 8415: Ignoring function call through function pointer *(ops->free): (*(ops->free))(dev, size, vaddr, bus, attrs); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function device_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mempool_alloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function schedule_timeout_uninterruptible to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __init_waitqueue_head to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mempool_free to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __list_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function prepare_to_wait to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function finish_wait to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function schedule_timeout to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __raw_spin_lock_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_del to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_find_parent_resource to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function allocate_resource to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 4475: Ignoring function call through function pointer *(drv->notify_controller_add): (*(drv->notify_controller_add))(c); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function mutex_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_pr_debug to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_name to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sysfs_create_link to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function list_del to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sysfs_remove_link to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 4502: Ignoring function call through function pointer *(drv->notify_device_add): (*(drv->notify_device_add))(i2o_dev); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function __mutex_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 4515: Ignoring function call through function pointer *(drv->notify_device_remove): (*(drv->notify_device_remove))(i2o_dev); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function __phys_addr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

lines 2842-2843: Ignoring function call through function pointer *(ops->map_page): addr = (*(ops->map_page))(dev, 18446719884453740544ULL + (tmp___2 >> 12), ((unsigned long)ptr) & 4095UL, size, dir, attrs); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function debug_dma_map_page to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 2876: Ignoring function call through function pointer *(ops->unmap_page): (*(ops->unmap_page))(dev, addr, size, dir, attrs); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function debug_dma_unmap_page to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 4489: Ignoring function call through function pointer *(drv->notify_controller_remove): (*(drv->notify_controller_remove))(c); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 8382: Ignoring function call through function pointer *(ops->alloc): memory = (*(ops->alloc))(dev, size, dma_handle, tmp___1, attrs); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function debug_dma_alloc_coherent to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function request_threaded_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ioremap_nocache to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_dev_put to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function kmem_cache_create to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_initialize to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mempool_create to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function put_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            3734517 (23% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  3324966 (89%)
  Because of loop head:            404216 (11%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         5335 (0%)
  Times precision was empty:       56898 (2%)
  Times precision was {false}:     1619 (0%)
  Times result was cached:         3665572 (98%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      10428 (0%)
  Times result was 'false':        38609 (1%)
Number of strengthen sat checks:   0
Number of coverage checks:         1466868
  BDD entailment checks:           626608
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       48
Number of predicates discovered:          10
Number of abstraction locations:          414
Max number of predicates per location:    8
Avg number of predicates per location:    5
Total predicates per abstraction:         18821703
Max number of predicates per abstraction: 8
Avg number of predicates per abstraction: 1562.36
Number of irrelevant predicates:          661525 (4%)
Number of preds handled by boolean abs:   32474 (0%)
  Total number of models for allsat:      10409
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.00

Time for post operator:                 45.541s
  Time for path formula creation:       43.067s
Time for strengthen operator:            7.330s
Time for prec operator:                449.967s
  Time for abstraction:                427.266s (Max:     0.231s, Count: 3734517)
    Boolean abstraction:                 4.178s
    Solving time:                        3.787s (Max:     0.016s)
    Model enumeration time:              0.315s
    Time for BDD construction:           0.137s (Max:     0.008s)
Time for merge operator:                 1.957s
Time for coverage check:                 0.358s
  Time for BDD entailment checks:        0.273s
Total time for SMT solver (w/o itp):     4.102s

Number of path formula cache hits:   20416348 (99%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     5.325s

Total number of created targets for pointer analysis: 9409
   Number of created targets for uf: *(void)* is 7
   Number of created targets for uf: *(struct___wait_queue_head)* is 103
   Number of created targets for uf: *unsigned_short_int_:_12 is 117
   Number of created targets for uf: *(struct_pci_dev)* is 2
   Number of created targets for uf: *(struct_mempool_s)* is 2
   Number of created targets for uf: *(struct__i2o_lct)* is 2
   Number of created targets for uf: *unsigned_long_int is 7
   Number of created targets for uf: *(struct_i2o_controller)* is 25
   Number of created targets for uf: *signed_int is 4
   Number of created targets for uf: *(char)* is 3
   Number of created targets for uf: *(struct_list_head)* is 384
   Number of created targets for uf: *(struct_kmem_cache)* is 2
   Number of created targets for uf: *unsigned_long_long_int is 9
   Number of created targets for uf: *unsigned_int is 26


Number of BDD nodes:                               379
Size of BDD node table:                            464047
Size of BDD cache:                                 46411
Size of BDD node cleanup queue:                       21315 (count: 755132, min: 0, max: 346, avg: 0.03)
Time for BDD node cleanup:                             0.058s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                 10.506s
  Time for transition matches:                         6.009s
  Time for transition assertions:                      0.004s
  Time for transition actions:                         0.015s
Automaton transfers with branching:                0
Automaton transfer successors:                     16437740 (count: 16437740, min: 1, max: 1, avg: 1.00) [1 x 16437740]

CPA algorithm statistics
------------------------
Number of iterations:            11096617
Max size of waitlist:            45
Average size of waitlist:        24
Number of computed successors:   12144067
Max successors for one state:    2
Number of times merged:          420130
Number of times stopped:         985231
Number of times breaked:         5335

Total time for CPA algorithm:       650.763s (Max:     1.226s)
  Time for choose from waitlist:      2.334s
  Time for precision adjustment:    491.105s
  Time for transfer relation:       123.770s
  Time for merge operator:            4.684s
  Time for stop operator:             6.604s
  Time for adding to reached set:     9.061s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   5335
Avg. length of target path (in blocks):              723860 (count: 5335, min: 6, max: 192, avg: 135.68)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                 157.166s
  Counterexample analysis:                           139.553s (Max:     0.082s, Calls: 5335)
    Refinement sat check:                             72.537s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.219s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.776s
  Precision update:                                    3.777s
  ARG update:                                         11.303s

Length of refined path (in blocks):                  718331 (count: 5334, min: 5, max: 191, avg: 134.67)
Number of affected states:                           179403 (count: 5334, min: 3, max: 189, avg: 33.63)
Length (states) of path with itp 'true':             533594 (count: 5334, min: 1, max: 142, avg: 100.04)
Length (states) of path with itp non-trivial itp:    179403 (count: 5334, min: 3, max: 189, avg: 33.63)
Length (states) of path with itp 'false':              5334 (count: 5334, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 5334, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:          174069 (count: 5334, min: 2, max: 188, avg: 32.63)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                5335
Number of successful refinements:     5334
Number of failed refinements:         0
Max. size of reached set before ref.: 46597
Max. size of reached set after ref.:  43091
Avg. size of reached set before ref.: 18541.67
Avg. size of reached set after ref.:  16460.36

Total time for CEGAR algorithm:     896.614s
Time for refinements:               207.990s
Average time for refinement:          0.038s
Max time for refinement:              0.285s

Code Coverage
-----------------------------
  Function coverage:      0.438
  Visited lines:          2275
  Total lines:            4179
  Line coverage:          0.544
  Visited conditions:     500
  Total conditions:       1002
  Condition coverage:     0.499

CPAchecker general statistics
-----------------------------
Number of program locations:     5733
Number of CFA edges:             6471
Number of relevant variables:    903
Number of functions:             258
Number of loops:                 58
Size of reached set:             37741
  Number of reached locations:   1631 (28%)
    Avg states per location:     23
    Max states per location:     927 (at node N5062)
  Number of reached functions:   113 (44%)
  Number of partitions:          37688
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N3985 (before line 7458), Function i2o_msg_post_wait_mem called from node N229, stack depth 8 [48a8b0da], stack [main, i2o_pci_probe, i2o_iop_add, i2o_iop_reset, i2o_iop_quiesce_all, i2o_iop_quiesce, i2o_msg_post_wait, i2o_msg_post_wait_mem]])
  Number of target states:       1
  Size of final wait list        12

Time for analysis setup:          3.761s
  Time for loading CPAs:          0.637s
  Time for loading parser:        0.413s
  Time for CFA construction:      2.633s
    Time for parsing file(s):     0.648s
    Time for AST to CFA:          0.848s
    Time for CFA sanity check:    0.285s
    Time for post-processing:     0.737s
      Time for var class.:        0.385s
Time for Analysis:              896.614s
CPU time for analysis:          896.610s
Total time for CPAchecker:      900.377s
Total CPU time for CPAchecker:  900.370s
Time for statistics:              0.355s

Time for Garbage Collector:      51.694s (in 4625 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                252MB (   240 MiB) max;    159MB (   151 MiB) avg;    257MB (   245 MiB) peak
Used non-heap memory:             41MB (    40 MiB) max;     40MB (    38 MiB) avg;     42MB (    40 MiB) peak
Allocated heap memory:           255MB (   243 MiB) max;    255MB (   243 MiB) avg
Allocated non-heap memory:        44MB (    42 MiB) max;     43MB (    41 MiB) avg
Total process virtual memory:  12145MB ( 11583 MiB) max;  12131MB ( 11569 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
