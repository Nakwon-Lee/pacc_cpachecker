scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 9600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-32_7a-drivers--message--i2o--i2o_core.ko-ldv_main4_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 9600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_ka7z8_hw/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker 1.6.1-svn 6608050+ (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 4394: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 5089: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 5980: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 6585: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 7272: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 7304: Dead code detected: __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

line 7307: Dead code detected: __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

line 7310: Dead code detected: __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (8UL) {
  case 1UL:
  __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& current_task));
  goto ldv_2861;
  case 2UL:
  __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_2861;
  case 4UL:
  __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_2861;
  case 8UL:
  __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_2861;
  default:
  __bad_percpu_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 8024: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 8767: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 8382: Function pointer *(ops->alloc) with type void *(*)(struct device *, size_t , dma_addr_t *, gfp_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 8415: Function pointer *(ops->free) with type void (*)(struct device *, size_t , void *, dma_addr_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 8289: Function pointer *(ops->map_sg) with type int (*)(struct device *, struct scatterlist *, int, enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 2842-2843: Function pointer *(ops->map_page) with type dma_addr_t (*)(struct device *, struct page *, unsigned long, size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 8242-8243: Function pointer *(ops->map_page) with type dma_addr_t (*)(struct device *, struct page *, unsigned long, size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 8306: Function pointer *(ops->mapping_error) with type int (*)(struct device *, dma_addr_t ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 2876: Function pointer *(ops->unmap_page) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 4475: Function pointer *(drv->notify_controller_add) with type void (*)(struct i2o_controller *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 4489: Function pointer *(drv->notify_controller_remove) with type void (*)(struct i2o_controller *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 4502: Function pointer *(drv->notify_device_add) with type void (*)(struct i2o_device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 4515: Function pointer *(drv->notify_device_remove) with type void (*)(struct i2o_device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_handler_precall to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_enable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 4857: Ignoring function call through function pointer *(drv->reply): tmp___6 = (*(drv->reply))(c, m, msg); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function __dynamic_pr_debug to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __init_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function lockdep_init_map to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function queue_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function list_del to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __wake_up to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function debug_dma_free_coherent to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 8415: Ignoring function call through function pointer *(ops->free): (*(ops->free))(dev, size, vaddr, bus, attrs); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function dma_set_mask to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_set_master to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value_probe to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_disable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 4489: Ignoring function call through function pointer *(drv->notify_controller_remove): (*(drv->notify_controller_remove))(c); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function device_del to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 4515: Ignoring function call through function pointer *(drv->notify_device_remove): (*(drv->notify_device_remove))(i2o_dev); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function sysfs_remove_link to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snprintf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_get_slot to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_dev_put to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_request_regions to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ioremap_nocache to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iounmap to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_release_regions to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 8382: Ignoring function call through function pointer *(ops->alloc): memory = (*(ops->alloc))(dev, size, dma_handle, tmp___1, attrs); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function debug_dma_alloc_coherent to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function request_threaded_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mempool_destroy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function kmem_cache_destroy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function kmem_cache_create to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __raw_spin_lock_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __mutex_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_initialize to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_name to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            4710851 (17% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  4525775 (96%)
  Because of loop head:            180731 (4%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         4345 (0%)
  Times precision was empty:       655337 (14%)
  Times precision was {false}:     2629 (0%)
  Times result was cached:         4046196 (86%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      6689 (0%)
  Times result was 'false':        149618 (3%)
Number of strengthen sat checks:   0
Number of coverage checks:         4082862
  BDD entailment checks:           648428
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       34
Number of predicates discovered:          11
Number of abstraction locations:          182
Max number of predicates per location:    8
Avg number of predicates per location:    3
Total predicates per abstraction:         15204733
Max number of predicates per abstraction: 8
Avg number of predicates per abstraction: 1631.76
Number of irrelevant predicates:          13160617 (87%)
Number of preds handled by boolean abs:   13064 (0%)
  Total number of models for allsat:      6593
  Max number of models for allsat:        2
  Avg number of models for allsat:        0.99

Time for post operator:                127.053s
  Time for path formula creation:      121.101s
Time for strengthen operator:           11.869s
Time for prec operator:                320.249s
  Time for abstraction:                286.064s (Max:     0.063s, Count: 4710851)
    Boolean abstraction:                 3.507s
    Solving time:                        7.087s (Max:     0.038s)
    Model enumeration time:              0.294s
    Time for BDD construction:           0.164s (Max:     0.012s)
Time for merge operator:                11.513s
Time for coverage check:                 0.489s
  Time for BDD entailment checks:        0.265s
Total time for SMT solver (w/o itp):     7.381s

Number of path formula cache hits:   32485807 (96%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    41.633s

Total number of created targets for pointer analysis: 243347
   Number of created targets for uf: *(void)* is 148159
   Number of created targets for uf: *(struct_i2o_controller)* is 517
   Number of created targets for uf: *signed_int is 834
   Number of created targets for uf: *(char)* is 4
   Number of created targets for uf: *(struct_list_head)* is 5528
   Number of created targets for uf: *(struct_pci_dev)* is 417
   Number of created targets for uf: *(struct_kmem_cache)* is 2
   Number of created targets for uf: *(struct_i2o_device)* is 517
   Number of created targets for uf: *char is 17
   Number of created targets for uf: *unsigned_long_int is 3273


Number of BDD nodes:                               397
Size of BDD node table:                            464047
Size of BDD cache:                                 46411
Size of BDD node cleanup queue:                       13662 (count: 1357585, min: 0, max: 358, avg: 0.01)
Time for BDD node cleanup:                             0.116s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                 17.565s
  Time for transition matches:                        11.138s
  Time for transition assertions:                      0.008s
  Time for transition actions:                         0.022s
Automaton transfers with branching:                0
Automaton transfer successors:                     27936565 (count: 27936565, min: 1, max: 1, avg: 1.00) [1 x 27936565]

CPA algorithm statistics
------------------------
Number of iterations:            17999634
Max size of waitlist:            243
Average size of waitlist:        117
Number of computed successors:   20769639
Max successors for one state:    2
Number of times merged:          1717217
Number of times stopped:         2204348
Number of times breaked:         4345

Total time for CPA algorithm:       711.735s (Max:     1.532s)
  Time for choose from waitlist:      3.815s
  Time for precision adjustment:    382.436s
  Time for transfer relation:       253.521s
  Time for merge operator:           21.327s
  Time for stop operator:            12.415s
  Time for adding to reached set:    15.739s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   4345
Avg. length of target path (in blocks):              499188 (count: 4345, min: 12, max: 150, avg: 114.89)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                 144.378s
  Counterexample analysis:                           125.080s (Max:     0.077s, Calls: 4345)
    Refinement sat check:                             79.784s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.140s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.736s
  Precision update:                                    1.270s
  ARG update:                                         15.764s

Length of refined path (in blocks):                  491795 (count: 4345, min: 11, max: 149, avg: 113.19)
Number of affected states:                           177381 (count: 4345, min: 4, max: 79, avg: 40.82)
Length (states) of path with itp 'true':             310069 (count: 4345, min: 1, max: 112, avg: 71.36)
Length (states) of path with itp non-trivial itp:    177381 (count: 4345, min: 4, max: 79, avg: 40.82)
Length (states) of path with itp 'false':              4345 (count: 4345, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 4345, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:          173036 (count: 4345, min: 3, max: 78, avg: 39.82)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                4345
Number of successful refinements:     4345
Number of failed refinements:         0
Max. size of reached set before ref.: 21453
Max. size of reached set after ref.:  15181
Avg. size of reached set before ref.: 13236.26
Avg. size of reached set after ref.:  9001.47

Total time for CEGAR algorithm:     896.558s
Time for refinements:               170.608s
Average time for refinement:          0.039s
Max time for refinement:              0.116s

Code Coverage
-----------------------------
  Function coverage:      0.291
  Visited lines:          1586
  Total lines:            4179
  Line coverage:          0.380
  Visited conditions:     368
  Total conditions:       1002
  Condition coverage:     0.367

CPAchecker general statistics
-----------------------------
Number of program locations:     5733
Number of CFA edges:             6471
Number of relevant variables:    903
Number of functions:             258
Number of loops:                 58
Size of reached set:             15523
  Number of reached locations:   1032 (18%)
    Avg states per location:     15
    Max states per location:     490 (at node N5063)
  Number of reached functions:   75 (29%)
  Number of partitions:          15488
    Avg size of partitions:      1
    Max size of partitions:      3 (with key [N3813 (before line 7219), Function main called from node N3759, stack depth 1 [7c663eaf], stack [main]])
  Number of target states:       0
  Size of final wait list        114

Time for analysis setup:          3.792s
  Time for loading CPAs:          0.643s
  Time for loading parser:        0.423s
  Time for CFA construction:      2.632s
    Time for parsing file(s):     0.686s
    Time for AST to CFA:          0.831s
    Time for CFA sanity check:    0.284s
    Time for post-processing:     0.706s
      Time for var class.:        0.358s
Time for Analysis:              896.559s
CPU time for analysis:          896.550s
Total time for CPAchecker:      900.353s
Total CPU time for CPAchecker:  900.340s
Time for statistics:              0.231s

Time for Garbage Collector:      19.832s (in 1598 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                828MB (   790 MiB) max;    573MB (   547 MiB) avg;    846MB (   806 MiB) peak
Used non-heap memory:             43MB (    41 MiB) max;     41MB (    40 MiB) avg;     43MB (    41 MiB) peak
Allocated heap memory:           951MB (   907 MiB) max;    824MB (   786 MiB) avg
Allocated non-heap memory:        45MB (    43 MiB) max;     45MB (    43 MiB) avg
Total process virtual memory:  12280MB ( 11711 MiB) max;  12214MB ( 11648 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
