scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 9600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-32_7a-drivers--staging--bcm--bcm_wimax.ko-ldv_main17_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 9600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_oqmpcssx/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker 1.6.1-svn 6608050+ (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 6851: Dead code detected: __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& kernel_stack)); (CFACreationUtils.addEdgeToCFA, INFO)

line 6854: Dead code detected: __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack)); (CFACreationUtils.addEdgeToCFA, INFO)

line 6857: Dead code detected: __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (8UL) {
  case 1UL:
  __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& kernel_stack));
  goto ldv_6180;
  case 2UL:
  __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack));
  goto ldv_6180;
  case 4UL:
  __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack));
  goto ldv_6180;
  case 8UL:
  __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack));
  goto ldv_6180;
  default:
  __bad_percpu_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 7585: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 8048: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 8099: Dead code detected: __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

line 8102: Dead code detected: __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

line 8105: Dead code detected: __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (8UL) {
  case 1UL:
  __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& current_task));
  goto ldv_2861;
  case 2UL:
  __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_2861;
  case 4UL:
  __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_2861;
  case 8UL:
  __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_2861;
  default:
  __bad_percpu_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 9376: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 9940: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 10262: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 10628: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 10945: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 14474: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 15165: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 16542: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 17168: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 17688: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 18604: Dead code detected: __ms = 3UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 18673: Dead code detected: __ms___0 = 3UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 19070: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 19428: Dead code detected: return (0); (CFACreationUtils.addEdgeToCFA, INFO)

line 19520: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 20082: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 21035: Dereferencing of non-pointer type PUCHAR  in expression *pucBuffer (ASTConverter.convert, WARNING)

line 21095: Dereferencing of non-pointer type PUCHAR  in expression *pucBuffer (ASTConverter.convert, WARNING)

line 23016: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 23160: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 23210: Dead code detected: __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& kernel_stack)); (CFACreationUtils.addEdgeToCFA, INFO)

line 23213: Dead code detected: __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack)); (CFACreationUtils.addEdgeToCFA, INFO)

line 23216: Dead code detected: __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (8UL) {
  case 1UL:
  __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& kernel_stack));
  goto ldv_6149;
  case 2UL:
  __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack));
  goto ldv_6149;
  case 4UL:
  __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack));
  goto ldv_6149;
  case 8UL:
  __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack));
  goto ldv_6149;
  default:
  __bad_percpu_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 24743: Dead code detected: __asm__ volatile ("call __get_user_1": "=a" (__ret_gu), "=d" (__val_gu): "0" ((unsigned long *)arg)); (CFACreationUtils.addEdgeToCFA, INFO)

line 24746: Dead code detected: __asm__ volatile ("call __get_user_2": "=a" (__ret_gu), "=d" (__val_gu): "0" ((unsigned long *)arg)); (CFACreationUtils.addEdgeToCFA, INFO)

line 24749: Dead code detected: __asm__ volatile ("call __get_user_4": "=a" (__ret_gu), "=d" (__val_gu): "0" ((unsigned long *)arg)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (8UL) {
  case 1UL:
  __asm__ volatile ("call __get_user_1": "=a" (__ret_gu), "=d" (__val_gu): "0" ((unsigned long *)arg));
  goto ldv_46947;
  case 2UL:
  __asm__ volatile ("call __get_user_2": "=a" (__ret_gu), "=d" (__val_gu): "0" ((unsigned long *)arg));
  goto ldv_46947;
  case 4UL:
  __asm__ volatile ("call __get_user_4": "=a" (__ret_gu), "=d" (__val_gu): "0" ((unsigned long *)arg));
  goto ldv_46947;
  case 8UL:
  __asm__ volatile ("call __get_user_8": "=a" (__ret_gu), "=d" (__val_gu): "0" ((unsigned long *)arg));
  goto ldv_46947;
  default:
  __asm__ volatile ("call __get_user_X": "=a" (__ret_gu), "=d" (__val_gu): "0" ((unsigned long *)arg));
  goto ldv_46947;
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 24771: Dead code detected: __asm__ volatile ("call __get_user_1": "=a" (__ret_gu___0), "=d" (__val_gu___0): "0" ((unsigned long *)arg)); (CFACreationUtils.addEdgeToCFA, INFO)

line 24774: Dead code detected: __asm__ volatile ("call __get_user_2": "=a" (__ret_gu___0), "=d" (__val_gu___0): "0" ((unsigned long *)arg)); (CFACreationUtils.addEdgeToCFA, INFO)

line 24777: Dead code detected: __asm__ volatile ("call __get_user_4": "=a" (__ret_gu___0), "=d" (__val_gu___0): "0" ((unsigned long *)arg)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (8UL) {
  case 1UL:
  __asm__ volatile ("call __get_user_1": "=a" (__ret_gu___0), "=d" (__val_gu___0): "0" ((unsigned long *)arg));
  goto ldv_46957;
  case 2UL:
  __asm__ volatile ("call __get_user_2": "=a" (__ret_gu___0), "=d" (__val_gu___0): "0" ((unsigned long *)arg));
  goto ldv_46957;
  case 4UL:
  __asm__ volatile ("call __get_user_4": "=a" (__ret_gu___0), "=d" (__val_gu___0): "0" ((unsigned long *)arg));
  goto ldv_46957;
  case 8UL:
  __asm__ volatile ("call __get_user_8": "=a" (__ret_gu___0), "=d" (__val_gu___0): "0" ((unsigned long *)arg));
  goto ldv_46957;
  default:
  __asm__ volatile ("call __get_user_X": "=a" (__ret_gu___0), "=d" (__val_gu___0): "0" ((unsigned long *)arg));
  goto ldv_46957;
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 24819: Dead code detected: __asm__ volatile ("call __get_user_1": "=a" (__ret_gu___1), "=d" (__val_gu___1): "0" ((unsigned long *)arg)); (CFACreationUtils.addEdgeToCFA, INFO)

line 24822: Dead code detected: __asm__ volatile ("call __get_user_2": "=a" (__ret_gu___1), "=d" (__val_gu___1): "0" ((unsigned long *)arg)); (CFACreationUtils.addEdgeToCFA, INFO)

line 24825: Dead code detected: __asm__ volatile ("call __get_user_4": "=a" (__ret_gu___1), "=d" (__val_gu___1): "0" ((unsigned long *)arg)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (8UL) {
  case 1UL:
  __asm__ volatile ("call __get_user_1": "=a" (__ret_gu___1), "=d" (__val_gu___1): "0" ((unsigned long *)arg));
  goto ldv_46970;
  case 2UL:
  __asm__ volatile ("call __get_user_2": "=a" (__ret_gu___1), "=d" (__val_gu___1): "0" ((unsigned long *)arg));
  goto ldv_46970;
  case 4UL:
  __asm__ volatile ("call __get_user_4": "=a" (__ret_gu___1), "=d" (__val_gu___1): "0" ((unsigned long *)arg));
  goto ldv_46970;
  case 8UL:
  __asm__ volatile ("call __get_user_8": "=a" (__ret_gu___1), "=d" (__val_gu___1): "0" ((unsigned long *)arg));
  goto ldv_46970;
  default:
  __asm__ volatile ("call __get_user_X": "=a" (__ret_gu___1), "=d" (__val_gu___1): "0" ((unsigned long *)arg));
  goto ldv_46970;
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 26373: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 26708: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 28613: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 29928: Dead code detected: Adapter->LEDInfo.led_thread_running = 0; (CFACreationUtils.addEdgeToCFA, INFO)

line 30056: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 30483: Dead code detected: __ms = 3UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 30518: Dead code detected: __ms___0 = 3UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 30547: Dead code detected: __ms___1 = 3UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 31860: Dead code detected: __ms = 3UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 31897: Dead code detected: __ms___0 = 3UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 35900: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 36040: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_handler_precall to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function down to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function up to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function kfree_skb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __wake_up to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function down_trylock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function might_fault to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function prepare_to_wait to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function finish_wait to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _copy_to_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function consume_skb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 6903: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((const void *)to, 0); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function __builtin_object_size to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function netif_carrier_off to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _copy_from_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memdup_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function nonseekable_open to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 26313: Destroying the void* pointer bcm_char_ioctl::temp_buff___1 produces garbage or the memory pointed by it is unused: bcm_char_ioctl(var_group2, var_bcm_char_ioctl_3_p1, var_bcm_char_ioctl_3_p2); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function usb_kill_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_fmt to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function print_hex_dump to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

lines 22363-22364: Ignoring function call through function pointer *(Adapter->interface_wrm): iRetVal = (*(Adapter->interface_wrm))(Adapter->pvInterfaceAdapter, uiAddress, (PVOID )pucBuff, (int)sSize); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

lines 22352-22353: Ignoring function call through function pointer *(Adapter->interface_rdm): tmp = (*(Adapter->interface_rdm))(Adapter->pvInterfaceAdapter, uiAddress, (PVOID )pucBuff, (int)sSize); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function do_gettimeofday to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock_bh to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_bh to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_submit_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function schedule_timeout to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memcmp to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_reset_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 31333: Ignoring function call through function pointer *(Adapter->fpFlashWrite): tmp___6 = (*(Adapter->fpFlashWrite))(Adapter, uiPartOffset + uiIndex, ((PVOID )pTempBuff) + ((unsigned long)uiIndex)); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

lines 31582-31583: Ignoring function call through function pointer *(Adapter->fpFlashWriteWithStatusCheck): tmp___6 = (*(Adapter->fpFlashWriteWithStatusCheck))(Adapter, uiPartOffset + uiIndex, ((PVOID )pTempBuff) + ((unsigned long)uiIndex)); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

lines 31382-31383: Ignoring function call through function pointer *(Adapter->fpFlashWriteWithStatusCheck): tmp___8 = (*(Adapter->fpFlashWriteWithStatusCheck))(Adapter, uiPartOffset + uiIndex, ((PVOID )pTempBuff) + ((unsigned long)uiIndex)); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

lines 31359-31360: Ignoring function call through function pointer *(Adapter->fpFlashWriteWithStatusCheck): tmp___7 = (*(Adapter->fpFlashWriteWithStatusCheck))(Adapter, (uiPartOffset + uiIndex) + uiReadIndex, ((PVOID )pTempBuff) + ((unsigned long)(uiIndex + uiReadIndex))); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            1589748 (11% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  1408417 (89%)
  Because of loop head:            180385 (11%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         946 (0%)
  Times precision was empty:       212040 (13%)
  Times precision was {false}:     4422 (0%)
  Times result was cached:         1361622 (86%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      11664 (1%)
  Times result was 'false':        34959 (2%)
Number of strengthen sat checks:   0
Number of coverage checks:         3646559
  BDD entailment checks:           350289
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       238
Number of predicates discovered:          6
Number of abstraction locations:          538
Max number of predicates per location:    4
Avg number of predicates per location:    3
Total predicates per abstraction:         4155286
Max number of predicates per abstraction: 4
Avg number of predicates per abstraction: 258.32
Number of irrelevant predicates:          611654 (15%)
Number of preds handled by boolean abs:   19994 (0%)
  Total number of models for allsat:      11610
  Max number of models for allsat:        1
  Avg number of models for allsat:        1.00

Time for post operator:                 92.846s
  Time for path formula creation:       90.566s
Time for strengthen operator:            7.071s
Time for prec operator:                508.609s
  Time for abstraction:                495.707s (Max:     0.807s, Count: 1589748)
    Boolean abstraction:               120.561s
    Solving time:                      159.597s (Max:     0.114s)
    Model enumeration time:              8.988s
    Time for BDD construction:           0.174s (Max:     0.001s)
Time for merge operator:                21.640s
Time for coverage check:                 0.364s
  Time for BDD entailment checks:        0.220s
Total time for SMT solver (w/o itp):   168.585s

Number of path formula cache hits:   16682414 (97%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    55.852s

Total number of created targets for pointer analysis: 1339539
   Number of created targets for uf: *(void)* is 19
   Number of created targets for uf: *(struct_sk_buff)* is 5
   Number of created targets for uf: *(struct_bcm_mini_adapter)* is 2
   Number of created targets for uf: *(struct_bcm_connect_mgr_params)* is 5
   Number of created targets for uf: *(struct__S_SERVICEFLOW_ENTRY)* is 2
   Number of created targets for uf: *signed_int is 3
   Number of created targets for uf: *unsigned_char is 11750
   Number of created targets for uf: *unsigned_int is 32236
   Number of created targets for uf: *char is 2
   Number of created targets for uf: *enum_bcm_flash2x_section_val is 19
   Number of created targets for uf: *unsigned_long_int is 1357
   Number of created targets for uf: *(struct_bcm_tarang_data)* is 3


Number of BDD nodes:                               232
Size of BDD node table:                            464047
Size of BDD cache:                                 46411
Size of BDD node cleanup queue:                       23381 (count: 656272, min: 0, max: 105, avg: 0.04)
Time for BDD node cleanup:                             0.065s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  7.852s
  Time for transition matches:                         4.772s
  Time for transition assertions:                      0.005s
  Time for transition actions:                         0.003s
Automaton transfers with branching:                0
Automaton transfer successors:                     14057483 (count: 14057483, min: 1, max: 1, avg: 1.00) [1 x 14057483]

CPA algorithm statistics
------------------------
Number of iterations:            8668705
Max size of waitlist:            1273
Average size of waitlist:        210
Number of computed successors:   10923262
Max successors for one state:    2
Number of times merged:          1648135
Number of times stopped:         1950671
Number of times breaked:         946

Total time for CPA algorithm:       756.508s (Max:     5.322s)
  Time for choose from waitlist:      1.766s
  Time for precision adjustment:    541.590s
  Time for transfer relation:       158.110s
  Time for merge operator:           29.954s
  Time for stop operator:             6.494s
  Time for adding to reached set:     7.634s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   946
Avg. length of target path (in blocks):               31292 (count: 946, min: 6, max: 82, avg: 33.08)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                 131.926s
  Counterexample analysis:                           123.240s (Max:     0.438s, Calls: 946)
    Refinement sat check:                            113.524s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.016s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.108s
  Precision update:                                    0.410s
  ARG update:                                          7.921s

Length of refined path (in blocks):                   29866 (count: 946, min: 5, max: 81, avg: 31.57)
Number of affected states:                            26264 (count: 946, min: 1, max: 79, avg: 27.76)
Length (states) of path with itp 'true':               2656 (count: 946, min: 1, max: 23, avg: 2.81)
Length (states) of path with itp non-trivial itp:     26264 (count: 946, min: 1, max: 79, avg: 27.76)
Length (states) of path with itp 'false':               946 (count: 946, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 946, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:           25318 (count: 946, min: 0, max: 78, avg: 26.76)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                946
Number of successful refinements:     946
Number of failed refinements:         0
Max. size of reached set before ref.: 30030
Max. size of reached set after ref.:  16959
Avg. size of reached set before ref.: 10756.38
Avg. size of reached set after ref.:  1312.87

Total time for CEGAR algorithm:     892.504s
Time for refinements:               135.455s
Average time for refinement:          0.143s
Max time for refinement:              0.450s

Code Coverage
-----------------------------
  Function coverage:      0.095
  Visited lines:          3003
  Total lines:            16538
  Line coverage:          0.182
  Visited conditions:     1712
  Total conditions:       13012
  Condition coverage:     0.132

CPAchecker general statistics
-----------------------------
Number of program locations:     27437
Number of CFA edges:             35132
Number of relevant variables:    3454
Number of functions:             535
Number of loops:                 203
Size of reached set:             4067
  Number of reached locations:   2342 (9%)
    Avg states per location:     1
    Max states per location:     114 (at node N27736)
  Number of reached functions:   51 (10%)
  Number of partitions:          4067
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0
  Size of final wait list        86

Time for analysis setup:          7.844s
  Time for loading CPAs:          0.817s
  Time for loading parser:        0.411s
  Time for CFA construction:      6.545s
    Time for parsing file(s):     1.076s
    Time for AST to CFA:          2.588s
    Time for CFA sanity check:    0.631s
    Time for post-processing:     2.110s
      Time for var class.:        1.136s
Time for Analysis:              892.504s
CPU time for analysis:          892.450s
Total time for CPAchecker:      900.350s
Total CPU time for CPAchecker:  900.270s
Time for statistics:              0.154s

Time for Garbage Collector:      39.744s (in 2641 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                687MB (   655 MiB) max;    308MB (   294 MiB) avg;    698MB (   666 MiB) peak
Used non-heap memory:             43MB (    41 MiB) max;     42MB (    40 MiB) avg;     43MB (    41 MiB) peak
Allocated heap memory:           736MB (   702 MiB) max;    461MB (   439 MiB) avg
Allocated non-heap memory:        46MB (    43 MiB) max;     45MB (    43 MiB) avg
Total process virtual memory:  12630MB ( 12045 MiB) max;  12427MB ( 11851 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
