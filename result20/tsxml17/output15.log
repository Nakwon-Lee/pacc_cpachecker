scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 9600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-32_7a-drivers--net--usb--hso.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 9600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_5caeybli/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker 1.6.1-svn 6608050+ (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 5545: Dead code detected: __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

line 5548: Dead code detected: __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

line 5551: Dead code detected: __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (8UL) {
  case 1UL:
  __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& current_task));
  goto ldv_2861;
  case 2UL:
  __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_2861;
  case 4UL:
  __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_2861;
  case 8UL:
  __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_2861;
  default:
  __bad_percpu_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 7753: Dead code detected: tmp___0 = get_current(); (CFACreationUtils.addEdgeToCFA, INFO)

line 7758: Dead code detected: tmp___1 = get_current(); (CFACreationUtils.addEdgeToCFA, INFO)

line 7763: Dead code detected: tmp___2 = get_current(); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (8UL) {
  case 1UL:
  tmp___0 = get_current();
  __asm__ volatile ("xchgb %b0, %1\n": "+q" (__ret___1), "+m" (tmp___0->state): : "memory",
                       "cc");
  goto ldv_42871;
  case 2UL:
  tmp___1 = get_current();
  __asm__ volatile ("xchgw %w0, %1\n": "+r" (__ret___1), "+m" (tmp___1->state): : "memory",
                       "cc");
  goto ldv_42871;
  case 4UL:
  tmp___2 = get_current();
  __asm__ volatile ("xchgl %0, %1\n": "+r" (__ret___1), "+m" (tmp___2->state): : "memory",
                       "cc");
  goto ldv_42871;
  case 8UL:
  tmp___3 = get_current();
  __asm__ volatile ("xchgq %q0, %1\n": "+r" (__ret___1), "+m" (tmp___3->state): : "memory",
                       "cc");
  goto ldv_42871;
  default:
  __xchg_wrong_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 10384: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_handler_precall to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __raw_spin_lock_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __tty_alloc_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tty_termios_encode_baud_rate to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tty_set_operations to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tty_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tty_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function put_tty_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_deregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value_probe to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_set_interface to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_warn to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_unlink_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __tasklet_hi_schedule to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tty_encode_baud_rate to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tty_port_tty_get to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tty_hangup to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tty_kref_put to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_autopm_get_interface to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tty_port_tty_set to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tasklet_kill to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function cancel_work_sync to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_autopm_put_interface to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_kill_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __wake_up to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_control_msg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_dev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function alloc_netdev_mqs to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function add_wait_queue to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function schedule_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 8018: Ignoring function call through function pointer *(serial->write_data): res = (*(serial->write_data))(serial); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function usb_alloc_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_free_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_submit_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __mutex_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __init_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function lockdep_init_map to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tty_port_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function unregister_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            95438 (17% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  80680 (85%)
  Because of loop head:            14447 (15%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         311 (0%)
  Times precision was empty:       48914 (51%)
  Times precision was {false}:     692 (1%)
  Times result was cached:         43778 (46%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      2054 (2%)
  Times result was 'false':        2246 (2%)
Number of strengthen sat checks:   0
Number of coverage checks:         69354
  BDD entailment checks:           23986
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       50
Number of predicates discovered:          8
Number of abstraction locations:          119
Max number of predicates per location:    5
Avg number of predicates per location:    3
Total predicates per abstraction:         131420
Max number of predicates per abstraction: 5
Avg number of predicates per abstraction: 47.86
Number of irrelevant predicates:          77531 (59%)
Number of preds handled by boolean abs:   4020 (3%)
  Total number of models for allsat:      2054
  Max number of models for allsat:        1
  Avg number of models for allsat:        1.00

Time for post operator:                  4.002s
  Time for path formula creation:        3.820s
Time for strengthen operator:            0.365s
Time for prec operator:                  8.928s
  Time for abstraction:                  8.065s (Max:     0.020s, Count: 95438)
    Boolean abstraction:                 1.318s
    Solving time:                        1.378s (Max:     0.013s)
    Model enumeration time:              0.097s
    Time for BDD construction:           0.078s (Max:     0.011s)
Time for merge operator:                 0.189s
Time for coverage check:                 0.059s
  Time for BDD entailment checks:        0.034s
Total time for SMT solver (w/o itp):     1.475s

Number of path formula cache hits:   622215 (95%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     2.667s

Total number of created targets for pointer analysis: 473
   Number of created targets for uf: *(void)* is 2
   Number of created targets for uf: *(struct_hso_device)* is 32
   Number of created targets for uf: *(struct_hso_serial)* is 2
   Number of created targets for uf: *signed_int is 19
   Number of created targets for uf: *(struct_usb_device)* is 7
   Number of created targets for uf: *(struct_hso_tiocmget)* is 2
   Number of created targets for uf: *unsigned_char is 19
   Number of created targets for uf: *(struct_urb)* is 2
   Number of created targets for uf: *(struct_usb_interface)* is 7
   Number of created targets for uf: *(struct_usb_endpoint_descriptor)* is 4
   Number of created targets for uf: *(struct_hso_net)* is 3
   Number of created targets for uf: *unsigned_int is 7


Number of BDD nodes:                               253
Size of BDD node table:                            464047
Size of BDD cache:                                 46411
Size of BDD node cleanup queue:                        4190 (count: 88815, min: 0, max: 218, avg: 0.05)
Time for BDD node cleanup:                             0.018s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.697s
  Time for transition matches:                         0.382s
  Time for transition assertions:                      0.005s
  Time for transition actions:                         0.019s
Automaton transfers with branching:                0
Automaton transfer successors:                       549293 (count: 549293, min: 1, max: 1, avg: 1.00) [1 x 549293]

CPA algorithm statistics
------------------------
Number of iterations:            355567
Max size of waitlist:            211
Average size of waitlist:        83
Number of computed successors:   410358
Max successors for one state:    2
Number of times merged:          22684
Number of times stopped:         36795
Number of times breaked:         311

Total time for CPA algorithm:        22.351s (Max:     0.727s)
  Time for choose from waitlist:      0.195s
  Time for precision adjustment:     10.952s
  Time for transfer relation:         8.739s
  Time for merge operator:            0.507s
  Time for stop operator:             0.460s
  Time for adding to reached set:     0.463s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   311
Avg. length of target path (in blocks):                7390 (count: 311, min: 16, max: 29, avg: 23.76)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   2.837s
  Counterexample analysis:                             1.914s (Max:     0.020s, Calls: 311)
    Refinement sat check:                              1.324s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.005s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.057s
  Precision update:                                    0.142s
  ARG update:                                          0.564s

Length of refined path (in blocks):                    7001 (count: 311, min: 15, max: 28, avg: 22.51)
Number of affected states:                             3208 (count: 311, min: 0, max: 26, avg: 10.32)
Length (states) of path with itp 'true':               3482 (count: 311, min: 1, max: 23, avg: 11.20)
Length (states) of path with itp non-trivial itp:      3208 (count: 311, min: 0, max: 26, avg: 10.32)
Length (states) of path with itp 'false':               311 (count: 311, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 311, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:            2906 (count: 311, min: 0, max: 25, avg: 9.34)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                311
Number of successful refinements:     311
Number of failed refinements:         0
Max. size of reached set before ref.: 4746
Max. size of reached set after ref.:  4554
Avg. size of reached set before ref.: 2638.60
Avg. size of reached set after ref.:  1448.73

Total time for CEGAR algorithm:      26.026s
Time for refinements:                 3.396s
Average time for refinement:          0.010s
Max time for refinement:              0.049s

Code Coverage
-----------------------------
  Function coverage:      0.354
  Visited lines:          1786
  Total lines:            3653
  Line coverage:          0.489
  Visited conditions:     302
  Total conditions:       1024
  Condition coverage:     0.295

CPAchecker general statistics
-----------------------------
Number of program locations:     5169
Number of CFA edges:             5867
Number of relevant variables:    707
Number of functions:             198
Number of loops:                 29
Size of reached set:             1268
  Number of reached locations:   867 (17%)
    Avg states per location:     1
    Max states per location:     16 (at node N3980)
  Number of reached functions:   70 (35%)
  Number of partitions:          1265
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N3349 (before line 9595), Function hso_probe called from node N3940, stack depth 2 [32899b75], stack [main, hso_probe]])
  Number of target states:       0
  Size of final wait list        38

Time for analysis setup:          3.841s
  Time for loading CPAs:          0.684s
  Time for loading parser:        0.416s
  Time for CFA construction:      2.667s
    Time for parsing file(s):     0.659s
    Time for AST to CFA:          0.991s
    Time for CFA sanity check:    0.214s
    Time for post-processing:     0.674s
      Time for var class.:        0.355s
Time for Analysis:               26.026s
CPU time for analysis:           26.030s
Total time for CPAchecker:       29.868s
Total CPU time for CPAchecker:   29.860s
Time for statistics:              0.060s

Time for Garbage Collector:       0.708s (in 78 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                127MB (   121 MiB) max;     80MB (    76 MiB) avg;    133MB (   126 MiB) peak
Used non-heap memory:             41MB (    39 MiB) max;     37MB (    35 MiB) avg;     41MB (    39 MiB) peak
Allocated heap memory:           255MB (   243 MiB) max;    255MB (   243 MiB) avg
Allocated non-heap memory:        43MB (    41 MiB) max;     39MB (    37 MiB) avg
Total process virtual memory:  12147MB ( 11584 MiB) max;  12137MB ( 11575 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
