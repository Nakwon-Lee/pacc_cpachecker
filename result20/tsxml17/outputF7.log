scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 9600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-32_7a-drivers--net--usb--hso.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 9600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_e945r8ta/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker 1.6.1-svn 6608050+ (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 5545: Dead code detected: __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

line 5548: Dead code detected: __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

line 5551: Dead code detected: __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (8UL) {
  case 1UL:
  __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& current_task));
  goto ldv_2861;
  case 2UL:
  __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_2861;
  case 4UL:
  __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_2861;
  case 8UL:
  __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_2861;
  default:
  __bad_percpu_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 7753: Dead code detected: tmp___0 = get_current(); (CFACreationUtils.addEdgeToCFA, INFO)

line 7758: Dead code detected: tmp___1 = get_current(); (CFACreationUtils.addEdgeToCFA, INFO)

line 7763: Dead code detected: tmp___2 = get_current(); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (8UL) {
  case 1UL:
  tmp___0 = get_current();
  __asm__ volatile ("xchgb %b0, %1\n": "+q" (__ret___1), "+m" (tmp___0->state): : "memory",
                       "cc");
  goto ldv_42871;
  case 2UL:
  tmp___1 = get_current();
  __asm__ volatile ("xchgw %w0, %1\n": "+r" (__ret___1), "+m" (tmp___1->state): : "memory",
                       "cc");
  goto ldv_42871;
  case 4UL:
  tmp___2 = get_current();
  __asm__ volatile ("xchgl %0, %1\n": "+r" (__ret___1), "+m" (tmp___2->state): : "memory",
                       "cc");
  goto ldv_42871;
  case 8UL:
  tmp___3 = get_current();
  __asm__ volatile ("xchgq %q0, %1\n": "+r" (__ret___1), "+m" (tmp___3->state): : "memory",
                       "cc");
  goto ldv_42871;
  default:
  __xchg_wrong_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 10384: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_handler_precall to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __raw_spin_lock_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __tty_alloc_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tty_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function put_tty_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_deregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_submit_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_warn to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_kill_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function schedule_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function consume_skb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_unlink_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_autopm_get_interface to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tty_port_tty_set to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_autopm_put_interface to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tty_encode_baud_rate to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tasklet_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __init_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function lockdep_init_map to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_remove_file to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tty_unregister_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_free_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tty_port_destroy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __wake_up to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tasklet_kill to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function cancel_work_sync to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 8018: Ignoring function call through function pointer *(serial->write_data): res = (*(serial->write_data))(serial); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function _raw_spin_lock_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function add_wait_queue to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function schedule to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function remove_wait_queue to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __tasklet_hi_schedule to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value_probe to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tty_port_tty_get to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tty_hangup to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tty_kref_put to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rfkill_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rfkill_destroy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function unregister_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tty_port_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tty_port_register_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_create_file to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_dev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_alloc_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __mutex_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function alloc_netdev_mqs to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function register_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snprintf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rfkill_alloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rfkill_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_set_interface to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_control_msg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tty_termios_encode_baud_rate to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tty_set_operations to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tty_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            2023629 (22% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  1815722 (90%)
  Because of loop head:            178602 (9%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         29305 (1%)
  Times precision was empty:       56652 (3%)
  Times precision was {false}:     911 (0%)
  Times result was cached:         1950930 (96%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      15136 (1%)
  Times result was 'false':        72665 (4%)
Number of strengthen sat checks:   0
Number of coverage checks:         1162350
  BDD entailment checks:           395316
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       50
Number of predicates discovered:          9
Number of abstraction locations:          408
Max number of predicates per location:    7
Avg number of predicates per location:    5
Total predicates per abstraction:         10606087
Max number of predicates per abstraction: 7
Avg number of predicates per abstraction: 660.94
Number of irrelevant predicates:          1887465 (18%)
Number of preds handled by boolean abs:   58075 (1%)
  Total number of models for allsat:      15487
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.02

Time for post operator:                 41.624s
  Time for path formula creation:       40.063s
Time for strengthen operator:            4.025s
Time for prec operator:                250.107s
  Time for abstraction:                238.836s (Max:     0.653s, Count: 2023629)
    Boolean abstraction:                 8.570s
    Solving time:                        7.278s (Max:     0.016s)
    Model enumeration time:              0.667s
    Time for BDD construction:           0.256s (Max:     0.017s)
Time for merge operator:                 2.246s
Time for coverage check:                 0.337s
  Time for BDD entailment checks:        0.257s
Total time for SMT solver (w/o itp):     7.945s

Number of path formula cache hits:   10351053 (91%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    24.372s

Total number of created targets for pointer analysis: 136198
   Number of created targets for uf: *(void)* is 2
   Number of created targets for uf: *(struct_usb_device)* is 249
   Number of created targets for uf: *(unsigned_char)* is 21
   Number of created targets for uf: *(struct_usb_endpoint_descriptor)* is 243
   Number of created targets for uf: *unsigned_long_int is 1361
   Number of created targets for uf: *unsigned_short_int is 32
   Number of created targets for uf: *(Return_type:_[signed_int],_Parameters:_1,_Parameter_1_type:_[(struct_hso_serial)*],_VarArgs:_false)* is 119
   Number of created targets for uf: *(struct_hso_device)* is 3189
   Number of created targets for uf: *(struct_hso_serial)* is 124
   Number of created targets for uf: *signed_int is 1989
   Number of created targets for uf: *unsigned_char is 984
   Number of created targets for uf: *(struct_urb)* is 128
   Number of created targets for uf: *(struct_hso_tiocmget)* is 244
   Number of created targets for uf: *(struct_usb_interface)* is 249
   Number of created targets for uf: *(struct_hso_shared_int)* is 119
   Number of created targets for uf: *enum_rx_ctrl_state is 10
   Number of created targets for uf: *unsigned_int is 372
   Number of created targets for uf: *(struct_hso_net)* is 126
   Number of created targets for uf: *(struct_device)* is 17


Number of BDD nodes:                               447
Size of BDD node table:                            464047
Size of BDD cache:                                 46411
Size of BDD node cleanup queue:                       30784 (count: 547857, min: 0, max: 625, avg: 0.06)
Time for BDD node cleanup:                             0.087s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  6.882s
  Time for transition matches:                         3.903s
  Time for transition assertions:                      0.010s
  Time for transition actions:                         0.035s
Automaton transfers with branching:                0
Automaton transfer successors:                      9256615 (count: 9256615, min: 1, max: 1, avg: 1.00) [1 x 9256615]

CPA algorithm statistics
------------------------
Number of iterations:            6865016
Max size of waitlist:            59
Average size of waitlist:        20
Number of computed successors:   7678394
Max successors for one state:    2
Number of times merged:          383517
Number of times stopped:         619579
Number of times breaked:         29305

Total time for CPA algorithm:       388.691s (Max:     0.872s)
  Time for choose from waitlist:      1.505s
  Time for precision adjustment:    274.082s
  Time for transfer relation:        88.823s
  Time for merge operator:            5.027s
  Time for stop operator:             4.736s
  Time for adding to reached set:     5.686s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   29305
Avg. length of target path (in blocks):             2010123 (count: 29305, min: 16, max: 162, avg: 68.59)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                 352.188s
  Counterexample analysis:                           316.407s (Max:     0.048s, Calls: 29305)
    Refinement sat check:                            203.263s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.506s
  Error path post-processing:                          0.000s
  Predicate creation:                                  2.753s
  Precision update:                                   22.113s
  ARG update:                                          6.023s

Length of refined path (in blocks):                 1975444 (count: 29305, min: 15, max: 161, avg: 67.41)
Number of affected states:                           735034 (count: 29305, min: 0, max: 93, avg: 25.08)
Length (states) of path with itp 'true':            1211105 (count: 29305, min: 0, max: 148, avg: 41.33)
Length (states) of path with itp non-trivial itp:    735034 (count: 29305, min: 0, max: 93, avg: 25.08)
Length (states) of path with itp 'false':             29305 (count: 29305, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 29305, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:          705785 (count: 29305, min: 0, max: 92, avg: 24.08)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                29305
Number of successful refinements:     29305
Number of failed refinements:         0
Max. size of reached set before ref.: 16975
Max. size of reached set after ref.:  15961
Avg. size of reached set before ref.: 4218.21
Avg. size of reached set after ref.:  3980.18

Total time for CEGAR algorithm:     842.016s
Time for refinements:               410.831s
Average time for refinement:          0.014s
Max time for refinement:              0.066s

Code Coverage
-----------------------------
  Function coverage:      0.646
  Visited lines:          2739
  Total lines:            3653
  Line coverage:          0.750
  Visited conditions:     621
  Total conditions:       1024
  Condition coverage:     0.606

CPAchecker general statistics
-----------------------------
Number of program locations:     5169
Number of CFA edges:             5867
Number of relevant variables:    707
Number of functions:             198
Number of loops:                 29
Size of reached set:             10593
  Number of reached locations:   1949 (38%)
    Avg states per location:     5
    Max states per location:     91 (at node N400)
  Number of reached functions:   128 (65%)
  Number of partitions:          10593
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0

Time for analysis setup:          3.809s
  Time for loading CPAs:          0.589s
  Time for loading parser:        0.413s
  Time for CFA construction:      2.701s
    Time for parsing file(s):     0.631s
    Time for AST to CFA:          0.980s
    Time for CFA sanity check:    0.217s
    Time for post-processing:     0.741s
      Time for var class.:        0.366s
Time for Analysis:              842.016s
CPU time for analysis:          842.000s
Time for analyzing result:        0.006s
Total time for CPAchecker:      845.827s
Total CPU time for CPAchecker:  845.790s
Time for statistics:              0.227s

Time for Garbage Collector:      24.060s (in 2001 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                658MB (   627 MiB) max;    295MB (   281 MiB) avg;    668MB (   637 MiB) peak
Used non-heap memory:             42MB (    40 MiB) max;     41MB (    39 MiB) avg;     42MB (    40 MiB) peak
Allocated heap memory:           757MB (   722 MiB) max;    482MB (   460 MiB) avg
Allocated non-heap memory:        44MB (    42 MiB) max;     43MB (    41 MiB) avg
Total process virtual memory:  12416MB ( 11840 MiB) max;  12255MB ( 11687 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
