scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 9600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-32_7a-drivers--staging--speakup--speakup.ko-ldv_main4_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 9600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_90rr6d7f/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker 1.6.1-svn 6608050+ (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 4300: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

lines 4456-4457: Dead code detected: __asm__ volatile ("xchgb %b0, %1\n": "+q" (__ret), "+m" (dev_opened): : "memory",
                       "cc"); (CFACreationUtils.addEdgeToCFA, INFO)

lines 4460-4461: Dead code detected: __asm__ volatile ("xchgw %w0, %1\n": "+r" (__ret), "+m" (dev_opened): : "memory",
                       "cc"); (CFACreationUtils.addEdgeToCFA, INFO)

lines 4468-4469: Dead code detected: __asm__ volatile ("xchgq %q0, %1\n": "+r" (__ret), "+m" (dev_opened): : "memory",
                       "cc"); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (4UL) {
  case 1UL:
  __asm__ volatile ("xchgb %b0, %1\n": "+q" (__ret), "+m" (dev_opened): : "memory",
                       "cc");
  goto ldv_23939;
  case 2UL:
  __asm__ volatile ("xchgw %w0, %1\n": "+r" (__ret), "+m" (dev_opened): : "memory",
                       "cc");
  goto ldv_23939;
  case 4UL:
  __asm__ volatile ("xchgl %0, %1\n": "+r" (__ret), "+m" (dev_opened): : "memory",
                       "cc");
  goto ldv_23939;
  case 8UL:
  __asm__ volatile ("xchgq %q0, %1\n": "+r" (__ret), "+m" (dev_opened): : "memory",
                       "cc");
  goto ldv_23939;
  default:
  __xchg_wrong_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 4679: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 5216: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 5369: Dead code detected: __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& kernel_stack)); (CFACreationUtils.addEdgeToCFA, INFO)

line 5372: Dead code detected: __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack)); (CFACreationUtils.addEdgeToCFA, INFO)

line 5375: Dead code detected: __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (8UL) {
  case 1UL:
  __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& kernel_stack));
  goto ldv_6159;
  case 2UL:
  __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack));
  goto ldv_6159;
  case 4UL:
  __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack));
  goto ldv_6159;
  case 8UL:
  __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack));
  goto ldv_6159;
  default:
  __bad_percpu_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 5479: Dead code detected: __asm__ ("movw %1,%%gs:%P0": "+m" (reporting_keystroke): "ri" (1)); (CFACreationUtils.addEdgeToCFA, INFO)

line 5482: Dead code detected: __asm__ ("movl %1,%%gs:%P0": "+m" (reporting_keystroke): "ri" (1)); (CFACreationUtils.addEdgeToCFA, INFO)

line 5485: Dead code detected: __asm__ ("movq %1,%%gs:%P0": "+m" (reporting_keystroke): "re" (1)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (1UL) {
  case 1UL:
  __asm__ ("movb %1,%%gs:%P0": "+m" (reporting_keystroke): "qi" (1));
  goto ldv_24716;
  case 2UL:
  __asm__ ("movw %1,%%gs:%P0": "+m" (reporting_keystroke): "ri" (1));
  goto ldv_24716;
  case 4UL:
  __asm__ ("movl %1,%%gs:%P0": "+m" (reporting_keystroke): "ri" (1));
  goto ldv_24716;
  case 8UL:
  __asm__ ("movq %1,%%gs:%P0": "+m" (reporting_keystroke): "re" (1));
  goto ldv_24716;
  default:
  __bad_percpu_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

lines 5493-5508: Dead code detected: switch (1UL) (CFACreationUtils.addEdgeToCFA, INFO)

line 5498: Dead code detected: __asm__ ("movw %1,%%gs:%P0": "+m" (reporting_keystroke): "ri" (1)); (CFACreationUtils.addEdgeToCFA, INFO)

line 5501: Dead code detected: __asm__ ("movl %1,%%gs:%P0": "+m" (reporting_keystroke): "ri" (1)); (CFACreationUtils.addEdgeToCFA, INFO)

line 5504: Dead code detected: __asm__ ("movq %1,%%gs:%P0": "+m" (reporting_keystroke): "re" (1)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (1UL) {
  case 1UL:
  __asm__ ("movb %1,%%gs:%P0": "+m" (reporting_keystroke): "qi" (1));
  goto ldv_24726;
  case 2UL:
  __asm__ ("movw %1,%%gs:%P0": "+m" (reporting_keystroke): "ri" (1));
  goto ldv_24726;
  case 4UL:
  __asm__ ("movl %1,%%gs:%P0": "+m" (reporting_keystroke): "ri" (1));
  goto ldv_24726;
  case 8UL:
  __asm__ ("movq %1,%%gs:%P0": "+m" (reporting_keystroke): "re" (1));
  goto ldv_24726;
  default:
  __bad_percpu_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

lines 5512-5527: Dead code detected: switch (1UL) (CFACreationUtils.addEdgeToCFA, INFO)

line 5517: Dead code detected: __asm__ ("movw %1,%%gs:%P0": "+m" (reporting_keystroke): "ri" (1)); (CFACreationUtils.addEdgeToCFA, INFO)

line 5520: Dead code detected: __asm__ ("movl %1,%%gs:%P0": "+m" (reporting_keystroke): "ri" (1)); (CFACreationUtils.addEdgeToCFA, INFO)

line 5523: Dead code detected: __asm__ ("movq %1,%%gs:%P0": "+m" (reporting_keystroke): "re" (1)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (1UL) {
  case 1UL:
  __asm__ ("movb %1,%%gs:%P0": "+m" (reporting_keystroke): "qi" (1));
  goto ldv_24735;
  case 2UL:
  __asm__ ("movw %1,%%gs:%P0": "+m" (reporting_keystroke): "ri" (1));
  goto ldv_24735;
  case 4UL:
  __asm__ ("movl %1,%%gs:%P0": "+m" (reporting_keystroke): "ri" (1));
  goto ldv_24735;
  case 8UL:
  __asm__ ("movq %1,%%gs:%P0": "+m" (reporting_keystroke): "re" (1));
  goto ldv_24735;
  default:
  __bad_percpu_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

lines 5531-5546: Dead code detected: switch (1UL) (CFACreationUtils.addEdgeToCFA, INFO)

line 5536: Dead code detected: __asm__ ("movw %1,%%gs:%P0": "+m" (reporting_keystroke): "ri" (1)); (CFACreationUtils.addEdgeToCFA, INFO)

line 5539: Dead code detected: __asm__ ("movl %1,%%gs:%P0": "+m" (reporting_keystroke): "ri" (1)); (CFACreationUtils.addEdgeToCFA, INFO)

line 5542: Dead code detected: __asm__ ("movq %1,%%gs:%P0": "+m" (reporting_keystroke): "re" (1)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (1UL) {
  case 1UL:
  __asm__ ("movb %1,%%gs:%P0": "+m" (reporting_keystroke): "qi" (1));
  goto ldv_24744;
  case 2UL:
  __asm__ ("movw %1,%%gs:%P0": "+m" (reporting_keystroke): "ri" (1));
  goto ldv_24744;
  case 4UL:
  __asm__ ("movl %1,%%gs:%P0": "+m" (reporting_keystroke): "ri" (1));
  goto ldv_24744;
  case 8UL:
  __asm__ ("movq %1,%%gs:%P0": "+m" (reporting_keystroke): "re" (1));
  goto ldv_24744;
  default:
  __bad_percpu_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (1UL) {
  case 1UL: ;
  switch (1UL) {
  case 1UL:
  __asm__ ("movb %1,%%gs:%P0": "+m" (reporting_keystroke): "qi" (1));
  goto ldv_24716;
  case 2UL:
  __asm__ ("movw %1,%%gs:%P0": "+m" (reporting_keystroke): "ri" (1));
  goto ldv_24716;
  case 4UL:
  __asm__ ("movl %1,%%gs:%P0": "+m" (reporting_keystroke): "ri" (1));
  goto ldv_24716;
  case 8UL:
  __asm__ ("movq %1,%%gs:%P0": "+m" (reporting_keystroke): "re" (1));
  goto ldv_24716;
  default:
  __bad_percpu_size();
  }
  ldv_24716: ;
  goto ldv_24721;
  case 2UL: ;
  switch (1UL) {
  case 1UL:
  __asm__ ("movb %1,%%gs:%P0": "+m" (reporting_keystroke): "qi" (1));
  goto ldv_24726;
  case 2UL:
  __asm__ ("movw %1,%%gs:%P0": "+m" (reporting_keystroke): "ri" (1));
  goto ldv_24726;
  case 4UL:
  __asm__ ("movl %1,%%gs:%P0": "+m" (reporting_keystroke): "ri" (1));
  goto ldv_24726;
  case 8UL:
  __asm__ ("movq %1,%%gs:%P0": "+m" (reporting_keystroke): "re" (1));
  goto ldv_24726;
  default:
  __bad_percpu_size();
  }
  ldv_24726: ;
  goto ldv_24721;
  case 4UL: ;
  switch (1UL) {
  case 1UL:
  __asm__ ("movb %1,%%gs:%P0": "+m" (reporting_keystroke): "qi" (1));
  goto ldv_24735;
  case 2UL:
  __asm__ ("movw %1,%%gs:%P0": "+m" (reporting_keystroke): "ri" (1));
  goto ldv_24735;
  case 4UL:
  __asm__ ("movl %1,%%gs:%P0": "+m" (reporting_keystroke): "ri" (1));
  goto ldv_24735;
  case 8UL:
  __asm__ ("movq %1,%%gs:%P0": "+m" (reporting_keystroke): "re" (1));
  goto ldv_24735;
  default:
  __bad_percpu_size();
  }
  ldv_24735: ;
  goto ldv_24721;
  case 8UL: ;
  switch (1UL) {
  case 1UL:
  __asm__ ("movb %1,%%gs:%P0": "+m" (reporting_keystroke): "qi" (1));
  goto ldv_24744;
  case 2UL:
  __asm__ ("movw %1,%%gs:%P0": "+m" (reporting_keystroke): "ri" (1));
  goto ldv_24744;
  case 4UL:
  __asm__ ("movl %1,%%gs:%P0": "+m" (reporting_keystroke): "ri" (1));
  goto ldv_24744;
  case 8UL:
  __asm__ ("movq %1,%%gs:%P0": "+m" (reporting_keystroke): "re" (1));
  goto ldv_24744;
  default:
  __bad_percpu_size();
  }
  ldv_24744: ;
  goto ldv_24721;
  default:
  __bad_size_call_parameter();
  goto ldv_24721;
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 5564: Dead code detected: __asm__ ("movw %1,%%gs:%P0": "+m" (reporting_keystroke): "ri" (0)); (CFACreationUtils.addEdgeToCFA, INFO)

line 5567: Dead code detected: __asm__ ("movl %1,%%gs:%P0": "+m" (reporting_keystroke): "ri" (0)); (CFACreationUtils.addEdgeToCFA, INFO)

line 5570: Dead code detected: __asm__ ("movq %1,%%gs:%P0": "+m" (reporting_keystroke): "re" (0)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (1UL) {
  case 1UL:
  __asm__ ("movb %1,%%gs:%P0": "+m" (reporting_keystroke): "qi" (0));
  goto ldv_24755;
  case 2UL:
  __asm__ ("movw %1,%%gs:%P0": "+m" (reporting_keystroke): "ri" (0));
  goto ldv_24755;
  case 4UL:
  __asm__ ("movl %1,%%gs:%P0": "+m" (reporting_keystroke): "ri" (0));
  goto ldv_24755;
  case 8UL:
  __asm__ ("movq %1,%%gs:%P0": "+m" (reporting_keystroke): "re" (0));
  goto ldv_24755;
  default:
  __bad_percpu_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

lines 5578-5593: Dead code detected: switch (1UL) (CFACreationUtils.addEdgeToCFA, INFO)

line 5583: Dead code detected: __asm__ ("movw %1,%%gs:%P0": "+m" (reporting_keystroke): "ri" (0)); (CFACreationUtils.addEdgeToCFA, INFO)

line 5586: Dead code detected: __asm__ ("movl %1,%%gs:%P0": "+m" (reporting_keystroke): "ri" (0)); (CFACreationUtils.addEdgeToCFA, INFO)

line 5589: Dead code detected: __asm__ ("movq %1,%%gs:%P0": "+m" (reporting_keystroke): "re" (0)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (1UL) {
  case 1UL:
  __asm__ ("movb %1,%%gs:%P0": "+m" (reporting_keystroke): "qi" (0));
  goto ldv_24765;
  case 2UL:
  __asm__ ("movw %1,%%gs:%P0": "+m" (reporting_keystroke): "ri" (0));
  goto ldv_24765;
  case 4UL:
  __asm__ ("movl %1,%%gs:%P0": "+m" (reporting_keystroke): "ri" (0));
  goto ldv_24765;
  case 8UL:
  __asm__ ("movq %1,%%gs:%P0": "+m" (reporting_keystroke): "re" (0));
  goto ldv_24765;
  default:
  __bad_percpu_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

lines 5597-5612: Dead code detected: switch (1UL) (CFACreationUtils.addEdgeToCFA, INFO)

line 5602: Dead code detected: __asm__ ("movw %1,%%gs:%P0": "+m" (reporting_keystroke): "ri" (0)); (CFACreationUtils.addEdgeToCFA, INFO)

line 5605: Dead code detected: __asm__ ("movl %1,%%gs:%P0": "+m" (reporting_keystroke): "ri" (0)); (CFACreationUtils.addEdgeToCFA, INFO)

line 5608: Dead code detected: __asm__ ("movq %1,%%gs:%P0": "+m" (reporting_keystroke): "re" (0)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (1UL) {
  case 1UL:
  __asm__ ("movb %1,%%gs:%P0": "+m" (reporting_keystroke): "qi" (0));
  goto ldv_24774;
  case 2UL:
  __asm__ ("movw %1,%%gs:%P0": "+m" (reporting_keystroke): "ri" (0));
  goto ldv_24774;
  case 4UL:
  __asm__ ("movl %1,%%gs:%P0": "+m" (reporting_keystroke): "ri" (0));
  goto ldv_24774;
  case 8UL:
  __asm__ ("movq %1,%%gs:%P0": "+m" (reporting_keystroke): "re" (0));
  goto ldv_24774;
  default:
  __bad_percpu_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

lines 5616-5631: Dead code detected: switch (1UL) (CFACreationUtils.addEdgeToCFA, INFO)

line 5621: Dead code detected: __asm__ ("movw %1,%%gs:%P0": "+m" (reporting_keystroke): "ri" (0)); (CFACreationUtils.addEdgeToCFA, INFO)

line 5624: Dead code detected: __asm__ ("movl %1,%%gs:%P0": "+m" (reporting_keystroke): "ri" (0)); (CFACreationUtils.addEdgeToCFA, INFO)

line 5627: Dead code detected: __asm__ ("movq %1,%%gs:%P0": "+m" (reporting_keystroke): "re" (0)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (1UL) {
  case 1UL:
  __asm__ ("movb %1,%%gs:%P0": "+m" (reporting_keystroke): "qi" (0));
  goto ldv_24783;
  case 2UL:
  __asm__ ("movw %1,%%gs:%P0": "+m" (reporting_keystroke): "ri" (0));
  goto ldv_24783;
  case 4UL:
  __asm__ ("movl %1,%%gs:%P0": "+m" (reporting_keystroke): "ri" (0));
  goto ldv_24783;
  case 8UL:
  __asm__ ("movq %1,%%gs:%P0": "+m" (reporting_keystroke): "re" (0));
  goto ldv_24783;
  default:
  __bad_percpu_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (1UL) {
  case 1UL: ;
  switch (1UL) {
  case 1UL:
  __asm__ ("movb %1,%%gs:%P0": "+m" (reporting_keystroke): "qi" (0));
  goto ldv_24755;
  case 2UL:
  __asm__ ("movw %1,%%gs:%P0": "+m" (reporting_keystroke): "ri" (0));
  goto ldv_24755;
  case 4UL:
  __asm__ ("movl %1,%%gs:%P0": "+m" (reporting_keystroke): "ri" (0));
  goto ldv_24755;
  case 8UL:
  __asm__ ("movq %1,%%gs:%P0": "+m" (reporting_keystroke): "re" (0));
  goto ldv_24755;
  default:
  __bad_percpu_size();
  }
  ldv_24755: ;
  goto ldv_24760;
  case 2UL: ;
  switch (1UL) {
  case 1UL:
  __asm__ ("movb %1,%%gs:%P0": "+m" (reporting_keystroke): "qi" (0));
  goto ldv_24765;
  case 2UL:
  __asm__ ("movw %1,%%gs:%P0": "+m" (reporting_keystroke): "ri" (0));
  goto ldv_24765;
  case 4UL:
  __asm__ ("movl %1,%%gs:%P0": "+m" (reporting_keystroke): "ri" (0));
  goto ldv_24765;
  case 8UL:
  __asm__ ("movq %1,%%gs:%P0": "+m" (reporting_keystroke): "re" (0));
  goto ldv_24765;
  default:
  __bad_percpu_size();
  }
  ldv_24765: ;
  goto ldv_24760;
  case 4UL: ;
  switch (1UL) {
  case 1UL:
  __asm__ ("movb %1,%%gs:%P0": "+m" (reporting_keystroke): "qi" (0));
  goto ldv_24774;
  case 2UL:
  __asm__ ("movw %1,%%gs:%P0": "+m" (reporting_keystroke): "ri" (0));
  goto ldv_24774;
  case 4UL:
  __asm__ ("movl %1,%%gs:%P0": "+m" (reporting_keystroke): "ri" (0));
  goto ldv_24774;
  case 8UL:
  __asm__ ("movq %1,%%gs:%P0": "+m" (reporting_keystroke): "re" (0));
  goto ldv_24774;
  default:
  __bad_percpu_size();
  }
  ldv_24774: ;
  goto ldv_24760;
  case 8UL: ;
  switch (1UL) {
  case 1UL:
  __asm__ ("movb %1,%%gs:%P0": "+m" (reporting_keystroke): "qi" (0));
  goto ldv_24783;
  case 2UL:
  __asm__ ("movw %1,%%gs:%P0": "+m" (reporting_keystroke): "ri" (0));
  goto ldv_24783;
  case 4UL:
  __asm__ ("movl %1,%%gs:%P0": "+m" (reporting_keystroke): "ri" (0));
  goto ldv_24783;
  case 8UL:
  __asm__ ("movq %1,%%gs:%P0": "+m" (reporting_keystroke): "re" (0));
  goto ldv_24783;
  default:
  __bad_percpu_size();
  }
  ldv_24783: ;
  goto ldv_24760;
  default:
  __bad_size_call_parameter();
  goto ldv_24760;
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 5672: Dead code detected: __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "m" (reporting_keystroke)); (CFACreationUtils.addEdgeToCFA, INFO)

line 5675: Dead code detected: __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "m" (reporting_keystroke)); (CFACreationUtils.addEdgeToCFA, INFO)

line 5678: Dead code detected: __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret__): "m" (reporting_keystroke)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (1UL) {
  case 1UL:
  __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "m" (reporting_keystroke));
  goto ldv_24807;
  case 2UL:
  __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "m" (reporting_keystroke));
  goto ldv_24807;
  case 4UL:
  __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "m" (reporting_keystroke));
  goto ldv_24807;
  case 8UL:
  __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret__): "m" (reporting_keystroke));
  goto ldv_24807;
  default:
  __bad_percpu_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

lines 5687-5702: Dead code detected: switch (1UL) (CFACreationUtils.addEdgeToCFA, INFO)

line 5692: Dead code detected: __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret_____0): "m" (reporting_keystroke)); (CFACreationUtils.addEdgeToCFA, INFO)

line 5695: Dead code detected: __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret_____0): "m" (reporting_keystroke)); (CFACreationUtils.addEdgeToCFA, INFO)

line 5698: Dead code detected: __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret_____0): "m" (reporting_keystroke)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (1UL) {
  case 1UL:
  __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret_____0): "m" (reporting_keystroke));
  goto ldv_24817;
  case 2UL:
  __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret_____0): "m" (reporting_keystroke));
  goto ldv_24817;
  case 4UL:
  __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret_____0): "m" (reporting_keystroke));
  goto ldv_24817;
  case 8UL:
  __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret_____0): "m" (reporting_keystroke));
  goto ldv_24817;
  default:
  __bad_percpu_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

lines 5707-5722: Dead code detected: switch (1UL) (CFACreationUtils.addEdgeToCFA, INFO)

line 5712: Dead code detected: __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret_____1): "m" (reporting_keystroke)); (CFACreationUtils.addEdgeToCFA, INFO)

line 5715: Dead code detected: __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret_____1): "m" (reporting_keystroke)); (CFACreationUtils.addEdgeToCFA, INFO)

line 5718: Dead code detected: __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret_____1): "m" (reporting_keystroke)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (1UL) {
  case 1UL:
  __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret_____1): "m" (reporting_keystroke));
  goto ldv_24826;
  case 2UL:
  __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret_____1): "m" (reporting_keystroke));
  goto ldv_24826;
  case 4UL:
  __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret_____1): "m" (reporting_keystroke));
  goto ldv_24826;
  case 8UL:
  __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret_____1): "m" (reporting_keystroke));
  goto ldv_24826;
  default:
  __bad_percpu_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

lines 5727-5742: Dead code detected: switch (1UL) (CFACreationUtils.addEdgeToCFA, INFO)

line 5732: Dead code detected: __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret_____2): "m" (reporting_keystroke)); (CFACreationUtils.addEdgeToCFA, INFO)

line 5735: Dead code detected: __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret_____2): "m" (reporting_keystroke)); (CFACreationUtils.addEdgeToCFA, INFO)

line 5738: Dead code detected: __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret_____2): "m" (reporting_keystroke)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (1UL) {
  case 1UL:
  __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret_____2): "m" (reporting_keystroke));
  goto ldv_24835;
  case 2UL:
  __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret_____2): "m" (reporting_keystroke));
  goto ldv_24835;
  case 4UL:
  __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret_____2): "m" (reporting_keystroke));
  goto ldv_24835;
  case 8UL:
  __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret_____2): "m" (reporting_keystroke));
  goto ldv_24835;
  default:
  __bad_percpu_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (1UL) {
  case 1UL: ;
  switch (1UL) {
  case 1UL:
  __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "m" (reporting_keystroke));
  goto ldv_24807;
  case 2UL:
  __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "m" (reporting_keystroke));
  goto ldv_24807;
  case 4UL:
  __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "m" (reporting_keystroke));
  goto ldv_24807;
  case 8UL:
  __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret__): "m" (reporting_keystroke));
  goto ldv_24807;
  default:
  __bad_percpu_size();
  }
  ldv_24807:
  pscr_ret__ = pfo_ret__;
  goto ldv_24813;
  case 2UL: ;
  switch (1UL) {
  case 1UL:
  __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret_____0): "m" (reporting_keystroke));
  goto ldv_24817;
  case 2UL:
  __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret_____0): "m" (reporting_keystroke));
  goto ldv_24817;
  case 4UL:
  __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret_____0): "m" (reporting_keystroke));
  goto ldv_24817;
  case 8UL:
  __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret_____0): "m" (reporting_keystroke));
  goto ldv_24817;
  default:
  __bad_percpu_size();
  }
  ldv_24817:
  pscr_ret__ = pfo_ret_____0;
  goto ldv_24813;
  case 4UL: ;
  switch (1UL) {
  case 1UL:
  __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret_____1): "m" (reporting_keystroke));
  goto ldv_24826;
  case 2UL:
  __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret_____1): "m" (reporting_keystroke));
  goto ldv_24826;
  case 4UL:
  __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret_____1): "m" (reporting_keystroke));
  goto ldv_24826;
  case 8UL:
  __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret_____1): "m" (reporting_keystroke));
  goto ldv_24826;
  default:
  __bad_percpu_size();
  }
  ldv_24826:
  pscr_ret__ = pfo_ret_____1;
  goto ldv_24813;
  case 8UL: ;
  switch (1UL) {
  case 1UL:
  __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret_____2): "m" (reporting_keystroke));
  goto ldv_24835;
  case 2UL:
  __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret_____2): "m" (reporting_keystroke));
  goto ldv_24835;
  case 4UL:
  __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret_____2): "m" (reporting_keystroke));
  goto ldv_24835;
  case 8UL:
  __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret_____2): "m" (reporting_keystroke));
  goto ldv_24835;
  default:
  __bad_percpu_size();
  }
  ldv_24835:
  pscr_ret__ = pfo_ret_____2;
  goto ldv_24813;
  default:
  __bad_size_call_parameter();
  goto ldv_24813;
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 5795: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 9269: Dereferencing of non-pointer type spkup_hand  in expression *(spkup_handler[(int )value]) (ASTConverter.convert, WARNING)

line 9936: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 10446: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 11896: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 11925: Dead code detected: __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

line 11928: Dead code detected: __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

line 11931: Dead code detected: __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (8UL) {
  case 1UL:
  __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& current_task));
  goto ldv_2861;
  case 2UL:
  __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_2861;
  case 4UL:
  __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_2861;
  case 8UL:
  __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_2861;
  default:
  __bad_percpu_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 11958: Dead code detected: __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& kernel_stack)); (CFACreationUtils.addEdgeToCFA, INFO)

line 11961: Dead code detected: __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack)); (CFACreationUtils.addEdgeToCFA, INFO)

line 11964: Dead code detected: __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (8UL) {
  case 1UL:
  __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& kernel_stack));
  goto ldv_6167;
  case 2UL:
  __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack));
  goto ldv_6167;
  case 4UL:
  __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack));
  goto ldv_6167;
  case 8UL:
  __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack));
  goto ldv_6167;
  default:
  __bad_percpu_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 12198: Dead code detected: tmp___0 = get_current(); (CFACreationUtils.addEdgeToCFA, INFO)

line 12203: Dead code detected: tmp___1 = get_current(); (CFACreationUtils.addEdgeToCFA, INFO)

line 12208: Dead code detected: tmp___2 = get_current(); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (8UL) {
  case 1UL:
  tmp___0 = get_current();
  __asm__ volatile ("xchgb %b0, %1\n": "+q" (__ret), "+m" (tmp___0->state): : "memory",
                       "cc");
  goto ldv_28331;
  case 2UL:
  tmp___1 = get_current();
  __asm__ volatile ("xchgw %w0, %1\n": "+r" (__ret), "+m" (tmp___1->state): : "memory",
                       "cc");
  goto ldv_28331;
  case 4UL:
  tmp___2 = get_current();
  __asm__ volatile ("xchgl %0, %1\n": "+r" (__ret), "+m" (tmp___2->state): : "memory",
                       "cc");
  goto ldv_28331;
  case 8UL:
  tmp___3 = get_current();
  __asm__ volatile ("xchgq %q0, %1\n": "+r" (__ret), "+m" (tmp___3->state): : "memory",
                       "cc");
  goto ldv_28331;
  default:
  __xchg_wrong_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 12315: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 12479: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 12749: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 12829: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 12929: Dead code detected: tmp___3 = get_current(); (CFACreationUtils.addEdgeToCFA, INFO)

line 12934: Dead code detected: tmp___4 = get_current(); (CFACreationUtils.addEdgeToCFA, INFO)

line 12939: Dead code detected: tmp___5 = get_current(); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (8UL) {
  case 1UL:
  tmp___3 = get_current();
  __asm__ volatile ("xchgb %b0, %1\n": "+q" (__ret), "+m" (tmp___3->state): : "memory",
                       "cc");
  goto ldv_28258;
  case 2UL:
  tmp___4 = get_current();
  __asm__ volatile ("xchgw %w0, %1\n": "+r" (__ret), "+m" (tmp___4->state): : "memory",
                       "cc");
  goto ldv_28258;
  case 4UL:
  tmp___5 = get_current();
  __asm__ volatile ("xchgl %0, %1\n": "+r" (__ret), "+m" (tmp___5->state): : "memory",
                       "cc");
  goto ldv_28258;
  case 8UL:
  tmp___6 = get_current();
  __asm__ volatile ("xchgq %q0, %1\n": "+r" (__ret), "+m" (tmp___6->state): : "memory",
                       "cc");
  goto ldv_28258;
  default:
  __xchg_wrong_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 12989: Dead code detected: tmp___13 = get_current(); (CFACreationUtils.addEdgeToCFA, INFO)

line 12994: Dead code detected: tmp___14 = get_current(); (CFACreationUtils.addEdgeToCFA, INFO)

line 12999: Dead code detected: tmp___15 = get_current(); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (8UL) {
  case 1UL:
  tmp___13 = get_current();
  __asm__ volatile ("xchgb %b0, %1\n": "+q" (__ret___0), "+m" (tmp___13->state): : "memory",
                       "cc");
  goto ldv_28269;
  case 2UL:
  tmp___14 = get_current();
  __asm__ volatile ("xchgw %w0, %1\n": "+r" (__ret___0), "+m" (tmp___14->state): : "memory",
                       "cc");
  goto ldv_28269;
  case 4UL:
  tmp___15 = get_current();
  __asm__ volatile ("xchgl %0, %1\n": "+r" (__ret___0), "+m" (tmp___15->state): : "memory",
                       "cc");
  goto ldv_28269;
  case 8UL:
  tmp___16 = get_current();
  __asm__ volatile ("xchgq %q0, %1\n": "+r" (__ret___0), "+m" (tmp___16->state): : "memory",
                       "cc");
  goto ldv_28269;
  default:
  __xchg_wrong_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 13694: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 13971: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 14921: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 13304: Function pointer *(synth->get_index) with type unsigned char (*)() is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 13253: Function pointer *(synth->get_index) with type unsigned char (*)() is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 12334: Function pointer *(pv_cpu_ops.io_delay) with type void (*)() is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9461: Function pointer *special_handler with type int (*)(struct vc_data *, u_char , u_char , u_short ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 12238-12239: Function pointer *(tty___0->ldisc->ops->receive_buf) with type void (*)(struct tty_struct *, const unsigned char *, char *, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 13899: Function pointer *(synth->catch_up) with type void (*)(struct spk_synth *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 12912: Function pointer *(synth___0->flush) with type void (*)(struct spk_synth *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 13509: Function pointer *(synth->release) with type void (*)() is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_handler_precall to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 14463: Ignoring parameters passed as varargs to function synth_printf: synth_printf("%s", cp) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

line 14442: Ignoring function call through function pointer *(synth->synth_adjust): tmp___0 = (*(synth->synth_adjust))(var); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function msecs_to_jiffies to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __builtin_va_start to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Cannot get declaration of function __builtin_va_start, ignoring calls to it. (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function vsnprintf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 13218: Return type of function __builtin_va_end is void, but result is used as type int: __builtin_va_end((__va_list_tag *)(&args)); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function __builtin_va_end to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mod_timer to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function stop_tty to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_register_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_free_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function trace_hardirqs_off to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_trylock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function trace_hardirqs_on to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function unregister_keyboard_notifier to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function unregister_vt_notifier to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function misc_deregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function del_timer to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function kthread_stop to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sysfs_remove_group to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 13509: Ignoring function call through function pointer *(synth->release): (*(synth->release))(); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function kobject_put to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_unregister_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            20753 (17% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  15807 (76%)
  Because of loop head:            4877 (24%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         69 (0%)
  Times precision was empty:       11824 (57%)
  Times precision was {false}:     146 (1%)
  Times result was cached:         8160 (39%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      623 (3%)
  Times result was 'false':        798 (4%)
Number of strengthen sat checks:   0
Number of coverage checks:         16222
  BDD entailment checks:           5534
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       176
Number of predicates discovered:          8
Number of abstraction locations:          83
Max number of predicates per location:    6
Avg number of predicates per location:    4
Total predicates per abstraction:         36393
Max number of predicates per abstraction: 6
Avg number of predicates per abstraction: 47.33
Number of irrelevant predicates:          13970 (38%)
Number of preds handled by boolean abs:   1643 (5%)
  Total number of models for allsat:      623
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.00

Time for post operator:                  3.380s
  Time for path formula creation:        3.318s
Time for strengthen operator:            0.084s
Time for prec operator:                  6.964s
  Time for abstraction:                  6.590s (Max:     0.324s, Count: 20753)
    Boolean abstraction:                 3.166s
    Solving time:                        3.646s (Max:     0.237s)
    Model enumeration time:              0.101s
    Time for BDD construction:           0.049s (Max:     0.008s)
Time for merge operator:                 0.380s
Time for coverage check:                 0.035s
  Time for BDD entailment checks:        0.033s
Total time for SMT solver (w/o itp):     3.747s

Number of path formula cache hits:   135418 (94%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     2.221s

Total number of created targets for pointer analysis: 14921
   Number of created targets for uf: *(void)* is 681
   Number of created targets for uf: *unsigned_short_int is 87
   Number of created targets for uf: *signed_int is 429
   Number of created targets for uf: *(char)* is 48
   Number of created targets for uf: *unsigned_char is 3147
   Number of created targets for uf: *(struct_list_head)* is 3
   Number of created targets for uf: *(unsigned_char)* is 20
   Number of created targets for uf: *(struct_st_var_header)* is 41
   Number of created targets for uf: *signed_short_int is 6
   Number of created targets for uf: *char is 17
   Number of created targets for uf: *unsigned_long_int is 40
   Number of created targets for uf: *(struct_st_spk_t)* is 141


Number of BDD nodes:                               262
Size of BDD node table:                            464047
Size of BDD cache:                                 46411
Size of BDD node cleanup queue:                        1381 (count: 21926, min: 0, max: 249, avg: 0.06)
Time for BDD node cleanup:                             0.001s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.289s
Automaton transfers with branching:                0
Automaton transfer successors:                       119790 (count: 119790, min: 1, max: 1, avg: 1.00) [1 x 119790]

CPA algorithm statistics
------------------------
Number of iterations:            75527
Max size of waitlist:            27
Average size of waitlist:        12
Number of computed successors:   86724
Max successors for one state:    2
Number of times merged:          5344
Number of times stopped:         9757
Number of times breaked:         69

Total time for CPA algorithm:        13.789s (Max:     1.473s)
  Time for choose from waitlist:      0.107s
  Time for precision adjustment:      7.469s
  Time for transfer relation:         4.897s
  Time for merge operator:            0.548s
  Time for stop operator:             0.193s
  Time for adding to reached set:     0.150s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   69
Avg. length of target path (in blocks):                4316 (count: 69, min: 25, max: 81, avg: 62.55)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  11.586s
  Counterexample analysis:                            11.302s (Max:     0.320s, Calls: 69)
    Refinement sat check:                             10.276s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.008s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.053s
  Precision update:                                    0.032s
  ARG update:                                          0.152s

Length of refined path (in blocks):                    4183 (count: 69, min: 20, max: 80, avg: 60.62)
Number of affected states:                             2750 (count: 69, min: 6, max: 73, avg: 39.86)
Length (states) of path with itp 'true':               1364 (count: 69, min: 0, max: 56, avg: 19.77)
Length (states) of path with itp non-trivial itp:      2750 (count: 69, min: 6, max: 73, avg: 39.86)
Length (states) of path with itp 'false':                69 (count: 69, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 69, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:            2681 (count: 69, min: 5, max: 72, avg: 38.86)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                69
Number of successful refinements:     69
Number of failed refinements:         0
Max. size of reached set before ref.: 2248
Max. size of reached set after ref.:  2093
Avg. size of reached set before ref.: 1837.96
Avg. size of reached set after ref.:  754.33

Total time for CEGAR algorithm:      25.593s
Time for refinements:                11.767s
Average time for refinement:          0.170s
Max time for refinement:              0.360s

Code Coverage
-----------------------------
  Function coverage:      0.122
  Visited lines:          1418
  Total lines:            6398
  Line coverage:          0.222
  Visited conditions:     224
  Total conditions:       2080
  Condition coverage:     0.108

CPAchecker general statistics
-----------------------------
Number of program locations:     9513
Number of CFA edges:             11030
Number of relevant variables:    1705
Number of functions:             345
Number of loops:                 126
Size of reached set:             1399
  Number of reached locations:   633 (7%)
    Avg states per location:     2
    Max states per location:     13 (at node N9216)
  Number of reached functions:   42 (12%)
  Number of partitions:          1385
    Avg size of partitions:      1
    Max size of partitions:      3 (with key [N5097 (before line 9881), Function main called from node N5058, stack depth 1 [3eb0fd88], stack [main]])
  Number of target states:       0
  Size of final wait list        24

Time for analysis setup:          4.765s
  Time for loading CPAs:          0.660s
  Time for loading parser:        0.410s
  Time for CFA construction:      3.595s
    Time for parsing file(s):     0.761s
    Time for AST to CFA:          1.361s
    Time for CFA sanity check:    0.318s
    Time for post-processing:     1.030s
      Time for var class.:        0.518s
Time for Analysis:               25.593s
CPU time for analysis:           25.600s
Total time for CPAchecker:       30.366s
Total CPU time for CPAchecker:   30.360s
Time for statistics:              0.087s

Time for Garbage Collector:       0.313s (in 30 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                121MB (   115 MiB) max;     78MB (    75 MiB) avg;    128MB (   122 MiB) peak
Used non-heap memory:             41MB (    39 MiB) max;     37MB (    35 MiB) avg;     41MB (    39 MiB) peak
Allocated heap memory:           255MB (   243 MiB) max;    255MB (   243 MiB) avg
Allocated non-heap memory:        43MB (    41 MiB) max;     39MB (    37 MiB) avg
Total process virtual memory:  12079MB ( 11520 MiB) max;  12070MB ( 11511 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
