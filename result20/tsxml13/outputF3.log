scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 9600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/linux-3.8-rc1-32_7a-drivers--hwmon--w83793.ko-ldv_main0_true-unreach-call.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 9600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_q6umfs97/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker 1.6.1-svn 6608050+ (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

lines 2972-2973: Dead code detected: __asm__ volatile (".pushsection .smp_locks,\"a\"\n.balign 4\n.long 671f - .\n.popsection\n671:\n\tlock; xaddb %b0, %1\n": "+q" (__ret),
                       "+m" (v->counter): : "memory", "cc"); (CFACreationUtils.addEdgeToCFA, INFO)

lines 2976-2977: Dead code detected: __asm__ volatile (".pushsection .smp_locks,\"a\"\n.balign 4\n.long 671f - .\n.popsection\n671:\n\tlock; xaddw %w0, %1\n": "+r" (__ret),
                       "+m" (v->counter): : "memory", "cc"); (CFACreationUtils.addEdgeToCFA, INFO)

lines 2984-2985: Dead code detected: __asm__ volatile (".pushsection .smp_locks,\"a\"\n.balign 4\n.long 671f - .\n.popsection\n671:\n\tlock; xaddq %q0, %1\n": "+r" (__ret),
                       "+m" (v->counter): : "memory", "cc"); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (4UL) {
  case 1UL:
  __asm__ volatile (".pushsection .smp_locks,\"a\"\n.balign 4\n.long 671f - .\n.popsection\n671:\n\tlock; xaddb %b0, %1\n": "+q" (__ret),
                       "+m" (v->counter): : "memory", "cc");
  goto ldv_5527;
  case 2UL:
  __asm__ volatile (".pushsection .smp_locks,\"a\"\n.balign 4\n.long 671f - .\n.popsection\n671:\n\tlock; xaddw %w0, %1\n": "+r" (__ret),
                       "+m" (v->counter): : "memory", "cc");
  goto ldv_5527;
  case 4UL:
  __asm__ volatile (".pushsection .smp_locks,\"a\"\n.balign 4\n.long 671f - .\n.popsection\n671:\n\tlock; xaddl %0, %1\n": "+r" (__ret),
                       "+m" (v->counter): : "memory", "cc");
  goto ldv_5527;
  case 8UL:
  __asm__ volatile (".pushsection .smp_locks,\"a\"\n.balign 4\n.long 671f - .\n.popsection\n671:\n\tlock; xaddq %q0, %1\n": "+r" (__ret),
                       "+m" (v->counter): : "memory", "cc");
  goto ldv_5527;
  default:
  __xadd_wrong_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 5664: Dead code detected: __asm__ volatile ("call __put_user_1": "=a" (__ret_pu): "0" (__pu_val), "c" ((int *)arg): "ebx"); (CFACreationUtils.addEdgeToCFA, INFO)

line 5667: Dead code detected: __asm__ volatile ("call __put_user_2": "=a" (__ret_pu): "0" (__pu_val), "c" ((int *)arg): "ebx"); (CFACreationUtils.addEdgeToCFA, INFO)

line 5673: Dead code detected: __asm__ volatile ("call __put_user_8": "=a" (__ret_pu): "0" (__pu_val), "c" ((int *)arg): "ebx"); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (4UL) {
  case 1UL:
  __asm__ volatile ("call __put_user_1": "=a" (__ret_pu): "0" (__pu_val), "c" ((int *)arg): "ebx");
  goto ldv_24080;
  case 2UL:
  __asm__ volatile ("call __put_user_2": "=a" (__ret_pu): "0" (__pu_val), "c" ((int *)arg): "ebx");
  goto ldv_24080;
  case 4UL:
  __asm__ volatile ("call __put_user_4": "=a" (__ret_pu): "0" (__pu_val), "c" ((int *)arg): "ebx");
  goto ldv_24080;
  case 8UL:
  __asm__ volatile ("call __put_user_8": "=a" (__ret_pu): "0" (__pu_val), "c" ((int *)arg): "ebx");
  goto ldv_24080;
  default:
  __asm__ volatile ("call __put_user_X": "=a" (__ret_pu): "0" (__pu_val), "c" ((int *)arg): "ebx");
  goto ldv_24080;
  } (CFACreationUtils.addEdgeToCFA, INFO)

lines 5687-5688: Dead code detected: __asm__ volatile ("call __put_user_1": "=a" (__ret_pu___0): "0" (__pu_val___0),
                       "c" ((int *)arg): "ebx"); (CFACreationUtils.addEdgeToCFA, INFO)

lines 5691-5692: Dead code detected: __asm__ volatile ("call __put_user_2": "=a" (__ret_pu___0): "0" (__pu_val___0),
                       "c" ((int *)arg): "ebx"); (CFACreationUtils.addEdgeToCFA, INFO)

lines 5699-5700: Dead code detected: __asm__ volatile ("call __put_user_8": "=a" (__ret_pu___0): "0" (__pu_val___0),
                       "c" ((int *)arg): "ebx"); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (4UL) {
  case 1UL:
  __asm__ volatile ("call __put_user_1": "=a" (__ret_pu___0): "0" (__pu_val___0),
                       "c" ((int *)arg): "ebx");
  goto ldv_24090;
  case 2UL:
  __asm__ volatile ("call __put_user_2": "=a" (__ret_pu___0): "0" (__pu_val___0),
                       "c" ((int *)arg): "ebx");
  goto ldv_24090;
  case 4UL:
  __asm__ volatile ("call __put_user_4": "=a" (__ret_pu___0): "0" (__pu_val___0),
                       "c" ((int *)arg): "ebx");
  goto ldv_24090;
  case 8UL:
  __asm__ volatile ("call __put_user_8": "=a" (__ret_pu___0): "0" (__pu_val___0),
                       "c" ((int *)arg): "ebx");
  goto ldv_24090;
  default:
  __asm__ volatile ("call __put_user_X": "=a" (__ret_pu___0): "0" (__pu_val___0),
                       "c" ((int *)arg): "ebx");
  goto ldv_24090;
  } (CFACreationUtils.addEdgeToCFA, INFO)

lines 5719-5720: Dead code detected: __asm__ volatile ("call __put_user_1": "=a" (__ret_pu___1): "0" (__pu_val___1),
                       "c" ((int *)arg): "ebx"); (CFACreationUtils.addEdgeToCFA, INFO)

lines 5723-5724: Dead code detected: __asm__ volatile ("call __put_user_2": "=a" (__ret_pu___1): "0" (__pu_val___1),
                       "c" ((int *)arg): "ebx"); (CFACreationUtils.addEdgeToCFA, INFO)

lines 5731-5732: Dead code detected: __asm__ volatile ("call __put_user_8": "=a" (__ret_pu___1): "0" (__pu_val___1),
                       "c" ((int *)arg): "ebx"); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (4UL) {
  case 1UL:
  __asm__ volatile ("call __put_user_1": "=a" (__ret_pu___1): "0" (__pu_val___1),
                       "c" ((int *)arg): "ebx");
  goto ldv_24101;
  case 2UL:
  __asm__ volatile ("call __put_user_2": "=a" (__ret_pu___1): "0" (__pu_val___1),
                       "c" ((int *)arg): "ebx");
  goto ldv_24101;
  case 4UL:
  __asm__ volatile ("call __put_user_4": "=a" (__ret_pu___1): "0" (__pu_val___1),
                       "c" ((int *)arg): "ebx");
  goto ldv_24101;
  case 8UL:
  __asm__ volatile ("call __put_user_8": "=a" (__ret_pu___1): "0" (__pu_val___1),
                       "c" ((int *)arg): "ebx");
  goto ldv_24101;
  default:
  __asm__ volatile ("call __put_user_X": "=a" (__ret_pu___1): "0" (__pu_val___1),
                       "c" ((int *)arg): "ebx");
  goto ldv_24101;
  } (CFACreationUtils.addEdgeToCFA, INFO)

lines 5759-5760: Dead code detected: __asm__ volatile ("call __put_user_1": "=a" (__ret_pu___2): "0" (__pu_val___2),
                         "c" ((int *)arg): "ebx"); (CFACreationUtils.addEdgeToCFA, INFO)

lines 5763-5764: Dead code detected: __asm__ volatile ("call __put_user_2": "=a" (__ret_pu___2): "0" (__pu_val___2),
                         "c" ((int *)arg): "ebx"); (CFACreationUtils.addEdgeToCFA, INFO)

lines 5771-5772: Dead code detected: __asm__ volatile ("call __put_user_8": "=a" (__ret_pu___2): "0" (__pu_val___2),
                         "c" ((int *)arg): "ebx"); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (4UL) {
    case 1UL:
    __asm__ volatile ("call __put_user_1": "=a" (__ret_pu___2): "0" (__pu_val___2),
                         "c" ((int *)arg): "ebx");
    goto ldv_24114;
    case 2UL:
    __asm__ volatile ("call __put_user_2": "=a" (__ret_pu___2): "0" (__pu_val___2),
                         "c" ((int *)arg): "ebx");
    goto ldv_24114;
    case 4UL:
    __asm__ volatile ("call __put_user_4": "=a" (__ret_pu___2): "0" (__pu_val___2),
                         "c" ((int *)arg): "ebx");
    goto ldv_24114;
    case 8UL:
    __asm__ volatile ("call __put_user_8": "=a" (__ret_pu___2): "0" (__pu_val___2),
                         "c" ((int *)arg): "ebx");
    goto ldv_24114;
    default:
    __asm__ volatile ("call __put_user_X": "=a" (__ret_pu___2): "0" (__pu_val___2),
                         "c" ((int *)arg): "ebx");
    goto ldv_24114;
    } (CFACreationUtils.addEdgeToCFA, INFO)

line 7157: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 7531: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 3200: Function pointer *(adap->algo->functionality) with type u32 (*)(struct i2c_adapter *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_handler_precall to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_crit to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function i2c_smbus_write_byte_data to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function might_fault to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function nonseekable_open to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 3200: Ignoring function call through function pointer *(adap->algo->functionality): tmp = (*(adap->algo->functionality))(adap); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function i2c_smbus_read_byte_data to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strlcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_pr_debug to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function misc_deregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_warn to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function unregister_reboot_notifier to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function hwmon_device_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_remove_file to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function i2c_unregister_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function list_del to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _copy_to_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value_probe to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __mutex_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function i2c_new_dummy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_create_file to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function hwmon_device_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function register_reboot_notifier to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snprintf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function misc_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __list_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _dev_info to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            297119 (20% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  267892 (90%)
  Because of loop head:            26704 (9%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         2523 (1%)
  Times precision was empty:       10908 (4%)
  Times precision was {false}:     1161 (0%)
  Times result was cached:         275560 (93%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      9490 (3%)
  Times result was 'false':        39501 (13%)
Number of strengthen sat checks:   0
Number of coverage checks:         152038
  BDD entailment checks:           57524
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       46
Number of predicates discovered:          14
Number of abstraction locations:          227
Max number of predicates per location:    9
Avg number of predicates per location:    6
Total predicates per abstraction:         1399796
Max number of predicates per abstraction: 9
Avg number of predicates per abstraction: 131.42
Number of irrelevant predicates:          167699 (12%)
Number of preds handled by boolean abs:   43372 (3%)
  Total number of models for allsat:      9532
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.00

Time for post operator:                 15.421s
  Time for path formula creation:       15.021s
Time for strengthen operator:            0.732s
Time for prec operator:                141.702s
  Time for abstraction:                139.615s (Max:     0.385s, Count: 297119)
    Boolean abstraction:                74.268s
    Solving time:                       83.546s (Max:     0.362s)
    Model enumeration time:              2.835s
    Time for BDD construction:           0.170s (Max:     0.008s)
Time for merge operator:                 9.674s
Time for coverage check:                 0.073s
  Time for BDD entailment checks:        0.061s
Total time for SMT solver (w/o itp):    86.381s

Number of path formula cache hits:   1541255 (89%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    12.426s

Total number of created targets for pointer analysis: 674724
   Number of created targets for uf: *unsigned_short_int is 6043
   Number of created targets for uf: *signed_int is 217
   Number of created targets for uf: *unsigned_char is 17633
   Number of created targets for uf: *(struct_list_head)* is 138
   Number of created targets for uf: *(struct_i2c_client)* is 163
   Number of created targets for uf: *char is 13
   Number of created targets for uf: *unsigned_int is 54
   Number of created targets for uf: *(struct_device)* is 54


Number of BDD nodes:                               911
Size of BDD node table:                            464047
Size of BDD cache:                                 46411
Size of BDD node cleanup queue:                       20367 (count: 132490, min: 0, max: 404, avg: 0.15)
Time for BDD node cleanup:                             0.018s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  1.291s
  Time for transition matches:                         0.777s
  Time for transition assertions:                      0.001s
  Time for transition actions:                         0.015s
Automaton transfers with branching:                0
Automaton transfer successors:                      1466437 (count: 1466437, min: 1, max: 1, avg: 1.00) [1 x 1466437]

CPA algorithm statistics
------------------------
Number of iterations:            1039951
Max size of waitlist:            22
Average size of waitlist:        9
Number of computed successors:   1166798
Max successors for one state:    2
Number of times merged:          47257
Number of times stopped:         83353
Number of times breaked:         2523

Total time for CPA algorithm:       183.385s (Max:     6.300s)
  Time for choose from waitlist:      0.273s
  Time for precision adjustment:    145.635s
  Time for transfer relation:        24.012s
  Time for merge operator:           10.075s
  Time for stop operator:             0.840s
  Time for adding to reached set:     0.969s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   2523
Avg. length of target path (in blocks):              110156 (count: 2523, min: 6, max: 176, avg: 43.66)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                 157.670s
  Counterexample analysis:                           155.188s (Max:     0.742s, Calls: 2523)
    Refinement sat check:                            136.500s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.036s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.197s
  Precision update:                                    0.879s
  ARG update:                                          0.946s

Length of refined path (in blocks):                  105719 (count: 2523, min: 5, max: 175, avg: 41.90)
Number of affected states:                            37694 (count: 2523, min: 3, max: 127, avg: 14.94)
Length (states) of path with itp 'true':              65502 (count: 2523, min: 0, max: 158, avg: 25.96)
Length (states) of path with itp non-trivial itp:     37694 (count: 2523, min: 3, max: 127, avg: 14.94)
Length (states) of path with itp 'false':              2523 (count: 2523, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:          10 (count: 2523, min: 0, max: 3, avg: 0.00)
Equal non-trivial interpolants along paths:           35161 (count: 2523, min: 2, max: 126, avg: 13.94)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                2523
Number of successful refinements:     2523
Number of failed refinements:         0
Max. size of reached set before ref.: 7982
Max. size of reached set after ref.:  7612
Avg. size of reached set before ref.: 1831.26
Avg. size of reached set after ref.:  1419.40

Total time for CEGAR algorithm:     345.346s
Time for refinements:               160.319s
Average time for refinement:          0.063s
Max time for refinement:              0.751s

Code Coverage
-----------------------------
  Function coverage:      0.424
  Visited lines:          1651
  Total lines:            2909
  Line coverage:          0.568
  Visited conditions:     345
  Total conditions:       674
  Condition coverage:     0.512

CPAchecker general statistics
-----------------------------
Number of program locations:     4113
Number of CFA edges:             4623
Number of relevant variables:    722
Number of functions:             172
Number of loops:                 40
Size of reached set:             4823
  Number of reached locations:   1108 (27%)
    Avg states per location:     4
    Max states per location:     64 (at node N155)
  Number of reached functions:   73 (42%)
  Number of partitions:          4819
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N2988 (before line 7104), Function main called from node N2870, stack depth 1 [c1e14f], stack [main]])
  Number of target states:       0

Time for analysis setup:          3.822s
  Time for loading CPAs:          0.616s
  Time for loading parser:        0.397s
  Time for CFA construction:      2.748s
    Time for parsing file(s):     0.653s
    Time for AST to CFA:          0.972s
    Time for CFA sanity check:    0.176s
    Time for post-processing:     0.770s
      Time for var class.:        0.433s
Time for Analysis:              345.347s
CPU time for analysis:          345.310s
Time for analyzing result:        0.002s
Total time for CPAchecker:      349.172s
Total CPU time for CPAchecker:  349.120s
Time for statistics:              0.106s

Time for Garbage Collector:       4.480s (in 570 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                250MB (   239 MiB) max;    113MB (   108 MiB) avg;    255MB (   243 MiB) peak
Used non-heap memory:             41MB (    39 MiB) max;     40MB (    38 MiB) avg;     42MB (    40 MiB) peak
Allocated heap memory:           255MB (   243 MiB) max;    255MB (   243 MiB) avg
Allocated non-heap memory:        44MB (    42 MiB) max;     43MB (    41 MiB) avg
Total process virtual memory:  12414MB ( 11839 MiB) max;  12287MB ( 11718 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
