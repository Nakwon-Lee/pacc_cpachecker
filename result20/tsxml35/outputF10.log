scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 9600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-32_7a-drivers--net--wireless--zd1211rw--zd1211rw.ko-ldv_main1_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 9600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_hqzjsnvu/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker 1.6.1-svn 6608050+ (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 9315: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 12653: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 13482: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 13859: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 14700: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 15277: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 15672: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 15754: Dead code detected: __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& kernel_stack)); (CFACreationUtils.addEdgeToCFA, INFO)

line 15757: Dead code detected: __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack)); (CFACreationUtils.addEdgeToCFA, INFO)

line 15760: Dead code detected: __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (8UL) {
  case 1UL:
  __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& kernel_stack));
  goto ldv_6199;
  case 2UL:
  __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack));
  goto ldv_6199;
  case 4UL:
  __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack));
  goto ldv_6199;
  case 8UL:
  __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack));
  goto ldv_6199;
  default:
  __bad_percpu_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 19379: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 15616: Function pointer *(rf->patch_6m_band_edge) with type int (*)(struct zd_rf *, u8 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 15496: Function pointer *(rf->set_channel) with type int (*)(struct zd_rf *, u8 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_handler_precall to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_printk to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function cancel_delayed_work_sync to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tasklet_kill to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_kill_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_free_coherent to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_free_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_kill_anchored_urbs to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function kfree_skb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_pr_debug to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dump_stack to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 15496: Ignoring function call through function pointer *(rf->set_channel): r = (*(rf->set_channel))(rf, (int)channel); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 15616: Ignoring function call through function pointer *(rf->patch_6m_band_edge): tmp = (*(rf->patch_6m_band_edge))(rf, (int)channel); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function scnprintf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function request_firmware to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function release_firmware to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_reset_configuration to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _dev_info to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_warn to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ieee80211_beacon_get_tim to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_control_msg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_alloc_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function cancel_work_sync to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_alloc_coherent to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_submit_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_anchor_empty to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_anchor_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_unanchor_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_wait_anchor_empty_timeout to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function msleep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 15545: Ignoring function call through function pointer *(rf->switch_radio_on): t = (*(rf->switch_radio_on))(rf); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function dev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ieee80211_wake_queues to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function regulatory_hint to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function skb_push to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function consume_skb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function skb_queue_tail to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function skb_unlink to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ieee80211_stop_queues to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mod_delayed_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function queue_delayed_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 15595: Ignoring function call through function pointer *(rf->switch_radio_off): t = (*(rf->switch_radio_off))(rf); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            1782187 (20% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  1654339 (93%)
  Because of loop head:            122210 (7%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         5638 (0%)
  Times precision was empty:       346432 (19%)
  Times precision was {false}:     2011 (0%)
  Times result was cached:         1419224 (80%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      14520 (1%)
  Times result was 'false':        29052 (2%)
Number of strengthen sat checks:   0
Number of coverage checks:         837961
  BDD entailment checks:           201147
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       43
Number of predicates discovered:          8
Number of abstraction locations:          667
Max number of predicates per location:    7
Avg number of predicates per location:    3
Total predicates per abstraction:         5928074
Max number of predicates per abstraction: 7
Avg number of predicates per abstraction: 358.60
Number of irrelevant predicates:          1133669 (19%)
Number of preds handled by boolean abs:   41676 (1%)
  Total number of models for allsat:      14508
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.00

Time for post operator:                 42.448s
  Time for path formula creation:       40.941s
Time for strengthen operator:            3.620s
Time for prec operator:                423.235s
  Time for abstraction:                411.163s (Max:     0.297s, Count: 1782187)
    Boolean abstraction:               150.732s
    Solving time:                      175.633s (Max:     0.251s)
    Model enumeration time:              5.453s
    Time for BDD construction:           0.199s (Max:     0.008s)
Time for merge operator:                 2.028s
Time for coverage check:                 0.140s
  Time for BDD entailment checks:        0.110s
Total time for SMT solver (w/o itp):   181.087s

Number of path formula cache hits:   10615817 (99%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    15.163s

Total number of created targets for pointer analysis: 671230
   Number of created targets for uf: *unsigned_short_int is 3569
   Number of created targets for uf: *(void)* is 4
   Number of created targets for uf: *signed_int is 121
   Number of created targets for uf: *unsigned_char is 117
   Number of created targets for uf: *unsigned_int is 1702
   Number of created targets for uf: *char is 39
   Number of created targets for uf: *unsigned_long_int is 21


Number of BDD nodes:                               364
Size of BDD node table:                            464047
Size of BDD cache:                                 46411
Size of BDD node cleanup queue:                       29376 (count: 645114, min: 0, max: 368, avg: 0.05)
Time for BDD node cleanup:                             0.057s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  6.133s
  Time for transition matches:                         3.473s
  Time for transition assertions:                      0.006s
  Time for transition actions:                         0.025s
Automaton transfers with branching:                0
Automaton transfer successors:                      8707461 (count: 8707461, min: 1, max: 1, avg: 1.00) [1 x 8707461]

CPA algorithm statistics
------------------------
Number of iterations:            5919083
Max size of waitlist:            562
Average size of waitlist:        100
Number of computed successors:   6514424
Max successors for one state:    2
Number of times merged:          318407
Number of times stopped:         504720
Number of times breaked:         5638

Total time for CPA algorithm:       586.979s (Max:     8.696s)
  Time for choose from waitlist:      1.249s
  Time for precision adjustment:    445.346s
  Time for transfer relation:       120.366s
  Time for merge operator:            4.168s
  Time for stop operator:             3.994s
  Time for adding to reached set:     4.982s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   5638
Avg. length of target path (in blocks):              405756 (count: 5638, min: 6, max: 400, avg: 71.97)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                 291.822s
  Counterexample analysis:                           280.212s (Max:     0.471s, Calls: 5638)
    Refinement sat check:                            225.721s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.120s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.662s
  Precision update:                                    3.604s
  ARG update:                                          6.141s

Length of refined path (in blocks):                  400095 (count: 5638, min: 5, max: 399, avg: 70.96)
Number of affected states:                           172759 (count: 5638, min: 0, max: 378, avg: 30.64)
Length (states) of path with itp 'true':             221698 (count: 5638, min: 1, max: 317, avg: 39.32)
Length (states) of path with itp non-trivial itp:    172759 (count: 5638, min: 0, max: 378, avg: 30.64)
Length (states) of path with itp 'false':              5638 (count: 5638, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 5638, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:          167123 (count: 5638, min: 0, max: 377, avg: 29.64)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                5638
Number of successful refinements:     5638
Number of failed refinements:         0
Max. size of reached set before ref.: 57702
Max. size of reached set after ref.:  39103
Avg. size of reached set before ref.: 3635.34
Avg. size of reached set after ref.:  2575.88

Total time for CEGAR algorithm:     895.217s
Time for refinements:               302.022s
Average time for refinement:          0.053s
Max time for refinement:              0.592s

Code Coverage
-----------------------------
  Function coverage:      0.311
  Visited lines:          2569
  Total lines:            8960
  Line coverage:          0.287
  Visited conditions:     356
  Total conditions:       1714
  Condition coverage:     0.208

CPAchecker general statistics
-----------------------------
Number of program locations:     11872
Number of CFA edges:             13466
Number of relevant variables:    1961
Number of functions:             479
Number of loops:                 56
Size of reached set:             7388
  Number of reached locations:   1511 (13%)
    Avg states per location:     4
    Max states per location:     303 (at node N10844)
  Number of reached functions:   149 (31%)
  Number of partitions:          7388
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0
  Size of final wait list        69

Time for analysis setup:          5.168s
  Time for loading CPAs:          0.657s
  Time for loading parser:        0.420s
  Time for CFA construction:      3.991s
    Time for parsing file(s):     0.800s
    Time for AST to CFA:          1.454s
    Time for CFA sanity check:    0.370s
    Time for post-processing:     1.228s
      Time for var class.:        0.719s
Time for Analysis:              895.218s
CPU time for analysis:          895.160s
Total time for CPAchecker:      900.387s
Total CPU time for CPAchecker:  900.320s
Time for statistics:              0.173s

Time for Garbage Collector:      31.797s (in 2773 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                297MB (   283 MiB) max;    154MB (   147 MiB) avg;    308MB (   294 MiB) peak
Used non-heap memory:             42MB (    40 MiB) max;     41MB (    39 MiB) avg;     42MB (    40 MiB) peak
Allocated heap memory:           309MB (   294 MiB) max;    260MB (   248 MiB) avg
Allocated non-heap memory:        45MB (    43 MiB) max;     44MB (    42 MiB) avg
Total process virtual memory:  12767MB ( 12175 MiB) max;  12473MB ( 11895 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
