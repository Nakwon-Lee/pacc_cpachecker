scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 9600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-32_7a-drivers--net--wireless--zd1211rw--zd1211rw.ko-ldv_main1_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 9600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_7d1eyhmm/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker 1.6.1-svn 6608050+ (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 9315: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 12653: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 13482: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 13859: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 14700: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 15277: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 15672: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 15754: Dead code detected: __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& kernel_stack)); (CFACreationUtils.addEdgeToCFA, INFO)

line 15757: Dead code detected: __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack)); (CFACreationUtils.addEdgeToCFA, INFO)

line 15760: Dead code detected: __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (8UL) {
  case 1UL:
  __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& kernel_stack));
  goto ldv_6199;
  case 2UL:
  __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack));
  goto ldv_6199;
  case 4UL:
  __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack));
  goto ldv_6199;
  case 8UL:
  __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack));
  goto ldv_6199;
  default:
  __bad_percpu_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 19379: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 15616: Function pointer *(rf->patch_6m_band_edge) with type int (*)(struct zd_rf *, u8 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 15496: Function pointer *(rf->set_channel) with type int (*)(struct zd_rf *, u8 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_handler_precall to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function skb_push to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_pr_debug to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dump_stack to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function consume_skb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_alloc_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function skb_queue_tail to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_anchor_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_submit_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_printk to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_unanchor_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function skb_unlink to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_free_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ieee80211_stop_queues to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_alloc_coherent to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_free_coherent to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function scnprintf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function request_firmware to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function release_firmware to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _dev_info to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_warn to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_control_msg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_reset_configuration to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_interrupt_msg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_bulk_msg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function msecs_to_jiffies to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function wait_for_completion_timeout to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_anchor_empty to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_wait_anchor_empty_timeout to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_kill_anchored_urbs to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            26146 (21% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  23288 (89%)
  Because of loop head:            2767 (11%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         91 (0%)
  Times precision was empty:       7381 (28%)
  Times precision was {false}:     641 (2%)
  Times result was cached:         17767 (68%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      357 (1%)
  Times result was 'false':        29 (0%)
Number of strengthen sat checks:   0
Number of coverage checks:         10274
  BDD entailment checks:           5048
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       43
Number of predicates discovered:          3
Number of abstraction locations:          184
Max number of predicates per location:    2
Avg number of predicates per location:    1
Total predicates per abstraction:         20124
Max number of predicates per abstraction: 2
Avg number of predicates per abstraction: 20.16
Number of irrelevant predicates:          10745 (53%)
Number of preds handled by boolean abs:   373 (2%)
  Total number of models for allsat:      357
  Max number of models for allsat:        1
  Avg number of models for allsat:        1.00

Time for post operator:                  6.797s
  Time for path formula creation:        6.713s
Time for strengthen operator:            0.096s
Time for prec operator:                  9.864s
  Time for abstraction:                  9.429s (Max:     0.196s, Count: 26146)
    Boolean abstraction:                 1.795s
    Solving time:                        5.922s (Max:     0.192s)
    Model enumeration time:              0.052s
    Time for BDD construction:           0.019s (Max:     0.006s)
Time for merge operator:                 0.122s
Time for coverage check:                 0.016s
  Time for BDD entailment checks:        0.014s
Total time for SMT solver (w/o itp):     5.974s

Number of path formula cache hits:   97177 (69%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     6.136s

Total number of created targets for pointer analysis: 117298
   Number of created targets for uf: *unsigned_short_int is 986
   Number of created targets for uf: *signed_int is 961
   Number of created targets for uf: *unsigned_char is 30
   Number of created targets for uf: *_Bool is 79
   Number of created targets for uf: *char is 37
   Number of created targets for uf: *unsigned_int is 14431


Number of BDD nodes:                               203
Size of BDD node table:                            464047
Size of BDD cache:                                 46411
Size of BDD node cleanup queue:                         726 (count: 17785, min: 0, max: 107, avg: 0.04)
Time for BDD node cleanup:                             0.004s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.266s
Automaton transfers with branching:                0
Automaton transfer successors:                       122577 (count: 122577, min: 1, max: 1, avg: 1.00) [1 x 122577]

CPA algorithm statistics
------------------------
Number of iterations:            80278
Max size of waitlist:            26
Average size of waitlist:        18
Number of computed successors:   87896
Max successors for one state:    2
Number of times merged:          2613
Number of times stopped:         7273
Number of times breaked:         91

Total time for CPA algorithm:        20.216s (Max:     1.412s)
  Time for choose from waitlist:      0.047s
  Time for precision adjustment:     10.515s
  Time for transfer relation:         8.639s
  Time for merge operator:            0.212s
  Time for stop operator:             0.180s
  Time for adding to reached set:     0.163s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   91
Avg. length of target path (in blocks):                5090 (count: 91, min: 11, max: 130, avg: 55.93)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   4.602s
  Counterexample analysis:                             4.220s (Max:     0.125s, Calls: 91)
    Refinement sat check:                              3.477s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.002s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.049s
  Precision update:                                    0.047s
  ARG update:                                          0.235s

Length of refined path (in blocks):                    4999 (count: 91, min: 10, max: 129, avg: 54.93)
Number of affected states:                             2953 (count: 91, min: 6, max: 77, avg: 32.45)
Length (states) of path with itp 'true':               1955 (count: 91, min: 1, max: 51, avg: 21.48)
Length (states) of path with itp non-trivial itp:      2953 (count: 91, min: 6, max: 77, avg: 32.45)
Length (states) of path with itp 'false':                91 (count: 91, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 91, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:            2862 (count: 91, min: 5, max: 76, avg: 31.45)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                91
Number of successful refinements:     91
Number of failed refinements:         0
Max. size of reached set before ref.: 3851
Max. size of reached set after ref.:  1053
Avg. size of reached set before ref.: 1405.01
Avg. size of reached set after ref.:  548.13

Total time for CEGAR algorithm:      25.062s
Time for refinements:                 4.798s
Average time for refinement:          0.052s
Max time for refinement:              0.140s

Code Coverage
-----------------------------
  Function coverage:      0.165
  Visited lines:          1902
  Total lines:            8960
  Line coverage:          0.212
  Visited conditions:     220
  Total conditions:       1714
  Condition coverage:     0.128

CPAchecker general statistics
-----------------------------
Number of program locations:     11872
Number of CFA edges:             13466
Number of relevant variables:    1961
Number of functions:             479
Number of loops:                 56
Size of reached set:             2618
  Number of reached locations:   837 (7%)
    Avg states per location:     3
    Max states per location:     47 (at node N10845)
  Number of reached functions:   79 (16%)
  Number of partitions:          2618
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0
  Size of final wait list        21

Time for analysis setup:          5.310s
  Time for loading CPAs:          0.677s
  Time for loading parser:        0.421s
  Time for CFA construction:      4.124s
    Time for parsing file(s):     0.798s
    Time for AST to CFA:          1.451s
    Time for CFA sanity check:    0.433s
    Time for post-processing:     1.340s
      Time for var class.:        0.723s
Time for Analysis:               25.062s
CPU time for analysis:           25.060s
Total time for CPAchecker:       30.373s
Total CPU time for CPAchecker:   30.350s
Time for statistics:              0.105s

Time for Garbage Collector:       0.616s (in 44 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                140MB (   133 MiB) max;     89MB (    84 MiB) avg;    144MB (   137 MiB) peak
Used non-heap memory:             42MB (    40 MiB) max;     37MB (    35 MiB) avg;     42MB (    40 MiB) peak
Allocated heap memory:           255MB (   243 MiB) max;    255MB (   243 MiB) avg
Allocated non-heap memory:        44MB (    42 MiB) max;     39MB (    37 MiB) avg
Total process virtual memory:  12144MB ( 11582 MiB) max;  12136MB ( 11573 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
