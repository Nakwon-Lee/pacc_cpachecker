scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 9600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-32_7a-drivers--net--wireless--zd1211rw--zd1211rw.ko-ldv_main1_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 9600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_88lc__k_/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker 1.6.1-svn 6608050+ (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 9315: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 12653: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 13482: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 13859: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 14700: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 15277: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 15672: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 15754: Dead code detected: __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& kernel_stack)); (CFACreationUtils.addEdgeToCFA, INFO)

line 15757: Dead code detected: __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack)); (CFACreationUtils.addEdgeToCFA, INFO)

line 15760: Dead code detected: __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (8UL) {
  case 1UL:
  __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& kernel_stack));
  goto ldv_6199;
  case 2UL:
  __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack));
  goto ldv_6199;
  case 4UL:
  __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack));
  goto ldv_6199;
  case 8UL:
  __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack));
  goto ldv_6199;
  default:
  __bad_percpu_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 19379: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 15616: Function pointer *(rf->patch_6m_band_edge) with type int (*)(struct zd_rf *, u8 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 15496: Function pointer *(rf->set_channel) with type int (*)(struct zd_rf *, u8 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_handler_precall to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_printk to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ieee80211_beacon_get_tim to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function skb_push to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function cancel_delayed_work_sync to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_anchor_empty to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_pr_debug to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dump_stack to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_alloc_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function scnprintf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function request_firmware to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function release_firmware to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_kill_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_free_coherent to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_free_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _dev_info to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_warn to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_reset_configuration to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_anchor_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_submit_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_unanchor_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_wait_anchor_empty_timeout to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_kill_anchored_urbs to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function consume_skb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_control_msg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            15392 (21% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  14551 (95%)
  Because of loop head:            749 (5%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         92 (1%)
  Times precision was empty:       7963 (52%)
  Times precision was {false}:     300 (2%)
  Times result was cached:         6562 (43%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      567 (4%)
  Times result was 'false':        376 (2%)
Number of strengthen sat checks:   0
Number of coverage checks:         4825
  BDD entailment checks:           1335
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       43
Number of predicates discovered:          5
Number of abstraction locations:          152
Max number of predicates per location:    3
Avg number of predicates per location:    1
Total predicates per abstraction:         10332
Max number of predicates per abstraction: 3
Avg number of predicates per abstraction: 11.92
Number of irrelevant predicates:          4083 (40%)
Number of preds handled by boolean abs:   664 (6%)
  Total number of models for allsat:      566
  Max number of models for allsat:        1
  Avg number of models for allsat:        1.00

Time for post operator:                  4.761s
  Time for path formula creation:        4.725s
Time for strengthen operator:            0.119s
Time for prec operator:                 12.101s
  Time for abstraction:                 11.847s (Max:     0.237s, Count: 15392)
    Boolean abstraction:                 5.265s
    Solving time:                        8.633s (Max:     0.224s)
    Model enumeration time:              0.153s
    Time for BDD construction:           0.029s (Max:     0.008s)
Time for merge operator:                 0.154s
Time for coverage check:                 0.025s
  Time for BDD entailment checks:        0.012s
Total time for SMT solver (w/o itp):     8.786s

Number of path formula cache hits:   66113 (76%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     4.473s

Total number of created targets for pointer analysis: 87851
   Number of created targets for uf: *unsigned_short_int is 341
   Number of created targets for uf: *signed_int is 1681
   Number of created targets for uf: *unsigned_char is 30
   Number of created targets for uf: *(struct_firmware)* is 2
   Number of created targets for uf: *unsigned_int is 2611
   Number of created targets for uf: *char is 37
   Number of created targets for uf: *unsigned_long_int is 281


Number of BDD nodes:                               206
Size of BDD node table:                            464047
Size of BDD cache:                                 46411
Size of BDD node cleanup queue:                        1125 (count: 14214, min: 0, max: 213, avg: 0.08)
Time for BDD node cleanup:                             0.015s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.187s
Automaton transfers with branching:                0
Automaton transfer successors:                        74916 (count: 74916, min: 1, max: 1, avg: 1.00) [1 x 74916]

CPA algorithm statistics
------------------------
Number of iterations:            46697
Max size of waitlist:            54
Average size of waitlist:        25
Number of computed successors:   51220
Max successors for one state:    2
Number of times merged:          1745
Number of times stopped:         2812
Number of times breaked:         92

Total time for CPA algorithm:        19.546s (Max:     1.781s)
  Time for choose from waitlist:      0.053s
  Time for precision adjustment:     12.562s
  Time for transfer relation:         6.115s
  Time for merge operator:            0.239s
  Time for stop operator:             0.102s
  Time for adding to reached set:     0.135s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   92
Avg. length of target path (in blocks):                2667 (count: 92, min: 11, max: 62, avg: 28.99)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   5.496s
  Counterexample analysis:                             5.180s (Max:     0.231s, Calls: 92)
    Refinement sat check:                              4.638s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.002s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.028s
  Precision update:                                    0.061s
  ARG update:                                          0.172s

Length of refined path (in blocks):                    2575 (count: 92, min: 10, max: 61, avg: 27.99)
Number of affected states:                             1708 (count: 92, min: 6, max: 48, avg: 18.57)
Length (states) of path with itp 'true':                775 (count: 92, min: 1, max: 34, avg: 8.42)
Length (states) of path with itp non-trivial itp:      1708 (count: 92, min: 6, max: 48, avg: 18.57)
Length (states) of path with itp 'false':                92 (count: 92, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 92, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:            1616 (count: 92, min: 5, max: 47, avg: 17.57)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                92
Number of successful refinements:     92
Number of failed refinements:         0
Max. size of reached set before ref.: 2475
Max. size of reached set after ref.:  2102
Avg. size of reached set before ref.: 1262.67
Avg. size of reached set after ref.:  750.88

Total time for CEGAR algorithm:      25.266s
Time for refinements:                 5.675s
Average time for refinement:          0.061s
Max time for refinement:              0.235s

Code Coverage
-----------------------------
  Function coverage:      0.171
  Visited lines:          1655
  Total lines:            8960
  Line coverage:          0.185
  Visited conditions:     128
  Total conditions:       1714
  Condition coverage:     0.075

CPAchecker general statistics
-----------------------------
Number of program locations:     11872
Number of CFA edges:             13466
Number of relevant variables:    1961
Number of functions:             479
Number of loops:                 56
Size of reached set:             947
  Number of reached locations:   595 (5%)
    Avg states per location:     1
    Max states per location:     33 (at node N10845)
  Number of reached functions:   82 (17%)
  Number of partitions:          946
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N4528 (before line 11674), Function fill_ctrlset called from node N4589, stack depth 3 [17e4c205], stack [main, zd_op_tx, fill_ctrlset]])
  Number of target states:       0
  Size of final wait list        22

Time for analysis setup:          5.097s
  Time for loading CPAs:          0.675s
  Time for loading parser:        0.415s
  Time for CFA construction:      3.914s
    Time for parsing file(s):     0.843s
    Time for AST to CFA:          1.392s
    Time for CFA sanity check:    0.393s
    Time for post-processing:     1.094s
      Time for var class.:        0.600s
Time for Analysis:               25.266s
CPU time for analysis:           25.260s
Total time for CPAchecker:       30.365s
Total CPU time for CPAchecker:   30.340s
Time for statistics:              0.078s

Time for Garbage Collector:       0.455s (in 35 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                131MB (   124 MiB) max;     83MB (    80 MiB) avg;    136MB (   129 MiB) peak
Used non-heap memory:             42MB (    40 MiB) max;     37MB (    35 MiB) avg;     43MB (    41 MiB) peak
Allocated heap memory:           255MB (   243 MiB) max;    255MB (   243 MiB) avg
Allocated non-heap memory:        44MB (    42 MiB) max;     39MB (    37 MiB) avg
Total process virtual memory:  12147MB ( 11584 MiB) max;  12137MB ( 11575 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
