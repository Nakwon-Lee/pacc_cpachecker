scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 9600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-32_7a-drivers--net--wireless--zd1211rw--zd1211rw.ko-ldv_main1_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 9600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run__ndnqtki/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker 1.6.1-svn 6608050+ (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 9315: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 12653: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 13482: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 13859: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 14700: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 15277: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 15672: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 15754: Dead code detected: __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& kernel_stack)); (CFACreationUtils.addEdgeToCFA, INFO)

line 15757: Dead code detected: __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack)); (CFACreationUtils.addEdgeToCFA, INFO)

line 15760: Dead code detected: __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (8UL) {
  case 1UL:
  __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& kernel_stack));
  goto ldv_6199;
  case 2UL:
  __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack));
  goto ldv_6199;
  case 4UL:
  __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack));
  goto ldv_6199;
  case 8UL:
  __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack));
  goto ldv_6199;
  default:
  __bad_percpu_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 19379: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 15616: Function pointer *(rf->patch_6m_band_edge) with type int (*)(struct zd_rf *, u8 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 15496: Function pointer *(rf->set_channel) with type int (*)(struct zd_rf *, u8 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_handler_precall to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_printk to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ieee80211_beacon_get_tim to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function skb_push to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_pr_debug to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dump_stack to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function cancel_delayed_work_sync to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function consume_skb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_alloc_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function skb_queue_tail to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_anchor_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_submit_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_unanchor_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function skb_unlink to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_free_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function scnprintf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function request_firmware to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function release_firmware to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _dev_info to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_warn to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_reset_configuration to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_anchor_empty to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_alloc_coherent to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_free_coherent to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_kill_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_control_msg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tasklet_kill to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_kill_anchored_urbs to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 15496: Ignoring function call through function pointer *(rf->set_channel): r = (*(rf->set_channel))(rf, (int)channel); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 15616: Ignoring function call through function pointer *(rf->patch_6m_band_edge): tmp = (*(rf->patch_6m_band_edge))(rf, (int)channel); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function cancel_work_sync to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ieee80211_stop_queues to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function kfree_skb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function get_seconds to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function flush_workqueue to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_wait_anchor_empty_timeout to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function msecs_to_jiffies to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function wait_for_completion_timeout to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_interrupt_msg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_bulk_msg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memcmp to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function msleep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_queue_reset_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            1055470 (20% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  984941 (93%)
  Because of loop head:            63345 (6%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         7184 (1%)
  Times precision was empty:       126218 (12%)
  Times precision was {false}:     1909 (0%)
  Times result was cached:         919492 (87%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      7851 (1%)
  Times result was 'false':        15159 (1%)
Number of strengthen sat checks:   0
Number of coverage checks:         429744
  BDD entailment checks:           131832
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       43
Number of predicates discovered:          7
Number of abstraction locations:          598
Max number of predicates per location:    6
Avg number of predicates per location:    3
Total predicates per abstraction:         3635568
Max number of predicates per abstraction: 6
Avg number of predicates per abstraction: 372.50
Number of irrelevant predicates:          1332421 (37%)
Number of preds handled by boolean abs:   19122 (1%)
  Total number of models for allsat:      7852
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.00

Time for post operator:                 24.776s
  Time for path formula creation:       23.599s
Time for strengthen operator:            2.500s
Time for prec operator:                199.385s
  Time for abstraction:                191.565s (Max:     0.407s, Count: 1055470)
    Boolean abstraction:                49.964s
    Solving time:                       59.938s (Max:     0.396s)
    Model enumeration time:              1.477s
    Time for BDD construction:           0.147s (Max:     0.009s)
Time for merge operator:                 1.148s
Time for coverage check:                 0.122s
  Time for BDD entailment checks:        0.091s
Total time for SMT solver (w/o itp):    61.415s

Number of path formula cache hits:   6268591 (99%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     6.587s

Total number of created targets for pointer analysis: 173902
   Number of created targets for uf: *unsigned_short_int is 1169
   Number of created targets for uf: *signed_int is 121
   Number of created targets for uf: *unsigned_char is 91
   Number of created targets for uf: *_Bool is 5
   Number of created targets for uf: *unsigned_int is 373
   Number of created targets for uf: *char is 17
   Number of created targets for uf: *unsigned_long_int is 81


Number of BDD nodes:                               281
Size of BDD node table:                            464047
Size of BDD cache:                                 46411
Size of BDD node cleanup queue:                       15880 (count: 314835, min: 0, max: 217, avg: 0.05)
Time for BDD node cleanup:                             0.039s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  3.637s
  Time for transition matches:                         2.117s
  Time for transition assertions:                      0.002s
  Time for transition actions:                         0.025s
Automaton transfers with branching:                0
Automaton transfer successors:                      5163560 (count: 5163560, min: 1, max: 1, avg: 1.00) [1 x 5163560]

CPA algorithm statistics
------------------------
Number of iterations:            3343002
Max size of waitlist:            131
Average size of waitlist:        49
Number of computed successors:   3664234
Max successors for one state:    2
Number of times merged:          148956
Number of times stopped:         262051
Number of times breaked:         7184

Total time for CPA algorithm:       291.952s (Max:     2.839s)
  Time for choose from waitlist:      0.683s
  Time for precision adjustment:    211.354s
  Time for transfer relation:        68.499s
  Time for merge operator:            2.216s
  Time for stop operator:             2.075s
  Time for adding to reached set:     2.547s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   7184
Avg. length of target path (in blocks):              686544 (count: 7184, min: 6, max: 183, avg: 95.57)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                 569.562s
  Counterexample analysis:                           558.713s (Max:     0.294s, Calls: 7184)
    Refinement sat check:                            456.737s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.179s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.686s
  Precision update:                                    5.554s
  ARG update:                                          2.911s

Length of refined path (in blocks):                  679217 (count: 7183, min: 5, max: 182, avg: 94.56)
Number of affected states:                           167600 (count: 7183, min: 3, max: 180, avg: 23.33)
Length (states) of path with itp 'true':             504434 (count: 7183, min: 1, max: 169, avg: 70.23)
Length (states) of path with itp non-trivial itp:    167600 (count: 7183, min: 3, max: 180, avg: 23.33)
Length (states) of path with itp 'false':              7183 (count: 7183, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 7183, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:          160417 (count: 7183, min: 2, max: 179, avg: 22.33)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                7184
Number of successful refinements:     7183
Number of failed refinements:         0
Max. size of reached set before ref.: 15861
Max. size of reached set after ref.:  14289
Avg. size of reached set before ref.: 5427.43
Avg. size of reached set after ref.:  4956.65

Total time for CEGAR algorithm:     895.421s
Time for refinements:               590.168s
Average time for refinement:          0.082s
Max time for refinement:              0.312s

Code Coverage
-----------------------------
  Function coverage:      0.332
  Visited lines:          2918
  Total lines:            8960
  Line coverage:          0.326
  Visited conditions:     440
  Total conditions:       1714
  Condition coverage:     0.257

CPAchecker general statistics
-----------------------------
Number of program locations:     11872
Number of CFA edges:             13466
Number of relevant variables:    1961
Number of functions:             479
Number of loops:                 56
Size of reached set:             6915
  Number of reached locations:   1764 (15%)
    Avg states per location:     3
    Max states per location:     335 (at node N10845)
  Number of reached functions:   159 (33%)
  Number of partitions:          6912
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N2550 (before line 9012), Function zd_chip_control_leds called from node N5284, stack depth 4 [63a808bd], stack [main, zd_op_stop, housekeeping_disable, zd_chip_control_leds]])
  Number of target states:       1
  Size of final wait list        51

Time for analysis setup:          4.936s
  Time for loading CPAs:          0.664s
  Time for loading parser:        0.394s
  Time for CFA construction:      3.801s
    Time for parsing file(s):     0.828s
    Time for AST to CFA:          1.427s
    Time for CFA sanity check:    0.371s
    Time for post-processing:     1.061s
      Time for var class.:        0.571s
Time for Analysis:              895.421s
CPU time for analysis:          895.380s
Total time for CPAchecker:      900.367s
Total CPU time for CPAchecker:  900.310s
Time for statistics:              0.153s

Time for Garbage Collector:      13.280s (in 1739 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                251MB (   239 MiB) max;    149MB (   142 MiB) avg;    256MB (   245 MiB) peak
Used non-heap memory:             42MB (    40 MiB) max;     41MB (    39 MiB) avg;     42MB (    40 MiB) peak
Allocated heap memory:           255MB (   243 MiB) max;    255MB (   243 MiB) avg
Allocated non-heap memory:        45MB (    42 MiB) max;     44MB (    42 MiB) avg
Total process virtual memory:  12551MB ( 11970 MiB) max;  12342MB ( 11770 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
