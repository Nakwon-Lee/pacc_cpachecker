scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 9600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-32_7a-drivers--net--wireless--zd1211rw--zd1211rw.ko-ldv_main1_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 9600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_vg8hr7ga/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker 1.6.1-svn 6608050+ (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 9315: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 12653: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 13482: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 13859: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 14700: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 15277: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 15672: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 15754: Dead code detected: __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& kernel_stack)); (CFACreationUtils.addEdgeToCFA, INFO)

line 15757: Dead code detected: __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack)); (CFACreationUtils.addEdgeToCFA, INFO)

line 15760: Dead code detected: __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (8UL) {
  case 1UL:
  __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& kernel_stack));
  goto ldv_6199;
  case 2UL:
  __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack));
  goto ldv_6199;
  case 4UL:
  __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack));
  goto ldv_6199;
  case 8UL:
  __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack));
  goto ldv_6199;
  default:
  __bad_percpu_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 19379: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 15616: Function pointer *(rf->patch_6m_band_edge) with type int (*)(struct zd_rf *, u8 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 15496: Function pointer *(rf->set_channel) with type int (*)(struct zd_rf *, u8 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_handler_precall to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_printk to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ieee80211_beacon_get_tim to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_anchor_empty to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function skb_push to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function cancel_delayed_work_sync to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_pr_debug to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dump_stack to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_kill_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_free_coherent to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_free_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function consume_skb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tasklet_kill to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_kill_anchored_urbs to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_alloc_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function skb_queue_tail to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_anchor_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_submit_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_unanchor_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function skb_unlink to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_alloc_coherent to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function scnprintf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function request_firmware to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function release_firmware to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _dev_info to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_warn to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_control_msg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_wait_anchor_empty_timeout to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_reset_configuration to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ieee80211_stop_queues to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function cancel_work_sync to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 15496: Ignoring function call through function pointer *(rf->set_channel): r = (*(rf->set_channel))(rf, (int)channel); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function kfree_skb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 15616: Ignoring function call through function pointer *(rf->patch_6m_band_edge): tmp = (*(rf->patch_6m_band_edge))(rf, (int)channel); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function msecs_to_jiffies to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function wait_for_completion_timeout to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_interrupt_msg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_bulk_msg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function get_seconds to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function flush_workqueue to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memcmp to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function msleep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 15545: Ignoring function call through function pointer *(rf->switch_radio_on): t = (*(rf->switch_radio_on))(rf); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function ieee80211_wake_queues to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_queue_reset_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            1760968 (19% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  1627374 (92%)
  Because of loop head:            128288 (7%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         5306 (0%)
  Times precision was empty:       291079 (17%)
  Times precision was {false}:     3303 (0%)
  Times result was cached:         1453706 (83%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      12880 (1%)
  Times result was 'false':        18315 (1%)
Number of strengthen sat checks:   0
Number of coverage checks:         894472
  BDD entailment checks:           279212
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       174
Number of predicates discovered:          7
Number of abstraction locations:          577
Max number of predicates per location:    6
Avg number of predicates per location:    3
Total predicates per abstraction:         5742725
Max number of predicates per abstraction: 6
Avg number of predicates per abstraction: 354.86
Number of irrelevant predicates:          2918784 (51%)
Number of preds handled by boolean abs:   31064 (1%)
  Total number of models for allsat:      12881
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.00

Time for post operator:                 50.184s
  Time for path formula creation:       48.293s
Time for strengthen operator:            3.786s
Time for prec operator:                378.900s
  Time for abstraction:                367.283s (Max:    13.390s, Count: 1760968)
    Boolean abstraction:               111.297s
    Solving time:                      156.178s (Max:    12.826s)
    Model enumeration time:              3.592s
    Time for BDD construction:           0.244s (Max:     0.009s)
Time for merge operator:                 2.044s
Time for coverage check:                 0.193s
  Time for BDD entailment checks:        0.144s
Total time for SMT solver (w/o itp):   159.770s

Number of path formula cache hits:   10876546 (98%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    25.713s

Total number of created targets for pointer analysis: 1287434
   Number of created targets for uf: *unsigned_short_int is 955
   Number of created targets for uf: *signed_int is 121
   Number of created targets for uf: *unsigned_char is 117
   Number of created targets for uf: *_Bool is 101
   Number of created targets for uf: *unsigned_int is 560
   Number of created targets for uf: *char is 37
   Number of created targets for uf: *unsigned_long_int is 41


Number of BDD nodes:                               277
Size of BDD node table:                            464047
Size of BDD cache:                                 46411
Size of BDD node cleanup queue:                       25933 (count: 664238, min: 0, max: 186, avg: 0.04)
Time for BDD node cleanup:                             0.040s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  5.672s
  Time for transition matches:                         3.427s
  Time for transition assertions:                      0.001s
  Time for transition actions:                         0.029s
Automaton transfers with branching:                0
Automaton transfer successors:                      9103923 (count: 9103923, min: 1, max: 1, avg: 1.00) [1 x 9103923]

CPA algorithm statistics
------------------------
Number of iterations:            5911475
Max size of waitlist:            274
Average size of waitlist:        67
Number of computed successors:   6515654
Max successors for one state:    2
Number of times merged:          307630
Number of times stopped:         534554
Number of times breaked:         5306

Total time for CPA algorithm:       549.740s (Max:    24.450s)
  Time for choose from waitlist:      1.083s
  Time for precision adjustment:    401.768s
  Time for transfer relation:       127.200s
  Time for merge operator:            4.139s
  Time for stop operator:             3.588s
  Time for adding to reached set:     4.803s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   5306
Avg. length of target path (in blocks):              324619 (count: 5306, min: 6, max: 220, avg: 61.18)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                 308.231s
  Counterexample analysis:                           297.527s (Max:     3.361s, Calls: 5306)
    Refinement sat check:                            253.462s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.107s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.788s
  Precision update:                                    3.489s
  ARG update:                                          5.473s

Length of refined path (in blocks):                  319313 (count: 5306, min: 5, max: 219, avg: 60.18)
Number of affected states:                           171254 (count: 5306, min: 3, max: 201, avg: 32.28)
Length (states) of path with itp 'true':             142753 (count: 5306, min: 1, max: 174, avg: 26.90)
Length (states) of path with itp non-trivial itp:    171254 (count: 5306, min: 3, max: 201, avg: 32.28)
Length (states) of path with itp 'false':              5306 (count: 5306, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 5306, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:          165948 (count: 5306, min: 2, max: 200, avg: 31.28)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                5306
Number of successful refinements:     5306
Number of failed refinements:         0
Max. size of reached set before ref.: 47445
Max. size of reached set after ref.:  46055
Avg. size of reached set before ref.: 7863.45
Avg. size of reached set after ref.:  6742.07

Total time for CEGAR algorithm:     894.846s
Time for refinements:               329.617s
Average time for refinement:          0.062s
Max time for refinement:              3.398s

Code Coverage
-----------------------------
  Function coverage:      0.328
  Visited lines:          3009
  Total lines:            8960
  Line coverage:          0.336
  Visited conditions:     484
  Total conditions:       1714
  Condition coverage:     0.282

CPAchecker general statistics
-----------------------------
Number of program locations:     11872
Number of CFA edges:             13466
Number of relevant variables:    1961
Number of functions:             479
Number of loops:                 56
Size of reached set:             12722
  Number of reached locations:   1845 (16%)
    Avg states per location:     6
    Max states per location:     506 (at node N10844)
  Number of reached functions:   157 (33%)
  Number of partitions:          12679
    Avg size of partitions:      1
    Max size of partitions:      3 (with key [N55 (before line 6121), Function zd_ioread16v_locked called from node N336, stack depth 5 [d5bedcc], stack [main, zd_op_get_tsf, zd_chip_get_tsf, zd_ioread32v_locked, zd_ioread16v_locked]])
  Number of target states:       0
  Size of final wait list        77

Time for analysis setup:          5.488s
  Time for loading CPAs:          0.790s
  Time for loading parser:        0.405s
  Time for CFA construction:      4.199s
    Time for parsing file(s):     0.870s
    Time for AST to CFA:          1.412s
    Time for CFA sanity check:    0.461s
    Time for post-processing:     1.336s
      Time for var class.:        0.647s
Time for Analysis:              894.847s
CPU time for analysis:          894.830s
Total time for CPAchecker:      900.337s
Total CPU time for CPAchecker:  900.300s
Time for statistics:              0.214s

Time for Garbage Collector:      32.486s (in 2404 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                387MB (   369 MiB) max;    190MB (   181 MiB) avg;    407MB (   388 MiB) peak
Used non-heap memory:             41MB (    40 MiB) max;     41MB (    39 MiB) avg;     42MB (    40 MiB) peak
Allocated heap memory:           407MB (   388 MiB) max;    293MB (   279 MiB) avg
Allocated non-heap memory:        44MB (    42 MiB) max;     44MB (    42 MiB) avg
Total process virtual memory:  12971MB ( 12370 MiB) max;  12459MB ( 11882 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
