scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 9600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-32_7a-drivers--net--wireless--zd1211rw--zd1211rw.ko-ldv_main1_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 9600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_m5bqo1w6/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker 1.6.1-svn 6608050+ (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 9315: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 12653: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 13482: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 13859: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 14700: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 15277: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 15672: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 15754: Dead code detected: __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& kernel_stack)); (CFACreationUtils.addEdgeToCFA, INFO)

line 15757: Dead code detected: __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack)); (CFACreationUtils.addEdgeToCFA, INFO)

line 15760: Dead code detected: __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (8UL) {
  case 1UL:
  __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& kernel_stack));
  goto ldv_6199;
  case 2UL:
  __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack));
  goto ldv_6199;
  case 4UL:
  __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack));
  goto ldv_6199;
  case 8UL:
  __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack));
  goto ldv_6199;
  default:
  __bad_percpu_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 19379: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 15616: Function pointer *(rf->patch_6m_band_edge) with type int (*)(struct zd_rf *, u8 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 15496: Function pointer *(rf->set_channel) with type int (*)(struct zd_rf *, u8 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_handler_precall to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_printk to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ieee80211_beacon_get_tim to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function skb_push to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_anchor_empty to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function cancel_delayed_work_sync to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_pr_debug to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dump_stack to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function consume_skb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_kill_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_free_coherent to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_free_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tasklet_kill to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_kill_anchored_urbs to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_alloc_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function skb_queue_tail to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_anchor_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_submit_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_unanchor_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function skb_unlink to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function scnprintf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function request_firmware to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function release_firmware to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _dev_info to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_warn to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_control_msg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_reset_configuration to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_alloc_coherent to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 15496: Ignoring function call through function pointer *(rf->set_channel): r = (*(rf->set_channel))(rf, (int)channel); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 15616: Ignoring function call through function pointer *(rf->patch_6m_band_edge): tmp = (*(rf->patch_6m_band_edge))(rf, (int)channel); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function cancel_work_sync to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ieee80211_stop_queues to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function kfree_skb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function get_seconds to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function flush_workqueue to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_wait_anchor_empty_timeout to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function msecs_to_jiffies to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function wait_for_completion_timeout to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_interrupt_msg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_bulk_msg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memcmp to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function msleep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_queue_reset_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 15595: Ignoring function call through function pointer *(rf->switch_radio_off): t = (*(rf->switch_radio_off))(rf); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function skb_dequeue to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_kfree_skb_any to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 15545: Ignoring function call through function pointer *(rf->switch_radio_on): t = (*(rf->switch_radio_on))(rf); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function ieee80211_wake_queues to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mod_delayed_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function queue_delayed_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            1253903 (20% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  1168001 (93%)
  Because of loop head:            80170 (6%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         5732 (0%)
  Times precision was empty:       148461 (12%)
  Times precision was {false}:     2389 (0%)
  Times result was cached:         1089602 (87%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      13451 (1%)
  Times result was 'false':        20311 (2%)
Number of strengthen sat checks:   0
Number of coverage checks:         510077
  BDD entailment checks:           156771
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       174
Number of predicates discovered:          8
Number of abstraction locations:          695
Max number of predicates per location:    7
Avg number of predicates per location:    3
Total predicates per abstraction:         4348902
Max number of predicates per abstraction: 7
Avg number of predicates per abstraction: 274.55
Number of irrelevant predicates:          1683227 (39%)
Number of preds handled by boolean abs:   34931 (1%)
  Total number of models for allsat:      13456
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.00

Time for post operator:                 42.279s
  Time for path formula creation:       41.060s
Time for strengthen operator:            2.872s
Time for prec operator:                380.158s
  Time for abstraction:                371.555s (Max:    31.298s, Count: 1253903)
    Boolean abstraction:                86.794s
    Solving time:                      180.308s (Max:    30.949s)
    Model enumeration time:              2.705s
    Time for BDD construction:           0.214s (Max:     0.008s)
Time for merge operator:                 1.148s
Time for coverage check:                 0.156s
  Time for BDD entailment checks:        0.122s
Total time for SMT solver (w/o itp):   183.013s

Number of path formula cache hits:   7466437 (99%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    23.058s

Total number of created targets for pointer analysis: 1515491
   Number of created targets for uf: *unsigned_short_int is 1955
   Number of created targets for uf: *signed_int is 241
   Number of created targets for uf: *unsigned_char is 117
   Number of created targets for uf: *_Bool is 12
   Number of created targets for uf: *unsigned_int is 560
   Number of created targets for uf: *char is 37
   Number of created targets for uf: *unsigned_long_int is 41


Number of BDD nodes:                               320
Size of BDD node table:                            464047
Size of BDD cache:                                 46411
Size of BDD node cleanup queue:                       27184 (count: 398104, min: 0, max: 350, avg: 0.07)
Time for BDD node cleanup:                             0.034s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  4.084s
  Time for transition matches:                         2.479s
  Time for transition assertions:                      0.004s
  Time for transition actions:                         0.021s
Automaton transfers with branching:                0
Automaton transfer successors:                      6179106 (count: 6179106, min: 1, max: 1, avg: 1.00) [1 x 6179106]

CPA algorithm statistics
------------------------
Number of iterations:            4005652
Max size of waitlist:            130
Average size of waitlist:        46
Number of computed successors:   4382924
Max successors for one state:    2
Number of times merged:          176653
Number of times stopped:         317037
Number of times breaked:         5732

Total time for CPA algorithm:       501.325s (Max:    48.645s)
  Time for choose from waitlist:      1.003s
  Time for precision adjustment:    394.711s
  Time for transfer relation:        92.250s
  Time for merge operator:            2.276s
  Time for stop operator:             2.889s
  Time for adding to reached set:     3.330s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   5732
Avg. length of target path (in blocks):              467682 (count: 5732, min: 6, max: 281, avg: 81.59)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                 374.946s
  Counterexample analysis:                           365.314s (Max:     0.320s, Calls: 5732)
    Refinement sat check:                            300.588s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.111s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.646s
  Precision update:                                    4.164s
  ARG update:                                          3.670s

Length of refined path (in blocks):                  461936 (count: 5732, min: 5, max: 280, avg: 80.59)
Number of affected states:                           156001 (count: 5732, min: 0, max: 278, avg: 27.22)
Length (states) of path with itp 'true':             300203 (count: 5732, min: 1, max: 204, avg: 52.37)
Length (states) of path with itp non-trivial itp:    156001 (count: 5732, min: 0, max: 278, avg: 27.22)
Length (states) of path with itp 'false':              5732 (count: 5732, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 5732, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:          150271 (count: 5732, min: 0, max: 277, avg: 26.22)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                5732
Number of successful refinements:     5732
Number of failed refinements:         0
Max. size of reached set before ref.: 21861
Max. size of reached set after ref.:  21597
Avg. size of reached set before ref.: 4739.54
Avg. size of reached set after ref.:  4037.61

Total time for CEGAR algorithm:     898.868s
Time for refinements:               388.779s
Average time for refinement:          0.067s
Max time for refinement:              0.345s

Code Coverage
-----------------------------
  Function coverage:      0.461
  Visited lines:          4689
  Total lines:            8960
  Line coverage:          0.523
  Visited conditions:     682
  Total conditions:       1714
  Condition coverage:     0.398

CPAchecker general statistics
-----------------------------
Number of program locations:     11872
Number of CFA edges:             13466
Number of relevant variables:    1961
Number of functions:             479
Number of loops:                 56
Size of reached set:             22088
  Number of reached locations:   2605 (22%)
    Avg states per location:     8
    Max states per location:     939 (at node N10845)
  Number of reached functions:   221 (46%)
  Number of partitions:          22078
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N2550 (before line 9012), Function zd_chip_control_leds called from node N5284, stack depth 4 [9d24e17], stack [main, zd_op_stop, housekeeping_disable, zd_chip_control_leds]])
  Number of target states:       0
  Size of final wait list        123

Time for analysis setup:          5.277s
  Time for loading CPAs:          0.705s
  Time for loading parser:        0.419s
  Time for CFA construction:      4.068s
    Time for parsing file(s):     0.860s
    Time for AST to CFA:          1.477s
    Time for CFA sanity check:    0.359s
    Time for post-processing:     1.208s
      Time for var class.:        0.723s
Time for Analysis:              898.868s
CPU time for analysis:          898.830s
Total time for CPAchecker:      904.152s
Total CPU time for CPAchecker:  904.090s
Time for statistics:              0.253s

Time for Garbage Collector:      21.358s (in 2286 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                265MB (   253 MiB) max;    153MB (   146 MiB) avg;    274MB (   261 MiB) peak
Used non-heap memory:             41MB (    39 MiB) max;     41MB (    39 MiB) avg;     42MB (    40 MiB) peak
Allocated heap memory:           270MB (   258 MiB) max;    257MB (   245 MiB) avg
Allocated non-heap memory:        44MB (    42 MiB) max;     44MB (    42 MiB) avg
Total process virtual memory:  13021MB ( 12418 MiB) max;  12491MB ( 11913 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
