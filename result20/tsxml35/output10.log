scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 9600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-32_7a-drivers--net--wireless--zd1211rw--zd1211rw.ko-ldv_main1_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 9600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_sfytzkjg/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker 1.6.1-svn 6608050+ (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 9315: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 12653: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 13482: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 13859: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 14700: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 15277: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 15672: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 15754: Dead code detected: __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& kernel_stack)); (CFACreationUtils.addEdgeToCFA, INFO)

line 15757: Dead code detected: __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack)); (CFACreationUtils.addEdgeToCFA, INFO)

line 15760: Dead code detected: __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (8UL) {
  case 1UL:
  __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& kernel_stack));
  goto ldv_6199;
  case 2UL:
  __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack));
  goto ldv_6199;
  case 4UL:
  __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack));
  goto ldv_6199;
  case 8UL:
  __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack));
  goto ldv_6199;
  default:
  __bad_percpu_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 19379: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 15616: Function pointer *(rf->patch_6m_band_edge) with type int (*)(struct zd_rf *, u8 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 15496: Function pointer *(rf->set_channel) with type int (*)(struct zd_rf *, u8 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_handler_precall to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_printk to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function cancel_delayed_work_sync to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tasklet_kill to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_kill_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_free_coherent to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_free_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_kill_anchored_urbs to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function kfree_skb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_pr_debug to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dump_stack to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 15496: Ignoring function call through function pointer *(rf->set_channel): r = (*(rf->set_channel))(rf, (int)channel); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 15616: Ignoring function call through function pointer *(rf->patch_6m_band_edge): tmp = (*(rf->patch_6m_band_edge))(rf, (int)channel); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            21047 (26% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  19639 (93%)
  Because of loop head:            1083 (5%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         325 (2%)
  Times precision was empty:       7307 (35%)
  Times precision was {false}:     255 (1%)
  Times result was cached:         12970 (62%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      515 (2%)
  Times result was 'false':        789 (4%)
Number of strengthen sat checks:   0
Number of coverage checks:         4090
  BDD entailment checks:           1624
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       43
Number of predicates discovered:          7
Number of abstraction locations:          163
Max number of predicates per location:    4
Avg number of predicates per location:    1
Total predicates per abstraction:         20418
Max number of predicates per abstraction: 4
Avg number of predicates per abstraction: 26.52
Number of irrelevant predicates:          8127 (40%)
Number of preds handled by boolean abs:   838 (4%)
  Total number of models for allsat:      514
  Max number of models for allsat:        1
  Avg number of models for allsat:        1.00

Time for post operator:                  2.085s
  Time for path formula creation:        2.053s
Time for strengthen operator:            0.084s
Time for prec operator:                  8.887s
  Time for abstraction:                  8.595s (Max:     0.189s, Count: 21047)
    Boolean abstraction:                 4.070s
    Solving time:                        5.436s (Max:     0.171s)
    Model enumeration time:              0.129s
    Time for BDD construction:           0.029s (Max:     0.004s)
Time for merge operator:                 0.057s
Time for coverage check:                 0.038s
  Time for BDD entailment checks:        0.037s
Total time for SMT solver (w/o itp):     5.566s

Number of path formula cache hits:   93021 (93%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     1.759s

Total number of created targets for pointer analysis: 27319
   Number of created targets for uf: *unsigned_short_int is 295
   Number of created targets for uf: *signed_int is 361
   Number of created targets for uf: *unsigned_char is 99
   Number of created targets for uf: *unsigned_int is 373


Number of BDD nodes:                               232
Size of BDD node table:                            464047
Size of BDD cache:                                 46411
Size of BDD node cleanup queue:                        1066 (count: 13361, min: 0, max: 200, avg: 0.08)
Time for BDD node cleanup:                             0.006s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.196s
Automaton transfers with branching:                0
Automaton transfer successors:                        80003 (count: 80003, min: 1, max: 1, avg: 1.00) [1 x 80003]

CPA algorithm statistics
------------------------
Number of iterations:            56964
Max size of waitlist:            63
Average size of waitlist:        16
Number of computed successors:   61522
Max successors for one state:    2
Number of times merged:          1233
Number of times stopped:         2219
Number of times breaked:         325

Total time for CPA algorithm:        13.262s (Max:     0.841s)
  Time for choose from waitlist:      0.048s
  Time for precision adjustment:      9.304s
  Time for transfer relation:         3.350s
  Time for merge operator:            0.088s
  Time for stop operator:             0.142s
  Time for adding to reached set:     0.099s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   325
Avg. length of target path (in blocks):               16415 (count: 325, min: 6, max: 74, avg: 50.51)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  11.470s
  Counterexample analysis:                            11.077s (Max:     0.132s, Calls: 325)
    Refinement sat check:                              9.370s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.004s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.079s
  Precision update:                                    0.087s
  ARG update:                                          0.118s

Length of refined path (in blocks):                   16090 (count: 325, min: 5, max: 73, avg: 49.51)
Number of affected states:                             6233 (count: 325, min: 3, max: 54, avg: 19.18)
Length (states) of path with itp 'true':               9532 (count: 325, min: 1, max: 58, avg: 29.33)
Length (states) of path with itp non-trivial itp:      6233 (count: 325, min: 3, max: 54, avg: 19.18)
Length (states) of path with itp 'false':               325 (count: 325, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 325, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:            5908 (count: 325, min: 2, max: 53, avg: 18.18)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                325
Number of successful refinements:     325
Number of failed refinements:         0
Max. size of reached set before ref.: 2294
Max. size of reached set after ref.:  1290
Avg. size of reached set before ref.: 589.76
Avg. size of reached set after ref.:  413.71

Total time for CEGAR algorithm:      25.086s
Time for refinements:                11.743s
Average time for refinement:          0.036s
Max time for refinement:              0.134s

Code Coverage
-----------------------------
  Function coverage:      0.184
  Visited lines:          1673
  Total lines:            8960
  Line coverage:          0.187
  Visited conditions:     144
  Total conditions:       1714
  Condition coverage:     0.084

CPAchecker general statistics
-----------------------------
Number of program locations:     11872
Number of CFA edges:             13466
Number of relevant variables:    1961
Number of functions:             479
Number of loops:                 56
Size of reached set:             1298
  Number of reached locations:   664 (6%)
    Avg states per location:     1
    Max states per location:     38 (at node N10844)
  Number of reached functions:   88 (18%)
  Number of partitions:          1291
    Avg size of partitions:      1
    Max size of partitions:      3 (with key [N5366 (before line 12600), Function main called from node N5288, stack depth 1 [34ab398b], stack [main]])
  Number of target states:       0
  Size of final wait list        33

Time for analysis setup:          5.254s
  Time for loading CPAs:          0.730s
  Time for loading parser:        0.385s
  Time for CFA construction:      4.057s
    Time for parsing file(s):     0.826s
    Time for AST to CFA:          1.433s
    Time for CFA sanity check:    0.522s
    Time for post-processing:     1.166s
      Time for var class.:        0.604s
Time for Analysis:               25.086s
CPU time for analysis:           25.080s
Total time for CPAchecker:       30.343s
Total CPU time for CPAchecker:   30.320s
Time for statistics:              0.092s

Time for Garbage Collector:       0.381s (in 35 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                124MB (   118 MiB) max;     82MB (    79 MiB) avg;    132MB (   125 MiB) peak
Used non-heap memory:             39MB (    38 MiB) max;     35MB (    34 MiB) avg;     40MB (    38 MiB) peak
Allocated heap memory:           255MB (   243 MiB) max;    255MB (   243 MiB) avg
Allocated non-heap memory:        41MB (    39 MiB) max;     38MB (    36 MiB) avg
Total process virtual memory:  12146MB ( 11583 MiB) max;  12136MB ( 11574 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
