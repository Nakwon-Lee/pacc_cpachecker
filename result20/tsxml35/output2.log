scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 9600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-32_7a-drivers--net--wireless--zd1211rw--zd1211rw.ko-ldv_main1_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 9600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run__u3n6vdc/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker 1.6.1-svn 6608050+ (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 9315: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 12653: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 13482: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 13859: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 14700: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 15277: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 15672: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 15754: Dead code detected: __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& kernel_stack)); (CFACreationUtils.addEdgeToCFA, INFO)

line 15757: Dead code detected: __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack)); (CFACreationUtils.addEdgeToCFA, INFO)

line 15760: Dead code detected: __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (8UL) {
  case 1UL:
  __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& kernel_stack));
  goto ldv_6199;
  case 2UL:
  __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack));
  goto ldv_6199;
  case 4UL:
  __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack));
  goto ldv_6199;
  case 8UL:
  __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack));
  goto ldv_6199;
  default:
  __bad_percpu_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 19379: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 15616: Function pointer *(rf->patch_6m_band_edge) with type int (*)(struct zd_rf *, u8 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 15496: Function pointer *(rf->set_channel) with type int (*)(struct zd_rf *, u8 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_handler_precall to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_printk to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ieee80211_beacon_get_tim to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function skb_push to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function cancel_delayed_work_sync to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_anchor_empty to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_pr_debug to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dump_stack to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_alloc_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function scnprintf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function request_firmware to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function release_firmware to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_kill_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _dev_info to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_warn to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_free_coherent to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_free_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_reset_configuration to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function consume_skb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_control_msg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_alloc_coherent to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_submit_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            36141 (21% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  34085 (94%)
  Because of loop head:            1842 (5%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         214 (1%)
  Times precision was empty:       17604 (49%)
  Times precision was {false}:     357 (1%)
  Times result was cached:         17209 (48%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      971 (3%)
  Times result was 'false':        1177 (3%)
Number of strengthen sat checks:   0
Number of coverage checks:         11838
  BDD entailment checks:           3758
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       43
Number of predicates discovered:          7
Number of abstraction locations:          199
Max number of predicates per location:    5
Avg number of predicates per location:    2
Total predicates per abstraction:         52267
Max number of predicates per abstraction: 5
Avg number of predicates per abstraction: 39.36
Number of irrelevant predicates:          24777 (47%)
Number of preds handled by boolean abs:   2063 (4%)
  Total number of models for allsat:      971
  Max number of models for allsat:        1
  Avg number of models for allsat:        1.00

Time for post operator:                  2.461s
  Time for path formula creation:        2.370s
Time for strengthen operator:            0.131s
Time for prec operator:                  9.711s
  Time for abstraction:                  9.307s (Max:     0.150s, Count: 36141)
    Boolean abstraction:                 3.822s
    Solving time:                        4.246s (Max:     0.135s)
    Model enumeration time:              0.131s
    Time for BDD construction:           0.050s (Max:     0.008s)
Time for merge operator:                 0.089s
Time for coverage check:                 0.055s
  Time for BDD entailment checks:        0.040s
Total time for SMT solver (w/o itp):     4.377s

Number of path formula cache hits:   203673 (96%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     1.858s

Total number of created targets for pointer analysis: 14533
   Number of created targets for uf: *unsigned_short_int is 107
   Number of created targets for uf: *signed_int is 121
   Number of created targets for uf: *unsigned_char is 117
   Number of created targets for uf: *unsigned_int is 373
   Number of created targets for uf: *char is 37
   Number of created targets for uf: *unsigned_long_int is 21


Number of BDD nodes:                               245
Size of BDD node table:                            464047
Size of BDD cache:                                 46411
Size of BDD node cleanup queue:                        2092 (count: 29065, min: 0, max: 144, avg: 0.07)
Time for BDD node cleanup:                             0.025s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.336s
Automaton transfers with branching:                0
Automaton transfer successors:                       175574 (count: 175574, min: 1, max: 1, avg: 1.00) [1 x 175574]

CPA algorithm statistics
------------------------
Number of iterations:            111132
Max size of waitlist:            69
Average size of waitlist:        24
Number of computed successors:   122596
Max successors for one state:    2
Number of times merged:          4040
Number of times stopped:         6638
Number of times breaked:         214

Total time for CPA algorithm:        16.830s (Max:     0.758s)
  Time for choose from waitlist:      0.087s
  Time for precision adjustment:     10.424s
  Time for transfer relation:         5.200s
  Time for merge operator:            0.231s
  Time for stop operator:             0.220s
  Time for adding to reached set:     0.250s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   214
Avg. length of target path (in blocks):                5458 (count: 214, min: 6, max: 41, avg: 25.50)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   7.814s
  Counterexample analysis:                             7.294s (Max:     0.137s, Calls: 214)
    Refinement sat check:                              6.476s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.004s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.067s
  Precision update:                                    0.111s
  ARG update:                                          0.254s

Length of refined path (in blocks):                    5244 (count: 214, min: 5, max: 40, avg: 24.50)
Number of affected states:                             3269 (count: 214, min: 3, max: 38, avg: 15.28)
Length (states) of path with itp 'true':               1761 (count: 214, min: 1, max: 29, avg: 8.23)
Length (states) of path with itp non-trivial itp:      3269 (count: 214, min: 3, max: 38, avg: 15.28)
Length (states) of path with itp 'false':               214 (count: 214, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 214, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:            3055 (count: 214, min: 2, max: 37, avg: 14.28)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                214
Number of successful refinements:     214
Number of failed refinements:         0
Max. size of reached set before ref.: 2850
Max. size of reached set after ref.:  2800
Avg. size of reached set before ref.: 1438.05
Avg. size of reached set after ref.:  909.88

Total time for CEGAR algorithm:      25.100s
Time for refinements:                 8.137s
Average time for refinement:          0.038s
Max time for refinement:              0.154s

Code Coverage
-----------------------------
  Function coverage:      0.192
  Visited lines:          1843
  Total lines:            8960
  Line coverage:          0.206
  Visited conditions:     192
  Total conditions:       1714
  Condition coverage:     0.112

CPAchecker general statistics
-----------------------------
Number of program locations:     11872
Number of CFA edges:             13466
Number of relevant variables:    1961
Number of functions:             479
Number of loops:                 56
Size of reached set:             1754
  Number of reached locations:   789 (7%)
    Avg states per location:     2
    Max states per location:     84 (at node N10845)
  Number of reached functions:   92 (19%)
  Number of partitions:          1748
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N2625 (before line 9100), Function zd_chip_enable_int called from node N3711, stack depth 3 [3311e053], stack [main, zd_op_start, zd_chip_enable_int]])
  Number of target states:       0
  Size of final wait list        30

Time for analysis setup:          5.280s
  Time for loading CPAs:          0.706s
  Time for loading parser:        0.395s
  Time for CFA construction:      4.090s
    Time for parsing file(s):     0.852s
    Time for AST to CFA:          1.409s
    Time for CFA sanity check:    0.415s
    Time for post-processing:     1.302s
      Time for var class.:        0.749s
Time for Analysis:               25.101s
CPU time for analysis:           25.100s
Total time for CPAchecker:       30.383s
Total CPU time for CPAchecker:   30.360s
Time for statistics:              0.095s

Time for Garbage Collector:       0.457s (in 51 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                127MB (   121 MiB) max;     83MB (    79 MiB) avg;    134MB (   127 MiB) peak
Used non-heap memory:             41MB (    39 MiB) max;     36MB (    35 MiB) avg;     41MB (    40 MiB) peak
Allocated heap memory:           255MB (   243 MiB) max;    255MB (   243 MiB) avg
Allocated non-heap memory:        43MB (    41 MiB) max;     38MB (    37 MiB) avg
Total process virtual memory:  12146MB ( 11584 MiB) max;  12136MB ( 11574 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
