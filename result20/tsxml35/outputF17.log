scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 9600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-32_7a-drivers--net--wireless--zd1211rw--zd1211rw.ko-ldv_main1_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 9600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_uybiyhbe/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker 1.6.1-svn 6608050+ (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 9315: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 12653: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 13482: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 13859: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 14700: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 15277: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 15672: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 15754: Dead code detected: __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& kernel_stack)); (CFACreationUtils.addEdgeToCFA, INFO)

line 15757: Dead code detected: __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack)); (CFACreationUtils.addEdgeToCFA, INFO)

line 15760: Dead code detected: __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (8UL) {
  case 1UL:
  __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& kernel_stack));
  goto ldv_6199;
  case 2UL:
  __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack));
  goto ldv_6199;
  case 4UL:
  __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack));
  goto ldv_6199;
  case 8UL:
  __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack));
  goto ldv_6199;
  default:
  __bad_percpu_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 19379: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 15616: Function pointer *(rf->patch_6m_band_edge) with type int (*)(struct zd_rf *, u8 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 15496: Function pointer *(rf->set_channel) with type int (*)(struct zd_rf *, u8 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_handler_precall to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_printk to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ieee80211_beacon_get_tim to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function skb_push to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function cancel_delayed_work_sync to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_anchor_empty to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_pr_debug to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dump_stack to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_alloc_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function scnprintf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function request_firmware to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function release_firmware to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_kill_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_free_coherent to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_free_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _dev_info to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_warn to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_reset_configuration to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_anchor_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_submit_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_unanchor_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_wait_anchor_empty_timeout to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_kill_anchored_urbs to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function consume_skb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_control_msg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_alloc_coherent to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function msecs_to_jiffies to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function wait_for_completion_timeout to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_interrupt_msg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_bulk_msg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function cancel_work_sync to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function regulatory_hint to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 15430: Ignoring function call through function pointer *(rf->init_hw): t = (*(rf->init_hw))(rf); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function snprintf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            337329 (20% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  308476 (91%)
  Because of loop head:            27244 (8%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         1609 (0%)
  Times precision was empty:       40824 (12%)
  Times precision was {false}:     2109 (1%)
  Times result was cached:         290944 (86%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      3452 (1%)
  Times result was 'false':        2127 (1%)
Number of strengthen sat checks:   0
Number of coverage checks:         149931
  BDD entailment checks:           52229
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       359
Number of predicates discovered:          5
Number of abstraction locations:          524
Max number of predicates per location:    3
Avg number of predicates per location:    1
Total predicates per abstraction:         438416
Max number of predicates per abstraction: 3
Avg number of predicates per abstraction: 78.84
Number of irrelevant predicates:          117158 (27%)
Number of preds handled by boolean abs:   4376 (1%)
  Total number of models for allsat:      3453
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.00

Time for post operator:                 30.227s
  Time for path formula creation:       29.840s
Time for strengthen operator:            0.830s
Time for prec operator:                182.516s
  Time for abstraction:                179.759s (Max:     6.227s, Count: 337329)
    Boolean abstraction:                49.145s
    Solving time:                      101.581s (Max:     5.329s)
    Model enumeration time:              1.665s
    Time for BDD construction:           0.070s (Max:     0.005s)
Time for merge operator:                 0.626s
Time for coverage check:                 0.076s
  Time for BDD entailment checks:        0.055s
Total time for SMT solver (w/o itp):   103.246s

Number of path formula cache hits:   1947220 (95%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    23.832s

Total number of created targets for pointer analysis: 1242608
   Number of created targets for uf: *unsigned_short_int is 303
   Number of created targets for uf: *signed_int is 2401
   Number of created targets for uf: *unsigned_char is 33
   Number of created targets for uf: *(struct_firmware)* is 4
   Number of created targets for uf: *_Bool is 55
   Number of created targets for uf: *unsigned_int is 3687
   Number of created targets for uf: *char is 37
   Number of created targets for uf: *unsigned_long_int is 401


Number of BDD nodes:                               210
Size of BDD node table:                            464047
Size of BDD cache:                                 46411
Size of BDD node cleanup queue:                        6942 (count: 124332, min: 0, max: 292, avg: 0.06)
Time for BDD node cleanup:                             0.018s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  1.384s
  Time for transition matches:                         0.770s
  Time for transition assertions:                      0.001s
  Time for transition actions:                         0.010s
Automaton transfers with branching:                0
Automaton transfer successors:                      1695244 (count: 1695244, min: 1, max: 1, avg: 1.00) [1 x 1695244]

CPA algorithm statistics
------------------------
Number of iterations:            1081795
Max size of waitlist:            174
Average size of waitlist:        56
Number of computed successors:   1189122
Max successors for one state:    2
Number of times merged:          48851
Number of times stopped:         97205
Number of times breaked:         1609

Total time for CPA algorithm:       236.476s (Max:    23.054s)
  Time for choose from waitlist:      0.282s
  Time for precision adjustment:    187.406s
  Time for transfer relation:        44.126s
  Time for merge operator:            1.081s
  Time for stop operator:             0.846s
  Time for adding to reached set:     1.057s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   1609
Avg. length of target path (in blocks):              229792 (count: 1609, min: 11, max: 504, avg: 142.82)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                 650.720s
  Counterexample analysis:                           648.036s (Max:     8.337s, Calls: 1609)
    Refinement sat check:                            574.303s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.091s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.198s
  Precision update:                                    0.663s
  ARG update:                                          1.163s

Length of refined path (in blocks):                  227790 (count: 1608, min: 10, max: 503, avg: 141.66)
Number of affected states:                            34203 (count: 1608, min: 6, max: 438, avg: 21.27)
Length (states) of path with itp 'true':             191979 (count: 1608, min: 1, max: 384, avg: 119.39)
Length (states) of path with itp non-trivial itp:     34203 (count: 1608, min: 6, max: 438, avg: 21.27)
Length (states) of path with itp 'false':              1608 (count: 1608, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 1608, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:           32595 (count: 1608, min: 5, max: 437, avg: 20.27)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                1609
Number of successful refinements:     1608
Number of failed refinements:         0
Max. size of reached set before ref.: 43949
Max. size of reached set after ref.:  42638
Avg. size of reached set before ref.: 6714.84
Avg. size of reached set after ref.:  6041.29

Total time for CEGAR algorithm:     897.081s
Time for refinements:               656.883s
Average time for refinement:          0.408s
Max time for refinement:              8.388s

Code Coverage
-----------------------------
  Function coverage:      0.374
  Visited lines:          5071
  Total lines:            8960
  Line coverage:          0.566
  Visited conditions:     604
  Total conditions:       1714
  Condition coverage:     0.352

CPAchecker general statistics
-----------------------------
Number of program locations:     11872
Number of CFA edges:             13466
Number of relevant variables:    1961
Number of functions:             479
Number of loops:                 56
Size of reached set:             43949
  Number of reached locations:   2178 (18%)
    Avg states per location:     20
    Max states per location:     1695 (at node N10845)
  Number of reached functions:   179 (37%)
  Number of partitions:          43926
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N9622 (before line 18014), Function zd_usb_init_hw called from node N3712, stack depth 3 [6e5f82c5], stack [main, zd_op_start, zd_usb_init_hw]])
  Number of target states:       1
  Size of final wait list        159

Time for analysis setup:          5.317s
  Time for loading CPAs:          0.786s
  Time for loading parser:        0.377s
  Time for CFA construction:      4.065s
    Time for parsing file(s):     0.793s
    Time for AST to CFA:          1.367s
    Time for CFA sanity check:    0.426s
    Time for post-processing:     1.373s
      Time for var class.:        0.722s
Time for Analysis:              897.081s
CPU time for analysis:          897.040s
Total time for CPAchecker:      902.401s
Total CPU time for CPAchecker:  902.350s
Time for statistics:              0.458s

Time for Garbage Collector:      15.035s (in 865 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                257MB (   245 MiB) max;    168MB (   160 MiB) avg;    267MB (   254 MiB) peak
Used non-heap memory:             42MB (    40 MiB) max;     41MB (    39 MiB) avg;     42MB (    40 MiB) peak
Allocated heap memory:           259MB (   247 MiB) max;    257MB (   245 MiB) avg
Allocated non-heap memory:        44MB (    42 MiB) max;     44MB (    42 MiB) avg
Total process virtual memory:  13259MB ( 12644 MiB) max;  12881MB ( 12284 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
