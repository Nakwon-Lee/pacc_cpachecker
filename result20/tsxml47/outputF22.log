scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 9600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-32_7a-drivers--media--i2c--cx25840--cx25840.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 9600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_nmesiwbs/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker 1.6.1-svn 6608050+ (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 3922: Dead code detected: __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

line 3925: Dead code detected: __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

line 3928: Dead code detected: __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (8UL) {
  case 1UL:
  __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& current_task));
  goto ldv_2861;
  case 2UL:
  __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_2861;
  case 4UL:
  __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_2861;
  case 8UL:
  __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_2861;
  default:
  __bad_percpu_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 10124: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 10716: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 11034: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 11778: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 13500: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 12633: Function pointer *(sd->v4l2_dev->notify) with type void (*)(struct v4l2_subdev *, unsigned int, void *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 12524: Function pointer *(sd->v4l2_dev->notify) with type void (*)(struct v4l2_subdev *, unsigned int, void *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 4030: Function pointer *(adap->algo->functionality) with type u32 (*)(struct i2c_adapter *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_handler_precall to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function i2c_transfer to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function v4l2_device_unregister_subdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function v4l2_ctrl_handler_free to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __kfifo_free to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function v4l2_chip_match_i2c_client to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function capable to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __init_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function lockdep_init_map to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __init_waitqueue_head to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function prepare_to_wait to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function queue_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function schedule to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function finish_wait to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function destroy_workqueue to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            177981 (17% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  175678 (99%)
  Because of loop head:            2034 (1%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         269 (0%)
  Times precision was empty:       98528 (55%)
  Times precision was {false}:     672 (0%)
  Times result was cached:         76412 (43%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      2369 (1%)
  Times result was 'false':        1696 (1%)
Number of strengthen sat checks:   0
Number of coverage checks:         60507
  BDD entailment checks:           14839
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       39
Number of predicates discovered:          8
Number of abstraction locations:          138
Max number of predicates per location:    7
Avg number of predicates per location:    5
Total predicates per abstraction:         415195
Max number of predicates per abstraction: 7
Avg number of predicates per abstraction: 136.53
Number of irrelevant predicates:          286306 (69%)
Number of preds handled by boolean abs:   7728 (2%)
  Total number of models for allsat:      2369
  Max number of models for allsat:        1
  Avg number of models for allsat:        1.00

Time for post operator:                  3.678s
  Time for path formula creation:        3.464s
Time for strengthen operator:            0.492s
Time for prec operator:                 10.444s
  Time for abstraction:                  9.606s (Max:     0.021s, Count: 177981)
    Boolean abstraction:                 0.870s
    Solving time:                        0.746s (Max:     0.015s)
    Model enumeration time:              0.054s
    Time for BDD construction:           0.084s (Max:     0.010s)
Time for merge operator:                 0.156s
Time for coverage check:                 0.038s
  Time for BDD entailment checks:        0.036s
Total time for SMT solver (w/o itp):     0.800s

Number of path formula cache hits:   1167990 (93%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     2.384s

Total number of created targets for pointer analysis: 7739
   Number of created targets for uf: *unsigned_char is 3016
   Number of created targets for uf: *unsigned_long_long_int is 181


Number of BDD nodes:                               375
Size of BDD node table:                            464047
Size of BDD cache:                                 46411
Size of BDD node cleanup queue:                        5139 (count: 131156, min: 0, max: 246, avg: 0.04)
Time for BDD node cleanup:                             0.015s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.819s
  Time for transition matches:                         0.530s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.003s
Automaton transfers with branching:                0
Automaton transfer successors:                      1070655 (count: 1070655, min: 1, max: 1, avg: 1.00) [1 x 1070655]

CPA algorithm statistics
------------------------
Number of iterations:            474071
Max size of waitlist:            60
Average size of waitlist:        34
Number of computed successors:   512015
Max successors for one state:    2
Number of times merged:          22834
Number of times stopped:         32623
Number of times breaked:         269

Total time for CPA algorithm:       890.658s (Max:    11.143s)
  Time for choose from waitlist:      0.175s
  Time for precision adjustment:     12.153s
  Time for transfer relation:       876.266s
  Time for merge operator:            0.395s
  Time for stop operator:             0.373s
  Time for adding to reached set:     0.485s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   269
Avg. length of target path (in blocks):               19475 (count: 269, min: 20, max: 124, avg: 72.40)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   3.352s
  Counterexample analysis:                             2.613s (Max:     0.038s, Calls: 269)
    Refinement sat check:                              1.564s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.007s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.049s
  Precision update:                                    0.106s
  ARG update:                                          0.482s

Length of refined path (in blocks):                   19206 (count: 269, min: 19, max: 123, avg: 71.40)
Number of affected states:                             7152 (count: 269, min: 6, max: 98, avg: 26.59)
Length (states) of path with itp 'true':              11785 (count: 269, min: 1, max: 86, avg: 43.81)
Length (states) of path with itp non-trivial itp:      7152 (count: 269, min: 6, max: 98, avg: 26.59)
Length (states) of path with itp 'false':               269 (count: 269, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 269, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:            6883 (count: 269, min: 5, max: 97, avg: 25.59)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                269
Number of successful refinements:     269
Number of failed refinements:         0
Max. size of reached set before ref.: 8059
Max. size of reached set after ref.:  3723
Avg. size of reached set before ref.: 3453.91
Avg. size of reached set after ref.:  1703.05

Total time for CEGAR algorithm:     894.957s
Time for refinements:                 4.119s
Average time for refinement:          0.015s
Max time for refinement:              0.054s

Code Coverage
-----------------------------
  Function coverage:      0.359
  Visited lines:          2035
  Total lines:            8196
  Line coverage:          0.248
  Visited conditions:     336
  Total conditions:       1696
  Condition coverage:     0.198

CPAchecker general statistics
-----------------------------
Number of program locations:     10071
Number of CFA edges:             14220
Number of relevant variables:    916
Number of functions:             237
Number of loops:                 20
Size of reached set:             6714
  Number of reached locations:   1233 (12%)
    Avg states per location:     5
    Max states per location:     315 (at node N142)
  Number of reached functions:   85 (36%)
  Number of partitions:          6694
    Avg size of partitions:      1
    Max size of partitions:      5 (with key [N6204 (before line 10055), Function main called from node N6037, stack depth 1 [2d3eb1ea], stack [main]])
  Number of target states:       0
  Size of final wait list        52

Time for analysis setup:          4.940s
  Time for loading CPAs:          0.677s
  Time for loading parser:        0.373s
  Time for CFA construction:      3.797s
    Time for parsing file(s):     0.733s
    Time for AST to CFA:          1.210s
    Time for CFA sanity check:    0.800s
    Time for post-processing:     0.968s
      Time for var class.:        0.483s
Time for Analysis:              894.957s
CPU time for analysis:          894.970s
Total time for CPAchecker:      899.900s
Total CPU time for CPAchecker:  899.900s
Time for statistics:              0.239s

Time for Garbage Collector:       2.441s (in 364 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                189MB (   180 MiB) max;    114MB (   109 MiB) avg;    194MB (   185 MiB) peak
Used non-heap memory:             39MB (    37 MiB) max;     39MB (    37 MiB) avg;     40MB (    38 MiB) peak
Allocated heap memory:           255MB (   243 MiB) max;    255MB (   243 MiB) avg
Allocated non-heap memory:        41MB (    39 MiB) max;     41MB (    39 MiB) avg
Total process virtual memory:  12149MB ( 11586 MiB) max;  12145MB ( 11582 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
