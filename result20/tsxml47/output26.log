scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 9600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-32_7a-drivers--media--i2c--cx25840--cx25840.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 9600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_22koueiq/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker 1.6.1-svn 6608050+ (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 3922: Dead code detected: __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

line 3925: Dead code detected: __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

line 3928: Dead code detected: __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (8UL) {
  case 1UL:
  __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& current_task));
  goto ldv_2861;
  case 2UL:
  __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_2861;
  case 4UL:
  __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_2861;
  case 8UL:
  __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_2861;
  default:
  __bad_percpu_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 10124: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 10716: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 11034: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 11778: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 13500: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 12633: Function pointer *(sd->v4l2_dev->notify) with type void (*)(struct v4l2_subdev *, unsigned int, void *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 12524: Function pointer *(sd->v4l2_dev->notify) with type void (*)(struct v4l2_subdev *, unsigned int, void *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 4030: Function pointer *(adap->algo->functionality) with type u32 (*)(struct i2c_adapter *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_handler_precall to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __kfifo_free to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 4030: Ignoring function call through function pointer *(adap->algo->functionality): tmp = (*(adap->algo->functionality))(adap); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function v4l2_device_unregister_subdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function v4l2_ctrl_handler_free to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function i2c_transfer to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function v4l2_chip_match_i2c_client to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function capable to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            49047 (15% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  46931 (96%)
  Because of loop head:            1983 (4%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         133 (0%)
  Times precision was empty:       16541 (34%)
  Times precision was {false}:     464 (1%)
  Times result was cached:         30440 (62%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      1602 (3%)
  Times result was 'false':        1889 (4%)
Number of strengthen sat checks:   0
Number of coverage checks:         27459
  BDD entailment checks:           3593
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       39
Number of predicates discovered:          6
Number of abstraction locations:          133
Max number of predicates per location:    5
Avg number of predicates per location:    4
Total predicates per abstraction:         142013
Max number of predicates per abstraction: 5
Avg number of predicates per abstraction: 68.74
Number of irrelevant predicates:          61193 (43%)
Number of preds handled by boolean abs:   4283 (3%)
  Total number of models for allsat:      1602
  Max number of models for allsat:        1
  Avg number of models for allsat:        1.00

Time for post operator:                  2.370s
  Time for path formula creation:        2.248s
Time for strengthen operator:            0.208s
Time for prec operator:                  7.723s
  Time for abstraction:                  7.188s (Max:     0.016s, Count: 49047)
    Boolean abstraction:                 0.847s
    Solving time:                        0.719s (Max:     0.013s)
    Model enumeration time:              0.066s
    Time for BDD construction:           0.059s (Max:     0.009s)
Time for merge operator:                 0.073s
Time for coverage check:                 0.047s
  Time for BDD entailment checks:        0.046s
Total time for SMT solver (w/o itp):     0.785s

Number of path formula cache hits:   347325 (93%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     1.750s

Total number of created targets for pointer analysis: 688
   Number of created targets for uf: *unsigned_char is 243
   Number of created targets for uf: *_Bool is 2
   Number of created targets for uf: *unsigned_long_long_int is 16


Number of BDD nodes:                               228
Size of BDD node table:                            464047
Size of BDD cache:                                 46411
Size of BDD node cleanup queue:                        3263 (count: 32114, min: 0, max: 392, avg: 0.10)
Time for BDD node cleanup:                             0.022s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.472s
Automaton transfers with branching:                0
Automaton transfer successors:                       317426 (count: 317426, min: 1, max: 1, avg: 1.00) [1 x 317426]

CPA algorithm statistics
------------------------
Number of iterations:            163347
Max size of waitlist:            87
Average size of waitlist:        36
Number of computed successors:   188077
Max successors for one state:    2
Number of times merged:          11933
Number of times stopped:         14706
Number of times breaked:         133

Total time for CPA algorithm:        23.789s (Max:     0.705s)
  Time for choose from waitlist:      0.142s
  Time for precision adjustment:      8.894s
  Time for transfer relation:        13.098s
  Time for merge operator:            0.265s
  Time for stop operator:             0.272s
  Time for adding to reached set:     0.377s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   133
Avg. length of target path (in blocks):                3369 (count: 133, min: 6, max: 69, avg: 25.33)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   1.449s
  Counterexample analysis:                             0.929s (Max:     0.023s, Calls: 133)
    Refinement sat check:                              0.638s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.002s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.054s
  Precision update:                                    0.090s
  ARG update:                                          0.295s

Length of refined path (in blocks):                    3236 (count: 133, min: 5, max: 68, avg: 24.33)
Number of affected states:                             2970 (count: 133, min: 3, max: 66, avg: 22.33)
Length (states) of path with itp 'true':                133 (count: 133, min: 1, max: 1, avg: 1.00)
Length (states) of path with itp non-trivial itp:      2970 (count: 133, min: 3, max: 66, avg: 22.33)
Length (states) of path with itp 'false':               133 (count: 133, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 133, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:            2837 (count: 133, min: 2, max: 65, avg: 21.33)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                133
Number of successful refinements:     133
Number of failed refinements:         0
Max. size of reached set before ref.: 3273
Max. size of reached set after ref.:  6
Avg. size of reached set before ref.: 1274.16
Avg. size of reached set after ref.:  6.00

Total time for CEGAR algorithm:      25.445s
Time for refinements:                 1.654s
Average time for refinement:          0.012s
Max time for refinement:              0.059s

Code Coverage
-----------------------------
  Function coverage:      0.304
  Visited lines:          2342
  Total lines:            8196
  Line coverage:          0.286
  Visited conditions:     546
  Total conditions:       1696
  Condition coverage:     0.322

CPAchecker general statistics
-----------------------------
Number of program locations:     10071
Number of CFA edges:             14220
Number of relevant variables:    916
Number of functions:             237
Number of loops:                 20
Size of reached set:             2817
  Number of reached locations:   1417 (14%)
    Avg states per location:     1
    Max states per location:     37 (at node N155)
  Number of reached functions:   72 (30%)
  Number of partitions:          2817
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0
  Size of final wait list        45

Time for analysis setup:          4.897s
  Time for loading CPAs:          0.765s
  Time for loading parser:        0.431s
  Time for CFA construction:      3.613s
    Time for parsing file(s):     0.735s
    Time for AST to CFA:          1.194s
    Time for CFA sanity check:    0.621s
    Time for post-processing:     0.988s
      Time for var class.:        0.494s
Time for Analysis:               25.445s
CPU time for analysis:           25.440s
Total time for CPAchecker:       30.344s
Total CPU time for CPAchecker:   30.330s
Time for statistics:              0.116s

Time for Garbage Collector:       0.557s (in 56 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                133MB (   127 MiB) max;     89MB (    84 MiB) avg;    141MB (   135 MiB) peak
Used non-heap memory:             46MB (    44 MiB) max;     41MB (    39 MiB) avg;     46MB (    44 MiB) peak
Allocated heap memory:           255MB (   243 MiB) max;    255MB (   243 MiB) avg
Allocated non-heap memory:        48MB (    45 MiB) max;     43MB (    41 MiB) avg
Total process virtual memory:  12149MB ( 11586 MiB) max;  12138MB ( 11575 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
