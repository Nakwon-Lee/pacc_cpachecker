scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 9600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-32_7a-drivers--media--i2c--cx25840--cx25840.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 9600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_rewif6_w/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker 1.6.1-svn 6608050+ (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 3922: Dead code detected: __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

line 3925: Dead code detected: __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

line 3928: Dead code detected: __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (8UL) {
  case 1UL:
  __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& current_task));
  goto ldv_2861;
  case 2UL:
  __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_2861;
  case 4UL:
  __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_2861;
  case 8UL:
  __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_2861;
  default:
  __bad_percpu_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 10124: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 10716: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 11034: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 11778: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 13500: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 12633: Function pointer *(sd->v4l2_dev->notify) with type void (*)(struct v4l2_subdev *, unsigned int, void *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 12524: Function pointer *(sd->v4l2_dev->notify) with type void (*)(struct v4l2_subdev *, unsigned int, void *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 4030: Function pointer *(adap->algo->functionality) with type u32 (*)(struct i2c_adapter *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_handler_precall to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function i2c_transfer to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function v4l2_device_unregister_subdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function v4l2_ctrl_handler_free to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __kfifo_free to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function v4l2_chip_match_i2c_client to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function capable to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __init_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function lockdep_init_map to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __init_waitqueue_head to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function prepare_to_wait to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function queue_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function schedule to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function finish_wait to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function destroy_workqueue to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            6028 (17% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  5903 (98%)
  Because of loop head:            100 (2%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         25 (0%)
  Times precision was empty:       3971 (66%)
  Times precision was {false}:     135 (2%)
  Times result was cached:         1653 (27%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      269 (4%)
  Times result was 'false':        81 (1%)
Number of strengthen sat checks:   0
Number of coverage checks:         2077
  BDD entailment checks:           401
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       39
Number of predicates discovered:          8
Number of abstraction locations:          79
Max number of predicates per location:    7
Avg number of predicates per location:    2
Total predicates per abstraction:         4492
Max number of predicates per abstraction: 7
Avg number of predicates per abstraction: 11.12
Number of irrelevant predicates:          2563 (57%)
Number of preds handled by boolean abs:   533 (12%)
  Total number of models for allsat:      269
  Max number of models for allsat:        1
  Avg number of models for allsat:        1.00

Time for post operator:                  0.947s
  Time for path formula creation:        0.909s
Time for strengthen operator:            0.026s
Time for prec operator:                  1.001s
  Time for abstraction:                  0.858s (Max:     0.017s, Count: 6028)
    Boolean abstraction:                 0.161s
    Solving time:                        0.129s (Max:     0.015s)
    Model enumeration time:              0.018s
    Time for BDD construction:           0.018s (Max:     0.008s)
Time for merge operator:                 0.016s
Time for coverage check:                 0.011s
  Time for BDD entailment checks:        0.011s
Total time for SMT solver (w/o itp):     0.147s

Number of path formula cache hits:   32379 (80%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.813s

Total number of created targets for pointer analysis: 580
   Number of created targets for uf: *unsigned_char is 93
   Number of created targets for uf: *unsigned_long_long_int is 16


Number of BDD nodes:                               232
Size of BDD node table:                            464047
Size of BDD cache:                                 46411
Size of BDD node cleanup queue:                         625 (count: 6737, min: 0, max: 307, avg: 0.09)
Time for BDD node cleanup:                             0.002s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.086s
Automaton transfers with branching:                0
Automaton transfer successors:                        34970 (count: 34970, min: 1, max: 1, avg: 1.00) [1 x 34970]

CPA algorithm statistics
------------------------
Number of iterations:            16471
Max size of waitlist:            35
Average size of waitlist:        26
Number of computed successors:   18044
Max successors for one state:    2
Number of times merged:          838
Number of times stopped:         1112
Number of times breaked:         25

Total time for CPA algorithm:        25.318s (Max:     5.933s)
  Time for choose from waitlist:      0.021s
  Time for precision adjustment:      1.331s
  Time for transfer relation:        23.615s
  Time for merge operator:            0.058s
  Time for stop operator:             0.063s
  Time for adding to reached set:     0.056s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   25
Avg. length of target path (in blocks):                1186 (count: 25, min: 6, max: 88, avg: 47.44)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.375s
  Counterexample analysis:                             0.264s (Max:     0.027s, Calls: 25)
    Refinement sat check:                              0.155s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.023s
  Precision update:                                    0.027s
  ARG update:                                          0.042s

Length of refined path (in blocks):                    1161 (count: 25, min: 5, max: 87, avg: 46.44)
Number of affected states:                              772 (count: 25, min: 3, max: 85, avg: 30.88)
Length (states) of path with itp 'true':                364 (count: 25, min: 1, max: 28, avg: 14.56)
Length (states) of path with itp non-trivial itp:       772 (count: 25, min: 3, max: 85, avg: 30.88)
Length (states) of path with itp 'false':                25 (count: 25, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 25, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:             747 (count: 25, min: 2, max: 84, avg: 29.88)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                25
Number of successful refinements:     25
Number of failed refinements:         0
Max. size of reached set before ref.: 3465
Max. size of reached set after ref.:  560
Avg. size of reached set before ref.: 916.56
Avg. size of reached set after ref.:  265.68

Total time for CEGAR algorithm:      25.791s
Time for refinements:                 0.456s
Average time for refinement:          0.018s
Max time for refinement:              0.045s

Code Coverage
-----------------------------
  Function coverage:      0.249
  Visited lines:          1092
  Total lines:            8196
  Line coverage:          0.133
  Visited conditions:     114
  Total conditions:       1696
  Condition coverage:     0.067

CPAchecker general statistics
-----------------------------
Number of program locations:     10071
Number of CFA edges:             14220
Number of relevant variables:    916
Number of functions:             237
Number of loops:                 20
Size of reached set:             579
  Number of reached locations:   402 (4%)
    Avg states per location:     1
    Max states per location:     14 (at node N84)
  Number of reached functions:   59 (25%)
  Number of partitions:          576
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N6216 (before line 10071), Function main called from node N6037, stack depth 1 [74a03bd5], stack [main]])
  Number of target states:       0
  Size of final wait list        32

Time for analysis setup:          4.617s
  Time for loading CPAs:          0.730s
  Time for loading parser:        0.406s
  Time for CFA construction:      3.396s
    Time for parsing file(s):     0.714s
    Time for AST to CFA:          1.205s
    Time for CFA sanity check:    0.461s
    Time for post-processing:     0.917s
      Time for var class.:        0.503s
Time for Analysis:               25.791s
CPU time for analysis:           25.790s
Total time for CPAchecker:       30.410s
Total CPU time for CPAchecker:   30.390s
Time for statistics:              0.084s

Time for Garbage Collector:       0.294s (in 17 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                124MB (   118 MiB) max;     81MB (    78 MiB) avg;    129MB (   123 MiB) peak
Used non-heap memory:             38MB (    37 MiB) max;     35MB (    33 MiB) avg;     39MB (    37 MiB) peak
Allocated heap memory:           255MB (   243 MiB) max;    255MB (   243 MiB) avg
Allocated non-heap memory:        40MB (    38 MiB) max;     37MB (    35 MiB) avg
Total process virtual memory:  12144MB ( 11582 MiB) max;  12136MB ( 11574 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
