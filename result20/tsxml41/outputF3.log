scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 9600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/linux-3.8-rc1-32_7a-drivers--input--misc--uinput.ko-ldv_main0_true-unreach-call.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 9600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_e0ygq6na/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker 1.6.1-svn 6608050+ (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 3102: Dead code detected: __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

line 3105: Dead code detected: __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

line 3108: Dead code detected: __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (8UL) {
  case 1UL:
  __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& current_task));
  goto ldv_2869;
  case 2UL:
  __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_2869;
  case 4UL:
  __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_2869;
  case 8UL:
  __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_2869;
  default:
  __bad_percpu_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 3177: Dead code detected: __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& kernel_stack)); (CFACreationUtils.addEdgeToCFA, INFO)

line 3180: Dead code detected: __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack)); (CFACreationUtils.addEdgeToCFA, INFO)

line 3183: Dead code detected: __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (8UL) {
  case 1UL:
  __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& kernel_stack));
  goto ldv_6226;
  case 2UL:
  __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack));
  goto ldv_6226;
  case 4UL:
  __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack));
  goto ldv_6226;
  case 8UL:
  __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack));
  goto ldv_6226;
  default:
  __bad_percpu_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 4975: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 4999: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 5023: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 5047: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 5071: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 3344: Function pointer *(p->_qproc) with type void (*)(struct file *, wait_queue_head_t *, struct poll_table_struct *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_handler_precall to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function misc_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function misc_deregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 3344: Ignoring function call through function pointer *(p->_qproc): (*(p->_qproc))(filp, wait_address, p); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function input_free_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __mutex_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strndup_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memdup_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 3300: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((const void *)to, 0); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function __builtin_object_size to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function might_fault to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_ff_create to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_register_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_ff_destroy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __wake_up to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function complete to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __raw_spin_lock_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __init_waitqueue_head to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function nonseekable_open to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _copy_from_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_unregister_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function kstrndup to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_fmt to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _copy_to_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function prepare_to_wait to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function finish_wait to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_alloc_absinfo to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_event_from_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_event to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function schedule to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_mt_init_slots to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_event_to_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            791724 (19% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  768658 (97%)
  Because of loop head:            22182 (3%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         884 (0%)
  Times precision was empty:       33996 (4%)
  Times precision was {false}:     859 (0%)
  Times result was cached:         747618 (94%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      9251 (1%)
  Times result was 'false':        59785 (8%)
Number of strengthen sat checks:   0
Number of coverage checks:         547780
  BDD entailment checks:           209952
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       24
Number of predicates discovered:          45
Number of abstraction locations:          201
Max number of predicates per location:    10
Avg number of predicates per location:    4
Total predicates per abstraction:         3174135
Max number of predicates per abstraction: 10
Avg number of predicates per abstraction: 313.96
Number of irrelevant predicates:          977934 (31%)
Number of preds handled by boolean abs:   30160 (1%)
  Total number of models for allsat:      12500
  Max number of models for allsat:        8
  Avg number of models for allsat:        1.35

Time for post operator:                 13.045s
  Time for path formula creation:       12.034s
Time for strengthen operator:            1.985s
Time for prec operator:                103.469s
  Time for abstraction:                 98.686s (Max:     0.396s, Count: 791724)
    Boolean abstraction:                 5.767s
    Solving time:                        4.675s (Max:     0.015s)
    Model enumeration time:              0.587s
    Time for BDD construction:           0.269s (Max:     0.012s)
Time for merge operator:                 0.770s
Time for coverage check:                 0.213s
  Time for BDD entailment checks:        0.171s
Total time for SMT solver (w/o itp):     5.262s

Number of path formula cache hits:   4608398 (94%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     7.693s

Total number of created targets for pointer analysis: 5547
   Number of created targets for uf: *(char)* is 43
   Number of created targets for uf: *unsigned_char is 51
   Number of created targets for uf: *(struct_input_dev)* is 85
   Number of created targets for uf: *enum_uinput_state is 72
   Number of created targets for uf: *(struct_uinput_request)* is 3809
   Number of created targets for uf: *unsigned_int is 168


Number of BDD nodes:                               4492
Size of BDD node table:                            464047
Size of BDD cache:                                 46411
Size of BDD node cleanup queue:                       22380 (count: 306719, min: 0, max: 491, avg: 0.07)
Time for BDD node cleanup:                             0.023s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  3.451s
  Time for transition matches:                         1.788s
  Time for transition assertions:                      0.001s
  Time for transition actions:                         0.001s
Automaton transfers with branching:                0
Automaton transfer successors:                      4083143 (count: 4083143, min: 1, max: 1, avg: 1.00) [1 x 4083143]

CPA algorithm statistics
------------------------
Number of iterations:            2973189
Max size of waitlist:            313
Average size of waitlist:        131
Number of computed successors:   3354484
Max successors for one state:    2
Number of times merged:          168914
Number of times stopped:         284143
Number of times breaked:         884

Total time for CPA algorithm:       167.669s (Max:     1.593s)
  Time for choose from waitlist:      0.927s
  Time for precision adjustment:    117.636s
  Time for transfer relation:        36.351s
  Time for merge operator:            2.499s
  Time for stop operator:             2.331s
  Time for adding to reached set:     3.224s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   884
Avg. length of target path (in blocks):               33001 (count: 884, min: 7, max: 99, avg: 37.33)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  10.255s
  Counterexample analysis:                             6.167s (Max:     0.034s, Calls: 884)
    Refinement sat check:                              3.376s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.016s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.173s
  Precision update:                                    0.372s
  ARG update:                                          3.283s

Length of refined path (in blocks):                   29943 (count: 884, min: 6, max: 90, avg: 33.87)
Number of affected states:                            13463 (count: 884, min: 1, max: 82, avg: 15.23)
Length (states) of path with itp 'true':              15596 (count: 884, min: 0, max: 69, avg: 17.64)
Length (states) of path with itp non-trivial itp:     13463 (count: 884, min: 1, max: 82, avg: 15.23)
Length (states) of path with itp 'false':               884 (count: 884, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:         985 (count: 884, min: 0, max: 6, avg: 1.11)
Equal non-trivial interpolants along paths:           11594 (count: 884, min: 0, max: 81, avg: 13.12)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                884
Number of successful refinements:     884
Number of failed refinements:         0
Max. size of reached set before ref.: 26441
Max. size of reached set after ref.:  25655
Avg. size of reached set before ref.: 12314.20
Avg. size of reached set after ref.:  8937.36

Total time for CEGAR algorithm:     187.399s
Time for refinements:                15.980s
Average time for refinement:          0.018s
Max time for refinement:              0.074s

Code Coverage
-----------------------------
  Function coverage:      0.642
  Visited lines:          1444
  Total lines:            1738
  Line coverage:          0.831
  Visited conditions:     326
  Total conditions:       418
  Condition coverage:     0.780

CPAchecker general statistics
-----------------------------
Number of program locations:     2425
Number of CFA edges:             2701
Number of relevant variables:    375
Number of functions:             109
Number of loops:                 9
Size of reached set:             25430
  Number of reached locations:   937 (39%)
    Avg states per location:     27
    Max states per location:     667 (at node N1690)
  Number of reached functions:   70 (64%)
  Number of partitions:          25209
    Avg size of partitions:      1
    Max size of partitions:      5 (with key [N1569 (before line 4919), Function main called from node N1461, stack depth 1 [7bfc3126], stack [main]])
  Number of target states:       0

Time for analysis setup:          2.888s
  Time for loading CPAs:          0.534s
  Time for loading parser:        0.394s
  Time for CFA construction:      1.877s
    Time for parsing file(s):     0.570s
    Time for AST to CFA:          0.636s
    Time for CFA sanity check:    0.138s
    Time for post-processing:     0.441s
      Time for var class.:        0.206s
Time for Analysis:              187.399s
CPU time for analysis:          187.390s
Time for analyzing result:        0.013s
Total time for CPAchecker:      190.289s
Total CPU time for CPAchecker:  190.280s
Time for statistics:              0.318s

Time for Garbage Collector:      13.581s (in 826 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                344MB (   328 MiB) max;    170MB (   162 MiB) avg;    353MB (   337 MiB) peak
Used non-heap memory:             41MB (    39 MiB) max;     39MB (    37 MiB) avg;     41MB (    39 MiB) peak
Allocated heap memory:           363MB (   346 MiB) max;    286MB (   273 MiB) avg
Allocated non-heap memory:        43MB (    41 MiB) max;     42MB (    40 MiB) avg
Total process virtual memory:  12146MB ( 11583 MiB) max;  12108MB ( 11547 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
