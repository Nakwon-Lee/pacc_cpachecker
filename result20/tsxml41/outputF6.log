scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 9600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/linux-3.8-rc1-32_7a-drivers--input--misc--uinput.ko-ldv_main0_true-unreach-call.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 9600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_0o6kyngj/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker 1.6.1-svn 6608050+ (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 3102: Dead code detected: __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

line 3105: Dead code detected: __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

line 3108: Dead code detected: __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (8UL) {
  case 1UL:
  __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& current_task));
  goto ldv_2869;
  case 2UL:
  __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_2869;
  case 4UL:
  __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_2869;
  case 8UL:
  __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_2869;
  default:
  __bad_percpu_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 3177: Dead code detected: __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& kernel_stack)); (CFACreationUtils.addEdgeToCFA, INFO)

line 3180: Dead code detected: __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack)); (CFACreationUtils.addEdgeToCFA, INFO)

line 3183: Dead code detected: __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (8UL) {
  case 1UL:
  __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& kernel_stack));
  goto ldv_6226;
  case 2UL:
  __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack));
  goto ldv_6226;
  case 4UL:
  __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack));
  goto ldv_6226;
  case 8UL:
  __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack));
  goto ldv_6226;
  default:
  __bad_percpu_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 4975: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 4999: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 5023: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 5047: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 5071: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 3344: Function pointer *(p->_qproc) with type void (*)(struct file *, wait_queue_head_t *, struct poll_table_struct *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_handler_precall to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function misc_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strndup_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 3300: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((const void *)to, 0); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function __builtin_object_size to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function might_fault to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_free_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __wake_up to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function complete to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_ff_create to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_register_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_ff_destroy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_unregister_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _copy_from_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_fmt to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _copy_to_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 3344: Ignoring function call through function pointer *(p->_qproc): (*(p->_qproc))(filp, wait_address, p); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function misc_deregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memdup_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function kstrndup to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_event_from_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_event to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_alloc_absinfo to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_mt_init_slots to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __mutex_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __raw_spin_lock_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __init_waitqueue_head to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function nonseekable_open to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_event_to_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function prepare_to_wait to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function finish_wait to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function schedule to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            2136444 (20% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  2077028 (97%)
  Because of loop head:            55892 (3%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         3524 (0%)
  Times precision was empty:       161404 (8%)
  Times precision was {false}:     1082 (0%)
  Times result was cached:         1938885 (91%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      35073 (2%)
  Times result was 'false':        144678 (7%)
Number of strengthen sat checks:   0
Number of coverage checks:         1488395
  BDD entailment checks:           510501
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       24
Number of predicates discovered:          55
Number of abstraction locations:          201
Max number of predicates per location:    15
Avg number of predicates per location:    5
Total predicates per abstraction:         9188563
Max number of predicates per abstraction: 15
Avg number of predicates per abstraction: 254.14
Number of irrelevant predicates:          3485512 (38%)
Number of preds handled by boolean abs:   136167 (1%)
  Total number of models for allsat:      73026
  Max number of models for allsat:        54
  Avg number of models for allsat:        2.08

Time for post operator:                 29.866s
  Time for path formula creation:       27.768s
Time for strengthen operator:            4.544s
Time for prec operator:                287.445s
  Time for abstraction:                276.363s (Max:     0.987s, Count: 2136444)
    Boolean abstraction:                22.982s
    Solving time:                       17.171s (Max:     0.015s)
    Model enumeration time:              3.269s
    Time for BDD construction:           0.688s (Max:     0.010s)
Time for merge operator:                 1.989s
Time for coverage check:                 0.324s
  Time for BDD entailment checks:        0.253s
Total time for SMT solver (w/o itp):    20.440s

Number of path formula cache hits:   12296398 (93%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    17.441s

Total number of created targets for pointer analysis: 25286
   Number of created targets for uf: *(char)* is 10
   Number of created targets for uf: *unsigned_char is 777
   Number of created targets for uf: *(struct_input_dev)* is 267
   Number of created targets for uf: *enum_uinput_state is 401
   Number of created targets for uf: *(struct_uinput_request)* is 16625
   Number of created targets for uf: *unsigned_int is 1559


Number of BDD nodes:                               19847
Size of BDD node table:                            464047
Size of BDD cache:                                 46411
Size of BDD node cleanup queue:                       76380 (count: 895930, min: 0, max: 1550, avg: 0.09)
Time for BDD node cleanup:                             0.088s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  7.544s
  Time for transition matches:                         4.355s
  Time for transition assertions:                      0.016s
  Time for transition actions:                         0.012s
Automaton transfers with branching:                0
Automaton transfer successors:                     10905596 (count: 10905596, min: 1, max: 1, avg: 1.00) [1 x 10905596]

CPA algorithm statistics
------------------------
Number of iterations:            8052702
Max size of waitlist:            54
Average size of waitlist:        24
Number of computed successors:   9064160
Max successors for one state:    2
Number of times merged:          488947
Number of times stopped:         855305
Number of times breaked:         3524

Total time for CPA algorithm:       429.567s (Max:     4.010s)
  Time for choose from waitlist:      1.484s
  Time for precision adjustment:    318.060s
  Time for transfer relation:        82.337s
  Time for merge operator:            5.027s
  Time for stop operator:             5.223s
  Time for adding to reached set:     6.767s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   3524
Avg. length of target path (in blocks):              180588 (count: 3524, min: 7, max: 149, avg: 51.25)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  41.428s
  Counterexample analysis:                            30.995s (Max:     0.060s, Calls: 3524)
    Refinement sat check:                             16.416s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.070s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.355s
  Precision update:                                    1.104s
  ARG update:                                          8.231s

Length of refined path (in blocks):                  168958 (count: 3524, min: 6, max: 141, avg: 47.94)
Number of affected states:                            57159 (count: 3524, min: 1, max: 100, avg: 16.22)
Length (states) of path with itp 'true':             108275 (count: 3524, min: 0, max: 123, avg: 30.73)
Length (states) of path with itp non-trivial itp:     57159 (count: 3524, min: 1, max: 100, avg: 16.22)
Length (states) of path with itp 'false':              3524 (count: 3524, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:        4776 (count: 3524, min: 0, max: 11, avg: 1.36)
Equal non-trivial interpolants along paths:           48859 (count: 3524, min: 0, max: 99, avg: 13.86)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                3524
Number of successful refinements:     3524
Number of failed refinements:         0
Max. size of reached set before ref.: 44382
Max. size of reached set after ref.:  42679
Avg. size of reached set before ref.: 17970.07
Avg. size of reached set after ref.:  15690.85

Total time for CEGAR algorithm:     529.059s
Time for refinements:                73.954s
Average time for refinement:          0.020s
Max time for refinement:              0.402s

Code Coverage
-----------------------------
  Function coverage:      0.642
  Visited lines:          1444
  Total lines:            1738
  Line coverage:          0.831
  Visited conditions:     326
  Total conditions:       418
  Condition coverage:     0.780

CPAchecker general statistics
-----------------------------
Number of program locations:     2425
Number of CFA edges:             2701
Number of relevant variables:    375
Number of functions:             109
Number of loops:                 9
Size of reached set:             32211
  Number of reached locations:   937 (39%)
    Avg states per location:     34
    Max states per location:     798 (at node N1690)
  Number of reached functions:   70 (64%)
  Number of partitions:          31984
    Avg size of partitions:      1
    Max size of partitions:      6 (with key [N1569 (before line 4919), Function main called from node N1461, stack depth 1 [7bfc3126], stack [main]])
  Number of target states:       0

Time for analysis setup:          2.846s
  Time for loading CPAs:          0.515s
  Time for loading parser:        0.369s
  Time for CFA construction:      1.908s
    Time for parsing file(s):     0.566s
    Time for AST to CFA:          0.663s
    Time for CFA sanity check:    0.142s
    Time for post-processing:     0.455s
      Time for var class.:        0.209s
Time for Analysis:              529.059s
CPU time for analysis:          529.060s
Time for analyzing result:        0.017s
Total time for CPAchecker:      531.908s
Total CPU time for CPAchecker:  531.900s
Time for statistics:              0.324s

Time for Garbage Collector:      37.808s (in 1614 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                800MB (   763 MiB) max;    329MB (   314 MiB) avg;    838MB (   799 MiB) peak
Used non-heap memory:             41MB (    39 MiB) max;     40MB (    38 MiB) avg;     41MB (    39 MiB) peak
Allocated heap memory:           881MB (   840 MiB) max;    490MB (   467 MiB) avg
Allocated non-heap memory:        43MB (    41 MiB) max;     43MB (    41 MiB) avg
Total process virtual memory:  12553MB ( 11971 MiB) max;  12233MB ( 11666 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
