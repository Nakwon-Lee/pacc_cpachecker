scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 9600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/linux-3.8-rc1-32_7a-drivers--input--misc--uinput.ko-ldv_main0_true-unreach-call.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 9600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_og9rojpa/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker 1.6.1-svn 6608050+ (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 3102: Dead code detected: __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

line 3105: Dead code detected: __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

line 3108: Dead code detected: __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (8UL) {
  case 1UL:
  __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& current_task));
  goto ldv_2869;
  case 2UL:
  __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_2869;
  case 4UL:
  __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_2869;
  case 8UL:
  __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_2869;
  default:
  __bad_percpu_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 3177: Dead code detected: __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& kernel_stack)); (CFACreationUtils.addEdgeToCFA, INFO)

line 3180: Dead code detected: __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack)); (CFACreationUtils.addEdgeToCFA, INFO)

line 3183: Dead code detected: __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (8UL) {
  case 1UL:
  __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& kernel_stack));
  goto ldv_6226;
  case 2UL:
  __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack));
  goto ldv_6226;
  case 4UL:
  __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack));
  goto ldv_6226;
  case 8UL:
  __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack));
  goto ldv_6226;
  default:
  __bad_percpu_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 4975: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 4999: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 5023: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 5047: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 5071: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 3344: Function pointer *(p->_qproc) with type void (*)(struct file *, wait_queue_head_t *, struct poll_table_struct *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_handler_precall to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function misc_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function misc_deregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __mutex_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __raw_spin_lock_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __init_waitqueue_head to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function nonseekable_open to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function prepare_to_wait to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function finish_wait to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_event_to_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_free_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_event_from_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_event to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __wake_up to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function complete to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_unregister_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 3344: Ignoring function call through function pointer *(p->_qproc): (*(p->_qproc))(filp, wait_address, p); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function strndup_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_ff_create to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_register_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_ff_destroy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            29830 (17% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  26417 (89%)
  Because of loop head:            3163 (11%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         250 (1%)
  Times precision was empty:       3307 (11%)
  Times precision was {false}:     460 (2%)
  Times result was cached:         20459 (69%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      5604 (19%)
  Times result was 'false':        3735 (13%)
Number of strengthen sat checks:   0
Number of coverage checks:         28726
  BDD entailment checks:           10716
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       24
Number of predicates discovered:          52
Number of abstraction locations:          98
Max number of predicates per location:    19
Avg number of predicates per location:    6
Total predicates per abstraction:         146175
Max number of predicates per abstraction: 19
Avg number of predicates per abstraction: 24.11
Number of irrelevant predicates:          23675 (16%)
Number of preds handled by boolean abs:   29296 (20%)
  Total number of models for allsat:      8121
  Max number of models for allsat:        24
  Avg number of models for allsat:        1.45

Time for post operator:                  2.898s
  Time for path formula creation:        2.804s
Time for strengthen operator:            0.182s
Time for prec operator:                 16.227s
  Time for abstraction:                 15.876s (Max:     0.025s, Count: 29830)
    Boolean abstraction:                 4.992s
    Solving time:                        3.770s (Max:     0.030s)
    Model enumeration time:              0.497s
    Time for BDD construction:           0.225s (Max:     0.013s)
Time for merge operator:                 0.282s
Time for coverage check:                 0.052s
  Time for BDD entailment checks:        0.045s
Total time for SMT solver (w/o itp):     4.267s

Number of path formula cache hits:   152826 (77%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     2.501s

Total number of created targets for pointer analysis: 1190
   Number of created targets for uf: *unsigned_char is 21
   Number of created targets for uf: *(struct_input_dev)* is 128
   Number of created targets for uf: *enum_uinput_state is 26
   Number of created targets for uf: *(struct_uinput_request)* is 785
   Number of created targets for uf: *unsigned_int is 13


Number of BDD nodes:                               11054
Size of BDD node table:                            464047
Size of BDD cache:                                 46411
Size of BDD node cleanup queue:                       23576 (count: 55956, min: 0, max: 1710, avg: 0.42)
Time for BDD node cleanup:                             0.033s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.340s
Automaton transfers with branching:                0
Automaton transfer successors:                       172036 (count: 172036, min: 1, max: 1, avg: 1.00) [1 x 172036]

CPA algorithm statistics
------------------------
Number of iterations:            120145
Max size of waitlist:            95
Average size of waitlist:        26
Number of computed successors:   141441
Max successors for one state:    2
Number of times merged:          9005
Number of times stopped:         12849
Number of times breaked:         250

Total time for CPA algorithm:        23.532s (Max:     0.594s)
  Time for choose from waitlist:      0.097s
  Time for precision adjustment:     17.153s
  Time for transfer relation:         4.938s
  Time for merge operator:            0.448s
  Time for stop operator:             0.236s
  Time for adding to reached set:     0.225s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   250
Avg. length of target path (in blocks):               12791 (count: 250, min: 7, max: 164, avg: 51.16)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   3.562s
  Counterexample analysis:                             2.979s (Max:     0.098s, Calls: 250)
    Refinement sat check:                              1.576s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.005s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.101s
  Precision update:                                    0.152s
  ARG update:                                          0.217s

Length of refined path (in blocks):                    7846 (count: 250, min: 6, max: 144, avg: 31.38)
Number of affected states:                             3915 (count: 250, min: 1, max: 142, avg: 15.66)
Length (states) of path with itp 'true':               3681 (count: 250, min: 0, max: 67, avg: 14.72)
Length (states) of path with itp non-trivial itp:      3915 (count: 250, min: 1, max: 142, avg: 15.66)
Length (states) of path with itp 'false':               250 (count: 250, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:         122 (count: 250, min: 0, max: 6, avg: 0.49)
Equal non-trivial interpolants along paths:            3543 (count: 250, min: 0, max: 141, avg: 14.17)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                250
Number of successful refinements:     250
Number of failed refinements:         0
Max. size of reached set before ref.: 2603
Max. size of reached set after ref.:  1399
Avg. size of reached set before ref.: 711.34
Avg. size of reached set after ref.:  221.16

Total time for CEGAR algorithm:      27.395s
Time for refinements:                 3.827s
Average time for refinement:          0.015s
Max time for refinement:              0.102s

Code Coverage
-----------------------------
  Function coverage:      0.385
  Visited lines:          1046
  Total lines:            1738
  Line coverage:          0.602
  Visited conditions:     190
  Total conditions:       418
  Condition coverage:     0.455

CPAchecker general statistics
-----------------------------
Number of program locations:     2425
Number of CFA edges:             2701
Number of relevant variables:    375
Number of functions:             109
Number of loops:                 9
Size of reached set:             2313
  Number of reached locations:   501 (21%)
    Avg states per location:     4
    Max states per location:     30 (at node N1)
  Number of reached functions:   42 (39%)
  Number of partitions:          2273
    Avg size of partitions:      1
    Max size of partitions:      8 (with key [N1569 (before line 4919), Function main called from node N1461, stack depth 1 [7bfc3126], stack [main]])
  Number of target states:       0
  Size of final wait list        79

Time for analysis setup:          2.942s
  Time for loading CPAs:          0.552s
  Time for loading parser:        0.416s
  Time for CFA construction:      1.879s
    Time for parsing file(s):     0.551s
    Time for AST to CFA:          0.652s
    Time for CFA sanity check:    0.130s
    Time for post-processing:     0.454s
      Time for var class.:        0.212s
Time for Analysis:               27.395s
CPU time for analysis:           27.390s
Total time for CPAchecker:       30.339s
Total CPU time for CPAchecker:   30.320s
Time for statistics:              0.080s

Time for Garbage Collector:       0.482s (in 51 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                114MB (   109 MiB) max;     70MB (    67 MiB) avg;    124MB (   118 MiB) peak
Used non-heap memory:             41MB (    39 MiB) max;     37MB (    35 MiB) avg;     41MB (    39 MiB) peak
Allocated heap memory:           255MB (   243 MiB) max;    255MB (   243 MiB) avg
Allocated non-heap memory:        43MB (    41 MiB) max;     39MB (    37 MiB) avg
Total process virtual memory:  12146MB ( 11584 MiB) max;  12074MB ( 11515 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
