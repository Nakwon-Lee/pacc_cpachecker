scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 9600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/linux-3.8-rc1-32_7a-drivers--input--misc--uinput.ko-ldv_main0_true-unreach-call.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 9600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_6hmoc0_v/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker 1.6.1-svn 6608050+ (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 3102: Dead code detected: __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

line 3105: Dead code detected: __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

line 3108: Dead code detected: __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (8UL) {
  case 1UL:
  __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& current_task));
  goto ldv_2869;
  case 2UL:
  __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_2869;
  case 4UL:
  __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_2869;
  case 8UL:
  __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_2869;
  default:
  __bad_percpu_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 3177: Dead code detected: __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& kernel_stack)); (CFACreationUtils.addEdgeToCFA, INFO)

line 3180: Dead code detected: __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack)); (CFACreationUtils.addEdgeToCFA, INFO)

line 3183: Dead code detected: __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (8UL) {
  case 1UL:
  __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& kernel_stack));
  goto ldv_6226;
  case 2UL:
  __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack));
  goto ldv_6226;
  case 4UL:
  __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack));
  goto ldv_6226;
  case 8UL:
  __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack));
  goto ldv_6226;
  default:
  __bad_percpu_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 4975: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 4999: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 5023: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 5047: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 5071: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 3344: Function pointer *(p->_qproc) with type void (*)(struct file *, wait_queue_head_t *, struct poll_table_struct *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_handler_precall to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function misc_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function misc_deregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 3344: Ignoring function call through function pointer *(p->_qproc): (*(p->_qproc))(filp, wait_address, p); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function input_free_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __mutex_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strndup_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memdup_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 3300: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((const void *)to, 0); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function __builtin_object_size to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function might_fault to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_ff_create to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_register_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_ff_destroy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __wake_up to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function complete to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __raw_spin_lock_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __init_waitqueue_head to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function nonseekable_open to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _copy_from_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_unregister_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function kstrndup to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_fmt to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _copy_to_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function prepare_to_wait to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function finish_wait to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_alloc_absinfo to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_event_from_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_event to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            90866 (18% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  86764 (95%)
  Because of loop head:            3795 (4%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         307 (0%)
  Times precision was empty:       23861 (26%)
  Times precision was {false}:     464 (1%)
  Times result was cached:         64376 (71%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      2165 (2%)
  Times result was 'false':        5253 (6%)
Number of strengthen sat checks:   0
Number of coverage checks:         59307
  BDD entailment checks:           17883
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       24
Number of predicates discovered:          26
Number of abstraction locations:          130
Max number of predicates per location:    6
Avg number of predicates per location:    2
Total predicates per abstraction:         140718
Max number of predicates per abstraction: 7
Avg number of predicates per abstraction: 53.53
Number of irrelevant predicates:          68126 (48%)
Number of preds handled by boolean abs:   4863 (3%)
  Total number of models for allsat:      2609
  Max number of models for allsat:        3
  Avg number of models for allsat:        1.21

Time for post operator:                  3.341s
  Time for path formula creation:        3.163s
Time for strengthen operator:            0.363s
Time for prec operator:                 10.373s
  Time for abstraction:                  9.487s (Max:     0.023s, Count: 90866)
    Boolean abstraction:                 1.532s
    Solving time:                        1.218s (Max:     0.013s)
    Model enumeration time:              0.166s
    Time for BDD construction:           0.139s (Max:     0.020s)
Time for merge operator:                 0.196s
Time for coverage check:                 0.073s
  Time for BDD entailment checks:        0.064s
Total time for SMT solver (w/o itp):     1.384s

Number of path formula cache hits:   550131 (93%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     2.467s

Total number of created targets for pointer analysis: 1201
   Number of created targets for uf: *unsigned_char is 7
   Number of created targets for uf: *(struct_input_dev)* is 92
   Number of created targets for uf: *enum_uinput_state is 3
   Number of created targets for uf: *(struct_uinput_request)* is 961
   Number of created targets for uf: *unsigned_int is 9


Number of BDD nodes:                               825
Size of BDD node table:                            464047
Size of BDD cache:                                 46411
Size of BDD node cleanup queue:                        5293 (count: 57554, min: 0, max: 363, avg: 0.09)
Time for BDD node cleanup:                             0.009s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.619s
  Time for transition matches:                         0.299s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.002s
Automaton transfers with branching:                0
Automaton transfer successors:                       492568 (count: 492568, min: 1, max: 1, avg: 1.00) [1 x 492568]

CPA algorithm statistics
------------------------
Number of iterations:            345995
Max size of waitlist:            244
Average size of waitlist:        90
Number of computed successors:   393920
Max successors for one state:    2
Number of times merged:          20712
Number of times stopped:         30646
Number of times breaked:         307

Total time for CPA algorithm:        22.860s (Max:     0.414s)
  Time for choose from waitlist:      0.197s
  Time for precision adjustment:     12.407s
  Time for transfer relation:         7.560s
  Time for merge operator:            0.525s
  Time for stop operator:             0.463s
  Time for adding to reached set:     0.620s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   307
Avg. length of target path (in blocks):                7397 (count: 307, min: 7, max: 47, avg: 24.09)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   3.070s
  Counterexample analysis:                             2.048s (Max:     0.023s, Calls: 307)
    Refinement sat check:                              1.181s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.012s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.092s
  Precision update:                                    0.141s
  ARG update:                                          0.682s

Length of refined path (in blocks):                    6723 (count: 307, min: 6, max: 41, avg: 21.90)
Number of affected states:                             2997 (count: 307, min: 1, max: 36, avg: 9.76)
Length (states) of path with itp 'true':               3419 (count: 307, min: 0, max: 32, avg: 11.14)
Length (states) of path with itp non-trivial itp:      2997 (count: 307, min: 1, max: 36, avg: 9.76)
Length (states) of path with itp 'false':               307 (count: 307, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:         390 (count: 307, min: 0, max: 6, avg: 1.27)
Equal non-trivial interpolants along paths:            2300 (count: 307, min: 0, max: 35, avg: 7.49)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                307
Number of successful refinements:     307
Number of failed refinements:         0
Max. size of reached set before ref.: 10172
Max. size of reached set after ref.:  9799
Avg. size of reached set before ref.: 3111.27
Avg. size of reached set after ref.:  1954.50

Total time for CEGAR algorithm:      26.905s
Time for refinements:                 3.739s
Average time for refinement:          0.012s
Max time for refinement:              0.061s

Code Coverage
-----------------------------
  Function coverage:      0.450
  Visited lines:          1118
  Total lines:            1738
  Line coverage:          0.643
  Visited conditions:     200
  Total conditions:       418
  Condition coverage:     0.478

CPAchecker general statistics
-----------------------------
Number of program locations:     2425
Number of CFA edges:             2701
Number of relevant variables:    375
Number of functions:             109
Number of loops:                 9
Size of reached set:             2893
  Number of reached locations:   569 (23%)
    Avg states per location:     5
    Max states per location:     50 (at node N1)
  Number of reached functions:   49 (45%)
  Number of partitions:          2872
    Avg size of partitions:      1
    Max size of partitions:      4 (with key [N1569 (before line 4919), Function main called from node N1461, stack depth 1 [7bfc3126], stack [main]])
  Number of target states:       0
  Size of final wait list        96

Time for analysis setup:          2.917s
  Time for loading CPAs:          0.567s
  Time for loading parser:        0.414s
  Time for CFA construction:      1.850s
    Time for parsing file(s):     0.564s
    Time for AST to CFA:          0.643s
    Time for CFA sanity check:    0.137s
    Time for post-processing:     0.419s
      Time for var class.:        0.191s
Time for Analysis:               26.905s
CPU time for analysis:           26.910s
Total time for CPAchecker:       29.825s
Total CPU time for CPAchecker:   29.820s
Time for statistics:              0.093s

Time for Garbage Collector:       0.731s (in 77 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                119MB (   114 MiB) max;     71MB (    67 MiB) avg;    131MB (   125 MiB) peak
Used non-heap memory:             39MB (    38 MiB) max;     36MB (    34 MiB) avg;     40MB (    38 MiB) peak
Allocated heap memory:           255MB (   243 MiB) max;    255MB (   243 MiB) avg
Allocated non-heap memory:        41MB (    39 MiB) max;     38MB (    36 MiB) avg
Total process virtual memory:  12081MB ( 11521 MiB) max;  12072MB ( 11513 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
