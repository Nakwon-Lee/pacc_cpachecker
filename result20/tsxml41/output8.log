scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 9600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/linux-3.8-rc1-32_7a-drivers--input--misc--uinput.ko-ldv_main0_true-unreach-call.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 9600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_cmuh4yhg/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker 1.6.1-svn 6608050+ (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 3102: Dead code detected: __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

line 3105: Dead code detected: __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

line 3108: Dead code detected: __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (8UL) {
  case 1UL:
  __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& current_task));
  goto ldv_2869;
  case 2UL:
  __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_2869;
  case 4UL:
  __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_2869;
  case 8UL:
  __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_2869;
  default:
  __bad_percpu_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 3177: Dead code detected: __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& kernel_stack)); (CFACreationUtils.addEdgeToCFA, INFO)

line 3180: Dead code detected: __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack)); (CFACreationUtils.addEdgeToCFA, INFO)

line 3183: Dead code detected: __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (8UL) {
  case 1UL:
  __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& kernel_stack));
  goto ldv_6226;
  case 2UL:
  __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack));
  goto ldv_6226;
  case 4UL:
  __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack));
  goto ldv_6226;
  case 8UL:
  __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack));
  goto ldv_6226;
  default:
  __bad_percpu_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 4975: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 4999: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 5023: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 5047: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 5071: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 3344: Function pointer *(p->_qproc) with type void (*)(struct file *, wait_queue_head_t *, struct poll_table_struct *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_handler_precall to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function misc_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function misc_deregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 3344: Ignoring function call through function pointer *(p->_qproc): (*(p->_qproc))(filp, wait_address, p); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function input_free_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memdup_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __mutex_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __raw_spin_lock_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __init_waitqueue_head to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function nonseekable_open to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function prepare_to_wait to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function finish_wait to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strndup_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 3300: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((const void *)to, 0); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function __builtin_object_size to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function might_fault to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_ff_create to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_register_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_ff_destroy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __wake_up to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function complete to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function kstrndup to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_alloc_absinfo to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_mt_init_slots to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _copy_from_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _copy_to_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            68720 (16% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  64031 (93%)
  Because of loop head:            4396 (6%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         293 (0%)
  Times precision was empty:       20319 (30%)
  Times precision was {false}:     284 (0%)
  Times result was cached:         45436 (66%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      2681 (4%)
  Times result was 'false':        2933 (4%)
Number of strengthen sat checks:   0
Number of coverage checks:         57964
  BDD entailment checks:           19942
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       24
Number of predicates discovered:          28
Number of abstraction locations:          107
Max number of predicates per location:    10
Avg number of predicates per location:    3
Total predicates per abstraction:         199998
Max number of predicates per abstraction: 11
Avg number of predicates per abstraction: 67.45
Number of irrelevant predicates:          58635 (29%)
Number of preds handled by boolean abs:   9531 (5%)
  Total number of models for allsat:      4091
  Max number of models for allsat:        6
  Avg number of models for allsat:        1.53

Time for post operator:                  3.544s
  Time for path formula creation:        3.371s
Time for strengthen operator:            0.251s
Time for prec operator:                 12.071s
  Time for abstraction:                 11.433s (Max:     0.023s, Count: 68720)
    Boolean abstraction:                 2.089s
    Solving time:                        1.570s (Max:     0.013s)
    Model enumeration time:              0.242s
    Time for BDD construction:           0.141s (Max:     0.012s)
Time for merge operator:                 0.286s
Time for coverage check:                 0.092s
  Time for BDD entailment checks:        0.076s
Total time for SMT solver (w/o itp):     1.812s

Number of path formula cache hits:   456791 (92%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     2.668s

Total number of created targets for pointer analysis: 515
   Number of created targets for uf: *(struct_input_dev)* is 84
   Number of created targets for uf: *enum_uinput_state is 46
   Number of created targets for uf: *(struct_uinput_request)* is 209
   Number of created targets for uf: *unsigned_int is 5


Number of BDD nodes:                               2419
Size of BDD node table:                            464047
Size of BDD cache:                                 46411
Size of BDD node cleanup queue:                        8274 (count: 59075, min: 0, max: 1048, avg: 0.14)
Time for BDD node cleanup:                             0.018s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.685s
  Time for transition matches:                         0.338s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.015s
Automaton transfers with branching:                0
Automaton transfer successors:                       418689 (count: 418689, min: 1, max: 1, avg: 1.00) [1 x 418689]

CPA algorithm statistics
------------------------
Number of iterations:            268598
Max size of waitlist:            172
Average size of waitlist:        80
Number of computed successors:   308781
Max successors for one state:    2
Number of times merged:          19011
Number of times stopped:         25027
Number of times breaked:         293

Total time for CPA algorithm:        22.800s (Max:     0.477s)
  Time for choose from waitlist:      0.160s
  Time for precision adjustment:     13.575s
  Time for transfer relation:         6.863s
  Time for merge operator:            0.575s
  Time for stop operator:             0.399s
  Time for adding to reached set:     0.421s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   293
Avg. length of target path (in blocks):               13292 (count: 293, min: 12, max: 85, avg: 45.37)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   3.391s
  Counterexample analysis:                             2.498s (Max:     0.024s, Calls: 293)
    Refinement sat check:                              1.502s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.024s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.073s
  Precision update:                                    0.165s
  ARG update:                                          0.502s

Length of refined path (in blocks):                   12621 (count: 293, min: 6, max: 84, avg: 43.08)
Number of affected states:                             4907 (count: 293, min: 1, max: 82, avg: 16.75)
Length (states) of path with itp 'true':               7421 (count: 293, min: 0, max: 49, avg: 25.33)
Length (states) of path with itp non-trivial itp:      4907 (count: 293, min: 1, max: 82, avg: 16.75)
Length (states) of path with itp 'false':               293 (count: 293, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:         222 (count: 293, min: 0, max: 6, avg: 0.76)
Equal non-trivial interpolants along paths:            4392 (count: 293, min: 0, max: 81, avg: 14.99)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                293
Number of successful refinements:     293
Number of failed refinements:         0
Max. size of reached set before ref.: 3752
Max. size of reached set after ref.:  3317
Avg. size of reached set before ref.: 2065.29
Avg. size of reached set after ref.:  1117.24

Total time for CEGAR algorithm:      26.910s
Time for refinements:                 3.902s
Average time for refinement:          0.013s
Max time for refinement:              0.041s

Code Coverage
-----------------------------
  Function coverage:      0.431
  Visited lines:          1084
  Total lines:            1738
  Line coverage:          0.624
  Visited conditions:     184
  Total conditions:       418
  Condition coverage:     0.440

CPAchecker general statistics
-----------------------------
Number of program locations:     2425
Number of CFA edges:             2701
Number of relevant variables:    375
Number of functions:             109
Number of loops:                 9
Size of reached set:             3043
  Number of reached locations:   502 (21%)
    Avg states per location:     6
    Max states per location:     69 (at node N1431)
  Number of reached functions:   47 (43%)
  Number of partitions:          3027
    Avg size of partitions:      1
    Max size of partitions:      6 (with key [N1569 (before line 4919), Function main called from node N1461, stack depth 1 [7bfc3126], stack [main]])
  Number of target states:       0
  Size of final wait list        147

Time for analysis setup:          2.938s
  Time for loading CPAs:          0.596s
  Time for loading parser:        0.430s
  Time for CFA construction:      1.842s
    Time for parsing file(s):     0.556s
    Time for AST to CFA:          0.626s
    Time for CFA sanity check:    0.133s
    Time for post-processing:     0.443s
      Time for var class.:        0.217s
Time for Analysis:               26.911s
CPU time for analysis:           26.920s
Total time for CPAchecker:       29.851s
Total CPU time for CPAchecker:   29.850s
Time for statistics:              0.066s

Time for Garbage Collector:       0.656s (in 75 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                117MB (   112 MiB) max;     69MB (    66 MiB) avg;    123MB (   117 MiB) peak
Used non-heap memory:             39MB (    37 MiB) max;     36MB (    34 MiB) avg;     40MB (    38 MiB) peak
Allocated heap memory:           255MB (   243 MiB) max;    255MB (   243 MiB) avg
Allocated non-heap memory:        41MB (    39 MiB) max;     39MB (    37 MiB) avg
Total process virtual memory:  12081MB ( 11521 MiB) max;  12072MB ( 11513 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
