scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 9600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/linux-3.8-rc1-32_7a-drivers--input--misc--uinput.ko-ldv_main0_true-unreach-call.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 9600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_a4o2ek1w/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker 1.6.1-svn 6608050+ (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 3102: Dead code detected: __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

line 3105: Dead code detected: __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

line 3108: Dead code detected: __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (8UL) {
  case 1UL:
  __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& current_task));
  goto ldv_2869;
  case 2UL:
  __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_2869;
  case 4UL:
  __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_2869;
  case 8UL:
  __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_2869;
  default:
  __bad_percpu_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 3177: Dead code detected: __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& kernel_stack)); (CFACreationUtils.addEdgeToCFA, INFO)

line 3180: Dead code detected: __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack)); (CFACreationUtils.addEdgeToCFA, INFO)

line 3183: Dead code detected: __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (8UL) {
  case 1UL:
  __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& kernel_stack));
  goto ldv_6226;
  case 2UL:
  __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack));
  goto ldv_6226;
  case 4UL:
  __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack));
  goto ldv_6226;
  case 8UL:
  __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack));
  goto ldv_6226;
  default:
  __bad_percpu_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 4975: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 4999: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 5023: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 5047: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 5071: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 3344: Function pointer *(p->_qproc) with type void (*)(struct file *, wait_queue_head_t *, struct poll_table_struct *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_handler_precall to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function misc_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function misc_deregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 3344: Ignoring function call through function pointer *(p->_qproc): (*(p->_qproc))(filp, wait_address, p); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function __mutex_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __raw_spin_lock_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __init_waitqueue_head to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function nonseekable_open to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_free_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __wake_up to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function complete to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_unregister_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_event_from_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_event to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_event_to_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function prepare_to_wait to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function finish_wait to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function schedule to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memdup_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function kstrndup to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_alloc_absinfo to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_mt_init_slots to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strndup_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 3300: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((const void *)to, 0); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function __builtin_object_size to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function might_fault to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _copy_from_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_fmt to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_ff_create to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_register_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_ff_destroy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            56539 (19% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  51700 (91%)
  Because of loop head:            4575 (8%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         264 (0%)
  Times precision was empty:       6304 (11%)
  Times precision was {false}:     267 (0%)
  Times result was cached:         47823 (85%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      2145 (4%)
  Times result was 'false':        5204 (9%)
Number of strengthen sat checks:   0
Number of coverage checks:         48275
  BDD entailment checks:           20199
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       24
Number of predicates discovered:          31
Number of abstraction locations:          147
Max number of predicates per location:    9
Avg number of predicates per location:    3
Total predicates per abstraction:         233448
Max number of predicates per abstraction: 9
Avg number of predicates per abstraction: 96.79
Number of irrelevant predicates:          38188 (16%)
Number of preds handled by boolean abs:   7599 (3%)
  Total number of models for allsat:      2738
  Max number of models for allsat:        6
  Avg number of models for allsat:        1.28

Time for post operator:                  2.197s
  Time for path formula creation:        2.096s
Time for strengthen operator:            0.207s
Time for prec operator:                 14.795s
  Time for abstraction:                 14.194s (Max:     0.017s, Count: 56539)
    Boolean abstraction:                 1.759s
    Solving time:                        1.337s (Max:     0.013s)
    Model enumeration time:              0.148s
    Time for BDD construction:           0.128s (Max:     0.013s)
Time for merge operator:                 0.149s
Time for coverage check:                 0.018s
  Time for BDD entailment checks:        0.011s
Total time for SMT solver (w/o itp):     1.485s

Number of path formula cache hits:   337490 (94%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     1.784s

Total number of created targets for pointer analysis: 660
   Number of created targets for uf: *(char)* is 3
   Number of created targets for uf: *(struct_input_dev)* is 3
   Number of created targets for uf: *unsigned_char is 11
   Number of created targets for uf: *(struct_uinput_request)* is 481
   Number of created targets for uf: *enum_uinput_state is 57
   Number of created targets for uf: *unsigned_int is 3


Number of BDD nodes:                               1979
Size of BDD node table:                            464047
Size of BDD cache:                                 46411
Size of BDD node cleanup queue:                        6664 (count: 42243, min: 0, max: 474, avg: 0.16)
Time for BDD node cleanup:                             0.003s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.508s
  Time for transition matches:                         0.252s
  Time for transition assertions:                      0.001s
  Time for transition actions:                         0.018s
Automaton transfers with branching:                0
Automaton transfer successors:                       296959 (count: 296959, min: 1, max: 1, avg: 1.00) [1 x 296959]

CPA algorithm statistics
------------------------
Number of iterations:            207787
Max size of waitlist:            30
Average size of waitlist:        12
Number of computed successors:   238297
Max successors for one state:    2
Number of times merged:          14038
Number of times stopped:         22923
Number of times breaked:         264

Total time for CPA algorithm:        23.012s (Max:     0.465s)
  Time for choose from waitlist:      0.124s
  Time for precision adjustment:     16.063s
  Time for transfer relation:         5.047s
  Time for merge operator:            0.381s
  Time for stop operator:             0.343s
  Time for adding to reached set:     0.322s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   264
Avg. length of target path (in blocks):               11658 (count: 264, min: 7, max: 86, avg: 44.16)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   3.913s
  Counterexample analysis:                             3.240s (Max:     0.053s, Calls: 264)
    Refinement sat check:                              1.462s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.005s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.078s
  Precision update:                                    0.159s
  ARG update:                                          0.347s

Length of refined path (in blocks):                   10172 (count: 263, min: 6, max: 73, avg: 38.68)
Number of affected states:                             6145 (count: 263, min: 1, max: 64, avg: 23.37)
Length (states) of path with itp 'true':               3764 (count: 263, min: 0, max: 41, avg: 14.31)
Length (states) of path with itp non-trivial itp:      6145 (count: 263, min: 1, max: 64, avg: 23.37)
Length (states) of path with itp 'false':               263 (count: 263, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:         391 (count: 263, min: 0, max: 6, avg: 1.49)
Equal non-trivial interpolants along paths:            5491 (count: 263, min: 0, max: 63, avg: 20.88)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                264
Number of successful refinements:     263
Number of failed refinements:         0
Max. size of reached set before ref.: 2787
Max. size of reached set after ref.:  1859
Avg. size of reached set before ref.: 1349.80
Avg. size of reached set after ref.:  555.80

Total time for CEGAR algorithm:      27.371s
Time for refinements:                 4.254s
Average time for refinement:          0.016s
Max time for refinement:              0.069s

Code Coverage
-----------------------------
  Function coverage:      0.505
  Visited lines:          1056
  Total lines:            1738
  Line coverage:          0.608
  Visited conditions:     160
  Total conditions:       418
  Condition coverage:     0.383

CPAchecker general statistics
-----------------------------
Number of program locations:     2425
Number of CFA edges:             2701
Number of relevant variables:    375
Number of functions:             109
Number of loops:                 9
Size of reached set:             2021
  Number of reached locations:   528 (22%)
    Avg states per location:     3
    Max states per location:     16 (at node N1567)
  Number of reached functions:   55 (50%)
  Number of partitions:          1985
    Avg size of partitions:      1
    Max size of partitions:      5 (with key [N1569 (before line 4919), Function main called from node N1461, stack depth 1 [2c282004], stack [main]])
  Number of target states:       1
  Size of final wait list        18

Time for analysis setup:          2.994s
  Time for loading CPAs:          0.584s
  Time for loading parser:        0.421s
  Time for CFA construction:      1.902s
    Time for parsing file(s):     0.551s
    Time for AST to CFA:          0.642s
    Time for CFA sanity check:    0.168s
    Time for post-processing:     0.476s
      Time for var class.:        0.220s
Time for Analysis:               27.371s
CPU time for analysis:           27.360s
Total time for CPAchecker:       30.368s
Total CPU time for CPAchecker:   30.360s
Time for statistics:              0.053s

Time for Garbage Collector:       0.512s (in 78 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                111MB (   106 MiB) max;     70MB (    67 MiB) avg;    118MB (   113 MiB) peak
Used non-heap memory:             40MB (    38 MiB) max;     36MB (    35 MiB) avg;     40MB (    38 MiB) peak
Allocated heap memory:           255MB (   243 MiB) max;    255MB (   243 MiB) avg
Allocated non-heap memory:        42MB (    40 MiB) max;     39MB (    37 MiB) avg
Total process virtual memory:  12081MB ( 11522 MiB) max;  12073MB ( 11513 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
