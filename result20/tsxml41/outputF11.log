scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 9600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/linux-3.8-rc1-32_7a-drivers--input--misc--uinput.ko-ldv_main0_true-unreach-call.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 9600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_g_2kypcj/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker 1.6.1-svn 6608050+ (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 3102: Dead code detected: __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

line 3105: Dead code detected: __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

line 3108: Dead code detected: __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (8UL) {
  case 1UL:
  __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& current_task));
  goto ldv_2869;
  case 2UL:
  __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_2869;
  case 4UL:
  __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_2869;
  case 8UL:
  __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_2869;
  default:
  __bad_percpu_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 3177: Dead code detected: __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& kernel_stack)); (CFACreationUtils.addEdgeToCFA, INFO)

line 3180: Dead code detected: __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack)); (CFACreationUtils.addEdgeToCFA, INFO)

line 3183: Dead code detected: __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (8UL) {
  case 1UL:
  __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& kernel_stack));
  goto ldv_6226;
  case 2UL:
  __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack));
  goto ldv_6226;
  case 4UL:
  __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack));
  goto ldv_6226;
  case 8UL:
  __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack));
  goto ldv_6226;
  default:
  __bad_percpu_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 4975: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 4999: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 5023: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 5047: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 5071: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 3344: Function pointer *(p->_qproc) with type void (*)(struct file *, wait_queue_head_t *, struct poll_table_struct *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_handler_precall to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function misc_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_event_to_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __mutex_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 3344: Ignoring function call through function pointer *(p->_qproc): (*(p->_qproc))(filp, wait_address, p); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function __raw_spin_lock_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __init_waitqueue_head to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function nonseekable_open to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_free_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __wake_up to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function complete to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_unregister_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strndup_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_ff_create to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_register_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_ff_destroy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 3300: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((const void *)to, 0); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function __builtin_object_size to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function might_fault to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _copy_from_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_fmt to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _copy_to_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function misc_deregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memdup_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function kstrndup to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_alloc_absinfo to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_mt_init_slots to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_event_from_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_event to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function prepare_to_wait to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function finish_wait to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function schedule to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            2440626 (20% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  2391436 (98%)
  Because of loop head:            47228 (2%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         1962 (0%)
  Times precision was empty:       76062 (3%)
  Times precision was {false}:     1471 (0%)
  Times result was cached:         2318094 (95%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      44999 (2%)
  Times result was 'false':        182335 (7%)
Number of strengthen sat checks:   0
Number of coverage checks:         1716379
  BDD entailment checks:           606431
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       24
Number of predicates discovered:          96
Number of abstraction locations:          179
Max number of predicates per location:    32
Avg number of predicates per location:    7
Total predicates per abstraction:         15126407
Max number of predicates per abstraction: 33
Avg number of predicates per abstraction: 325.51
Number of irrelevant predicates:          7087970 (47%)
Number of preds handled by boolean abs:   325457 (2%)
  Total number of models for allsat:      811216
  Max number of models for allsat:        4704
  Avg number of models for allsat:        18.03

Time for post operator:                 31.569s
  Time for path formula creation:       29.238s
Time for strengthen operator:            5.644s
Time for prec operator:                650.899s
  Time for abstraction:                637.520s (Max:     1.094s, Count: 2440626)
    Boolean abstraction:               130.114s
    Solving time:                       48.405s (Max:     0.026s)
    Model enumeration time:             60.628s
    Time for BDD construction:          15.216s (Max:     0.689s)
Time for merge operator:                 2.109s
Time for coverage check:                 0.452s
  Time for BDD entailment checks:        0.349s
Total time for SMT solver (w/o itp):   109.033s

Number of path formula cache hits:   14173815 (94%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    16.588s

Total number of created targets for pointer analysis: 24514
   Number of created targets for uf: *(char)* is 18
   Number of created targets for uf: *unsigned_char is 1347
   Number of created targets for uf: *(struct_input_dev)* is 330
   Number of created targets for uf: *enum_uinput_state is 501
   Number of created targets for uf: *(struct_uinput_request)* is 15377
   Number of created targets for uf: *unsigned_int is 1310


Number of BDD nodes:                               320806
Size of BDD node table:                            464047
Size of BDD cache:                                 46411
Size of BDD node cleanup queue:                      163302 (count: 1000693, min: 0, max: 2047, avg: 0.16)
Time for BDD node cleanup:                             0.095s
Time for BDD garbage collection:                       0.095s (in 7 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  7.677s
  Time for transition matches:                         4.729s
  Time for transition assertions:                      0.003s
  Time for transition actions:                         0.006s
Automaton transfers with branching:                0
Automaton transfer successors:                     12386037 (count: 12386037, min: 1, max: 1, avg: 1.00) [1 x 12386037]

CPA algorithm statistics
------------------------
Number of iterations:            9160392
Max size of waitlist:            77
Average size of waitlist:        34
Number of computed successors:   10318792
Max successors for one state:    2
Number of times merged:          554974
Number of times stopped:         967767
Number of times breaked:         1962

Total time for CPA algorithm:       807.871s (Max:    19.496s)
  Time for choose from waitlist:      2.115s
  Time for precision adjustment:    683.830s
  Time for transfer relation:        90.147s
  Time for merge operator:            6.170s
  Time for stop operator:             6.412s
  Time for adding to reached set:     7.458s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   1962
Avg. length of target path (in blocks):              154841 (count: 1962, min: 7, max: 142, avg: 78.92)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  42.985s
  Counterexample analysis:                            31.520s (Max:     0.065s, Calls: 1962)
    Refinement sat check:                             14.416s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.070s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.310s
  Precision update:                                    0.838s
  ARG update:                                          9.757s

Length of refined path (in blocks):                  134200 (count: 1962, min: 6, max: 139, avg: 68.40)
Number of affected states:                            40730 (count: 1962, min: 1, max: 76, avg: 20.76)
Length (states) of path with itp 'true':              91508 (count: 1962, min: 0, max: 116, avg: 46.64)
Length (states) of path with itp non-trivial itp:     40730 (count: 1962, min: 1, max: 76, avg: 20.76)
Length (states) of path with itp 'false':              1962 (count: 1962, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:        4299 (count: 1962, min: 0, max: 18, avg: 2.19)
Equal non-trivial interpolants along paths:           34469 (count: 1962, min: 0, max: 62, avg: 17.57)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                1962
Number of successful refinements:     1962
Number of failed refinements:         0
Max. size of reached set before ref.: 64975
Max. size of reached set after ref.:  60597
Avg. size of reached set before ref.: 27049.09
Avg. size of reached set after ref.:  22398.02

Total time for CEGAR algorithm:     897.476s
Time for refinements:                68.178s
Average time for refinement:          0.034s
Max time for refinement:              0.591s

Code Coverage
-----------------------------
  Function coverage:      0.578
  Visited lines:          1369
  Total lines:            1738
  Line coverage:          0.788
  Visited conditions:     310
  Total conditions:       418
  Condition coverage:     0.742

CPAchecker general statistics
-----------------------------
Number of program locations:     2425
Number of CFA edges:             2701
Number of relevant variables:    375
Number of functions:             109
Number of loops:                 9
Size of reached set:             43292
  Number of reached locations:   863 (36%)
    Avg states per location:     50
    Max states per location:     1136 (at node N1690)
  Number of reached functions:   63 (58%)
  Number of partitions:          42877
    Avg size of partitions:      1
    Max size of partitions:      12 (with key [N1563 (before line 4913), Function main called from node N1461, stack depth 1 [7bfc3126], stack [main]])
  Number of target states:       0
  Size of final wait list        67

Time for analysis setup:          2.891s
  Time for loading CPAs:          0.595s
  Time for loading parser:        0.407s
  Time for CFA construction:      1.835s
    Time for parsing file(s):     0.514s
    Time for AST to CFA:          0.618s
    Time for CFA sanity check:    0.178s
    Time for post-processing:     0.463s
      Time for var class.:        0.199s
Time for Analysis:              897.476s
CPU time for analysis:          897.430s
Total time for CPAchecker:      900.369s
Total CPU time for CPAchecker:  900.320s
Time for statistics:              0.343s

Time for Garbage Collector:      47.342s (in 2556 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                788MB (   751 MiB) max;    328MB (   313 MiB) avg;    797MB (   760 MiB) peak
Used non-heap memory:             41MB (    39 MiB) max;     40MB (    38 MiB) avg;     41MB (    39 MiB) peak
Allocated heap memory:           807MB (   770 MiB) max;    475MB (   453 MiB) avg
Allocated non-heap memory:        43MB (    41 MiB) max;     42MB (    40 MiB) avg
Total process virtual memory:  13299MB ( 12683 MiB) max;  12403MB ( 11828 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
