scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 9600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/linux-3.8-rc1-32_7a-drivers--input--misc--uinput.ko-ldv_main0_true-unreach-call.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 9600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_m24op3_m/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker 1.6.1-svn 6608050+ (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 3102: Dead code detected: __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

line 3105: Dead code detected: __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

line 3108: Dead code detected: __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (8UL) {
  case 1UL:
  __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& current_task));
  goto ldv_2869;
  case 2UL:
  __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_2869;
  case 4UL:
  __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_2869;
  case 8UL:
  __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_2869;
  default:
  __bad_percpu_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 3177: Dead code detected: __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& kernel_stack)); (CFACreationUtils.addEdgeToCFA, INFO)

line 3180: Dead code detected: __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack)); (CFACreationUtils.addEdgeToCFA, INFO)

line 3183: Dead code detected: __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (8UL) {
  case 1UL:
  __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& kernel_stack));
  goto ldv_6226;
  case 2UL:
  __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack));
  goto ldv_6226;
  case 4UL:
  __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack));
  goto ldv_6226;
  case 8UL:
  __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack));
  goto ldv_6226;
  default:
  __bad_percpu_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 4975: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 4999: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 5023: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 5047: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 5071: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 3344: Function pointer *(p->_qproc) with type void (*)(struct file *, wait_queue_head_t *, struct poll_table_struct *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_handler_precall to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function misc_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 3344: Ignoring function call through function pointer *(p->_qproc): (*(p->_qproc))(filp, wait_address, p); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function input_free_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function misc_deregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __wake_up to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function complete to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_unregister_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __mutex_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __raw_spin_lock_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __init_waitqueue_head to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function nonseekable_open to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memdup_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function prepare_to_wait to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function finish_wait to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_event_from_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_event to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strndup_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_ff_create to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_register_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_ff_destroy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 3300: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((const void *)to, 0); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function __builtin_object_size to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function might_fault to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _copy_from_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function kstrndup to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_alloc_absinfo to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _copy_to_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_fmt to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_mt_init_slots to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            2018542 (19% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  1936829 (96%)
  Because of loop head:            79877 (4%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         1836 (0%)
  Times precision was empty:       41484 (2%)
  Times precision was {false}:     5033 (0%)
  Times result was cached:         1881301 (93%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      90724 (4%)
  Times result was 'false':        196463 (10%)
Number of strengthen sat checks:   0
Number of coverage checks:         1780901
  BDD entailment checks:           937621
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       24
Number of predicates discovered:          110
Number of abstraction locations:          173
Max number of predicates per location:    44
Avg number of predicates per location:    10
Total predicates per abstraction:         16806956
Max number of predicates per abstraction: 36
Avg number of predicates per abstraction: 175.52
Number of irrelevant predicates:          6187928 (37%)
Number of preds handled by boolean abs:   731269 (4%)
  Total number of models for allsat:      621444
  Max number of models for allsat:        512
  Avg number of models for allsat:        6.85

Time for post operator:                 75.508s
  Time for path formula creation:       73.317s
Time for strengthen operator:            5.060s
Time for prec operator:                645.911s
  Time for abstraction:                632.473s (Max:     1.162s, Count: 2018542)
    Boolean abstraction:               138.514s
    Solving time:                       83.094s (Max:     0.063s)
    Model enumeration time:             35.010s
    Time for BDD construction:          10.970s (Max:     0.110s)
Time for merge operator:                 4.515s
Time for coverage check:                 0.679s
  Time for BDD entailment checks:        0.553s
Total time for SMT solver (w/o itp):   118.104s

Number of path formula cache hits:   8859954 (73%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    59.391s

Total number of created targets for pointer analysis: 180835
   Number of created targets for uf: *(struct_input_dev)* is 8146
   Number of created targets for uf: *enum_uinput_state is 1023
   Number of created targets for uf: *(struct_uinput_request)* is 137505
   Number of created targets for uf: *unsigned_int is 4363


Number of BDD nodes:                               402492
Size of BDD node table:                            464047
Size of BDD cache:                                 46411
Size of BDD node cleanup queue:                      306713 (count: 1607613, min: 0, max: 3999, avg: 0.19)
Time for BDD node cleanup:                             0.160s
Time for BDD garbage collection:                       0.036s (in 3 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  7.396s
  Time for transition matches:                         4.464s
  Time for transition assertions:                      0.001s
  Time for transition actions:                         0.016s
Automaton transfers with branching:                0
Automaton transfer successors:                     10505252 (count: 10505252, min: 1, max: 1, avg: 1.00) [1 x 10505252]

CPA algorithm statistics
------------------------
Number of iterations:            7459451
Max size of waitlist:            123
Average size of waitlist:        49
Number of computed successors:   8409266
Max successors for one state:    2
Number of times merged:          421640
Number of times stopped:         706021
Number of times breaked:         1836

Total time for CPA algorithm:       839.131s (Max:     6.378s)
  Time for choose from waitlist:      1.916s
  Time for precision adjustment:    675.368s
  Time for transfer relation:       129.485s
  Time for merge operator:            8.175s
  Time for stop operator:             6.400s
  Time for adding to reached set:     7.509s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   1836
Avg. length of target path (in blocks):              172532 (count: 1836, min: 7, max: 241, avg: 93.97)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  51.487s
  Counterexample analysis:                            42.480s (Max:     0.107s, Calls: 1836)
    Refinement sat check:                             15.678s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.052s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.344s
  Precision update:                                    0.913s
  ARG update:                                          7.082s

Length of refined path (in blocks):                  116182 (count: 1836, min: 6, max: 144, avg: 63.28)
Number of affected states:                            49143 (count: 1836, min: 1, max: 110, avg: 26.77)
Length (states) of path with itp 'true':              65203 (count: 1836, min: 0, max: 110, avg: 35.51)
Length (states) of path with itp non-trivial itp:     49143 (count: 1836, min: 1, max: 110, avg: 26.77)
Length (states) of path with itp 'false':              1836 (count: 1836, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:        4728 (count: 1836, min: 0, max: 7, avg: 2.58)
Equal non-trivial interpolants along paths:           42579 (count: 1836, min: 0, max: 107, avg: 23.19)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                1836
Number of successful refinements:     1836
Number of failed refinements:         0
Max. size of reached set before ref.: 22517
Max. size of reached set after ref.:  9724
Avg. size of reached set before ref.: 6425.70
Avg. size of reached set after ref.:  2340.95

Total time for CEGAR algorithm:     897.480s
Time for refinements:                56.690s
Average time for refinement:          0.030s
Max time for refinement:              0.222s

Code Coverage
-----------------------------
  Function coverage:      0.569
  Visited lines:          1357
  Total lines:            1738
  Line coverage:          0.781
  Visited conditions:     304
  Total conditions:       418
  Condition coverage:     0.727

CPAchecker general statistics
-----------------------------
Number of program locations:     2425
Number of CFA edges:             2701
Number of relevant variables:    375
Number of functions:             109
Number of loops:                 9
Size of reached set:             7181
  Number of reached locations:   843 (35%)
    Avg states per location:     8
    Max states per location:     88 (at node N1961)
  Number of reached functions:   62 (57%)
  Number of partitions:          7093
    Avg size of partitions:      1
    Max size of partitions:      11 (with key [N1533 (before line 4882), Function main called from node N1461, stack depth 1 [7bfc3126], stack [main]])
  Number of target states:       0
  Size of final wait list        45

Time for analysis setup:          2.877s
  Time for loading CPAs:          0.548s
  Time for loading parser:        0.386s
  Time for CFA construction:      1.862s
    Time for parsing file(s):     0.526s
    Time for AST to CFA:          0.634s
    Time for CFA sanity check:    0.149s
    Time for post-processing:     0.456s
      Time for var class.:        0.221s
Time for Analysis:              897.480s
CPU time for analysis:          897.440s
Total time for CPAchecker:      900.360s
Total CPU time for CPAchecker:  900.310s
Time for statistics:              0.128s

Time for Garbage Collector:      43.858s (in 1453 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:               1587MB (  1514 MiB) max;    673MB (   642 MiB) avg;   1621MB (  1546 MiB) peak
Used non-heap memory:             42MB (    40 MiB) max;     41MB (    39 MiB) avg;     43MB (    41 MiB) peak
Allocated heap memory:          1761MB (  1679 MiB) max;   1020MB (   973 MiB) avg
Allocated non-heap memory:        44MB (    42 MiB) max;     44MB (    42 MiB) avg
Total process virtual memory:  15726MB ( 14997 MiB) max;  13377MB ( 12758 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
