scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 9600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-32_7a-drivers--usb--host--xhci-hcd.ko-ldv_main5_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 9600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_cj70_fx5/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker 1.6.1-svn 6608050+ (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 4142: Dead code detected: __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& kernel_stack)); (CFACreationUtils.addEdgeToCFA, INFO)

line 4145: Dead code detected: __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack)); (CFACreationUtils.addEdgeToCFA, INFO)

line 4148: Dead code detected: __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (8UL) {
  case 1UL:
  __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& kernel_stack));
  goto ldv_6643;
  case 2UL:
  __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack));
  goto ldv_6643;
  case 4UL:
  __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack));
  goto ldv_6643;
  case 8UL:
  __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack));
  goto ldv_6643;
  default:
  __bad_percpu_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 11948: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 12047: Dead code detected: __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& kernel_stack)); (CFACreationUtils.addEdgeToCFA, INFO)

line 12050: Dead code detected: __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack)); (CFACreationUtils.addEdgeToCFA, INFO)

line 12053: Dead code detected: __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (8UL) {
  case 1UL:
  __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& kernel_stack));
  goto ldv_6627;
  case 2UL:
  __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack));
  goto ldv_6627;
  case 4UL:
  __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack));
  goto ldv_6627;
  case 8UL:
  __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack));
  goto ldv_6627;
  default:
  __bad_percpu_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 16011: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 21298: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 22304: Dead code detected: *((u8 *)__gu_p) = (unsigned char )status; (CFACreationUtils.addEdgeToCFA, INFO)

line 22307: Dead code detected: put_unaligned_le16((int )((unsigned short )status), __gu_p); (CFACreationUtils.addEdgeToCFA, INFO)

line 22313: Dead code detected: put_unaligned_le64((unsigned long long )status, __gu_p); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (4UL) {
  case 1UL:
  *((u8 *)__gu_p) = (unsigned char )status;
  goto ldv_25252;
  case 2UL:
  put_unaligned_le16((int )((unsigned short )status), __gu_p);
  goto ldv_25252;
  case 4UL:
  put_unaligned_le32(status, __gu_p);
  goto ldv_25252;
  case 8UL:
  put_unaligned_le64((unsigned long long )status, __gu_p);
  goto ldv_25252;
  default:
  __bad_unaligned_access_size();
  goto ldv_25252;
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 22991: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 25096: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 25706: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 26073: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 12168: Function pointer *(ops->alloc) with type void *(*)(struct device *, size_t , dma_addr_t *, gfp_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 12201: Function pointer *(ops->free) with type void (*)(struct device *, size_t , void *, dma_addr_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_handler_precall to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_hcd_pci_probe to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_hcd_is_primary_hcd to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dma_set_mask to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_dev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_amd_find_chipset_info to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_warn to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __raw_spin_lock_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 12168: Ignoring function call through function pointer *(ops->alloc): memory = (*(ops->alloc))(dev, size, dma_handle, tmp___1, attrs); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function debug_dma_alloc_coherent to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dma_pool_create to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dma_pool_alloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dma_pool_free to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __init_waitqueue_head to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function debug_dma_free_coherent to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 12201: Ignoring function call through function pointer *(ops->free): (*(ops->free))(dev, size, vaddr, bus, attrs); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function list_del to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dma_pool_destroy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function radix_tree_delete to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __list_del_entry to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dmi_get_system_info to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function init_timer_key to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function set_timer_slack to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function add_timer to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_create_shared_hcd to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_add_hcd to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_put_hcd to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_hcd_pci_remove to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_set_mwi to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_is_intel_switchable_xhci to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_enable_xhci_ports to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function msleep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_root_hub_lost_power to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_hcd_resume_root_hub to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_disable_msi to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_disable_msix to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function del_timer_sync to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __bitmap_weight to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_enable_msix to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function request_threaded_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_enable_msi_block to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_remove_hcd to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function synchronize_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value_probe to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            2457990 (20% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  2224466 (90%)
  Because of loop head:            233472 (9%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         52 (0%)
  Times precision was empty:       1537088 (63%)
  Times precision was {false}:     6011 (0%)
  Times result was cached:         912799 (37%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      2092 (0%)
  Times result was 'false':        7408 (0%)
Number of strengthen sat checks:   0
Number of coverage checks:         1296353
  BDD entailment checks:           432633
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       65
Number of predicates discovered:          7
Number of abstraction locations:          273
Max number of predicates per location:    5
Avg number of predicates per location:    2
Total predicates per abstraction:         3018889
Max number of predicates per abstraction: 5
Avg number of predicates per abstraction: 372.56
Number of irrelevant predicates:          2947098 (98%)
Number of preds handled by boolean abs:   4141 (0%)
  Total number of models for allsat:      2657
  Max number of models for allsat:        4
  Avg number of models for allsat:        1.27

Time for post operator:                 80.288s
  Time for path formula creation:       77.569s
Time for strengthen operator:            5.340s
Time for prec operator:                 84.771s
  Time for abstraction:                 65.953s (Max:     1.390s, Count: 2457990)
    Boolean abstraction:                 1.104s
    Solving time:                        3.002s (Max:     0.106s)
    Model enumeration time:              0.114s
    Time for BDD construction:           0.035s (Max:     0.001s)
Time for merge operator:                 5.275s
Time for coverage check:                 0.183s
  Time for BDD entailment checks:        0.128s
Total time for SMT solver (w/o itp):     3.116s

Number of path formula cache hits:   14089286 (94%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    36.533s

Total number of created targets for pointer analysis: 423177
   Number of created targets for uf: *(unsigned_char)* is 97
   Number of created targets for uf: *(struct_xhci_device_context_array)* is 91
   Number of created targets for uf: *(struct_xhci_erst_entry)* is 91
   Number of created targets for uf: *(struct_completion)* is 159
   Number of created targets for uf: *(unsigned_long_long_int)* is 340
   Number of created targets for uf: *(struct_xhci_op_regs)* is 18
   Number of created targets for uf: *(struct_xhci_scratchpad)* is 97
   Number of created targets for uf: *unsigned_long_int is 227
   Number of created targets for uf: *((void)*)* is 114
   Number of created targets for uf: *signed_int is 5341
   Number of created targets for uf: *(struct_xhci_virt_device)* is 1921
   Number of created targets for uf: *(struct_xhci_container_ctx)* is 475
   Number of created targets for uf: *unsigned_char is 1979
   Number of created targets for uf: *(struct_dma_pool)* is 361
   Number of created targets for uf: *(struct_xhci_segment)* is 4208
   Number of created targets for uf: *(struct_list_head)* is 7152
   Number of created targets for uf: *unsigned_long_long_int is 2143
   Number of created targets for uf: *enum_xhci_ring_type is 634
   Number of created targets for uf: *(struct_xhci_command)* is 361
   Number of created targets for uf: *(union_xhci_trb)* is 2618
   Number of created targets for uf: *unsigned_int is 151
   Number of created targets for uf: *(struct_xhci_root_port_bw_info)* is 97
   Number of created targets for uf: *((unsigned_int)*)* is 97
   Number of created targets for uf: *(struct_xhci_ring)* is 945
   Number of created targets for uf: *unsigned_short_int is 18
   Number of created targets for uf: *(struct_usb_hcd)* is 18


Number of BDD nodes:                               301
Size of BDD node table:                            464047
Size of BDD cache:                                 46411
Size of BDD node cleanup queue:                        4369 (count: 2012519, min: 0, max: 642, avg: 0.00)
Time for BDD node cleanup:                             0.129s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  8.140s
  Time for transition matches:                         4.824s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.000s
Automaton transfers with branching:                0
Automaton transfer successors:                     12374525 (count: 12374525, min: 1, max: 1, avg: 1.00) [1 x 12374525]

CPA algorithm statistics
------------------------
Number of iterations:            7946195
Max size of waitlist:            39
Average size of waitlist:        17
Number of computed successors:   8809159
Max successors for one state:    2
Number of times merged:          431860
Number of times stopped:         855178
Number of times breaked:         52

Total time for CPA algorithm:       872.658s (Max:    24.877s)
  Time for choose from waitlist:      1.567s
  Time for precision adjustment:    120.801s
  Time for transfer relation:       718.251s
  Time for merge operator:            8.217s
  Time for stop operator:             5.440s
  Time for adding to reached set:     6.935s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   52
Avg. length of target path (in blocks):               11972 (count: 52, min: 6, max: 429, avg: 230.23)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  16.349s
  Counterexample analysis:                             4.175s (Max:     0.189s, Calls: 52)
    Refinement sat check:                              1.889s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.005s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.070s
  Precision update:                                    0.028s
  ARG update:                                         12.008s

Length of refined path (in blocks):                   11765 (count: 52, min: 5, max: 428, avg: 226.25)
Number of affected states:                            10560 (count: 52, min: 0, max: 426, avg: 203.08)
Length (states) of path with itp 'true':               1153 (count: 52, min: 1, max: 391, avg: 22.17)
Length (states) of path with itp non-trivial itp:     10560 (count: 52, min: 0, max: 426, avg: 203.08)
Length (states) of path with itp 'false':                52 (count: 52, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 52, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:           10509 (count: 52, min: 0, max: 425, avg: 202.10)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                52
Number of successful refinements:     52
Number of failed refinements:         0
Max. size of reached set before ref.: 204441
Max. size of reached set after ref.:  148625
Avg. size of reached set before ref.: 161966.02
Avg. size of reached set after ref.:  9792.06

Total time for CEGAR algorithm:     894.117s
Time for refinements:                21.203s
Average time for refinement:          0.407s
Max time for refinement:              2.101s

Code Coverage
-----------------------------
  Function coverage:      0.187
  Visited lines:          3571
  Total lines:            14655
  Line coverage:          0.244
  Visited conditions:     708
  Total conditions:       3916
  Condition coverage:     0.181

CPAchecker general statistics
-----------------------------
Number of program locations:     19338
Number of CFA edges:             23172
Number of relevant variables:    3460
Number of functions:             445
Number of loops:                 151
Size of reached set:             33528
  Number of reached locations:   2181 (11%)
    Avg states per location:     15
    Max states per location:     1025 (at node N19379)
  Number of reached functions:   83 (19%)
  Number of partitions:          33522
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N10356 (before line 15847), Function xhci_mem_init called from node N937, stack depth 5 [58b95dcc], stack [main, xhci_pci_setup, xhci_gen_setup, xhci_init, xhci_mem_init]])
  Number of target states:       0
  Size of final wait list        13

Time for analysis setup:          6.265s
  Time for loading CPAs:          0.746s
  Time for loading parser:        0.417s
  Time for CFA construction:      5.032s
    Time for parsing file(s):     0.940s
    Time for AST to CFA:          1.753s
    Time for CFA sanity check:    0.729s
    Time for post-processing:     1.530s
      Time for var class.:        0.829s
Time for Analysis:              894.117s
CPU time for analysis:          894.120s
Total time for CPAchecker:      900.385s
Total CPU time for CPAchecker:  900.360s
Time for statistics:              0.584s

Time for Garbage Collector:      57.515s (in 803 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:               1206MB (  1150 MiB) max;    575MB (   548 MiB) avg;   1234MB (  1177 MiB) peak
Used non-heap memory:             42MB (    40 MiB) max;     40MB (    38 MiB) avg;     43MB (    41 MiB) peak
Allocated heap memory:          1226MB (  1170 MiB) max;    846MB (   807 MiB) avg
Allocated non-heap memory:        45MB (    42 MiB) max;     44MB (    42 MiB) avg
Total process virtual memory:  12213MB ( 11648 MiB) max;  12171MB ( 11607 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
