scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 9600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-32_7a-drivers--usb--host--xhci-hcd.ko-ldv_main5_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 9600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_fjz75vd5/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker 1.6.1-svn 6608050+ (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 4142: Dead code detected: __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& kernel_stack)); (CFACreationUtils.addEdgeToCFA, INFO)

line 4145: Dead code detected: __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack)); (CFACreationUtils.addEdgeToCFA, INFO)

line 4148: Dead code detected: __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (8UL) {
  case 1UL:
  __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& kernel_stack));
  goto ldv_6643;
  case 2UL:
  __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack));
  goto ldv_6643;
  case 4UL:
  __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack));
  goto ldv_6643;
  case 8UL:
  __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack));
  goto ldv_6643;
  default:
  __bad_percpu_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 11948: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 12047: Dead code detected: __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& kernel_stack)); (CFACreationUtils.addEdgeToCFA, INFO)

line 12050: Dead code detected: __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack)); (CFACreationUtils.addEdgeToCFA, INFO)

line 12053: Dead code detected: __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (8UL) {
  case 1UL:
  __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& kernel_stack));
  goto ldv_6627;
  case 2UL:
  __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack));
  goto ldv_6627;
  case 4UL:
  __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack));
  goto ldv_6627;
  case 8UL:
  __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack));
  goto ldv_6627;
  default:
  __bad_percpu_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 16011: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 21298: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 22304: Dead code detected: *((u8 *)__gu_p) = (unsigned char )status; (CFACreationUtils.addEdgeToCFA, INFO)

line 22307: Dead code detected: put_unaligned_le16((int )((unsigned short )status), __gu_p); (CFACreationUtils.addEdgeToCFA, INFO)

line 22313: Dead code detected: put_unaligned_le64((unsigned long long )status, __gu_p); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (4UL) {
  case 1UL:
  *((u8 *)__gu_p) = (unsigned char )status;
  goto ldv_25252;
  case 2UL:
  put_unaligned_le16((int )((unsigned short )status), __gu_p);
  goto ldv_25252;
  case 4UL:
  put_unaligned_le32(status, __gu_p);
  goto ldv_25252;
  case 8UL:
  put_unaligned_le64((unsigned long long )status, __gu_p);
  goto ldv_25252;
  default:
  __bad_unaligned_access_size();
  goto ldv_25252;
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 22991: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 25096: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 25706: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 26073: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 12168: Function pointer *(ops->alloc) with type void *(*)(struct device *, size_t , dma_addr_t *, gfp_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 12201: Function pointer *(ops->free) with type void (*)(struct device *, size_t , void *, dma_addr_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_handler_precall to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_remove_hcd to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_put_hcd to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_hcd_pci_remove to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_is_intel_switchable_xhci to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_enable_xhci_ports to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_hcd_pci_probe to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value_probe to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_create_shared_hcd to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_add_hcd to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_warn to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_dev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function synchronize_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function del_timer_sync to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_hcd_is_primary_hcd to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_set_mwi to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dma_set_mask to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function msleep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_root_hub_lost_power to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_disable_msi to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_disable_msix to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_hcd_resume_root_hub to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function init_timer_key to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function set_timer_slack to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function add_timer to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_amd_find_chipset_info to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            49597 (23% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  46493 (94%)
  Because of loop head:            3001 (6%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         103 (0%)
  Times precision was empty:       6713 (14%)
  Times precision was {false}:     530 (1%)
  Times result was cached:         40999 (83%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      1355 (3%)
  Times result was 'false':        728 (1%)
Number of strengthen sat checks:   0
Number of coverage checks:         16494
  BDD entailment checks:           8392
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       51
Number of predicates discovered:          4
Number of abstraction locations:          231
Max number of predicates per location:    3
Avg number of predicates per location:    2
Total predicates per abstraction:         125149
Max number of predicates per abstraction: 3
Avg number of predicates per abstraction: 66.39
Number of irrelevant predicates:          48949 (39%)
Number of preds handled by boolean abs:   2598 (2%)
  Total number of models for allsat:      1355
  Max number of models for allsat:        1
  Avg number of models for allsat:        1.00

Time for post operator:                  1.647s
  Time for path formula creation:        1.554s
Time for strengthen operator:            0.147s
Time for prec operator:                  6.125s
  Time for abstraction:                  5.683s (Max:     0.019s, Count: 49597)
    Boolean abstraction:                 0.576s
    Solving time:                        0.524s (Max:     0.017s)
    Model enumeration time:              0.048s
    Time for BDD construction:           0.033s (Max:     0.008s)
Time for merge operator:                 0.082s
Time for coverage check:                 0.031s
  Time for BDD entailment checks:        0.028s
Total time for SMT solver (w/o itp):     0.572s

Number of path formula cache hits:   253806 (96%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     1.102s

Total number of created targets for pointer analysis: 374
   Number of created targets for uf: *unsigned_short_int is 2
   Number of created targets for uf: *signed_int is 17
   Number of created targets for uf: *unsigned_int is 11
   Number of created targets for uf: *(struct_xhci_op_regs)* is 2
   Number of created targets for uf: *unsigned_long_int is 7
   Number of created targets for uf: *(struct_usb_hcd)* is 2


Number of BDD nodes:                               208
Size of BDD node table:                            464047
Size of BDD cache:                                 46411
Size of BDD node cleanup queue:                        2734 (count: 25934, min: 0, max: 312, avg: 0.11)
Time for BDD node cleanup:                             0.011s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.319s
Automaton transfers with branching:                0
Automaton transfer successors:                       215227 (count: 215227, min: 1, max: 1, avg: 1.00) [1 x 215227]

CPA algorithm statistics
------------------------
Number of iterations:            141125
Max size of waitlist:            26
Average size of waitlist:        8
Number of computed successors:   152967
Max successors for one state:    2
Number of times merged:          4051
Number of times stopped:         10003
Number of times breaked:         103

Total time for CPA algorithm:        21.927s (Max:     0.780s)
  Time for choose from waitlist:      0.066s
  Time for precision adjustment:      6.934s
  Time for transfer relation:        13.720s
  Time for merge operator:            0.194s
  Time for stop operator:             0.251s
  Time for adding to reached set:     0.221s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   103
Avg. length of target path (in blocks):                8144 (count: 103, min: 6, max: 210, avg: 79.07)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   2.072s
  Counterexample analysis:                             1.556s (Max:     0.044s, Calls: 103)
    Refinement sat check:                              0.841s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.003s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.090s
  Precision update:                                    0.064s
  ARG update:                                          0.294s

Length of refined path (in blocks):                    8041 (count: 103, min: 5, max: 209, avg: 78.07)
Number of affected states:                             7835 (count: 103, min: 3, max: 207, avg: 76.07)
Length (states) of path with itp 'true':                103 (count: 103, min: 1, max: 1, avg: 1.00)
Length (states) of path with itp non-trivial itp:      7835 (count: 103, min: 3, max: 207, avg: 76.07)
Length (states) of path with itp 'false':               103 (count: 103, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 103, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:            7732 (count: 103, min: 2, max: 206, avg: 75.07)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                103
Number of successful refinements:     103
Number of failed refinements:         0
Max. size of reached set before ref.: 4361
Max. size of reached set after ref.:  6
Avg. size of reached set before ref.: 1369.15
Avg. size of reached set after ref.:  6.00

Total time for CEGAR algorithm:      24.218s
Time for refinements:                 2.291s
Average time for refinement:          0.022s
Max time for refinement:              0.065s

Code Coverage
-----------------------------
  Function coverage:      0.115
  Visited lines:          1503
  Total lines:            14655
  Line coverage:          0.103
  Visited conditions:     166
  Total conditions:       3916
  Condition coverage:     0.042

CPAchecker general statistics
-----------------------------
Number of program locations:     19338
Number of CFA edges:             23172
Number of relevant variables:    3460
Number of functions:             445
Number of loops:                 151
Size of reached set:             1832
  Number of reached locations:   654 (3%)
    Avg states per location:     2
    Max states per location:     66 (at node N136)
  Number of reached functions:   51 (11%)
  Number of partitions:          1832
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0
  Size of final wait list        5

Time for analysis setup:          6.143s
  Time for loading CPAs:          0.784s
  Time for loading parser:        0.413s
  Time for CFA construction:      4.872s
    Time for parsing file(s):     0.939s
    Time for AST to CFA:          1.760s
    Time for CFA sanity check:    0.569s
    Time for post-processing:     1.473s
      Time for var class.:        0.847s
Time for Analysis:               24.218s
CPU time for analysis:           24.220s
Total time for CPAchecker:       30.364s
Total CPU time for CPAchecker:   30.350s
Time for statistics:              0.109s

Time for Garbage Collector:       0.634s (in 62 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                139MB (   132 MiB) max;     93MB (    89 MiB) avg;    145MB (   138 MiB) peak
Used non-heap memory:             40MB (    39 MiB) max;     36MB (    34 MiB) avg;     41MB (    39 MiB) peak
Allocated heap memory:           255MB (   243 MiB) max;    255MB (   243 MiB) avg
Allocated non-heap memory:        42MB (    40 MiB) max;     38MB (    36 MiB) avg
Total process virtual memory:  12144MB ( 11582 MiB) max;  12135MB ( 11573 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
