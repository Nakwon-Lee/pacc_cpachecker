scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 9600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-32_7a-drivers--usb--host--xhci-hcd.ko-ldv_main5_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 9600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_o2csv2l8/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker 1.6.1-svn 6608050+ (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 4142: Dead code detected: __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& kernel_stack)); (CFACreationUtils.addEdgeToCFA, INFO)

line 4145: Dead code detected: __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack)); (CFACreationUtils.addEdgeToCFA, INFO)

line 4148: Dead code detected: __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (8UL) {
  case 1UL:
  __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& kernel_stack));
  goto ldv_6643;
  case 2UL:
  __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack));
  goto ldv_6643;
  case 4UL:
  __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack));
  goto ldv_6643;
  case 8UL:
  __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack));
  goto ldv_6643;
  default:
  __bad_percpu_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 11948: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 12047: Dead code detected: __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& kernel_stack)); (CFACreationUtils.addEdgeToCFA, INFO)

line 12050: Dead code detected: __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack)); (CFACreationUtils.addEdgeToCFA, INFO)

line 12053: Dead code detected: __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (8UL) {
  case 1UL:
  __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& kernel_stack));
  goto ldv_6627;
  case 2UL:
  __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack));
  goto ldv_6627;
  case 4UL:
  __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack));
  goto ldv_6627;
  case 8UL:
  __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack));
  goto ldv_6627;
  default:
  __bad_percpu_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 16011: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 21298: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 22304: Dead code detected: *((u8 *)__gu_p) = (unsigned char )status; (CFACreationUtils.addEdgeToCFA, INFO)

line 22307: Dead code detected: put_unaligned_le16((int )((unsigned short )status), __gu_p); (CFACreationUtils.addEdgeToCFA, INFO)

line 22313: Dead code detected: put_unaligned_le64((unsigned long long )status, __gu_p); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (4UL) {
  case 1UL:
  *((u8 *)__gu_p) = (unsigned char )status;
  goto ldv_25252;
  case 2UL:
  put_unaligned_le16((int )((unsigned short )status), __gu_p);
  goto ldv_25252;
  case 4UL:
  put_unaligned_le32(status, __gu_p);
  goto ldv_25252;
  case 8UL:
  put_unaligned_le64((unsigned long long )status, __gu_p);
  goto ldv_25252;
  default:
  __bad_unaligned_access_size();
  goto ldv_25252;
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 22991: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 25096: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 25706: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 26073: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 12168: Function pointer *(ops->alloc) with type void *(*)(struct device *, size_t , dma_addr_t *, gfp_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 12201: Function pointer *(ops->free) with type void (*)(struct device *, size_t , void *, dma_addr_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_handler_precall to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_hcd_pci_probe to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_hcd_is_primary_hcd to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value_probe to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_is_intel_switchable_xhci to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_enable_xhci_ports to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_remove_hcd to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_put_hcd to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_hcd_pci_remove to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function msleep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_root_hub_lost_power to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_dev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_set_mwi to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_create_shared_hcd to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_add_hcd to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dma_set_mask to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_warn to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_disable_msi to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_disable_msix to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function del_timer_sync to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dma_pool_free to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function list_del to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dma_pool_destroy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function radix_tree_delete to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function debug_dma_free_coherent to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 12201: Ignoring function call through function pointer *(ops->free): (*(ops->free))(dev, size, vaddr, bus, attrs); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __list_del_entry to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __raw_spin_lock_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function synchronize_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 12168: Ignoring function call through function pointer *(ops->alloc): memory = (*(ops->alloc))(dev, size, dma_handle, tmp___1, attrs); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function debug_dma_alloc_coherent to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dma_pool_create to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_amd_find_chipset_info to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dma_pool_alloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_hcd_resume_root_hub to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function init_timer_key to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function set_timer_slack to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function add_timer to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __init_waitqueue_head to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dmi_get_system_info to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __bitmap_weight to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_enable_msix to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function request_threaded_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_enable_msi_block to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            2752814 (19% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  2499504 (91%)
  Because of loop head:            253085 (9%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         225 (0%)
  Times precision was empty:       983771 (36%)
  Times precision was {false}:     2576 (0%)
  Times result was cached:         1762734 (64%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      3733 (0%)
  Times result was 'false':        2103 (0%)
Number of strengthen sat checks:   0
Number of coverage checks:         1402977
  BDD entailment checks:           466207
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       51
Number of predicates discovered:          4
Number of abstraction locations:          325
Max number of predicates per location:    3
Avg number of predicates per location:    2
Total predicates per abstraction:         5270565
Max number of predicates per abstraction: 3
Avg number of predicates per abstraction: 835.40
Number of irrelevant predicates:          4744293 (90%)
Number of preds handled by boolean abs:   6693 (0%)
  Total number of models for allsat:      3733
  Max number of models for allsat:        1
  Avg number of models for allsat:        1.00

Time for post operator:                 49.413s
  Time for path formula creation:       45.781s
Time for strengthen operator:            5.864s
Time for prec operator:                110.976s
  Time for abstraction:                 95.050s (Max:     0.776s, Count: 2752814)
    Boolean abstraction:                 1.326s
    Solving time:                        1.599s (Max:     0.016s)
    Model enumeration time:              0.126s
    Time for BDD construction:           0.104s (Max:     0.012s)
Time for merge operator:                 2.451s
Time for coverage check:                 0.197s
  Time for BDD entailment checks:        0.134s
Total time for SMT solver (w/o itp):     1.725s

Number of path formula cache hits:   16779178 (97%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    16.757s

Total number of created targets for pointer analysis: 20372
   Number of created targets for uf: *(unsigned_char)* is 141
   Number of created targets for uf: *(struct_completion)* is 71
   Number of created targets for uf: *(struct_xhci_op_regs)* is 2
   Number of created targets for uf: *unsigned_long_int is 7
   Number of created targets for uf: *unsigned_short_int is 2
   Number of created targets for uf: *signed_int is 2481
   Number of created targets for uf: *(struct_xhci_container_ctx)* is 211
   Number of created targets for uf: *(struct_xhci_segment)* is 351
   Number of created targets for uf: *(struct_list_head)* is 781
   Number of created targets for uf: *unsigned_long_long_int is 1121
   Number of created targets for uf: *enum_xhci_ring_type is 71
   Number of created targets for uf: *(union_xhci_trb)* is 211
   Number of created targets for uf: *unsigned_int is 11
   Number of created targets for uf: *(struct_usb_hcd)* is 2


Number of BDD nodes:                               208
Size of BDD node table:                            464047
Size of BDD cache:                                 46411
Size of BDD node cleanup queue:                        7490 (count: 1485427, min: 0, max: 174, avg: 0.01)
Time for BDD node cleanup:                             0.108s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  8.884s
  Time for transition matches:                         5.428s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.000s
Automaton transfers with branching:                0
Automaton transfer successors:                     14228590 (count: 14228590, min: 1, max: 1, avg: 1.00) [1 x 14228590]

CPA algorithm statistics
------------------------
Number of iterations:            9008808
Max size of waitlist:            686
Average size of waitlist:        231
Number of computed successors:   9945535
Max successors for one state:    2
Number of times merged:          468385
Number of times stopped:         860747
Number of times breaked:         225

Total time for CPA algorithm:       870.985s (Max:     8.244s)
  Time for choose from waitlist:      1.664s
  Time for precision adjustment:    148.365s
  Time for transfer relation:       691.633s
  Time for merge operator:            5.827s
  Time for stop operator:             5.218s
  Time for adding to reached set:     7.278s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   225
Avg. length of target path (in blocks):               40449 (count: 225, min: 6, max: 285, avg: 179.77)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  20.253s
  Counterexample analysis:                             8.371s (Max:     0.102s, Calls: 225)
    Refinement sat check:                              3.615s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.020s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.177s
  Precision update:                                    0.131s
  ARG update:                                         11.422s

Length of refined path (in blocks):                   40224 (count: 225, min: 5, max: 284, avg: 178.77)
Number of affected states:                            39774 (count: 225, min: 3, max: 282, avg: 176.77)
Length (states) of path with itp 'true':                225 (count: 225, min: 1, max: 1, avg: 1.00)
Length (states) of path with itp non-trivial itp:     39774 (count: 225, min: 3, max: 282, avg: 176.77)
Length (states) of path with itp 'false':               225 (count: 225, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 225, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:           39549 (count: 225, min: 2, max: 281, avg: 175.77)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                225
Number of successful refinements:     225
Number of failed refinements:         0
Max. size of reached set before ref.: 79465
Max. size of reached set after ref.:  6
Avg. size of reached set before ref.: 40288.00
Avg. size of reached set after ref.:  6.00

Total time for CEGAR algorithm:     894.372s
Time for refinements:                23.375s
Average time for refinement:          0.103s
Max time for refinement:              0.241s

Code Coverage
-----------------------------
  Function coverage:      0.204
  Visited lines:          2985
  Total lines:            14655
  Line coverage:          0.204
  Visited conditions:     528
  Total conditions:       3916
  Condition coverage:     0.135

CPAchecker general statistics
-----------------------------
Number of program locations:     19338
Number of CFA edges:             23172
Number of relevant variables:    3460
Number of functions:             445
Number of loops:                 151
Size of reached set:             19236
  Number of reached locations:   1784 (9%)
    Avg states per location:     10
    Max states per location:     589 (at node N19379)
  Number of reached functions:   91 (20%)
  Number of partitions:          19132
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N1796 (before line 6329), Function xhci_resume called from node N18961, stack depth 3 [77e95111], stack [main, xhci_pci_resume, xhci_resume]])
  Number of target states:       0
  Size of final wait list        110

Time for analysis setup:          5.986s
  Time for loading CPAs:          0.774s
  Time for loading parser:        0.388s
  Time for CFA construction:      4.738s
    Time for parsing file(s):     0.944s
    Time for AST to CFA:          1.690s
    Time for CFA sanity check:    0.491s
    Time for post-processing:     1.442s
      Time for var class.:        0.869s
Time for Analysis:              894.372s
CPU time for analysis:          894.350s
Total time for CPAchecker:      900.360s
Total CPU time for CPAchecker:  900.330s
Time for statistics:              0.303s

Time for Garbage Collector:      54.754s (in 1357 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                716MB (   683 MiB) max;    377MB (   360 MiB) avg;    734MB (   700 MiB) peak
Used non-heap memory:             41MB (    39 MiB) max;     40MB (    38 MiB) avg;     41MB (    39 MiB) peak
Allocated heap memory:           734MB (   700 MiB) max;    554MB (   528 MiB) avg
Allocated non-heap memory:        43MB (    41 MiB) max;     43MB (    41 MiB) avg
Total process virtual memory:  12147MB ( 11584 MiB) max;  12144MB ( 11581 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
