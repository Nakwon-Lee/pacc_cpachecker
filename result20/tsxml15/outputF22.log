scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 9600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-drivers--video--udlfb.ko-main.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 9600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_e58i3p9j/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker 1.6.1-svn 6608050+ (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 7024: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_edid_attr_probe_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_edid_attr_release_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_dlfb_ops_probe_3 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_dlfb_ops_release_3 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_sys_read to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sys_fillrect to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_sys_write to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function schedule_delayed_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_deferred_io_cleanup to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sys_imageblit to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sys_copyarea to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function vmalloc_to_pfn to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function remap_pfn_range to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_var_to_videomode to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function down_timeout to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_deregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 4155: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((const void *)to, 0); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function __builtin_object_size to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function might_fault to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _copy_to_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function down_interruptible to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_remove_bin_file to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function unlink_framebuffer to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_remove_file to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_destroy_modelist to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memcmp to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_edid_to_monspecs to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_videomode_to_var to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_find_best_display to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_find_nearest_mode to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _copy_from_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_add_videomode to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __list_del_entry to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function vmalloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function vfree to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function vzalloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_fmt to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_submit_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_deferred_io_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_free_coherent to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_free_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_get_descriptor to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __usb_get_extra_descriptor to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __list_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __raw_spin_lock_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function lockdep_init_map to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function up to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            3091095 (13% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  2848237 (92%)
  Because of loop head:            238918 (8%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         3940 (0%)
  Times precision was empty:       789662 (26%)
  Times precision was {false}:     3812 (0%)
  Times result was cached:         2263427 (73%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      34194 (1%)
  Times result was 'false':        115080 (4%)
Number of strengthen sat checks:   0
Number of coverage checks:         5647001
  BDD entailment checks:           3010361
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       55
Number of predicates discovered:          23
Number of abstraction locations:          157
Max number of predicates per location:    15
Avg number of predicates per location:    8
Total predicates per abstraction:         18845431
Max number of predicates per abstraction: 15
Avg number of predicates per abstraction: 495.85
Number of irrelevant predicates:          10974236 (58%)
Number of preds handled by boolean abs:   188410 (1%)
  Total number of models for allsat:      61616
  Max number of models for allsat:        72
  Avg number of models for allsat:        1.80

Time for post operator:                106.045s
  Time for path formula creation:      101.872s
Time for strengthen operator:           11.453s
Time for prec operator:                427.898s
  Time for abstraction:                409.915s (Max:     2.972s, Count: 3091095)
    Boolean abstraction:                25.923s
    Solving time:                       20.188s (Max:     0.067s)
    Model enumeration time:              4.152s
    Time for BDD construction:           0.835s (Max:     0.026s)
Time for merge operator:                 6.592s
Time for coverage check:                 1.176s
  Time for BDD entailment checks:        0.941s
Total time for SMT solver (w/o itp):    24.340s

Number of path formula cache hits:   25983499 (91%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    69.865s

Total number of created targets for pointer analysis: 147049
   Number of created targets for uf: *signed_int is 4068
   Number of created targets for uf: *(char)* is 5
   Number of created targets for uf: *(struct_usb_device)* is 813
   Number of created targets for uf: *(struct_list_head)* is 25
   Number of created targets for uf: *_Bool is 861
   Number of created targets for uf: *(struct_device)* is 813
   Number of created targets for uf: *unsigned_int is 2869
   Number of created targets for uf: *unsigned_long_int is 17


Number of BDD nodes:                               61325
Size of BDD node table:                            464047
Size of BDD cache:                                 46411
Size of BDD node cleanup queue:                       78474 (count: 4057654, min: 0, max: 1740, avg: 0.02)
Time for BDD node cleanup:                             0.236s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                 15.860s
  Time for transition matches:                         9.967s
  Time for transition assertions:                      0.008s
  Time for transition actions:                         0.013s
Automaton transfers with branching:                0
Automaton transfer successors:                     24586524 (count: 24599087, min: 0, max: 1, avg: 1.00) [0 x 12563, 1 x 24586524]

CPA algorithm statistics
------------------------
Number of iterations:            12588239
Max size of waitlist:            1253
Average size of waitlist:        508
Number of computed successors:   14911113
Max successors for one state:    2
Number of times merged:          1318320
Number of times stopped:         1747649
Number of times breaked:         3940

Total time for CPA algorithm:       746.778s (Max:     5.968s)
  Time for choose from waitlist:      2.463s
  Time for precision adjustment:    477.147s
  Time for transfer relation:       213.746s
  Time for merge operator:           15.668s
  Time for stop operator:            10.125s
  Time for adding to reached set:     9.957s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   3940
Avg. length of target path (in blocks):              163626 (count: 3940, min: 10, max: 70, avg: 41.53)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  51.862s
  Counterexample analysis:                            36.181s (Max:     0.049s, Calls: 3940)
    Refinement sat check:                             25.388s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.064s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.388s
  Precision update:                                    1.607s
  ARG update:                                         12.713s

Length of refined path (in blocks):                  131388 (count: 3940, min: 4, max: 59, avg: 33.35)
Number of affected states:                            54040 (count: 3940, min: 1, max: 57, avg: 13.72)
Length (states) of path with itp 'true':              73408 (count: 3940, min: 0, max: 38, avg: 18.63)
Length (states) of path with itp non-trivial itp:     54040 (count: 3940, min: 1, max: 57, avg: 13.72)
Length (states) of path with itp 'false':              3940 (count: 3940, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:         109 (count: 3940, min: 0, max: 1, avg: 0.03)
Equal non-trivial interpolants along paths:           49991 (count: 3940, min: 0, max: 56, avg: 12.69)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                3940
Number of successful refinements:     3940
Number of failed refinements:         0
Max. size of reached set before ref.: 53485
Max. size of reached set after ref.:  49733
Avg. size of reached set before ref.: 25790.28
Avg. size of reached set after ref.:  22481.97

Total time for CEGAR algorithm:     896.812s
Time for refinements:               106.111s
Average time for refinement:          0.026s
Max time for refinement:              0.168s

Code Coverage
-----------------------------
  Function coverage:      0.313
  Visited lines:          1303
  Total lines:            2807
  Line coverage:          0.464
  Visited conditions:     242
  Total conditions:       628
  Condition coverage:     0.385

CPAchecker general statistics
-----------------------------
Number of program locations:     3827
Number of CFA edges:             4260
Number of relevant variables:    674
Number of functions:             147
Number of loops:                 24
Size of reached set:             13650
  Number of reached locations:   589 (15%)
    Avg states per location:     23
    Max states per location:     163 (at node N109)
  Number of reached functions:   46 (31%)
  Number of partitions:          13586
    Avg size of partitions:      1
    Max size of partitions:      22 (with key [N2374 (before line 6652), Function main called from node N2361, stack depth 1 [4b869331], stack [main]])
  Number of target states:       0
  Size of final wait list        439

Time for analysis setup:          3.515s
  Time for loading CPAs:          0.653s
  Time for loading parser:        0.418s
  Time for CFA construction:      2.342s
    Time for parsing file(s):     0.593s
    Time for AST to CFA:          0.821s
    Time for CFA sanity check:    0.185s
    Time for post-processing:     0.600s
      Time for var class.:        0.299s
Time for Analysis:              896.812s
CPU time for analysis:          896.810s
Total time for CPAchecker:      900.330s
Total CPU time for CPAchecker:  900.320s
Time for statistics:              0.186s

Time for Garbage Collector:      56.321s (in 1315 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:               1907MB (  1818 MiB) max;    967MB (   922 MiB) avg;   1934MB (  1844 MiB) peak
Used non-heap memory:             41MB (    39 MiB) max;     40MB (    39 MiB) avg;     42MB (    40 MiB) peak
Allocated heap memory:          2183MB (  2082 MiB) max;   1400MB (  1335 MiB) avg
Allocated non-heap memory:        44MB (    42 MiB) max;     43MB (    41 MiB) avg
Total process virtual memory:  12621MB ( 12036 MiB) max;  12347MB ( 11775 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
