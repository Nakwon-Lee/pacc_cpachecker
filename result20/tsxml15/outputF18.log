scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 9600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-drivers--video--udlfb.ko-main.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 9600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_yi8zz9w4/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker 1.6.1-svn 6608050+ (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 7024: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_edid_attr_probe_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_edid_attr_release_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_dlfb_ops_probe_3 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_dlfb_ops_release_3 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_sys_read to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sys_fillrect to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sys_imageblit to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sys_copyarea to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function schedule_delayed_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_deferred_io_cleanup to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function vmalloc_to_pfn to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function remap_pfn_range to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_sys_write to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_deregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function might_fault to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _copy_to_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_var_to_videomode to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 4155: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((const void *)to, 0); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function __builtin_object_size to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function down_timeout to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function down_interruptible to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_remove_bin_file to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function unlink_framebuffer to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_remove_file to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __list_del_entry to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _copy_from_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_fmt to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_destroy_modelist to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memcmp to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_edid_to_monspecs to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_videomode_to_var to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_deferred_io_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_find_nearest_mode to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_find_best_display to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_add_videomode to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_submit_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function vmalloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function vfree to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function vzalloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_free_coherent to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_free_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_control_msg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __list_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function up to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __raw_spin_lock_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_get_descriptor to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __usb_get_extra_descriptor to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function lockdep_init_map to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __init_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function init_timer_key to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_alloc_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_alloc_coherent to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 4626: Return type of function __builtin_prefetch is void, but result is used as type int: __builtin_prefetch((const void *)front); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function __builtin_prefetch to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 4627: Return type of function __builtin_prefetch is void, but result is used as type int: __builtin_prefetch((const void *)back); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            3176925 (15% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  2932073 (92%)
  Because of loop head:            244089 (8%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         763 (0%)
  Times precision was empty:       491860 (15%)
  Times precision was {false}:     3183 (0%)
  Times result was cached:         2638303 (83%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      43579 (1%)
  Times result was 'false':        114692 (4%)
Number of strengthen sat checks:   0
Number of coverage checks:         3230253
  BDD entailment checks:           1307345
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       55
Number of predicates discovered:          28
Number of abstraction locations:          224
Max number of predicates per location:    16
Avg number of predicates per location:    8
Total predicates per abstraction:         20191996
Max number of predicates per abstraction: 16
Avg number of predicates per abstraction: 431.80
Number of irrelevant predicates:          4416585 (22%)
Number of preds handled by boolean abs:   265587 (1%)
  Total number of models for allsat:      72664
  Max number of models for allsat:        72
  Avg number of models for allsat:        1.67

Time for post operator:                122.689s
  Time for path formula creation:      118.291s
Time for strengthen operator:            9.660s
Time for prec operator:                541.028s
  Time for abstraction:                522.736s (Max:     1.975s, Count: 3176925)
    Boolean abstraction:                35.324s
    Solving time:                       27.853s (Max:     0.139s)
    Model enumeration time:              4.872s
    Time for BDD construction:           1.021s (Max:     0.042s)
Time for merge operator:                 7.935s
Time for coverage check:                 0.743s
  Time for BDD entailment checks:        0.562s
Total time for SMT solver (w/o itp):    32.725s

Number of path formula cache hits:   20833758 (87%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    93.329s

Total number of created targets for pointer analysis: 336735
   Number of created targets for uf: *signed_int is 4737
   Number of created targets for uf: *(char)* is 14
   Number of created targets for uf: *(struct_usb_device)* is 1148
   Number of created targets for uf: *(struct_urb)* is 1362
   Number of created targets for uf: *(struct_list_head)* is 14485
   Number of created targets for uf: *(unsigned_char)* is 12
   Number of created targets for uf: *_Bool is 433
   Number of created targets for uf: *char is 71
   Number of created targets for uf: *unsigned_int is 38601
   Number of created targets for uf: *(struct_device)* is 246
   Number of created targets for uf: *(struct_dlfb_data)* is 1359
   Number of created targets for uf: *unsigned_long_int is 2153


Number of BDD nodes:                               60887
Size of BDD node table:                            464047
Size of BDD cache:                                 46411
Size of BDD node cleanup queue:                       98516 (count: 2117891, min: 0, max: 1920, avg: 0.05)
Time for BDD node cleanup:                             0.193s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                 14.019s
  Time for transition matches:                         8.769s
  Time for transition assertions:                      0.006s
  Time for transition actions:                         0.014s
Automaton transfers with branching:                0
Automaton transfer successors:                     20621622 (count: 20626113, min: 0, max: 1, avg: 1.00) [0 x 4491, 1 x 20621622]

CPA algorithm statistics
------------------------
Number of iterations:            11516113
Max size of waitlist:            1052
Average size of waitlist:        380
Number of computed successors:   13258650
Max successors for one state:    2
Number of times merged:          961454
Number of times stopped:         1406652
Number of times breaked:         763

Total time for CPA algorithm:       870.111s (Max:     7.314s)
  Time for choose from waitlist:      2.402s
  Time for precision adjustment:    590.883s
  Time for transfer relation:       221.776s
  Time for merge operator:           15.302s
  Time for stop operator:             9.926s
  Time for adding to reached set:    12.132s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   763
Avg. length of target path (in blocks):               28463 (count: 763, min: 10, max: 100, avg: 37.30)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  19.953s
  Counterexample analysis:                             6.283s (Max:     0.024s, Calls: 763)
    Refinement sat check:                              4.230s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.013s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.108s
  Precision update:                                    0.308s
  ARG update:                                         13.068s

Length of refined path (in blocks):                   21336 (count: 763, min: 4, max: 77, avg: 27.96)
Number of affected states:                            15972 (count: 763, min: 1, max: 76, avg: 20.93)
Length (states) of path with itp 'true':               4601 (count: 763, min: 0, max: 30, avg: 6.03)
Length (states) of path with itp non-trivial itp:     15972 (count: 763, min: 1, max: 76, avg: 20.93)
Length (states) of path with itp 'false':               763 (count: 763, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:         139 (count: 763, min: 0, max: 1, avg: 0.18)
Equal non-trivial interpolants along paths:           15070 (count: 763, min: 0, max: 74, avg: 19.75)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                763
Number of successful refinements:     763
Number of failed refinements:         0
Max. size of reached set before ref.: 86647
Max. size of reached set after ref.:  32689
Avg. size of reached set before ref.: 18776.36
Avg. size of reached set after ref.:  3427.78

Total time for CEGAR algorithm:     896.401s
Time for refinements:                25.218s
Average time for refinement:          0.033s
Max time for refinement:              0.278s

Code Coverage
-----------------------------
  Function coverage:      0.442
  Visited lines:          1673
  Total lines:            2807
  Line coverage:          0.596
  Visited conditions:     317
  Total conditions:       628
  Condition coverage:     0.505

CPAchecker general statistics
-----------------------------
Number of program locations:     3827
Number of CFA edges:             4260
Number of relevant variables:    674
Number of functions:             147
Number of loops:                 24
Size of reached set:             26338
  Number of reached locations:   868 (23%)
    Avg states per location:     30
    Max states per location:     397 (at node N2804)
  Number of reached functions:   65 (44%)
  Number of partitions:          26136
    Avg size of partitions:      1
    Max size of partitions:      18 (with key [N2374 (before line 6652), Function main called from node N2361, stack depth 1 [1b15f922], stack [main]])
  Number of target states:       0
  Size of final wait list        304

Time for analysis setup:          3.462s
  Time for loading CPAs:          0.637s
  Time for loading parser:        0.407s
  Time for CFA construction:      2.331s
    Time for parsing file(s):     0.603s
    Time for AST to CFA:          0.826s
    Time for CFA sanity check:    0.174s
    Time for post-processing:     0.591s
      Time for var class.:        0.310s
Time for Analysis:              896.401s
CPU time for analysis:          896.420s
Total time for CPAchecker:      899.865s
Total CPU time for CPAchecker:  899.880s
Time for statistics:              0.378s

Time for Garbage Collector:      63.298s (in 1590 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:               2180MB (  2079 MiB) max;    992MB (   946 MiB) avg;   2234MB (  2131 MiB) peak
Used non-heap memory:             42MB (    40 MiB) max;     41MB (    39 MiB) avg;     42MB (    40 MiB) peak
Allocated heap memory:          2533MB (  2415 MiB) max;   1492MB (  1423 MiB) avg
Allocated non-heap memory:        43MB (    41 MiB) max;     42MB (    40 MiB) avg
Total process virtual memory:  12887MB ( 12290 MiB) max;  12487MB ( 11908 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
