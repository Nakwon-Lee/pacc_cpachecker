scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 9600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-drivers--video--udlfb.ko-main.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 9600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_g890tdqd/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker 1.6.1-svn 6608050+ (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 7024: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_edid_attr_probe_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_edid_attr_release_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_dlfb_ops_probe_3 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_dlfb_ops_release_3 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_sys_read to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sys_fillrect to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function down_timeout to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __list_del_entry to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 4626: Return type of function __builtin_prefetch is void, but result is used as type int: __builtin_prefetch((const void *)front); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function __builtin_prefetch to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Cannot get declaration of function __builtin_prefetch, ignoring calls to it. (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 4627: Return type of function __builtin_prefetch is void, but result is used as type int: __builtin_prefetch((const void *)back); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_submit_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __list_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function schedule_delayed_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function up to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_sys_write to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_deferred_io_cleanup to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function vfree to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sys_imageblit to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sys_copyarea to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_deregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_var_to_videomode to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 4155: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((const void *)to, 0); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function __builtin_object_size to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function might_fault to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _copy_to_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _copy_from_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_fmt to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function vmalloc_to_pfn to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function remap_pfn_range to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_deferred_io_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function down_interruptible to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_free_coherent to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_free_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_remove_bin_file to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function unlink_framebuffer to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_remove_file to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_get_descriptor to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __usb_get_extra_descriptor to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __raw_spin_lock_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __init_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function lockdep_init_map to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function init_timer_key to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_alloc_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_alloc_coherent to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_destroy_modelist to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            4538182 (18% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  3858090 (85%)
  Because of loop head:            679528 (15%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         564 (0%)
  Times precision was empty:       485298 (11%)
  Times precision was {false}:     1629 (0%)
  Times result was cached:         4007809 (88%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      43446 (1%)
  Times result was 'false':        117442 (3%)
Number of strengthen sat checks:   0
Number of coverage checks:         2208176
  BDD entailment checks:           917592
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       55
Number of predicates discovered:          47
Number of abstraction locations:          277
Max number of predicates per location:    20
Avg number of predicates per location:    7
Total predicates per abstraction:         20473712
Max number of predicates per abstraction: 20
Avg number of predicates per abstraction: 454.21
Number of irrelevant predicates:          12401877 (61%)
Number of preds handled by boolean abs:   189112 (1%)
  Total number of models for allsat:      54545
  Max number of models for allsat:        48
  Avg number of models for allsat:        1.26

Time for post operator:                 74.374s
  Time for path formula creation:       69.603s
Time for strengthen operator:           10.951s
Time for prec operator:                541.516s
  Time for abstraction:                517.475s (Max:     1.525s, Count: 4538182)
    Boolean abstraction:                31.453s
    Solving time:                       26.187s (Max:     0.013s)
    Model enumeration time:              2.695s
    Time for BDD construction:           0.703s (Max:     0.013s)
Time for merge operator:                 2.544s
Time for coverage check:                 0.541s
  Time for BDD entailment checks:        0.440s
Total time for SMT solver (w/o itp):    28.882s

Number of path formula cache hits:   28669404 (96%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    33.954s

Total number of created targets for pointer analysis: 67662
   Number of created targets for uf: *signed_int is 87
   Number of created targets for uf: *(char)* is 23
   Number of created targets for uf: *(struct_usb_device)* is 88
   Number of created targets for uf: *(struct_urb)* is 691
   Number of created targets for uf: *(struct_list_head)* is 3725
   Number of created targets for uf: *(unsigned_char)* is 200
   Number of created targets for uf: *_Bool is 6
   Number of created targets for uf: *(struct_device)* is 88
   Number of created targets for uf: *unsigned_int is 418
   Number of created targets for uf: *char is 4
   Number of created targets for uf: *(struct_dlfb_data)* is 254
   Number of created targets for uf: *unsigned_long_int is 180


Number of BDD nodes:                               22959
Size of BDD node table:                            464047
Size of BDD cache:                                 46411
Size of BDD node cleanup queue:                       96834 (count: 1693418, min: 0, max: 2586, avg: 0.06)
Time for BDD node cleanup:                             0.130s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                 14.489s
  Time for transition matches:                         8.289s
  Time for transition assertions:                      0.001s
  Time for transition actions:                         0.005s
Automaton transfers with branching:                0
Automaton transfer successors:                     25006510 (count: 25007413, min: 0, max: 1, avg: 1.00) [0 x 903, 1 x 25006510]

CPA algorithm statistics
------------------------
Number of iterations:            13944818
Max size of waitlist:            156
Average size of waitlist:        44
Number of computed successors:   15388099
Max successors for one state:    2
Number of times merged:          645292
Number of times stopped:         1309897
Number of times breaked:         564

Total time for CPA algorithm:       832.400s (Max:    13.413s)
  Time for choose from waitlist:      2.614s
  Time for precision adjustment:    600.096s
  Time for transfer relation:       184.218s
  Time for merge operator:            7.834s
  Time for stop operator:             9.174s
  Time for adding to reached set:    10.723s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   564
Avg. length of target path (in blocks):               71717 (count: 564, min: 9, max: 627, avg: 127.16)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  47.950s
  Counterexample analysis:                            27.549s (Max:     0.600s, Calls: 564)
    Refinement sat check:                             12.385s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.022s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.159s
  Precision update:                                    0.340s
  ARG update:                                         19.671s

Length of refined path (in blocks):                   31703 (count: 564, min: 4, max: 621, avg: 56.21)
Number of affected states:                            22704 (count: 564, min: 1, max: 620, avg: 40.26)
Length (states) of path with itp 'true':               8435 (count: 564, min: 0, max: 586, avg: 14.96)
Length (states) of path with itp non-trivial itp:     22704 (count: 564, min: 1, max: 620, avg: 40.26)
Length (states) of path with itp 'false':               564 (count: 564, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:         336 (count: 564, min: 0, max: 7, avg: 0.60)
Equal non-trivial interpolants along paths:           21804 (count: 564, min: 0, max: 618, avg: 38.66)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                564
Number of successful refinements:     564
Number of failed refinements:         0
Max. size of reached set before ref.: 102664
Max. size of reached set after ref.:  69988
Avg. size of reached set before ref.: 44313.25
Avg. size of reached set after ref.:  19652.56

Total time for CEGAR algorithm:     896.933s
Time for refinements:                58.611s
Average time for refinement:          0.103s
Max time for refinement:              0.668s

Code Coverage
-----------------------------
  Function coverage:      0.571
  Visited lines:          2070
  Total lines:            2807
  Line coverage:          0.737
  Visited conditions:     399
  Total conditions:       628
  Condition coverage:     0.635

CPAchecker general statistics
-----------------------------
Number of program locations:     3827
Number of CFA edges:             4260
Number of relevant variables:    674
Number of functions:             147
Number of loops:                 24
Size of reached set:             52134
  Number of reached locations:   1197 (31%)
    Avg states per location:     43
    Max states per location:     906 (at node N267)
  Number of reached functions:   84 (57%)
  Number of partitions:          51651
    Avg size of partitions:      1
    Max size of partitions:      18 (with key [N2374 (before line 6652), Function main called from node N2361, stack depth 1 [4b869331], stack [main]])
  Number of target states:       0
  Size of final wait list        141

Time for analysis setup:          3.471s
  Time for loading CPAs:          0.614s
  Time for loading parser:        0.388s
  Time for CFA construction:      2.369s
    Time for parsing file(s):     0.565s
    Time for AST to CFA:          0.835s
    Time for CFA sanity check:    0.192s
    Time for post-processing:     0.622s
      Time for var class.:        0.291s
Time for Analysis:              896.933s
CPU time for analysis:          896.930s
Total time for CPAchecker:      900.407s
Total CPU time for CPAchecker:  900.390s
Time for statistics:              0.452s

Time for Garbage Collector:      84.982s (in 2015 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:               1132MB (  1080 MiB) max;    536MB (   511 MiB) avg;   1188MB (  1133 MiB) peak
Used non-heap memory:             41MB (    39 MiB) max;     40MB (    38 MiB) avg;     42MB (    40 MiB) peak
Allocated heap memory:          1312MB (  1252 MiB) max;    785MB (   748 MiB) avg
Allocated non-heap memory:        43MB (    41 MiB) max;     42MB (    40 MiB) avg
Total process virtual memory:  13228MB ( 12615 MiB) max;  12312MB ( 11742 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
