scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 9600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-drivers--video--udlfb.ko-main.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 9600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_bj7bxjrf/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker 1.6.1-svn 6608050+ (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 7024: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_edid_attr_probe_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_edid_attr_release_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_dlfb_ops_probe_3 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_dlfb_ops_release_3 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_sys_read to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_deregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sys_copyarea to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sys_imageblit to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sys_fillrect to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_var_to_videomode to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function schedule_delayed_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_deferred_io_cleanup to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function vfree to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_deferred_io_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function down_timeout to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __list_del_entry to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function vmalloc_to_pfn to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function remap_pfn_range to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function down_interruptible to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_free_coherent to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_free_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_remove_bin_file to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function unlink_framebuffer to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_remove_file to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_submit_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __list_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function up to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_sys_write to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function might_fault to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _copy_to_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 4155: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((const void *)to, 0); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function __builtin_object_size to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function _copy_from_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_fmt to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 4626: Return type of function __builtin_prefetch is void, but result is used as type int: __builtin_prefetch((const void *)front); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function __builtin_prefetch to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 4627: Return type of function __builtin_prefetch is void, but result is used as type int: __builtin_prefetch((const void *)back); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function usb_get_descriptor to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __usb_get_extra_descriptor to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __raw_spin_lock_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function lockdep_init_map to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __init_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function init_timer_key to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_alloc_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_alloc_coherent to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_destroy_modelist to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            2617156 (18% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  2197552 (84%)
  Because of loop head:            419084 (16%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         520 (0%)
  Times precision was empty:       258169 (10%)
  Times precision was {false}:     2406 (0%)
  Times result was cached:         2298988 (88%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      57593 (2%)
  Times result was 'false':        82127 (3%)
Number of strengthen sat checks:   0
Number of coverage checks:         1476128
  BDD entailment checks:           601766
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       55
Number of predicates discovered:          40
Number of abstraction locations:          262
Max number of predicates per location:    15
Avg number of predicates per location:    9
Total predicates per abstraction:         18856150
Max number of predicates per abstraction: 15
Avg number of predicates per abstraction: 314.27
Number of irrelevant predicates:          4138300 (22%)
Number of preds handled by boolean abs:   401448 (2%)
  Total number of models for allsat:      75370
  Max number of models for allsat:        36
  Avg number of models for allsat:        1.31

Time for post operator:                128.820s
  Time for path formula creation:      125.850s
Time for strengthen operator:            6.927s
Time for prec operator:                594.728s
  Time for abstraction:                577.572s (Max:     4.128s, Count: 2617156)
    Boolean abstraction:                49.848s
    Solving time:                       41.095s (Max:     0.093s)
    Model enumeration time:              4.044s
    Time for BDD construction:           1.072s (Max:     0.035s)
Time for merge operator:                 3.598s
Time for coverage check:                 0.442s
  Time for BDD entailment checks:        0.357s
Total time for SMT solver (w/o itp):    45.139s

Number of path formula cache hits:   13716407 (80%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:   102.969s

Total number of created targets for pointer analysis: 321960
   Number of created targets for uf: *signed_int is 1113
   Number of created targets for uf: *(char)* is 7653
   Number of created targets for uf: *(struct_usb_device)* is 266
   Number of created targets for uf: *(struct_urb)* is 776
   Number of created targets for uf: *(struct_list_head)* is 5787
   Number of created targets for uf: *(unsigned_char)* is 2170
   Number of created targets for uf: *_Bool is 85
   Number of created targets for uf: *char is 46
   Number of created targets for uf: *unsigned_int is 3973
   Number of created targets for uf: *(struct_device)* is 52
   Number of created targets for uf: *(struct_dlfb_data)* is 677
   Number of created targets for uf: *unsigned_long_int is 519


Number of BDD nodes:                               20328
Size of BDD node table:                            464047
Size of BDD cache:                                 46411
Size of BDD node cleanup queue:                      132366 (count: 1247029, min: 0, max: 4827, avg: 0.11)
Time for BDD node cleanup:                             0.139s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                 10.088s
  Time for transition matches:                         5.505s
  Time for transition assertions:                      0.001s
  Time for transition actions:                         0.010s
Automaton transfers with branching:                0
Automaton transfer successors:                     14938125 (count: 14938307, min: 0, max: 1, avg: 1.00) [0 x 182, 1 x 14938125]

CPA algorithm statistics
------------------------
Number of iterations:            8448689
Max size of waitlist:            46
Average size of waitlist:        20
Number of computed successors:   9381354
Max successors for one state:    2
Number of times merged:          437181
Number of times stopped:         839819
Number of times breaked:         520

Total time for CPA algorithm:       874.738s (Max:    13.172s)
  Time for choose from waitlist:      2.065s
  Time for precision adjustment:    631.015s
  Time for transfer relation:       204.822s
  Time for merge operator:            7.294s
  Time for stop operator:             6.282s
  Time for adding to reached set:     9.285s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   520
Avg. length of target path (in blocks):               31359 (count: 520, min: 9, max: 291, avg: 60.31)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  18.746s
  Counterexample analysis:                             8.589s (Max:     0.215s, Calls: 520)
    Refinement sat check:                              4.641s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.022s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.163s
  Precision update:                                    0.304s
  ARG update:                                          9.504s

Length of refined path (in blocks):                   28006 (count: 520, min: 4, max: 278, avg: 53.86)
Number of affected states:                            25536 (count: 520, min: 0, max: 277, avg: 49.11)
Length (states) of path with itp 'true':               1950 (count: 520, min: 0, max: 227, avg: 3.75)
Length (states) of path with itp non-trivial itp:     25536 (count: 520, min: 0, max: 277, avg: 49.11)
Length (states) of path with itp 'false':               520 (count: 520, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:         180 (count: 520, min: 0, max: 5, avg: 0.35)
Equal non-trivial interpolants along paths:           24837 (count: 520, min: 0, max: 275, avg: 47.76)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                520
Number of successful refinements:     520
Number of failed refinements:         0
Max. size of reached set before ref.: 90615
Max. size of reached set after ref.:  10812
Avg. size of reached set before ref.: 16812.56
Avg. size of reached set after ref.:  553.63

Total time for CEGAR algorithm:     896.440s
Time for refinements:                21.543s
Average time for refinement:          0.041s
Max time for refinement:              0.315s

Code Coverage
-----------------------------
  Function coverage:      0.531
  Visited lines:          1948
  Total lines:            2807
  Line coverage:          0.694
  Visited conditions:     359
  Total conditions:       628
  Condition coverage:     0.572

CPAchecker general statistics
-----------------------------
Number of program locations:     3827
Number of CFA edges:             4260
Number of relevant variables:    674
Number of functions:             147
Number of loops:                 24
Size of reached set:             4768
  Number of reached locations:   1082 (28%)
    Avg states per location:     4
    Max states per location:     75 (at node N267)
  Number of reached functions:   78 (53%)
  Number of partitions:          4736
    Avg size of partitions:      1
    Max size of partitions:      5 (with key [N2374 (before line 6652), Function main called from node N2361, stack depth 1 [1b15f922], stack [main]])
  Number of target states:       0
  Size of final wait list        16

Time for analysis setup:          3.416s
  Time for loading CPAs:          0.545s
  Time for loading parser:        0.396s
  Time for CFA construction:      2.411s
    Time for parsing file(s):     0.622s
    Time for AST to CFA:          0.876s
    Time for CFA sanity check:    0.184s
    Time for post-processing:     0.580s
      Time for var class.:        0.301s
Time for Analysis:              896.440s
CPU time for analysis:          896.450s
Total time for CPAchecker:      899.858s
Total CPU time for CPAchecker:  899.850s
Time for statistics:              0.128s

Time for Garbage Collector:      53.162s (in 1207 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:               2259MB (  2154 MiB) max;   1118MB (  1067 MiB) avg;   2267MB (  2162 MiB) peak
Used non-heap memory:             41MB (    39 MiB) max;     41MB (    39 MiB) avg;     42MB (    40 MiB) peak
Allocated heap memory:          2969MB (  2831 MiB) max;   1710MB (  1631 MiB) avg
Allocated non-heap memory:        43MB (    41 MiB) max;     43MB (    41 MiB) avg
Total process virtual memory:  14106MB ( 13452 MiB) max;  12910MB ( 12312 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
