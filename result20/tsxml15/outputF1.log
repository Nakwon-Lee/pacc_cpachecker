scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 9600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-drivers--video--udlfb.ko-main.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 9600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_3h4p6amu/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker 1.6.1-svn 6608050+ (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 7024: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_edid_attr_probe_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_edid_attr_release_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_dlfb_ops_probe_3 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_dlfb_ops_release_3 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_sys_read to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sys_fillrect to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_sys_write to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function schedule_delayed_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_deferred_io_cleanup to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sys_imageblit to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sys_copyarea to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function down_timeout to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function vmalloc_to_pfn to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function remap_pfn_range to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_deregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_var_to_videomode to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_destroy_modelist to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 4155: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((const void *)to, 0); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function __builtin_object_size to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function might_fault to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _copy_to_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _copy_from_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function down_interruptible to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __list_del_entry to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_remove_bin_file to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function unlink_framebuffer to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_remove_file to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_fmt to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function vfree to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_edid_to_monspecs to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_videomode_to_var to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memcmp to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_find_best_display to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_find_nearest_mode to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_free_coherent to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_free_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 4626: Return type of function __builtin_prefetch is void, but result is used as type int: __builtin_prefetch((const void *)front); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function __builtin_prefetch to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 4627: Return type of function __builtin_prefetch is void, but result is used as type int: __builtin_prefetch((const void *)back); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function usb_submit_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __list_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_deferred_io_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_get_descriptor to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __usb_get_extra_descriptor to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function up to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __raw_spin_lock_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function lockdep_init_map to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __init_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function init_timer_key to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_alloc_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_alloc_coherent to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            4792317 (16% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  4307972 (90%)
  Because of loop head:            483824 (10%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         521 (0%)
  Times precision was empty:       1635111 (34%)
  Times precision was {false}:     3846 (0%)
  Times result was cached:         3123690 (65%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      29670 (1%)
  Times result was 'false':        127076 (3%)
Number of strengthen sat checks:   0
Number of coverage checks:         4873652
  BDD entailment checks:           2319354
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       55
Number of predicates discovered:          23
Number of abstraction locations:          187
Max number of predicates per location:    15
Avg number of predicates per location:    7
Total predicates per abstraction:         22247295
Max number of predicates per abstraction: 15
Avg number of predicates per abstraction: 663.78
Number of irrelevant predicates:          7888668 (35%)
Number of preds handled by boolean abs:   162861 (1%)
  Total number of models for allsat:      48123
  Max number of models for allsat:        72
  Avg number of models for allsat:        1.62

Time for post operator:                 68.636s
  Time for path formula creation:       62.994s
Time for strengthen operator:           12.700s
Time for prec operator:                517.269s
  Time for abstraction:                489.718s (Max:     1.555s, Count: 4792317)
    Boolean abstraction:                19.701s
    Solving time:                       15.899s (Max:     0.017s)
    Model enumeration time:              2.674s
    Time for BDD construction:           0.726s (Max:     0.063s)
Time for merge operator:                 4.573s
Time for coverage check:                 1.161s
  Time for BDD entailment checks:        0.874s
Total time for SMT solver (w/o itp):    18.573s

Number of path formula cache hits:   35176348 (97%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    28.598s

Total number of created targets for pointer analysis: 48911
   Number of created targets for uf: *signed_int is 811
   Number of created targets for uf: *(char)* is 376
   Number of created targets for uf: *(struct_usb_device)* is 121
   Number of created targets for uf: *(struct_urb)* is 95
   Number of created targets for uf: *(struct_list_head)* is 1006
   Number of created targets for uf: *(unsigned_char)* is 633
   Number of created targets for uf: *_Bool is 42
   Number of created targets for uf: *(struct_device)* is 121
   Number of created targets for uf: *unsigned_int is 547
   Number of created targets for uf: *(struct_dlfb_data)* is 15
   Number of created targets for uf: *unsigned_long_int is 143


Number of BDD nodes:                               46004
Size of BDD node table:                            464047
Size of BDD cache:                                 46411
Size of BDD node cleanup queue:                       68542 (count: 4201776, min: 0, max: 1272, avg: 0.02)
Time for BDD node cleanup:                             0.247s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                 17.517s
  Time for transition matches:                        10.322s
  Time for transition assertions:                      0.001s
  Time for transition actions:                         0.020s
Automaton transfers with branching:                0
Automaton transfer successors:                     30383599 (count: 30391658, min: 0, max: 1, avg: 1.00) [0 x 8059, 1 x 30383599]

CPA algorithm statistics
------------------------
Number of iterations:            16610915
Max size of waitlist:            1981
Average size of waitlist:        802
Number of computed successors:   19092825
Max successors for one state:    2
Number of times merged:          1277149
Number of times stopped:         1919272
Number of times breaked:         521

Total time for CPA algorithm:       857.114s (Max:     6.487s)
  Time for choose from waitlist:      4.447s
  Time for precision adjustment:    588.486s
  Time for transfer relation:       198.989s
  Time for merge operator:           14.874s
  Time for stop operator:            11.746s
  Time for adding to reached set:    16.508s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   521
Avg. length of target path (in blocks):               15280 (count: 521, min: 9, max: 49, avg: 29.33)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  26.030s
  Counterexample analysis:                             3.923s (Max:     0.022s, Calls: 521)
    Refinement sat check:                              2.692s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.012s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.075s
  Precision update:                                    0.257s
  ARG update:                                         21.637s

Length of refined path (in blocks):                   11081 (count: 521, min: 4, max: 48, avg: 21.27)
Number of affected states:                             8735 (count: 521, min: 1, max: 46, avg: 16.77)
Length (states) of path with itp 'true':               1825 (count: 521, min: 0, max: 16, avg: 3.50)
Length (states) of path with itp non-trivial itp:      8735 (count: 521, min: 1, max: 46, avg: 16.77)
Length (states) of path with itp 'false':               521 (count: 521, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:         172 (count: 521, min: 0, max: 1, avg: 0.33)
Equal non-trivial interpolants along paths:            8042 (count: 521, min: 0, max: 45, avg: 15.44)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                521
Number of successful refinements:     521
Number of failed refinements:         0
Max. size of reached set before ref.: 127087
Max. size of reached set after ref.:  122727
Avg. size of reached set before ref.: 46995.10
Avg. size of reached set after ref.:  14378.30

Total time for CEGAR algorithm:     896.827s
Time for refinements:                35.757s
Average time for refinement:          0.068s
Max time for refinement:              0.308s

Code Coverage
-----------------------------
  Function coverage:      0.510
  Visited lines:          1849
  Total lines:            2807
  Line coverage:          0.659
  Visited conditions:     357
  Total conditions:       628
  Condition coverage:     0.568

CPAchecker general statistics
-----------------------------
Number of program locations:     3827
Number of CFA edges:             4260
Number of relevant variables:    674
Number of functions:             147
Number of loops:                 24
Size of reached set:             53128
  Number of reached locations:   1025 (27%)
    Avg states per location:     51
    Max states per location:     665 (at node N2804)
  Number of reached functions:   75 (51%)
  Number of partitions:          52715
    Avg size of partitions:      1
    Max size of partitions:      20 (with key [N2374 (before line 6652), Function main called from node N2361, stack depth 1 [4b869331], stack [main]])
  Number of target states:       0
  Size of final wait list        1173

Time for analysis setup:          3.515s
  Time for loading CPAs:          0.630s
  Time for loading parser:        0.415s
  Time for CFA construction:      2.386s
    Time for parsing file(s):     0.608s
    Time for AST to CFA:          0.844s
    Time for CFA sanity check:    0.199s
    Time for post-processing:     0.593s
      Time for var class.:        0.281s
Time for Analysis:              896.827s
CPU time for analysis:          896.820s
Total time for CPAchecker:      900.345s
Total CPU time for CPAchecker:  900.330s
Time for statistics:              0.463s

Time for Garbage Collector:     105.469s (in 2709 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:               1246MB (  1188 MiB) max;    454MB (   433 MiB) avg;   1294MB (  1234 MiB) peak
Used non-heap memory:             41MB (    39 MiB) max;     40MB (    38 MiB) avg;     42MB (    40 MiB) peak
Allocated heap memory:          1292MB (  1232 MiB) max;    664MB (   633 MiB) avg
Allocated non-heap memory:        44MB (    42 MiB) max;     44MB (    42 MiB) avg
Total process virtual memory:  12416MB ( 11841 MiB) max;  12228MB ( 11661 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
