scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 9600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-drivers--video--udlfb.ko-main.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 9600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_2wxbs51h/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker 1.6.1-svn 6608050+ (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 7024: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_edid_attr_probe_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_edid_attr_release_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_dlfb_ops_probe_3 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_dlfb_ops_release_3 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_sys_read to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_sys_write to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function down_timeout to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function schedule_delayed_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_deferred_io_cleanup to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function vmalloc_to_pfn to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function remap_pfn_range to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sys_fillrect to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sys_imageblit to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sys_copyarea to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_var_to_videomode to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_destroy_modelist to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_edid_to_monspecs to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_videomode_to_var to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_find_best_display to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_find_nearest_mode to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function vmalloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function vfree to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function vzalloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memcmp to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_add_videomode to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_deregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function down_interruptible to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_remove_bin_file to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function unlink_framebuffer to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_remove_file to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 4155: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((const void *)to, 0); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function __builtin_object_size to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function might_fault to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _copy_to_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __list_del_entry to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _copy_from_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_deferred_io_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_submit_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 4626: Return type of function __builtin_prefetch is void, but result is used as type int: __builtin_prefetch((const void *)front); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function __builtin_prefetch to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 4627: Return type of function __builtin_prefetch is void, but result is used as type int: __builtin_prefetch((const void *)back); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function __list_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function up to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            3814058 (12% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  3462630 (91%)
  Because of loop head:            350046 (9%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         1382 (0%)
  Times precision was empty:       1621523 (43%)
  Times precision was {false}:     6966 (0%)
  Times result was cached:         2147078 (56%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      38491 (1%)
  Times result was 'false':        141493 (4%)
Number of strengthen sat checks:   0
Number of coverage checks:         6139111
  BDD entailment checks:           2551053
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       55
Number of predicates discovered:          21
Number of abstraction locations:          142
Max number of predicates per location:    15
Avg number of predicates per location:    7
Total predicates per abstraction:         18078165
Max number of predicates per abstraction: 15
Avg number of predicates per abstraction: 397.70
Number of irrelevant predicates:          12515619 (69%)
Number of preds handled by boolean abs:   168535 (1%)
  Total number of models for allsat:      82789
  Max number of models for allsat:        48
  Avg number of models for allsat:        2.15

Time for post operator:                144.541s
  Time for path formula creation:      138.837s
Time for strengthen operator:           13.345s
Time for prec operator:                411.916s
  Time for abstraction:                389.312s (Max:     2.791s, Count: 3814058)
    Boolean abstraction:                30.506s
    Solving time:                       24.104s (Max:     0.093s)
    Model enumeration time:              5.868s
    Time for BDD construction:           0.990s (Max:     0.010s)
Time for merge operator:                 9.920s
Time for coverage check:                 1.183s
  Time for BDD entailment checks:        0.848s
Total time for SMT solver (w/o itp):    29.973s

Number of path formula cache hits:   34315337 (92%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    96.583s

Total number of created targets for pointer analysis: 254752
   Number of created targets for uf: *signed_int is 7
   Number of created targets for uf: *(char)* is 4
   Number of created targets for uf: *(struct_usb_device)* is 27
   Number of created targets for uf: *(struct_urb)* is 4
   Number of created targets for uf: *(struct_list_head)* is 1066
   Number of created targets for uf: *(unsigned_char)* is 4
   Number of created targets for uf: *_Bool is 421
   Number of created targets for uf: *(struct_device)* is 27
   Number of created targets for uf: *unsigned_int is 5977
   Number of created targets for uf: *unsigned_long_int is 5313


Number of BDD nodes:                               28148
Size of BDD node table:                            464047
Size of BDD cache:                                 46411
Size of BDD node cleanup queue:                       80132 (count: 4469554, min: 0, max: 1071, avg: 0.02)
Time for BDD node cleanup:                             0.227s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                 20.078s
  Time for transition matches:                        12.101s
  Time for transition assertions:                      0.009s
  Time for transition actions:                         0.011s
Automaton transfers with branching:                0
Automaton transfer successors:                     32448650 (count: 32462516, min: 0, max: 1, avg: 1.00) [0 x 13866, 1 x 32448650]

CPA algorithm statistics
------------------------
Number of iterations:            16572310
Max size of waitlist:            1205
Average size of waitlist:        618
Number of computed successors:   19664998
Max successors for one state:    2
Number of times merged:          1794029
Number of times stopped:         2338201
Number of times breaked:         1382

Total time for CPA algorithm:       828.033s (Max:     4.514s)
  Time for choose from waitlist:      3.256s
  Time for precision adjustment:    474.365s
  Time for transfer relation:       277.606s
  Time for merge operator:           22.013s
  Time for stop operator:            12.510s
  Time for adding to reached set:    15.453s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   1382
Avg. length of target path (in blocks):               63440 (count: 1382, min: 9, max: 68, avg: 45.90)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  38.102s
  Counterexample analysis:                            18.689s (Max:     0.037s, Calls: 1382)
    Refinement sat check:                             12.106s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.033s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.130s
  Precision update:                                    0.569s
  ARG update:                                         18.319s

Length of refined path (in blocks):                   31573 (count: 1382, min: 4, max: 48, avg: 22.85)
Number of affected states:                             8952 (count: 1382, min: 1, max: 46, avg: 6.48)
Length (states) of path with itp 'true':              21239 (count: 1382, min: 0, max: 28, avg: 15.37)
Length (states) of path with itp non-trivial itp:      8952 (count: 1382, min: 1, max: 46, avg: 6.48)
Length (states) of path with itp 'false':              1382 (count: 1382, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:        1163 (count: 1382, min: 0, max: 1, avg: 0.84)
Equal non-trivial interpolants along paths:            6407 (count: 1382, min: 0, max: 45, avg: 4.64)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                1382
Number of successful refinements:     1382
Number of failed refinements:         0
Max. size of reached set before ref.: 39526
Max. size of reached set after ref.:  24192
Avg. size of reached set before ref.: 29989.23
Avg. size of reached set after ref.:  17572.37

Total time for CEGAR algorithm:     896.443s
Time for refinements:                56.606s
Average time for refinement:          0.040s
Max time for refinement:              0.220s

Code Coverage
-----------------------------
  Function coverage:      0.401
  Visited lines:          1513
  Total lines:            2807
  Line coverage:          0.539
  Visited conditions:     281
  Total conditions:       628
  Condition coverage:     0.447

CPAchecker general statistics
-----------------------------
Number of program locations:     3827
Number of CFA edges:             4260
Number of relevant variables:    674
Number of functions:             147
Number of loops:                 24
Size of reached set:             25201
  Number of reached locations:   745 (19%)
    Avg states per location:     33
    Max states per location:     409 (at node N2803)
  Number of reached functions:   59 (40%)
  Number of partitions:          25137
    Avg size of partitions:      1
    Max size of partitions:      27 (with key [N2374 (before line 6652), Function main called from node N2361, stack depth 1 [4b869331], stack [main]])
  Number of target states:       0
  Size of final wait list        693

Time for analysis setup:          3.431s
  Time for loading CPAs:          0.587s
  Time for loading parser:        0.416s
  Time for CFA construction:      2.356s
    Time for parsing file(s):     0.592s
    Time for AST to CFA:          0.825s
    Time for CFA sanity check:    0.185s
    Time for post-processing:     0.621s
      Time for var class.:        0.303s
Time for Analysis:              896.443s
CPU time for analysis:          896.450s
Total time for CPAchecker:      899.876s
Total CPU time for CPAchecker:  899.880s
Time for statistics:              0.309s

Time for Garbage Collector:      49.524s (in 988 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:               2214MB (  2112 MiB) max;   1109MB (  1058 MiB) avg;   2249MB (  2145 MiB) peak
Used non-heap memory:             42MB (    40 MiB) max;     41MB (    39 MiB) avg;     42MB (    40 MiB) peak
Allocated heap memory:          2380MB (  2270 MiB) max;   1660MB (  1583 MiB) avg
Allocated non-heap memory:        44MB (    42 MiB) max;     44MB (    42 MiB) avg
Total process virtual memory:  12618MB ( 12034 MiB) max;  12398MB ( 11824 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
