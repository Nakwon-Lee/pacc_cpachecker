scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 9600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-drivers--video--udlfb.ko-main.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 9600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_l8fctejt/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker 1.6.1-svn 6608050+ (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 7024: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_edid_attr_probe_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_edid_attr_release_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_dlfb_ops_probe_3 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_dlfb_ops_release_3 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_sys_read to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sys_fillrect to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sys_imageblit to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sys_copyarea to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function schedule_delayed_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_deferred_io_cleanup to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function vmalloc_to_pfn to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function remap_pfn_range to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_sys_write to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_deregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function might_fault to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _copy_to_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_var_to_videomode to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 4155: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((const void *)to, 0); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function __builtin_object_size to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function down_timeout to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function down_interruptible to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_remove_bin_file to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function unlink_framebuffer to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_remove_file to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _copy_from_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_fmt to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_destroy_modelist to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memcmp to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_edid_to_monspecs to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_videomode_to_var to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __list_del_entry to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_deferred_io_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_find_nearest_mode to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_find_best_display to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_add_videomode to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_submit_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function vmalloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function vfree to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function vzalloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __list_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function up to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_free_coherent to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_free_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_control_msg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __raw_spin_lock_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_get_descriptor to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __usb_get_extra_descriptor to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function lockdep_init_map to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __init_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function init_timer_key to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_alloc_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_alloc_coherent to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            3224036 (16% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  2975436 (92%)
  Because of loop head:            247753 (8%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         847 (0%)
  Times precision was empty:       525144 (16%)
  Times precision was {false}:     2576 (0%)
  Times result was cached:         2650224 (82%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      46092 (1%)
  Times result was 'false':        109381 (3%)
Number of strengthen sat checks:   0
Number of coverage checks:         3176748
  BDD entailment checks:           1287830
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       55
Number of predicates discovered:          27
Number of abstraction locations:          204
Max number of predicates per location:    16
Avg number of predicates per location:    8
Total predicates per abstraction:         20524114
Max number of predicates per abstraction: 16
Avg number of predicates per abstraction: 421.72
Number of irrelevant predicates:          4558024 (22%)
Number of preds handled by boolean abs:   282433 (1%)
  Total number of models for allsat:      78291
  Max number of models for allsat:        72
  Avg number of models for allsat:        1.70

Time for post operator:                131.005s
  Time for path formula creation:      127.201s
Time for strengthen operator:            9.546s
Time for prec operator:                539.637s
  Time for abstraction:                521.167s (Max:     2.753s, Count: 3224036)
    Boolean abstraction:                37.432s
    Solving time:                       29.143s (Max:     0.116s)
    Model enumeration time:              5.147s
    Time for BDD construction:           1.013s (Max:     0.010s)
Time for merge operator:                 8.259s
Time for coverage check:                 0.692s
  Time for BDD entailment checks:        0.526s
Total time for SMT solver (w/o itp):    34.290s

Number of path formula cache hits:   20595318 (86%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:   100.345s

Total number of created targets for pointer analysis: 366893
   Number of created targets for uf: *signed_int is 3358
   Number of created targets for uf: *(char)* is 92
   Number of created targets for uf: *(struct_usb_device)* is 1176
   Number of created targets for uf: *(struct_urb)* is 1438
   Number of created targets for uf: *(struct_list_head)* is 19531
   Number of created targets for uf: *_Bool is 535
   Number of created targets for uf: *(struct_device)* is 1176
   Number of created targets for uf: *unsigned_int is 1933
   Number of created targets for uf: *char is 119
   Number of created targets for uf: *(struct_dlfb_data)* is 1513
   Number of created targets for uf: *unsigned_long_int is 2358


Number of BDD nodes:                               64016
Size of BDD node table:                            464047
Size of BDD cache:                                 46411
Size of BDD node cleanup queue:                      104888 (count: 2139721, min: 0, max: 1884, avg: 0.05)
Time for BDD node cleanup:                             0.120s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                 12.415s
  Time for transition matches:                         7.740s
  Time for transition assertions:                      0.001s
  Time for transition actions:                         0.008s
Automaton transfers with branching:                0
Automaton transfer successors:                     20527441 (count: 20531687, min: 0, max: 1, avg: 1.00) [0 x 4246, 1 x 20527441]

CPA algorithm statistics
------------------------
Number of iterations:            11616992
Max size of waitlist:            1125
Average size of waitlist:        410
Number of computed successors:   13343625
Max successors for one state:    2
Number of times merged:          944459
Number of times stopped:         1394207
Number of times breaked:         847

Total time for CPA algorithm:       867.102s (Max:     9.974s)
  Time for choose from waitlist:      3.339s
  Time for precision adjustment:    584.916s
  Time for transfer relation:       226.334s
  Time for merge operator:           15.383s
  Time for stop operator:             9.225s
  Time for adding to reached set:    11.156s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   847
Avg. length of target path (in blocks):               33025 (count: 847, min: 10, max: 93, avg: 38.99)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  20.818s
  Counterexample analysis:                             7.061s (Max:     0.034s, Calls: 847)
    Refinement sat check:                              4.705s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.041s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.127s
  Precision update:                                    0.336s
  ARG update:                                         13.079s

Length of refined path (in blocks):                   25010 (count: 847, min: 4, max: 70, avg: 29.53)
Number of affected states:                            16452 (count: 847, min: 1, max: 69, avg: 19.42)
Length (states) of path with itp 'true':               7711 (count: 847, min: 0, max: 44, avg: 9.10)
Length (states) of path with itp non-trivial itp:     16452 (count: 847, min: 1, max: 69, avg: 19.42)
Length (states) of path with itp 'false':               847 (count: 847, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:         162 (count: 847, min: 0, max: 1, avg: 0.19)
Equal non-trivial interpolants along paths:           15443 (count: 847, min: 0, max: 67, avg: 18.23)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                847
Number of successful refinements:     847
Number of failed refinements:         0
Max. size of reached set before ref.: 73585
Max. size of reached set after ref.:  35581
Avg. size of reached set before ref.: 19354.56
Avg. size of reached set after ref.:  5416.75

Total time for CEGAR algorithm:     896.401s
Time for refinements:                27.238s
Average time for refinement:          0.032s
Max time for refinement:              0.190s

Code Coverage
-----------------------------
  Function coverage:      0.442
  Visited lines:          1665
  Total lines:            2807
  Line coverage:          0.593
  Visited conditions:     315
  Total conditions:       628
  Condition coverage:     0.502

CPAchecker general statistics
-----------------------------
Number of program locations:     3827
Number of CFA edges:             4260
Number of relevant variables:    674
Number of functions:             147
Number of loops:                 24
Size of reached set:             34713
  Number of reached locations:   865 (23%)
    Avg states per location:     40
    Max states per location:     554 (at node N2803)
  Number of reached functions:   65 (44%)
  Number of partitions:          34477
    Avg size of partitions:      1
    Max size of partitions:      22 (with key [N2374 (before line 6652), Function main called from node N2361, stack depth 1 [4b869331], stack [main]])
  Number of target states:       0
  Size of final wait list        432

Time for analysis setup:          3.439s
  Time for loading CPAs:          0.579s
  Time for loading parser:        0.414s
  Time for CFA construction:      2.367s
    Time for parsing file(s):     0.594s
    Time for AST to CFA:          0.823s
    Time for CFA sanity check:    0.217s
    Time for post-processing:     0.602s
      Time for var class.:        0.296s
Time for Analysis:              896.401s
CPU time for analysis:          896.410s
Total time for CPAchecker:      899.843s
Total CPU time for CPAchecker:  899.840s
Time for statistics:              0.324s

Time for Garbage Collector:      67.320s (in 1644 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:               2240MB (  2137 MiB) max;   1015MB (   968 MiB) avg;   2303MB (  2196 MiB) peak
Used non-heap memory:             41MB (    39 MiB) max;     40MB (    39 MiB) avg;     42MB (    40 MiB) peak
Allocated heap memory:          2318MB (  2210 MiB) max;   1431MB (  1365 MiB) avg
Allocated non-heap memory:        43MB (    41 MiB) max;     42MB (    40 MiB) avg
Total process virtual memory:  12889MB ( 12291 MiB) max;  12408MB ( 11833 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
