scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 9600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-drivers--video--udlfb.ko-main.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 9600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_wi3wx7eb/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker 1.6.1-svn 6608050+ (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 7024: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_edid_attr_probe_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_edid_attr_release_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_dlfb_ops_probe_3 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_dlfb_ops_release_3 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_sys_read to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function vfree to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_get_descriptor to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __usb_get_extra_descriptor to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __raw_spin_lock_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function lockdep_init_map to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __init_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function init_timer_key to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_alloc_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_alloc_coherent to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_free_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __list_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function schedule_delayed_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function down_interruptible to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __list_del_entry to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_free_coherent to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_remove_bin_file to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function unlink_framebuffer to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_remove_file to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_deregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function vmalloc_to_pfn to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function remap_pfn_range to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sys_copyarea to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function down_timeout to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 4626: Return type of function __builtin_prefetch is void, but result is used as type int: __builtin_prefetch((const void *)front); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function __builtin_prefetch to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Cannot get declaration of function __builtin_prefetch, ignoring calls to it. (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 4627: Return type of function __builtin_prefetch is void, but result is used as type int: __builtin_prefetch((const void *)back); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_submit_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function up to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sys_imageblit to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_deferred_io_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_deferred_io_cleanup to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function might_fault to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _copy_to_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 4155: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((const void *)to, 0); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function __builtin_object_size to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _copy_from_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_fmt to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_sys_write to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_var_to_videomode to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sys_fillrect to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_destroy_modelist to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            4672615 (18% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  4014783 (86%)
  Because of loop head:            657524 (14%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         308 (0%)
  Times precision was empty:       1185441 (25%)
  Times precision was {false}:     5129 (0%)
  Times result was cached:         3453716 (74%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      28329 (1%)
  Times result was 'false':        84631 (2%)
Number of strengthen sat checks:   0
Number of coverage checks:         2022613
  BDD entailment checks:           769701
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       55
Number of predicates discovered:          22
Number of abstraction locations:          198
Max number of predicates per location:    12
Avg number of predicates per location:    7
Total predicates per abstraction:         25271795
Max number of predicates per abstraction: 12
Avg number of predicates per abstraction: 755.33
Number of irrelevant predicates:          17900932 (71%)
Number of preds handled by boolean abs:   140029 (1%)
  Total number of models for allsat:      31904
  Max number of models for allsat:        12
  Avg number of models for allsat:        1.13

Time for post operator:                137.081s
  Time for path formula creation:      133.216s
Time for strengthen operator:           11.027s
Time for prec operator:                489.433s
  Time for abstraction:                459.894s (Max:     2.572s, Count: 4672615)
    Boolean abstraction:                17.840s
    Solving time:                       16.020s (Max:     0.064s)
    Model enumeration time:              1.317s
    Time for BDD construction:           0.463s (Max:     0.088s)
Time for merge operator:                 3.701s
Time for coverage check:                 0.549s
  Time for BDD entailment checks:        0.432s
Total time for SMT solver (w/o itp):    17.337s

Number of path formula cache hits:   27364995 (91%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    86.140s

Total number of created targets for pointer analysis: 169361
   Number of created targets for uf: *signed_int is 299
   Number of created targets for uf: *(char)* is 80
   Number of created targets for uf: *(struct_usb_device)* is 275
   Number of created targets for uf: *(struct_urb)* is 1853
   Number of created targets for uf: *(struct_list_head)* is 7683
   Number of created targets for uf: *(unsigned_char)* is 462
   Number of created targets for uf: *unsigned_int is 253
   Number of created targets for uf: *(struct_device)* is 275
   Number of created targets for uf: *(struct_dlfb_data)* is 275
   Number of created targets for uf: *unsigned_long_int is 549


Number of BDD nodes:                               6447
Size of BDD node table:                            464047
Size of BDD cache:                                 46411
Size of BDD node cleanup queue:                       61479 (count: 2157525, min: 0, max: 1127, avg: 0.03)
Time for BDD node cleanup:                             0.167s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                 15.622s
  Time for transition matches:                         9.155s
  Time for transition assertions:                      0.002s
  Time for transition actions:                         0.006s
Automaton transfers with branching:                0
Automaton transfer successors:                     25527586 (count: 25528901, min: 0, max: 1, avg: 1.00) [0 x 1315, 1 x 25527586]

CPA algorithm statistics
------------------------
Number of iterations:            14127490
Max size of waitlist:            65
Average size of waitlist:        39
Number of computed successors:   15521171
Max successors for one state:    2
Number of times merged:          626456
Number of times stopped:         1300003
Number of times breaked:         308

Total time for CPA algorithm:       868.987s (Max:     7.511s)
  Time for choose from waitlist:      3.280s
  Time for precision adjustment:    553.275s
  Time for transfer relation:       258.771s
  Time for merge operator:            7.918s
  Time for stop operator:            10.058s
  Time for adding to reached set:    14.226s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   308
Avg. length of target path (in blocks):               18691 (count: 308, min: 9, max: 240, avg: 60.69)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  22.629s
  Counterexample analysis:                             4.554s (Max:     0.088s, Calls: 308)
    Refinement sat check:                              2.753s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.007s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.080s
  Precision update:                                    0.142s
  ARG update:                                         17.730s

Length of refined path (in blocks):                   16628 (count: 308, min: 4, max: 228, avg: 53.99)
Number of affected states:                            15242 (count: 308, min: 1, max: 226, avg: 49.49)
Length (states) of path with itp 'true':               1078 (count: 308, min: 0, max: 129, avg: 3.50)
Length (states) of path with itp non-trivial itp:     15242 (count: 308, min: 1, max: 226, avg: 49.49)
Length (states) of path with itp 'false':               308 (count: 308, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:         102 (count: 308, min: 0, max: 1, avg: 0.33)
Equal non-trivial interpolants along paths:           14832 (count: 308, min: 0, max: 225, avg: 48.16)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                308
Number of successful refinements:     308
Number of failed refinements:         0
Max. size of reached set before ref.: 81405
Max. size of reached set after ref.:  50611
Avg. size of reached set before ref.: 47127.13
Avg. size of reached set after ref.:  1419.39

Total time for CEGAR algorithm:     896.443s
Time for refinements:                27.215s
Average time for refinement:          0.088s
Max time for refinement:              0.356s

Code Coverage
-----------------------------
  Function coverage:      0.571
  Visited lines:          2070
  Total lines:            2807
  Line coverage:          0.737
  Visited conditions:     397
  Total conditions:       628
  Condition coverage:     0.632

CPAchecker general statistics
-----------------------------
Number of program locations:     3827
Number of CFA edges:             4260
Number of relevant variables:    674
Number of functions:             147
Number of loops:                 24
Size of reached set:             58554
  Number of reached locations:   1198 (31%)
    Avg states per location:     48
    Max states per location:     975 (at node N267)
  Number of reached functions:   84 (57%)
  Number of partitions:          58371
    Avg size of partitions:      1
    Max size of partitions:      14 (with key [N2374 (before line 6652), Function main called from node N2361, stack depth 1 [4b869331], stack [main]])
  Number of target states:       0
  Size of final wait list        39

Time for analysis setup:          3.416s
  Time for loading CPAs:          0.597s
  Time for loading parser:        0.406s
  Time for CFA construction:      2.342s
    Time for parsing file(s):     0.587s
    Time for AST to CFA:          0.832s
    Time for CFA sanity check:    0.183s
    Time for post-processing:     0.599s
      Time for var class.:        0.286s
Time for Analysis:              896.443s
CPU time for analysis:          896.450s
Total time for CPAchecker:      899.862s
Total CPU time for CPAchecker:  899.860s
Time for statistics:              0.677s

Time for Garbage Collector:      78.064s (in 1180 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:               1998MB (  1906 MiB) max;    959MB (   914 MiB) avg;   2040MB (  1946 MiB) peak
Used non-heap memory:             41MB (    39 MiB) max;     40MB (    38 MiB) avg;     41MB (    39 MiB) peak
Allocated heap memory:          2163MB (  2063 MiB) max;   1395MB (  1330 MiB) avg
Allocated non-heap memory:        43MB (    41 MiB) max;     43MB (    41 MiB) avg
Total process virtual memory:  12685MB ( 12098 MiB) max;  12341MB ( 11770 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
