scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 9600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-drivers--video--udlfb.ko-main.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 9600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_1b_oyefc/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker 1.6.1-svn 6608050+ (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 7024: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_edid_attr_probe_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_edid_attr_release_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_dlfb_ops_probe_3 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_dlfb_ops_release_3 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_sys_read to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_sys_write to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function schedule_delayed_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_deferred_io_cleanup to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function vmalloc_to_pfn to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function remap_pfn_range to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sys_fillrect to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sys_imageblit to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sys_copyarea to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function down_timeout to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_var_to_videomode to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_deregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function down_interruptible to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_remove_bin_file to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function unlink_framebuffer to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_remove_file to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __list_del_entry to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_free_coherent to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_free_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function vfree to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 4155: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((const void *)to, 0); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function __builtin_object_size to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function might_fault to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _copy_to_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_destroy_modelist to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memcmp to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_edid_to_monspecs to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_videomode_to_var to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_control_msg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function vmalloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function vzalloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_find_best_display to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_add_videomode to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_find_nearest_mode to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _copy_from_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_submit_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_deferred_io_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_fmt to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_get_descriptor to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __usb_get_extra_descriptor to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __raw_spin_lock_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __init_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function lockdep_init_map to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function init_timer_key to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_alloc_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_alloc_coherent to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __list_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            2223680 (11% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  2059410 (93%)
  Because of loop head:            163510 (7%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         760 (0%)
  Times precision was empty:       507070 (23%)
  Times precision was {false}:     3245 (0%)
  Times result was cached:         1626781 (73%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      86584 (4%)
  Times result was 'false':        103470 (5%)
Number of strengthen sat checks:   0
Number of coverage checks:         5122843
  BDD entailment checks:           2741105
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       55
Number of predicates discovered:          37
Number of abstraction locations:          179
Max number of predicates per location:    18
Avg number of predicates per location:    9
Total predicates per abstraction:         16023722
Max number of predicates per abstraction: 18
Avg number of predicates per abstraction: 178.38
Number of irrelevant predicates:          5828865 (36%)
Number of preds handled by boolean abs:   597520 (4%)
  Total number of models for allsat:      229352
  Max number of models for allsat:        96
  Avg number of models for allsat:        2.65

Time for post operator:                142.656s
  Time for path formula creation:      139.378s
Time for strengthen operator:            8.648s
Time for prec operator:                521.638s
  Time for abstraction:                506.806s (Max:     1.071s, Count: 2223680)
    Boolean abstraction:                94.421s
    Solving time:                       70.322s (Max:     0.113s)
    Model enumeration time:             17.563s
    Time for BDD construction:           2.821s (Max:     0.015s)
Time for merge operator:                10.552s
Time for coverage check:                 1.443s
  Time for BDD entailment checks:        1.154s
Total time for SMT solver (w/o itp):    87.893s

Number of path formula cache hits:   18950845 (84%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:   109.277s

Total number of created targets for pointer analysis: 323214
   Number of created targets for uf: *signed_int is 29166
   Number of created targets for uf: *(char)* is 5
   Number of created targets for uf: *(struct_usb_device)* is 2170
   Number of created targets for uf: *(struct_urb)* is 34
   Number of created targets for uf: *(struct_list_head)* is 4093
   Number of created targets for uf: *_Bool is 5348
   Number of created targets for uf: *(struct_device)* is 2170
   Number of created targets for uf: *unsigned_int is 7477
   Number of created targets for uf: *char is 176
   Number of created targets for uf: *(struct_dlfb_data)* is 36
   Number of created targets for uf: *unsigned_long_int is 50


Number of BDD nodes:                               147993
Size of BDD node table:                            464047
Size of BDD cache:                                 46411
Size of BDD node cleanup queue:                      201573 (count: 3817930, min: 0, max: 3025, avg: 0.05)
Time for BDD node cleanup:                             0.230s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                 13.607s
  Time for transition matches:                         8.390s
  Time for transition assertions:                      0.003s
  Time for transition actions:                         0.020s
Automaton transfers with branching:                0
Automaton transfer successors:                     19734263 (count: 19745875, min: 0, max: 1, avg: 1.00) [0 x 11612, 1 x 19734263]

CPA algorithm statistics
------------------------
Number of iterations:            9763981
Max size of waitlist:            1610
Average size of waitlist:        636
Number of computed successors:   11739573
Max successors for one state:    2
Number of times merged:          1190869
Number of times stopped:         1520516
Number of times breaked:         760

Total time for CPA algorithm:       849.754s (Max:     9.417s)
  Time for choose from waitlist:      2.432s
  Time for precision adjustment:    561.941s
  Time for transfer relation:       233.326s
  Time for merge operator:           19.775s
  Time for stop operator:             8.962s
  Time for adding to reached set:     9.002s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   760
Avg. length of target path (in blocks):               79455 (count: 760, min: 10, max: 290, avg: 104.55)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  38.043s
  Counterexample analysis:                            26.195s (Max:     0.209s, Calls: 760)
    Refinement sat check:                             13.005s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.029s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.179s
  Precision update:                                    0.363s
  ARG update:                                         10.953s

Length of refined path (in blocks):                   47673 (count: 760, min: 4, max: 217, avg: 62.73)
Number of affected states:                            25310 (count: 760, min: 1, max: 215, avg: 33.30)
Length (states) of path with itp 'true':              21603 (count: 760, min: 0, max: 134, avg: 28.42)
Length (states) of path with itp non-trivial itp:     25310 (count: 760, min: 1, max: 215, avg: 33.30)
Length (states) of path with itp 'false':               760 (count: 760, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:        1257 (count: 760, min: 0, max: 8, avg: 1.65)
Equal non-trivial interpolants along paths:           23293 (count: 760, min: 0, max: 214, avg: 30.65)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                760
Number of successful refinements:     760
Number of failed refinements:         0
Max. size of reached set before ref.: 43873
Max. size of reached set after ref.:  19563
Avg. size of reached set before ref.: 20346.55
Avg. size of reached set after ref.:  7064.29

Total time for CEGAR algorithm:     896.434s
Time for refinements:                44.278s
Average time for refinement:          0.058s
Max time for refinement:              0.279s

Code Coverage
-----------------------------
  Function coverage:      0.456
  Visited lines:          1687
  Total lines:            2807
  Line coverage:          0.601
  Visited conditions:     315
  Total conditions:       628
  Condition coverage:     0.502

CPAchecker general statistics
-----------------------------
Number of program locations:     3827
Number of CFA edges:             4260
Number of relevant variables:    674
Number of functions:             147
Number of loops:                 24
Size of reached set:             21075
  Number of reached locations:   852 (22%)
    Avg states per location:     24
    Max states per location:     232 (at node N109)
  Number of reached functions:   67 (46%)
  Number of partitions:          20940
    Avg size of partitions:      1
    Max size of partitions:      35 (with key [N2374 (before line 6652), Function main called from node N2361, stack depth 1 [4b869331], stack [main]])
  Number of target states:       0
  Size of final wait list        706

Time for analysis setup:          3.411s
  Time for loading CPAs:          0.596s
  Time for loading parser:        0.398s
  Time for CFA construction:      2.356s
    Time for parsing file(s):     0.595s
    Time for AST to CFA:          0.834s
    Time for CFA sanity check:    0.191s
    Time for post-processing:     0.600s
      Time for var class.:        0.316s
Time for Analysis:              896.434s
CPU time for analysis:          896.440s
Total time for CPAchecker:      899.846s
Total CPU time for CPAchecker:  899.850s
Time for statistics:              0.226s

Time for Garbage Collector:      48.881s (in 1042 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:               2430MB (  2318 MiB) max;   1222MB (  1165 MiB) avg;   2460MB (  2346 MiB) peak
Used non-heap memory:             42MB (    40 MiB) max;     41MB (    39 MiB) avg;     42MB (    40 MiB) peak
Allocated heap memory:          2616MB (  2495 MiB) max;   1828MB (  1743 MiB) avg
Allocated non-heap memory:        44MB (    41 MiB) max;     43MB (    41 MiB) avg
Total process virtual memory:  14707MB ( 14026 MiB) max;  13265MB ( 12650 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
