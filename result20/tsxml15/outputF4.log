scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 9600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-drivers--video--udlfb.ko-main.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 9600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_xvojd_11/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker 1.6.1-svn 6608050+ (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 7024: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_edid_attr_probe_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_edid_attr_release_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_dlfb_ops_probe_3 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_dlfb_ops_release_3 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_sys_read to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_deregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sys_fillrect to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sys_imageblit to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sys_copyarea to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_var_to_videomode to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function schedule_delayed_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_deferred_io_cleanup to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function vfree to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_deferred_io_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function down_timeout to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __list_del_entry to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function vmalloc_to_pfn to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function remap_pfn_range to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_sys_write to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function down_interruptible to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_free_coherent to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_free_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_remove_bin_file to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function unlink_framebuffer to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_remove_file to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_submit_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __list_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function up to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function might_fault to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _copy_to_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 4155: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((const void *)to, 0); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function __builtin_object_size to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function _copy_from_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_fmt to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 4626: Return type of function __builtin_prefetch is void, but result is used as type int: __builtin_prefetch((const void *)front); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function __builtin_prefetch to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 4627: Return type of function __builtin_prefetch is void, but result is used as type int: __builtin_prefetch((const void *)back); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function usb_get_descriptor to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __usb_get_extra_descriptor to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __raw_spin_lock_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __init_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function lockdep_init_map to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function init_timer_key to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_alloc_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_alloc_coherent to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_destroy_modelist to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            4035011 (18% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  3387929 (84%)
  Because of loop head:            646586 (16%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         496 (0%)
  Times precision was empty:       1076063 (27%)
  Times precision was {false}:     4751 (0%)
  Times result was cached:         2929157 (73%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      25040 (1%)
  Times result was 'false':        71334 (2%)
Number of strengthen sat checks:   0
Number of coverage checks:         2116059
  BDD entailment checks:           894771
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       55
Number of predicates discovered:          28
Number of abstraction locations:          261
Max number of predicates per location:    12
Avg number of predicates per location:    6
Total predicates per abstraction:         23349845
Max number of predicates per abstraction: 12
Avg number of predicates per abstraction: 783.79
Number of irrelevant predicates:          12376400 (53%)
Number of preds handled by boolean abs:   112625 (0%)
  Total number of models for allsat:      29724
  Max number of models for allsat:        27
  Avg number of models for allsat:        1.19

Time for post operator:                 84.743s
  Time for path formula creation:       81.458s
Time for strengthen operator:           11.370s
Time for prec operator:                564.783s
  Time for abstraction:                541.417s (Max:     1.578s, Count: 4035011)
    Boolean abstraction:                15.947s
    Solving time:                       14.447s (Max:     0.013s)
    Model enumeration time:              1.408s
    Time for BDD construction:           0.332s (Max:     0.008s)
Time for merge operator:                 2.909s
Time for coverage check:                 0.548s
  Time for BDD entailment checks:        0.426s
Total time for SMT solver (w/o itp):    15.855s

Number of path formula cache hits:   25032052 (94%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    46.130s

Total number of created targets for pointer analysis: 134548
   Number of created targets for uf: *signed_int is 500
   Number of created targets for uf: *(char)* is 2690
   Number of created targets for uf: *(struct_usb_device)* is 117
   Number of created targets for uf: *(struct_urb)* is 396
   Number of created targets for uf: *(struct_list_head)* is 2648
   Number of created targets for uf: *(unsigned_char)* is 1116
   Number of created targets for uf: *_Bool is 20
   Number of created targets for uf: *char is 19
   Number of created targets for uf: *unsigned_int is 1492
   Number of created targets for uf: *(struct_device)* is 29
   Number of created targets for uf: *(struct_dlfb_data)* is 311
   Number of created targets for uf: *unsigned_long_int is 234


Number of BDD nodes:                               9177
Size of BDD node table:                            464047
Size of BDD cache:                                 46411
Size of BDD node cleanup queue:                       55090 (count: 2156608, min: 0, max: 713, avg: 0.03)
Time for BDD node cleanup:                             0.156s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                 15.928s
  Time for transition matches:                         8.920s
  Time for transition assertions:                      0.001s
  Time for transition actions:                         0.016s
Automaton transfers with branching:                0
Automaton transfer successors:                     22223043 (count: 22223653, min: 0, max: 1, avg: 1.00) [0 x 610, 1 x 22223043]

CPA algorithm statistics
------------------------
Number of iterations:            12708126
Max size of waitlist:            78
Average size of waitlist:        27
Number of computed successors:   14048292
Max successors for one state:    2
Number of times merged:          610644
Number of times stopped:         1256969
Number of times breaked:         496

Total time for CPA algorithm:       861.087s (Max:     8.011s)
  Time for choose from waitlist:      2.273s
  Time for precision adjustment:    617.295s
  Time for transfer relation:       194.849s
  Time for merge operator:            7.395s
  Time for stop operator:             8.836s
  Time for adding to reached set:    10.685s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   496
Avg. length of target path (in blocks):               38127 (count: 496, min: 9, max: 215, avg: 76.87)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  26.284s
  Counterexample analysis:                             9.665s (Max:     0.129s, Calls: 496)
    Refinement sat check:                              5.257s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.018s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.087s
  Precision update:                                    0.272s
  ARG update:                                         16.112s

Length of refined path (in blocks):                   20011 (count: 496, min: 4, max: 191, avg: 40.34)
Number of affected states:                            15554 (count: 496, min: 1, max: 189, avg: 31.36)
Length (states) of path with itp 'true':               3961 (count: 496, min: 0, max: 71, avg: 7.99)
Length (states) of path with itp non-trivial itp:     15554 (count: 496, min: 1, max: 189, avg: 31.36)
Length (states) of path with itp 'false':               496 (count: 496, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:         160 (count: 496, min: 0, max: 3, avg: 0.32)
Equal non-trivial interpolants along paths:           14898 (count: 496, min: 0, max: 188, avg: 30.04)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                496
Number of successful refinements:     496
Number of failed refinements:         0
Max. size of reached set before ref.: 133537
Max. size of reached set after ref.:  75892
Avg. size of reached set before ref.: 36392.38
Avg. size of reached set after ref.:  10918.15

Total time for CEGAR algorithm:     896.977s
Time for refinements:                33.174s
Average time for refinement:          0.066s
Max time for refinement:              0.666s

Code Coverage
-----------------------------
  Function coverage:      0.571
  Visited lines:          2091
  Total lines:            2807
  Line coverage:          0.745
  Visited conditions:     399
  Total conditions:       628
  Condition coverage:     0.635

CPAchecker general statistics
-----------------------------
Number of program locations:     3827
Number of CFA edges:             4260
Number of relevant variables:    674
Number of functions:             147
Number of loops:                 24
Size of reached set:             84771
  Number of reached locations:   1218 (32%)
    Avg states per location:     69
    Max states per location:     1214 (at node N2803)
  Number of reached functions:   84 (57%)
  Number of partitions:          84127
    Avg size of partitions:      1
    Max size of partitions:      15 (with key [N2374 (before line 6652), Function main called from node N2361, stack depth 1 [1b15f922], stack [main]])
  Number of target states:       0
  Size of final wait list        16

Time for analysis setup:          3.373s
  Time for loading CPAs:          0.599s
  Time for loading parser:        0.388s
  Time for CFA construction:      2.331s
    Time for parsing file(s):     0.559s
    Time for AST to CFA:          0.825s
    Time for CFA sanity check:    0.197s
    Time for post-processing:     0.605s
      Time for var class.:        0.298s
Time for Analysis:              896.977s
CPU time for analysis:          896.950s
Total time for CPAchecker:      900.352s
Total CPU time for CPAchecker:  900.320s
Time for statistics:              0.664s

Time for Garbage Collector:      75.464s (in 1598 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:               1307MB (  1246 MiB) max;    689MB (   657 MiB) avg;   1357MB (  1294 MiB) peak
Used non-heap memory:             41MB (    39 MiB) max;     40MB (    39 MiB) avg;     42MB (    40 MiB) peak
Allocated heap memory:          1460MB (  1393 MiB) max;   1003MB (   957 MiB) avg
Allocated non-heap memory:        43MB (    41 MiB) max;     43MB (    41 MiB) avg
Total process virtual memory:  12551MB ( 11970 MiB) max;  12370MB ( 11797 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
