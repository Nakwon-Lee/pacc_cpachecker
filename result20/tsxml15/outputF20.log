scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 9600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-drivers--video--udlfb.ko-main.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 9600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_7fs_kv6k/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker 1.6.1-svn 6608050+ (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 7024: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_edid_attr_probe_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_edid_attr_release_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_dlfb_ops_probe_3 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_dlfb_ops_release_3 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_sys_read to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_sys_write to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function schedule_delayed_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_deferred_io_cleanup to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function vmalloc_to_pfn to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function remap_pfn_range to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sys_fillrect to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sys_imageblit to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sys_copyarea to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function down_timeout to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_var_to_videomode to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_deregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function down_interruptible to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_remove_bin_file to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function unlink_framebuffer to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_remove_file to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 4155: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((const void *)to, 0); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function __builtin_object_size to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function might_fault to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _copy_to_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_destroy_modelist to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memcmp to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_edid_to_monspecs to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_videomode_to_var to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_find_best_display to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_find_nearest_mode to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function vmalloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function vfree to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function vzalloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_add_videomode to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __list_del_entry to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _copy_from_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_submit_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_deferred_io_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_fmt to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_free_coherent to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_free_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_get_descriptor to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __usb_get_extra_descriptor to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __raw_spin_lock_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function lockdep_init_map to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __init_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function init_timer_key to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_alloc_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_alloc_coherent to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __list_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function up to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 4626: Return type of function __builtin_prefetch is void, but result is used as type int: __builtin_prefetch((const void *)front); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function __builtin_prefetch to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 4627: Return type of function __builtin_prefetch is void, but result is used as type int: __builtin_prefetch((const void *)back); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            3156434 (14% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  2939972 (93%)
  Because of loop head:            215650 (7%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         812 (0%)
  Times precision was empty:       782970 (25%)
  Times precision was {false}:     2949 (0%)
  Times result was cached:         2330005 (74%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      40510 (1%)
  Times result was 'false':        112213 (4%)
Number of strengthen sat checks:   0
Number of coverage checks:         3188538
  BDD entailment checks:           1248542
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       55
Number of predicates discovered:          27
Number of abstraction locations:          208
Max number of predicates per location:    16
Avg number of predicates per location:    8
Total predicates per abstraction:         20721478
Max number of predicates per abstraction: 16
Avg number of predicates per abstraction: 476.81
Number of irrelevant predicates:          5630927 (27%)
Number of preds handled by boolean abs:   229489 (1%)
  Total number of models for allsat:      70608
  Max number of models for allsat:        72
  Avg number of models for allsat:        1.74

Time for post operator:                119.547s
  Time for path formula creation:      116.010s
Time for strengthen operator:            9.870s
Time for prec operator:                539.019s
  Time for abstraction:                521.454s (Max:     3.330s, Count: 3156434)
    Boolean abstraction:                30.590s
    Solving time:                       23.367s (Max:     0.062s)
    Model enumeration time:              4.879s
    Time for BDD construction:           0.894s (Max:     0.009s)
Time for merge operator:                 7.046s
Time for coverage check:                 0.626s
  Time for BDD entailment checks:        0.465s
Total time for SMT solver (w/o itp):    28.246s

Number of path formula cache hits:   23060102 (88%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    88.780s

Total number of created targets for pointer analysis: 194719
   Number of created targets for uf: *signed_int is 4088
   Number of created targets for uf: *(char)* is 3
   Number of created targets for uf: *(struct_usb_device)* is 1337
   Number of created targets for uf: *(struct_urb)* is 218
   Number of created targets for uf: *(struct_list_head)* is 1657
   Number of created targets for uf: *(unsigned_char)* is 49
   Number of created targets for uf: *_Bool is 656
   Number of created targets for uf: *(struct_device)* is 1337
   Number of created targets for uf: *unsigned_int is 2269
   Number of created targets for uf: *(struct_dlfb_data)* is 218
   Number of created targets for uf: *unsigned_long_int is 197


Number of BDD nodes:                               58806
Size of BDD node table:                            464047
Size of BDD cache:                                 46411
Size of BDD node cleanup queue:                       92045 (count: 2328117, min: 0, max: 1900, avg: 0.04)
Time for BDD node cleanup:                             0.128s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                 13.956s
  Time for transition matches:                         8.713s
  Time for transition assertions:                      0.002s
  Time for transition actions:                         0.016s
Automaton transfers with branching:                0
Automaton transfer successors:                     22573112 (count: 22580990, min: 0, max: 1, avg: 1.00) [0 x 7878, 1 x 22573112]

CPA algorithm statistics
------------------------
Number of iterations:            11365508
Max size of waitlist:            1159
Average size of waitlist:        348
Number of computed successors:   13103531
Max successors for one state:    2
Number of times merged:          969998
Number of times stopped:         1372734
Number of times breaked:         812

Total time for CPA algorithm:       867.862s (Max:     8.425s)
  Time for choose from waitlist:      2.331s
  Time for precision adjustment:    593.075s
  Time for transfer relation:       221.166s
  Time for merge operator:           14.340s
  Time for stop operator:             8.741s
  Time for adding to reached set:    11.530s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   812
Avg. length of target path (in blocks):               32118 (count: 812, min: 10, max: 93, avg: 39.55)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  22.540s
  Counterexample analysis:                             7.610s (Max:     0.034s, Calls: 812)
    Refinement sat check:                              5.189s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.010s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.127s
  Precision update:                                    0.311s
  ARG update:                                         14.270s

Length of refined path (in blocks):                   24330 (count: 812, min: 4, max: 71, avg: 29.96)
Number of affected states:                            16811 (count: 812, min: 1, max: 69, avg: 20.70)
Length (states) of path with itp 'true':               6707 (count: 812, min: 0, max: 40, avg: 8.26)
Length (states) of path with itp non-trivial itp:     16811 (count: 812, min: 1, max: 69, avg: 20.70)
Length (states) of path with itp 'false':               812 (count: 812, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:         183 (count: 812, min: 0, max: 1, avg: 0.23)
Equal non-trivial interpolants along paths:           15816 (count: 812, min: 0, max: 68, avg: 19.48)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                812
Number of successful refinements:     812
Number of failed refinements:         0
Max. size of reached set before ref.: 61366
Max. size of reached set after ref.:  20686
Avg. size of reached set before ref.: 18256.71
Avg. size of reached set after ref.:  3953.27

Total time for CEGAR algorithm:     896.955s
Time for refinements:                27.745s
Average time for refinement:          0.034s
Max time for refinement:              1.434s

Code Coverage
-----------------------------
  Function coverage:      0.259
  Visited lines:          1168
  Total lines:            2807
  Line coverage:          0.416
  Visited conditions:     208
  Total conditions:       628
  Condition coverage:     0.331

CPAchecker general statistics
-----------------------------
Number of program locations:     3827
Number of CFA edges:             4260
Number of relevant variables:    674
Number of functions:             147
Number of loops:                 24
Size of reached set:             4191
  Number of reached locations:   445 (12%)
    Avg states per location:     9
    Max states per location:     52 (at node N75)
  Number of reached functions:   38 (26%)
  Number of partitions:          4178
    Avg size of partitions:      1
    Max size of partitions:      9 (with key [N2374 (before line 6652), Function main called from node N2361, stack depth 1 [4b869331], stack [main]])
  Number of target states:       0
  Size of final wait list        144

Time for analysis setup:          3.393s
  Time for loading CPAs:          0.557s
  Time for loading parser:        0.400s
  Time for CFA construction:      2.346s
    Time for parsing file(s):     0.609s
    Time for AST to CFA:          0.818s
    Time for CFA sanity check:    0.178s
    Time for post-processing:     0.592s
      Time for var class.:        0.309s
Time for Analysis:              896.955s
CPU time for analysis:          896.950s
Total time for CPAchecker:      900.351s
Total CPU time for CPAchecker:  900.350s
Time for statistics:              0.111s

Time for Garbage Collector:      57.530s (in 1186 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:               2156MB (  2056 MiB) max;   1097MB (  1046 MiB) avg;   2191MB (  2089 MiB) peak
Used non-heap memory:             41MB (    39 MiB) max;     40MB (    38 MiB) avg;     41MB (    40 MiB) peak
Allocated heap memory:          2737MB (  2610 MiB) max;   1724MB (  1644 MiB) avg
Allocated non-heap memory:        43MB (    41 MiB) max;     43MB (    41 MiB) avg
Total process virtual memory:  12687MB ( 12100 MiB) max;  12406MB ( 11831 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
