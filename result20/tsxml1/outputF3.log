scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 9600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-32_7a-drivers--media--tuners--tuner-xc2028.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 9600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_acxam05j/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker 1.6.1-svn 6608050+ (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 6284: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

lines 4336-4337: Function pointer *(fe->callback) with type int (*)(void *, int, int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_handler_precall to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function list_del to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function i2c_transfer to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function msleep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function kstrdup to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function request_firmware_nowait to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dump_stack to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

lines 4336-4337: Ignoring function call through function pointer *(fe->callback): tmp = (*(fe->callback))(__CPAchecker_TMP_4, 0, cmd, arg); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function __builtin_alloca to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Cannot get declaration of function __builtin_alloca, ignoring calls to it. (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            189624 (10% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  171934 (91%)
  Because of loop head:            17255 (9%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         435 (0%)
  Times precision was empty:       5620 (3%)
  Times precision was {false}:     639 (0%)
  Times result was cached:         178240 (94%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      5125 (3%)
  Times result was 'false':        33431 (18%)
Number of strengthen sat checks:   0
Number of coverage checks:         416042
  BDD entailment checks:           54794
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       62
Number of predicates discovered:          9
Number of abstraction locations:          162
Max number of predicates per location:    9
Avg number of predicates per location:    5
Total predicates per abstraction:         996615
Max number of predicates per abstraction: 9
Avg number of predicates per abstraction: 172.90
Number of irrelevant predicates:          156940 (16%)
Number of preds handled by boolean abs:   17312 (2%)
  Total number of models for allsat:      4637
  Max number of models for allsat:        2
  Avg number of models for allsat:        0.90

Time for post operator:                  7.879s
  Time for path formula creation:        7.512s
Time for strengthen operator:            0.941s
Time for prec operator:                 36.285s
  Time for abstraction:                 34.650s (Max:     0.040s, Count: 189624)
    Boolean abstraction:                 4.139s
    Solving time:                        3.786s (Max:     0.021s)
    Model enumeration time:              0.341s
    Time for BDD construction:           0.136s (Max:     0.009s)
Time for merge operator:                 0.876s
Time for coverage check:                 0.079s
  Time for BDD entailment checks:        0.063s
Total time for SMT solver (w/o itp):     4.127s

Number of path formula cache hits:   2109250 (95%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     5.027s

Total number of created targets for pointer analysis: 4971
   Number of created targets for uf: *unsigned_short_int is 207
   Number of created targets for uf: *unsigned_char is 2321
   Number of created targets for uf: *unsigned_long_long_int is 7
   Number of created targets for uf: *unsigned_int is 193


Number of BDD nodes:                               531
Size of BDD node table:                            464047
Size of BDD cache:                                 46411
Size of BDD node cleanup queue:                       10153 (count: 98789, min: 0, max: 253, avg: 0.10)
Time for BDD node cleanup:                             0.012s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  1.395s
  Time for transition matches:                         0.765s
  Time for transition assertions:                      0.002s
  Time for transition actions:                         0.022s
Automaton transfers with branching:                0
Automaton transfer successors:                      1908425 (count: 1908425, min: 1, max: 1, avg: 1.00) [1 x 1908425]

CPA algorithm statistics
------------------------
Number of iterations:            1313125
Max size of waitlist:            33
Average size of waitlist:        7
Number of computed successors:   1573661
Max successors for one state:    2
Number of times merged:          180624
Number of times stopped:         220724
Number of times breaked:         435

Total time for CPA algorithm:        67.263s (Max:     2.385s)
  Time for choose from waitlist:      0.346s
  Time for precision adjustment:     41.581s
  Time for transfer relation:        18.874s
  Time for merge operator:            2.108s
  Time for stop operator:             1.038s
  Time for adding to reached set:     1.271s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   435
Avg. length of target path (in blocks):               11673 (count: 435, min: 6, max: 43, avg: 26.83)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   5.683s
  Counterexample analysis:                             3.826s (Max:     0.036s, Calls: 435)
    Refinement sat check:                              2.840s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.004s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.162s
  Precision update:                                    0.204s
  ARG update:                                          1.329s

Length of refined path (in blocks):                   10615 (count: 435, min: 5, max: 42, avg: 24.40)
Number of affected states:                             8890 (count: 435, min: 3, max: 40, avg: 20.44)
Length (states) of path with itp 'true':               1290 (count: 435, min: 0, max: 17, avg: 2.97)
Length (states) of path with itp non-trivial itp:      8890 (count: 435, min: 3, max: 40, avg: 20.44)
Length (states) of path with itp 'false':               435 (count: 435, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 435, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:            8455 (count: 435, min: 2, max: 39, avg: 19.44)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                435
Number of successful refinements:     435
Number of failed refinements:         0
Max. size of reached set before ref.: 27651
Max. size of reached set after ref.:  27361
Avg. size of reached set before ref.: 3341.84
Avg. size of reached set after ref.:  400.97

Total time for CEGAR algorithm:      73.854s
Time for refinements:                 6.478s
Average time for refinement:          0.014s
Max time for refinement:              0.088s

Code Coverage
-----------------------------
  Function coverage:      0.457
  Visited lines:          1914
  Total lines:            2544
  Line coverage:          0.752
  Visited conditions:     662
  Total conditions:       864
  Condition coverage:     0.766

CPAchecker general statistics
-----------------------------
Number of program locations:     3563
Number of CFA edges:             4130
Number of relevant variables:    325
Number of functions:             92
Number of loops:                 11
Size of reached set:             40227
  Number of reached locations:   1542 (43%)
    Avg states per location:     26
    Max states per location:     401 (at node N24)
  Number of reached functions:   42 (46%)
  Number of partitions:          40080
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N902 (before line 4413), Function load_firmware called from node N1418, stack depth 5 [6bceb6ff], stack [main, xc2028_set_analog_freq, generic_set_freq, check_firmware, load_firmware]])
  Number of target states:       0

Time for analysis setup:          3.158s
  Time for loading CPAs:          0.546s
  Time for loading parser:        0.390s
  Time for CFA construction:      2.125s
    Time for parsing file(s):     0.590s
    Time for AST to CFA:          0.660s
    Time for CFA sanity check:    0.197s
    Time for post-processing:     0.541s
      Time for var class.:        0.294s
Time for Analysis:               73.854s
CPU time for analysis:           73.850s
Time for analyzing result:        0.020s
Total time for CPAchecker:       77.015s
Total CPU time for CPAchecker:   77.010s
Time for statistics:              0.424s

Time for Garbage Collector:       2.843s (in 352 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                211MB (   201 MiB) max;     91MB (    86 MiB) avg;    247MB (   235 MiB) peak
Used non-heap memory:             40MB (    38 MiB) max;     39MB (    37 MiB) avg;     41MB (    39 MiB) peak
Allocated heap memory:           255MB (   243 MiB) max;    255MB (   243 MiB) avg
Allocated non-heap memory:        43MB (    41 MiB) max;     41MB (    39 MiB) avg
Total process virtual memory:  12081MB ( 11521 MiB) max;  12076MB ( 11516 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
