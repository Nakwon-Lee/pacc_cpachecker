scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 9600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-32_7a-drivers--isdn--i4l--isdn.ko-ldv_main3_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 9600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_hgx3jnst/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker 1.6.1-svn 6608050+ (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 6458: Dead code detected: __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& kernel_stack)); (CFACreationUtils.addEdgeToCFA, INFO)

line 6461: Dead code detected: __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack)); (CFACreationUtils.addEdgeToCFA, INFO)

line 6464: Dead code detected: __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (8UL) {
  case 1UL:
  __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& kernel_stack));
  goto ldv_6203;
  case 2UL:
  __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack));
  goto ldv_6203;
  case 4UL:
  __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack));
  goto ldv_6203;
  case 8UL:
  __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack));
  goto ldv_6203;
  default:
  __bad_percpu_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 10363: Dead code detected: tmp___1 = phones; (CFACreationUtils.addEdgeToCFA, INFO)

line 10368: Dead code detected: tmp___2 = phones; (CFACreationUtils.addEdgeToCFA, INFO)

line 10373: Dead code detected: tmp___3 = phones; (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (1UL) {
    case 1UL:
    tmp___0 = phones;
    phones = phones + 1;
    __asm__ volatile ("call __put_user_1": "=a" (__ret_pu): "0" (__pu_val), "c" (tmp___0): "ebx");
    goto ldv_45739;
    case 2UL:
    tmp___1 = phones;
    phones = phones + 1;
    __asm__ volatile ("call __put_user_2": "=a" (__ret_pu): "0" (__pu_val), "c" (tmp___1): "ebx");
    goto ldv_45739;
    case 4UL:
    tmp___2 = phones;
    phones = phones + 1;
    __asm__ volatile ("call __put_user_4": "=a" (__ret_pu): "0" (__pu_val), "c" (tmp___2): "ebx");
    goto ldv_45739;
    case 8UL:
    tmp___3 = phones;
    phones = phones + 1;
    __asm__ volatile ("call __put_user_8": "=a" (__ret_pu): "0" (__pu_val), "c" (tmp___3): "ebx");
    goto ldv_45739;
    default:
    tmp___4 = phones;
    phones = phones + 1;
    __asm__ volatile ("call __put_user_X": "=a" (__ret_pu): "0" (__pu_val), "c" (tmp___4): "ebx");
    goto ldv_45739;
    } (CFACreationUtils.addEdgeToCFA, INFO)

lines 10415-10416: Dead code detected: __asm__ volatile ("call __put_user_2": "=a" (__ret_pu___0): "0" (__pu_val___0),
                       "c" (phones): "ebx"); (CFACreationUtils.addEdgeToCFA, INFO)

lines 10419-10420: Dead code detected: __asm__ volatile ("call __put_user_4": "=a" (__ret_pu___0): "0" (__pu_val___0),
                       "c" (phones): "ebx"); (CFACreationUtils.addEdgeToCFA, INFO)

lines 10423-10424: Dead code detected: __asm__ volatile ("call __put_user_8": "=a" (__ret_pu___0): "0" (__pu_val___0),
                       "c" (phones): "ebx"); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (1UL) {
  case 1UL:
  __asm__ volatile ("call __put_user_1": "=a" (__ret_pu___0): "0" (__pu_val___0),
                       "c" (phones): "ebx");
  goto ldv_45751;
  case 2UL:
  __asm__ volatile ("call __put_user_2": "=a" (__ret_pu___0): "0" (__pu_val___0),
                       "c" (phones): "ebx");
  goto ldv_45751;
  case 4UL:
  __asm__ volatile ("call __put_user_4": "=a" (__ret_pu___0): "0" (__pu_val___0),
                       "c" (phones): "ebx");
  goto ldv_45751;
  case 8UL:
  __asm__ volatile ("call __put_user_8": "=a" (__ret_pu___0): "0" (__pu_val___0),
                       "c" (phones): "ebx");
  goto ldv_45751;
  default:
  __asm__ volatile ("call __put_user_X": "=a" (__ret_pu___0): "0" (__pu_val___0),
                       "c" (phones): "ebx");
  goto ldv_45751;
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 10947: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 12695: Dead code detected: __asm__ volatile ("call __put_user_1": "=a" (__ret_pu): "0" (__pu_val), "c" (value): "ebx"); (CFACreationUtils.addEdgeToCFA, INFO)

line 12698: Dead code detected: __asm__ volatile ("call __put_user_2": "=a" (__ret_pu): "0" (__pu_val), "c" (value): "ebx"); (CFACreationUtils.addEdgeToCFA, INFO)

line 12704: Dead code detected: __asm__ volatile ("call __put_user_8": "=a" (__ret_pu): "0" (__pu_val), "c" (value): "ebx"); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (4UL) {
  case 1UL:
  __asm__ volatile ("call __put_user_1": "=a" (__ret_pu): "0" (__pu_val), "c" (value): "ebx");
  goto ldv_44732;
  case 2UL:
  __asm__ volatile ("call __put_user_2": "=a" (__ret_pu): "0" (__pu_val), "c" (value): "ebx");
  goto ldv_44732;
  case 4UL:
  __asm__ volatile ("call __put_user_4": "=a" (__ret_pu): "0" (__pu_val), "c" (value): "ebx");
  goto ldv_44732;
  case 8UL:
  __asm__ volatile ("call __put_user_8": "=a" (__ret_pu): "0" (__pu_val), "c" (value): "ebx");
  goto ldv_44732;
  default:
  __asm__ volatile ("call __put_user_X": "=a" (__ret_pu): "0" (__pu_val), "c" (value): "ebx");
  goto ldv_44732;
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 15848: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 16766: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 16880: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 16921: Dead code detected: __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

line 16924: Dead code detected: __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

line 16927: Dead code detected: __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (8UL) {
  case 1UL:
  __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& current_task));
  goto ldv_2861;
  case 2UL:
  __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_2861;
  case 4UL:
  __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_2861;
  case 8UL:
  __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_2861;
  default:
  __bad_percpu_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 16984: Dead code detected: __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& kernel_stack)); (CFACreationUtils.addEdgeToCFA, INFO)

line 16987: Dead code detected: __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack)); (CFACreationUtils.addEdgeToCFA, INFO)

line 16990: Dead code detected: __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (8UL) {
  case 1UL:
  __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& kernel_stack));
  goto ldv_6330;
  case 2UL:
  __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack));
  goto ldv_6330;
  case 4UL:
  __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack));
  goto ldv_6330;
  case 8UL:
  __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack));
  goto ldv_6330;
  default:
  __bad_percpu_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 19018: Dead code detected: tmp___2 = p___0; (CFACreationUtils.addEdgeToCFA, INFO)

line 19023: Dead code detected: tmp___3 = p___0; (CFACreationUtils.addEdgeToCFA, INFO)

line 19028: Dead code detected: tmp___4 = p___0; (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (8UL) {
      case 1UL:
      tmp___2 = p___0;
      p___0 = p___0 + 1;
      __asm__ volatile ("call __put_user_1": "=a" (__ret_pu): "0" (__pu_val), "c" (tmp___2): "ebx");
      goto ldv_44974;
      case 2UL:
      tmp___3 = p___0;
      p___0 = p___0 + 1;
      __asm__ volatile ("call __put_user_2": "=a" (__ret_pu): "0" (__pu_val), "c" (tmp___3): "ebx");
      goto ldv_44974;
      case 4UL:
      tmp___4 = p___0;
      p___0 = p___0 + 1;
      __asm__ volatile ("call __put_user_4": "=a" (__ret_pu): "0" (__pu_val), "c" (tmp___4): "ebx");
      goto ldv_44974;
      case 8UL:
      tmp___5 = p___0;
      p___0 = p___0 + 1;
      __asm__ volatile ("call __put_user_8": "=a" (__ret_pu): "0" (__pu_val), "c" (tmp___5): "ebx");
      goto ldv_44974;
      default:
      tmp___6 = p___0;
      p___0 = p___0 + 1;
      __asm__ volatile ("call __put_user_X": "=a" (__ret_pu): "0" (__pu_val), "c" (tmp___6): "ebx");
      goto ldv_44974;
      } (CFACreationUtils.addEdgeToCFA, INFO)

line 19048: Dead code detected: tmp___7 = p___0; (CFACreationUtils.addEdgeToCFA, INFO)

line 19054: Dead code detected: tmp___8 = p___0; (CFACreationUtils.addEdgeToCFA, INFO)

line 19060: Dead code detected: tmp___9 = p___0; (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (8UL) {
      case 1UL:
      tmp___7 = p___0;
      p___0 = p___0 + 1;
      __asm__ volatile ("call __put_user_1": "=a" (__ret_pu___0): "0" (__pu_val___0),
                           "c" (tmp___7): "ebx");
      goto ldv_44983;
      case 2UL:
      tmp___8 = p___0;
      p___0 = p___0 + 1;
      __asm__ volatile ("call __put_user_2": "=a" (__ret_pu___0): "0" (__pu_val___0),
                           "c" (tmp___8): "ebx");
      goto ldv_44983;
      case 4UL:
      tmp___9 = p___0;
      p___0 = p___0 + 1;
      __asm__ volatile ("call __put_user_4": "=a" (__ret_pu___0): "0" (__pu_val___0),
                           "c" (tmp___9): "ebx");
      goto ldv_44983;
      case 8UL:
      tmp___10 = p___0;
      p___0 = p___0 + 1;
      __asm__ volatile ("call __put_user_8": "=a" (__ret_pu___0): "0" (__pu_val___0),
                           "c" (tmp___10): "ebx");
      goto ldv_44983;
      default:
      tmp___11 = p___0;
      p___0 = p___0 + 1;
      __asm__ volatile ("call __put_user_X": "=a" (__ret_pu___0): "0" (__pu_val___0),
                           "c" (tmp___11): "ebx");
      goto ldv_44983;
      } (CFACreationUtils.addEdgeToCFA, INFO)

line 19609: Dead code detected: tmp___55 = p; (CFACreationUtils.addEdgeToCFA, INFO)

line 19614: Dead code detected: tmp___56 = p; (CFACreationUtils.addEdgeToCFA, INFO)

line 19619: Dead code detected: tmp___57 = p; (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (1UL) {
        case 1UL:
        tmp___54 = p;
        p = p + 1;
        __asm__ volatile ("call __get_user_1": "=a" (__ret_gu), "=d" (__val_gu): "0" (tmp___54));
        goto ldv_45048;
        case 2UL:
        tmp___55 = p;
        p = p + 1;
        __asm__ volatile ("call __get_user_2": "=a" (__ret_gu), "=d" (__val_gu): "0" (tmp___55));
        goto ldv_45048;
        case 4UL:
        tmp___56 = p;
        p = p + 1;
        __asm__ volatile ("call __get_user_4": "=a" (__ret_gu), "=d" (__val_gu): "0" (tmp___56));
        goto ldv_45048;
        case 8UL:
        tmp___57 = p;
        p = p + 1;
        __asm__ volatile ("call __get_user_8": "=a" (__ret_gu), "=d" (__val_gu): "0" (tmp___57));
        goto ldv_45048;
        default:
        tmp___58 = p;
        p = p + 1;
        __asm__ volatile ("call __get_user_X": "=a" (__ret_gu), "=d" (__val_gu): "0" (tmp___58));
        goto ldv_45048;
        } (CFACreationUtils.addEdgeToCFA, INFO)

line 20959: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 21063: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 21087: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 21111: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 21135: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 21159: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 21183: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 24923: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 25106: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 25507: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 26831: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 28339: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 6916: Function pointer *(dst->ops->link_failure) with type void (*)(struct sk_buff *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 24452: Function pointer *(compressor->compress) with type int (*)(void *, struct sk_buff *, struct sk_buff *, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 24397: Function pointer *(ipc->incomp) with type void (*)(void *, struct sk_buff *, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 24369: Function pointer *(ipc->decompress) with type int (*)(void *, struct sk_buff *, struct sk_buff *, struct isdn_ppp_resetparams *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 24587-24589: Function pointer *(is->link_compressor->reset) with type void (*)(void *, unsigned char, unsigned char, unsigned char *, unsigned int, struct isdn_ppp_resetparams *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 24582-24584: Function pointer *(mis->compressor->reset) with type void (*)(void *, unsigned char, unsigned char, unsigned char *, unsigned int, struct isdn_ppp_resetparams *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 24564-24566: Function pointer *(is->link_decompressor->reset) with type void (*)(void *, unsigned char, unsigned char, unsigned char *, unsigned int, struct isdn_ppp_resetparams *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 24554-24556: Function pointer *(mis->decompressor->reset) with type void (*)(void *, unsigned char, unsigned char, unsigned char *, unsigned int, struct isdn_ppp_resetparams *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 24739: Function pointer *(is->link_compressor->reset) with type void (*)(void *, unsigned char, unsigned char, unsigned char *, unsigned int, struct isdn_ppp_resetparams *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 24732: Function pointer *(is->compressor->reset) with type void (*)(void *, unsigned char, unsigned char, unsigned char *, unsigned int, struct isdn_ppp_resetparams *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 24816: Function pointer *(ipc->alloc) with type void *(*)(struct isdn_ppp_comp_data *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 24818: Function pointer *(ipc->init) with type int (*)(void *, struct isdn_ppp_comp_data *, int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 18696-18697: Function pointer *(((dev->drv)[drvidx])->interface->readstat) with type int (*)(u_char *, int, int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 16807-16808: Function pointer *(((dev->drv)[c->driver])->interface->writebuf_skb) with type int (*)(int, int, int, struct sk_buff *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 16725-16726: Function pointer *(((dev->drv)[c->driver])->interface->writebuf_skb) with type int (*)(int, int, int, struct sk_buff *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 18797-18799: Function pointer *(((dev->drv)[drvidx])->interface->writecmd) with type int (*)(u_char *, int, int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 20249-20250: Function pointer *(((dev->drv)[drvidx])->interface->writebuf_skb) with type int (*)(int, int, int, struct sk_buff *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 20241-20242: Function pointer *(((dev->drv)[drvidx])->interface->writebuf_skb) with type int (*)(int, int, int, struct sk_buff *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 20229: Function pointer *(((dev->drv)[drvidx])->interface->writebuf_skb) with type int (*)(int, int, int, struct sk_buff *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 20180: Function pointer *(((dev->drv)[drvidx])->interface->writebuf_skb) with type int (*)(int, int, int, struct sk_buff *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 17049: Function pointer *(p->_qproc) with type void (*)(struct file *, wait_queue_head_t *, struct poll_table_struct *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_handler_precall to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function vzalloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function init_timer_key to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __raw_spin_lock_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __mutex_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __init_waitqueue_head to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __register_chrdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function vfree to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tty_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function put_tty_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __unregister_chrdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function del_timer to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function skb_queue_purge to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tty_port_destroy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function might_fault to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _copy_to_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function interruptible_sleep_on to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

lines 18696-18697: Ignoring function call through function pointer *(((dev->drv)[drvidx])->interface->readstat): len = (*(((dev->drv)[drvidx])->interface->readstat))((u_char *)buf, (int)count, drvidx, tmp___4); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function nonseekable_open to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function try_module_get to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

lines 18797-18799: Ignoring function call through function pointer *(((dev->drv)[drvidx])->interface->writecmd): retval = (*(((dev->drv)[drvidx])->interface->writecmd))((u_char *)buf, (int)count, drvidx, tmp___0); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function __alloc_skb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function skb_put to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            37453 (19% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  32077 (86%)
  Because of loop head:            5245 (14%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         131 (0%)
  Times precision was empty:       7973 (21%)
  Times precision was {false}:     245 (1%)
  Times result was cached:         27940 (75%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      1295 (3%)
  Times result was 'false':        1706 (5%)
Number of strengthen sat checks:   0
Number of coverage checks:         17058
  BDD entailment checks:           5214
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       75
Number of predicates discovered:          7
Number of abstraction locations:          123
Max number of predicates per location:    6
Avg number of predicates per location:    5
Total predicates per abstraction:         146870
Max number of predicates per abstraction: 6
Avg number of predicates per abstraction: 95.37
Number of irrelevant predicates:          33557 (23%)
Number of preds handled by boolean abs:   3950 (3%)
  Total number of models for allsat:      1295
  Max number of models for allsat:        1
  Avg number of models for allsat:        1.00

Time for post operator:                  2.197s
  Time for path formula creation:        2.135s
Time for strengthen operator:            0.121s
Time for prec operator:                  8.391s
  Time for abstraction:                  7.944s (Max:     0.163s, Count: 37453)
    Boolean abstraction:                 2.123s
    Solving time:                        2.115s (Max:     0.148s)
    Model enumeration time:              0.114s
    Time for BDD construction:           0.064s (Max:     0.010s)
Time for merge operator:                 0.157s
Time for coverage check:                 0.039s
  Time for BDD entailment checks:        0.037s
Total time for SMT solver (w/o itp):     2.229s

Number of path formula cache hits:   221185 (95%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     1.506s

Total number of created targets for pointer analysis: 1545
   Number of created targets for uf: *signed_int is 133
   Number of created targets for uf: *(char)* is 2
   Number of created targets for uf: *unsigned_char is 101
   Number of created targets for uf: *char is 57
   Number of created targets for uf: *unsigned_long_int is 2


Number of BDD nodes:                               272
Size of BDD node table:                            464047
Size of BDD cache:                                 46411
Size of BDD node cleanup queue:                        2721 (count: 22288, min: 0, max: 253, avg: 0.12)
Time for BDD node cleanup:                             0.007s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.297s
Automaton transfers with branching:                0
Automaton transfer successors:                       192749 (count: 192749, min: 1, max: 1, avg: 1.00) [1 x 192749]

CPA algorithm statistics
------------------------
Number of iterations:            122163
Max size of waitlist:            80
Average size of waitlist:        33
Number of computed successors:   140487
Max successors for one state:    2
Number of times merged:          5922
Number of times stopped:         10439
Number of times breaked:         131

Total time for CPA algorithm:        14.161s (Max:     0.900s)
  Time for choose from waitlist:      0.090s
  Time for precision adjustment:      9.108s
  Time for transfer relation:         3.893s
  Time for merge operator:            0.269s
  Time for stop operator:             0.184s
  Time for adding to reached set:     0.162s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   131
Avg. length of target path (in blocks):                4426 (count: 131, min: 7, max: 46, avg: 33.79)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   9.308s
  Counterexample analysis:                             8.963s (Max:     0.160s, Calls: 131)
    Refinement sat check:                              8.099s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.003s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.037s
  Precision update:                                    0.057s
  ARG update:                                          0.187s

Length of refined path (in blocks):                    4261 (count: 130, min: 6, max: 45, avg: 32.78)
Number of affected states:                             3923 (count: 130, min: 4, max: 43, avg: 30.18)
Length (states) of path with itp 'true':                208 (count: 130, min: 1, max: 24, avg: 1.60)
Length (states) of path with itp non-trivial itp:      3923 (count: 130, min: 4, max: 43, avg: 30.18)
Length (states) of path with itp 'false':               130 (count: 130, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 130, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:            3793 (count: 130, min: 3, max: 42, avg: 29.18)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                131
Number of successful refinements:     130
Number of failed refinements:         0
Max. size of reached set before ref.: 1749
Max. size of reached set after ref.:  1474
Avg. size of reached set before ref.: 1016.55
Avg. size of reached set after ref.:  37.12

Total time for CEGAR algorithm:      23.600s
Time for refinements:                 9.425s
Average time for refinement:          0.071s
Max time for refinement:              0.162s

Code Coverage
-----------------------------
  Function coverage:      0.120
  Visited lines:          2003
  Total lines:            14319
  Line coverage:          0.140
  Visited conditions:     306
  Total conditions:       5730
  Condition coverage:     0.053

CPAchecker general statistics
-----------------------------
Number of program locations:     20438
Number of CFA edges:             24597
Number of relevant variables:    2841
Number of functions:             509
Number of loops:                 183
Size of reached set:             1749
  Number of reached locations:   798 (4%)
    Avg states per location:     2
    Max states per location:     33 (at node N20301)
  Number of reached functions:   61 (12%)
  Number of partitions:          1745
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N13618 (before line 20903), Function main called from node N13517, stack depth 1 [4fae8455], stack [main]])
  Number of target states:       1
  Size of final wait list        78

Time for analysis setup:          6.830s
  Time for loading CPAs:          0.757s
  Time for loading parser:        0.431s
  Time for CFA construction:      5.539s
    Time for parsing file(s):     0.922s
    Time for AST to CFA:          1.980s
    Time for CFA sanity check:    0.788s
    Time for post-processing:     1.824s
      Time for var class.:        0.839s
Time for Analysis:               23.600s
CPU time for analysis:           23.600s
Total time for CPAchecker:       30.432s
Total CPU time for CPAchecker:   30.410s
Time for statistics:              0.107s

Time for Garbage Collector:       0.546s (in 57 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                134MB (   128 MiB) max;     90MB (    86 MiB) avg;    141MB (   135 MiB) peak
Used non-heap memory:             40MB (    38 MiB) max;     35MB (    34 MiB) avg;     40MB (    38 MiB) peak
Allocated heap memory:           255MB (   243 MiB) max;    255MB (   243 MiB) avg
Allocated non-heap memory:        42MB (    40 MiB) max;     38MB (    36 MiB) avg
Total process virtual memory:  12144MB ( 11582 MiB) max;  12135MB ( 11572 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
