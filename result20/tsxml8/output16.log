scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 9600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-32_7a-drivers--gpu--drm--ttm--ttm.ko-ldv_main5_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 9600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run__stps5v1/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker 1.6.1-svn 6608050+ (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 4615: Dead code detected: return (0UL); (CFACreationUtils.addEdgeToCFA, INFO)

line 4726: Dead code detected: __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& kernel_stack)); (CFACreationUtils.addEdgeToCFA, INFO)

line 4729: Dead code detected: __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack)); (CFACreationUtils.addEdgeToCFA, INFO)

line 4732: Dead code detected: __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (8UL) {
  case 1UL:
  __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& kernel_stack));
  goto ldv_6318;
  case 2UL:
  __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack));
  goto ldv_6318;
  case 4UL:
  __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack));
  goto ldv_6318;
  case 8UL:
  __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack));
  goto ldv_6318;
  default:
  __bad_percpu_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 5495: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 5565: Dead code detected: __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

line 5568: Dead code detected: __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

line 5571: Dead code detected: __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (8UL) {
  case 1UL:
  __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& current_task));
  goto ldv_2861;
  case 2UL:
  __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_2861;
  case 4UL:
  __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_2861;
  case 8UL:
  __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_2861;
  default:
  __bad_percpu_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 8640: Dead code detected: __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& kernel_stack)); (CFACreationUtils.addEdgeToCFA, INFO)

line 8643: Dead code detected: __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack)); (CFACreationUtils.addEdgeToCFA, INFO)

line 8646: Dead code detected: __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (8UL) {
  case 1UL:
  __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& kernel_stack));
  goto ldv_6245;
  case 2UL:
  __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack));
  goto ldv_6245;
  case 4UL:
  __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack));
  goto ldv_6245;
  case 8UL:
  __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack));
  goto ldv_6245;
  default:
  __bad_percpu_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 9595: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 9644: Dead code detected: __ptr = (u8 volatile *)(& v->counter); (CFACreationUtils.addEdgeToCFA, INFO)

line 9649: Dead code detected: __ptr___0 = (u16 volatile *)(& v->counter); (CFACreationUtils.addEdgeToCFA, INFO)

line 9659: Dead code detected: __ptr___2 = (u64 volatile *)(& v->counter); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (4UL) {
  case 1UL:
  __ptr = (u8 volatile *)(& v->counter);
  __asm__ volatile (".pushsection .smp_locks,\"a\"\n.balign 4\n.long 671f - .\n.popsection\n671:\n\tlock; cmpxchgb %2,%1": "=a" (__ret),
                       "+m" (*__ptr): "q" (__new), "0" (__old): "memory");
  goto ldv_5494;
  case 2UL:
  __ptr___0 = (u16 volatile *)(& v->counter);
  __asm__ volatile (".pushsection .smp_locks,\"a\"\n.balign 4\n.long 671f - .\n.popsection\n671:\n\tlock; cmpxchgw %2,%1": "=a" (__ret),
                       "+m" (*__ptr___0): "r" (__new), "0" (__old): "memory");
  goto ldv_5494;
  case 4UL:
  __ptr___1 = (u32 volatile *)(& v->counter);
  __asm__ volatile (".pushsection .smp_locks,\"a\"\n.balign 4\n.long 671f - .\n.popsection\n671:\n\tlock; cmpxchgl %2,%1": "=a" (__ret),
                       "+m" (*__ptr___1): "r" (__new), "0" (__old): "memory");
  goto ldv_5494;
  case 8UL:
  __ptr___2 = (u64 volatile *)(& v->counter);
  __asm__ volatile (".pushsection .smp_locks,\"a\"\n.balign 4\n.long 671f - .\n.popsection\n671:\n\tlock; cmpxchgq %2,%1": "=a" (__ret),
                       "+m" (*__ptr___2): "r" (__new), "0" (__old): "memory");
  goto ldv_5494;
  default:
  __cmpxchg_wrong_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 9727: Dead code detected: __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& kernel_stack)); (CFACreationUtils.addEdgeToCFA, INFO)

line 9730: Dead code detected: __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack)); (CFACreationUtils.addEdgeToCFA, INFO)

line 9733: Dead code detected: __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (8UL) {
  case 1UL:
  __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& kernel_stack));
  goto ldv_6236;
  case 2UL:
  __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack));
  goto ldv_6236;
  case 4UL:
  __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack));
  goto ldv_6236;
  case 8UL:
  __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack));
  goto ldv_6236;
  default:
  __bad_percpu_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 10771: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 10825: Dead code detected: __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& kernel_stack)); (CFACreationUtils.addEdgeToCFA, INFO)

line 10828: Dead code detected: __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack)); (CFACreationUtils.addEdgeToCFA, INFO)

line 10831: Dead code detected: __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (8UL) {
  case 1UL:
  __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& kernel_stack));
  goto ldv_6233;
  case 2UL:
  __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack));
  goto ldv_6233;
  case 4UL:
  __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack));
  goto ldv_6233;
  case 8UL:
  __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack));
  goto ldv_6233;
  default:
  __bad_percpu_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

lines 12679-12680: Dead code detected: __asm__ volatile (".pushsection .smp_locks,\"a\"\n.balign 4\n.long 671f - .\n.popsection\n671:\n\tlock; xaddb %b0, %1\n": "+q" (__ret),
                       "+m" (v->counter): : "memory", "cc"); (CFACreationUtils.addEdgeToCFA, INFO)

lines 12683-12684: Dead code detected: __asm__ volatile (".pushsection .smp_locks,\"a\"\n.balign 4\n.long 671f - .\n.popsection\n671:\n\tlock; xaddw %w0, %1\n": "+r" (__ret),
                       "+m" (v->counter): : "memory", "cc"); (CFACreationUtils.addEdgeToCFA, INFO)

lines 12691-12692: Dead code detected: __asm__ volatile (".pushsection .smp_locks,\"a\"\n.balign 4\n.long 671f - .\n.popsection\n671:\n\tlock; xaddq %q0, %1\n": "+r" (__ret),
                       "+m" (v->counter): : "memory", "cc"); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (4UL) {
  case 1UL:
  __asm__ volatile (".pushsection .smp_locks,\"a\"\n.balign 4\n.long 671f - .\n.popsection\n671:\n\tlock; xaddb %b0, %1\n": "+q" (__ret),
                       "+m" (v->counter): : "memory", "cc");
  goto ldv_5474;
  case 2UL:
  __asm__ volatile (".pushsection .smp_locks,\"a\"\n.balign 4\n.long 671f - .\n.popsection\n671:\n\tlock; xaddw %w0, %1\n": "+r" (__ret),
                       "+m" (v->counter): : "memory", "cc");
  goto ldv_5474;
  case 4UL:
  __asm__ volatile (".pushsection .smp_locks,\"a\"\n.balign 4\n.long 671f - .\n.popsection\n671:\n\tlock; xaddl %0, %1\n": "+r" (__ret),
                       "+m" (v->counter): : "memory", "cc");
  goto ldv_5474;
  case 8UL:
  __asm__ volatile (".pushsection .smp_locks,\"a\"\n.balign 4\n.long 671f - .\n.popsection\n671:\n\tlock; xaddq %q0, %1\n": "+r" (__ret),
                       "+m" (v->counter): : "memory", "cc");
  goto ldv_5474;
  default:
  __xadd_wrong_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 12714: Dead code detected: __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& kernel_stack)); (CFACreationUtils.addEdgeToCFA, INFO)

line 12717: Dead code detected: __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack)); (CFACreationUtils.addEdgeToCFA, INFO)

line 12720: Dead code detected: __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (8UL) {
  case 1UL:
  __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& kernel_stack));
  goto ldv_6177;
  case 2UL:
  __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack));
  goto ldv_6177;
  case 4UL:
  __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack));
  goto ldv_6177;
  case 8UL:
  __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack));
  goto ldv_6177;
  default:
  __bad_percpu_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 13939: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 15918: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 14404: Function pointer *(ops->alloc) with type void *(*)(struct device *, size_t , dma_addr_t *, gfp_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 14437: Function pointer *(ops->free) with type void (*)(struct device *, size_t , void *, dma_addr_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6674: Function pointer *(bo->bdev->driver->move_notify) with type void (*)(struct ttm_buffer_object *, struct ttm_mem_reg *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 6616-6617: Function pointer *(bdev->driver->move) with type int (*)(struct ttm_buffer_object *, bool , bool , bool , struct ttm_mem_reg *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 11219: Function pointer *(base->ref_obj_release) with type void (*)(struct ttm_base_object *, enum ttm_ref_type ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_handler_precall to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __wake_up to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __list_del_entry to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 9941: Ignoring function call through function pointer *(bdev->driver->fault_reserve_notify): ret = (*(bdev->driver->fault_reserve_notify))(bo); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Extern function vm_get_page_prot(vma->vm_flags) returning a composite is treated as nondet. (PredicateCPA:CExpressionVisitorWithPointerAliasing.visit, WARNING)

line 10010: Ignoring function call through function pointer *(ttm->bdev->driver->ttm_tt_populate): tmp___9 = (*(ttm->bdev->driver->ttm_tt_populate))(ttm); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function vm_insert_mixed to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Extern function pgprot_writecombine(tmp) returning a composite is treated as nondet. (PredicateCPA:CExpressionVisitorWithPointerAliasing.visit, WARNING)

Assuming external function agp_unbind_memory to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function agp_free_memory to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 8295: Ignoring function call through function pointer *(driver->sync_obj_signaled): tmp___0 = (*(driver->sync_obj_signaled))(bo->sync_obj); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 8312: Ignoring function call through function pointer *(driver->sync_obj_ref): sync_obj = (*(driver->sync_obj_ref))(bo->sync_obj); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 8314: Ignoring function call through function pointer *(driver->sync_obj_wait): ret = (*(driver->sync_obj_wait))(sync_obj, (int)lazy, (int)interruptible); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 8317: Ignoring function call through function pointer *(driver->sync_obj_unref): (*(driver->sync_obj_unref))(&sync_obj); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 8301: Ignoring function call through function pointer *(driver->sync_obj_unref): (*(driver->sync_obj_unref))(&tmp_obj); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 8336: Ignoring function call through function pointer *(driver->sync_obj_unref): (*(driver->sync_obj_unref))(&sync_obj); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 8331: Ignoring function call through function pointer *(driver->sync_obj_unref): (*(driver->sync_obj_unref))(&sync_obj); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 8332: Ignoring function call through function pointer *(driver->sync_obj_unref): (*(driver->sync_obj_unref))(&tmp_obj___0); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function __list_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 8888: Ignoring function call through function pointer *(bdev->driver->io_mem_reserve): tmp = (*(bdev->driver->io_mem_reserve))(bdev, mem); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 8899: Ignoring function call through function pointer *(bdev->driver->io_mem_reserve): ret = (*(bdev->driver->io_mem_reserve))(bdev, mem); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function drm_mm_clean to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function drm_mm_takedown to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Recursion detected, aborting. To ignore recursion, add -skipRecursion to the command line. (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, INFO)

Error: line 6764: Unsupported feature (recursion): ret = ttm_bo_wait(bo, 0, 0, 1); (CallstackTransferRelation.getAbstractSuccessorsForEdge, SEVERE)

PredicateCPA statistics
-----------------------
Number of abstractions:            4512 (22% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  4307 (95%)
  Because of loop head:            185 (4%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         20 (0%)
  Times precision was empty:       2573 (57%)
  Times precision was {false}:     153 (3%)
  Times result was cached:         1493 (33%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      293 (6%)
  Times result was 'false':        122 (3%)
Number of strengthen sat checks:   0
Number of coverage checks:         1468
  BDD entailment checks:           690
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       55
Number of predicates discovered:          6
Number of abstraction locations:          46
Max number of predicates per location:    5
Avg number of predicates per location:    4
Total predicates per abstraction:         7919
Max number of predicates per abstraction: 5
Avg number of predicates per abstraction: 17.76
Number of irrelevant predicates:          4704 (59%)
Number of preds handled by boolean abs:   855 (11%)
  Total number of models for allsat:      293
  Max number of models for allsat:        1
  Avg number of models for allsat:        1.00

Time for post operator:                  1.152s
  Time for path formula creation:        1.125s
Time for strengthen operator:            0.048s
Time for prec operator:                  1.549s
  Time for abstraction:                  1.429s (Max:     0.018s, Count: 4512)
    Boolean abstraction:                 0.256s
    Solving time:                        0.213s (Max:     0.012s)
    Model enumeration time:              0.017s
    Time for BDD construction:           0.050s (Max:     0.010s)
Time for merge operator:                 0.053s
Time for coverage check:                 0.019s
  Time for BDD entailment checks:        0.018s
Total time for SMT solver (w/o itp):     0.230s

Number of path formula cache hits:   19849 (81%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.870s

Total number of created targets for pointer analysis: 110
   Number of created targets for uf: *(void)* is 5
   Number of created targets for uf: *signed_int is 5
   Number of created targets for uf: *(char)* is 2
   Number of created targets for uf: *(struct_list_head)* is 41
   Number of created targets for uf: *unsigned_long_long_int is 3
   Number of created targets for uf: *(struct_dma_map_ops)* is 2
   Number of created targets for uf: *(unsigned_long_long_int)* is 2
   Number of created targets for uf: *(struct_ttm_buffer_object)* is 2


Number of BDD nodes:                               222
Size of BDD node table:                            464047
Size of BDD cache:                                 46411
Size of BDD node cleanup queue:                         651 (count: 5833, min: 0, max: 344, avg: 0.11)
Time for BDD node cleanup:                             0.001s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.111s
Automaton transfers with branching:                0
Automaton transfer successors:                        20632 (count: 20632, min: 1, max: 1, avg: 1.00) [1 x 20632]

CPA algorithm statistics
------------------------
Number of iterations:            13261
Max size of waitlist:            58
Average size of waitlist:        22
Number of computed successors:   14861
Max successors for one state:    2
Number of times merged:          389
Number of times stopped:         964
Number of times breaked:         20

Total time for CPA algorithm:         4.295s (Max:     0.608s)
  Time for choose from waitlist:      0.053s
  Time for precision adjustment:      1.766s
  Time for transfer relation:         2.045s
  Time for merge operator:            0.111s
  Time for stop operator:             0.059s
  Time for adding to reached set:     0.062s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   20
Avg. length of target path (in blocks):                 605 (count: 20, min: 10, max: 46, avg: 30.25)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.437s
  Counterexample analysis:                             0.334s (Max:     0.024s, Calls: 20)
    Refinement sat check:                              0.229s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.024s
  Precision update:                                    0.015s
  ARG update:                                          0.059s

Length of refined path (in blocks):                     585 (count: 20, min: 9, max: 45, avg: 29.25)
Number of affected states:                              465 (count: 20, min: 3, max: 39, avg: 23.25)
Length (states) of path with itp 'true':                100 (count: 20, min: 5, max: 5, avg: 5.00)
Length (states) of path with itp non-trivial itp:       465 (count: 20, min: 3, max: 39, avg: 23.25)
Length (states) of path with itp 'false':                20 (count: 20, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 20, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:             445 (count: 20, min: 2, max: 38, avg: 22.25)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                20
Number of successful refinements:     20
Number of failed refinements:         0
Max. size of reached set before ref.: 1417
Max. size of reached set after ref.:  33
Avg. size of reached set before ref.: 610.55
Avg. size of reached set after ref.:  33.00

Total time for CEGAR algorithm:       4.781s
Time for refinements:                 0.486s
Average time for refinement:          0.024s
Max time for refinement:              0.048s

Code Coverage
-----------------------------
  Function coverage:      0.137
  Visited lines:          1317
  Total lines:            7598
  Line coverage:          0.173
  Visited conditions:     247
  Total conditions:       2156
  Condition coverage:     0.115

CPAchecker general statistics
-----------------------------
Number of program locations:     11099
Number of CFA edges:             13014
Number of relevant variables:    2130
Number of functions:             482
Number of loops:                 139
Size of reached set:             2225
  Number of reached locations:   729 (7%)
    Avg states per location:     3
    Max states per location:     72 (at node N10255)
  Number of reached functions:   66 (14%)
  Number of partitions:          2220
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N2217 (before line 6429), Function ttm_bo_reserve called from node N5204, stack depth 3 [505e8d48], stack [main, ttm_bo_vm_fault, ttm_bo_reserve]])
  Number of target states:       0
  Size of final wait list        53

Time for analysis setup:          4.889s
  Time for loading CPAs:          0.662s
  Time for loading parser:        0.380s
  Time for CFA construction:      3.751s
    Time for parsing file(s):     0.727s
    Time for AST to CFA:          1.349s
    Time for CFA sanity check:    0.420s
    Time for post-processing:     1.176s
      Time for var class.:        0.624s
Time for Analysis:                4.781s
CPU time for analysis:            4.780s
Total time for CPAchecker:        9.685s
Total CPU time for CPAchecker:    9.670s
Time for statistics:              0.084s

Time for Garbage Collector:       0.260s (in 13 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                118MB (   112 MiB) max;     66MB (    63 MiB) avg;    127MB (   121 MiB) peak
Used non-heap memory:             38MB (    36 MiB) max;     30MB (    29 MiB) avg;     38MB (    36 MiB) peak
Allocated heap memory:           255MB (   243 MiB) max;    255MB (   243 MiB) avg
Allocated non-heap memory:        39MB (    38 MiB) max;     32MB (    31 MiB) avg
Total process virtual memory:  12144MB ( 11582 MiB) max;  12119MB ( 11558 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
