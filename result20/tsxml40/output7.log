scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 9600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-drivers--scsi--scsi_tgt.ko-main.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 9600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_y4rj_d7l/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker 1.6.1-svn 6608050+ (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 7274: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 7895: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 7315: Function pointer *(p->_qproc) with type void (*)(struct file *, wait_queue_head_t *, struct poll_table_struct *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6878: Function pointer *(shost->hostt->eh_abort_handler) with type int (*)(struct scsi_cmnd *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6749: Function pointer *(shost->hostt->eh_abort_handler) with type int (*)(struct scsi_cmnd *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7095: Function pointer *(shost->transportt->it_nexus_response) with type int (*)(struct Scsi_Host *, u64 , int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7042: Function pointer *(shost->transportt->tsk_mgmt_response) with type int (*)(struct Scsi_Host *, u64 , u64 , int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6806: Function pointer *(shost->hostt->transfer_response) with type int (*)(struct scsi_cmnd *, void (*)(struct scsi_cmnd *)) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function kmem_cache_create to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __alloc_workqueue_key to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function kmem_cache_destroy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function destroy_workqueue to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_tgt_fops_release_1 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function noop_llseek to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_pages to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __raw_spin_lock_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function get_zeroed_page to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function misc_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 7315: Ignoring function call through function pointer *(p->_qproc): (*(p->_qproc))(filp, wait_address, p); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function __phys_addr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function vm_insert_page to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function scsi_host_lookup to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function scsi_host_put to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function list_del to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function blk_rq_map_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function scsi_init_io to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function scsi_release_buffers to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 6878: Ignoring function call through function pointer *(shost->hostt->eh_abort_handler): err = (*(shost->hostt->eh_abort_handler))(cmd); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function __list_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 6398: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((const void *)to, 0); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function __builtin_object_size to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function might_fault to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function blk_rq_unmap_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 6806: Ignoring function call through function pointer *(shost->hostt->transfer_response): err = (*(shost->hostt->transfer_response))(cmd, &scsi_tgt_cmd_done); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function _copy_from_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_fmt to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function kmem_cache_free to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __blk_put_request to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __scsi_put_command to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            26495 (16% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  22042 (83%)
  Because of loop head:            4361 (16%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         92 (0%)
  Times precision was empty:       2594 (10%)
  Times precision was {false}:     162 (1%)
  Times result was cached:         23021 (87%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      718 (3%)
  Times result was 'false':        1774 (7%)
Number of strengthen sat checks:   0
Number of coverage checks:         24837
  BDD entailment checks:           8253
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       20
Number of predicates discovered:          6
Number of abstraction locations:          105
Max number of predicates per location:    5
Avg number of predicates per location:    3
Total predicates per abstraction:         76489
Max number of predicates per abstraction: 5
Avg number of predicates per abstraction: 86.92
Number of irrelevant predicates:          12081 (16%)
Number of preds handled by boolean abs:   1573 (2%)
  Total number of models for allsat:      764
  Max number of models for allsat:        3
  Avg number of models for allsat:        1.06

Time for post operator:                  1.700s
  Time for path formula creation:        1.583s
Time for strengthen operator:            0.127s
Time for prec operator:                  5.661s
  Time for abstraction:                  5.342s (Max:     0.022s, Count: 26495)
    Boolean abstraction:                 0.633s
    Solving time:                        0.506s (Max:     0.016s)
    Model enumeration time:              0.050s
    Time for BDD construction:           0.052s (Max:     0.009s)
Time for merge operator:                 0.118s
Time for coverage check:                 0.033s
  Time for BDD entailment checks:        0.030s
Total time for SMT solver (w/o itp):     0.556s

Number of path formula cache hits:   181792 (94%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     1.234s

Total number of created targets for pointer analysis: 264
   Number of created targets for uf: *unsigned_int is 33
   Number of created targets for uf: *unsigned_long_int is 193


Number of BDD nodes:                               325
Size of BDD node table:                            464047
Size of BDD cache:                                 46411
Size of BDD node cleanup queue:                        1538 (count: 16196, min: 0, max: 240, avg: 0.09)
Time for BDD node cleanup:                             0.004s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.319s
Automaton transfers with branching:                0
Automaton transfer successors:                       163071 (count: 163071, min: 1, max: 1, avg: 1.00) [1 x 163071]

CPA algorithm statistics
------------------------
Number of iterations:            110015
Max size of waitlist:            39
Average size of waitlist:        12
Number of computed successors:   127224
Max successors for one state:    2
Number of times merged:          8292
Number of times stopped:         13346
Number of times breaked:         92

Total time for CPA algorithm:        11.534s (Max:     0.514s)
  Time for choose from waitlist:      0.076s
  Time for precision adjustment:      6.397s
  Time for transfer relation:         3.810s
  Time for merge operator:            0.326s
  Time for stop operator:             0.217s
  Time for adding to reached set:     0.174s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   92
Avg. length of target path (in blocks):                3664 (count: 92, min: 8, max: 73, avg: 39.83)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   1.912s
  Counterexample analysis:                             1.497s (Max:     0.037s, Calls: 92)
    Refinement sat check:                              1.081s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.006s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.058s
  Precision update:                                    0.054s
  ARG update:                                          0.239s

Length of refined path (in blocks):                    3540 (count: 92, min: 4, max: 72, avg: 38.48)
Number of affected states:                             3323 (count: 92, min: 1, max: 70, avg: 36.12)
Length (states) of path with itp 'true':                125 (count: 92, min: 1, max: 16, avg: 1.36)
Length (states) of path with itp non-trivial itp:      3323 (count: 92, min: 1, max: 70, avg: 36.12)
Length (states) of path with itp 'false':                92 (count: 92, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 92, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:            3231 (count: 92, min: 0, max: 69, avg: 35.12)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                92
Number of successful refinements:     92
Number of failed refinements:         0
Max. size of reached set before ref.: 2380
Max. size of reached set after ref.:  194
Avg. size of reached set before ref.: 1205.20
Avg. size of reached set after ref.:  10.15

Total time for CEGAR algorithm:      13.631s
Time for refinements:                 2.090s
Average time for refinement:          0.022s
Max time for refinement:              0.045s

Code Coverage
-----------------------------
  Function coverage:      0.408
  Visited lines:          1538
  Total lines:            2047
  Line coverage:          0.751
  Visited conditions:     154
  Total conditions:       276
  Condition coverage:     0.558

CPAchecker general statistics
-----------------------------
Number of program locations:     2597
Number of CFA edges:             2769
Number of relevant variables:    252
Number of functions:             98
Number of loops:                 10
Size of reached set:             2161
  Number of reached locations:   507 (20%)
    Avg states per location:     4
    Max states per location:     18 (at node N22)
  Number of reached functions:   40 (41%)
  Number of partitions:          2154
    Avg size of partitions:      1
    Max size of partitions:      3 (with key [N710 (before line 7161), Function main called from node N702, stack depth 1 [3c818ac4], stack [main]])
  Number of target states:       0

Time for analysis setup:          3.364s
  Time for loading CPAs:          0.658s
  Time for loading parser:        0.411s
  Time for CFA construction:      2.203s
    Time for parsing file(s):     0.603s
    Time for AST to CFA:          0.771s
    Time for CFA sanity check:    0.136s
    Time for post-processing:     0.525s
      Time for var class.:        0.198s
Time for Analysis:               13.631s
CPU time for analysis:           13.630s
Time for analyzing result:        0.002s
Total time for CPAchecker:       16.997s
Total CPU time for CPAchecker:   17.000s
Time for statistics:              0.082s

Time for Garbage Collector:       0.283s (in 33 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                109MB (   104 MiB) max;     67MB (    64 MiB) avg;    117MB (   112 MiB) peak
Used non-heap memory:             45MB (    42 MiB) max;     39MB (    37 MiB) avg;     45MB (    43 MiB) peak
Allocated heap memory:           255MB (   243 MiB) max;    255MB (   243 MiB) avg
Allocated non-heap memory:        46MB (    44 MiB) max;     40MB (    39 MiB) avg
Total process virtual memory:  12149MB ( 11587 MiB) max;  12133MB ( 11571 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
