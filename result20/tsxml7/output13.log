scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 9600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-drivers--usb--host--r8a66597-hcd.ko-main.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 9600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_5o8q2rm4/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker 1.6.1-svn 6608050+ (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 8143: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 3868: Function pointer *(r8a66597->pdata->port_power) with type void (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_r8a66597_dev_pm_ops_complete_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_r8a66597_dev_pm_ops_suspend_noirq_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_r8a66597_dev_pm_ops_restore_noirq_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_r8a66597_dev_pm_ops_poweroff_late_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_r8a66597_dev_pm_ops_poweroff_noirq_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_r8a66597_dev_pm_ops_prepare_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_r8a66597_dev_pm_ops_resume_noirq_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_r8a66597_dev_pm_ops_resume_early_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_r8a66597_dev_pm_ops_restore_early_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_r8a66597_dev_pm_ops_suspend_late_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_disabled to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_get_resource to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iounmap to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ioremap_nocache to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_create_hcd to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snprintf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __raw_spin_lock_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function init_timer_key to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iowrite16 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ioread16 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_put_hcd to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 3868: Ignoring function call through function pointer *(r8a66597->pdata->port_power): (*(r8a66597->pdata->port_power))(port, power); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_add_hcd to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function msleep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function del_timer_sync to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_remove_hcd to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_driver_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_driver_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_hcd_check_unlink_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mod_timer to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_dev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __list_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            65544 (18% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  60873 (93%)
  Because of loop head:            4566 (7%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         105 (0%)
  Times precision was empty:       10784 (16%)
  Times precision was {false}:     1007 (2%)
  Times result was cached:         50666 (77%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      3087 (5%)
  Times result was 'false':        917 (1%)
Number of strengthen sat checks:   0
Number of coverage checks:         63742
  BDD entailment checks:           9542
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       47
Number of predicates discovered:          7
Number of abstraction locations:          199
Max number of predicates per location:    5
Avg number of predicates per location:    3
Total predicates per abstraction:         180854
Max number of predicates per abstraction: 5
Avg number of predicates per abstraction: 44.18
Number of irrelevant predicates:          57201 (32%)
Number of preds handled by boolean abs:   6260 (3%)
  Total number of models for allsat:      3096
  Max number of models for allsat:        4
  Avg number of models for allsat:        1.00

Time for post operator:                  4.615s
  Time for path formula creation:        4.441s
Time for strengthen operator:            0.337s
Time for prec operator:                 11.241s
  Time for abstraction:                 10.564s (Max:     0.031s, Count: 65544)
    Boolean abstraction:                 1.513s
    Solving time:                        1.331s (Max:     0.015s)
    Model enumeration time:              0.128s
    Time for BDD construction:           0.110s (Max:     0.010s)
Time for merge operator:                 0.335s
Time for coverage check:                 0.058s
  Time for BDD entailment checks:        0.044s
Total time for SMT solver (w/o itp):     1.459s

Number of path formula cache hits:   366472 (83%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     3.843s

Total number of created targets for pointer analysis: 20
   Number of created targets for uf: *unsigned_short_int is 3
   Number of created targets for uf: *enum_usb_device_state is 2
   Number of created targets for uf: *signed_int is 2
   Number of created targets for uf: *(struct_usb_device)* is 2
   Number of created targets for uf: *(struct_list_head)* is 2


Number of BDD nodes:                               322
Size of BDD node table:                            464047
Size of BDD cache:                                 46411
Size of BDD node cleanup queue:                        6328 (count: 44155, min: 0, max: 299, avg: 0.14)
Time for BDD node cleanup:                             0.010s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.556s
  Time for transition matches:                         0.248s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.000s
Automaton transfers with branching:                0
Automaton transfer successors:                       367267 (count: 367267, min: 1, max: 1, avg: 1.00) [1 x 367267]

CPA algorithm statistics
------------------------
Number of iterations:            264165
Max size of waitlist:            190
Average size of waitlist:        71
Number of computed successors:   307419
Max successors for one state:    2
Number of times merged:          27100
Number of times stopped:         32941
Number of times breaked:         105

Total time for CPA algorithm:        24.199s (Max:     0.866s)
  Time for choose from waitlist:      0.161s
  Time for precision adjustment:     12.867s
  Time for transfer relation:         8.792s
  Time for merge operator:            0.648s
  Time for stop operator:             0.376s
  Time for adding to reached set:     0.466s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   105
Avg. length of target path (in blocks):                8051 (count: 105, min: 10, max: 208, avg: 76.68)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   2.311s
  Counterexample analysis:                             1.599s (Max:     0.050s, Calls: 105)
    Refinement sat check:                              0.915s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.001s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.079s
  Precision update:                                    0.079s
  ARG update:                                          0.491s

Length of refined path (in blocks):                    7131 (count: 105, min: 4, max: 155, avg: 67.91)
Number of affected states:                             6771 (count: 105, min: 1, max: 153, avg: 64.49)
Length (states) of path with itp 'true':                255 (count: 105, min: 1, max: 53, avg: 2.43)
Length (states) of path with itp non-trivial itp:      6771 (count: 105, min: 1, max: 153, avg: 64.49)
Length (states) of path with itp 'false':               105 (count: 105, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 105, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:            6666 (count: 105, min: 0, max: 152, avg: 63.49)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                105
Number of successful refinements:     105
Number of failed refinements:         0
Max. size of reached set before ref.: 4871
Max. size of reached set after ref.:  835
Avg. size of reached set before ref.: 2655.00
Avg. size of reached set after ref.:  65.13

Total time for CEGAR algorithm:      26.790s
Time for refinements:                 2.581s
Average time for refinement:          0.024s
Max time for refinement:              0.061s

Code Coverage
-----------------------------
  Function coverage:      0.270
  Visited lines:          1208
  Total lines:            3616
  Line coverage:          0.334
  Visited conditions:     262
  Total conditions:       1030
  Condition coverage:     0.254

CPAchecker general statistics
-----------------------------
Number of program locations:     5020
Number of CFA edges:             5952
Number of relevant variables:    843
Number of functions:             178
Number of loops:                 38
Size of reached set:             1626
  Number of reached locations:   674 (13%)
    Avg states per location:     2
    Max states per location:     25 (at node N204)
  Number of reached functions:   48 (27%)
  Number of partitions:          1623
    Avg size of partitions:      1
    Max size of partitions:      3 (with key [N3948 (before line 7661), Function main called from node N3935, stack depth 1 [119aa36], stack [main]])
  Number of target states:       0
  Size of final wait list        76

Time for analysis setup:          3.565s
  Time for loading CPAs:          0.581s
  Time for loading parser:        0.414s
  Time for CFA construction:      2.476s
    Time for parsing file(s):     0.605s
    Time for AST to CFA:          0.828s
    Time for CFA sanity check:    0.220s
    Time for post-processing:     0.674s
      Time for var class.:        0.349s
Time for Analysis:               26.790s
CPU time for analysis:           26.790s
Total time for CPAchecker:       30.357s
Total CPU time for CPAchecker:   30.350s
Time for statistics:              0.083s

Time for Garbage Collector:       0.754s (in 73 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                133MB (   127 MiB) max;     81MB (    78 MiB) avg;    139MB (   132 MiB) peak
Used non-heap memory:             41MB (    39 MiB) max;     37MB (    35 MiB) avg;     41MB (    39 MiB) peak
Allocated heap memory:           255MB (   243 MiB) max;    255MB (   243 MiB) avg
Allocated non-heap memory:        43MB (    41 MiB) max;     38MB (    37 MiB) avg
Total process virtual memory:  12148MB ( 11585 MiB) max;  12137MB ( 11575 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
