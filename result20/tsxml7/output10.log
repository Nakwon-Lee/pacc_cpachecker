scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 9600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-drivers--usb--host--r8a66597-hcd.ko-main.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 9600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_3dza5f1q/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker 1.6.1-svn 6608050+ (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 8143: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 3868: Function pointer *(r8a66597->pdata->port_power) with type void (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_r8a66597_dev_pm_ops_complete_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_r8a66597_dev_pm_ops_suspend_noirq_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_r8a66597_dev_pm_ops_restore_noirq_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_r8a66597_dev_pm_ops_poweroff_late_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_r8a66597_dev_pm_ops_poweroff_noirq_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_r8a66597_dev_pm_ops_prepare_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_r8a66597_dev_pm_ops_resume_noirq_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_r8a66597_dev_pm_ops_resume_early_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_r8a66597_dev_pm_ops_restore_early_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_r8a66597_dev_pm_ops_suspend_late_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_disabled to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_get_resource to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iounmap to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_driver_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_driver_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_dev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function del_timer_sync to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_remove_hcd to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_put_hcd to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ioread16 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ioremap_nocache to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iowrite16 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_hcd_check_unlink_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_create_hcd to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_hub_find_child to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Recursion detected, aborting. To ignore recursion, add -skipRecursion to the command line. (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, INFO)

Error: line 6852: Unsupported feature (recursion): collect_usb_address_map(childdev, map); (CallstackTransferRelation.getAbstractSuccessorsForEdge, SEVERE)

PredicateCPA statistics
-----------------------
Number of abstractions:            2306 (12% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  2138 (93%)
  Because of loop head:            162 (7%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         6 (0%)
  Times precision was empty:       2127 (92%)
  Times precision was {false}:     25 (1%)
  Times result was cached:         115 (5%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      39 (2%)
  Times result was 'false':        21 (1%)
Number of strengthen sat checks:   0
Number of coverage checks:         2858
  BDD entailment checks:           144
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       47
Number of predicates discovered:          4
Number of abstraction locations:          12
Max number of predicates per location:    3
Avg number of predicates per location:    2
Total predicates per abstraction:         384
Max number of predicates per abstraction: 3
Avg number of predicates per abstraction: 6.00
Number of irrelevant predicates:          219 (57%)
Number of preds handled by boolean abs:   78 (20%)
  Total number of models for allsat:      39
  Max number of models for allsat:        1
  Avg number of models for allsat:        1.00

Time for post operator:                  0.671s
  Time for path formula creation:        0.640s
Time for strengthen operator:            0.041s
Time for prec operator:                  0.360s
  Time for abstraction:                  0.285s (Max:     0.020s, Count: 2306)
    Boolean abstraction:                 0.042s
    Solving time:                        0.027s (Max:     0.006s)
    Model enumeration time:              0.003s
    Time for BDD construction:           0.012s (Max:     0.008s)
Time for merge operator:                 0.049s
Time for coverage check:                 0.023s
  Time for BDD entailment checks:        0.022s
Total time for SMT solver (w/o itp):     0.030s

Number of path formula cache hits:   19283 (87%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.561s

Total number of created targets for pointer analysis: 17
   Number of created targets for uf: *char is 14
   Number of created targets for uf: *unsigned_long_int is 5


Number of BDD nodes:                               205
Size of BDD node table:                            464047
Size of BDD cache:                                 46411
Size of BDD node cleanup queue:                          94 (count: 2650, min: 0, max: 61, avg: 0.04)
Time for BDD node cleanup:                             0.002s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.100s
Automaton transfers with branching:                0
Automaton transfer successors:                        18998 (count: 18998, min: 1, max: 1, avg: 1.00) [1 x 18998]

CPA algorithm statistics
------------------------
Number of iterations:            10760
Max size of waitlist:            80
Average size of waitlist:        48
Number of computed successors:   12734
Max successors for one state:    2
Number of times merged:          1357
Number of times stopped:         1457
Number of times breaked:         6

Total time for CPA algorithm:         2.314s (Max:     0.976s)
  Time for choose from waitlist:      0.025s
  Time for precision adjustment:      0.595s
  Time for transfer relation:         1.321s
  Time for merge operator:            0.110s
  Time for stop operator:             0.081s
  Time for adding to reached set:     0.057s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   6
Avg. length of target path (in blocks):                  60 (count: 6, min: 10, max: 10, avg: 10.00)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.116s
  Counterexample analysis:                             0.049s (Max:     0.012s, Calls: 6)
    Refinement sat check:                              0.027s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.001s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.009s
  Precision update:                                    0.003s
  ARG update:                                          0.049s

Length of refined path (in blocks):                      54 (count: 6, min: 9, max: 9, avg: 9.00)
Number of affected states:                               42 (count: 6, min: 7, max: 7, avg: 7.00)
Length (states) of path with itp 'true':                  6 (count: 6, min: 1, max: 1, avg: 1.00)
Length (states) of path with itp non-trivial itp:        42 (count: 6, min: 7, max: 7, avg: 7.00)
Length (states) of path with itp 'false':                 6 (count: 6, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 6, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:              36 (count: 6, min: 6, max: 6, avg: 6.00)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                6
Number of successful refinements:     6
Number of failed refinements:         0
Max. size of reached set before ref.: 1663
Max. size of reached set after ref.:  6
Avg. size of reached set before ref.: 1587.17
Avg. size of reached set after ref.:  6.00

Total time for CEGAR algorithm:       2.458s
Time for refinements:                 0.144s
Average time for refinement:          0.024s
Max time for refinement:              0.062s

Code Coverage
-----------------------------
  Function coverage:      0.253
  Visited lines:          1351
  Total lines:            3616
  Line coverage:          0.374
  Visited conditions:     300
  Total conditions:       1030
  Condition coverage:     0.291

CPAchecker general statistics
-----------------------------
Number of program locations:     5020
Number of CFA edges:             5952
Number of relevant variables:    843
Number of functions:             178
Number of loops:                 38
Size of reached set:             1770
  Number of reached locations:   699 (14%)
    Avg states per location:     2
    Max states per location:     42 (at node N147)
  Number of reached functions:   45 (25%)
  Number of partitions:          1767
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N3948 (before line 7661), Function main called from node N3935, stack depth 1 [119aa36], stack [main]])
  Number of target states:       0
  Size of final wait list        76

Time for analysis setup:          3.563s
  Time for loading CPAs:          0.600s
  Time for loading parser:        0.420s
  Time for CFA construction:      2.469s
    Time for parsing file(s):     0.619s
    Time for AST to CFA:          0.807s
    Time for CFA sanity check:    0.259s
    Time for post-processing:     0.656s
      Time for var class.:        0.336s
Time for Analysis:                2.458s
CPU time for analysis:            2.460s
Total time for CPAchecker:        6.024s
Total CPU time for CPAchecker:    6.020s
Time for statistics:              0.075s

Time for Garbage Collector:       0.130s (in 7 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                110MB (   105 MiB) max;     56MB (    53 MiB) avg;    115MB (   110 MiB) peak
Used non-heap memory:             35MB (    33 MiB) max;     28MB (    27 MiB) avg;     35MB (    34 MiB) peak
Allocated heap memory:           255MB (   243 MiB) max;    255MB (   243 MiB) avg
Allocated non-heap memory:        37MB (    35 MiB) max;     30MB (    28 MiB) avg
Total process virtual memory:  12078MB ( 11519 MiB) max;  12048MB ( 11490 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
