scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 9600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-drivers--usb--host--r8a66597-hcd.ko-main.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 9600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_3divg3ri/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker 1.6.1-svn 6608050+ (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 8143: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 3868: Function pointer *(r8a66597->pdata->port_power) with type void (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_r8a66597_dev_pm_ops_complete_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_r8a66597_dev_pm_ops_suspend_noirq_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_r8a66597_dev_pm_ops_restore_noirq_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_r8a66597_dev_pm_ops_poweroff_late_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_r8a66597_dev_pm_ops_poweroff_noirq_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_r8a66597_dev_pm_ops_prepare_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_r8a66597_dev_pm_ops_resume_noirq_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_r8a66597_dev_pm_ops_resume_early_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_r8a66597_dev_pm_ops_restore_early_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_r8a66597_dev_pm_ops_suspend_late_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_disabled to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_get_resource to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iounmap to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_dev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_driver_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_driver_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function del_timer_sync to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_remove_hcd to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_put_hcd to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ioread16 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_hcd_check_unlink_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ioremap_nocache to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_create_hcd to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_hcd_link_urb_to_ep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snprintf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __raw_spin_lock_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function init_timer_key to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iowrite16 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_hub_find_child to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function msleep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Recursion detected, aborting. To ignore recursion, add -skipRecursion to the command line. (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, INFO)

Error: line 6852: Unsupported feature (recursion): collect_usb_address_map(childdev, map); (CallstackTransferRelation.getAbstractSuccessorsForEdge, SEVERE)

PredicateCPA statistics
-----------------------
Number of abstractions:            64747 (13% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  60284 (93%)
  Because of loop head:            4389 (7%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         74 (0%)
  Times precision was empty:       35396 (55%)
  Times precision was {false}:     948 (1%)
  Times result was cached:         27030 (42%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      1373 (2%)
  Times result was 'false':        3076 (5%)
Number of strengthen sat checks:   0
Number of coverage checks:         89122
  BDD entailment checks:           12518
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       47
Number of predicates discovered:          7
Number of abstraction locations:          96
Max number of predicates per location:    6
Avg number of predicates per location:    3
Total predicates per abstraction:         90494
Max number of predicates per abstraction: 6
Avg number of predicates per abstraction: 38.99
Number of irrelevant predicates:          51907 (57%)
Number of preds handled by boolean abs:   2648 (3%)
  Total number of models for allsat:      1506
  Max number of models for allsat:        6
  Avg number of models for allsat:        1.10

Time for post operator:                  3.680s
  Time for path formula creation:        3.463s
Time for strengthen operator:            0.335s
Time for prec operator:                  6.842s
  Time for abstraction:                  6.138s (Max:     0.025s, Count: 64747)
    Boolean abstraction:                 0.986s
    Solving time:                        0.869s (Max:     0.016s)
    Model enumeration time:              0.133s
    Time for BDD construction:           0.116s (Max:     0.009s)
Time for merge operator:                 0.484s
Time for coverage check:                 0.035s
  Time for BDD entailment checks:        0.020s
Total time for SMT solver (w/o itp):     1.002s

Number of path formula cache hits:   535313 (91%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     2.810s

Total number of created targets for pointer analysis: 546
   Number of created targets for uf: *char is 27
   Number of created targets for uf: *unsigned_long_int is 5


Number of BDD nodes:                               642
Size of BDD node table:                            464047
Size of BDD cache:                                 46411
Size of BDD node cleanup queue:                        2874 (count: 62281, min: 0, max: 154, avg: 0.05)
Time for BDD node cleanup:                             0.007s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.481s
Automaton transfers with branching:                0
Automaton transfer successors:                       501495 (count: 501495, min: 1, max: 1, avg: 1.00) [1 x 501495]

CPA algorithm statistics
------------------------
Number of iterations:            304552
Max size of waitlist:            258
Average size of waitlist:        108
Number of computed successors:   361450
Max successors for one state:    2
Number of times merged:          38302
Number of times stopped:         42963
Number of times breaked:         74

Total time for CPA algorithm:        19.275s (Max:     0.930s)
  Time for choose from waitlist:      0.197s
  Time for precision adjustment:      8.528s
  Time for transfer relation:         7.749s
  Time for merge operator:            0.976s
  Time for stop operator:             0.425s
  Time for adding to reached set:     0.447s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   74
Avg. length of target path (in blocks):                1678 (count: 74, min: 10, max: 36, avg: 22.68)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   1.145s
  Counterexample analysis:                             0.508s (Max:     0.017s, Calls: 74)
    Refinement sat check:                              0.360s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.001s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.024s
  Precision update:                                    0.022s
  ARG update:                                          0.574s

Length of refined path (in blocks):                    1390 (count: 74, min: 4, max: 35, avg: 18.78)
Number of affected states:                             1195 (count: 74, min: 1, max: 33, avg: 16.15)
Length (states) of path with itp 'true':                121 (count: 74, min: 1, max: 7, avg: 1.64)
Length (states) of path with itp non-trivial itp:      1195 (count: 74, min: 1, max: 33, avg: 16.15)
Length (states) of path with itp 'false':                74 (count: 74, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 74, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:            1121 (count: 74, min: 0, max: 32, avg: 15.15)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                74
Number of successful refinements:     74
Number of failed refinements:         0
Max. size of reached set before ref.: 7063
Max. size of reached set after ref.:  1141
Avg. size of reached set before ref.: 4309.19
Avg. size of reached set after ref.:  69.89

Total time for CEGAR algorithm:      20.695s
Time for refinements:                 1.415s
Average time for refinement:          0.019s
Max time for refinement:              0.059s

Code Coverage
-----------------------------
  Function coverage:      0.343
  Visited lines:          1579
  Total lines:            3616
  Line coverage:          0.437
  Visited conditions:     360
  Total conditions:       1030
  Condition coverage:     0.350

CPAchecker general statistics
-----------------------------
Number of program locations:     5020
Number of CFA edges:             5952
Number of relevant variables:    843
Number of functions:             178
Number of loops:                 38
Size of reached set:             1704
  Number of reached locations:   895 (18%)
    Avg states per location:     1
    Max states per location:     23 (at node N172)
  Number of reached functions:   61 (34%)
  Number of partitions:          1703
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N3948 (before line 7661), Function main called from node N3935, stack depth 1 [69fe0ed4], stack [main]])
  Number of target states:       0
  Size of final wait list        42

Time for analysis setup:          3.592s
  Time for loading CPAs:          0.621s
  Time for loading parser:        0.404s
  Time for CFA construction:      2.482s
    Time for parsing file(s):     0.634s
    Time for AST to CFA:          0.811s
    Time for CFA sanity check:    0.217s
    Time for post-processing:     0.683s
      Time for var class.:        0.354s
Time for Analysis:               20.695s
CPU time for analysis:           20.690s
Total time for CPAchecker:       24.297s
Total CPU time for CPAchecker:   24.290s
Time for statistics:              0.077s

Time for Garbage Collector:       0.682s (in 67 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                129MB (   123 MiB) max;     79MB (    75 MiB) avg;    137MB (   130 MiB) peak
Used non-heap memory:             40MB (    38 MiB) max;     35MB (    34 MiB) avg;     40MB (    38 MiB) peak
Allocated heap memory:           255MB (   243 MiB) max;    255MB (   243 MiB) avg
Allocated non-heap memory:        42MB (    40 MiB) max;     37MB (    36 MiB) avg
Total process virtual memory:  12080MB ( 11520 MiB) max;  12070MB ( 11510 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
