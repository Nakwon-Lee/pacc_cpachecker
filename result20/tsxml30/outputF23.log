scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 9600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-drivers--platform--x86--ideapad-laptop.ko-main.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 9600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_t0vfl9lx/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker 1.6.1-svn 6608050+ (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 5977: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function seq_lseek to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function seq_read to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function single_release to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_complete_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_suspend_noirq_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_suspend_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_restore_noirq_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_poweroff_late_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_poweroff_noirq_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_poweroff_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_thaw_noirq_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_freeze_late_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_freeze_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_prepare_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_freeze_noirq_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_resume_noirq_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_thaw_early_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_resume_early_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_restore_early_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_suspend_late_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function acpi_evaluate_object to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function schedule to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function acpi_evaluate_integer to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function backlight_device_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rfkill_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rfkill_destroy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rfkill_set_hw_state to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sparse_keymap_free to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_unregister_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function debugfs_remove_recursive to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sysfs_remove_group to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function i8042_command to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function backlight_force_update to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function single_open to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function acpi_bus_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sparse_keymap_report_event to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function acpi_bus_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_alloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function debugfs_create_dir to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function debugfs_create_file to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sysfs_create_group to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_del to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_put to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sparse_keymap_setup to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_register_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_free_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function acpi_video_backlight_support to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function backlight_device_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rfkill_alloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rfkill_init_sw_state to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rfkill_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 4007: Ignoring function call through function pointer *(bd->ops->update_status): (*(bd->ops->update_status))(bd); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            3040569 (13% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  2542074 (84%)
  Because of loop head:            498008 (16%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         487 (0%)
  Times precision was empty:       161579 (5%)
  Times precision was {false}:     10531 (0%)
  Times result was cached:         2828066 (93%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      40393 (1%)
  Times result was 'false':        16899 (1%)
Number of strengthen sat checks:   0
Number of coverage checks:         4626447
  BDD entailment checks:           1350143
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       78
Number of predicates discovered:          18
Number of abstraction locations:          157
Max number of predicates per location:    16
Avg number of predicates per location:    6
Total predicates per abstraction:         14653885
Max number of predicates per abstraction: 16
Avg number of predicates per abstraction: 287.76
Number of irrelevant predicates:          4544099 (31%)
Number of preds handled by boolean abs:   154646 (1%)
  Total number of models for allsat:      229850
  Max number of models for allsat:        512
  Avg number of models for allsat:        5.69

Time for post operator:                101.887s
  Time for path formula creation:       97.467s
Time for strengthen operator:           11.741s
Time for prec operator:                520.223s
  Time for abstraction:                499.824s (Max:     3.409s, Count: 3040569)
    Boolean abstraction:               109.221s
    Solving time:                       26.347s (Max:     0.070s)
    Model enumeration time:             82.334s
    Time for BDD construction:           2.910s (Max:     0.015s)
Time for merge operator:                11.267s
Time for coverage check:                 0.872s
  Time for BDD entailment checks:        0.651s
Total time for SMT solver (w/o itp):   108.682s

Number of path formula cache hits:   25336278 (89%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    60.019s

Total number of created targets for pointer analysis: 287046
   Number of created targets for uf: *(struct_backlight_device)* is 38
   Number of created targets for uf: *(struct_dentry)* is 82
   Number of created targets for uf: *signed_int is 2379
   Number of created targets for uf: *unsigned_long_long_int is 71
   Number of created targets for uf: *(struct_platform_device)* is 81
   Number of created targets for uf: *(struct_rfkill)* is 253
   Number of created targets for uf: *unsigned_long_int is 15


Number of BDD nodes:                               46805
Size of BDD node table:                            464047
Size of BDD cache:                                 46411
Size of BDD node cleanup queue:                       83317 (count: 1813221, min: 0, max: 864, avg: 0.05)
Time for BDD node cleanup:                             0.169s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                 14.551s
  Time for transition matches:                         8.239s
  Time for transition assertions:                      0.001s
  Time for transition actions:                         0.001s
Automaton transfers with branching:                0
Automaton transfer successors:                     24303544 (count: 24303544, min: 1, max: 1, avg: 1.00) [1 x 24303544]

CPA algorithm statistics
------------------------
Number of iterations:            14232553
Max size of waitlist:            517
Average size of waitlist:        194
Number of computed successors:   16937075
Max successors for one state:    2
Number of times merged:          1638152
Number of times stopped:         2604041
Number of times breaked:         487

Total time for CPA algorithm:       865.730s (Max:     9.879s)
  Time for choose from waitlist:      3.259s
  Time for precision adjustment:    576.288s
  Time for transfer relation:       217.940s
  Time for merge operator:           22.804s
  Time for stop operator:            11.255s
  Time for adding to reached set:    12.889s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   487
Avg. length of target path (in blocks):               29784 (count: 487, min: 8, max: 125, avg: 61.16)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  24.815s
  Counterexample analysis:                             6.524s (Max:     0.040s, Calls: 487)
    Refinement sat check:                              4.342s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.011s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.092s
  Precision update:                                    0.162s
  ARG update:                                         17.874s

Length of refined path (in blocks):                   24584 (count: 487, min: 4, max: 97, avg: 50.48)
Number of affected states:                            18604 (count: 487, min: 1, max: 95, avg: 38.20)
Length (states) of path with itp 'true':               5493 (count: 487, min: 0, max: 78, avg: 11.28)
Length (states) of path with itp non-trivial itp:     18604 (count: 487, min: 1, max: 95, avg: 38.20)
Length (states) of path with itp 'false':               487 (count: 487, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 487, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:           18117 (count: 487, min: 0, max: 94, avg: 37.20)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                487
Number of successful refinements:     487
Number of failed refinements:         0
Max. size of reached set before ref.: 77500
Max. size of reached set after ref.:  39679
Avg. size of reached set before ref.: 34095.03
Avg. size of reached set after ref.:  4775.34

Total time for CEGAR algorithm:     897.481s
Time for refinements:                30.484s
Average time for refinement:          0.062s
Max time for refinement:              0.174s

Code Coverage
-----------------------------
  Function coverage:      0.550
  Visited lines:          1714
  Total lines:            2094
  Line coverage:          0.819
  Visited conditions:     464
  Total conditions:       632
  Condition coverage:     0.734

CPAchecker general statistics
-----------------------------
Number of program locations:     2853
Number of CFA edges:             3225
Number of relevant variables:    327
Number of functions:             100
Number of loops:                 9
Size of reached set:             37444
  Number of reached locations:   1091 (38%)
    Avg states per location:     34
    Max states per location:     1352 (at node N106)
  Number of reached functions:   55 (55%)
  Number of partitions:          37399
    Avg size of partitions:      1
    Max size of partitions:      19 (with key [N1133 (before line 5355), Function main called from node N1108, stack depth 1 [34b9fc7d], stack [main]])
  Number of target states:       0
  Size of final wait list        140

Time for analysis setup:          2.877s
  Time for loading CPAs:          0.581s
  Time for loading parser:        0.369s
  Time for CFA construction:      1.877s
    Time for parsing file(s):     0.561s
    Time for AST to CFA:          0.581s
    Time for CFA sanity check:    0.153s
    Time for post-processing:     0.475s
      Time for var class.:        0.207s
Time for Analysis:              897.481s
CPU time for analysis:          897.440s
Total time for CPAchecker:      900.360s
Total CPU time for CPAchecker:  900.310s
Time for statistics:              0.344s

Time for Garbage Collector:      69.877s (in 1351 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:               1929MB (  1840 MiB) max;    690MB (   658 MiB) avg;   2093MB (  1996 MiB) peak
Used non-heap memory:             41MB (    40 MiB) max;     39MB (    37 MiB) avg;     42MB (    40 MiB) peak
Allocated heap memory:          2462MB (  2348 MiB) max;   1021MB (   974 MiB) avg
Allocated non-heap memory:        43MB (    41 MiB) max;     43MB (    41 MiB) avg
Total process virtual memory:  13156MB ( 12547 MiB) max;  12565MB ( 11983 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
