scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 9600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-drivers--platform--x86--ideapad-laptop.ko-main.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 9600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_to5w93tv/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker 1.6.1-svn 6608050+ (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 5977: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function seq_lseek to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function seq_read to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function single_release to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_complete_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_suspend_noirq_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_suspend_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_restore_noirq_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_poweroff_late_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_poweroff_noirq_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_poweroff_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_thaw_noirq_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_freeze_late_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_freeze_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_prepare_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_freeze_noirq_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_resume_noirq_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_thaw_early_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_resume_early_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_restore_early_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_suspend_late_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function acpi_bus_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function acpi_bus_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function single_open to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function backlight_device_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function acpi_evaluate_integer to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sparse_keymap_free to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_unregister_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rfkill_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rfkill_destroy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function debugfs_remove_recursive to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sysfs_remove_group to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function acpi_evaluate_object to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function schedule to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_alloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function debugfs_create_dir to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function debugfs_create_file to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function backlight_force_update to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sparse_keymap_report_event to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sysfs_create_group to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_del to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_put to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rfkill_set_hw_state to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function i8042_command to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sparse_keymap_setup to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_register_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_free_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rfkill_alloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rfkill_init_sw_state to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rfkill_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function acpi_video_backlight_support to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function backlight_device_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 4007: Ignoring function call through function pointer *(bd->ops->update_status): (*(bd->ops->update_status))(bd); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            642057 (12% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  549099 (86%)
  Because of loop head:            92506 (14%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         452 (0%)
  Times precision was empty:       37781 (6%)
  Times precision was {false}:     2416 (0%)
  Times result was cached:         590978 (92%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      10882 (2%)
  Times result was 'false':        12667 (2%)
Number of strengthen sat checks:   0
Number of coverage checks:         1129948
  BDD entailment checks:           243274
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       78
Number of predicates discovered:          18
Number of abstraction locations:          161
Max number of predicates per location:    16
Avg number of predicates per location:    6
Total predicates per abstraction:         3340934
Max number of predicates per abstraction: 16
Avg number of predicates per abstraction: 251.24
Number of irrelevant predicates:          548701 (16%)
Number of preds handled by boolean abs:   44303 (1%)
  Total number of models for allsat:      103872
  Max number of models for allsat:        768
  Avg number of models for allsat:        9.55

Time for post operator:                 24.580s
  Time for path formula creation:       23.197s
Time for strengthen operator:            2.876s
Time for prec operator:                149.275s
  Time for abstraction:                144.435s (Max:     0.539s, Count: 642057)
    Boolean abstraction:                51.080s
    Solving time:                        6.846s (Max:     0.019s)
    Model enumeration time:             42.771s
    Time for BDD construction:           1.589s (Max:     0.036s)
Time for merge operator:                 3.192s
Time for coverage check:                 0.222s
  Time for BDD entailment checks:        0.165s
Total time for SMT solver (w/o itp):    49.617s

Number of path formula cache hits:   5697192 (89%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    14.732s

Total number of created targets for pointer analysis: 31996
   Number of created targets for uf: *(struct_backlight_device)* is 4
   Number of created targets for uf: *(struct_dentry)* is 173
   Number of created targets for uf: *signed_int is 632
   Number of created targets for uf: *unsigned_long_long_int is 5
   Number of created targets for uf: *(struct_platform_device)* is 170
   Number of created targets for uf: *(struct_rfkill)* is 451
   Number of created targets for uf: *unsigned_long_int is 63


Number of BDD nodes:                               102073
Size of BDD node table:                            464047
Size of BDD cache:                                 46411
Size of BDD node cleanup queue:                       24589 (count: 362138, min: 0, max: 707, avg: 0.07)
Time for BDD node cleanup:                             0.038s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  3.687s
  Time for transition matches:                         2.121s
  Time for transition assertions:                      0.002s
  Time for transition actions:                         0.008s
Automaton transfers with branching:                0
Automaton transfer successors:                      5455474 (count: 5455474, min: 1, max: 1, avg: 1.00) [1 x 5455474]

CPA algorithm statistics
------------------------
Number of iterations:            3339031
Max size of waitlist:            216
Average size of waitlist:        64
Number of computed successors:   4006753
Max successors for one state:    2
Number of times merged:          443337
Number of times stopped:         616115
Number of times breaked:         452

Total time for CPA algorithm:       234.563s (Max:     3.946s)
  Time for choose from waitlist:      0.808s
  Time for precision adjustment:    164.946s
  Time for transfer relation:        52.240s
  Time for merge operator:            6.081s
  Time for stop operator:             2.457s
  Time for adding to reached set:     3.232s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   452
Avg. length of target path (in blocks):               17689 (count: 452, min: 8, max: 122, avg: 39.13)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   7.774s
  Counterexample analysis:                             4.112s (Max:     0.040s, Calls: 452)
    Refinement sat check:                              2.861s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.004s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.107s
  Precision update:                                    0.149s
  ARG update:                                          3.292s

Length of refined path (in blocks):                   15496 (count: 452, min: 4, max: 98, avg: 34.28)
Number of affected states:                            12647 (count: 452, min: 1, max: 97, avg: 27.98)
Length (states) of path with itp 'true':               2397 (count: 452, min: 0, max: 65, avg: 5.30)
Length (states) of path with itp non-trivial itp:     12647 (count: 452, min: 1, max: 97, avg: 27.98)
Length (states) of path with itp 'false':               452 (count: 452, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 452, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:           12195 (count: 452, min: 0, max: 96, avg: 26.98)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                452
Number of successful refinements:     452
Number of failed refinements:         0
Max. size of reached set before ref.: 30244
Max. size of reached set after ref.:  17458
Avg. size of reached set before ref.: 8229.85
Avg. size of reached set after ref.:  777.74

Total time for CEGAR algorithm:     243.980s
Time for refinements:                 9.231s
Average time for refinement:          0.020s
Max time for refinement:              0.069s

Code Coverage
-----------------------------
  Function coverage:      0.550
  Visited lines:          1720
  Total lines:            2094
  Line coverage:          0.821
  Visited conditions:     464
  Total conditions:       632
  Condition coverage:     0.734

CPAchecker general statistics
-----------------------------
Number of program locations:     2853
Number of CFA edges:             3225
Number of relevant variables:    327
Number of functions:             100
Number of loops:                 9
Size of reached set:             9622
  Number of reached locations:   1097 (38%)
    Avg states per location:     8
    Max states per location:     332 (at node N106)
  Number of reached functions:   55 (55%)
  Number of partitions:          9618
    Avg size of partitions:      1
    Max size of partitions:      4 (with key [N1133 (before line 5355), Function main called from node N1108, stack depth 1 [34b9fc7d], stack [main]])
  Number of target states:       0

Time for analysis setup:          2.831s
  Time for loading CPAs:          0.553s
  Time for loading parser:        0.392s
  Time for CFA construction:      1.803s
    Time for parsing file(s):     0.513s
    Time for AST to CFA:          0.590s
    Time for CFA sanity check:    0.150s
    Time for post-processing:     0.447s
      Time for var class.:        0.201s
Time for Analysis:              243.980s
CPU time for analysis:          243.990s
Time for analyzing result:        0.005s
Total time for CPAchecker:      246.814s
Total CPU time for CPAchecker:  246.810s
Time for statistics:              0.157s

Time for Garbage Collector:      12.760s (in 881 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                467MB (   446 MiB) max;    188MB (   179 MiB) avg;    521MB (   497 MiB) peak
Used non-heap memory:             40MB (    38 MiB) max;     39MB (    37 MiB) avg;     41MB (    39 MiB) peak
Allocated heap memory:           627MB (   598 MiB) max;    340MB (   324 MiB) avg
Allocated non-heap memory:        42MB (    40 MiB) max;     41MB (    40 MiB) avg
Total process virtual memory:  12147MB ( 11584 MiB) max;  12107MB ( 11546 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
