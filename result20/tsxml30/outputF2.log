scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 9600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-drivers--platform--x86--ideapad-laptop.ko-main.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 9600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_k138k1n5/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker 1.6.1-svn 6608050+ (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 5977: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function seq_lseek to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function seq_read to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function single_release to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_complete_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_suspend_noirq_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_suspend_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_restore_noirq_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_poweroff_late_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_poweroff_noirq_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_poweroff_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_thaw_noirq_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_freeze_late_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_freeze_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_prepare_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_freeze_noirq_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_resume_noirq_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_thaw_early_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_resume_early_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_restore_early_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_suspend_late_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function acpi_evaluate_object to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function schedule to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function acpi_evaluate_integer to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function acpi_bus_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function acpi_bus_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function backlight_device_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function single_open to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rfkill_set_hw_state to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function i8042_command to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sparse_keymap_report_event to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sparse_keymap_free to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_unregister_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rfkill_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rfkill_destroy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_alloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sysfs_create_group to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_del to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_put to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function debugfs_remove_recursive to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function debugfs_create_dir to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function debugfs_create_file to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sysfs_remove_group to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sparse_keymap_setup to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_register_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_free_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function backlight_force_update to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rfkill_alloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rfkill_init_sw_state to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rfkill_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function acpi_video_backlight_support to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function backlight_device_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 4007: Ignoring function call through function pointer *(bd->ops->update_status): (*(bd->ops->update_status))(bd); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            2771055 (14% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  2365220 (85%)
  Because of loop head:            393814 (14%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         12021 (0%)
  Times precision was empty:       380834 (14%)
  Times precision was {false}:     4281 (0%)
  Times result was cached:         2362311 (85%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      23629 (1%)
  Times result was 'false':        47700 (2%)
Number of strengthen sat checks:   0
Number of coverage checks:         3024957
  BDD entailment checks:           957717
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       78
Number of predicates discovered:          18
Number of abstraction locations:          161
Max number of predicates per location:    16
Avg number of predicates per location:    6
Total predicates per abstraction:         11144284
Max number of predicates per abstraction: 16
Avg number of predicates per abstraction: 399.29
Number of irrelevant predicates:          5963990 (54%)
Number of preds handled by boolean abs:   77037 (1%)
  Total number of models for allsat:      59893
  Max number of models for allsat:        768
  Avg number of models for allsat:        2.53

Time for post operator:                 48.479s
  Time for path formula creation:       45.230s
Time for strengthen operator:            7.860s
Time for prec operator:                278.241s
  Time for abstraction:                262.031s (Max:     0.628s, Count: 2771055)
    Boolean abstraction:                28.376s
    Solving time:                       10.844s (Max:     0.014s)
    Model enumeration time:             17.466s
    Time for BDD construction:           0.690s (Max:     0.016s)
Time for merge operator:                 4.226s
Time for coverage check:                 0.532s
  Time for BDD entailment checks:        0.379s
Total time for SMT solver (w/o itp):    28.310s

Number of path formula cache hits:   22372470 (98%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    12.470s

Total number of created targets for pointer analysis: 45692
   Number of created targets for uf: *(struct_backlight_device)* is 223
   Number of created targets for uf: *(struct_dentry)* is 207
   Number of created targets for uf: *signed_int is 7
   Number of created targets for uf: *unsigned_long_long_int is 1639
   Number of created targets for uf: *(struct_platform_device)* is 99
   Number of created targets for uf: *(struct_rfkill)* is 562
   Number of created targets for uf: *unsigned_long_int is 137


Number of BDD nodes:                               71020
Size of BDD node table:                            464047
Size of BDD cache:                                 46411
Size of BDD node cleanup queue:                       49626 (count: 1507283, min: 0, max: 860, avg: 0.03)
Time for BDD node cleanup:                             0.122s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                 11.198s
  Time for transition matches:                         6.600s
  Time for transition assertions:                      0.003s
  Time for transition actions:                         0.028s
Automaton transfers with branching:                0
Automaton transfer successors:                     19235324 (count: 19235324, min: 1, max: 1, avg: 1.00) [1 x 19235324]

CPA algorithm statistics
------------------------
Number of iterations:            11367847
Max size of waitlist:            69
Average size of waitlist:        23
Number of computed successors:   13282173
Max successors for one state:    2
Number of times merged:          1033620
Number of times stopped:         1826138
Number of times breaked:         12021

Total time for CPA algorithm:       494.408s (Max:     1.983s)
  Time for choose from waitlist:      2.165s
  Time for precision adjustment:    320.154s
  Time for transfer relation:       131.813s
  Time for merge operator:            9.897s
  Time for stop operator:             7.646s
  Time for adding to reached set:     8.668s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   12021
Avg. length of target path (in blocks):              930221 (count: 12021, min: 8, max: 137, avg: 77.38)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                 181.754s
  Counterexample analysis:                           163.574s (Max:     0.038s, Calls: 12021)
    Refinement sat check:                            103.917s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.268s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.739s
  Precision update:                                    2.642s
  ARG update:                                         12.095s

Length of refined path (in blocks):                  905015 (count: 12021, min: 4, max: 131, avg: 75.29)
Number of affected states:                           155380 (count: 12021, min: 1, max: 111, avg: 12.93)
Length (states) of path with itp 'true':             737614 (count: 12021, min: 0, max: 115, avg: 61.36)
Length (states) of path with itp non-trivial itp:    155380 (count: 12021, min: 1, max: 111, avg: 12.93)
Length (states) of path with itp 'false':             12021 (count: 12021, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 12021, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:          143359 (count: 12021, min: 0, max: 110, avg: 11.93)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                12021
Number of successful refinements:     12021
Number of failed refinements:         0
Max. size of reached set before ref.: 34852
Max. size of reached set after ref.:  31617
Avg. size of reached set before ref.: 12047.71
Avg. size of reached set after ref.:  11099.47

Total time for CEGAR algorithm:     806.308s
Time for refinements:               257.501s
Average time for refinement:          0.021s
Max time for refinement:              0.603s

Code Coverage
-----------------------------
  Function coverage:      0.550
  Visited lines:          1720
  Total lines:            2094
  Line coverage:          0.821
  Visited conditions:     464
  Total conditions:       632
  Condition coverage:     0.734

CPAchecker general statistics
-----------------------------
Number of program locations:     2853
Number of CFA edges:             3225
Number of relevant variables:    327
Number of functions:             100
Number of loops:                 9
Size of reached set:             9622
  Number of reached locations:   1097 (38%)
    Avg states per location:     8
    Max states per location:     332 (at node N106)
  Number of reached functions:   55 (55%)
  Number of partitions:          9618
    Avg size of partitions:      1
    Max size of partitions:      4 (with key [N1133 (before line 5355), Function main called from node N1108, stack depth 1 [cda0432], stack [main]])
  Number of target states:       0

Time for analysis setup:          2.999s
  Time for loading CPAs:          0.620s
  Time for loading parser:        0.401s
  Time for CFA construction:      1.907s
    Time for parsing file(s):     0.593s
    Time for AST to CFA:          0.601s
    Time for CFA sanity check:    0.138s
    Time for post-processing:     0.488s
      Time for var class.:        0.224s
Time for Analysis:              806.308s
CPU time for analysis:          806.300s
Time for analyzing result:        0.005s
Total time for CPAchecker:      809.310s
Total CPU time for CPAchecker:  809.290s
Time for statistics:              0.139s

Time for Garbage Collector:      42.316s (in 2528 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                507MB (   484 MiB) max;    246MB (   234 MiB) avg;    520MB (   496 MiB) peak
Used non-heap memory:             40MB (    38 MiB) max;     40MB (    38 MiB) avg;     41MB (    39 MiB) peak
Allocated heap memory:           523MB (   498 MiB) max;    363MB (   346 MiB) avg
Allocated non-heap memory:        42MB (    40 MiB) max;     42MB (    40 MiB) avg
Total process virtual memory:  12349MB ( 11777 MiB) max;  12195MB ( 11630 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
