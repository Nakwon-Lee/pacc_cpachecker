scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 9600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-drivers--platform--x86--ideapad-laptop.ko-main.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 9600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_j03imn8g/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker 1.6.1-svn 6608050+ (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 5977: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function seq_lseek to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function seq_read to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function single_release to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_complete_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_suspend_noirq_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_suspend_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_restore_noirq_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_poweroff_late_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_poweroff_noirq_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_poweroff_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_thaw_noirq_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_freeze_late_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_freeze_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_prepare_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_freeze_noirq_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_resume_noirq_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_thaw_early_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_resume_early_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_restore_early_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_suspend_late_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function acpi_bus_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function acpi_bus_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function single_open to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function backlight_device_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sparse_keymap_free to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_unregister_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function debugfs_remove_recursive to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sysfs_remove_group to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rfkill_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rfkill_destroy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function acpi_evaluate_object to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function schedule to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function acpi_evaluate_integer to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rfkill_set_hw_state to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function i8042_command to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sparse_keymap_report_event to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function backlight_force_update to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_alloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sysfs_create_group to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_del to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_put to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function debugfs_create_dir to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function debugfs_create_file to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sparse_keymap_setup to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_register_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_free_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rfkill_alloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rfkill_init_sw_state to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rfkill_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function acpi_video_backlight_support to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function backlight_device_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 4007: Ignoring function call through function pointer *(bd->ops->update_status): (*(bd->ops->update_status))(bd); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            2398268 (15% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  2068469 (86%)
  Because of loop head:            312231 (13%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         17568 (1%)
  Times precision was empty:       439578 (18%)
  Times precision was {false}:     3743 (0%)
  Times result was cached:         1942054 (81%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      12893 (1%)
  Times result was 'false':        52166 (2%)
Number of strengthen sat checks:   0
Number of coverage checks:         2387997
  BDD entailment checks:           788871
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       78
Number of predicates discovered:          18
Number of abstraction locations:          143
Max number of predicates per location:    15
Avg number of predicates per location:    5
Total predicates per abstraction:         10112228
Max number of predicates per abstraction: 16
Avg number of predicates per abstraction: 607.85
Number of irrelevant predicates:          5519360 (55%)
Number of preds handled by boolean abs:   37968 (0%)
  Total number of models for allsat:      33446
  Max number of models for allsat:        512
  Avg number of models for allsat:        2.59

Time for post operator:                 38.583s
  Time for path formula creation:       35.466s
Time for strengthen operator:            7.558s
Time for prec operator:                235.906s
  Time for abstraction:                221.728s (Max:     0.457s, Count: 2398268)
    Boolean abstraction:                15.867s
    Solving time:                        6.615s (Max:     0.018s)
    Model enumeration time:              9.676s
    Time for BDD construction:           0.405s (Max:     0.011s)
Time for merge operator:                 2.957s
Time for coverage check:                 0.462s
  Time for BDD entailment checks:        0.345s
Total time for SMT solver (w/o itp):    16.291s

Number of path formula cache hits:   18238944 (98%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    10.674s

Total number of created targets for pointer analysis: 34107
   Number of created targets for uf: *(struct_backlight_device)* is 163
   Number of created targets for uf: *(struct_dentry)* is 208
   Number of created targets for uf: *signed_int is 10150
   Number of created targets for uf: *unsigned_long_long_int is 1082
   Number of created targets for uf: *(struct_platform_device)* is 77
   Number of created targets for uf: *(struct_rfkill)* is 430
   Number of created targets for uf: *unsigned_long_int is 82


Number of BDD nodes:                               21843
Size of BDD node table:                            464047
Size of BDD cache:                                 46411
Size of BDD node cleanup queue:                       27096 (count: 1329438, min: 0, max: 260, avg: 0.02)
Time for BDD node cleanup:                             0.125s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  9.116s
  Time for transition matches:                         5.147s
  Time for transition assertions:                      0.010s
  Time for transition actions:                         0.033s
Automaton transfers with branching:                0
Automaton transfer successors:                     15595539 (count: 15595539, min: 1, max: 1, avg: 1.00) [1 x 15595539]

CPA algorithm statistics
------------------------
Number of iterations:            9453120
Max size of waitlist:            44
Average size of waitlist:        13
Number of computed successors:   10989469
Max successors for one state:    2
Number of times merged:          799563
Number of times stopped:         1440201
Number of times breaked:         17568

Total time for CPA algorithm:       413.161s (Max:     1.703s)
  Time for choose from waitlist:      1.824s
  Time for precision adjustment:    271.085s
  Time for transfer relation:       106.782s
  Time for merge operator:            7.956s
  Time for stop operator:             6.635s
  Time for adding to reached set:     6.937s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   17568
Avg. length of target path (in blocks):             1353032 (count: 17568, min: 8, max: 129, avg: 77.02)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                 253.420s
  Counterexample analysis:                           234.271s (Max:     0.051s, Calls: 17568)
    Refinement sat check:                            147.759s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.364s
  Error path post-processing:                          0.000s
  Predicate creation:                                  1.030s
  Precision update:                                    4.089s
  ARG update:                                         10.342s

Length of refined path (in blocks):                 1329428 (count: 17568, min: 4, max: 128, avg: 75.67)
Number of affected states:                           212400 (count: 17568, min: 1, max: 111, avg: 12.09)
Length (states) of path with itp 'true':            1099460 (count: 17568, min: 0, max: 112, avg: 62.58)
Length (states) of path with itp non-trivial itp:    212400 (count: 17568, min: 1, max: 111, avg: 12.09)
Length (states) of path with itp 'false':             17568 (count: 17568, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 17568, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:          194832 (count: 17568, min: 0, max: 110, avg: 11.09)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                17568
Number of successful refinements:     17568
Number of failed refinements:         0
Max. size of reached set before ref.: 33542
Max. size of reached set after ref.:  32806
Avg. size of reached set before ref.: 13889.94
Avg. size of reached set after ref.:  13350.38

Total time for CEGAR algorithm:     897.438s
Time for refinements:               383.258s
Average time for refinement:          0.021s
Max time for refinement:              0.496s

Code Coverage
-----------------------------
  Function coverage:      0.550
  Visited lines:          1720
  Total lines:            2094
  Line coverage:          0.821
  Visited conditions:     464
  Total conditions:       632
  Condition coverage:     0.734

CPAchecker general statistics
-----------------------------
Number of program locations:     2853
Number of CFA edges:             3225
Number of relevant variables:    327
Number of functions:             100
Number of loops:                 9
Size of reached set:             18090
  Number of reached locations:   1097 (38%)
    Avg states per location:     16
    Max states per location:     629 (at node N106)
  Number of reached functions:   55 (55%)
  Number of partitions:          18008
    Avg size of partitions:      1
    Max size of partitions:      9 (with key [N1133 (before line 5355), Function main called from node N1108, stack depth 1 [cda0432], stack [main]])
  Number of target states:       0
  Size of final wait list        13

Time for analysis setup:          2.920s
  Time for loading CPAs:          0.601s
  Time for loading parser:        0.374s
  Time for CFA construction:      1.888s
    Time for parsing file(s):     0.577s
    Time for AST to CFA:          0.590s
    Time for CFA sanity check:    0.141s
    Time for post-processing:     0.481s
      Time for var class.:        0.211s
Time for Analysis:              897.438s
CPU time for analysis:          897.410s
Total time for CPAchecker:      900.360s
Total CPU time for CPAchecker:  900.330s
Time for statistics:              0.232s

Time for Garbage Collector:      44.646s (in 2669 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                436MB (   416 MiB) max;    234MB (   223 MiB) avg;    446MB (   425 MiB) peak
Used non-heap memory:             41MB (    40 MiB) max;     39MB (    38 MiB) avg;     42MB (    40 MiB) peak
Allocated heap memory:           447MB (   427 MiB) max;    346MB (   330 MiB) avg
Allocated non-heap memory:        44MB (    41 MiB) max;     43MB (    41 MiB) avg
Total process virtual memory:  12348MB ( 11776 MiB) max;  12207MB ( 11641 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
