scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 9600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-drivers--platform--x86--ideapad-laptop.ko-main.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 9600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_u8_tvuib/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker 1.6.1-svn 6608050+ (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 5977: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function seq_lseek to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function seq_read to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function single_release to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_complete_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_suspend_noirq_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_suspend_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_restore_noirq_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_poweroff_late_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_poweroff_noirq_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_poweroff_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_thaw_noirq_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_freeze_late_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_freeze_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_prepare_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_freeze_noirq_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_resume_noirq_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_thaw_early_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_resume_early_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_restore_early_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_suspend_late_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function acpi_bus_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function single_open to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function acpi_bus_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function backlight_device_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rfkill_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rfkill_destroy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sparse_keymap_free to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_unregister_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function debugfs_remove_recursive to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sysfs_remove_group to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function acpi_evaluate_integer to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_alloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function debugfs_create_dir to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function debugfs_create_file to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sysfs_create_group to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_del to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_put to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function acpi_evaluate_object to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function schedule to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sparse_keymap_report_event to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function backlight_force_update to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rfkill_set_hw_state to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function i8042_command to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            47854 (8% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  43328 (91%)
  Because of loop head:            4391 (9%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         135 (0%)
  Times precision was empty:       15874 (33%)
  Times precision was {false}:     622 (1%)
  Times result was cached:         29554 (62%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      1804 (4%)
  Times result was 'false':        2365 (5%)
Number of strengthen sat checks:   0
Number of coverage checks:         158591
  BDD entailment checks:           17227
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       78
Number of predicates discovered:          10
Number of abstraction locations:          93
Max number of predicates per location:    9
Avg number of predicates per location:    3
Total predicates per abstraction:         152823
Max number of predicates per abstraction: 9
Avg number of predicates per abstraction: 62.99
Number of irrelevant predicates:          50119 (33%)
Number of preds handled by boolean abs:   5348 (3%)
  Total number of models for allsat:      2704
  Max number of models for allsat:        16
  Avg number of models for allsat:        1.50

Time for post operator:                  4.466s
  Time for path formula creation:        4.154s
Time for strengthen operator:            0.361s
Time for prec operator:                 10.929s
  Time for abstraction:                 10.224s (Max:     0.038s, Count: 47854)
    Boolean abstraction:                 2.484s
    Solving time:                        1.823s (Max:     0.022s)
    Model enumeration time:              0.598s
    Time for BDD construction:           0.183s (Max:     0.012s)
Time for merge operator:                 0.685s
Time for coverage check:                 0.064s
  Time for BDD entailment checks:        0.035s
Total time for SMT solver (w/o itp):     2.421s

Number of path formula cache hits:   603658 (90%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     3.058s

Total number of created targets for pointer analysis: 803
   Number of created targets for uf: *(struct_dentry)* is 3
   Number of created targets for uf: *signed_int is 181
   Number of created targets for uf: *(struct_platform_device)* is 3
   Number of created targets for uf: *unsigned_long_int is 5


Number of BDD nodes:                               1286
Size of BDD node table:                            464047
Size of BDD cache:                                 46411
Size of BDD node cleanup queue:                        4170 (count: 47539, min: 0, max: 164, avg: 0.09)
Time for BDD node cleanup:                             0.008s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.571s
  Time for transition matches:                         0.306s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.001s
Automaton transfers with branching:                0
Automaton transfer successors:                       567126 (count: 567126, min: 1, max: 1, avg: 1.00) [1 x 567126]

CPA algorithm statistics
------------------------
Number of iterations:            374538
Max size of waitlist:            129
Average size of waitlist:        50
Number of computed successors:   465532
Max successors for one state:    2
Number of times merged:          70682
Number of times stopped:         78977
Number of times breaked:         135

Total time for CPA algorithm:        25.355s (Max:     0.745s)
  Time for choose from waitlist:      0.131s
  Time for precision adjustment:     13.038s
  Time for transfer relation:         8.738s
  Time for merge operator:            1.461s
  Time for stop operator:             0.504s
  Time for adding to reached set:     0.450s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   135
Avg. length of target path (in blocks):                2875 (count: 135, min: 8, max: 37, avg: 21.30)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   1.823s
  Counterexample analysis:                             0.996s (Max:     0.019s, Calls: 135)
    Refinement sat check:                              0.738s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.001s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.044s
  Precision update:                                    0.080s
  ARG update:                                          0.641s

Length of refined path (in blocks):                    2697 (count: 135, min: 4, max: 36, avg: 19.98)
Number of affected states:                             2422 (count: 135, min: 1, max: 34, avg: 17.94)
Length (states) of path with itp 'true':                140 (count: 135, min: 1, max: 2, avg: 1.04)
Length (states) of path with itp non-trivial itp:      2422 (count: 135, min: 1, max: 34, avg: 17.94)
Length (states) of path with itp 'false':               135 (count: 135, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 135, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:            2287 (count: 135, min: 0, max: 33, avg: 16.94)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                135
Number of successful refinements:     135
Number of failed refinements:         0
Max. size of reached set before ref.: 5576
Max. size of reached set after ref.:  8
Avg. size of reached set before ref.: 2812.50
Avg. size of reached set after ref.:  6.07

Total time for CEGAR algorithm:      27.436s
Time for refinements:                 2.077s
Average time for refinement:          0.015s
Max time for refinement:              0.049s

Code Coverage
-----------------------------
  Function coverage:      0.460
  Visited lines:          1540
  Total lines:            2094
  Line coverage:          0.735
  Visited conditions:     388
  Total conditions:       632
  Condition coverage:     0.614

CPAchecker general statistics
-----------------------------
Number of program locations:     2853
Number of CFA edges:             3225
Number of relevant variables:    327
Number of functions:             100
Number of loops:                 9
Size of reached set:             5321
  Number of reached locations:   868 (30%)
    Avg states per location:     6
    Max states per location:     94 (at node N106)
  Number of reached functions:   46 (46%)
  Number of partitions:          5296
    Avg size of partitions:      1
    Max size of partitions:      7 (with key [N1133 (before line 5355), Function main called from node N1108, stack depth 1 [34b9fc7d], stack [main]])
  Number of target states:       0
  Size of final wait list        106

Time for analysis setup:          2.920s
  Time for loading CPAs:          0.600s
  Time for loading parser:        0.410s
  Time for CFA construction:      1.821s
    Time for parsing file(s):     0.545s
    Time for AST to CFA:          0.579s
    Time for CFA sanity check:    0.134s
    Time for post-processing:     0.468s
      Time for var class.:        0.215s
Time for Analysis:               27.436s
CPU time for analysis:           27.430s
Total time for CPAchecker:       30.359s
Total CPU time for CPAchecker:   30.350s
Time for statistics:              0.113s

Time for Garbage Collector:       0.746s (in 87 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                125MB (   119 MiB) max;     74MB (    71 MiB) avg;    133MB (   127 MiB) peak
Used non-heap memory:             40MB (    38 MiB) max;     36MB (    35 MiB) avg;     40MB (    38 MiB) peak
Allocated heap memory:           255MB (   243 MiB) max;    255MB (   243 MiB) avg
Allocated non-heap memory:        42MB (    40 MiB) max;     38MB (    37 MiB) avg
Total process virtual memory:  12081MB ( 11521 MiB) max;  12073MB ( 11513 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
