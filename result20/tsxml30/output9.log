scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 9600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-drivers--platform--x86--ideapad-laptop.ko-main.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 9600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_yex81k1o/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker 1.6.1-svn 6608050+ (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 5977: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function seq_lseek to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function seq_read to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function single_release to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_complete_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_suspend_noirq_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_suspend_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_restore_noirq_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_poweroff_late_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_poweroff_noirq_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_poweroff_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_thaw_noirq_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_freeze_late_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_freeze_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_prepare_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_freeze_noirq_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_resume_noirq_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_thaw_early_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_resume_early_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_restore_early_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_suspend_late_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function acpi_evaluate_object to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function schedule to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function acpi_evaluate_integer to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function backlight_device_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rfkill_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rfkill_destroy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rfkill_set_hw_state to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sparse_keymap_free to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_unregister_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function acpi_bus_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function single_open to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function i8042_command to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function backlight_force_update to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function debugfs_remove_recursive to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sysfs_remove_group to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            115034 (13% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  95024 (83%)
  Because of loop head:            19975 (17%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         35 (0%)
  Times precision was empty:       96209 (84%)
  Times precision was {false}:     556 (0%)
  Times result was cached:         17769 (15%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      500 (0%)
  Times result was 'false':        490 (0%)
Number of strengthen sat checks:   0
Number of coverage checks:         159984
  BDD entailment checks:           42368
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       78
Number of predicates discovered:          11
Number of abstraction locations:          23
Max number of predicates per location:    10
Avg number of predicates per location:    4
Total predicates per abstraction:         74906
Max number of predicates per abstraction: 10
Avg number of predicates per abstraction: 70.93
Number of irrelevant predicates:          62118 (83%)
Number of preds handled by boolean abs:   1752 (2%)
  Total number of models for allsat:      1228
  Max number of models for allsat:        32
  Avg number of models for allsat:        2.46

Time for post operator:                  6.764s
  Time for path formula creation:        6.522s
Time for strengthen operator:            0.596s
Time for prec operator:                  5.427s
  Time for abstraction:                  4.503s (Max:     0.047s, Count: 115034)
    Boolean abstraction:                 1.379s
    Solving time:                        0.929s (Max:     0.018s)
    Model enumeration time:              0.460s
    Time for BDD construction:           0.116s (Max:     0.015s)
Time for merge operator:                 0.620s
Time for coverage check:                 0.052s
  Time for BDD entailment checks:        0.036s
Total time for SMT solver (w/o itp):     1.389s

Number of path formula cache hits:   984306 (92%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     4.678s

Total number of created targets for pointer analysis: 3456
   Number of created targets for uf: *signed_int is 31
   Number of created targets for uf: *unsigned_long_long_int is 53
   Number of created targets for uf: *unsigned_long_int is 2


Number of BDD nodes:                               2301
Size of BDD node table:                            464047
Size of BDD cache:                                 46411
Size of BDD node cleanup queue:                        1645 (count: 144740, min: 0, max: 109, avg: 0.01)
Time for BDD node cleanup:                             0.012s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  1.036s
  Time for transition matches:                         0.637s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.000s
Automaton transfers with branching:                0
Automaton transfer successors:                       913491 (count: 913491, min: 1, max: 1, avg: 1.00) [1 x 913491]

CPA algorithm statistics
------------------------
Number of iterations:            529063
Max size of waitlist:            360
Average size of waitlist:        162
Number of computed successors:   629574
Max successors for one state:    2
Number of times merged:          58808
Number of times stopped:         94980
Number of times breaked:         35

Total time for CPA algorithm:        25.521s (Max:     1.582s)
  Time for choose from waitlist:      0.211s
  Time for precision adjustment:      8.578s
  Time for transfer relation:        13.092s
  Time for merge operator:            1.240s
  Time for stop operator:             0.626s
  Time for adding to reached set:     0.630s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   35
Avg. length of target path (in blocks):                 507 (count: 35, min: 8, max: 19, avg: 14.49)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   1.100s
  Counterexample analysis:                             0.215s (Max:     0.013s, Calls: 35)
    Refinement sat check:                              0.162s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.001s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.012s
  Precision update:                                    0.005s
  ARG update:                                          0.849s

Length of refined path (in blocks):                     406 (count: 35, min: 4, max: 18, avg: 11.60)
Number of affected states:                              328 (count: 35, min: 1, max: 16, avg: 9.37)
Length (states) of path with itp 'true':                 43 (count: 35, min: 1, max: 2, avg: 1.23)
Length (states) of path with itp non-trivial itp:       328 (count: 35, min: 1, max: 16, avg: 9.37)
Length (states) of path with itp 'false':                35 (count: 35, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 35, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:             293 (count: 35, min: 0, max: 15, avg: 8.37)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                35
Number of successful refinements:     35
Number of failed refinements:         0
Max. size of reached set before ref.: 27969
Max. size of reached set after ref.:  8
Avg. size of reached set before ref.: 15138.71
Avg. size of reached set after ref.:  6.46

Total time for CEGAR algorithm:      26.912s
Time for refinements:                 1.391s
Average time for refinement:          0.039s
Max time for refinement:              0.075s

Code Coverage
-----------------------------
  Function coverage:      0.300
  Visited lines:          1304
  Total lines:            2094
  Line coverage:          0.623
  Visited conditions:     314
  Total conditions:       632
  Condition coverage:     0.497

CPAchecker general statistics
-----------------------------
Number of program locations:     2853
Number of CFA edges:             3225
Number of relevant variables:    327
Number of functions:             100
Number of loops:                 9
Size of reached set:             4476
  Number of reached locations:   626 (22%)
    Avg states per location:     7
    Max states per location:     53 (at node N89)
  Number of reached functions:   30 (30%)
  Number of partitions:          4465
    Avg size of partitions:      1
    Max size of partitions:      9 (with key [N1133 (before line 5355), Function main called from node N1108, stack depth 1 [cda0432], stack [main]])
  Number of target states:       0
  Size of final wait list        182

Time for analysis setup:          2.925s
  Time for loading CPAs:          0.561s
  Time for loading parser:        0.386s
  Time for CFA construction:      1.884s
    Time for parsing file(s):     0.578s
    Time for AST to CFA:          0.572s
    Time for CFA sanity check:    0.151s
    Time for post-processing:     0.472s
      Time for var class.:        0.218s
Time for Analysis:               26.912s
CPU time for analysis:           26.910s
Total time for CPAchecker:       29.840s
Total CPU time for CPAchecker:   29.840s
Time for statistics:              0.096s

Time for Garbage Collector:       1.935s (in 99 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                247MB (   236 MiB) max;    106MB (   101 MiB) avg;    256MB (   244 MiB) peak
Used non-heap memory:             40MB (    38 MiB) max;     36MB (    35 MiB) avg;     41MB (    39 MiB) peak
Allocated heap memory:           255MB (   243 MiB) max;    255MB (   243 MiB) avg
Allocated non-heap memory:        42MB (    40 MiB) max;     39MB (    37 MiB) avg
Total process virtual memory:  12080MB ( 11521 MiB) max;  12072MB ( 11513 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
