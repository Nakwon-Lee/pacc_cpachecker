scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 9600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-drivers--platform--x86--ideapad-laptop.ko-main.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 9600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_1k4qkosq/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker 1.6.1-svn 6608050+ (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 5977: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function seq_lseek to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function seq_read to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function single_release to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_complete_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_suspend_noirq_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_suspend_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_restore_noirq_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_poweroff_late_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_poweroff_noirq_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_poweroff_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_thaw_noirq_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_freeze_late_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_freeze_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_prepare_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_freeze_noirq_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_resume_noirq_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_thaw_early_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_resume_early_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_restore_early_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_suspend_late_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function acpi_evaluate_object to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function schedule to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function acpi_evaluate_integer to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function single_open to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function i8042_command to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sparse_keymap_report_event to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rfkill_set_hw_state to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function backlight_force_update to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_alloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function debugfs_create_dir to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function debugfs_create_file to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sysfs_remove_group to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sparse_keymap_setup to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_register_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sparse_keymap_free to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_free_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function debugfs_remove_recursive to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rfkill_alloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rfkill_init_sw_state to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rfkill_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rfkill_destroy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function acpi_video_backlight_support to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rfkill_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_unregister_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function backlight_device_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 4007: Ignoring function call through function pointer *(bd->ops->update_status): (*(bd->ops->update_status))(bd); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function backlight_device_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function acpi_bus_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function acpi_bus_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sysfs_create_group to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_del to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_put to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            1004495 (11% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  850727 (85%)
  Because of loop head:            151706 (15%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         2062 (0%)
  Times precision was empty:       35423 (4%)
  Times precision was {false}:     7621 (1%)
  Times result was cached:         919580 (92%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      41871 (4%)
  Times result was 'false':        18571 (2%)
Number of strengthen sat checks:   0
Number of coverage checks:         2080450
  BDD entailment checks:           479232
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       78
Number of predicates discovered:          17
Number of abstraction locations:          161
Max number of predicates per location:    15
Avg number of predicates per location:    6
Total predicates per abstraction:         4688103
Max number of predicates per abstraction: 15
Avg number of predicates per abstraction: 94.72
Number of irrelevant predicates:          1331453 (28%)
Number of preds handled by boolean abs:   150223 (3%)
  Total number of models for allsat:      168804
  Max number of models for allsat:        384
  Avg number of models for allsat:        4.03

Time for post operator:                 47.447s
  Time for path formula creation:       45.203s
Time for strengthen operator:            3.928s
Time for prec operator:                228.931s
  Time for abstraction:                221.037s (Max:     1.300s, Count: 1004495)
    Boolean abstraction:                80.455s
    Solving time:                       22.901s (Max:     0.019s)
    Model enumeration time:             56.522s
    Time for BDD construction:           2.241s (Max:     0.027s)
Time for merge operator:                 6.631s
Time for coverage check:                 0.377s
  Time for BDD entailment checks:        0.274s
Total time for SMT solver (w/o itp):    79.423s

Number of path formula cache hits:   9002678 (86%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    29.388s

Total number of created targets for pointer analysis: 103203
   Number of created targets for uf: *(struct_backlight_device)* is 279
   Number of created targets for uf: *(struct_dentry)* is 576
   Number of created targets for uf: *signed_int is 181
   Number of created targets for uf: *unsigned_long_long_int is 7
   Number of created targets for uf: *(struct_platform_device)* is 279
   Number of created targets for uf: *(struct_rfkill)* is 1048
   Number of created targets for uf: *unsigned_long_int is 122


Number of BDD nodes:                               31228
Size of BDD node table:                            464047
Size of BDD cache:                                 46411
Size of BDD node cleanup queue:                       84951 (count: 811822, min: 0, max: 1452, avg: 0.10)
Time for BDD node cleanup:                             0.069s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  5.687s
  Time for transition matches:                         3.364s
  Time for transition assertions:                      0.002s
  Time for transition actions:                         0.006s
Automaton transfers with branching:                0
Automaton transfer successors:                      8913340 (count: 8913340, min: 1, max: 1, avg: 1.00) [1 x 8913340]

CPA algorithm statistics
------------------------
Number of iterations:            5549172
Max size of waitlist:            373
Average size of waitlist:        124
Number of computed successors:   6719951
Max successors for one state:    2
Number of times merged:          800609
Number of times stopped:         1085668
Number of times breaked:         2062

Total time for CPA algorithm:       369.590s (Max:     3.568s)
  Time for choose from waitlist:      1.317s
  Time for precision adjustment:    250.610s
  Time for transfer relation:        89.465s
  Time for merge operator:           11.343s
  Time for stop operator:             4.361s
  Time for adding to reached set:     4.882s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   2062
Avg. length of target path (in blocks):              255077 (count: 2062, min: 8, max: 250, avg: 123.70)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  61.268s
  Counterexample analysis:                            53.579s (Max:     0.084s, Calls: 2062)
    Refinement sat check:                             29.242s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.089s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.260s
  Precision update:                                    0.641s
  ARG update:                                          5.667s

Length of refined path (in blocks):                  245700 (count: 2062, min: 4, max: 195, avg: 119.16)
Number of affected states:                            50169 (count: 2062, min: 1, max: 164, avg: 24.33)
Length (states) of path with itp 'true':             193469 (count: 2062, min: 0, max: 179, avg: 93.83)
Length (states) of path with itp non-trivial itp:     50169 (count: 2062, min: 1, max: 164, avg: 24.33)
Length (states) of path with itp 'false':              2062 (count: 2062, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 2062, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:           48107 (count: 2062, min: 0, max: 163, avg: 23.33)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                2062
Number of successful refinements:     2062
Number of failed refinements:         0
Max. size of reached set before ref.: 31434
Max. size of reached set after ref.:  31188
Avg. size of reached set before ref.: 12829.22
Avg. size of reached set after ref.:  10121.24

Total time for CEGAR algorithm:     456.050s
Time for refinements:                77.095s
Average time for refinement:          0.037s
Max time for refinement:              0.984s

Code Coverage
-----------------------------
  Function coverage:      0.550
  Visited lines:          1720
  Total lines:            2094
  Line coverage:          0.821
  Visited conditions:     464
  Total conditions:       632
  Condition coverage:     0.734

CPAchecker general statistics
-----------------------------
Number of program locations:     2853
Number of CFA edges:             3225
Number of relevant variables:    327
Number of functions:             100
Number of loops:                 9
Size of reached set:             31847
  Number of reached locations:   1097 (38%)
    Avg states per location:     29
    Max states per location:     1164 (at node N106)
  Number of reached functions:   55 (55%)
  Number of partitions:          31826
    Avg size of partitions:      1
    Max size of partitions:      11 (with key [N1133 (before line 5355), Function main called from node N1108, stack depth 1 [cda0432], stack [main]])
  Number of target states:       0

Time for analysis setup:          2.975s
  Time for loading CPAs:          0.596s
  Time for loading parser:        0.420s
  Time for CFA construction:      1.877s
    Time for parsing file(s):     0.575s
    Time for AST to CFA:          0.590s
    Time for CFA sanity check:    0.150s
    Time for post-processing:     0.453s
      Time for var class.:        0.223s
Time for Analysis:              456.050s
CPU time for analysis:          456.040s
Time for analyzing result:        0.016s
Total time for CPAchecker:      459.027s
Total CPU time for CPAchecker:  459.010s
Time for statistics:              0.308s

Time for Garbage Collector:      18.389s (in 666 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                853MB (   814 MiB) max;    502MB (   479 MiB) avg;    871MB (   831 MiB) peak
Used non-heap memory:             41MB (    39 MiB) max;     40MB (    38 MiB) avg;     42MB (    40 MiB) peak
Allocated heap memory:          1194MB (  1139 MiB) max;    722MB (   688 MiB) avg
Allocated non-heap memory:        43MB (    41 MiB) max;     43MB (    41 MiB) avg
Total process virtual memory:  12887MB ( 12290 MiB) max;  12421MB ( 11846 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
