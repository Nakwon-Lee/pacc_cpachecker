scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 9600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-drivers--platform--x86--ideapad-laptop.ko-main.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 9600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_zv55kug8/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker 1.6.1-svn 6608050+ (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 5977: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function seq_lseek to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function seq_read to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function single_release to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_complete_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_suspend_noirq_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_suspend_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_restore_noirq_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_poweroff_late_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_poweroff_noirq_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_poweroff_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_thaw_noirq_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_freeze_late_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_freeze_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_prepare_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_freeze_noirq_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_resume_noirq_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_thaw_early_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_resume_early_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_restore_early_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_suspend_late_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function acpi_bus_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function acpi_bus_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function single_open to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function backlight_device_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function acpi_evaluate_integer to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sparse_keymap_free to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_unregister_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rfkill_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rfkill_destroy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function debugfs_remove_recursive to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sysfs_remove_group to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function acpi_evaluate_object to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function schedule to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            36440 (8% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  33949 (93%)
  Because of loop head:            2403 (7%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         88 (0%)
  Times precision was empty:       18452 (51%)
  Times precision was {false}:     689 (2%)
  Times result was cached:         15601 (43%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      1698 (5%)
  Times result was 'false':        1731 (5%)
Number of strengthen sat checks:   0
Number of coverage checks:         128560
  BDD entailment checks:           12786
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       78
Number of predicates discovered:          14
Number of abstraction locations:          54
Max number of predicates per location:    13
Avg number of predicates per location:    4
Total predicates per abstraction:         86496
Max number of predicates per abstraction: 13
Avg number of predicates per abstraction: 36.24
Number of irrelevant predicates:          37745 (44%)
Number of preds handled by boolean abs:   6091 (7%)
  Total number of models for allsat:      13736
  Max number of models for allsat:        256
  Avg number of models for allsat:        8.09

Time for post operator:                  3.394s
  Time for path formula creation:        3.207s
Time for strengthen operator:            0.278s
Time for prec operator:                 14.218s
  Time for abstraction:                 13.725s (Max:     0.149s, Count: 36440)
    Boolean abstraction:                 8.369s
    Solving time:                        2.161s (Max:     0.023s)
    Model enumeration time:              5.995s
    Time for BDD construction:           0.280s (Max:     0.021s)
Time for merge operator:                 0.618s
Time for coverage check:                 0.036s
  Time for BDD entailment checks:        0.024s
Total time for SMT solver (w/o itp):     8.156s

Number of path formula cache hits:   488004 (91%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     2.246s

Total number of created targets for pointer analysis: 78
   Number of created targets for uf: *signed_int is 40


Number of BDD nodes:                               14894
Size of BDD node table:                            464047
Size of BDD cache:                                 46411
Size of BDD node cleanup queue:                        4554 (count: 45532, min: 0, max: 288, avg: 0.10)
Time for BDD node cleanup:                             0.021s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.467s
Automaton transfers with branching:                0
Automaton transfer successors:                       450551 (count: 450551, min: 1, max: 1, avg: 1.00) [1 x 450551]

CPA algorithm statistics
------------------------
Number of iterations:            293380
Max size of waitlist:            191
Average size of waitlist:        69
Number of computed successors:   366093
Max successors for one state:    2
Number of times merged:          57887
Number of times stopped:         62466
Number of times breaked:         88

Total time for CPA algorithm:        25.542s (Max:     0.831s)
  Time for choose from waitlist:      0.151s
  Time for precision adjustment:     15.827s
  Time for transfer relation:         6.682s
  Time for merge operator:            1.180s
  Time for stop operator:             0.398s
  Time for adding to reached set:     0.447s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   88
Avg. length of target path (in blocks):                1378 (count: 88, min: 8, max: 26, avg: 15.66)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   1.117s
  Counterexample analysis:                             0.549s (Max:     0.017s, Calls: 88)
    Refinement sat check:                              0.391s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.002s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.065s
  Precision update:                                    0.040s
  ARG update:                                          0.429s

Length of refined path (in blocks):                    1177 (count: 88, min: 4, max: 25, avg: 13.38)
Number of affected states:                              988 (count: 88, min: 1, max: 23, avg: 11.23)
Length (states) of path with itp 'true':                101 (count: 88, min: 1, max: 2, avg: 1.15)
Length (states) of path with itp non-trivial itp:       988 (count: 88, min: 1, max: 23, avg: 11.23)
Length (states) of path with itp 'false':                88 (count: 88, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 88, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:             900 (count: 88, min: 0, max: 22, avg: 10.23)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                88
Number of successful refinements:     88
Number of failed refinements:         0
Max. size of reached set before ref.: 5532
Max. size of reached set after ref.:  8
Avg. size of reached set before ref.: 3415.47
Avg. size of reached set after ref.:  6.30

Total time for CEGAR algorithm:      26.881s
Time for refinements:                 1.334s
Average time for refinement:          0.015s
Max time for refinement:              0.062s

Code Coverage
-----------------------------
  Function coverage:      0.250
  Visited lines:          1196
  Total lines:            2094
  Line coverage:          0.571
  Visited conditions:     278
  Total conditions:       632
  Condition coverage:     0.440

CPAchecker general statistics
-----------------------------
Number of program locations:     2853
Number of CFA edges:             3225
Number of relevant variables:    327
Number of functions:             100
Number of loops:                 9
Size of reached set:             1889
  Number of reached locations:   521 (18%)
    Avg states per location:     3
    Max states per location:     12 (at node N107)
  Number of reached functions:   25 (25%)
  Number of partitions:          1886
    Avg size of partitions:      1
    Max size of partitions:      4 (with key [N1133 (before line 5355), Function main called from node N1108, stack depth 1 [34b9fc7d], stack [main]])
  Number of target states:       0
  Size of final wait list        55

Time for analysis setup:          2.975s
  Time for loading CPAs:          0.636s
  Time for loading parser:        0.437s
  Time for CFA construction:      1.821s
    Time for parsing file(s):     0.555s
    Time for AST to CFA:          0.552s
    Time for CFA sanity check:    0.140s
    Time for post-processing:     0.484s
      Time for var class.:        0.212s
Time for Analysis:               26.881s
CPU time for analysis:           26.870s
Total time for CPAchecker:       29.858s
Total CPU time for CPAchecker:   29.850s
Time for statistics:              0.052s

Time for Garbage Collector:       0.577s (in 65 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                122MB (   117 MiB) max;     73MB (    70 MiB) avg;    127MB (   121 MiB) peak
Used non-heap memory:             40MB (    38 MiB) max;     36MB (    34 MiB) avg;     40MB (    38 MiB) peak
Allocated heap memory:           255MB (   243 MiB) max;    255MB (   243 MiB) avg
Allocated non-heap memory:        41MB (    39 MiB) max;     38MB (    36 MiB) avg
Total process virtual memory:  12080MB ( 11521 MiB) max;  12072MB ( 11513 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
