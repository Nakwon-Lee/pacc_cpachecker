scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 9600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-drivers--platform--x86--ideapad-laptop.ko-main.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 9600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_l82kmw6h/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker 1.6.1-svn 6608050+ (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 5977: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function seq_lseek to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function seq_read to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function single_release to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_complete_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_suspend_noirq_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_suspend_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_restore_noirq_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_poweroff_late_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_poweroff_noirq_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_poweroff_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_thaw_noirq_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_freeze_late_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_freeze_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_prepare_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_freeze_noirq_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_resume_noirq_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_thaw_early_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_resume_early_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_restore_early_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_suspend_late_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function acpi_bus_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function acpi_bus_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function single_open to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function backlight_device_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function acpi_evaluate_integer to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function acpi_evaluate_object to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rfkill_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rfkill_destroy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function schedule to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sparse_keymap_free to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_unregister_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function debugfs_remove_recursive to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rfkill_set_hw_state to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_alloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sysfs_remove_group to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function backlight_force_update to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sparse_keymap_report_event to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function i8042_command to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sysfs_create_group to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_del to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_put to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function debugfs_create_dir to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function debugfs_create_file to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            79746 (10% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  69892 (88%)
  Because of loop head:            9778 (12%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         76 (0%)
  Times precision was empty:       54356 (68%)
  Times precision was {false}:     637 (1%)
  Times result was cached:         23555 (30%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      1198 (2%)
  Times result was 'false':        1580 (2%)
Number of strengthen sat checks:   0
Number of coverage checks:         179813
  BDD entailment checks:           30939
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       78
Number of predicates discovered:          14
Number of abstraction locations:          41
Max number of predicates per location:    13
Avg number of predicates per location:    4
Total predicates per abstraction:         119778
Max number of predicates per abstraction: 13
Avg number of predicates per abstraction: 65.27
Number of irrelevant predicates:          84101 (70%)
Number of preds handled by boolean abs:   4321 (4%)
  Total number of models for allsat:      7167
  Max number of models for allsat:        256
  Avg number of models for allsat:        5.98

Time for post operator:                  3.960s
  Time for path formula creation:        3.766s
Time for strengthen operator:            0.412s
Time for prec operator:                 10.977s
  Time for abstraction:                 10.188s (Max:     0.144s, Count: 79746)
    Boolean abstraction:                 5.011s
    Solving time:                        1.388s (Max:     0.020s)
    Model enumeration time:              3.483s
    Time for BDD construction:           0.196s (Max:     0.018s)
Time for merge operator:                 0.549s
Time for coverage check:                 0.025s
  Time for BDD entailment checks:        0.015s
Total time for SMT solver (w/o itp):     4.871s

Number of path formula cache hits:   899457 (96%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     2.406s

Total number of created targets for pointer analysis: 344
   Number of created targets for uf: *(struct_backlight_device)* is 2
   Number of created targets for uf: *(struct_dentry)* is 2
   Number of created targets for uf: *signed_int is 100
   Number of created targets for uf: *(struct_platform_device)* is 4
   Number of created targets for uf: *unsigned_long_int is 5


Number of BDD nodes:                               14694
Size of BDD node table:                            464047
Size of BDD cache:                                 46411
Size of BDD node cleanup queue:                        3565 (count: 96334, min: 0, max: 226, avg: 0.04)
Time for BDD node cleanup:                             0.015s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.637s
  Time for transition matches:                         0.358s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.001s
Automaton transfers with branching:                0
Automaton transfer successors:                       793185 (count: 793185, min: 1, max: 1, avg: 1.00) [1 x 793185]

CPA algorithm statistics
------------------------
Number of iterations:            472554
Max size of waitlist:            219
Average size of waitlist:        99
Number of computed successors:   574743
Max successors for one state:    2
Number of times merged:          74437
Number of times stopped:         92138
Number of times breaked:         76

Total time for CPA algorithm:        25.368s (Max:     1.113s)
  Time for choose from waitlist:      0.190s
  Time for precision adjustment:     13.143s
  Time for transfer relation:         8.758s
  Time for merge operator:            1.261s
  Time for stop operator:             0.471s
  Time for adding to reached set:     0.504s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   76
Avg. length of target path (in blocks):                1090 (count: 76, min: 8, max: 18, avg: 14.34)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   1.247s
  Counterexample analysis:                             0.494s (Max:     0.017s, Calls: 76)
    Refinement sat check:                              0.338s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.001s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.041s
  Precision update:                                    0.018s
  ARG update:                                          0.653s

Length of refined path (in blocks):                     916 (count: 76, min: 4, max: 17, avg: 12.05)
Number of affected states:                              752 (count: 76, min: 1, max: 15, avg: 9.89)
Length (states) of path with itp 'true':                 88 (count: 76, min: 1, max: 2, avg: 1.16)
Length (states) of path with itp non-trivial itp:       752 (count: 76, min: 1, max: 15, avg: 9.89)
Length (states) of path with itp 'false':                76 (count: 76, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 76, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:             676 (count: 76, min: 0, max: 14, avg: 8.89)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                76
Number of successful refinements:     76
Number of failed refinements:         0
Max. size of reached set before ref.: 11291
Max. size of reached set after ref.:  8
Avg. size of reached set before ref.: 6211.28
Avg. size of reached set after ref.:  6.32

Total time for CEGAR algorithm:      26.902s
Time for refinements:                 1.532s
Average time for refinement:          0.020s
Max time for refinement:              0.052s

Code Coverage
-----------------------------
  Function coverage:      0.430
  Visited lines:          1528
  Total lines:            2094
  Line coverage:          0.730
  Visited conditions:     388
  Total conditions:       632
  Condition coverage:     0.614

CPAchecker general statistics
-----------------------------
Number of program locations:     2853
Number of CFA edges:             3225
Number of relevant variables:    327
Number of functions:             100
Number of loops:                 9
Size of reached set:             9449
  Number of reached locations:   860 (30%)
    Avg states per location:     10
    Max states per location:     145 (at node N106)
  Number of reached functions:   43 (43%)
  Number of partitions:          9411
    Avg size of partitions:      1
    Max size of partitions:      12 (with key [N1133 (before line 5355), Function main called from node N1108, stack depth 1 [34b9fc7d], stack [main]])
  Number of target states:       0
  Size of final wait list        180

Time for analysis setup:          2.921s
  Time for loading CPAs:          0.572s
  Time for loading parser:        0.398s
  Time for CFA construction:      1.863s
    Time for parsing file(s):     0.563s
    Time for AST to CFA:          0.577s
    Time for CFA sanity check:    0.152s
    Time for post-processing:     0.468s
      Time for var class.:        0.229s
Time for Analysis:               26.902s
CPU time for analysis:           26.910s
Total time for CPAchecker:       29.825s
Total CPU time for CPAchecker:   29.820s
Time for statistics:              0.151s

Time for Garbage Collector:       0.870s (in 93 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                121MB (   116 MiB) max;     75MB (    71 MiB) avg;    126MB (   121 MiB) peak
Used non-heap memory:             39MB (    37 MiB) max;     36MB (    34 MiB) avg;     39MB (    37 MiB) peak
Allocated heap memory:           255MB (   243 MiB) max;    255MB (   243 MiB) avg
Allocated non-heap memory:        40MB (    39 MiB) max;     38MB (    36 MiB) avg
Total process virtual memory:  12081MB ( 11521 MiB) max;  12072MB ( 11513 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
