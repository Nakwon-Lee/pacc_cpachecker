scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 9600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-drivers--platform--x86--ideapad-laptop.ko-main.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 9600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_4dgqeow1/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker 1.6.1-svn 6608050+ (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 5977: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function seq_lseek to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function seq_read to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function single_release to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_complete_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_suspend_noirq_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_suspend_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_restore_noirq_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_poweroff_late_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_poweroff_noirq_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_poweroff_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_thaw_noirq_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_freeze_late_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_freeze_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_prepare_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_freeze_noirq_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_resume_noirq_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_thaw_early_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_resume_early_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_restore_early_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_suspend_late_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function acpi_bus_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function acpi_bus_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function single_open to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function backlight_device_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sparse_keymap_free to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_unregister_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function debugfs_remove_recursive to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sysfs_remove_group to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rfkill_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rfkill_destroy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function acpi_evaluate_object to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function schedule to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function acpi_evaluate_integer to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rfkill_set_hw_state to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function i8042_command to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sparse_keymap_report_event to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function backlight_force_update to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_alloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sysfs_create_group to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_del to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_put to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function debugfs_create_dir to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function debugfs_create_file to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sparse_keymap_setup to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_register_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_free_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rfkill_alloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rfkill_init_sw_state to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rfkill_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function acpi_video_backlight_support to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function backlight_device_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 4007: Ignoring function call through function pointer *(bd->ops->update_status): (*(bd->ops->update_status))(bd); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            2168703 (15% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  1866870 (86%)
  Because of loop head:            287934 (13%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         13899 (1%)
  Times precision was empty:       324116 (15%)
  Times precision was {false}:     3994 (0%)
  Times result was cached:         1814150 (84%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      26443 (1%)
  Times result was 'false':        48268 (2%)
Number of strengthen sat checks:   0
Number of coverage checks:         2274650
  BDD entailment checks:           727156
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       78
Number of predicates discovered:          18
Number of abstraction locations:          161
Max number of predicates per location:    16
Avg number of predicates per location:    6
Total predicates per abstraction:         9919533
Max number of predicates per abstraction: 16
Avg number of predicates per abstraction: 325.90
Number of irrelevant predicates:          4562036 (46%)
Number of preds handled by boolean abs:   95499 (1%)
  Total number of models for allsat:      66675
  Max number of models for allsat:        768
  Avg number of models for allsat:        2.52

Time for post operator:                 38.425s
  Time for path formula creation:       36.036s
Time for strengthen operator:            6.859s
Time for prec operator:                247.645s
  Time for abstraction:                234.612s (Max:     0.663s, Count: 2168703)
    Boolean abstraction:                31.037s
    Solving time:                       12.129s (Max:     0.018s)
    Model enumeration time:             18.561s
    Time for BDD construction:           0.868s (Max:     0.031s)
Time for merge operator:                 3.177s
Time for coverage check:                 0.412s
  Time for BDD entailment checks:        0.309s
Total time for SMT solver (w/o itp):    30.690s

Number of path formula cache hits:   16641927 (97%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    14.579s

Total number of created targets for pointer analysis: 53186
   Number of created targets for uf: *(struct_backlight_device)* is 269
   Number of created targets for uf: *(struct_dentry)* is 159
   Number of created targets for uf: *signed_int is 118
   Number of created targets for uf: *unsigned_long_long_int is 1875
   Number of created targets for uf: *(struct_platform_device)* is 124
   Number of created targets for uf: *(struct_rfkill)* is 736
   Number of created targets for uf: *unsigned_long_int is 106


Number of BDD nodes:                               72984
Size of BDD node table:                            464047
Size of BDD cache:                                 46411
Size of BDD node cleanup queue:                       55736 (count: 1236128, min: 0, max: 770, avg: 0.05)
Time for BDD node cleanup:                             0.086s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  8.439s
  Time for transition matches:                         4.971s
  Time for transition assertions:                      0.003s
  Time for transition actions:                         0.026s
Automaton transfers with branching:                0
Automaton transfer successors:                     14466601 (count: 14466601, min: 1, max: 1, avg: 1.00) [1 x 14466601]

CPA algorithm statistics
------------------------
Number of iterations:            8749012
Max size of waitlist:            45
Average size of waitlist:        14
Number of computed successors:   10191715
Max successors for one state:    2
Number of times merged:          773747
Number of times stopped:         1357435
Number of times breaked:         13899

Total time for CPA algorithm:       423.084s (Max:     5.617s)
  Time for choose from waitlist:      1.623s
  Time for precision adjustment:    285.546s
  Time for transfer relation:       103.648s
  Time for merge operator:            7.956s
  Time for stop operator:             6.377s
  Time for adding to reached set:     6.706s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   13899
Avg. length of target path (in blocks):             1076346 (count: 13899, min: 8, max: 137, avg: 77.44)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                 205.107s
  Counterexample analysis:                           188.744s (Max:     0.040s, Calls: 13899)
    Refinement sat check:                            118.660s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.331s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.841s
  Precision update:                                    3.412s
  ARG update:                                          9.153s

Length of refined path (in blocks):                 1052453 (count: 13899, min: 4, max: 131, avg: 75.72)
Number of affected states:                           171395 (count: 13899, min: 1, max: 111, avg: 12.33)
Length (states) of path with itp 'true':             867159 (count: 13899, min: 0, max: 115, avg: 62.39)
Length (states) of path with itp non-trivial itp:    171395 (count: 13899, min: 1, max: 111, avg: 12.33)
Length (states) of path with itp 'false':             13899 (count: 13899, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 13899, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:          157496 (count: 13899, min: 0, max: 110, avg: 11.33)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                13899
Number of successful refinements:     13899
Number of failed refinements:         0
Max. size of reached set before ref.: 32488
Max. size of reached set after ref.:  25519
Avg. size of reached set before ref.: 11339.56
Avg. size of reached set after ref.:  10710.21

Total time for CEGAR algorithm:     772.337s
Time for refinements:               287.944s
Average time for refinement:          0.020s
Max time for refinement:              0.559s

Code Coverage
-----------------------------
  Function coverage:      0.550
  Visited lines:          1720
  Total lines:            2094
  Line coverage:          0.821
  Visited conditions:     464
  Total conditions:       632
  Condition coverage:     0.734

CPAchecker general statistics
-----------------------------
Number of program locations:     2853
Number of CFA edges:             3225
Number of relevant variables:    327
Number of functions:             100
Number of loops:                 9
Size of reached set:             38610
  Number of reached locations:   1097 (38%)
    Avg states per location:     35
    Max states per location:     1424 (at node N106)
  Number of reached functions:   55 (55%)
  Number of partitions:          38587
    Avg size of partitions:      1
    Max size of partitions:      13 (with key [N1133 (before line 5355), Function main called from node N1108, stack depth 1 [34b9fc7d], stack [main]])
  Number of target states:       0

Time for analysis setup:          2.878s
  Time for loading CPAs:          0.573s
  Time for loading parser:        0.406s
  Time for CFA construction:      1.834s
    Time for parsing file(s):     0.550s
    Time for AST to CFA:          0.581s
    Time for CFA sanity check:    0.144s
    Time for post-processing:     0.462s
      Time for var class.:        0.208s
Time for Analysis:              772.337s
CPU time for analysis:          772.300s
Time for analyzing result:        0.019s
Total time for CPAchecker:      775.218s
Total CPU time for CPAchecker:  775.170s
Time for statistics:              0.338s

Time for Garbage Collector:      37.101s (in 2386 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                497MB (   474 MiB) max;    232MB (   221 MiB) avg;    530MB (   505 MiB) peak
Used non-heap memory:             41MB (    39 MiB) max;     40MB (    38 MiB) avg;     42MB (    40 MiB) peak
Allocated heap memory:           601MB (   573 MiB) max;    344MB (   328 MiB) avg
Allocated non-heap memory:        43MB (    41 MiB) max;     43MB (    41 MiB) avg
Total process virtual memory:  12415MB ( 11840 MiB) max;  12217MB ( 11651 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
