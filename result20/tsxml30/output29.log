scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 9600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-drivers--platform--x86--ideapad-laptop.ko-main.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 9600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_yb5kjj3f/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker 1.6.1-svn 6608050+ (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 5977: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function seq_lseek to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function seq_read to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function single_release to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_complete_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_suspend_noirq_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_suspend_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_restore_noirq_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_poweroff_late_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_poweroff_noirq_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_poweroff_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_thaw_noirq_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_freeze_late_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_freeze_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_prepare_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_freeze_noirq_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_resume_noirq_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_thaw_early_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_resume_early_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_restore_early_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_suspend_late_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function acpi_bus_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function acpi_bus_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function single_open to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function backlight_device_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function acpi_evaluate_integer to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function acpi_evaluate_object to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function schedule to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sparse_keymap_free to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_unregister_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rfkill_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rfkill_destroy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function debugfs_remove_recursive to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rfkill_set_hw_state to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_alloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sysfs_remove_group to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function i8042_command to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sysfs_create_group to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_del to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_put to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function debugfs_create_dir to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function debugfs_create_file to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sparse_keymap_report_event to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            67351 (10% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  59757 (89%)
  Because of loop head:            7519 (11%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         75 (0%)
  Times precision was empty:       43898 (65%)
  Times precision was {false}:     628 (1%)
  Times result was cached:         21629 (32%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      1196 (2%)
  Times result was 'false':        1549 (2%)
Number of strengthen sat checks:   0
Number of coverage checks:         161438
  BDD entailment checks:           25058
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       78
Number of predicates discovered:          14
Number of abstraction locations:          41
Max number of predicates per location:    13
Avg number of predicates per location:    4
Total predicates per abstraction:         110372
Max number of predicates per abstraction: 13
Avg number of predicates per abstraction: 60.51
Number of irrelevant predicates:          76181 (69%)
Number of preds handled by boolean abs:   4312 (4%)
  Total number of models for allsat:      7165
  Max number of models for allsat:        256
  Avg number of models for allsat:        5.99

Time for post operator:                  3.809s
  Time for path formula creation:        3.516s
Time for strengthen operator:            0.440s
Time for prec operator:                 10.879s
  Time for abstraction:                 10.021s (Max:     0.162s, Count: 67351)
    Boolean abstraction:                 4.591s
    Solving time:                        1.353s (Max:     0.018s)
    Model enumeration time:              3.118s
    Time for BDD construction:           0.198s (Max:     0.020s)
Time for merge operator:                 0.477s
Time for coverage check:                 0.049s
  Time for BDD entailment checks:        0.034s
Total time for SMT solver (w/o itp):     4.471s

Number of path formula cache hits:   787263 (96%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     2.205s

Total number of created targets for pointer analysis: 192
   Number of created targets for uf: *(struct_backlight_device)* is 2
   Number of created targets for uf: *(struct_dentry)* is 2
   Number of created targets for uf: *signed_int is 55
   Number of created targets for uf: *(struct_platform_device)* is 4
   Number of created targets for uf: *unsigned_long_int is 12


Number of BDD nodes:                               14694
Size of BDD node table:                            464047
Size of BDD cache:                                 46411
Size of BDD node cleanup queue:                        3559 (count: 79933, min: 0, max: 230, avg: 0.04)
Time for BDD node cleanup:                             0.019s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.646s
  Time for transition matches:                         0.350s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.000s
Automaton transfers with branching:                0
Automaton transfer successors:                       696940 (count: 696940, min: 1, max: 1, avg: 1.00) [1 x 696940]

CPA algorithm statistics
------------------------
Number of iterations:            417009
Max size of waitlist:            246
Average size of waitlist:        106
Number of computed successors:   509040
Max successors for one state:    2
Number of times merged:          68190
Number of times stopped:         80631
Number of times breaked:         75

Total time for CPA algorithm:        25.372s (Max:     0.974s)
  Time for choose from waitlist:      0.243s
  Time for precision adjustment:     13.370s
  Time for transfer relation:         8.325s
  Time for merge operator:            1.120s
  Time for stop operator:             0.496s
  Time for adding to reached set:     0.585s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   75
Avg. length of target path (in blocks):                1072 (count: 75, min: 8, max: 18, avg: 14.29)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   1.245s
  Counterexample analysis:                             0.475s (Max:     0.018s, Calls: 75)
    Refinement sat check:                              0.327s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.002s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.041s
  Precision update:                                    0.034s
  ARG update:                                          0.660s

Length of refined path (in blocks):                     899 (count: 75, min: 4, max: 17, avg: 11.99)
Number of affected states:                              737 (count: 75, min: 1, max: 15, avg: 9.83)
Length (states) of path with itp 'true':                 87 (count: 75, min: 1, max: 2, avg: 1.16)
Length (states) of path with itp non-trivial itp:       737 (count: 75, min: 1, max: 15, avg: 9.83)
Length (states) of path with itp 'false':                75 (count: 75, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 75, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:             662 (count: 75, min: 0, max: 14, avg: 8.83)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                75
Number of successful refinements:     75
Number of failed refinements:         0
Max. size of reached set before ref.: 9956
Max. size of reached set after ref.:  8
Avg. size of reached set before ref.: 5607.61
Avg. size of reached set after ref.:  6.32

Total time for CEGAR algorithm:      26.895s
Time for refinements:                 1.521s
Average time for refinement:          0.020s
Max time for refinement:              0.060s

Code Coverage
-----------------------------
  Function coverage:      0.360
  Visited lines:          1414
  Total lines:            2094
  Line coverage:          0.675
  Visited conditions:     334
  Total conditions:       632
  Condition coverage:     0.528

CPAchecker general statistics
-----------------------------
Number of program locations:     2853
Number of CFA edges:             3225
Number of relevant variables:    327
Number of functions:             100
Number of loops:                 9
Size of reached set:             6763
  Number of reached locations:   734 (26%)
    Avg states per location:     9
    Max states per location:     75 (at node N106)
  Number of reached functions:   36 (36%)
  Number of partitions:          6727
    Avg size of partitions:      1
    Max size of partitions:      12 (with key [N1133 (before line 5355), Function main called from node N1108, stack depth 1 [34b9fc7d], stack [main]])
  Number of target states:       0
  Size of final wait list        192

Time for analysis setup:          2.946s
  Time for loading CPAs:          0.575s
  Time for loading parser:        0.396s
  Time for CFA construction:      1.900s
    Time for parsing file(s):     0.581s
    Time for AST to CFA:          0.619s
    Time for CFA sanity check:    0.143s
    Time for post-processing:     0.465s
      Time for var class.:        0.211s
Time for Analysis:               26.895s
CPU time for analysis:           26.890s
Total time for CPAchecker:       29.844s
Total CPU time for CPAchecker:   29.830s
Time for statistics:              0.130s

Time for Garbage Collector:       0.813s (in 84 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                122MB (   117 MiB) max;     74MB (    70 MiB) avg;    126MB (   120 MiB) peak
Used non-heap memory:             39MB (    37 MiB) max;     36MB (    34 MiB) avg;     39MB (    37 MiB) peak
Allocated heap memory:           255MB (   243 MiB) max;    255MB (   243 MiB) avg
Allocated non-heap memory:        40MB (    39 MiB) max;     37MB (    36 MiB) avg
Total process virtual memory:  12081MB ( 11521 MiB) max;  12072MB ( 11513 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
