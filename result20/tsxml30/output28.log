scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 9600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-drivers--platform--x86--ideapad-laptop.ko-main.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 9600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_ukwa6268/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker 1.6.1-svn 6608050+ (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 5977: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function seq_lseek to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function seq_read to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function single_release to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_complete_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_suspend_noirq_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_suspend_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_restore_noirq_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_poweroff_late_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_poweroff_noirq_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_poweroff_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_thaw_noirq_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_freeze_late_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_freeze_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_prepare_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_freeze_noirq_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_resume_noirq_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_thaw_early_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_resume_early_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_restore_early_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_suspend_late_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function acpi_evaluate_object to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function schedule to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function acpi_evaluate_integer to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function single_open to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rfkill_set_hw_state to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function i8042_command to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sparse_keymap_report_event to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function backlight_force_update to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_alloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sysfs_create_group to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_del to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_put to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function debugfs_create_dir to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function debugfs_create_file to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sysfs_remove_group to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sparse_keymap_setup to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_register_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sparse_keymap_free to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_free_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function debugfs_remove_recursive to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function acpi_video_backlight_support to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function backlight_device_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function backlight_device_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rfkill_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rfkill_destroy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_unregister_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function acpi_bus_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function acpi_bus_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 4007: Ignoring function call through function pointer *(bd->ops->update_status): (*(bd->ops->update_status))(bd); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rfkill_alloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rfkill_init_sw_state to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rfkill_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            68275 (14% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  57843 (85%)
  Because of loop head:            10118 (15%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         314 (0%)
  Times precision was empty:       29996 (44%)
  Times precision was {false}:     649 (1%)
  Times result was cached:         36981 (54%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      649 (1%)
  Times result was 'false':        746 (1%)
Number of strengthen sat checks:   0
Number of coverage checks:         73889
  BDD entailment checks:           20591
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       78
Number of predicates discovered:          10
Number of abstraction locations:          79
Max number of predicates per location:    8
Avg number of predicates per location:    2
Total predicates per abstraction:         60727
Max number of predicates per abstraction: 8
Avg number of predicates per abstraction: 46.79
Number of irrelevant predicates:          42753 (70%)
Number of preds handled by boolean abs:   1045 (2%)
  Total number of models for allsat:      673
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.04

Time for post operator:                  4.688s
  Time for path formula creation:        4.469s
Time for strengthen operator:            0.331s
Time for prec operator:                  5.712s
  Time for abstraction:                  5.073s (Max:     0.030s, Count: 68275)
    Boolean abstraction:                 0.586s
    Solving time:                        0.689s (Max:     0.018s)
    Model enumeration time:              0.053s
    Time for BDD construction:           0.047s (Max:     0.008s)
Time for merge operator:                 0.545s
Time for coverage check:                 0.045s
  Time for BDD entailment checks:        0.035s
Total time for SMT solver (w/o itp):     0.742s

Number of path formula cache hits:   515781 (91%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     3.269s

Total number of created targets for pointer analysis: 4454
   Number of created targets for uf: *(struct_backlight_device)* is 28
   Number of created targets for uf: *(struct_dentry)* is 17
   Number of created targets for uf: *signed_int is 10
   Number of created targets for uf: *unsigned_long_long_int is 208
   Number of created targets for uf: *(struct_platform_device)* is 9
   Number of created targets for uf: *(struct_rfkill)* is 37
   Number of created targets for uf: *unsigned_long_int is 19


Number of BDD nodes:                               302
Size of BDD node table:                            464047
Size of BDD cache:                                 46411
Size of BDD node cleanup queue:                        1529 (count: 57872, min: 0, max: 203, avg: 0.03)
Time for BDD node cleanup:                             0.018s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.499s
Automaton transfers with branching:                0
Automaton transfer successors:                       484305 (count: 484305, min: 1, max: 1, avg: 1.00) [1 x 484305]

CPA algorithm statistics
------------------------
Number of iterations:            283180
Max size of waitlist:            55
Average size of waitlist:        27
Number of computed successors:   331978
Max successors for one state:    2
Number of times merged:          26649
Number of times stopped:         46434
Number of times breaked:         314

Total time for CPA algorithm:        19.105s (Max:     1.637s)
  Time for choose from waitlist:      0.184s
  Time for precision adjustment:      7.489s
  Time for transfer relation:         8.780s
  Time for merge operator:            0.923s
  Time for stop operator:             0.430s
  Time for adding to reached set:     0.449s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   314
Avg. length of target path (in blocks):               22338 (count: 314, min: 8, max: 85, avg: 71.14)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   5.489s
  Counterexample analysis:                             4.711s (Max:     0.035s, Calls: 314)
    Refinement sat check:                              3.003s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.003s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.071s
  Precision update:                                    0.082s
  ARG update:                                          0.465s

Length of refined path (in blocks):                   21537 (count: 314, min: 4, max: 84, avg: 68.59)
Number of affected states:                             4507 (count: 314, min: 1, max: 66, avg: 14.35)
Length (states) of path with itp 'true':              16716 (count: 314, min: 0, max: 68, avg: 53.24)
Length (states) of path with itp non-trivial itp:      4507 (count: 314, min: 1, max: 66, avg: 14.35)
Length (states) of path with itp 'false':               314 (count: 314, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 314, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:            4193 (count: 314, min: 0, max: 65, avg: 13.35)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                314
Number of successful refinements:     314
Number of failed refinements:         0
Max. size of reached set before ref.: 9671
Max. size of reached set after ref.:  8957
Avg. size of reached set before ref.: 6557.10
Avg. size of reached set after ref.:  5672.03

Total time for CEGAR algorithm:      26.857s
Time for refinements:                 6.890s
Average time for refinement:          0.021s
Max time for refinement:              0.093s

Code Coverage
-----------------------------
  Function coverage:      0.550
  Visited lines:          1692
  Total lines:            2094
  Line coverage:          0.808
  Visited conditions:     452
  Total conditions:       632
  Condition coverage:     0.715

CPAchecker general statistics
-----------------------------
Number of program locations:     2853
Number of CFA edges:             3225
Number of relevant variables:    327
Number of functions:             100
Number of loops:                 9
Size of reached set:             6888
  Number of reached locations:   1062 (37%)
    Avg states per location:     6
    Max states per location:     248 (at node N106)
  Number of reached functions:   55 (55%)
  Number of partitions:          6884
    Avg size of partitions:      1
    Max size of partitions:      3 (with key [N1133 (before line 5355), Function main called from node N1108, stack depth 1 [cda0432], stack [main]])
  Number of target states:       0
  Size of final wait list        31

Time for analysis setup:          2.989s
  Time for loading CPAs:          0.577s
  Time for loading parser:        0.425s
  Time for CFA construction:      1.899s
    Time for parsing file(s):     0.535s
    Time for AST to CFA:          0.630s
    Time for CFA sanity check:    0.151s
    Time for post-processing:     0.476s
      Time for var class.:        0.210s
Time for Analysis:               26.857s
CPU time for analysis:           26.860s
Total time for CPAchecker:       29.849s
Total CPU time for CPAchecker:   29.850s
Time for statistics:              0.115s

Time for Garbage Collector:       0.806s (in 68 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                144MB (   138 MiB) max;     76MB (    73 MiB) avg;    151MB (   144 MiB) peak
Used non-heap memory:             41MB (    39 MiB) max;     37MB (    35 MiB) avg;     41MB (    39 MiB) peak
Allocated heap memory:           255MB (   243 MiB) max;    255MB (   243 MiB) avg
Allocated non-heap memory:        42MB (    40 MiB) max;     39MB (    37 MiB) avg
Total process virtual memory:  12149MB ( 11586 MiB) max;  12138MB ( 11576 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
