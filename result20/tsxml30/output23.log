scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 9600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-drivers--platform--x86--ideapad-laptop.ko-main.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 9600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_r3cz7jd6/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker 1.6.1-svn 6608050+ (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 5977: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function seq_lseek to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function seq_read to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function single_release to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_complete_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_suspend_noirq_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_suspend_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_restore_noirq_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_poweroff_late_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_poweroff_noirq_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_poweroff_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_thaw_noirq_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_freeze_late_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_freeze_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_prepare_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_freeze_noirq_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_resume_noirq_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_thaw_early_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_resume_early_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_restore_early_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_suspend_late_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function acpi_evaluate_object to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function schedule to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function acpi_evaluate_integer to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function backlight_device_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rfkill_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rfkill_destroy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rfkill_set_hw_state to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sparse_keymap_free to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_unregister_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function debugfs_remove_recursive to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sysfs_remove_group to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function i8042_command to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function backlight_force_update to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function single_open to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function acpi_bus_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            43689 (12% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  36515 (84%)
  Because of loop head:            7152 (16%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         22 (0%)
  Times precision was empty:       31383 (72%)
  Times precision was {false}:     1342 (3%)
  Times result was cached:         10548 (24%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      416 (1%)
  Times result was 'false':        275 (1%)
Number of strengthen sat checks:   0
Number of coverage checks:         70797
  BDD entailment checks:           16691
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       78
Number of predicates discovered:          10
Number of abstraction locations:          38
Max number of predicates per location:    9
Avg number of predicates per location:    1
Total predicates per abstraction:         16288
Max number of predicates per abstraction: 9
Avg number of predicates per abstraction: 9.27
Number of irrelevant predicates:          12762 (78%)
Number of preds handled by boolean abs:   1035 (6%)
  Total number of models for allsat:      5170
  Max number of models for allsat:        192
  Avg number of models for allsat:        12.43

Time for post operator:                  9.214s
  Time for path formula creation:        8.994s
Time for strengthen operator:            0.293s
Time for prec operator:                  7.926s
  Time for abstraction:                  7.244s (Max:     0.208s, Count: 43689)
    Boolean abstraction:                 4.009s
    Solving time:                        1.295s (Max:     0.019s)
    Model enumeration time:              2.949s
    Time for BDD construction:           0.154s (Max:     0.010s)
Time for merge operator:                 0.918s
Time for coverage check:                 0.060s
  Time for BDD entailment checks:        0.042s
Total time for SMT solver (w/o itp):     4.244s

Number of path formula cache hits:   228281 (56%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     7.959s

Total number of created targets for pointer analysis: 7130
   Number of created targets for uf: *signed_int is 2336
   Number of created targets for uf: *unsigned_long_long_int is 3
   Number of created targets for uf: *unsigned_long_int is 159


Number of BDD nodes:                               2870
Size of BDD node table:                            464047
Size of BDD cache:                                 46411
Size of BDD node cleanup queue:                        1264 (count: 57568, min: 0, max: 200, avg: 0.02)
Time for BDD node cleanup:                             0.012s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.524s
  Time for transition matches:                         0.266s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.001s
Automaton transfers with branching:                0
Automaton transfer successors:                       370015 (count: 370015, min: 1, max: 1, avg: 1.00) [1 x 370015]

CPA algorithm statistics
------------------------
Number of iterations:            216448
Max size of waitlist:            358
Average size of waitlist:        134
Number of computed successors:   259565
Max successors for one state:    2
Number of times merged:          27053
Number of times stopped:         40509
Number of times breaked:         22

Total time for CPA algorithm:        26.377s (Max:     2.107s)
  Time for choose from waitlist:      0.205s
  Time for precision adjustment:      9.856s
  Time for transfer relation:        13.041s
  Time for merge operator:            1.350s
  Time for stop operator:             0.436s
  Time for adding to reached set:     0.438s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   22
Avg. length of target path (in blocks):                 520 (count: 22, min: 8, max: 42, avg: 23.64)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.853s
  Counterexample analysis:                             0.220s (Max:     0.021s, Calls: 22)
    Refinement sat check:                              0.150s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.008s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.025s
  Precision update:                                    0.023s
  ARG update:                                          0.564s

Length of refined path (in blocks):                     325 (count: 22, min: 4, max: 39, avg: 14.77)
Number of affected states:                              245 (count: 22, min: 1, max: 37, avg: 11.14)
Length (states) of path with itp 'true':                 58 (count: 22, min: 1, max: 25, avg: 2.64)
Length (states) of path with itp non-trivial itp:       245 (count: 22, min: 1, max: 37, avg: 11.14)
Length (states) of path with itp 'false':                22 (count: 22, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 22, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:             223 (count: 22, min: 0, max: 36, avg: 10.14)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                22
Number of successful refinements:     22
Number of failed refinements:         0
Max. size of reached set before ref.: 21951
Max. size of reached set after ref.:  7290
Avg. size of reached set before ref.: 9750.55
Avg. size of reached set after ref.:  338.18

Total time for CEGAR algorithm:      27.468s
Time for refinements:                 1.071s
Average time for refinement:          0.048s
Max time for refinement:              0.138s

Code Coverage
-----------------------------
  Function coverage:      0.300
  Visited lines:          1313
  Total lines:            2094
  Line coverage:          0.627
  Visited conditions:     316
  Total conditions:       632
  Condition coverage:     0.500

CPAchecker general statistics
-----------------------------
Number of program locations:     2853
Number of CFA edges:             3225
Number of relevant variables:    327
Number of functions:             100
Number of loops:                 9
Size of reached set:             11710
  Number of reached locations:   628 (22%)
    Avg states per location:     18
    Max states per location:     216 (at node N106)
  Number of reached functions:   30 (30%)
  Number of partitions:          11689
    Avg size of partitions:      1
    Max size of partitions:      14 (with key [N1133 (before line 5355), Function main called from node N1108, stack depth 1 [34b9fc7d], stack [main]])
  Number of target states:       0
  Size of final wait list        344

Time for analysis setup:          2.883s
  Time for loading CPAs:          0.614s
  Time for loading parser:        0.384s
  Time for CFA construction:      1.832s
    Time for parsing file(s):     0.542s
    Time for AST to CFA:          0.567s
    Time for CFA sanity check:    0.157s
    Time for post-processing:     0.475s
      Time for var class.:        0.214s
Time for Analysis:               27.468s
CPU time for analysis:           27.470s
Total time for CPAchecker:       30.354s
Total CPU time for CPAchecker:   30.350s
Time for statistics:              0.208s

Time for Garbage Collector:       1.204s (in 52 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                198MB (   188 MiB) max;     97MB (    93 MiB) avg;    210MB (   201 MiB) peak
Used non-heap memory:             40MB (    39 MiB) max;     37MB (    35 MiB) avg;     41MB (    39 MiB) peak
Allocated heap memory:           255MB (   243 MiB) max;    255MB (   243 MiB) avg
Allocated non-heap memory:        42MB (    40 MiB) max;     38MB (    37 MiB) avg
Total process virtual memory:  12082MB ( 11522 MiB) max;  12073MB ( 11514 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
