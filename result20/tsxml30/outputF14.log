scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 9600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-drivers--platform--x86--ideapad-laptop.ko-main.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 9600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_2e391fii/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker 1.6.1-svn 6608050+ (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 5977: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function seq_lseek to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function seq_read to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function single_release to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_complete_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_suspend_noirq_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_suspend_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_restore_noirq_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_poweroff_late_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_poweroff_noirq_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_poweroff_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_thaw_noirq_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_freeze_late_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_freeze_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_prepare_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_freeze_noirq_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_resume_noirq_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_thaw_early_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_resume_early_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_restore_early_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_suspend_late_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function acpi_bus_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function acpi_bus_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function single_open to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function backlight_device_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function acpi_evaluate_integer to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function acpi_evaluate_object to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function schedule to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sparse_keymap_free to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_unregister_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rfkill_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rfkill_destroy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function debugfs_remove_recursive to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rfkill_set_hw_state to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_alloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sysfs_remove_group to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function i8042_command to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sysfs_create_group to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_del to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_put to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function debugfs_create_dir to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function debugfs_create_file to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sparse_keymap_report_event to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function backlight_force_update to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sparse_keymap_setup to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_register_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_free_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rfkill_alloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rfkill_init_sw_state to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rfkill_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function acpi_video_backlight_support to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function backlight_device_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 4007: Ignoring function call through function pointer *(bd->ops->update_status): (*(bd->ops->update_status))(bd); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            1169021 (12% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  994860 (85%)
  Because of loop head:            173610 (15%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         551 (0%)
  Times precision was empty:       125879 (11%)
  Times precision was {false}:     2982 (0%)
  Times result was cached:         1027386 (88%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      12774 (1%)
  Times result was 'false':        14770 (1%)
Number of strengthen sat checks:   0
Number of coverage checks:         1906166
  BDD entailment checks:           487146
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       78
Number of predicates discovered:          18
Number of abstraction locations:          161
Max number of predicates per location:    16
Avg number of predicates per location:    6
Total predicates per abstraction:         5776165
Max number of predicates per abstraction: 16
Avg number of predicates per abstraction: 366.60
Number of irrelevant predicates:          1436114 (25%)
Number of preds handled by boolean abs:   53585 (1%)
  Total number of models for allsat:      95664
  Max number of models for allsat:        768
  Avg number of models for allsat:        7.49

Time for post operator:                 37.579s
  Time for path formula creation:       35.819s
Time for strengthen operator:            4.342s
Time for prec operator:                205.173s
  Time for abstraction:                196.622s (Max:     0.646s, Count: 1169021)
    Boolean abstraction:                46.190s
    Solving time:                        7.390s (Max:     0.019s)
    Model enumeration time:             37.847s
    Time for BDD construction:           1.321s (Max:     0.030s)
Time for merge operator:                 4.202s
Time for coverage check:                 0.364s
  Time for BDD entailment checks:        0.277s
Total time for SMT solver (w/o itp):    45.237s

Number of path formula cache hits:   10583735 (93%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    18.136s

Total number of created targets for pointer analysis: 55444
   Number of created targets for uf: *(struct_backlight_device)* is 13
   Number of created targets for uf: *(struct_dentry)* is 386
   Number of created targets for uf: *signed_int is 355
   Number of created targets for uf: *unsigned_long_long_int is 4
   Number of created targets for uf: *(struct_platform_device)* is 160
   Number of created targets for uf: *(struct_rfkill)* is 1027
   Number of created targets for uf: *unsigned_long_int is 289


Number of BDD nodes:                               85309
Size of BDD node table:                            464047
Size of BDD cache:                                 46411
Size of BDD node cleanup queue:                       28347 (count: 708404, min: 0, max: 445, avg: 0.04)
Time for BDD node cleanup:                             0.054s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  6.067s
  Time for transition matches:                         3.230s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.005s
Automaton transfers with branching:                0
Automaton transfer successors:                      9673179 (count: 9673179, min: 1, max: 1, avg: 1.00) [1 x 9673179]

CPA algorithm statistics
------------------------
Number of iterations:            5760104
Max size of waitlist:            289
Average size of waitlist:        95
Number of computed successors:   6867238
Max successors for one state:    2
Number of times merged:          709510
Number of times stopped:         1031108
Number of times breaked:         551

Total time for CPA algorithm:       343.168s (Max:     5.224s)
  Time for choose from waitlist:      1.473s
  Time for precision adjustment:    230.311s
  Time for transfer relation:        84.006s
  Time for merge operator:            9.095s
  Time for stop operator:             4.131s
  Time for adding to reached set:     6.013s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   551
Avg. length of target path (in blocks):               24904 (count: 551, min: 8, max: 122, avg: 45.20)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  11.743s
  Counterexample analysis:                             5.167s (Max:     0.027s, Calls: 551)
    Refinement sat check:                              3.565s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.005s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.122s
  Precision update:                                    0.211s
  ARG update:                                          6.093s

Length of refined path (in blocks):                   22014 (count: 551, min: 4, max: 98, avg: 39.95)
Number of affected states:                            13344 (count: 551, min: 1, max: 97, avg: 24.22)
Length (states) of path with itp 'true':               8119 (count: 551, min: 0, max: 71, avg: 14.74)
Length (states) of path with itp non-trivial itp:     13344 (count: 551, min: 1, max: 97, avg: 24.22)
Length (states) of path with itp 'false':               551 (count: 551, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 551, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:           12793 (count: 551, min: 0, max: 96, avg: 23.22)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                551
Number of successful refinements:     551
Number of failed refinements:         0
Max. size of reached set before ref.: 41461
Max. size of reached set after ref.:  39226
Avg. size of reached set before ref.: 14971.90
Avg. size of reached set after ref.:  4424.28

Total time for CEGAR algorithm:     359.803s
Time for refinements:                15.492s
Average time for refinement:          0.028s
Max time for refinement:              0.227s

Code Coverage
-----------------------------
  Function coverage:      0.550
  Visited lines:          1720
  Total lines:            2094
  Line coverage:          0.821
  Visited conditions:     464
  Total conditions:       632
  Condition coverage:     0.734

CPAchecker general statistics
-----------------------------
Number of program locations:     2853
Number of CFA edges:             3225
Number of relevant variables:    327
Number of functions:             100
Number of loops:                 9
Size of reached set:             9622
  Number of reached locations:   1097 (38%)
    Avg states per location:     8
    Max states per location:     332 (at node N106)
  Number of reached functions:   55 (55%)
  Number of partitions:          9618
    Avg size of partitions:      1
    Max size of partitions:      4 (with key [N1133 (before line 5355), Function main called from node N1108, stack depth 1 [cda0432], stack [main]])
  Number of target states:       0

Time for analysis setup:          2.924s
  Time for loading CPAs:          0.579s
  Time for loading parser:        0.383s
  Time for CFA construction:      1.887s
    Time for parsing file(s):     0.524s
    Time for AST to CFA:          0.584s
    Time for CFA sanity check:    0.194s
    Time for post-processing:     0.508s
      Time for var class.:        0.219s
Time for Analysis:              359.803s
CPU time for analysis:          359.800s
Time for analyzing result:        0.006s
Total time for CPAchecker:      362.729s
Total CPU time for CPAchecker:  362.720s
Time for statistics:              0.171s

Time for Garbage Collector:      24.295s (in 1425 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                538MB (   513 MiB) max;    216MB (   206 MiB) avg;    581MB (   554 MiB) peak
Used non-heap memory:             40MB (    38 MiB) max;     38MB (    37 MiB) avg;     40MB (    38 MiB) peak
Allocated heap memory:           718MB (   685 MiB) max;    349MB (   332 MiB) avg
Allocated non-heap memory:        41MB (    39 MiB) max;     41MB (    39 MiB) avg
Total process virtual memory:  12216MB ( 11650 MiB) max;  12114MB ( 11553 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
