scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 9600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-32_7a-drivers--net--ethernet--realtek--atp.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 9600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_x93y0yey/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker 1.6.1-svn 6608050+ (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 6040: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_handler_precall to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function alloc_etherdev_mqs to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __raw_spin_lock_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function register_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function add_timer to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function request_threaded_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function unregister_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netpoll_trap to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __netif_schedule to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function init_timer_key to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function del_timer_sync to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __netdev_alloc_skb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function skb_put to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netif_rx to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function consume_skb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            824720 (33% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  792349 (96%)
  Because of loop head:            32141 (4%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         230 (0%)
  Times precision was empty:       64782 (8%)
  Times precision was {false}:     840 (0%)
  Times result was cached:         755363 (92%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      3735 (0%)
  Times result was 'false':        2859 (0%)
Number of strengthen sat checks:   0
Number of coverage checks:         78145
  BDD entailment checks:           49247
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       22
Number of predicates discovered:          7
Number of abstraction locations:          292
Max number of predicates per location:    7
Avg number of predicates per location:    4
Total predicates per abstraction:         3698643
Max number of predicates per abstraction: 7
Avg number of predicates per abstraction: 808.45
Number of irrelevant predicates:          2107454 (57%)
Number of preds handled by boolean abs:   9286 (0%)
  Total number of models for allsat:      4026
  Max number of models for allsat:        3
  Avg number of models for allsat:        1.08

Time for post operator:                  4.960s
  Time for path formula creation:        4.451s
Time for strengthen operator:            1.364s
Time for prec operator:                 69.789s
  Time for abstraction:                 66.145s (Max:     0.028s, Count: 824720)
    Boolean abstraction:                 1.143s
    Solving time:                        0.921s (Max:     0.014s)
    Model enumeration time:              0.117s
    Time for BDD construction:           0.105s (Max:     0.012s)
Time for merge operator:                 0.078s
Time for coverage check:                 0.063s
  Time for BDD entailment checks:        0.055s
Total time for SMT solver (w/o itp):     1.038s

Number of path formula cache hits:   3271442 (98%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     2.026s

Total number of created targets for pointer analysis: 812
   Number of created targets for uf: *signed_int is 31


Number of BDD nodes:                               387
Size of BDD node table:                            464047
Size of BDD cache:                                 46411
Size of BDD node cleanup queue:                        7791 (count: 141156, min: 0, max: 122, avg: 0.06)
Time for BDD node cleanup:                             0.010s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  1.898s
  Time for transition matches:                         1.012s
  Time for transition assertions:                      0.001s
  Time for transition actions:                         0.002s
Automaton transfers with branching:                0
Automaton transfer successors:                      2529568 (count: 2529568, min: 1, max: 1, avg: 1.00) [1 x 2529568]

CPA algorithm statistics
------------------------
Number of iterations:            1932647
Max size of waitlist:            34
Average size of waitlist:        14
Number of computed successors:   1985165
Max successors for one state:    2
Number of times merged:          14449
Number of times stopped:         45667
Number of times breaked:         230

Total time for CPA algorithm:       116.211s (Max:     1.528s)
  Time for choose from waitlist:      0.358s
  Time for precision adjustment:     77.500s
  Time for transfer relation:        32.054s
  Time for merge operator:            0.286s
  Time for stop operator:             1.336s
  Time for adding to reached set:     1.792s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   230
Avg. length of target path (in blocks):               28312 (count: 230, min: 9, max: 280, avg: 123.10)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   4.866s
  Counterexample analysis:                             2.474s (Max:     0.040s, Calls: 230)
    Refinement sat check:                              1.006s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.005s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.139s
  Precision update:                                    0.202s
  ARG update:                                          1.918s

Length of refined path (in blocks):                   27588 (count: 230, min: 8, max: 276, avg: 119.95)
Number of affected states:                            26642 (count: 230, min: 6, max: 274, avg: 115.83)
Length (states) of path with itp 'true':                716 (count: 230, min: 0, max: 212, avg: 3.11)
Length (states) of path with itp non-trivial itp:     26642 (count: 230, min: 6, max: 274, avg: 115.83)
Length (states) of path with itp 'false':               230 (count: 230, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 230, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:           26412 (count: 230, min: 5, max: 273, avg: 114.83)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                230
Number of successful refinements:     230
Number of failed refinements:         0
Max. size of reached set before ref.: 22308
Max. size of reached set after ref.:  16712
Avg. size of reached set before ref.: 9078.29
Avg. size of reached set after ref.:  722.43

Total time for CEGAR algorithm:     122.158s
Time for refinements:                 5.865s
Average time for refinement:          0.025s
Max time for refinement:              0.079s

Code Coverage
-----------------------------
  Function coverage:      0.651
  Visited lines:          1626
  Total lines:            1796
  Line coverage:          0.905
  Visited conditions:     200
  Total conditions:       272
  Condition coverage:     0.735

CPAchecker general statistics
-----------------------------
Number of program locations:     2282
Number of CFA edges:             2579
Number of relevant variables:    192
Number of functions:             83
Number of loops:                 23
Size of reached set:             14792
  Number of reached locations:   869 (38%)
    Avg states per location:     17
    Max states per location:     2216 (at node N39)
  Number of reached functions:   54 (65%)
  Number of partitions:          14723
    Avg size of partitions:      1
    Max size of partitions:      3 (with key [N381 (before line 5092), Function atp_probe1 called from node N289, stack depth 4 [146b60e1], stack [main, atp_init_module, atp_init, atp_probe1]])
  Number of target states:       0

Time for analysis setup:          2.833s
  Time for loading CPAs:          0.549s
  Time for loading parser:        0.350s
  Time for CFA construction:      1.883s
    Time for parsing file(s):     0.560s
    Time for AST to CFA:          0.636s
    Time for CFA sanity check:    0.130s
    Time for post-processing:     0.431s
      Time for var class.:        0.185s
Time for Analysis:              122.158s
CPU time for analysis:          122.160s
Time for analyzing result:        0.007s
Total time for CPAchecker:      124.993s
Total CPU time for CPAchecker:  124.980s
Time for statistics:              0.219s

Time for Garbage Collector:       6.078s (in 662 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                246MB (   235 MiB) max;    126MB (   120 MiB) avg;    257MB (   245 MiB) peak
Used non-heap memory:             38MB (    36 MiB) max;     37MB (    35 MiB) avg;     38MB (    37 MiB) peak
Allocated heap memory:           255MB (   243 MiB) max;    255MB (   243 MiB) avg
Allocated non-heap memory:        40MB (    38 MiB) max;     39MB (    37 MiB) avg
Total process virtual memory:  12147MB ( 11584 MiB) max;  12144MB ( 11581 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
