scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 9600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-32_7a-drivers--net--ethernet--realtek--atp.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 9600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_k7yi_jot/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker 1.6.1-svn 6608050+ (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 6040: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_handler_precall to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function unregister_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function request_threaded_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function init_timer_key to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function add_timer to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function del_timer_sync to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function consume_skb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netpoll_trap to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __netif_schedule to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __netdev_alloc_skb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function skb_put to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netif_rx to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            143879 (32% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  136971 (95%)
  Because of loop head:            6774 (5%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         134 (0%)
  Times precision was empty:       3003 (2%)
  Times precision was {false}:     319 (0%)
  Times result was cached:         139011 (97%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      1546 (1%)
  Times result was 'false':        1300 (1%)
Number of strengthen sat checks:   0
Number of coverage checks:         13627
  BDD entailment checks:           7877
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       22
Number of predicates discovered:          5
Number of abstraction locations:          237
Max number of predicates per location:    5
Avg number of predicates per location:    3
Total predicates per abstraction:         539761
Max number of predicates per abstraction: 5
Avg number of predicates per abstraction: 289.42
Number of irrelevant predicates:          107411 (20%)
Number of preds handled by boolean abs:   3479 (1%)
  Total number of models for allsat:      1540
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.00

Time for post operator:                  1.474s
  Time for path formula creation:        1.379s
Time for strengthen operator:            0.280s
Time for prec operator:                 14.178s
  Time for abstraction:                 13.348s (Max:     0.023s, Count: 143879)
    Boolean abstraction:                 0.615s
    Solving time:                        0.467s (Max:     0.012s)
    Model enumeration time:              0.050s
    Time for BDD construction:           0.099s (Max:     0.017s)
Time for merge operator:                 0.017s
Time for coverage check:                 0.030s
  Time for BDD entailment checks:        0.026s
Total time for SMT solver (w/o itp):     0.517s

Number of path formula cache hits:   573686 (97%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.938s

Total number of created targets for pointer analysis: 222
   Number of created targets for uf: *signed_int is 11


Number of BDD nodes:                               224
Size of BDD node table:                            464047
Size of BDD cache:                                 46411
Size of BDD node cleanup queue:                        3136 (count: 21914, min: 0, max: 231, avg: 0.14)
Time for BDD node cleanup:                             0.004s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.481s
Automaton transfers with branching:                0
Automaton transfer successors:                       448278 (count: 448278, min: 1, max: 1, avg: 1.00) [1 x 448278]

CPA algorithm statistics
------------------------
Number of iterations:            342243
Max size of waitlist:            27
Average size of waitlist:        11
Number of computed successors:   354492
Max successors for one state:    2
Number of times merged:          2875
Number of times stopped:         8779
Number of times breaked:         134

Total time for CPA algorithm:        24.148s (Max:     0.569s)
  Time for choose from waitlist:      0.104s
  Time for precision adjustment:     15.724s
  Time for transfer relation:         6.607s
  Time for merge operator:            0.102s
  Time for stop operator:             0.383s
  Time for adding to reached set:     0.413s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   134
Avg. length of target path (in blocks):               21065 (count: 134, min: 9, max: 338, avg: 157.20)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   2.967s
  Counterexample analysis:                             2.098s (Max:     0.040s, Calls: 134)
    Refinement sat check:                              0.800s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.015s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.162s
  Precision update:                                    0.130s
  ARG update:                                          0.460s

Length of refined path (in blocks):                   20766 (count: 134, min: 8, max: 334, avg: 154.97)
Number of affected states:                            20531 (count: 134, min: 6, max: 332, avg: 153.22)
Length (states) of path with itp 'true':                101 (count: 134, min: 0, max: 1, avg: 0.75)
Length (states) of path with itp non-trivial itp:     20531 (count: 134, min: 6, max: 332, avg: 153.22)
Length (states) of path with itp 'false':               134 (count: 134, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 134, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:           20397 (count: 134, min: 5, max: 331, avg: 152.22)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                134
Number of successful refinements:     134
Number of failed refinements:         0
Max. size of reached set before ref.: 5398
Max. size of reached set after ref.:  6
Avg. size of reached set before ref.: 2573.46
Avg. size of reached set after ref.:  5.26

Total time for CEGAR algorithm:      27.426s
Time for refinements:                 3.272s
Average time for refinement:          0.024s
Max time for refinement:              0.069s

Code Coverage
-----------------------------
  Function coverage:      0.241
  Visited lines:          946
  Total lines:            1796
  Line coverage:          0.527
  Visited conditions:     46
  Total conditions:       272
  Condition coverage:     0.169

CPAchecker general statistics
-----------------------------
Number of program locations:     2282
Number of CFA edges:             2579
Number of relevant variables:    192
Number of functions:             83
Number of loops:                 23
Size of reached set:             276
  Number of reached locations:   173 (8%)
    Avg states per location:     1
    Max states per location:     22 (at node N39)
  Number of reached functions:   20 (24%)
  Number of partitions:          276
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0
  Size of final wait list        9

Time for analysis setup:          2.925s
  Time for loading CPAs:          0.596s
  Time for loading parser:        0.386s
  Time for CFA construction:      1.858s
    Time for parsing file(s):     0.582s
    Time for AST to CFA:          0.600s
    Time for CFA sanity check:    0.126s
    Time for post-processing:     0.432s
      Time for var class.:        0.180s
Time for Analysis:               27.426s
CPU time for analysis:           27.430s
Total time for CPAchecker:       30.353s
Total CPU time for CPAchecker:   30.350s
Time for statistics:              0.043s

Time for Garbage Collector:       0.669s (in 125 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                110MB (   105 MiB) max;     69MB (    66 MiB) avg;    115MB (   110 MiB) peak
Used non-heap memory:             37MB (    36 MiB) max;     35MB (    33 MiB) avg;     38MB (    36 MiB) peak
Allocated heap memory:           255MB (   243 MiB) max;    255MB (   243 MiB) avg
Allocated non-heap memory:        39MB (    38 MiB) max;     37MB (    35 MiB) avg
Total process virtual memory:  12080MB ( 11520 MiB) max;  12072MB ( 11513 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
