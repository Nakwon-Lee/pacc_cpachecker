scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 9600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-32_7a-drivers--net--ethernet--realtek--atp.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 9600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_575ft45o/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker 1.6.1-svn 6608050+ (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 6040: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_handler_precall to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function unregister_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function del_timer_sync to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function request_threaded_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function add_timer to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netpoll_trap to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __netif_schedule to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function init_timer_key to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function consume_skb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function alloc_etherdev_mqs to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __raw_spin_lock_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function register_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __netdev_alloc_skb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function skb_put to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netif_rx to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            399857 (32% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  382701 (96%)
  Because of loop head:            16959 (4%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         197 (0%)
  Times precision was empty:       13765 (3%)
  Times precision was {false}:     528 (0%)
  Times result was cached:         383249 (96%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      2315 (1%)
  Times result was 'false':        2384 (1%)
Number of strengthen sat checks:   0
Number of coverage checks:         40469
  BDD entailment checks:           25595
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       22
Number of predicates discovered:          7
Number of abstraction locations:          292
Max number of predicates per location:    7
Avg number of predicates per location:    3
Total predicates per abstraction:         1992080
Max number of predicates per abstraction: 7
Avg number of predicates per abstraction: 700.70
Number of irrelevant predicates:          869827 (44%)
Number of preds handled by boolean abs:   5487 (0%)
  Total number of models for allsat:      2530
  Max number of models for allsat:        3
  Avg number of models for allsat:        1.09

Time for post operator:                  2.691s
  Time for path formula creation:        2.298s
Time for strengthen operator:            0.776s
Time for prec operator:                 40.194s
  Time for abstraction:                 38.355s (Max:     0.028s, Count: 399857)
    Boolean abstraction:                 0.798s
    Solving time:                        0.601s (Max:     0.016s)
    Model enumeration time:              0.077s
    Time for BDD construction:           0.064s (Max:     0.007s)
Time for merge operator:                 0.076s
Time for coverage check:                 0.033s
  Time for BDD entailment checks:        0.027s
Total time for SMT solver (w/o itp):     0.678s

Number of path formula cache hits:   1598577 (98%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     1.213s

Total number of created targets for pointer analysis: 422
   Number of created targets for uf: *signed_int is 21


Number of BDD nodes:                               362
Size of BDD node table:                            464047
Size of BDD cache:                                 46411
Size of BDD node cleanup queue:                        4910 (count: 56341, min: 0, max: 248, avg: 0.09)
Time for BDD node cleanup:                             0.010s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  1.032s
  Time for transition matches:                         0.581s
  Time for transition assertions:                      0.001s
  Time for transition actions:                         0.001s
Automaton transfers with branching:                0
Automaton transfer successors:                      1231772 (count: 1231772, min: 1, max: 1, avg: 1.00) [1 x 1231772]

CPA algorithm statistics
------------------------
Number of iterations:            944578
Max size of waitlist:            20
Average size of waitlist:        7
Number of computed successors:   973118
Max successors for one state:    2
Number of times merged:          7437
Number of times stopped:         24050
Number of times breaked:         197

Total time for CPA algorithm:        63.698s (Max:     1.295s)
  Time for choose from waitlist:      0.259s
  Time for precision adjustment:     44.010s
  Time for transfer relation:        16.036s
  Time for merge operator:            0.206s
  Time for stop operator:             0.660s
  Time for adding to reached set:     0.984s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   197
Avg. length of target path (in blocks):               35034 (count: 197, min: 9, max: 483, avg: 177.84)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   5.395s
  Counterexample analysis:                             4.007s (Max:     0.111s, Calls: 197)
    Refinement sat check:                              1.176s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.016s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.182s
  Precision update:                                    0.150s
  ARG update:                                          0.858s

Length of refined path (in blocks):                   34485 (count: 197, min: 8, max: 482, avg: 175.05)
Number of affected states:                            33711 (count: 197, min: 6, max: 480, avg: 171.12)
Length (states) of path with itp 'true':                577 (count: 197, min: 0, max: 255, avg: 2.93)
Length (states) of path with itp non-trivial itp:     33711 (count: 197, min: 6, max: 480, avg: 171.12)
Length (states) of path with itp 'false':               197 (count: 197, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 197, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:           33514 (count: 197, min: 5, max: 479, avg: 170.12)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                197
Number of successful refinements:     197
Number of failed refinements:         0
Max. size of reached set before ref.: 14283
Max. size of reached set after ref.:  9752
Avg. size of reached set before ref.: 4913.90
Avg. size of reached set after ref.:  181.61

Total time for CEGAR algorithm:      69.626s
Time for refinements:                 5.895s
Average time for refinement:          0.029s
Max time for refinement:              0.152s

Code Coverage
-----------------------------
  Function coverage:      0.651
  Visited lines:          1626
  Total lines:            1796
  Line coverage:          0.905
  Visited conditions:     200
  Total conditions:       272
  Condition coverage:     0.735

CPAchecker general statistics
-----------------------------
Number of program locations:     2282
Number of CFA edges:             2579
Number of relevant variables:    192
Number of functions:             83
Number of loops:                 23
Size of reached set:             14424
  Number of reached locations:   869 (38%)
    Avg states per location:     16
    Max states per location:     2170 (at node N39)
  Number of reached functions:   54 (65%)
  Number of partitions:          14380
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N315 (before line 5015), Function atp_init called from node N1102, stack depth 3 [70149b18], stack [main, atp_init_module, atp_init]])
  Number of target states:       0

Time for analysis setup:          2.853s
  Time for loading CPAs:          0.546s
  Time for loading parser:        0.378s
  Time for CFA construction:      1.847s
    Time for parsing file(s):     0.582s
    Time for AST to CFA:          0.559s
    Time for CFA sanity check:    0.139s
    Time for post-processing:     0.441s
      Time for var class.:        0.192s
Time for Analysis:               69.626s
CPU time for analysis:           69.620s
Time for analyzing result:        0.015s
Total time for CPAchecker:       72.481s
Total CPU time for CPAchecker:   72.470s
Time for statistics:              0.214s

Time for Garbage Collector:       2.987s (in 354 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                247MB (   236 MiB) max;    109MB (   104 MiB) avg;    256MB (   244 MiB) peak
Used non-heap memory:             38MB (    37 MiB) max;     37MB (    35 MiB) avg;     39MB (    37 MiB) peak
Allocated heap memory:           255MB (   243 MiB) max;    255MB (   243 MiB) avg
Allocated non-heap memory:        41MB (    39 MiB) max;     39MB (    38 MiB) avg
Total process virtual memory:  12081MB ( 11522 MiB) max;  12076MB ( 11517 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
