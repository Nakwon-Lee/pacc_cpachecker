scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 9600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-32_7a-drivers--net--ethernet--realtek--atp.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 9600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_vc43oz51/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker 1.6.1-svn 6608050+ (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 6040: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_handler_precall to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function request_threaded_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function unregister_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function add_timer to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function del_timer_sync to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function alloc_etherdev_mqs to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netpoll_trap to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __netif_schedule to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function consume_skb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __netdev_alloc_skb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function skb_put to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function init_timer_key to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netif_rx to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __raw_spin_lock_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function register_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            558463 (32% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  531118 (95%)
  Because of loop head:            27024 (5%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         321 (0%)
  Times precision was empty:       36086 (6%)
  Times precision was {false}:     632 (0%)
  Times result was cached:         518923 (93%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      2822 (1%)
  Times result was 'false':        3285 (1%)
Number of strengthen sat checks:   0
Number of coverage checks:         64954
  BDD entailment checks:           42274
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       22
Number of predicates discovered:          7
Number of abstraction locations:          292
Max number of predicates per location:    7
Avg number of predicates per location:    4
Total predicates per abstraction:         2645404
Max number of predicates per abstraction: 7
Avg number of predicates per abstraction: 765.90
Number of irrelevant predicates:          1448284 (55%)
Number of preds handled by boolean abs:   6931 (0%)
  Total number of models for allsat:      3089
  Max number of models for allsat:        3
  Avg number of models for allsat:        1.09

Time for post operator:                  3.818s
  Time for path formula creation:        3.210s
Time for strengthen operator:            0.824s
Time for prec operator:                 49.305s
  Time for abstraction:                 46.540s (Max:     0.020s, Count: 558463)
    Boolean abstraction:                 1.047s
    Solving time:                        0.765s (Max:     0.012s)
    Model enumeration time:              0.097s
    Time for BDD construction:           0.103s (Max:     0.008s)
Time for merge operator:                 0.092s
Time for coverage check:                 0.052s
  Time for BDD entailment checks:        0.046s
Total time for SMT solver (w/o itp):     0.862s

Number of path formula cache hits:   2275733 (98%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     1.623s

Total number of created targets for pointer analysis: 332
   Number of created targets for uf: *signed_int is 31


Number of BDD nodes:                               380
Size of BDD node table:                            464047
Size of BDD cache:                                 46411
Size of BDD node cleanup queue:                        5962 (count: 99109, min: 0, max: 148, avg: 0.06)
Time for BDD node cleanup:                             0.019s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  1.391s
  Time for transition matches:                         0.803s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.002s
Automaton transfers with branching:                0
Automaton transfer successors:                      1768381 (count: 1768381, min: 1, max: 1, avg: 1.00) [1 x 1768381]

CPA algorithm statistics
------------------------
Number of iterations:            1330299
Max size of waitlist:            73
Average size of waitlist:        26
Number of computed successors:   1377576
Max successors for one state:    2
Number of times merged:          11340
Number of times stopped:         33365
Number of times breaked:         321

Total time for CPA algorithm:        81.035s (Max:     1.126s)
  Time for choose from waitlist:      0.331s
  Time for precision adjustment:     54.549s
  Time for transfer relation:        21.434s
  Time for merge operator:            0.282s
  Time for stop operator:             0.995s
  Time for adding to reached set:     1.251s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   321
Avg. length of target path (in blocks):               34536 (count: 321, min: 9, max: 277, avg: 107.59)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   4.856s
  Counterexample analysis:                             3.127s (Max:     0.036s, Calls: 321)
    Refinement sat check:                              1.396s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.009s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.200s
  Precision update:                                    0.155s
  ARG update:                                          1.254s

Length of refined path (in blocks):                   32701 (count: 321, min: 8, max: 276, avg: 101.87)
Number of affected states:                            30421 (count: 321, min: 6, max: 274, avg: 94.77)
Length (states) of path with itp 'true':               1959 (count: 321, min: 0, max: 59, avg: 6.10)
Length (states) of path with itp non-trivial itp:     30421 (count: 321, min: 6, max: 274, avg: 94.77)
Length (states) of path with itp 'false':               321 (count: 321, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 321, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:           30100 (count: 321, min: 5, max: 273, avg: 93.77)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                321
Number of successful refinements:     321
Number of failed refinements:         0
Max. size of reached set before ref.: 16475
Max. size of reached set after ref.:  10775
Avg. size of reached set before ref.: 5147.94
Avg. size of reached set after ref.:  1021.75

Total time for CEGAR algorithm:      86.886s
Time for refinements:                 5.672s
Average time for refinement:          0.017s
Max time for refinement:              0.070s

Code Coverage
-----------------------------
  Function coverage:      0.651
  Visited lines:          1626
  Total lines:            1796
  Line coverage:          0.905
  Visited conditions:     200
  Total conditions:       272
  Condition coverage:     0.735

CPAchecker general statistics
-----------------------------
Number of program locations:     2282
Number of CFA edges:             2579
Number of relevant variables:    192
Number of functions:             83
Number of loops:                 23
Size of reached set:             16420
  Number of reached locations:   869 (38%)
    Avg states per location:     18
    Max states per location:     2468 (at node N39)
  Number of reached functions:   54 (65%)
  Number of partitions:          16365
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N315 (before line 5015), Function atp_init called from node N1102, stack depth 3 [365704dd], stack [main, atp_init_module, atp_init]])
  Number of target states:       0

Time for analysis setup:          2.971s
  Time for loading CPAs:          0.611s
  Time for loading parser:        0.411s
  Time for CFA construction:      1.886s
    Time for parsing file(s):     0.582s
    Time for AST to CFA:          0.617s
    Time for CFA sanity check:    0.137s
    Time for post-processing:     0.432s
      Time for var class.:        0.181s
Time for Analysis:               86.886s
CPU time for analysis:           86.880s
Time for analyzing result:        0.008s
Total time for CPAchecker:       89.859s
Total CPU time for CPAchecker:   89.860s
Time for statistics:              0.245s

Time for Garbage Collector:       3.569s (in 460 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                212MB (   202 MiB) max;     91MB (    86 MiB) avg;    227MB (   216 MiB) peak
Used non-heap memory:             40MB (    38 MiB) max;     37MB (    35 MiB) avg;     40MB (    38 MiB) peak
Allocated heap memory:           255MB (   243 MiB) max;    255MB (   243 MiB) avg
Allocated non-heap memory:        41MB (    39 MiB) max;     40MB (    38 MiB) avg
Total process virtual memory:  12148MB ( 11585 MiB) max;  12143MB ( 11580 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
