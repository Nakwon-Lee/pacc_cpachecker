scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 9600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-32_7a-drivers--net--ethernet--realtek--atp.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 9600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_sbd63x57/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker 1.6.1-svn 6608050+ (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 6040: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_handler_precall to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function add_timer to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function request_threaded_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function unregister_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function del_timer_sync to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function alloc_etherdev_mqs to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netpoll_trap to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __netif_schedule to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function consume_skb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __netdev_alloc_skb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function skb_put to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function init_timer_key to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netif_rx to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __raw_spin_lock_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function register_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            603400 (32% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  575042 (95%)
  Because of loop head:            27964 (5%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         394 (0%)
  Times precision was empty:       39618 (7%)
  Times precision was {false}:     612 (0%)
  Times result was cached:         560179 (93%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      2991 (0%)
  Times result was 'false':        3221 (1%)
Number of strengthen sat checks:   0
Number of coverage checks:         65689
  BDD entailment checks:           44235
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       22
Number of predicates discovered:          7
Number of abstraction locations:          292
Max number of predicates per location:    7
Avg number of predicates per location:    4
Total predicates per abstraction:         2879253
Max number of predicates per abstraction: 7
Avg number of predicates per abstraction: 799.13
Number of irrelevant predicates:          1642175 (57%)
Number of preds handled by boolean abs:   7440 (0%)
  Total number of models for allsat:      3275
  Max number of models for allsat:        3
  Avg number of models for allsat:        1.09

Time for post operator:                  3.901s
  Time for path formula creation:        3.504s
Time for strengthen operator:            1.012s
Time for prec operator:                 52.662s
  Time for abstraction:                 49.887s (Max:     0.020s, Count: 603400)
    Boolean abstraction:                 1.068s
    Solving time:                        0.804s (Max:     0.012s)
    Model enumeration time:              0.105s
    Time for BDD construction:           0.107s (Max:     0.007s)
Time for merge operator:                 0.091s
Time for coverage check:                 0.074s
  Time for BDD entailment checks:        0.069s
Total time for SMT solver (w/o itp):     0.909s

Number of path formula cache hits:   2446816 (98%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     1.713s

Total number of created targets for pointer analysis: 322
   Number of created targets for uf: *signed_int is 21


Number of BDD nodes:                               369
Size of BDD node table:                            464047
Size of BDD cache:                                 46411
Size of BDD node cleanup queue:                        6287 (count: 105542, min: 0, max: 163, avg: 0.06)
Time for BDD node cleanup:                             0.012s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  1.403s
  Time for transition matches:                         0.774s
  Time for transition assertions:                      0.001s
  Time for transition actions:                         0.007s
Automaton transfers with branching:                0
Automaton transfer successors:                      1896852 (count: 1896852, min: 1, max: 1, avg: 1.00) [1 x 1896852]

CPA algorithm statistics
------------------------
Number of iterations:            1429536
Max size of waitlist:            75
Average size of waitlist:        28
Number of computed successors:   1477534
Max successors for one state:    2
Number of times merged:          10727
Number of times stopped:         33220
Number of times breaked:         394

Total time for CPA algorithm:        87.835s (Max:     1.145s)
  Time for choose from waitlist:      0.326s
  Time for precision adjustment:     58.242s
  Time for transfer relation:        24.114s
  Time for merge operator:            0.262s
  Time for stop operator:             1.043s
  Time for adding to reached set:     1.510s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   394
Avg. length of target path (in blocks):               39450 (count: 394, min: 9, max: 277, avg: 100.13)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   5.301s
  Counterexample analysis:                             3.348s (Max:     0.033s, Calls: 394)
    Refinement sat check:                              1.484s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.013s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.179s
  Precision update:                                    0.251s
  ARG update:                                          1.374s

Length of refined path (in blocks):                   37105 (count: 394, min: 8, max: 276, avg: 94.18)
Number of affected states:                            33745 (count: 394, min: 6, max: 274, avg: 85.65)
Length (states) of path with itp 'true':               2966 (count: 394, min: 0, max: 59, avg: 7.53)
Length (states) of path with itp non-trivial itp:     33745 (count: 394, min: 6, max: 274, avg: 85.65)
Length (states) of path with itp 'false':               394 (count: 394, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 394, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:           33351 (count: 394, min: 5, max: 273, avg: 84.65)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                394
Number of successful refinements:     394
Number of failed refinements:         0
Max. size of reached set before ref.: 16004
Max. size of reached set after ref.:  10987
Avg. size of reached set before ref.: 5365.96
Avg. size of reached set after ref.:  1749.94

Total time for CEGAR algorithm:      94.560s
Time for refinements:                 6.408s
Average time for refinement:          0.016s
Max time for refinement:              0.062s

Code Coverage
-----------------------------
  Function coverage:      0.651
  Visited lines:          1626
  Total lines:            1796
  Line coverage:          0.905
  Visited conditions:     200
  Total conditions:       272
  Condition coverage:     0.735

CPAchecker general statistics
-----------------------------
Number of program locations:     2282
Number of CFA edges:             2579
Number of relevant variables:    192
Number of functions:             83
Number of loops:                 23
Size of reached set:             16383
  Number of reached locations:   869 (38%)
    Avg states per location:     18
    Max states per location:     2468 (at node N39)
  Number of reached functions:   54 (65%)
  Number of partitions:          16330
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N315 (before line 5015), Function atp_init called from node N1102, stack depth 3 [449f02ce], stack [main, atp_init_module, atp_init]])
  Number of target states:       0

Time for analysis setup:          2.909s
  Time for loading CPAs:          0.553s
  Time for loading parser:        0.393s
  Time for CFA construction:      1.876s
    Time for parsing file(s):     0.563s
    Time for AST to CFA:          0.619s
    Time for CFA sanity check:    0.141s
    Time for post-processing:     0.431s
      Time for var class.:        0.189s
Time for Analysis:               94.561s
CPU time for analysis:           94.570s
Time for analyzing result:        0.009s
Total time for CPAchecker:       97.476s
Total CPU time for CPAchecker:   97.480s
Time for statistics:              0.232s

Time for Garbage Collector:       4.044s (in 504 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                226MB (   215 MiB) max;     97MB (    92 MiB) avg;    244MB (   232 MiB) peak
Used non-heap memory:             39MB (    37 MiB) max;     37MB (    36 MiB) avg;     40MB (    38 MiB) peak
Allocated heap memory:           255MB (   243 MiB) max;    255MB (   243 MiB) avg
Allocated non-heap memory:        41MB (    39 MiB) max;     40MB (    38 MiB) avg
Total process virtual memory:  12080MB ( 11521 MiB) max;  12076MB ( 11517 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
