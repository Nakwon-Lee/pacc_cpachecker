scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 9600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-32_7a-drivers--net--ethernet--realtek--atp.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 9600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_v6n5x_xq/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker 1.6.1-svn 6608050+ (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 6040: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_handler_precall to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function request_threaded_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function unregister_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function init_timer_key to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function add_timer to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function del_timer_sync to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function consume_skb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netpoll_trap to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __netif_schedule to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __netdev_alloc_skb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function skb_put to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netif_rx to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function alloc_etherdev_mqs to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __raw_spin_lock_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function register_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            422784 (33% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  403928 (96%)
  Because of loop head:            18647 (4%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         209 (0%)
  Times precision was empty:       3969 (1%)
  Times precision was {false}:     570 (0%)
  Times result was cached:         415184 (98%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      3061 (1%)
  Times result was 'false':        2275 (1%)
Number of strengthen sat checks:   0
Number of coverage checks:         34746
  BDD entailment checks:           20670
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       22
Number of predicates discovered:          7
Number of abstraction locations:          292
Max number of predicates per location:    7
Avg number of predicates per location:    4
Total predicates per abstraction:         1974048
Max number of predicates per abstraction: 7
Avg number of predicates per abstraction: 543.67
Number of irrelevant predicates:          638607 (32%)
Number of preds handled by boolean abs:   7722 (0%)
  Total number of models for allsat:      3216
  Max number of models for allsat:        3
  Avg number of models for allsat:        1.05

Time for post operator:                  2.985s
  Time for path formula creation:        2.663s
Time for strengthen operator:            0.602s
Time for prec operator:                 43.002s
  Time for abstraction:                 40.979s (Max:     0.023s, Count: 422784)
    Boolean abstraction:                 1.046s
    Solving time:                        0.830s (Max:     0.009s)
    Model enumeration time:              0.105s
    Time for BDD construction:           0.150s (Max:     0.012s)
Time for merge operator:                 0.058s
Time for coverage check:                 0.054s
  Time for BDD entailment checks:        0.041s
Total time for SMT solver (w/o itp):     0.935s

Number of path formula cache hits:   1673286 (97%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     1.428s

Total number of created targets for pointer analysis: 1062
   Number of created targets for uf: *signed_int is 141


Number of BDD nodes:                               349
Size of BDD node table:                            464047
Size of BDD cache:                                 46411
Size of BDD node cleanup queue:                        6437 (count: 46116, min: 0, max: 270, avg: 0.14)
Time for BDD node cleanup:                             0.014s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  1.117s
  Time for transition matches:                         0.576s
  Time for transition assertions:                      0.001s
  Time for transition actions:                         0.001s
Automaton transfers with branching:                0
Automaton transfer successors:                      1298268 (count: 1298268, min: 1, max: 1, avg: 1.00) [1 x 1298268]

CPA algorithm statistics
------------------------
Number of iterations:            993562
Max size of waitlist:            28
Average size of waitlist:        11
Number of computed successors:   1023090
Max successors for one state:    2
Number of times merged:          7038
Number of times stopped:         24271
Number of times breaked:         209

Total time for CPA algorithm:        68.072s (Max:     1.023s)
  Time for choose from waitlist:      0.304s
  Time for precision adjustment:     46.911s
  Time for transfer relation:        17.054s
  Time for merge operator:            0.226s
  Time for stop operator:             0.707s
  Time for adding to reached set:     1.053s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   209
Avg. length of target path (in blocks):               30009 (count: 209, min: 9, max: 344, avg: 143.58)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   4.517s
  Counterexample analysis:                             3.050s (Max:     0.060s, Calls: 209)
    Refinement sat check:                              1.147s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.019s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.199s
  Precision update:                                    0.122s
  ARG update:                                          0.981s

Length of refined path (in blocks):                   29161 (count: 209, min: 8, max: 340, avg: 139.53)
Number of affected states:                            28550 (count: 209, min: 6, max: 338, avg: 136.60)
Length (states) of path with itp 'true':                402 (count: 209, min: 0, max: 59, avg: 1.92)
Length (states) of path with itp non-trivial itp:     28550 (count: 209, min: 6, max: 338, avg: 136.60)
Length (states) of path with itp 'false':               209 (count: 209, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 209, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:           28341 (count: 209, min: 5, max: 337, avg: 135.60)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                209
Number of successful refinements:     209
Number of failed refinements:         0
Max. size of reached set before ref.: 12513
Max. size of reached set after ref.:  11220
Avg. size of reached set before ref.: 5046.42
Avg. size of reached set after ref.:  338.00

Total time for CEGAR algorithm:      73.281s
Time for refinements:                 5.139s
Average time for refinement:          0.024s
Max time for refinement:              0.093s

Code Coverage
-----------------------------
  Function coverage:      0.651
  Visited lines:          1626
  Total lines:            1796
  Line coverage:          0.905
  Visited conditions:     200
  Total conditions:       272
  Condition coverage:     0.735

CPAchecker general statistics
-----------------------------
Number of program locations:     2282
Number of CFA edges:             2579
Number of relevant variables:    192
Number of functions:             83
Number of loops:                 23
Size of reached set:             12487
  Number of reached locations:   869 (38%)
    Avg states per location:     14
    Max states per location:     1851 (at node N39)
  Number of reached functions:   54 (65%)
  Number of partitions:          12465
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N1106 (before line 5864), Function atp_init_module called from node N1146, stack depth 2 [3bf200ef], stack [main, atp_init_module]])
  Number of target states:       0

Time for analysis setup:          2.971s
  Time for loading CPAs:          0.601s
  Time for loading parser:        0.396s
  Time for CFA construction:      1.881s
    Time for parsing file(s):     0.559s
    Time for AST to CFA:          0.622s
    Time for CFA sanity check:    0.144s
    Time for post-processing:     0.439s
      Time for var class.:        0.189s
Time for Analysis:               73.281s
CPU time for analysis:           73.280s
Time for analyzing result:        0.007s
Total time for CPAchecker:       76.261s
Total CPU time for CPAchecker:   76.250s
Time for statistics:              0.194s

Time for Garbage Collector:       2.639s (in 379 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                183MB (   175 MiB) max;     84MB (    80 MiB) avg;    193MB (   184 MiB) peak
Used non-heap memory:             39MB (    37 MiB) max;     37MB (    35 MiB) avg;     39MB (    38 MiB) peak
Allocated heap memory:           255MB (   243 MiB) max;    255MB (   243 MiB) avg
Allocated non-heap memory:        41MB (    39 MiB) max;     39MB (    38 MiB) avg
Total process virtual memory:  12080MB ( 11521 MiB) max;  12076MB ( 11516 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
