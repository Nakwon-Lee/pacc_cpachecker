scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 9600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-32_7a-drivers--net--ethernet--realtek--atp.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 9600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_n5osiacd/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker 1.6.1-svn 6608050+ (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 6040: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_handler_precall to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function unregister_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function add_timer to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function request_threaded_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netpoll_trap to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __netif_schedule to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function consume_skb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function del_timer_sync to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function init_timer_key to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __netdev_alloc_skb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function skb_put to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netif_rx to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            129892 (30% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  122541 (94%)
  Because of loop head:            7211 (6%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         140 (0%)
  Times precision was empty:       8507 (7%)
  Times precision was {false}:     390 (0%)
  Times result was cached:         119520 (92%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      1475 (1%)
  Times result was 'false':        1410 (1%)
Number of strengthen sat checks:   0
Number of coverage checks:         14069
  BDD entailment checks:           7063
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       22
Number of predicates discovered:          6
Number of abstraction locations:          220
Max number of predicates per location:    6
Avg number of predicates per location:    4
Total predicates per abstraction:         535774
Max number of predicates per abstraction: 6
Avg number of predicates per abstraction: 287.28
Number of irrelevant predicates:          129339 (24%)
Number of preds handled by boolean abs:   3403 (1%)
  Total number of models for allsat:      1490
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.01

Time for post operator:                  1.797s
  Time for path formula creation:        1.662s
Time for strengthen operator:            0.283s
Time for prec operator:                 14.232s
  Time for abstraction:                 13.575s (Max:     0.015s, Count: 129892)
    Boolean abstraction:                 0.614s
    Solving time:                        0.479s (Max:     0.012s)
    Model enumeration time:              0.048s
    Time for BDD construction:           0.092s (Max:     0.012s)
Time for merge operator:                 0.082s
Time for coverage check:                 0.043s
  Time for BDD entailment checks:        0.042s
Total time for SMT solver (w/o itp):     0.527s

Number of path formula cache hits:   534841 (96%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     1.271s

Total number of created targets for pointer analysis: 182
   Number of created targets for uf: *signed_int is 31


Number of BDD nodes:                               245
Size of BDD node table:                            464047
Size of BDD cache:                                 46411
Size of BDD node cleanup queue:                        2988 (count: 26553, min: 0, max: 268, avg: 0.11)
Time for BDD node cleanup:                             0.006s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.535s
  Time for transition matches:                         0.273s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.001s
Automaton transfers with branching:                0
Automaton transfer successors:                       428660 (count: 428660, min: 1, max: 1, avg: 1.00) [1 x 428660]

CPA algorithm statistics
------------------------
Number of iterations:            315223
Max size of waitlist:            41
Average size of waitlist:        17
Number of computed successors:   328814
Max successors for one state:    2
Number of times merged:          3503
Number of times stopped:         8467
Number of times breaked:         140

Total time for CPA algorithm:        23.945s (Max:     0.542s)
  Time for choose from waitlist:      0.144s
  Time for precision adjustment:     15.577s
  Time for transfer relation:         6.604s
  Time for merge operator:            0.173s
  Time for stop operator:             0.364s
  Time for adding to reached set:     0.393s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   140
Avg. length of target path (in blocks):               19926 (count: 140, min: 9, max: 302, avg: 142.33)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   2.705s
  Counterexample analysis:                             1.999s (Max:     0.042s, Calls: 140)
    Refinement sat check:                              0.783s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.014s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.099s
  Precision update:                                    0.095s
  ARG update:                                          0.397s

Length of refined path (in blocks):                   19202 (count: 140, min: 8, max: 298, avg: 137.16)
Number of affected states:                            18782 (count: 140, min: 6, max: 296, avg: 134.16)
Length (states) of path with itp 'true':                280 (count: 140, min: 0, max: 59, avg: 2.00)
Length (states) of path with itp non-trivial itp:     18782 (count: 140, min: 6, max: 296, avg: 134.16)
Length (states) of path with itp 'false':               140 (count: 140, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 140, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:           18642 (count: 140, min: 5, max: 295, avg: 133.16)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                140
Number of successful refinements:     140
Number of failed refinements:         0
Max. size of reached set before ref.: 5074
Max. size of reached set after ref.:  1572
Avg. size of reached set before ref.: 2308.84
Avg. size of reached set after ref.:  38.83

Total time for CEGAR algorithm:      26.970s
Time for refinements:                 3.012s
Average time for refinement:          0.021s
Max time for refinement:              0.063s

Code Coverage
-----------------------------
  Function coverage:      0.494
  Visited lines:          1227
  Total lines:            1796
  Line coverage:          0.683
  Visited conditions:     106
  Total conditions:       272
  Condition coverage:     0.390

CPAchecker general statistics
-----------------------------
Number of program locations:     2282
Number of CFA edges:             2579
Number of relevant variables:    192
Number of functions:             83
Number of loops:                 23
Size of reached set:             1137
  Number of reached locations:   417 (18%)
    Avg states per location:     2
    Max states per location:     133 (at node N40)
  Number of reached functions:   41 (49%)
  Number of partitions:          1137
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0
  Size of final wait list        20

Time for analysis setup:          2.869s
  Time for loading CPAs:          0.561s
  Time for loading parser:        0.372s
  Time for CFA construction:      1.856s
    Time for parsing file(s):     0.546s
    Time for AST to CFA:          0.631s
    Time for CFA sanity check:    0.132s
    Time for post-processing:     0.429s
      Time for var class.:        0.177s
Time for Analysis:               26.970s
CPU time for analysis:           26.970s
Total time for CPAchecker:       29.848s
Total CPU time for CPAchecker:   29.840s
Time for statistics:              0.061s

Time for Garbage Collector:       0.653s (in 119 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                111MB (   105 MiB) max;     69MB (    66 MiB) avg;    117MB (   111 MiB) peak
Used non-heap memory:             38MB (    36 MiB) max;     35MB (    34 MiB) avg;     38MB (    37 MiB) peak
Allocated heap memory:           255MB (   243 MiB) max;    255MB (   243 MiB) avg
Allocated non-heap memory:        40MB (    38 MiB) max;     38MB (    36 MiB) avg
Total process virtual memory:  12081MB ( 11521 MiB) max;  12073MB ( 11514 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
