scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 9600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-32_7a-drivers--net--ethernet--realtek--atp.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 9600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_nyljjfi1/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker 1.6.1-svn 6608050+ (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 6040: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_handler_precall to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function request_threaded_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function unregister_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function add_timer to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function del_timer_sync to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function alloc_etherdev_mqs to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netpoll_trap to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __netif_schedule to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function consume_skb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __netdev_alloc_skb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function skb_put to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function init_timer_key to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netif_rx to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            140189 (30% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  132208 (94%)
  Because of loop head:            7803 (6%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         178 (0%)
  Times precision was empty:       20152 (14%)
  Times precision was {false}:     296 (0%)
  Times result was cached:         118652 (85%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      1089 (1%)
  Times result was 'false':        1397 (1%)
Number of strengthen sat checks:   0
Number of coverage checks:         19779
  BDD entailment checks:           12757
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       22
Number of predicates discovered:          6
Number of abstraction locations:          191
Max number of predicates per location:    6
Avg number of predicates per location:    3
Total predicates per abstraction:         575835
Max number of predicates per abstraction: 6
Avg number of predicates per abstraction: 415.77
Number of irrelevant predicates:          381995 (66%)
Number of preds handled by boolean abs:   2563 (0%)
  Total number of models for allsat:      1101
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.01

Time for post operator:                  1.912s
  Time for path formula creation:        1.799s
Time for strengthen operator:            0.292s
Time for prec operator:                 13.413s
  Time for abstraction:                 12.418s (Max:     0.021s, Count: 140189)
    Boolean abstraction:                 0.577s
    Solving time:                        0.386s (Max:     0.013s)
    Model enumeration time:              0.052s
    Time for BDD construction:           0.087s (Max:     0.009s)
Time for merge operator:                 0.045s
Time for coverage check:                 0.032s
  Time for BDD entailment checks:        0.028s
Total time for SMT solver (w/o itp):     0.438s

Number of path formula cache hits:   584006 (97%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     1.193s

Total number of created targets for pointer analysis: 112
   Number of created targets for uf: *signed_int is 11


Number of BDD nodes:                               274
Size of BDD node table:                            464047
Size of BDD cache:                                 46411
Size of BDD node cleanup queue:                        2328 (count: 41145, min: 0, max: 151, avg: 0.06)
Time for BDD node cleanup:                             0.007s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.535s
  Time for transition matches:                         0.268s
  Time for transition assertions:                      0.001s
  Time for transition actions:                         0.001s
Automaton transfers with branching:                0
Automaton transfer successors:                       463755 (count: 463755, min: 1, max: 1, avg: 1.00) [1 x 463755]

CPA algorithm statistics
------------------------
Number of iterations:            341680
Max size of waitlist:            73
Average size of waitlist:        24
Number of computed successors:   357432
Max successors for one state:    2
Number of times merged:          3511
Number of times stopped:         9174
Number of times breaked:         178

Total time for CPA algorithm:        24.650s (Max:     0.472s)
  Time for choose from waitlist:      0.138s
  Time for precision adjustment:     15.293s
  Time for transfer relation:         7.367s
  Time for merge operator:            0.153s
  Time for stop operator:             0.310s
  Time for adding to reached set:     0.373s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   178
Avg. length of target path (in blocks):               12536 (count: 178, min: 9, max: 132, avg: 70.43)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   2.224s
  Counterexample analysis:                             1.390s (Max:     0.021s, Calls: 178)
    Refinement sat check:                              0.771s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.001s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.082s
  Precision update:                                    0.111s
  ARG update:                                          0.516s

Length of refined path (in blocks):                   11802 (count: 178, min: 8, max: 131, avg: 66.30)
Number of affected states:                            10553 (count: 178, min: 6, max: 129, avg: 59.29)
Length (states) of path with itp 'true':               1071 (count: 178, min: 0, max: 16, avg: 6.02)
Length (states) of path with itp non-trivial itp:     10553 (count: 178, min: 6, max: 129, avg: 59.29)
Length (states) of path with itp 'false':               178 (count: 178, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 178, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:           10375 (count: 178, min: 5, max: 128, avg: 58.29)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                178
Number of successful refinements:     178
Number of failed refinements:         0
Max. size of reached set before ref.: 7274
Max. size of reached set after ref.:  2955
Avg. size of reached set before ref.: 2874.95
Avg. size of reached set after ref.:  932.81

Total time for CEGAR algorithm:      27.321s
Time for refinements:                 2.575s
Average time for refinement:          0.014s
Max time for refinement:              0.042s

Code Coverage
-----------------------------
  Function coverage:      0.386
  Visited lines:          1149
  Total lines:            1796
  Line coverage:          0.640
  Visited conditions:     76
  Total conditions:       272
  Condition coverage:     0.279

CPAchecker general statistics
-----------------------------
Number of program locations:     2282
Number of CFA edges:             2579
Number of relevant variables:    192
Number of functions:             83
Number of loops:                 23
Size of reached set:             1162
  Number of reached locations:   346 (15%)
    Avg states per location:     3
    Max states per location:     142 (at node N40)
  Number of reached functions:   32 (39%)
  Number of partitions:          1152
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N381 (before line 5092), Function atp_probe1 called from node N289, stack depth 4 [3790d40], stack [main, atp_init_module, atp_init, atp_probe1]])
  Number of target states:       0
  Size of final wait list        17

Time for analysis setup:          3.014s
  Time for loading CPAs:          0.584s
  Time for loading parser:        0.399s
  Time for CFA construction:      1.932s
    Time for parsing file(s):     0.580s
    Time for AST to CFA:          0.663s
    Time for CFA sanity check:    0.149s
    Time for post-processing:     0.448s
      Time for var class.:        0.180s
Time for Analysis:               27.321s
CPU time for analysis:           27.330s
Total time for CPAchecker:       30.337s
Total CPU time for CPAchecker:   30.330s
Time for statistics:              0.070s

Time for Garbage Collector:       0.708s (in 110 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                112MB (   106 MiB) max;     68MB (    65 MiB) avg;    117MB (   111 MiB) peak
Used non-heap memory:             39MB (    37 MiB) max;     36MB (    34 MiB) avg;     39MB (    37 MiB) peak
Allocated heap memory:           255MB (   243 MiB) max;    255MB (   243 MiB) avg
Allocated non-heap memory:        41MB (    39 MiB) max;     38MB (    36 MiB) avg
Total process virtual memory:  12081MB ( 11521 MiB) max;  12072MB ( 11513 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
