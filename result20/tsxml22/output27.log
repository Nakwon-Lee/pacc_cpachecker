scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 9600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-32_7a-drivers--net--ethernet--realtek--atp.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 9600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_10h94tm9/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker 1.6.1-svn 6608050+ (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 6040: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_handler_precall to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function unregister_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function add_timer to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function request_threaded_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netpoll_trap to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function consume_skb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function del_timer_sync to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function init_timer_key to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __netif_schedule to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __netdev_alloc_skb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function skb_put to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netif_rx to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            125561 (30% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  118414 (94%)
  Because of loop head:            7009 (6%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         138 (0%)
  Times precision was empty:       8240 (7%)
  Times precision was {false}:     288 (0%)
  Times result was cached:         115753 (92%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      1280 (1%)
  Times result was 'false':        1469 (1%)
Number of strengthen sat checks:   0
Number of coverage checks:         13678
  BDD entailment checks:           6824
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       22
Number of predicates discovered:          6
Number of abstraction locations:          226
Max number of predicates per location:    6
Avg number of predicates per location:    4
Total predicates per abstraction:         508747
Max number of predicates per abstraction: 6
Avg number of predicates per abstraction: 324.46
Number of irrelevant predicates:          115693 (23%)
Number of preds handled by boolean abs:   3052 (1%)
  Total number of models for allsat:      1277
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.00

Time for post operator:                  1.614s
  Time for path formula creation:        1.488s
Time for strengthen operator:            0.300s
Time for prec operator:                 14.187s
  Time for abstraction:                 13.441s (Max:     0.014s, Count: 125561)
    Boolean abstraction:                 0.591s
    Solving time:                        0.499s (Max:     0.012s)
    Model enumeration time:              0.033s
    Time for BDD construction:           0.067s (Max:     0.012s)
Time for merge operator:                 0.045s
Time for coverage check:                 0.043s
  Time for BDD entailment checks:        0.027s
Total time for SMT solver (w/o itp):     0.532s

Number of path formula cache hits:   519693 (97%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     1.146s

Total number of created targets for pointer analysis: 172
   Number of created targets for uf: *signed_int is 11


Number of BDD nodes:                               243
Size of BDD node table:                            464047
Size of BDD cache:                                 46411
Size of BDD node cleanup queue:                        2662 (count: 24380, min: 0, max: 283, avg: 0.11)
Time for BDD node cleanup:                             0.006s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.554s
  Time for transition matches:                         0.310s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.001s
Automaton transfers with branching:                0
Automaton transfer successors:                       412220 (count: 412220, min: 1, max: 1, avg: 1.00) [1 x 412220]

CPA algorithm statistics
------------------------
Number of iterations:            306286
Max size of waitlist:            39
Average size of waitlist:        16
Number of computed successors:   319600
Max successors for one state:    2
Number of times merged:          3427
Number of times stopped:         8338
Number of times breaked:         138

Total time for CPA algorithm:        24.262s (Max:     0.519s)
  Time for choose from waitlist:      0.207s
  Time for precision adjustment:     15.777s
  Time for transfer relation:         6.469s
  Time for merge operator:            0.151s
  Time for stop operator:             0.304s
  Time for adding to reached set:     0.399s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   138
Avg. length of target path (in blocks):               18622 (count: 138, min: 13, max: 280, avg: 134.94)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   2.719s
  Counterexample analysis:                             1.921s (Max:     0.032s, Calls: 138)
    Refinement sat check:                              0.800s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.004s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.120s
  Precision update:                                    0.140s
  ARG update:                                          0.442s

Length of refined path (in blocks):                   17936 (count: 138, min: 10, max: 276, avg: 129.97)
Number of affected states:                            17520 (count: 138, min: 9, max: 274, avg: 126.96)
Length (states) of path with itp 'true':                278 (count: 138, min: 0, max: 59, avg: 2.01)
Length (states) of path with itp non-trivial itp:     17520 (count: 138, min: 9, max: 274, avg: 126.96)
Length (states) of path with itp 'false':               138 (count: 138, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 138, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:           17382 (count: 138, min: 8, max: 273, avg: 125.96)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                138
Number of successful refinements:     138
Number of failed refinements:         0
Max. size of reached set before ref.: 4851
Max. size of reached set after ref.:  2936
Avg. size of reached set before ref.: 2298.07
Avg. size of reached set after ref.:  68.96

Total time for CEGAR algorithm:      27.303s
Time for refinements:                 3.023s
Average time for refinement:          0.021s
Max time for refinement:              0.043s

Code Coverage
-----------------------------
  Function coverage:      0.590
  Visited lines:          1353
  Total lines:            1796
  Line coverage:          0.753
  Visited conditions:     130
  Total conditions:       272
  Condition coverage:     0.478

CPAchecker general statistics
-----------------------------
Number of program locations:     2282
Number of CFA edges:             2579
Number of relevant variables:    192
Number of functions:             83
Number of loops:                 23
Size of reached set:             2175
  Number of reached locations:   572 (25%)
    Avg states per location:     3
    Max states per location:     302 (at node N40)
  Number of reached functions:   49 (59%)
  Number of partitions:          2175
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0
  Size of final wait list        20

Time for analysis setup:          3.039s
  Time for loading CPAs:          0.592s
  Time for loading parser:        0.417s
  Time for CFA construction:      1.949s
    Time for parsing file(s):     0.609s
    Time for AST to CFA:          0.654s
    Time for CFA sanity check:    0.157s
    Time for post-processing:     0.439s
      Time for var class.:        0.166s
Time for Analysis:               27.303s
CPU time for analysis:           27.310s
Total time for CPAchecker:       30.345s
Total CPU time for CPAchecker:   30.340s
Time for statistics:              0.081s

Time for Garbage Collector:       0.624s (in 114 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                110MB (   104 MiB) max;     68MB (    65 MiB) avg;    116MB (   110 MiB) peak
Used non-heap memory:             38MB (    36 MiB) max;     35MB (    34 MiB) avg;     38MB (    37 MiB) peak
Allocated heap memory:           255MB (   243 MiB) max;    255MB (   243 MiB) avg
Allocated non-heap memory:        40MB (    38 MiB) max;     37MB (    36 MiB) avg
Total process virtual memory:  12080MB ( 11521 MiB) max;  12072MB ( 11513 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
