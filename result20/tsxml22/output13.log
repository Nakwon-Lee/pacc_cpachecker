scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 9600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-32_7a-drivers--net--ethernet--realtek--atp.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 9600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_5c2gutvp/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker 1.6.1-svn 6608050+ (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 6040: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_handler_precall to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function alloc_etherdev_mqs to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __raw_spin_lock_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function register_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function del_timer_sync to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function request_threaded_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function unregister_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function add_timer to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netpoll_trap to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __netif_schedule to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function init_timer_key to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function consume_skb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __netdev_alloc_skb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function skb_put to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netif_rx to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            151025 (32% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  144590 (96%)
  Because of loop head:            6335 (4%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         100 (0%)
  Times precision was empty:       17527 (12%)
  Times precision was {false}:     507 (0%)
  Times result was cached:         132095 (87%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      896 (1%)
  Times result was 'false':        889 (1%)
Number of strengthen sat checks:   0
Number of coverage checks:         14088
  BDD entailment checks:           7730
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       22
Number of predicates discovered:          6
Number of abstraction locations:          246
Max number of predicates per location:    6
Avg number of predicates per location:    3
Total predicates per abstraction:         553246
Max number of predicates per abstraction: 6
Avg number of predicates per abstraction: 394.33
Number of irrelevant predicates:          364305 (66%)
Number of preds handled by boolean abs:   1770 (0%)
  Total number of models for allsat:      911
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.02

Time for post operator:                  2.006s
  Time for path formula creation:        1.870s
Time for strengthen operator:            0.324s
Time for prec operator:                 12.727s
  Time for abstraction:                 11.822s (Max:     0.021s, Count: 151025)
    Boolean abstraction:                 0.374s
    Solving time:                        0.326s (Max:     0.012s)
    Model enumeration time:              0.033s
    Time for BDD construction:           0.053s (Max:     0.009s)
Time for merge operator:                 0.056s
Time for coverage check:                 0.042s
  Time for BDD entailment checks:        0.032s
Total time for SMT solver (w/o itp):     0.359s

Number of path formula cache hits:   577364 (94%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     1.442s

Total number of created targets for pointer analysis: 692
   Number of created targets for uf: *signed_int is 11


Number of BDD nodes:                               234
Size of BDD node table:                            464047
Size of BDD cache:                                 46411
Size of BDD node cleanup queue:                        1886 (count: 33219, min: 0, max: 153, avg: 0.06)
Time for BDD node cleanup:                             0.002s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.454s
Automaton transfers with branching:                0
Automaton transfer successors:                       469403 (count: 469403, min: 1, max: 1, avg: 1.00) [1 x 469403]

CPA algorithm statistics
------------------------
Number of iterations:            358898
Max size of waitlist:            23
Average size of waitlist:        8
Number of computed successors:   370196
Max successors for one state:    2
Number of times merged:          3179
Number of times stopped:         9103
Number of times breaked:         100

Total time for CPA algorithm:        24.452s (Max:     0.915s)
  Time for choose from waitlist:      0.182s
  Time for precision adjustment:     14.304s
  Time for transfer relation:         7.941s
  Time for merge operator:            0.150s
  Time for stop operator:             0.396s
  Time for adding to reached set:     0.445s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   100
Avg. length of target path (in blocks):               12334 (count: 100, min: 9, max: 293, avg: 123.34)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   2.167s
  Counterexample analysis:                             1.365s (Max:     0.034s, Calls: 100)
    Refinement sat check:                              0.604s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.003s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.092s
  Precision update:                                    0.066s
  ARG update:                                          0.522s

Length of refined path (in blocks):                   11733 (count: 100, min: 8, max: 292, avg: 117.33)
Number of affected states:                            11380 (count: 100, min: 6, max: 290, avg: 113.80)
Length (states) of path with itp 'true':                253 (count: 100, min: 0, max: 59, avg: 2.53)
Length (states) of path with itp non-trivial itp:     11380 (count: 100, min: 6, max: 290, avg: 113.80)
Length (states) of path with itp 'false':               100 (count: 100, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 100, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:           11280 (count: 100, min: 5, max: 289, avg: 112.80)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                100
Number of successful refinements:     100
Number of failed refinements:         0
Max. size of reached set before ref.: 9724
Max. size of reached set after ref.:  5707
Avg. size of reached set before ref.: 3748.00
Avg. size of reached set after ref.:  176.40

Total time for CEGAR algorithm:      26.941s
Time for refinements:                 2.476s
Average time for refinement:          0.024s
Max time for refinement:              0.062s

Code Coverage
-----------------------------
  Function coverage:      0.566
  Visited lines:          1437
  Total lines:            1796
  Line coverage:          0.800
  Visited conditions:     154
  Total conditions:       272
  Condition coverage:     0.566

CPAchecker general statistics
-----------------------------
Number of program locations:     2282
Number of CFA edges:             2579
Number of relevant variables:    192
Number of functions:             83
Number of loops:                 23
Size of reached set:             3045
  Number of reached locations:   673 (29%)
    Avg states per location:     4
    Max states per location:     445 (at node N40)
  Number of reached functions:   47 (57%)
  Number of partitions:          3042
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N1106 (before line 5864), Function atp_init_module called from node N1146, stack depth 2 [3ec548d2], stack [main, atp_init_module]])
  Number of target states:       0
  Size of final wait list        10

Time for analysis setup:          2.926s
  Time for loading CPAs:          0.570s
  Time for loading parser:        0.418s
  Time for CFA construction:      1.850s
    Time for parsing file(s):     0.522s
    Time for AST to CFA:          0.614s
    Time for CFA sanity check:    0.137s
    Time for post-processing:     0.446s
      Time for var class.:        0.187s
Time for Analysis:               26.941s
CPU time for analysis:           26.930s
Total time for CPAchecker:       29.870s
Total CPU time for CPAchecker:   29.860s
Time for statistics:              0.095s

Time for Garbage Collector:       0.762s (in 112 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                119MB (   113 MiB) max;     69MB (    66 MiB) avg;    121MB (   116 MiB) peak
Used non-heap memory:             38MB (    36 MiB) max;     35MB (    34 MiB) avg;     39MB (    37 MiB) peak
Allocated heap memory:           255MB (   243 MiB) max;    255MB (   243 MiB) avg
Allocated non-heap memory:        40MB (    38 MiB) max;     37MB (    36 MiB) avg
Total process virtual memory:  12147MB ( 11584 MiB) max;  12138MB ( 11576 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
