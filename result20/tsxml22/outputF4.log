scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 9600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-32_7a-drivers--net--ethernet--realtek--atp.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 9600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_hci_mmpp/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker 1.6.1-svn 6608050+ (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 6040: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_handler_precall to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function alloc_etherdev_mqs to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __raw_spin_lock_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function register_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netpoll_trap to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __netif_schedule to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __netdev_alloc_skb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function skb_put to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netif_rx to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function request_threaded_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function add_timer to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function init_timer_key to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function del_timer_sync to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function unregister_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function consume_skb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            1450837 (33% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  1393446 (96%)
  Because of loop head:            57218 (4%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         173 (0%)
  Times precision was empty:       124417 (9%)
  Times precision was {false}:     1327 (0%)
  Times result was cached:         1320533 (91%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      4560 (0%)
  Times result was 'false':        3920 (0%)
Number of strengthen sat checks:   0
Number of coverage checks:         133380
  BDD entailment checks:           89110
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       22
Number of predicates discovered:          7
Number of abstraction locations:          292
Max number of predicates per location:    7
Avg number of predicates per location:    3
Total predicates per abstraction:         6693986
Max number of predicates per abstraction: 7
Avg number of predicates per abstraction: 1137.08
Number of irrelevant predicates:          4772522 (71%)
Number of preds handled by boolean abs:   9687 (0%)
  Total number of models for allsat:      5383
  Max number of models for allsat:        3
  Avg number of models for allsat:        1.18

Time for post operator:                  8.563s
  Time for path formula creation:        7.571s
Time for strengthen operator:            2.111s
Time for prec operator:                112.321s
  Time for abstraction:                105.650s (Max:     0.189s, Count: 1450837)
    Boolean abstraction:                 1.567s
    Solving time:                        1.319s (Max:     0.012s)
    Model enumeration time:              0.141s
    Time for BDD construction:           0.132s (Max:     0.008s)
Time for merge operator:                 0.170s
Time for coverage check:                 0.071s
  Time for BDD entailment checks:        0.059s
Total time for SMT solver (w/o itp):     1.460s

Number of path formula cache hits:   5607195 (96%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     3.463s

Total number of created targets for pointer analysis: 5622
   Number of created targets for uf: *signed_int is 441


Number of BDD nodes:                               371
Size of BDD node table:                            464047
Size of BDD cache:                                 46411
Size of BDD node cleanup queue:                        9362 (count: 248714, min: 0, max: 123, avg: 0.04)
Time for BDD node cleanup:                             0.020s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  2.908s
  Time for transition matches:                         1.594s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.000s
Automaton transfers with branching:                0
Automaton transfer successors:                      4403575 (count: 4403575, min: 1, max: 1, avg: 1.00) [1 x 4403575]

CPA algorithm statistics
------------------------
Number of iterations:            3379023
Max size of waitlist:            32
Average size of waitlist:        18
Number of computed successors:   3464307
Max successors for one state:    2
Number of times merged:          22135
Number of times stopped:         80945
Number of times breaked:         173

Total time for CPA algorithm:       193.858s (Max:     2.720s)
  Time for choose from waitlist:      0.790s
  Time for precision adjustment:    127.599s
  Time for transfer relation:        54.210s
  Time for merge operator:            0.499s
  Time for stop operator:             2.267s
  Time for adding to reached set:     3.243s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   173
Avg. length of target path (in blocks):               22623 (count: 173, min: 9, max: 281, avg: 130.77)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   5.990s
  Counterexample analysis:                             1.957s (Max:     0.050s, Calls: 173)
    Refinement sat check:                              0.784s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.004s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.116s
  Precision update:                                    0.109s
  ARG update:                                          3.718s

Length of refined path (in blocks):                   21804 (count: 173, min: 8, max: 280, avg: 126.03)
Number of affected states:                            21161 (count: 173, min: 6, max: 278, avg: 122.32)
Length (states) of path with itp 'true':                470 (count: 173, min: 0, max: 59, avg: 2.72)
Length (states) of path with itp non-trivial itp:     21161 (count: 173, min: 6, max: 278, avg: 122.32)
Length (states) of path with itp 'false':               173 (count: 173, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 173, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:           20988 (count: 173, min: 5, max: 277, avg: 121.32)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                173
Number of successful refinements:     173
Number of failed refinements:         0
Max. size of reached set before ref.: 40051
Max. size of reached set after ref.:  15969
Avg. size of reached set before ref.: 19893.26
Avg. size of reached set after ref.:  440.08

Total time for CEGAR algorithm:     201.105s
Time for refinements:                 7.210s
Average time for refinement:          0.041s
Max time for refinement:              0.091s

Code Coverage
-----------------------------
  Function coverage:      0.651
  Visited lines:          1626
  Total lines:            1796
  Line coverage:          0.905
  Visited conditions:     200
  Total conditions:       272
  Condition coverage:     0.735

CPAchecker general statistics
-----------------------------
Number of program locations:     2282
Number of CFA edges:             2579
Number of relevant variables:    192
Number of functions:             83
Number of loops:                 23
Size of reached set:             14042
  Number of reached locations:   869 (38%)
    Avg states per location:     16
    Max states per location:     2089 (at node N39)
  Number of reached functions:   54 (65%)
  Number of partitions:          14007
    Avg size of partitions:      1
    Max size of partitions:      3 (with key [N381 (before line 5092), Function atp_probe1 called from node N289, stack depth 4 [72a5ba6], stack [main, atp_init_module, atp_init, atp_probe1]])
  Number of target states:       0

Time for analysis setup:          2.951s
  Time for loading CPAs:          0.590s
  Time for loading parser:        0.406s
  Time for CFA construction:      1.870s
    Time for parsing file(s):     0.568s
    Time for AST to CFA:          0.619s
    Time for CFA sanity check:    0.152s
    Time for post-processing:     0.422s
      Time for var class.:        0.179s
Time for Analysis:              201.105s
CPU time for analysis:          201.110s
Time for analyzing result:        0.007s
Total time for CPAchecker:      204.059s
Total CPU time for CPAchecker:  204.060s
Time for statistics:              0.213s

Time for Garbage Collector:      16.138s (in 1120 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                251MB (   239 MiB) max;    145MB (   139 MiB) avg;    258MB (   246 MiB) peak
Used non-heap memory:             38MB (    37 MiB) max;     38MB (    36 MiB) avg;     39MB (    37 MiB) peak
Allocated heap memory:           255MB (   243 MiB) max;    255MB (   243 MiB) avg
Allocated non-heap memory:        41MB (    39 MiB) max;     40MB (    38 MiB) avg
Total process virtual memory:  12080MB ( 11520 MiB) max;  12077MB ( 11518 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
