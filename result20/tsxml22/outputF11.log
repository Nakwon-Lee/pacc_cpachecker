scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 9600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-32_7a-drivers--net--ethernet--realtek--atp.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 9600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_zrmrwtzy/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker 1.6.1-svn 6608050+ (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 6040: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_handler_precall to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function alloc_etherdev_mqs to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __raw_spin_lock_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function register_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function unregister_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function request_threaded_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function add_timer to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netpoll_trap to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __netif_schedule to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __netdev_alloc_skb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function skb_put to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netif_rx to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function consume_skb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function init_timer_key to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function del_timer_sync to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            332579 (32% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  317876 (96%)
  Because of loop head:            14549 (4%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         154 (0%)
  Times precision was empty:       10087 (3%)
  Times precision was {false}:     692 (0%)
  Times result was cached:         318945 (96%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      2855 (1%)
  Times result was 'false':        1636 (0%)
Number of strengthen sat checks:   0
Number of coverage checks:         33445
  BDD entailment checks:           20135
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       22
Number of predicates discovered:          7
Number of abstraction locations:          292
Max number of predicates per location:    6
Avg number of predicates per location:    3
Total predicates per abstraction:         1515462
Max number of predicates per abstraction: 6
Avg number of predicates per abstraction: 427.25
Number of irrelevant predicates:          704709 (47%)
Number of preds handled by boolean abs:   5955 (0%)
  Total number of models for allsat:      3048
  Max number of models for allsat:        3
  Avg number of models for allsat:        1.07

Time for post operator:                  3.927s
  Time for path formula creation:        3.579s
Time for strengthen operator:            0.691s
Time for prec operator:                 36.133s
  Time for abstraction:                 34.087s (Max:     0.031s, Count: 332579)
    Boolean abstraction:                 0.993s
    Solving time:                        0.779s (Max:     0.014s)
    Model enumeration time:              0.096s
    Time for BDD construction:           0.114s (Max:     0.011s)
Time for merge operator:                 0.093s
Time for coverage check:                 0.054s
  Time for BDD entailment checks:        0.046s
Total time for SMT solver (w/o itp):     0.875s

Number of path formula cache hits:   1310423 (95%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     2.299s

Total number of created targets for pointer analysis: 732
   Number of created targets for uf: *signed_int is 31


Number of BDD nodes:                               341
Size of BDD node table:                            464047
Size of BDD cache:                                 46411
Size of BDD node cleanup queue:                        5856 (count: 51097, min: 0, max: 280, avg: 0.11)
Time for BDD node cleanup:                             0.004s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.962s
  Time for transition matches:                         0.522s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.003s
Automaton transfers with branching:                0
Automaton transfer successors:                      1045593 (count: 1045593, min: 1, max: 1, avg: 1.00) [1 x 1045593]

CPA algorithm statistics
------------------------
Number of iterations:            790332
Max size of waitlist:            53
Average size of waitlist:        23
Number of computed successors:   815555
Max successors for one state:    2
Number of times merged:          6655
Number of times stopped:         19115
Number of times breaked:         154

Total time for CPA algorithm:        59.659s (Max:     1.054s)
  Time for choose from waitlist:      0.226s
  Time for precision adjustment:     39.488s
  Time for transfer relation:        16.358s
  Time for merge operator:            0.243s
  Time for stop operator:             0.634s
  Time for adding to reached set:     0.998s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   154
Avg. length of target path (in blocks):               43718 (count: 154, min: 13, max: 504, avg: 283.88)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   6.603s
  Counterexample analysis:                             5.167s (Max:     0.105s, Calls: 154)
    Refinement sat check:                              1.158s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.013s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.218s
  Precision update:                                    0.159s
  ARG update:                                          0.877s

Length of refined path (in blocks):                   43058 (count: 154, min: 10, max: 503, avg: 279.60)
Number of affected states:                            41877 (count: 154, min: 9, max: 501, avg: 271.93)
Length (states) of path with itp 'true':               1027 (count: 154, min: 0, max: 274, avg: 6.67)
Length (states) of path with itp non-trivial itp:     41877 (count: 154, min: 9, max: 501, avg: 271.93)
Length (states) of path with itp 'false':               154 (count: 154, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 154, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:           41723 (count: 154, min: 8, max: 500, avg: 270.93)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                154
Number of successful refinements:     154
Number of failed refinements:         0
Max. size of reached set before ref.: 8808
Max. size of reached set after ref.:  3004
Avg. size of reached set before ref.: 5171.66
Avg. size of reached set after ref.:  71.92

Total time for CEGAR algorithm:      66.845s
Time for refinements:                 7.180s
Average time for refinement:          0.046s
Max time for refinement:              0.132s

Code Coverage
-----------------------------
  Function coverage:      0.651
  Visited lines:          1626
  Total lines:            1796
  Line coverage:          0.905
  Visited conditions:     200
  Total conditions:       272
  Condition coverage:     0.735

CPAchecker general statistics
-----------------------------
Number of program locations:     2282
Number of CFA edges:             2579
Number of relevant variables:    192
Number of functions:             83
Number of loops:                 23
Size of reached set:             9444
  Number of reached locations:   869 (38%)
    Avg states per location:     10
    Max states per location:     1391 (at node N39)
  Number of reached functions:   54 (65%)
  Number of partitions:          9381
    Avg size of partitions:      1
    Max size of partitions:      5 (with key [N381 (before line 5092), Function atp_probe1 called from node N304, stack depth 4 [50d0e0fa], stack [main, atp_init_module, atp_init, atp_probe1]])
  Number of target states:       0

Time for analysis setup:          2.910s
  Time for loading CPAs:          0.632s
  Time for loading parser:        0.389s
  Time for CFA construction:      1.815s
    Time for parsing file(s):     0.549s
    Time for AST to CFA:          0.569s
    Time for CFA sanity check:    0.145s
    Time for post-processing:     0.424s
      Time for var class.:        0.194s
Time for Analysis:               66.845s
CPU time for analysis:           66.850s
Time for analyzing result:        0.005s
Total time for CPAchecker:       69.758s
Total CPU time for CPAchecker:   69.750s
Time for statistics:              0.184s

Time for Garbage Collector:       1.931s (in 289 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                122MB (   116 MiB) max;     78MB (    75 MiB) avg;    126MB (   120 MiB) peak
Used non-heap memory:             39MB (    38 MiB) max;     37MB (    36 MiB) avg;     40MB (    38 MiB) peak
Allocated heap memory:           255MB (   243 MiB) max;    255MB (   243 MiB) avg
Allocated non-heap memory:        42MB (    40 MiB) max;     40MB (    38 MiB) avg
Total process virtual memory:  12081MB ( 11521 MiB) max;  12076MB ( 11516 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
