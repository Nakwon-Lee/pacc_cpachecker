scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 9600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-drivers--infiniband--hw--nes--iw_nes.ko-main.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 9600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_lnfx_6rc/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker 1.6.1-svn 6608050+ (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 10133: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 10250: Dead code detected: __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

line 10253: Dead code detected: __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

line 10256: Dead code detected: __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (8UL) {
  case 1:
  __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& current_task));
  goto ldv_2861;
  case 2:
  __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_2861;
  case 4:
  __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_2861;
  case 8:
  __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_2861;
  default:
  __bad_percpu_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

lines 10294-10295: Dead code detected: __asm__ volatile (".pushsection .smp_locks,\"a\"\n.balign 4\n.long 671f - .\n.popsection\n671:\n\tlock; xaddb %b0, %1\n": "+q" (__ret),
                       "+m" (v->counter): : "memory", "cc"); (CFACreationUtils.addEdgeToCFA, INFO)

lines 10298-10299: Dead code detected: __asm__ volatile (".pushsection .smp_locks,\"a\"\n.balign 4\n.long 671f - .\n.popsection\n671:\n\tlock; xaddw %w0, %1\n": "+r" (__ret),
                       "+m" (v->counter): : "memory", "cc"); (CFACreationUtils.addEdgeToCFA, INFO)

lines 10306-10307: Dead code detected: __asm__ volatile (".pushsection .smp_locks,\"a\"\n.balign 4\n.long 671f - .\n.popsection\n671:\n\tlock; xaddq %q0, %1\n": "+r" (__ret),
                       "+m" (v->counter): : "memory", "cc"); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (4UL) {
  case 1:
  __asm__ volatile (".pushsection .smp_locks,\"a\"\n.balign 4\n.long 671f - .\n.popsection\n671:\n\tlock; xaddb %b0, %1\n": "+q" (__ret),
                       "+m" (v->counter): : "memory", "cc");
  goto ldv_5474;
  case 2:
  __asm__ volatile (".pushsection .smp_locks,\"a\"\n.balign 4\n.long 671f - .\n.popsection\n671:\n\tlock; xaddw %w0, %1\n": "+r" (__ret),
                       "+m" (v->counter): : "memory", "cc");
  goto ldv_5474;
  case 4:
  __asm__ volatile (".pushsection .smp_locks,\"a\"\n.balign 4\n.long 671f - .\n.popsection\n671:\n\tlock; xaddl %0, %1\n": "+r" (__ret),
                       "+m" (v->counter): : "memory", "cc");
  goto ldv_5474;
  case 8:
  __asm__ volatile (".pushsection .smp_locks,\"a\"\n.balign 4\n.long 671f - .\n.popsection\n671:\n\tlock; xaddq %q0, %1\n": "+r" (__ret),
                       "+m" (v->counter): : "memory", "cc");
  goto ldv_5474;
  default:
  __xadd_wrong_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 11671: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 11716: Dead code detected: __ms___0 = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 11779: Dead code detected: __ms___1 = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 11824: Dead code detected: __ms___2 = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 11871: Dead code detected: __ms___3 = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 12009: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 12069: Dead code detected: __ms___0 = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 12819: Dead code detected: __ms___0 = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 16141: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 19490: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 21015: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 22181: Dead code detected: return (-38); (CFACreationUtils.addEdgeToCFA, INFO)

line 26750: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 26816: Dead code detected: __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& kernel_stack)); (CFACreationUtils.addEdgeToCFA, INFO)

line 26819: Dead code detected: __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack)); (CFACreationUtils.addEdgeToCFA, INFO)

line 26822: Dead code detected: __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (8UL) {
  case 1:
  __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& kernel_stack));
  goto ldv_6158;
  case 2:
  __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack));
  goto ldv_6158;
  case 4:
  __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack));
  goto ldv_6158;
  case 8:
  __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack));
  goto ldv_6158;
  default:
  __bad_percpu_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 31794: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 32583: Dead code detected: return (0); (CFACreationUtils.addEdgeToCFA, INFO)

line 33640: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 31431: Function pointer *(cm_id->event_handler) with type int (*)(struct iw_cm_id *, struct iw_cm_event *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 31444: Function pointer *(cm_id->rem_ref) with type void (*)(struct iw_cm_id *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 31362: Function pointer *(cm_id->event_handler) with type int (*)(struct iw_cm_id *, struct iw_cm_event *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 31612: Function pointer *(cm_id->event_handler) with type int (*)(struct iw_cm_id *, struct iw_cm_event *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 31556: Function pointer *(cm_id->event_handler) with type int (*)(struct iw_cm_id *, struct iw_cm_event *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 31487: Function pointer *(cm_id->add_ref) with type void (*)(struct iw_cm_id *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 31488: Function pointer *(cm_id->event_handler) with type int (*)(struct iw_cm_id *, struct iw_cm_event *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 31503: Function pointer *(cm_id->event_handler) with type int (*)(struct iw_cm_id *, struct iw_cm_event *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 31510: Function pointer *(cm_id->rem_ref) with type void (*)(struct iw_cm_id *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 10551: Function pointer *(ops->alloc) with type void *(*)(struct device *, size_t , dma_addr_t *, gfp_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7946: Function pointer *(ops->free) with type void (*)(struct device *, size_t , void *, dma_addr_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 16212: Function pointer *(ops->map_page) with type dma_addr_t (*)(struct device *, struct page *, unsigned long, size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 10409-10410: Function pointer *(ops->map_page) with type dma_addr_t (*)(struct device *, struct page *, unsigned long, size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 31865-31866: Function pointer *(ops->map_page) with type dma_addr_t (*)(struct device *, struct page *, unsigned long, size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 10474: Function pointer *(ops->unmap_page) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 10442: Function pointer *(ops->unmap_page) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 31898: Function pointer *(ops->unmap_page) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 29578: Function pointer *(cm_node->cm_id->rem_ref) with type void (*)(struct iw_cm_id *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 27974: Function pointer *(cm_id->rem_ref) with type void (*)(struct iw_cm_id *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 29149: Function pointer *(cm_node->cm_id->rem_ref) with type void (*)(struct iw_cm_id *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 30056: Function pointer *(cm_id->rem_ref) with type void (*)(struct iw_cm_id *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 30036: Function pointer *(cm_id->add_ref) with type void (*)(struct iw_cm_id *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 30944: Function pointer *(cm_id->add_ref) with type void (*)(struct iw_cm_id *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 30953: Function pointer *(cm_id->event_handler) with type int (*)(struct iw_cm_id *, struct iw_cm_event *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 30647: Function pointer *(cm_id->event_handler) with type int (*)(struct iw_cm_id *, struct iw_cm_event *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 30658: Function pointer *(cm_id->rem_ref) with type void (*)(struct iw_cm_id *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 30622: Function pointer *(cm_id->event_handler) with type int (*)(struct iw_cm_id *, struct iw_cm_event *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 30594: Function pointer *(nesqp->ibqp.event_handler) with type void (*)(struct ib_event *, void *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 31751: Function pointer *(event->cm_info.ldv_52927.cm_id->rem_ref) with type void (*)(struct iw_cm_id *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 31630: Function pointer *(event->cm_info.ldv_52927.cm_id->add_ref) with type void (*)(struct iw_cm_id *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 31113: Function pointer *(cm_id->add_ref) with type void (*)(struct iw_cm_id *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 31114-31115: Function pointer *(g_cm_core->api->connect) with type struct nes_cm_node *(*)(struct nes_cm_core *, struct nes_vnic *, u16 , void *, struct nes_cm_info *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 31123: Function pointer *(cm_id->rem_ref) with type void (*)(struct iw_cm_id *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 31198: Function pointer *(cm_id->add_ref) with type void (*)(struct iw_cm_id *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 31216: Function pointer *(cm_id->rem_ref) with type void (*)(struct iw_cm_id *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 23176: Function pointer *(cm_id->rem_ref) with type void (*)(struct iw_cm_id *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 23177: Function pointer *(cm_id->event_handler) with type int (*)(struct iw_cm_id *, struct iw_cm_event *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 15836: Function pointer *(nescq->ibcq.comp_handler) with type void (*)(struct ib_cq *, void *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 25656: Function pointer *(nesqp->cm_id->add_ref) with type void (*)(struct iw_cm_id *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 17716: Function pointer *(nesvnic->mcrq_mcast_filter) with type int (*)(struct nes_vnic *, __u8 *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 15802: Function pointer *(nescq->ibcq.event_handler) with type void (*)(struct ib_event *, void *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 15651: Function pointer *(nesqp->cm_id->add_ref) with type void (*)(struct iw_cm_id *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 27908: Function pointer *(cm_id->rem_ref) with type void (*)(struct iw_cm_id *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_nes_netdev_ops_ndo_uninit to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_nes_netdev_ops_ndo_init to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 31261: Ignoring function call through function pointer *(g_cm_core->api->destroy_cm_core): (*(g_cm_core->api->destroy_cm_core))(g_cm_core); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function unregister_netevent_notifier to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function unregister_inetaddr_notifier to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function list_del to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netif_carrier_off to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function kthread_should_stop to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function driver_remove_file to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_enable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_request_regions to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_disable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function del_timer to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function destroy_workqueue to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dma_set_mask to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_release_regions to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function skb_dequeue to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dma_supported to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function init_timer_key to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __pci_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function prepare_to_wait to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function msleep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function driver_create_file to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_set_master to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function finish_wait to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_kfree_skb_any to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __raw_spin_lock_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function unregister_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ib_unregister_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_remove_file to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __phys_addr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

lines 31865-31866: Ignoring function call through function pointer *(ops->map_page): addr = (*(ops->map_page))(dev, 18446719884453740544ULL + (tmp___2 >> 12), ((unsigned long)ptr) & 4095UL, size, dir, attrs); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function debug_dma_map_page to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ib_dealloc_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function schedule to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Recursion detected, aborting. To ignore recursion, add -skipRecursion to the command line. (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, INFO)

Error: line 27969: Unsupported feature (recursion): rem_ref_cm_node(cm_node->cm_core, cm_node); (CallstackTransferRelation.getAbstractSuccessorsForEdge, SEVERE)

PredicateCPA statistics
-----------------------
Number of abstractions:            88147 (15% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  84286 (96%)
  Because of loop head:            3806 (4%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         55 (0%)
  Times precision was empty:       72627 (82%)
  Times precision was {false}:     284 (0%)
  Times result was cached:         14650 (17%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      586 (1%)
  Times result was 'false':        624 (1%)
Number of strengthen sat checks:   0
Number of coverage checks:         69513
  BDD entailment checks:           14455
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       137
Number of predicates discovered:          9
Number of abstraction locations:          65
Max number of predicates per location:    8
Avg number of predicates per location:    3
Total predicates per abstraction:         47629
Max number of predicates per abstraction: 8
Avg number of predicates per abstraction: 54.75
Number of irrelevant predicates:          24190 (51%)
Number of preds handled by boolean abs:   1360 (3%)
  Total number of models for allsat:      998
  Max number of models for allsat:        32
  Avg number of models for allsat:        1.70

Time for post operator:                  7.748s
  Time for path formula creation:        7.538s
Time for strengthen operator:            0.439s
Time for prec operator:                  4.184s
  Time for abstraction:                  3.200s (Max:     0.021s, Count: 88147)
    Boolean abstraction:                 0.496s
    Solving time:                        0.393s (Max:     0.014s)
    Model enumeration time:              0.103s
    Time for BDD construction:           0.055s (Max:     0.007s)
Time for merge operator:                 0.478s
Time for coverage check:                 0.055s
  Time for BDD entailment checks:        0.049s
Total time for SMT solver (w/o itp):     0.496s

Number of path formula cache hits:   640615 (93%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     4.861s

Total number of created targets for pointer analysis: 6785
   Number of created targets for uf: *signed_int is 10
   Number of created targets for uf: *(struct_nes_cm_ops)* is 4
   Number of created targets for uf: *unsigned_char is 121
   Number of created targets for uf: *(struct_list_head)* is 2
   Number of created targets for uf: *(struct_pci_dev)* is 2
   Number of created targets for uf: *(Return_type:_[void],_Parameters:_1,_Parameter_1_type:_[unsigned_long_int],_VarArgs:_false)* is 10
   Number of created targets for uf: *unsigned_long_long_int is 6
   Number of created targets for uf: *unsigned_int is 91


Number of BDD nodes:                               1068
Size of BDD node table:                            464047
Size of BDD cache:                                 46411
Size of BDD node cleanup queue:                        1518 (count: 92237, min: 0, max: 125, avg: 0.02)
Time for BDD node cleanup:                             0.019s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.533s
  Time for transition matches:                         0.268s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.000s
Automaton transfers with branching:                0
Automaton transfer successors:                       583281 (count: 583281, min: 1, max: 1, avg: 1.00) [1 x 583281]

CPA algorithm statistics
------------------------
Number of iterations:            345059
Max size of waitlist:            398
Average size of waitlist:        178
Number of computed successors:   393086
Max successors for one state:    2
Number of times merged:          27529
Number of times stopped:         37584
Number of times breaked:         55

Total time for CPA algorithm:        21.818s (Max:     1.677s)
  Time for choose from waitlist:      0.151s
  Time for precision adjustment:      6.004s
  Time for transfer relation:        13.024s
  Time for merge operator:            0.828s
  Time for stop operator:             0.366s
  Time for adding to reached set:     0.495s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   55
Avg. length of target path (in blocks):                1175 (count: 55, min: 12, max: 28, avg: 21.36)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   1.841s
  Counterexample analysis:                             1.143s (Max:     0.034s, Calls: 55)
    Refinement sat check:                              0.943s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.004s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.049s
  Precision update:                                    0.044s
  ARG update:                                          0.556s

Length of refined path (in blocks):                    1045 (count: 55, min: 4, max: 27, avg: 19.00)
Number of affected states:                              928 (count: 55, min: 1, max: 25, avg: 16.87)
Length (states) of path with itp 'true':                 62 (count: 55, min: 1, max: 2, avg: 1.13)
Length (states) of path with itp non-trivial itp:       928 (count: 55, min: 1, max: 25, avg: 16.87)
Length (states) of path with itp 'false':                55 (count: 55, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 55, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:             873 (count: 55, min: 0, max: 24, avg: 15.87)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                55
Number of successful refinements:     55
Number of failed refinements:         0
Max. size of reached set before ref.: 13333
Max. size of reached set after ref.:  8
Avg. size of reached set before ref.: 6272.05
Avg. size of reached set after ref.:  6.25

Total time for CEGAR algorithm:      23.859s
Time for refinements:                 2.040s
Average time for refinement:          0.037s
Max time for refinement:              0.083s

Code Coverage
-----------------------------
  Function coverage:      0.233
  Visited lines:          3097
  Total lines:            17312
  Line coverage:          0.179
  Visited conditions:     546
  Total conditions:       5206
  Condition coverage:     0.105

CPAchecker general statistics
-----------------------------
Number of program locations:     23719
Number of CFA edges:             28392
Number of relevant variables:    3687
Number of functions:             515
Number of loops:                 184
Size of reached set:             10260
  Number of reached locations:   1559 (7%)
    Avg states per location:     6
    Max states per location:     181 (at node N192)
  Number of reached functions:   120 (23%)
  Number of partitions:          10223
    Avg size of partitions:      1
    Max size of partitions:      6 (with key [N1922 (before line 9953), Function main called from node N1907, stack depth 1 [90efbba], stack [main]])
  Number of target states:       0
  Size of final wait list        269

Time for analysis setup:          7.210s
  Time for loading CPAs:          0.899s
  Time for loading parser:        0.394s
  Time for CFA construction:      5.826s
    Time for parsing file(s):     1.055s
    Time for AST to CFA:          2.287s
    Time for CFA sanity check:    0.561s
    Time for post-processing:     1.720s
      Time for var class.:        0.947s
Time for Analysis:               23.859s
CPU time for analysis:           23.850s
Total time for CPAchecker:       31.072s
Total CPU time for CPAchecker:   31.050s
Time for statistics:              0.220s

Time for Garbage Collector:       1.163s (in 81 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                163MB (   156 MiB) max;    105MB (   101 MiB) avg;    170MB (   163 MiB) peak
Used non-heap memory:             42MB (    40 MiB) max;     36MB (    34 MiB) avg;     42MB (    40 MiB) peak
Allocated heap memory:           255MB (   243 MiB) max;    255MB (   243 MiB) avg
Allocated non-heap memory:        44MB (    42 MiB) max;     38MB (    36 MiB) avg
Total process virtual memory:  12144MB ( 11582 MiB) max;  12135MB ( 11573 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
