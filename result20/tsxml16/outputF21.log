scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 9600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-32_7a-drivers--video--aty--radeonfb.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 9600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_t85nr9a2/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker 1.6.1-svn 6608050+ (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 5096: Dead code detected: v.bits_per_pixel = 8U; (CFACreationUtils.addEdgeToCFA, INFO)

line 5098: Dead code detected: v.bits_per_pixel = 16U; (CFACreationUtils.addEdgeToCFA, INFO)

line 5100: Dead code detected: return (-22); (CFACreationUtils.addEdgeToCFA, INFO)

line 5101: Dead code detected: v.bits_per_pixel = 32U; (CFACreationUtils.addEdgeToCFA, INFO)

line 5272: Dead code detected: __asm__ volatile ("call __get_user_1": "=a" (__ret_gu), "=d" (__val_gu): "0" ((__u32 *)arg)); (CFACreationUtils.addEdgeToCFA, INFO)

line 5275: Dead code detected: __asm__ volatile ("call __get_user_2": "=a" (__ret_gu), "=d" (__val_gu): "0" ((__u32 *)arg)); (CFACreationUtils.addEdgeToCFA, INFO)

line 5281: Dead code detected: __asm__ volatile ("call __get_user_8": "=a" (__ret_gu), "=d" (__val_gu): "0" ((__u32 *)arg)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (4UL) {
  case 1UL:
  __asm__ volatile ("call __get_user_1": "=a" (__ret_gu), "=d" (__val_gu): "0" ((__u32 *)arg));
  goto ldv_33448;
  case 2UL:
  __asm__ volatile ("call __get_user_2": "=a" (__ret_gu), "=d" (__val_gu): "0" ((__u32 *)arg));
  goto ldv_33448;
  case 4UL:
  __asm__ volatile ("call __get_user_4": "=a" (__ret_gu), "=d" (__val_gu): "0" ((__u32 *)arg));
  goto ldv_33448;
  case 8UL:
  __asm__ volatile ("call __get_user_8": "=a" (__ret_gu), "=d" (__val_gu): "0" ((__u32 *)arg));
  goto ldv_33448;
  default:
  __asm__ volatile ("call __get_user_X": "=a" (__ret_gu), "=d" (__val_gu): "0" ((__u32 *)arg));
  goto ldv_33448;
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 5337: Dead code detected: __asm__ volatile ("call __put_user_1": "=a" (__ret_pu): "0" (__pu_val), "c" ((__u32 *)arg): "ebx"); (CFACreationUtils.addEdgeToCFA, INFO)

line 5340: Dead code detected: __asm__ volatile ("call __put_user_2": "=a" (__ret_pu): "0" (__pu_val), "c" ((__u32 *)arg): "ebx"); (CFACreationUtils.addEdgeToCFA, INFO)

line 5346: Dead code detected: __asm__ volatile ("call __put_user_8": "=a" (__ret_pu): "0" (__pu_val), "c" ((__u32 *)arg): "ebx"); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (4UL) {
  case 1UL:
  __asm__ volatile ("call __put_user_1": "=a" (__ret_pu): "0" (__pu_val), "c" ((__u32 *)arg): "ebx");
  goto ldv_33458;
  case 2UL:
  __asm__ volatile ("call __put_user_2": "=a" (__ret_pu): "0" (__pu_val), "c" ((__u32 *)arg): "ebx");
  goto ldv_33458;
  case 4UL:
  __asm__ volatile ("call __put_user_4": "=a" (__ret_pu): "0" (__pu_val), "c" ((__u32 *)arg): "ebx");
  goto ldv_33458;
  case 8UL:
  __asm__ volatile ("call __put_user_8": "=a" (__ret_pu): "0" (__pu_val), "c" ((__u32 *)arg): "ebx");
  goto ldv_33458;
  default:
  __asm__ volatile ("call __put_user_X": "=a" (__ret_pu): "0" (__pu_val), "c" ((__u32 *)arg): "ebx");
  goto ldv_33458;
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 7270: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 7918: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 7937: Dead code detected: __ms___0 = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 7956: Dead code detected: __ms___1 = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 8139: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 8177: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 8216: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 8239: Dead code detected: __ms___0 = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 8262: Dead code detected: __ms___1 = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 8285: Dead code detected: __ms___2 = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 8329: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 8410: Dead code detected: __ms___0 = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 8429: Dead code detected: __ms___1 = 5UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 8448: Dead code detected: __ms___2 = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 8467: Dead code detected: __ms___3 = 5UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 8486: Dead code detected: __ms___4 = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 8505: Dead code detected: __ms___5 = 5UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 8573: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 8592: Dead code detected: __ms___0 = 5UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 8711: Dead code detected: __ms___0 = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 8861: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 9076: Dead code detected: __ms___0 = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 9097: Dead code detected: __ms___1 = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 9135: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 9153: Dead code detected: __ms___0 = 3UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 9188: Dead code detected: __ms___2 = 5UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 9256: Dead code detected: __ms = 5UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 9285: Dead code detected: __ms___0 = 5UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 9304: Dead code detected: __ms___1 = 5UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 9323: Dead code detected: __ms___2 = 5UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 9342: Dead code detected: __ms___3 = 5UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 9501: Dead code detected: __ms___0 = 5UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 9527: Dead code detected: __ms___1 = 5UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 9583: Dead code detected: __ms___2 = 3UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 9791: Dead code detected: __ms___0 = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 9810: Dead code detected: __ms___1 = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 10079: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 10765: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 11680: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 12119: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 12512: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 12889: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_handler_precall to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __pci_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function msleep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sysfs_remove_bin_file to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function del_timer_sync to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mtrr_del to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function unregister_framebuffer to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function backlight_device_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iounmap to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_release_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_destroy_modedb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function i2c_del_adapter to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_dealloc_cmap to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function framebuffer_release to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function might_fault to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_validate_mode to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mod_timer to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_pr_debug to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_enable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function framebuffer_alloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value_probe to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __raw_spin_lock_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function init_timer_key to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snprintf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_request_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ioremap_nocache to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_unmap_rom to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_map_rom to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function i2c_bit_add_bus to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_warn to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_dev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strlcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_alloc_cmap to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function trace_hardirqs_off to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function do_gettimeofday to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function trace_hardirqs_on to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_ddc_read to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_edid_to_monspecs to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_videomode_to_modelist to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_find_mode to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_var_to_videomode to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_add_videomode to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sysfs_create_bin_file to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_find_capability to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function register_framebuffer to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mtrr_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function backlight_device_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_bl_default_curve to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_parse_edid to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            2756176 (22% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  2538374 (92%)
  Because of loop head:            215975 (8%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         1827 (0%)
  Times precision was empty:       159163 (6%)
  Times precision was {false}:     1519 (0%)
  Times result was cached:         2587276 (94%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      8218 (0%)
  Times result was 'false':        12127 (0%)
Number of strengthen sat checks:   0
Number of coverage checks:         1482667
  BDD entailment checks:           771685
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       45
Number of predicates discovered:          15
Number of abstraction locations:          387
Max number of predicates per location:    13
Avg number of predicates per location:    5
Total predicates per abstraction:         20708850
Max number of predicates per abstraction: 13
Avg number of predicates per abstraction: 2126.82
Number of irrelevant predicates:          12908569 (62%)
Number of preds handled by boolean abs:   24001 (0%)
  Total number of models for allsat:      8892
  Max number of models for allsat:        4
  Avg number of models for allsat:        1.08

Time for post operator:                 33.007s
  Time for path formula creation:       30.927s
Time for strengthen operator:            5.219s
Time for prec operator:                455.680s
  Time for abstraction:                439.365s (Max:     0.229s, Count: 2756176)
    Boolean abstraction:                11.940s
    Solving time:                       12.871s (Max:     0.142s)
    Model enumeration time:              0.761s
    Time for BDD construction:           0.192s (Max:     0.012s)
Time for merge operator:                 1.446s
Time for coverage check:                 0.403s
  Time for BDD entailment checks:        0.320s
Total time for SMT solver (w/o itp):    13.632s

Number of path formula cache hits:   15697073 (99%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     6.404s

Total number of created targets for pointer analysis: 75893
   Number of created targets for uf: *(struct_radeonfb_info)* is 30
   Number of created targets for uf: *signed_int is 88
   Number of created targets for uf: *unsigned_char is 610
   Number of created targets for uf: *enum_radeon_pm_mode is 976
   Number of created targets for uf: *(Return_type:_[void],_Parameters:_1,_Parameter_1_type:_[(struct_radeonfb_info)*],_VarArgs:_false)* is 495
   Number of created targets for uf: *(unsigned_char)* is 21
   Number of created targets for uf: *unsigned_int is 169
   Number of created targets for uf: *char is 6
   Number of created targets for uf: *unsigned_long_int is 21


Number of BDD nodes:                               810
Size of BDD node table:                            464047
Size of BDD cache:                                 46411
Size of BDD node cleanup queue:                       17092 (count: 989680, min: 0, max: 296, avg: 0.02)
Time for BDD node cleanup:                             0.096s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  6.709s
  Time for transition matches:                         3.753s
  Time for transition assertions:                      0.003s
  Time for transition actions:                         0.008s
Automaton transfers with branching:                0
Automaton transfer successors:                     12760009 (count: 12760009, min: 1, max: 1, avg: 1.00) [1 x 12760009]

CPA algorithm statistics
------------------------
Number of iterations:            8979989
Max size of waitlist:            30
Average size of waitlist:        13
Number of computed successors:   9909501
Max successors for one state:    2
Number of times merged:          355491
Number of times stopped:         886232
Number of times breaked:         1827

Total time for CPA algorithm:       826.070s (Max:     3.404s)
  Time for choose from waitlist:      1.913s
  Time for precision adjustment:    487.059s
  Time for transfer relation:       308.737s
  Time for merge operator:            4.161s
  Time for stop operator:             6.007s
  Time for adding to reached set:     7.050s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   1827
Avg. length of target path (in blocks):              123141 (count: 1827, min: 7, max: 440, avg: 67.40)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  57.184s
  Counterexample analysis:                            45.860s (Max:     0.235s, Calls: 1827)
    Refinement sat check:                             30.802s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.047s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.437s
  Precision update:                                    1.119s
  ARG update:                                          9.284s

Length of refined path (in blocks):                  106633 (count: 1827, min: 6, max: 439, avg: 58.37)
Number of affected states:                            93706 (count: 1827, min: 1, max: 437, avg: 51.29)
Length (states) of path with itp 'true':              11100 (count: 1827, min: 0, max: 314, avg: 6.08)
Length (states) of path with itp non-trivial itp:     93706 (count: 1827, min: 1, max: 437, avg: 51.29)
Length (states) of path with itp 'false':              1827 (count: 1827, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 1827, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:           91879 (count: 1827, min: 0, max: 436, avg: 50.29)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                1827
Number of successful refinements:     1827
Number of failed refinements:         0
Max. size of reached set before ref.: 40407
Max. size of reached set after ref.:  28758
Avg. size of reached set before ref.: 10894.33
Avg. size of reached set after ref.:  5973.81

Total time for CEGAR algorithm:     896.010s
Time for refinements:                66.243s
Average time for refinement:          0.036s
Max time for refinement:              0.373s

Code Coverage
-----------------------------
  Function coverage:      0.292
  Visited lines:          2176
  Total lines:            6139
  Line coverage:          0.354
  Visited conditions:     488
  Total conditions:       1546
  Condition coverage:     0.316

CPAchecker general statistics
-----------------------------
Number of program locations:     8772
Number of CFA edges:             10682
Number of relevant variables:    995
Number of functions:             226
Number of loops:                 60
Size of reached set:             21365
  Number of reached locations:   1410 (16%)
    Avg states per location:     15
    Max states per location:     806 (at node N68)
  Number of reached functions:   66 (29%)
  Number of partitions:          21207
    Avg size of partitions:      1
    Max size of partitions:      4 (with key [N1529 (before line 5683), Function radeonfb_setcmap called from node N3089, stack depth 2 [36ebac1c], stack [main, radeonfb_setcmap]])
  Number of target states:       0
  Size of final wait list        12

Time for analysis setup:          4.314s
  Time for loading CPAs:          0.607s
  Time for loading parser:        0.397s
  Time for CFA construction:      3.229s
    Time for parsing file(s):     0.709s
    Time for AST to CFA:          1.168s
    Time for CFA sanity check:    0.317s
    Time for post-processing:     0.886s
      Time for var class.:        0.492s
Time for Analysis:              896.010s
CPU time for analysis:          895.990s
Total time for CPAchecker:      900.334s
Total CPU time for CPAchecker:  900.300s
Time for statistics:              0.303s

Time for Garbage Collector:      45.458s (in 4555 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                250MB (   238 MiB) max;    153MB (   146 MiB) avg;    257MB (   245 MiB) peak
Used non-heap memory:             41MB (    39 MiB) max;     41MB (    39 MiB) avg;     41MB (    40 MiB) peak
Allocated heap memory:           255MB (   243 MiB) max;    255MB (   243 MiB) avg
Allocated non-heap memory:        44MB (    42 MiB) max;     43MB (    41 MiB) avg
Total process virtual memory:  12280MB ( 11711 MiB) max;  12232MB ( 11665 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
