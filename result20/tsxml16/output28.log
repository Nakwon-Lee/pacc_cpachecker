scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 9600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-32_7a-drivers--video--aty--radeonfb.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 9600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_o7_z3ooz/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker 1.6.1-svn 6608050+ (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 5096: Dead code detected: v.bits_per_pixel = 8U; (CFACreationUtils.addEdgeToCFA, INFO)

line 5098: Dead code detected: v.bits_per_pixel = 16U; (CFACreationUtils.addEdgeToCFA, INFO)

line 5100: Dead code detected: return (-22); (CFACreationUtils.addEdgeToCFA, INFO)

line 5101: Dead code detected: v.bits_per_pixel = 32U; (CFACreationUtils.addEdgeToCFA, INFO)

line 5272: Dead code detected: __asm__ volatile ("call __get_user_1": "=a" (__ret_gu), "=d" (__val_gu): "0" ((__u32 *)arg)); (CFACreationUtils.addEdgeToCFA, INFO)

line 5275: Dead code detected: __asm__ volatile ("call __get_user_2": "=a" (__ret_gu), "=d" (__val_gu): "0" ((__u32 *)arg)); (CFACreationUtils.addEdgeToCFA, INFO)

line 5281: Dead code detected: __asm__ volatile ("call __get_user_8": "=a" (__ret_gu), "=d" (__val_gu): "0" ((__u32 *)arg)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (4UL) {
  case 1UL:
  __asm__ volatile ("call __get_user_1": "=a" (__ret_gu), "=d" (__val_gu): "0" ((__u32 *)arg));
  goto ldv_33448;
  case 2UL:
  __asm__ volatile ("call __get_user_2": "=a" (__ret_gu), "=d" (__val_gu): "0" ((__u32 *)arg));
  goto ldv_33448;
  case 4UL:
  __asm__ volatile ("call __get_user_4": "=a" (__ret_gu), "=d" (__val_gu): "0" ((__u32 *)arg));
  goto ldv_33448;
  case 8UL:
  __asm__ volatile ("call __get_user_8": "=a" (__ret_gu), "=d" (__val_gu): "0" ((__u32 *)arg));
  goto ldv_33448;
  default:
  __asm__ volatile ("call __get_user_X": "=a" (__ret_gu), "=d" (__val_gu): "0" ((__u32 *)arg));
  goto ldv_33448;
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 5337: Dead code detected: __asm__ volatile ("call __put_user_1": "=a" (__ret_pu): "0" (__pu_val), "c" ((__u32 *)arg): "ebx"); (CFACreationUtils.addEdgeToCFA, INFO)

line 5340: Dead code detected: __asm__ volatile ("call __put_user_2": "=a" (__ret_pu): "0" (__pu_val), "c" ((__u32 *)arg): "ebx"); (CFACreationUtils.addEdgeToCFA, INFO)

line 5346: Dead code detected: __asm__ volatile ("call __put_user_8": "=a" (__ret_pu): "0" (__pu_val), "c" ((__u32 *)arg): "ebx"); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (4UL) {
  case 1UL:
  __asm__ volatile ("call __put_user_1": "=a" (__ret_pu): "0" (__pu_val), "c" ((__u32 *)arg): "ebx");
  goto ldv_33458;
  case 2UL:
  __asm__ volatile ("call __put_user_2": "=a" (__ret_pu): "0" (__pu_val), "c" ((__u32 *)arg): "ebx");
  goto ldv_33458;
  case 4UL:
  __asm__ volatile ("call __put_user_4": "=a" (__ret_pu): "0" (__pu_val), "c" ((__u32 *)arg): "ebx");
  goto ldv_33458;
  case 8UL:
  __asm__ volatile ("call __put_user_8": "=a" (__ret_pu): "0" (__pu_val), "c" ((__u32 *)arg): "ebx");
  goto ldv_33458;
  default:
  __asm__ volatile ("call __put_user_X": "=a" (__ret_pu): "0" (__pu_val), "c" ((__u32 *)arg): "ebx");
  goto ldv_33458;
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 7270: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 7918: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 7937: Dead code detected: __ms___0 = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 7956: Dead code detected: __ms___1 = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 8139: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 8177: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 8216: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 8239: Dead code detected: __ms___0 = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 8262: Dead code detected: __ms___1 = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 8285: Dead code detected: __ms___2 = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 8329: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 8410: Dead code detected: __ms___0 = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 8429: Dead code detected: __ms___1 = 5UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 8448: Dead code detected: __ms___2 = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 8467: Dead code detected: __ms___3 = 5UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 8486: Dead code detected: __ms___4 = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 8505: Dead code detected: __ms___5 = 5UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 8573: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 8592: Dead code detected: __ms___0 = 5UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 8711: Dead code detected: __ms___0 = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 8861: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 9076: Dead code detected: __ms___0 = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 9097: Dead code detected: __ms___1 = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 9135: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 9153: Dead code detected: __ms___0 = 3UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 9188: Dead code detected: __ms___2 = 5UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 9256: Dead code detected: __ms = 5UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 9285: Dead code detected: __ms___0 = 5UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 9304: Dead code detected: __ms___1 = 5UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 9323: Dead code detected: __ms___2 = 5UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 9342: Dead code detected: __ms___3 = 5UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 9501: Dead code detected: __ms___0 = 5UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 9527: Dead code detected: __ms___1 = 5UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 9583: Dead code detected: __ms___2 = 3UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 9791: Dead code detected: __ms___0 = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 9810: Dead code detected: __ms___1 = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 10079: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 10765: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 11680: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 12119: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 12512: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 12889: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_handler_precall to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __pci_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function msleep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sysfs_remove_bin_file to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function del_timer_sync to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mtrr_del to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function unregister_framebuffer to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function backlight_device_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iounmap to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_release_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_destroy_modedb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function i2c_del_adapter to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_dealloc_cmap to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function framebuffer_release to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            48974 (19% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  44033 (90%)
  Because of loop head:            4847 (10%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         94 (0%)
  Times precision was empty:       6392 (13%)
  Times precision was {false}:     257 (1%)
  Times result was cached:         40760 (83%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      1565 (3%)
  Times result was 'false':        871 (2%)
Number of strengthen sat checks:   0
Number of coverage checks:         40480
  BDD entailment checks:           14570
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       45
Number of predicates discovered:          7
Number of abstraction locations:          97
Max number of predicates per location:    6
Avg number of predicates per location:    4
Total predicates per abstraction:         139548
Max number of predicates per abstraction: 6
Avg number of predicates per abstraction: 76.59
Number of irrelevant predicates:          41402 (30%)
Number of preds handled by boolean abs:   4273 (3%)
  Total number of models for allsat:      1736
  Max number of models for allsat:        4
  Avg number of models for allsat:        1.11

Time for post operator:                  3.679s
  Time for path formula creation:        3.569s
Time for strengthen operator:            0.198s
Time for prec operator:                  9.594s
  Time for abstraction:                  8.936s (Max:     0.026s, Count: 48974)
    Boolean abstraction:                 1.341s
    Solving time:                        1.060s (Max:     0.020s)
    Model enumeration time:              0.155s
    Time for BDD construction:           0.102s (Max:     0.007s)
Time for merge operator:                 0.382s
Time for coverage check:                 0.037s
  Time for BDD entailment checks:        0.031s
Total time for SMT solver (w/o itp):     1.215s

Number of path formula cache hits:   281601 (90%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     2.833s

Total number of created targets for pointer analysis: 12198
   Number of created targets for uf: *unsigned_int is 2775


Number of BDD nodes:                               312
Size of BDD node table:                            464047
Size of BDD cache:                                 46411
Size of BDD node cleanup queue:                        3154 (count: 31706, min: 0, max: 175, avg: 0.10)
Time for BDD node cleanup:                             0.022s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.310s
Automaton transfers with branching:                0
Automaton transfer successors:                       259975 (count: 259975, min: 1, max: 1, avg: 1.00) [1 x 259975]

CPA algorithm statistics
------------------------
Number of iterations:            180324
Max size of waitlist:            25
Average size of waitlist:        15
Number of computed successors:   205558
Max successors for one state:    2
Number of times merged:          12955
Number of times stopped:         22652
Number of times breaked:         94

Total time for CPA algorithm:        23.705s (Max:     0.734s)
  Time for choose from waitlist:      0.143s
  Time for precision adjustment:     10.789s
  Time for transfer relation:        10.826s
  Time for merge operator:            0.634s
  Time for stop operator:             0.263s
  Time for adding to reached set:     0.329s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   94
Avg. length of target path (in blocks):                2594 (count: 94, min: 7, max: 53, avg: 27.60)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   2.098s
  Counterexample analysis:                             1.592s (Max:     0.036s, Calls: 94)
    Refinement sat check:                              1.277s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.008s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.078s
  Precision update:                                    0.091s
  ARG update:                                          0.293s

Length of refined path (in blocks):                    2460 (count: 94, min: 6, max: 52, avg: 26.17)
Number of affected states:                             2232 (count: 94, min: 4, max: 50, avg: 23.74)
Length (states) of path with itp 'true':                134 (count: 94, min: 1, max: 6, avg: 1.43)
Length (states) of path with itp non-trivial itp:      2232 (count: 94, min: 4, max: 50, avg: 23.74)
Length (states) of path with itp 'false':                94 (count: 94, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 94, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:            2138 (count: 94, min: 3, max: 49, avg: 22.74)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                94
Number of successful refinements:     94
Number of failed refinements:         0
Max. size of reached set before ref.: 2635
Max. size of reached set after ref.:  831
Avg. size of reached set before ref.: 1986.54
Avg. size of reached set after ref.:  68.72

Total time for CEGAR algorithm:      25.971s
Time for refinements:                 2.256s
Average time for refinement:          0.024s
Max time for refinement:              0.050s

Code Coverage
-----------------------------
  Function coverage:      0.177
  Visited lines:          1085
  Total lines:            6139
  Line coverage:          0.177
  Visited conditions:     134
  Total conditions:       1546
  Condition coverage:     0.087

CPAchecker general statistics
-----------------------------
Number of program locations:     8772
Number of CFA edges:             10682
Number of relevant variables:    995
Number of functions:             226
Number of loops:                 60
Size of reached set:             1761
  Number of reached locations:   429 (5%)
    Avg states per location:     4
    Max states per location:     45 (at node N68)
  Number of reached functions:   40 (18%)
  Number of partitions:          1750
    Avg size of partitions:      1
    Max size of partitions:      3 (with key [N1446 (before line 5597), Function radeonfb_setcolreg called from node N3084, stack depth 2 [6e004548], stack [main, radeonfb_setcolreg]])
  Number of target states:       0
  Size of final wait list        20

Time for analysis setup:          4.391s
  Time for loading CPAs:          0.721s
  Time for loading parser:        0.364s
  Time for CFA construction:      3.232s
    Time for parsing file(s):     0.661s
    Time for AST to CFA:          1.129s
    Time for CFA sanity check:    0.381s
    Time for post-processing:     0.956s
      Time for var class.:        0.505s
Time for Analysis:               25.971s
CPU time for analysis:           25.970s
Total time for CPAchecker:       30.364s
Total CPU time for CPAchecker:   30.350s
Time for statistics:              0.099s

Time for Garbage Collector:       0.609s (in 75 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                125MB (   120 MiB) max;     82MB (    78 MiB) avg;    133MB (   127 MiB) peak
Used non-heap memory:             42MB (    40 MiB) max;     37MB (    35 MiB) avg;     42MB (    40 MiB) peak
Allocated heap memory:           255MB (   243 MiB) max;    255MB (   243 MiB) avg
Allocated non-heap memory:        44MB (    42 MiB) max;     39MB (    37 MiB) avg
Total process virtual memory:  12144MB ( 11582 MiB) max;  12137MB ( 11574 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
