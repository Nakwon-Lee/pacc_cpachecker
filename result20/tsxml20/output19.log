scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 9600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-drivers--block--paride--pcd.ko-main.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 9600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_poddvbf1/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker 1.6.1-svn 6608050+ (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 4029: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 4099: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 4150: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 4890: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 4939: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 5595: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function delayed_work_timer_fn to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function cdrom_release to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function cdrom_open to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function blk_cleanup_queue to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function unregister_blkdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function del_gendisk to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_release to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function unregister_cdrom to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function put_disk to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_connect to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_write_regr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_read_regr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_disconnect to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_write_block to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function schedule_timeout_interruptible to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_read_block to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snprintf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 3676: Ignoring call via function pointer ps_ready for which no suitable target was found in line: tmp___0 = (*ps_ready)(); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 3676: Ignoring function call through function pointer *ps_ready: tmp___0 = (*ps_ready)(); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function schedule_delayed_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 3673: Ignoring call via function pointer ps_tq_int::con for which no suitable target was found in line: (*con)(); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 3673: Ignoring function call through function pointer *con: (*con)(); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function pi_do_claimed to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __blk_end_request_cur to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 3680: Ignoring call via function pointer ps_tq_int::con for which no suitable target was found in line: (*con)(); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 3680: Ignoring function call through function pointer *con: (*con)(); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function blk_fetch_request to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __blk_end_request_all to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 3686: Ignoring call via function pointer ps_tq_int::con for which no suitable target was found in line: (*con)(); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 3686: Ignoring function call through function pointer *con: (*con)(); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function pi_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function register_blkdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function blk_init_queue to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function register_cdrom to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function add_disk to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            96701 (17% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  84700 (88%)
  Because of loop head:            11978 (12%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         23 (0%)
  Times precision was empty:       86260 (89%)
  Times precision was {false}:     489 (1%)
  Times result was cached:         9802 (10%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      150 (0%)
  Times result was 'false':        140 (0%)
Number of strengthen sat checks:   0
Number of coverage checks:         96982
  BDD entailment checks:           18464
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       60
Number of predicates discovered:          8
Number of abstraction locations:          54
Max number of predicates per location:    7
Avg number of predicates per location:    1
Total predicates per abstraction:         18821
Max number of predicates per abstraction: 7
Avg number of predicates per abstraction: 29.45
Number of irrelevant predicates:          17575 (93%)
Number of preds handled by boolean abs:   269 (1%)
  Total number of models for allsat:      148
  Max number of models for allsat:        1
  Avg number of models for allsat:        0.99

Time for post operator:                  8.586s
  Time for path formula creation:        8.328s
Time for strengthen operator:            0.482s
Time for prec operator:                  4.674s
  Time for abstraction:                  3.526s (Max:     0.122s, Count: 96701)
    Boolean abstraction:                 0.499s
    Solving time:                        1.397s (Max:     0.119s)
    Model enumeration time:              0.027s
    Time for BDD construction:           0.015s (Max:     0.005s)
Time for merge operator:                 0.726s
Time for coverage check:                 0.076s
  Time for BDD entailment checks:        0.054s
Total time for SMT solver (w/o itp):     1.424s

Number of path formula cache hits:   601192 (87%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     6.428s

Total number of created targets for pointer analysis: 61841
   Number of created targets for uf: *(void)* is 57
   Number of created targets for uf: *(struct_pi_adapter)* is 5
   Number of created targets for uf: *signed_int is 41
   Number of created targets for uf: *(char)* is 5
   Number of created targets for uf: *(struct_gendisk)* is 5
   Number of created targets for uf: *char is 3533


Number of BDD nodes:                               228
Size of BDD node table:                            464047
Size of BDD cache:                                 46411
Size of BDD node cleanup queue:                         420 (count: 108178, min: 0, max: 44, avg: 0.00)
Time for BDD node cleanup:                             0.022s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.680s
  Time for transition matches:                         0.399s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.000s
Automaton transfers with branching:                0
Automaton transfer successors:                       576648 (count: 576648, min: 1, max: 1, avg: 1.00) [1 x 576648]

CPA algorithm statistics
------------------------
Number of iterations:            369812
Max size of waitlist:            59
Average size of waitlist:        37
Number of computed successors:   427922
Max successors for one state:    2
Number of times merged:          39259
Number of times stopped:         57257
Number of times breaked:         23

Total time for CPA algorithm:        25.505s (Max:     6.818s)
  Time for choose from waitlist:      0.231s
  Time for precision adjustment:      7.339s
  Time for transfer relation:        14.013s
  Time for merge operator:            1.334s
  Time for stop operator:             0.608s
  Time for adding to reached set:     0.675s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   23
Avg. length of target path (in blocks):                 535 (count: 23, min: 8, max: 56, avg: 23.26)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   1.522s
  Counterexample analysis:                             0.611s (Max:     0.073s, Calls: 23)
    Refinement sat check:                              0.497s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.020s
  Precision update:                                    0.005s
  ARG update:                                          0.877s

Length of refined path (in blocks):                     457 (count: 23, min: 4, max: 55, avg: 19.87)
Number of affected states:                              377 (count: 23, min: 0, max: 53, avg: 16.39)
Length (states) of path with itp 'true':                 57 (count: 23, min: 0, max: 31, avg: 2.48)
Length (states) of path with itp non-trivial itp:       377 (count: 23, min: 0, max: 53, avg: 16.39)
Length (states) of path with itp 'false':                23 (count: 23, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 23, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:             356 (count: 23, min: 0, max: 52, avg: 15.48)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                23
Number of successful refinements:     23
Number of failed refinements:         0
Max. size of reached set before ref.: 34080
Max. size of reached set after ref.:  31928
Avg. size of reached set before ref.: 17926.65
Avg. size of reached set after ref.:  1825.30

Total time for CEGAR algorithm:      27.432s
Time for refinements:                 1.894s
Average time for refinement:          0.082s
Max time for refinement:              0.224s

Code Coverage
-----------------------------
  Function coverage:      0.170
  Visited lines:          827
  Total lines:            2092
  Line coverage:          0.395
  Visited conditions:     110
  Total conditions:       494
  Condition coverage:     0.223

CPAchecker general statistics
-----------------------------
Number of program locations:     2772
Number of CFA edges:             3091
Number of relevant variables:    271
Number of functions:             94
Number of loops:                 20
Size of reached set:             194
  Number of reached locations:   185 (7%)
    Avg states per location:     1
    Max states per location:     2 (at node N144)
  Number of reached functions:   16 (17%)
  Number of partitions:          194
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0
  Size of final wait list        24

Time for analysis setup:          2.917s
  Time for loading CPAs:          0.572s
  Time for loading parser:        0.405s
  Time for CFA construction:      1.878s
    Time for parsing file(s):     0.547s
    Time for AST to CFA:          0.619s
    Time for CFA sanity check:    0.132s
    Time for post-processing:     0.461s
      Time for var class.:        0.228s
Time for Analysis:               27.432s
CPU time for analysis:           27.440s
Total time for CPAchecker:       30.351s
Total CPU time for CPAchecker:   30.340s
Time for statistics:              0.050s

Time for Garbage Collector:       1.800s (in 71 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                251MB (   239 MiB) max;    113MB (   108 MiB) avg;    260MB (   248 MiB) peak
Used non-heap memory:             39MB (    37 MiB) max;     36MB (    35 MiB) avg;     39MB (    38 MiB) peak
Allocated heap memory:           255MB (   243 MiB) max;    255MB (   243 MiB) avg
Allocated non-heap memory:        41MB (    39 MiB) max;     38MB (    36 MiB) avg
Total process virtual memory:  12082MB ( 11523 MiB) max;  12073MB ( 11513 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
