scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 9600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-drivers--block--paride--pcd.ko-main.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 9600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_wm0pmrr6/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker 1.6.1-svn 6608050+ (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 4029: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 4099: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 4150: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 4890: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 4939: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 5595: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function delayed_work_timer_fn to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snprintf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function register_blkdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function blk_init_queue to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function unregister_blkdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function register_cdrom to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function add_disk to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_connect to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function put_disk to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function blk_cleanup_queue to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function del_gendisk to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_release to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function unregister_cdrom to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_write_regr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_read_regr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_disconnect to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_read_block to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function schedule_timeout_interruptible to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_write_block to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            3085496 (13% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  2565310 (83%)
  Because of loop head:            519492 (17%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         694 (0%)
  Times precision was empty:       357515 (12%)
  Times precision was {false}:     3625 (0%)
  Times result was cached:         2711026 (88%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      13330 (0%)
  Times result was 'false':        114388 (4%)
Number of strengthen sat checks:   0
Number of coverage checks:         3637984
  BDD entailment checks:           1347392
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       60
Number of predicates discovered:          14
Number of abstraction locations:          105
Max number of predicates per location:    10
Avg number of predicates per location:    5
Total predicates per abstraction:         15019584
Max number of predicates per abstraction: 10
Avg number of predicates per abstraction: 885.85
Number of irrelevant predicates:          10760466 (72%)
Number of preds handled by boolean abs:   41775 (0%)
  Total number of models for allsat:      13828
  Max number of models for allsat:        9
  Avg number of models for allsat:        1.04

Time for post operator:                104.183s
  Time for path formula creation:      100.303s
Time for strengthen operator:           11.201s
Time for prec operator:                543.971s
  Time for abstraction:                525.333s (Max:     1.914s, Count: 3085496)
    Boolean abstraction:                71.756s
    Solving time:                       82.065s (Max:     0.196s)
    Model enumeration time:             11.871s
    Time for BDD construction:           0.194s (Max:     0.008s)
Time for merge operator:                 9.033s
Time for coverage check:                 0.627s
  Time for BDD entailment checks:        0.483s
Total time for SMT solver (w/o itp):    93.936s

Number of path formula cache hits:   25752848 (93%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    58.849s

Total number of created targets for pointer analysis: 2871472
   Number of created targets for uf: *(void)* is 3589
   Number of created targets for uf: *(struct_pi_adapter)* is 5785
   Number of created targets for uf: *signed_int is 60181
   Number of created targets for uf: *(char)* is 5785
   Number of created targets for uf: *(struct_gendisk)* is 5785
   Number of created targets for uf: *char is 11971


Number of BDD nodes:                               3911
Size of BDD node table:                            464047
Size of BDD cache:                                 46411
Size of BDD node cleanup queue:                       27224 (count: 1823928, min: 0, max: 323, avg: 0.01)
Time for BDD node cleanup:                             0.104s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                 13.177s
  Time for transition matches:                         7.623s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.004s
Automaton transfers with branching:                0
Automaton transfer successors:                     23893288 (count: 23893288, min: 1, max: 1, avg: 1.00) [1 x 23893288]

CPA algorithm statistics
------------------------
Number of iterations:            12607191
Max size of waitlist:            2054
Average size of waitlist:        559
Number of computed successors:   14758769
Max successors for one state:    2
Number of times merged:          1145296
Number of times stopped:         1699775
Number of times breaked:         694

Total time for CPA algorithm:       857.104s (Max:    18.412s)
  Time for choose from waitlist:      2.727s
  Time for precision adjustment:    597.602s
  Time for transfer relation:       205.190s
  Time for merge operator:           16.161s
  Time for stop operator:             8.293s
  Time for adding to reached set:    11.558s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   694
Avg. length of target path (in blocks):               26754 (count: 694, min: 8, max: 76, avg: 38.55)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  30.393s
  Counterexample analysis:                            14.915s (Max:     0.054s, Calls: 694)
    Refinement sat check:                             12.140s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.015s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.109s
  Precision update:                                    0.190s
  ARG update:                                         15.004s

Length of refined path (in blocks):                   21824 (count: 694, min: 4, max: 68, avg: 31.45)
Number of affected states:                            13565 (count: 694, min: 0, max: 67, avg: 19.55)
Length (states) of path with itp 'true':               7565 (count: 694, min: 0, max: 32, avg: 10.90)
Length (states) of path with itp non-trivial itp:     13565 (count: 694, min: 0, max: 67, avg: 19.55)
Length (states) of path with itp 'false':               694 (count: 694, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 694, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:           12885 (count: 694, min: 0, max: 66, avg: 18.57)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                694
Number of successful refinements:     694
Number of failed refinements:         0
Max. size of reached set before ref.: 291074
Max. size of reached set after ref.:  178524
Avg. size of reached set before ref.: 27786.50
Avg. size of reached set after ref.:  9287.52

Total time for CEGAR algorithm:     898.185s
Time for refinements:                37.944s
Average time for refinement:          0.054s
Max time for refinement:              0.444s

Code Coverage
-----------------------------
  Function coverage:      0.404
  Visited lines:          1508
  Total lines:            2092
  Line coverage:          0.721
  Visited conditions:     290
  Total conditions:       494
  Condition coverage:     0.587

CPAchecker general statistics
-----------------------------
Number of program locations:     2772
Number of CFA edges:             3091
Number of relevant variables:    271
Number of functions:             94
Number of loops:                 20
Size of reached set:             106310
  Number of reached locations:   713 (26%)
    Avg states per location:     149
    Max states per location:     4730 (at node N228)
  Number of reached functions:   38 (40%)
  Number of partitions:          105890
    Avg size of partitions:      1
    Max size of partitions:      13 (with key [N1518 (before line 5250), Function main called from node N1505, stack depth 1 [68809cc7], stack [main]])
  Number of target states:       0
  Size of final wait list        1148

Time for analysis setup:          2.937s
  Time for loading CPAs:          0.545s
  Time for loading parser:        0.408s
  Time for CFA construction:      1.930s
    Time for parsing file(s):     0.551s
    Time for AST to CFA:          0.667s
    Time for CFA sanity check:    0.138s
    Time for post-processing:     0.476s
      Time for var class.:        0.221s
Time for Analysis:              898.185s
CPU time for analysis:          898.170s
Total time for CPAchecker:      901.124s
Total CPU time for CPAchecker:  901.100s
Time for statistics:              0.675s

Time for Garbage Collector:      79.141s (in 2840 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:               1678MB (  1601 MiB) max;    470MB (   448 MiB) avg;   1700MB (  1622 MiB) peak
Used non-heap memory:             40MB (    38 MiB) max;     39MB (    38 MiB) avg;     41MB (    39 MiB) peak
Allocated heap memory:          1739MB (  1659 MiB) max;    686MB (   654 MiB) avg
Allocated non-heap memory:        42MB (    40 MiB) max;     42MB (    40 MiB) avg
Total process virtual memory:  12356MB ( 11784 MiB) max;  12222MB ( 11655 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
