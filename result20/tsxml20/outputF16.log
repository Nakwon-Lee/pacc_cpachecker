scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 9600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-drivers--block--paride--pcd.ko-main.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 9600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_zgx56ss9/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker 1.6.1-svn 6608050+ (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 4029: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 4099: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 4150: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 4890: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 4939: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 5595: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function delayed_work_timer_fn to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snprintf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function register_blkdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function blk_init_queue to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function unregister_blkdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function register_cdrom to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function add_disk to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_connect to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function put_disk to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function blk_cleanup_queue to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function del_gendisk to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_release to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function unregister_cdrom to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_write_regr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_read_regr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_disconnect to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_read_block to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function schedule_timeout_interruptible to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_write_block to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            3032204 (13% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  2519551 (83%)
  Because of loop head:            511962 (17%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         691 (0%)
  Times precision was empty:       353702 (12%)
  Times precision was {false}:     3598 (0%)
  Times result was cached:         2661626 (88%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      13278 (0%)
  Times result was 'false':        113536 (4%)
Number of strengthen sat checks:   0
Number of coverage checks:         3577443
  BDD entailment checks:           1331553
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       60
Number of predicates discovered:          14
Number of abstraction locations:          105
Max number of predicates per location:    10
Avg number of predicates per location:    5
Total predicates per abstraction:         14704745
Max number of predicates per abstraction: 10
Avg number of predicates per abstraction: 871.34
Number of irrelevant predicates:          10547286 (72%)
Number of preds handled by boolean abs:   41539 (0%)
  Total number of models for allsat:      13765
  Max number of models for allsat:        9
  Avg number of models for allsat:        1.04

Time for post operator:                106.704s
  Time for path formula creation:      103.150s
Time for strengthen operator:            9.874s
Time for prec operator:                545.819s
  Time for abstraction:                527.062s (Max:     1.905s, Count: 3032204)
    Boolean abstraction:                72.356s
    Solving time:                       82.766s (Max:     0.201s)
    Model enumeration time:             12.036s
    Time for BDD construction:           0.194s (Max:     0.009s)
Time for merge operator:                 8.995s
Time for coverage check:                 0.638s
  Time for BDD entailment checks:        0.488s
Total time for SMT solver (w/o itp):    94.802s

Number of path formula cache hits:   25333441 (93%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    60.435s

Total number of created targets for pointer analysis: 2849125
   Number of created targets for uf: *(void)* is 3569
   Number of created targets for uf: *(struct_pi_adapter)* is 5761
   Number of created targets for uf: *signed_int is 59881
   Number of created targets for uf: *(char)* is 5761
   Number of created targets for uf: *(struct_gendisk)* is 5761
   Number of created targets for uf: *char is 9667


Number of BDD nodes:                               3911
Size of BDD node table:                            464047
Size of BDD cache:                                 46411
Size of BDD node cleanup queue:                       27120 (count: 1803648, min: 0, max: 242, avg: 0.02)
Time for BDD node cleanup:                             0.145s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                 14.608s
  Time for transition matches:                         9.216s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.006s
Automaton transfers with branching:                0
Automaton transfer successors:                     23533429 (count: 23533429, min: 1, max: 1, avg: 1.00) [1 x 23533429]

CPA algorithm statistics
------------------------
Number of iterations:            12393136
Max size of waitlist:            2054
Average size of waitlist:        554
Number of computed successors:   14509574
Max successors for one state:    2
Number of times merged:          1122945
Number of times stopped:         1667996
Number of times breaked:         691

Total time for CPA algorithm:       856.757s (Max:    19.992s)
  Time for choose from waitlist:      2.796s
  Time for precision adjustment:    597.611s
  Time for transfer relation:       204.581s
  Time for merge operator:           16.110s
  Time for stop operator:             9.846s
  Time for adding to reached set:    10.909s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   691
Avg. length of target path (in blocks):               26566 (count: 691, min: 8, max: 71, avg: 38.45)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  29.671s
  Counterexample analysis:                            14.750s (Max:     0.053s, Calls: 691)
    Refinement sat check:                             12.003s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.028s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.102s
  Precision update:                                    0.191s
  ARG update:                                         14.439s

Length of refined path (in blocks):                   21658 (count: 691, min: 4, max: 63, avg: 31.34)
Number of affected states:                            13432 (count: 691, min: 0, max: 62, avg: 19.44)
Length (states) of path with itp 'true':               7535 (count: 691, min: 0, max: 32, avg: 10.90)
Length (states) of path with itp non-trivial itp:     13432 (count: 691, min: 0, max: 62, avg: 19.44)
Length (states) of path with itp 'false':               691 (count: 691, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 691, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:           12755 (count: 691, min: 0, max: 61, avg: 18.46)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                691
Number of successful refinements:     691
Number of failed refinements:         0
Max. size of reached set before ref.: 291074
Max. size of reached set after ref.:  178524
Avg. size of reached set before ref.: 27269.92
Avg. size of reached set after ref.:  9192.91

Total time for CEGAR algorithm:     896.976s
Time for refinements:                37.242s
Average time for refinement:          0.053s
Max time for refinement:              0.445s

Code Coverage
-----------------------------
  Function coverage:      0.415
  Visited lines:          1566
  Total lines:            2092
  Line coverage:          0.749
  Visited conditions:     302
  Total conditions:       494
  Condition coverage:     0.611

CPAchecker general statistics
-----------------------------
Number of program locations:     2772
Number of CFA edges:             3091
Number of relevant variables:    271
Number of functions:             94
Number of loops:                 20
Size of reached set:             236830
  Number of reached locations:   752 (27%)
    Avg states per location:     314
    Max states per location:     11299 (at node N227)
  Number of reached functions:   39 (41%)
  Number of partitions:          235963
    Avg size of partitions:      1
    Max size of partitions:      13 (with key [N1518 (before line 5250), Function main called from node N1505, stack depth 1 [68809cc7], stack [main]])
  Number of target states:       0
  Size of final wait list        1383

Time for analysis setup:          2.946s
  Time for loading CPAs:          0.604s
  Time for loading parser:        0.406s
  Time for CFA construction:      1.878s
    Time for parsing file(s):     0.577s
    Time for AST to CFA:          0.588s
    Time for CFA sanity check:    0.148s
    Time for post-processing:     0.478s
      Time for var class.:        0.235s
Time for Analysis:              896.976s
CPU time for analysis:          896.980s
Total time for CPAchecker:      899.924s
Total CPU time for CPAchecker:  899.920s
Time for statistics:              1.183s

Time for Garbage Collector:      76.842s (in 2771 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:               1565MB (  1492 MiB) max;    463MB (   442 MiB) avg;   1617MB (  1542 MiB) peak
Used non-heap memory:             40MB (    38 MiB) max;     40MB (    38 MiB) avg;     41MB (    39 MiB) peak
Allocated heap memory:          1619MB (  1544 MiB) max;    680MB (   649 MiB) avg
Allocated non-heap memory:        42MB (    40 MiB) max;     42MB (    40 MiB) avg
Total process virtual memory:  12356MB ( 11784 MiB) max;  12221MB ( 11654 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
