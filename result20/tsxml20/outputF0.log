scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 9600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-drivers--block--paride--pcd.ko-main.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 9600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_mvjmvc5a/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker 1.6.1-svn 6608050+ (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 4029: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 4099: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 4150: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 4890: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 4939: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 5595: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function delayed_work_timer_fn to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function blk_cleanup_queue to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function unregister_blkdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function del_gendisk to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_release to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function unregister_cdrom to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function put_disk to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_connect to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 3676: Ignoring call via function pointer ps_ready for which no suitable target was found in line: tmp___0 = (*ps_ready)(); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 3676: Ignoring function call through function pointer *ps_ready: tmp___0 = (*ps_ready)(); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function schedule_delayed_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snprintf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_write_regr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_read_regr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 3686: Ignoring call via function pointer ps_tq_int::con for which no suitable target was found in line: (*con)(); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 3686: Ignoring function call through function pointer *con: (*con)(); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 3680: Ignoring call via function pointer ps_tq_int::con for which no suitable target was found in line: (*con)(); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 3680: Ignoring function call through function pointer *con: (*con)(); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 3673: Ignoring call via function pointer ps_tq_int::con for which no suitable target was found in line: (*con)(); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 3673: Ignoring function call through function pointer *con: (*con)(); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function pi_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function schedule_timeout_interruptible to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_do_claimed to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function register_blkdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function blk_init_queue to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_disconnect to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function register_cdrom to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function add_disk to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function cdrom_open to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function cdrom_release to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_write_block to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_read_block to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __blk_end_request_cur to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function blk_fetch_request to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __blk_end_request_all to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            3252088 (16% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  2735475 (84%)
  Because of loop head:            512870 (16%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         3743 (0%)
  Times precision was empty:       304149 (9%)
  Times precision was {false}:     6848 (0%)
  Times result was cached:         2920091 (90%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      21000 (1%)
  Times result was 'false':        189327 (6%)
Number of strengthen sat checks:   0
Number of coverage checks:         3203984
  BDD entailment checks:           1641742
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       60
Number of predicates discovered:          20
Number of abstraction locations:          158
Max number of predicates per location:    14
Avg number of predicates per location:    6
Total predicates per abstraction:         17482170
Max number of predicates per abstraction: 14
Avg number of predicates per abstraction: 627.77
Number of irrelevant predicates:          8108915 (46%)
Number of preds handled by boolean abs:   88902 (1%)
  Total number of models for allsat:      23593
  Max number of models for allsat:        18
  Avg number of models for allsat:        1.12

Time for post operator:                 49.600s
  Time for path formula creation:       46.496s
Time for strengthen operator:            8.856s
Time for prec operator:                504.683s
  Time for abstraction:                486.702s (Max:     0.772s, Count: 3252088)
    Boolean abstraction:                46.661s
    Solving time:                       42.790s (Max:     0.149s)
    Model enumeration time:              7.078s
    Time for BDD construction:           0.372s (Max:     0.010s)
Time for merge operator:                 3.006s
Time for coverage check:                 0.889s
  Time for BDD entailment checks:        0.715s
Total time for SMT solver (w/o itp):    49.868s

Number of path formula cache hits:   23874337 (98%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    16.135s

Total number of created targets for pointer analysis: 535947
   Number of created targets for uf: *(void)* is 354
   Number of created targets for uf: *(struct_pi_adapter)* is 1345
   Number of created targets for uf: *signed_int is 13771
   Number of created targets for uf: *(char)* is 1345
   Number of created targets for uf: *(struct_gendisk)* is 1345
   Number of created targets for uf: *char is 3001


Number of BDD nodes:                               25371
Size of BDD node table:                            464047
Size of BDD cache:                                 46411
Size of BDD node cleanup queue:                       46390 (count: 2139673, min: 0, max: 479, avg: 0.02)
Time for BDD node cleanup:                             0.118s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                 12.595s
  Time for transition matches:                         7.431s
  Time for transition assertions:                      0.001s
  Time for transition actions:                         0.013s
Automaton transfers with branching:                0
Automaton transfer successors:                     20679768 (count: 20679768, min: 1, max: 1, avg: 1.00) [1 x 20679768]

CPA algorithm statistics
------------------------
Number of iterations:            11141577
Max size of waitlist:            4221
Average size of waitlist:        1142
Number of computed successors:   12901740
Max successors for one state:    2
Number of times merged:          781121
Number of times stopped:         1160733
Number of times breaked:         3743

Total time for CPA algorithm:       729.585s (Max:     4.659s)
  Time for choose from waitlist:      2.962s
  Time for precision adjustment:    547.564s
  Time for transfer relation:       138.533s
  Time for merge operator:            8.238s
  Time for stop operator:             7.271s
  Time for adding to reached set:    10.244s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   3743
Avg. length of target path (in blocks):              105363 (count: 3743, min: 8, max: 48, avg: 28.15)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  68.956s
  Counterexample analysis:                            52.851s (Max:     0.055s, Calls: 3743)
    Refinement sat check:                             43.303s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.054s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.200s
  Precision update:                                    1.196s
  ARG update:                                         14.165s

Length of refined path (in blocks):                   98476 (count: 3743, min: 4, max: 47, avg: 26.31)
Number of affected states:                            21011 (count: 3743, min: 0, max: 45, avg: 5.61)
Length (states) of path with itp 'true':              73722 (count: 3743, min: 0, max: 33, avg: 19.70)
Length (states) of path with itp non-trivial itp:     21011 (count: 3743, min: 0, max: 45, avg: 5.61)
Length (states) of path with itp 'false':              3743 (count: 3743, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 3743, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:           17413 (count: 3743, min: 0, max: 44, avg: 4.65)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                3743
Number of successful refinements:     3743
Number of failed refinements:         0
Max. size of reached set before ref.: 139869
Max. size of reached set after ref.:  139194
Avg. size of reached set before ref.: 27499.33
Avg. size of reached set after ref.:  24416.84

Total time for CEGAR algorithm:     897.473s
Time for refinements:               124.291s
Average time for refinement:          0.033s
Max time for refinement:              0.425s

Code Coverage
-----------------------------
  Function coverage:      0.543
  Visited lines:          1613
  Total lines:            2092
  Line coverage:          0.771
  Visited conditions:     278
  Total conditions:       494
  Condition coverage:     0.563

CPAchecker general statistics
-----------------------------
Number of program locations:     2772
Number of CFA edges:             3091
Number of relevant variables:    271
Number of functions:             94
Number of loops:                 20
Size of reached set:             13925
  Number of reached locations:   754 (27%)
    Avg states per location:     18
    Max states per location:     268 (at node N234)
  Number of reached functions:   51 (54%)
  Number of partitions:          13775
    Avg size of partitions:      1
    Max size of partitions:      25 (with key [N1518 (before line 5250), Function main called from node N1505, stack depth 1 [68809cc7], stack [main]])
  Number of target states:       0
  Size of final wait list        546

Time for analysis setup:          2.877s
  Time for loading CPAs:          0.548s
  Time for loading parser:        0.368s
  Time for CFA construction:      1.873s
    Time for parsing file(s):     0.560s
    Time for AST to CFA:          0.579s
    Time for CFA sanity check:    0.146s
    Time for post-processing:     0.486s
      Time for var class.:        0.229s
Time for Analysis:              897.473s
CPU time for analysis:          897.460s
Total time for CPAchecker:      900.353s
Total CPU time for CPAchecker:  900.340s
Time for statistics:              0.195s

Time for Garbage Collector:      77.914s (in 3100 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                656MB (   626 MiB) max;    308MB (   294 MiB) avg;    669MB (   638 MiB) peak
Used non-heap memory:             40MB (    38 MiB) max;     40MB (    38 MiB) avg;     40MB (    38 MiB) peak
Allocated heap memory:           671MB (   640 MiB) max;    462MB (   441 MiB) avg
Allocated non-heap memory:        42MB (    40 MiB) max;     41MB (    40 MiB) avg
Total process virtual memory:  12486MB ( 11908 MiB) max;  12328MB ( 11757 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
