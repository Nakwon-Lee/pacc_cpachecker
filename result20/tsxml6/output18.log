scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 9600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-32_7a-lib--rbtree_test.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 9600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_37sa5d69/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker 1.6.1-svn 6608050+ (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 597: Function pointer *(augment->propagate) with type void (*)(struct rb_node *, struct rb_node *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_handler_precall to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function prandom_u32_state to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rb_insert_color to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rb_erase to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rb_first to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rb_next to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __rb_insert_augmented to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 562: Ignoring function call through function pointer *(augment->copy): (*(augment->copy))(node, successor); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 597: Ignoring function call through function pointer *(augment->propagate): (*(augment->propagate))(tmp, 0); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function __rb_erase_color to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 577: Ignoring function call through function pointer *(augment->copy): (*(augment->copy))(node, successor); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 578: Ignoring function call through function pointer *(augment->propagate): (*(augment->propagate))(parent, successor); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            42479 (18% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  36524 (86%)
  Because of loop head:            5916 (14%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         39 (0%)
  Times precision was empty:       12628 (30%)
  Times precision was {false}:     1549 (4%)
  Times result was cached:         27580 (65%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      722 (2%)
  Times result was 'false':        408 (1%)
Number of strengthen sat checks:   0
Number of coverage checks:         35588
  BDD entailment checks:           11704
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       39
Number of predicates discovered:          3
Number of abstraction locations:          126
Max number of predicates per location:    3
Avg number of predicates per location:    1
Total predicates per abstraction:         52168
Max number of predicates per abstraction: 3
Avg number of predicates per abstraction: 22.97
Number of irrelevant predicates:          34576 (66%)
Number of preds handled by boolean abs:   779 (1%)
  Total number of models for allsat:      739
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.02

Time for post operator:                 11.935s
  Time for path formula creation:       11.774s
Time for strengthen operator:            0.173s
Time for prec operator:                  7.406s
  Time for abstraction:                  6.864s (Max:     0.026s, Count: 42479)
    Boolean abstraction:                 0.597s
    Solving time:                        2.126s (Max:     0.021s)
    Model enumeration time:              0.065s
    Time for BDD construction:           0.056s (Max:     0.010s)
Time for merge operator:                 0.500s
Time for coverage check:                 0.051s
  Time for BDD entailment checks:        0.048s
Total time for SMT solver (w/o itp):     2.191s

Number of path formula cache hits:   126541 (48%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    11.271s

Total number of created targets for pointer analysis: 224550
   Number of created targets for uf: *(struct_rb_node)* is 3855
   Number of created targets for uf: *unsigned_int is 24889
   Number of created targets for uf: *unsigned_long_int is 1701


Number of BDD nodes:                               205
Size of BDD node table:                            464047
Size of BDD cache:                                 46411
Size of BDD node cleanup queue:                        1425 (count: 36434, min: 0, max: 151, avg: 0.04)
Time for BDD node cleanup:                             0.017s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.485s
Automaton transfers with branching:                0
Automaton transfer successors:                       240219 (count: 240219, min: 1, max: 1, avg: 1.00) [1 x 240219]

CPA algorithm statistics
------------------------
Number of iterations:            165766
Max size of waitlist:            27
Average size of waitlist:        9
Number of computed successors:   186467
Max successors for one state:    2
Number of times merged:          11942
Number of times stopped:         20111
Number of times breaked:         39

Total time for CPA algorithm:        25.459s (Max:     1.951s)
  Time for choose from waitlist:      0.095s
  Time for precision adjustment:      8.580s
  Time for transfer relation:        14.637s
  Time for merge operator:            0.704s
  Time for stop operator:             0.318s
  Time for adding to reached set:     0.321s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   39
Avg. length of target path (in blocks):                3454 (count: 39, min: 57, max: 130, avg: 88.56)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   2.157s
  Counterexample analysis:                             1.650s (Max:     0.087s, Calls: 39)
    Refinement sat check:                              1.137s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.055s
  Precision update:                                    0.027s
  ARG update:                                          0.396s

Length of refined path (in blocks):                    3181 (count: 39, min: 49, max: 129, avg: 81.56)
Number of affected states:                             2959 (count: 39, min: 11, max: 127, avg: 75.87)
Length (states) of path with itp 'true':                183 (count: 39, min: 1, max: 37, avg: 4.69)
Length (states) of path with itp non-trivial itp:      2959 (count: 39, min: 11, max: 127, avg: 75.87)
Length (states) of path with itp 'false':                39 (count: 39, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 39, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:            2920 (count: 39, min: 10, max: 126, avg: 74.87)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                39
Number of successful refinements:     39
Number of failed refinements:         0
Max. size of reached set before ref.: 4714
Max. size of reached set after ref.:  161
Avg. size of reached set before ref.: 4214.08
Avg. size of reached set after ref.:  21.90

Total time for CEGAR algorithm:      27.762s
Time for refinements:                 2.301s
Average time for refinement:          0.059s
Max time for refinement:              0.127s

Code Coverage
-----------------------------
  Function coverage:      0.707
  Visited lines:          587
  Total lines:            676
  Line coverage:          0.868
  Visited conditions:     142
  Total conditions:       174
  Condition coverage:     0.816

CPAchecker general statistics
-----------------------------
Number of program locations:     971
Number of CFA edges:             1109
Number of relevant variables:    171
Number of functions:             41
Number of loops:                 22
Size of reached set:             2453
  Number of reached locations:   509 (52%)
    Avg states per location:     4
    Max states per location:     145 (at node N808)
  Number of reached functions:   29 (71%)
  Number of partitions:          2406
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N521 (before line 1019), Function check called from node N645, stack depth 3 [294a1e10], stack [main, rbtree_test_init, check]])
  Number of target states:       0
  Size of final wait list        7

Time for analysis setup:          2.093s
  Time for loading CPAs:          0.476s
  Time for loading parser:        0.407s
  Time for CFA construction:      1.117s
    Time for parsing file(s):     0.406s
    Time for AST to CFA:          0.268s
    Time for CFA sanity check:    0.072s
    Time for post-processing:     0.277s
      Time for var class.:        0.137s
Time for Analysis:               27.762s
CPU time for analysis:           27.770s
Total time for CPAchecker:       29.858s
Total CPU time for CPAchecker:   29.860s
Time for statistics:              0.079s

Time for Garbage Collector:       0.823s (in 59 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                143MB (   137 MiB) max;     79MB (    75 MiB) avg;    152MB (   145 MiB) peak
Used non-heap memory:             40MB (    38 MiB) max;     37MB (    35 MiB) avg;     40MB (    38 MiB) peak
Allocated heap memory:           255MB (   243 MiB) max;    255MB (   243 MiB) avg
Allocated non-heap memory:        42MB (    40 MiB) max;     39MB (    37 MiB) avg
Total process virtual memory:  12082MB ( 11522 MiB) max;  12073MB ( 11514 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
