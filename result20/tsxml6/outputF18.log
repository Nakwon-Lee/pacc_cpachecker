scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 9600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-32_7a-lib--rbtree_test.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 9600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_v58nddm7/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker 1.6.1-svn 6608050+ (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 597: Function pointer *(augment->propagate) with type void (*)(struct rb_node *, struct rb_node *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_handler_precall to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function prandom_u32_state to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rb_insert_color to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rb_erase to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rb_first to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rb_next to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __rb_insert_augmented to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 562: Ignoring function call through function pointer *(augment->copy): (*(augment->copy))(node, successor); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 597: Ignoring function call through function pointer *(augment->propagate): (*(augment->propagate))(tmp, 0); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function __rb_erase_color to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 577: Ignoring function call through function pointer *(augment->copy): (*(augment->copy))(node, successor); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 578: Ignoring function call through function pointer *(augment->propagate): (*(augment->propagate))(parent, successor); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            46296 (18% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  39838 (86%)
  Because of loop head:            6416 (14%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         42 (0%)
  Times precision was empty:       12685 (27%)
  Times precision was {false}:     1608 (3%)
  Times result was cached:         31214 (67%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      789 (2%)
  Times result was 'false':        457 (1%)
Number of strengthen sat checks:   0
Number of coverage checks:         38731
  BDD entailment checks:           12767
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       39
Number of predicates discovered:          3
Number of abstraction locations:          133
Max number of predicates per location:    3
Avg number of predicates per location:    1
Total predicates per abstraction:         58536
Max number of predicates per abstraction: 3
Avg number of predicates per abstraction: 24.42
Number of irrelevant predicates:          37396 (64%)
Number of preds handled by boolean abs:   846 (1%)
  Total number of models for allsat:      806
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.02

Time for post operator:                 12.624s
  Time for path formula creation:       12.505s
Time for strengthen operator:            0.240s
Time for prec operator:                  7.959s
  Time for abstraction:                  7.306s (Max:     0.025s, Count: 46296)
    Boolean abstraction:                 0.787s
    Solving time:                        2.276s (Max:     0.022s)
    Model enumeration time:              0.064s
    Time for BDD construction:           0.052s (Max:     0.008s)
Time for merge operator:                 0.488s
Time for coverage check:                 0.041s
  Time for BDD entailment checks:        0.034s
Total time for SMT solver (w/o itp):     2.340s

Number of path formula cache hits:   147920 (51%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    11.966s

Total number of created targets for pointer analysis: 228030
   Number of created targets for uf: *(struct_rb_node)* is 3937
   Number of created targets for uf: *unsigned_int is 25255
   Number of created targets for uf: *unsigned_long_int is 1721


Number of BDD nodes:                               205
Size of BDD node table:                            464047
Size of BDD cache:                                 46411
Size of BDD node cleanup queue:                        1562 (count: 38254, min: 0, max: 151, avg: 0.04)
Time for BDD node cleanup:                             0.002s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.417s
Automaton transfers with branching:                0
Automaton transfer successors:                       261101 (count: 261101, min: 1, max: 1, avg: 1.00) [1 x 261101]

CPA algorithm statistics
------------------------
Number of iterations:            180434
Max size of waitlist:            27
Average size of waitlist:        9
Number of computed successors:   202932
Max successors for one state:    2
Number of times merged:          12982
Number of times stopped:         21849
Number of times breaked:         42

Total time for CPA algorithm:        27.179s (Max:     1.898s)
  Time for choose from waitlist:      0.161s
  Time for precision adjustment:      9.257s
  Time for transfer relation:        15.504s
  Time for merge operator:            0.813s
  Time for stop operator:             0.359s
  Time for adding to reached set:     0.277s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   42
Avg. length of target path (in blocks):                3762 (count: 42, min: 57, max: 130, avg: 89.57)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   2.166s
  Counterexample analysis:                             1.703s (Max:     0.069s, Calls: 42)
    Refinement sat check:                              1.259s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.002s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.050s
  Precision update:                                    0.029s
  ARG update:                                          0.354s

Length of refined path (in blocks):                    3486 (count: 42, min: 49, max: 129, avg: 83.00)
Number of affected states:                             3258 (count: 42, min: 11, max: 127, avg: 77.57)
Length (states) of path with itp 'true':                186 (count: 42, min: 1, max: 37, avg: 4.43)
Length (states) of path with itp non-trivial itp:      3258 (count: 42, min: 11, max: 127, avg: 77.57)
Length (states) of path with itp 'false':                42 (count: 42, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 42, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:            3216 (count: 42, min: 10, max: 126, avg: 76.57)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                42
Number of successful refinements:     42
Number of failed refinements:         0
Max. size of reached set before ref.: 4798
Max. size of reached set after ref.:  161
Avg. size of reached set before ref.: 4227.24
Avg. size of reached set after ref.:  20.76

Total time for CEGAR algorithm:      29.524s
Time for refinements:                 2.345s
Average time for refinement:          0.055s
Max time for refinement:              0.121s

Code Coverage
-----------------------------
  Function coverage:      0.756
  Visited lines:          621
  Total lines:            676
  Line coverage:          0.919
  Visited conditions:     150
  Total conditions:       174
  Condition coverage:     0.862

CPAchecker general statistics
-----------------------------
Number of program locations:     971
Number of CFA edges:             1109
Number of relevant variables:    171
Number of functions:             41
Number of loops:                 22
Size of reached set:             3955
  Number of reached locations:   547 (56%)
    Avg states per location:     7
    Max states per location:     223 (at node N807)
  Number of reached functions:   31 (76%)
  Number of partitions:          3889
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N521 (before line 1019), Function check called from node N645, stack depth 3 [65e7dedc], stack [main, rbtree_test_init, check]])
  Number of target states:       0

Time for analysis setup:          2.064s
  Time for loading CPAs:          0.515s
  Time for loading parser:        0.380s
  Time for CFA construction:      1.078s
    Time for parsing file(s):     0.361s
    Time for AST to CFA:          0.284s
    Time for CFA sanity check:    0.090s
    Time for post-processing:     0.257s
      Time for var class.:        0.128s
Time for Analysis:               29.524s
CPU time for analysis:           29.530s
Time for analyzing result:        0.002s
Total time for CPAchecker:       31.590s
Total CPU time for CPAchecker:   31.590s
Time for statistics:              0.097s

Time for Garbage Collector:       0.888s (in 64 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                142MB (   135 MiB) max;     81MB (    77 MiB) avg;    153MB (   146 MiB) peak
Used non-heap memory:             40MB (    38 MiB) max;     37MB (    35 MiB) avg;     41MB (    39 MiB) peak
Allocated heap memory:           255MB (   243 MiB) max;    255MB (   243 MiB) avg
Allocated non-heap memory:        42MB (    40 MiB) max;     39MB (    37 MiB) avg
Total process virtual memory:  12081MB ( 11521 MiB) max;  12073MB ( 11514 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
