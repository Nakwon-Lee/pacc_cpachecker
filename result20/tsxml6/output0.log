scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 9600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-32_7a-lib--rbtree_test.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 9600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_krv8lx8b/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker 1.6.1-svn 6608050+ (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 597: Function pointer *(augment->propagate) with type void (*)(struct rb_node *, struct rb_node *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_handler_precall to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function prandom_u32_state to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rb_first to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rb_next to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __rb_insert_augmented to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 562: Ignoring function call through function pointer *(augment->copy): (*(augment->copy))(node, successor); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 597: Ignoring function call through function pointer *(augment->propagate): (*(augment->propagate))(tmp, 0); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function __rb_erase_color to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 577: Ignoring function call through function pointer *(augment->copy): (*(augment->copy))(node, successor); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 578: Ignoring function call through function pointer *(augment->propagate): (*(augment->propagate))(parent, successor); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function rb_insert_color to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rb_erase to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            56554 (18% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  48925 (87%)
  Because of loop head:            7591 (13%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         38 (0%)
  Times precision was empty:       10774 (19%)
  Times precision was {false}:     1505 (3%)
  Times result was cached:         43527 (77%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      748 (1%)
  Times result was 'false':        518 (1%)
Number of strengthen sat checks:   0
Number of coverage checks:         48742
  BDD entailment checks:           16836
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       39
Number of predicates discovered:          3
Number of abstraction locations:          123
Max number of predicates per location:    3
Avg number of predicates per location:    1
Total predicates per abstraction:         78511
Max number of predicates per abstraction: 3
Avg number of predicates per abstraction: 34.85
Number of irrelevant predicates:          55601 (71%)
Number of preds handled by boolean abs:   803 (1%)
  Total number of models for allsat:      767
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.03

Time for post operator:                  8.901s
  Time for path formula creation:        8.761s
Time for strengthen operator:            0.226s
Time for prec operator:                  9.919s
  Time for abstraction:                  9.413s (Max:     0.032s, Count: 56554)
    Boolean abstraction:                 0.793s
    Solving time:                        3.190s (Max:     0.027s)
    Model enumeration time:              0.047s
    Time for BDD construction:           0.067s (Max:     0.012s)
Time for merge operator:                 0.443s
Time for coverage check:                 0.036s
  Time for BDD entailment checks:        0.034s
Total time for SMT solver (w/o itp):     3.237s

Number of path formula cache hits:   256676 (70%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     8.198s

Total number of created targets for pointer analysis: 165508
   Number of created targets for uf: *(struct_rb_node)* is 7709
   Number of created targets for uf: *unsigned_int is 18606
   Number of created targets for uf: *unsigned_long_int is 1521


Number of BDD nodes:                               206
Size of BDD node table:                            464047
Size of BDD cache:                                 46411
Size of BDD node cleanup queue:                        1477 (count: 39648, min: 0, max: 166, avg: 0.04)
Time for BDD node cleanup:                             0.005s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.416s
Automaton transfers with branching:                0
Automaton transfer successors:                       316735 (count: 316735, min: 1, max: 1, avg: 1.00) [1 x 316735]

CPA algorithm statistics
------------------------
Number of iterations:            220113
Max size of waitlist:            17
Average size of waitlist:        9
Number of computed successors:   247423
Max successors for one state:    2
Number of times merged:          15953
Number of times stopped:         26689
Number of times breaked:         38

Total time for CPA algorithm:        25.451s (Max:     1.902s)
  Time for choose from waitlist:      0.145s
  Time for precision adjustment:     11.305s
  Time for transfer relation:        11.782s
  Time for merge operator:            0.655s
  Time for stop operator:             0.337s
  Time for adding to reached set:     0.362s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   38
Avg. length of target path (in blocks):                3608 (count: 38, min: 57, max: 124, avg: 94.95)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   2.132s
  Counterexample analysis:                             1.657s (Max:     0.077s, Calls: 38)
    Refinement sat check:                              1.144s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.049s
  Precision update:                                    0.018s
  ARG update:                                          0.389s

Length of refined path (in blocks):                    3397 (count: 38, min: 56, max: 123, avg: 89.39)
Number of affected states:                             3031 (count: 38, min: 11, max: 121, avg: 79.76)
Length (states) of path with itp 'true':                328 (count: 38, min: 1, max: 59, avg: 8.63)
Length (states) of path with itp non-trivial itp:      3031 (count: 38, min: 11, max: 121, avg: 79.76)
Length (states) of path with itp 'false':                38 (count: 38, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 38, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:            2993 (count: 38, min: 10, max: 120, avg: 78.76)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                38
Number of successful refinements:     38
Number of failed refinements:         0
Max. size of reached set before ref.: 7729
Max. size of reached set after ref.:  3793
Avg. size of reached set before ref.: 6066.61
Avg. size of reached set after ref.:  438.76

Total time for CEGAR algorithm:      27.820s
Time for refinements:                 2.348s
Average time for refinement:          0.061s
Max time for refinement:              0.103s

Code Coverage
-----------------------------
  Function coverage:      0.707
  Visited lines:          584
  Total lines:            676
  Line coverage:          0.864
  Visited conditions:     140
  Total conditions:       174
  Condition coverage:     0.805

CPAchecker general statistics
-----------------------------
Number of program locations:     971
Number of CFA edges:             1109
Number of relevant variables:    171
Number of functions:             41
Number of loops:                 22
Size of reached set:             6359
  Number of reached locations:   506 (52%)
    Avg states per location:     12
    Max states per location:     410 (at node N807)
  Number of reached functions:   29 (71%)
  Number of partitions:          6219
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N668 (before line 1181), Function rbtree_test_init called from node N762, stack depth 2 [7fcd11c6], stack [main, rbtree_test_init]])
  Number of target states:       0
  Size of final wait list        12

Time for analysis setup:          2.017s
  Time for loading CPAs:          0.481s
  Time for loading parser:        0.412s
  Time for CFA construction:      0.999s
    Time for parsing file(s):     0.336s
    Time for AST to CFA:          0.271s
    Time for CFA sanity check:    0.071s
    Time for post-processing:     0.231s
      Time for var class.:        0.101s
Time for Analysis:               27.820s
CPU time for analysis:           27.820s
Total time for CPAchecker:       29.840s
Total CPU time for CPAchecker:   29.840s
Time for statistics:              0.123s

Time for Garbage Collector:       0.890s (in 73 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                136MB (   130 MiB) max;     75MB (    72 MiB) avg;    142MB (   135 MiB) peak
Used non-heap memory:             39MB (    37 MiB) max;     36MB (    34 MiB) avg;     40MB (    38 MiB) peak
Allocated heap memory:           255MB (   243 MiB) max;    255MB (   243 MiB) avg
Allocated non-heap memory:        41MB (    39 MiB) max;     38MB (    37 MiB) avg
Total process virtual memory:  12082MB ( 11522 MiB) max;  12073MB ( 11514 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
