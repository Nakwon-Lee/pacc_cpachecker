scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 9600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-32_7a-lib--rbtree_test.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 9600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_m6uksaq4/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker 1.6.1-svn 6608050+ (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 597: Function pointer *(augment->propagate) with type void (*)(struct rb_node *, struct rb_node *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_handler_precall to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function prandom_u32_state to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rb_insert_color to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rb_erase to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rb_first to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rb_next to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 562: Ignoring function call through function pointer *(augment->copy): (*(augment->copy))(node, successor); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 597: Ignoring function call through function pointer *(augment->propagate): (*(augment->propagate))(tmp, 0); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function __rb_erase_color to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __rb_insert_augmented to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 577: Ignoring function call through function pointer *(augment->copy): (*(augment->copy))(node, successor); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 578: Ignoring function call through function pointer *(augment->propagate): (*(augment->propagate))(parent, successor); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            35526 (17% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  30114 (85%)
  Because of loop head:            5377 (15%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         35 (0%)
  Times precision was empty:       7459 (21%)
  Times precision was {false}:     1041 (3%)
  Times result was cached:         26467 (75%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      559 (2%)
  Times result was 'false':        443 (1%)
Number of strengthen sat checks:   0
Number of coverage checks:         27449
  BDD entailment checks:           9103
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       39
Number of predicates discovered:          3
Number of abstraction locations:          133
Max number of predicates per location:    2
Avg number of predicates per location:    1
Total predicates per abstraction:         39886
Max number of predicates per abstraction: 2
Avg number of predicates per abstraction: 24.93
Number of irrelevant predicates:          21284 (53%)
Number of preds handled by boolean abs:   594 (1%)
  Total number of models for allsat:      576
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.03

Time for post operator:                  4.487s
  Time for path formula creation:        4.356s
Time for strengthen operator:            0.247s
Time for prec operator:                  6.549s
  Time for abstraction:                  6.159s (Max:     0.029s, Count: 35526)
    Boolean abstraction:                 0.771s
    Solving time:                        1.726s (Max:     0.025s)
    Model enumeration time:              0.047s
    Time for BDD construction:           0.045s (Max:     0.012s)
Time for merge operator:                 0.208s
Time for coverage check:                 0.044s
  Time for BDD entailment checks:        0.039s
Total time for SMT solver (w/o itp):     1.773s

Number of path formula cache hits:   202574 (84%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     3.987s

Total number of created targets for pointer analysis: 43947
   Number of created targets for uf: *(struct_rb_node)* is 1108
   Number of created targets for uf: *unsigned_int is 3783
   Number of created targets for uf: *unsigned_long_int is 481


Number of BDD nodes:                               205
Size of BDD node table:                            464047
Size of BDD cache:                                 46411
Size of BDD node cleanup queue:                        1113 (count: 25143, min: 0, max: 178, avg: 0.04)
Time for BDD node cleanup:                             0.007s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.345s
Automaton transfers with branching:                0
Automaton transfer successors:                       205511 (count: 205511, min: 1, max: 1, avg: 1.00) [1 x 205511]

CPA algorithm statistics
------------------------
Number of iterations:            136296
Max size of waitlist:            64
Average size of waitlist:        27
Number of computed successors:   153540
Max successors for one state:    2
Number of times merged:          9173
Number of times stopped:         15421
Number of times breaked:         35

Total time for CPA algorithm:        16.115s (Max:     1.356s)
  Time for choose from waitlist:      0.141s
  Time for precision adjustment:      7.570s
  Time for transfer relation:         6.777s
  Time for merge operator:            0.362s
  Time for stop operator:             0.278s
  Time for adding to reached set:     0.258s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   35
Avg. length of target path (in blocks):                3753 (count: 35, min: 57, max: 141, avg: 107.23)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   2.376s
  Counterexample analysis:                             1.905s (Max:     0.086s, Calls: 35)
    Refinement sat check:                              1.298s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.002s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.051s
  Precision update:                                    0.045s
  ARG update:                                          0.328s

Length of refined path (in blocks):                    3681 (count: 35, min: 56, max: 140, avg: 105.17)
Number of affected states:                             3553 (count: 35, min: 11, max: 138, avg: 101.51)
Length (states) of path with itp 'true':                 93 (count: 35, min: 1, max: 59, avg: 2.66)
Length (states) of path with itp non-trivial itp:      3553 (count: 35, min: 11, max: 138, avg: 101.51)
Length (states) of path with itp 'false':                35 (count: 35, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 35, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:            3518 (count: 35, min: 10, max: 137, avg: 100.51)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                35
Number of successful refinements:     35
Number of failed refinements:         0
Max. size of reached set before ref.: 5266
Max. size of reached set after ref.:  2255
Avg. size of reached set before ref.: 3898.60
Avg. size of reached set after ref.:  70.26

Total time for CEGAR algorithm:      18.669s
Time for refinements:                 2.540s
Average time for refinement:          0.072s
Max time for refinement:              0.117s

Code Coverage
-----------------------------
  Function coverage:      0.756
  Visited lines:          621
  Total lines:            676
  Line coverage:          0.919
  Visited conditions:     150
  Total conditions:       174
  Condition coverage:     0.862

CPAchecker general statistics
-----------------------------
Number of program locations:     971
Number of CFA edges:             1109
Number of relevant variables:    171
Number of functions:             41
Number of loops:                 22
Size of reached set:             3685
  Number of reached locations:   547 (56%)
    Avg states per location:     6
    Max states per location:     193 (at node N807)
  Number of reached functions:   31 (76%)
  Number of partitions:          3649
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N521 (before line 1019), Function check called from node N645, stack depth 3 [2dd0a309], stack [main, rbtree_test_init, check]])
  Number of target states:       0

Time for analysis setup:          2.023s
  Time for loading CPAs:          0.493s
  Time for loading parser:        0.407s
  Time for CFA construction:      0.989s
    Time for parsing file(s):     0.292s
    Time for AST to CFA:          0.250s
    Time for CFA sanity check:    0.085s
    Time for post-processing:     0.268s
      Time for var class.:        0.130s
Time for Analysis:               18.669s
CPU time for analysis:           18.670s
Time for analyzing result:        0.002s
Total time for CPAchecker:       20.695s
Total CPU time for CPAchecker:   20.680s
Time for statistics:              0.087s

Time for Garbage Collector:       0.426s (in 40 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                109MB (   104 MiB) max;     65MB (    62 MiB) avg;    117MB (   111 MiB) peak
Used non-heap memory:             39MB (    37 MiB) max;     36MB (    34 MiB) avg;     40MB (    38 MiB) peak
Allocated heap memory:           255MB (   243 MiB) max;    255MB (   243 MiB) avg
Allocated non-heap memory:        41MB (    39 MiB) max;     38MB (    36 MiB) avg
Total process virtual memory:  12082MB ( 11522 MiB) max;  12071MB ( 11512 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
