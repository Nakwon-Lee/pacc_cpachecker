scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.4-simple/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--net--arcnet--com20020_cs.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_4_mu6rl9/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pcmcia_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netif_device_detach to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_dev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function unregister_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pcmcia_disable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function alloc_arcdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pcmcia_request_io to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pcmcia_enable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function com20020_check to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function com20020_found to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_netdev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_notice to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pcmcia_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            1538 (7% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  1474 (96%)
  Because of loop head:            53 (3%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         11 (1%)
  Times precision was empty:       546 (36%)
  Times precision was {false}:     130 (8%)
  Times result was cached:         776 (50%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      86 (6%)
  Times result was 'false':        21 (1%)
Number of strengthen sat checks:   0
Number of coverage checks:         983
  BDD entailment checks:           267
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       124
Number of predicates discovered:          2
Number of abstraction locations:          52
Max number of predicates per location:    1
Avg number of predicates per location:    1
Total predicates per abstraction:         992
Max number of predicates per abstraction: 1
Avg number of predicates per abstraction: 4.59
Number of irrelevant predicates:          418 (42%)
Number of preds handled by boolean abs:   86 (9%)
  Total number of models for allsat:      86
  Max number of models for allsat:        1
  Avg number of models for allsat:        1.00

Time for post operator:                  2.017s
  Time for path formula creation:        1.903s
Time for strengthen operator:            0.083s
Time for prec operator:                  1.326s
  Time for abstraction:                  1.154s (Max:     0.042s, Count: 1538)
    Boolean abstraction:                 0.167s
    Solving time:                        0.224s (Max:     0.013s)
    Model enumeration time:              0.010s
    Time for BDD construction:           0.029s (Max:     0.012s)
Time for merge operator:                 0.088s
Time for coverage check:                 0.025s
  Time for BDD entailment checks:        0.023s
Total time for SMT solver (w/o itp):     0.234s

Number of path formula cache hits:   17535 (71%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     1.665s

Total number of created targets for pointer analysis: 25
   Number of created targets for uf: *signed_int is 26


Number of BDD nodes:                               202
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         125 (count: 1984, min: 0, max: 80, avg: 0.06)
Time for BDD node cleanup:                             0.000s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.206s
Automaton transfers with branching:                0
Automaton transfer successors:                        23333 (count: 23333, min: 1, max: 1, avg: 1.00) [1 x 23333]

CPA algorithm statistics
------------------------
Number of iterations:            8611
Max size of waitlist:            22
Average size of waitlist:        10
Number of computed successors:   9299
Max successors for one state:    2
Number of times merged:          358
Number of times stopped:         575
Number of times breaked:         11

Total time for CPA algorithm:         5.736s (Max:     1.580s)
  Time for choose from waitlist:      0.031s
  Time for precision adjustment:      1.715s
  Time for transfer relation:         3.329s
  Time for merge operator:            0.185s
  Time for stop operator:             0.104s
  Time for adding to reached set:     0.122s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   11
Avg. length of target path (in blocks):                 283 (count: 11, min: 5, max: 38, avg: 25.73)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.428s
  Counterexample analysis:                             0.278s (Max:     0.041s, Calls: 11)
    Refinement sat check:                              0.195s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.021s
  Precision update:                                    0.028s
  ARG update:                                          0.093s

Length of refined path (in blocks):                     272 (count: 11, min: 4, max: 37, avg: 24.73)
Number of affected states:                              261 (count: 11, min: 3, max: 36, avg: 23.73)
Length (states) of path with itp 'true':                  0 (count: 11, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:       261 (count: 11, min: 3, max: 36, avg: 23.73)
Length (states) of path with itp 'false':                11 (count: 11, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 11, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:             250 (count: 11, min: 2, max: 35, avg: 22.73)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                11
Number of successful refinements:     11
Number of failed refinements:         0
Max. size of reached set before ref.: 1121
Max. size of reached set after ref.:  3
Avg. size of reached set before ref.: 742.09
Avg. size of reached set after ref.:  3.00

Total time for CEGAR algorithm:       6.215s
Time for refinements:                 0.478s
Average time for refinement:          0.043s
Max time for refinement:              0.084s

Code Coverage
-----------------------------
  Function coverage:      0.640
  Visited lines:          1849
  Total lines:            1896
  Line coverage:          0.975
  Visited conditions:     84
  Total conditions:       104
  Condition coverage:     0.808

CPAchecker general statistics
-----------------------------
Number of program locations:     2111
Number of CFA edges:             2182
Number of relevant variables:    317
Number of functions:             25
Number of loops:                 2
Size of reached set:             574
  Number of reached locations:   408 (19%)
    Avg states per location:     1
    Max states per location:     25 (at node N1383)
  Number of reached functions:   16 (64%)
  Number of partitions:          574
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0

Time for analysis setup:          5.188s
  Time for loading CPAs:          0.967s
  Time for loading parser:        0.812s
  Time for CFA construction:      3.312s
    Time for parsing file(s):     1.061s
    Time for AST to CFA:          1.156s
    Time for CFA sanity check:    0.194s
    Time for post-processing:     0.697s
      Time for var class.:        0.321s
Time for Analysis:                6.215s
CPU time for analysis:            6.210s
Time for analyzing result:        0.001s
Total time for CPAchecker:       11.407s
Total CPU time for CPAchecker:   11.380s
Time for statistics:              0.117s

Time for Garbage Collector:       0.230s (in 11 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 64MB (    61 MiB) max;     38MB (    36 MiB) avg;     69MB (    66 MiB) peak
Used non-heap memory:             36MB (    34 MiB) max;     29MB (    27 MiB) avg;     36MB (    35 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        37MB (    36 MiB) max;     31MB (    29 MiB) avg
Total process virtual memory:   8132MB (  7755 MiB) max;   8097MB (  7722 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
