scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.4-simple/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--media--video--zoran--zr36016.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_90qvrx2u/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 591: Function pointer *__cil_tmp21 with type __u32 (*)(struct videocodec *codec, __u16 reg) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 874: Function pointer *__cil_tmp29 with type void (*)(struct videocodec *codec, __u16 reg, __u32 value) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 888: Function pointer *__cil_tmp45 with type __u32 (*)(struct videocodec *codec, __u16 reg) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 738: Function pointer *__cil_tmp29 with type void (*)(struct videocodec *codec, __u16 reg, __u32 value) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 1064: Function pointer *__cil_tmp29 with type void (*)(struct videocodec *codec, __u16 reg, __u32 value) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 1081: Function pointer *__cil_tmp45 with type void (*)(struct videocodec *codec, __u16 reg, __u32 value) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function videocodec_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 738: Ignoring call via function pointer zr36016_write::__cil_tmp29 for which no suitable target was found in line: (*__cil_tmp29)(__cil_tmp32, reg, __cil_tmp33); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 738: Ignoring function call through function pointer *__cil_tmp29: (*__cil_tmp29)(__cil_tmp32, reg, __cil_tmp33); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 1064: Ignoring call via function pointer zr36016_writei::__cil_tmp29 for which no suitable target was found in line: (*__cil_tmp29)(__cil_tmp32, __cil_tmp33, __cil_tmp36); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 1064: Ignoring function call through function pointer *__cil_tmp29: (*__cil_tmp29)(__cil_tmp32, __cil_tmp33, __cil_tmp36); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 1081: Ignoring call via function pointer zr36016_writei::__cil_tmp45 for which no suitable target was found in line: (*__cil_tmp45)(__cil_tmp48, __cil_tmp49, __cil_tmp52); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 1081: Ignoring function call through function pointer *__cil_tmp45: (*__cil_tmp45)(__cil_tmp48, __cil_tmp49, __cil_tmp52); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function snprintf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 874: Ignoring call via function pointer zr36016_readi::__cil_tmp29 for which no suitable target was found in line: (*__cil_tmp29)(__cil_tmp32, __cil_tmp33, __cil_tmp36); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 874: Ignoring function call through function pointer *__cil_tmp29: (*__cil_tmp29)(__cil_tmp32, __cil_tmp33, __cil_tmp36); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 888: Ignoring call via function pointer zr36016_readi::__cil_tmp45 for which no suitable target was found in line: tmp = (*__cil_tmp45)(__cil_tmp48, __cil_tmp49); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 888: Ignoring function call through function pointer *__cil_tmp45: tmp = (*__cil_tmp45)(__cil_tmp48, __cil_tmp49); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 591: Ignoring call via function pointer zr36016_read::__cil_tmp21 for which no suitable target was found in line: tmp = (*__cil_tmp21)(__cil_tmp24, reg); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 591: Ignoring function call through function pointer *__cil_tmp21: tmp = (*__cil_tmp21)(__cil_tmp24, reg); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function videocodec_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            1995 (2% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  1837 (92%)
  Because of loop head:            149 (7%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         9 (0%)
  Times precision was empty:       986 (49%)
  Times precision was {false}:     297 (15%)
  Times result was cached:         614 (31%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      98 (5%)
  Times result was 'false':        17 (1%)
Number of strengthen sat checks:   0
Number of coverage checks:         5392
  BDD entailment checks:           354
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       120
Number of predicates discovered:          2
Number of abstraction locations:          54
Max number of predicates per location:    1
Avg number of predicates per location:    1
Total predicates per abstraction:         1009
Max number of predicates per abstraction: 1
Avg number of predicates per abstraction: 2.55
Number of irrelevant predicates:          542 (54%)
Number of preds handled by boolean abs:   98 (10%)
  Total number of models for allsat:      98
  Max number of models for allsat:        1
  Avg number of models for allsat:        1.00

Time for post operator:                  4.546s
  Time for path formula creation:        4.325s
Time for strengthen operator:            0.243s
Time for prec operator:                  2.351s
  Time for abstraction:                  2.126s (Max:     0.045s, Count: 1995)
    Boolean abstraction:                 0.252s
    Solving time:                        0.788s (Max:     0.018s)
    Model enumeration time:              0.034s
    Time for BDD construction:           0.030s (Max:     0.009s)
Time for merge operator:                 0.350s
Time for coverage check:                 0.044s
  Time for BDD entailment checks:        0.041s
Total time for SMT solver (w/o itp):     0.822s

Number of path formula cache hits:   56951 (54%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     3.991s

Total number of created targets for pointer analysis: 46
   Number of created targets for uf: *signed_int is 10


Number of BDD nodes:                               202
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         195 (count: 3418, min: 0, max: 92, avg: 0.06)
Time for BDD node cleanup:                             0.002s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.434s
Automaton transfers with branching:                0
Automaton transfer successors:                       103972 (count: 103972, min: 1, max: 1, avg: 1.00) [1 x 103972]

CPA algorithm statistics
------------------------
Number of iterations:            24243
Max size of waitlist:            19
Average size of waitlist:        11
Number of computed successors:   27057
Max successors for one state:    2
Number of times merged:          2519
Number of times stopped:         2780
Number of times breaked:         9

Total time for CPA algorithm:        12.322s (Max:     2.376s)
  Time for choose from waitlist:      0.143s
  Time for precision adjustment:      2.983s
  Time for transfer relation:         7.583s
  Time for merge operator:            0.583s
  Time for stop operator:             0.218s
  Time for adding to reached set:     0.204s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   9
Avg. length of target path (in blocks):                 242 (count: 9, min: 5, max: 63, avg: 26.89)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.534s
  Counterexample analysis:                             0.298s (Max:     0.090s, Calls: 9)
    Refinement sat check:                              0.220s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.038s
  Precision update:                                    0.029s
  ARG update:                                          0.144s

Length of refined path (in blocks):                     233 (count: 9, min: 4, max: 62, avg: 25.89)
Number of affected states:                              224 (count: 9, min: 3, max: 61, avg: 24.89)
Length (states) of path with itp 'true':                  0 (count: 9, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:       224 (count: 9, min: 3, max: 61, avg: 24.89)
Length (states) of path with itp 'false':                 9 (count: 9, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 9, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:             215 (count: 9, min: 2, max: 60, avg: 23.89)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                9
Number of successful refinements:     9
Number of failed refinements:         0
Max. size of reached set before ref.: 3461
Max. size of reached set after ref.:  3
Avg. size of reached set before ref.: 2543.22
Avg. size of reached set after ref.:  3.00

Total time for CEGAR algorithm:      13.000s
Time for refinements:                 0.674s
Average time for refinement:          0.074s
Max time for refinement:              0.146s

Code Coverage
-----------------------------
  Function coverage:      0.643
  Visited lines:          1494
  Total lines:            1542
  Line coverage:          0.969
  Visited conditions:     128
  Total conditions:       148
  Condition coverage:     0.865

CPAchecker general statistics
-----------------------------
Number of program locations:     1770
Number of CFA edges:             1860
Number of relevant variables:    287
Number of functions:             28
Number of loops:                 2
Size of reached set:             1399
  Number of reached locations:   498 (28%)
    Avg states per location:     2
    Max states per location:     24 (at node N390)
  Number of reached functions:   18 (64%)
  Number of partitions:          1399
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0

Time for analysis setup:          4.359s
  Time for loading CPAs:          0.946s
  Time for loading parser:        0.805s
  Time for CFA construction:      2.481s
    Time for parsing file(s):     0.757s
    Time for AST to CFA:          0.703s
    Time for CFA sanity check:    0.225s
    Time for post-processing:     0.628s
      Time for var class.:        0.355s
Time for Analysis:               13.009s
CPU time for analysis:           13.020s
Time for analyzing result:        0.002s
Total time for CPAchecker:       17.377s
Total CPU time for CPAchecker:   17.370s
Time for statistics:              0.157s

Time for Garbage Collector:       0.397s (in 19 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 71MB (    68 MiB) max;     43MB (    41 MiB) avg;     74MB (    71 MiB) peak
Used non-heap memory:             37MB (    35 MiB) max;     31MB (    30 MiB) avg;     37MB (    35 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        38MB (    37 MiB) max;     33MB (    32 MiB) avg
Total process virtual memory:   8134MB (  7758 MiB) max;   8111MB (  7735 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
