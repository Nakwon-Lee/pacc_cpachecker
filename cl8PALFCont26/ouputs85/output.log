scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.4-simple/43_1a_cilled_true-unreach-call_ok_nondet_linux-43_1a-drivers--power--wm831x_power.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_0qzfjxp4/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_crit to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_dev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function power_supply_changed to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snprintf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function wm831x_reg_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function wm831x_set_bits to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function wm831x_reg_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _dev_info to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_warn to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function power_supply_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function wm831x_reg_read to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_get_irq_byname to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function request_threaded_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function power_supply_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_final_state to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            365 (3% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  246 (67%)
  Because of loop head:            113 (31%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         6 (2%)
  Times precision was empty:       183 (50%)
  Times precision was {false}:     23 (6%)
  Times result was cached:         112 (31%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      47 (13%)
  Times result was 'false':        6 (2%)
Number of strengthen sat checks:   0
Number of coverage checks:         631
  BDD entailment checks:           103
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       122
Number of predicates discovered:          2
Number of abstraction locations:          27
Max number of predicates per location:    1
Avg number of predicates per location:    1
Total predicates per abstraction:         182
Max number of predicates per abstraction: 1
Avg number of predicates per abstraction: 2.60
Number of irrelevant predicates:          50 (27%)
Number of preds handled by boolean abs:   47 (26%)
  Total number of models for allsat:      47
  Max number of models for allsat:        1
  Avg number of models for allsat:        1.00

Time for post operator:                  1.274s
  Time for path formula creation:        1.237s
Time for strengthen operator:            0.106s
Time for prec operator:                  0.715s
  Time for abstraction:                  0.647s (Max:     0.029s, Count: 365)
    Boolean abstraction:                 0.240s
    Solving time:                        0.223s (Max:     0.024s)
    Model enumeration time:              0.032s
    Time for BDD construction:           0.015s (Max:     0.006s)
Time for merge operator:                 0.084s
Time for coverage check:                 0.005s
  Time for BDD entailment checks:        0.001s
Total time for SMT solver (w/o itp):     0.255s

Number of path formula cache hits:   7985 (68%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     1.166s

Total number of created targets for pointer analysis: 589
   Number of created targets for uf: *(char)* is 49
   Number of created targets for uf: *signed_int is 3


Number of BDD nodes:                               202
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                          91 (count: 688, min: 0, max: 76, avg: 0.13)
Time for BDD node cleanup:                             0.008s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.122s
Automaton transfers with branching:                0
Automaton transfer successors:                        11276 (count: 11276, min: 1, max: 1, avg: 1.00) [1 x 11276]

CPA algorithm statistics
------------------------
Number of iterations:            2539
Max size of waitlist:            16
Average size of waitlist:        10
Number of computed successors:   2958
Max successors for one state:    2
Number of times merged:          264
Number of times stopped:         352
Number of times breaked:         6

Total time for CPA algorithm:         3.266s (Max:     1.024s)
  Time for choose from waitlist:      0.020s
  Time for precision adjustment:      0.894s
  Time for transfer relation:         1.989s
  Time for merge operator:            0.133s
  Time for stop operator:             0.038s
  Time for adding to reached set:     0.043s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   6
Avg. length of target path (in blocks):                 100 (count: 6, min: 6, max: 34, avg: 16.67)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.291s
  Counterexample analysis:                             0.221s (Max:     0.109s, Calls: 6)
    Refinement sat check:                              0.171s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.001s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.009s
  Precision update:                                    0.005s
  ARG update:                                          0.042s

Length of refined path (in blocks):                      94 (count: 6, min: 5, max: 33, avg: 15.67)
Number of affected states:                               88 (count: 6, min: 4, max: 32, avg: 14.67)
Length (states) of path with itp 'true':                  0 (count: 6, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:        88 (count: 6, min: 4, max: 32, avg: 14.67)
Length (states) of path with itp 'false':                 6 (count: 6, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 6, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:              82 (count: 6, min: 3, max: 31, avg: 13.67)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                6
Number of successful refinements:     6
Number of failed refinements:         0
Max. size of reached set before ref.: 444
Max. size of reached set after ref.:  3
Avg. size of reached set before ref.: 377.17
Avg. size of reached set after ref.:  3.00

Total time for CEGAR algorithm:       3.594s
Time for refinements:                 0.327s
Average time for refinement:          0.054s
Max time for refinement:              0.115s

Code Coverage
-----------------------------
  Function coverage:      0.400
  Visited lines:          1163
  Total lines:            1426
  Line coverage:          0.816
  Visited conditions:     80
  Total conditions:       148
  Condition coverage:     0.541

CPAchecker general statistics
-----------------------------
Number of program locations:     1597
Number of CFA edges:             1672
Number of relevant variables:    342
Number of functions:             25
Number of loops:                 4
Size of reached set:             356
  Number of reached locations:   246 (15%)
    Avg states per location:     1
    Max states per location:     5 (at node N144)
  Number of reached functions:   10 (40%)
  Number of partitions:          356
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0

Time for analysis setup:          4.668s
  Time for loading CPAs:          1.018s
  Time for loading parser:        0.779s
  Time for CFA construction:      2.718s
    Time for parsing file(s):     0.826s
    Time for AST to CFA:          0.820s
    Time for CFA sanity check:    0.153s
    Time for post-processing:     0.651s
      Time for var class.:        0.355s
Time for Analysis:                3.594s
CPU time for analysis:            3.590s
Time for analyzing result:        0.000s
Total time for CPAchecker:        8.270s
Total CPU time for CPAchecker:    8.260s
Time for statistics:              0.117s

Time for Garbage Collector:       0.177s (in 8 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 61MB (    59 MiB) max;     34MB (    32 MiB) avg;     66MB (    63 MiB) peak
Used non-heap memory:             34MB (    33 MiB) max;     27MB (    26 MiB) avg;     35MB (    33 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        36MB (    35 MiB) max;     29MB (    28 MiB) avg
Total process virtual memory:   8132MB (  7755 MiB) max;   8087MB (  7712 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
