scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.4-simple/43_1a_cilled_true-unreach-call_ok_nondet_linux-43_1a-drivers--mfd--ucb1400_core.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_4tszcnpq/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

line 3043: Function pointer *__cil_tmp10 with type unsigned short int (*)(struct snd_ac97 *, unsigned short) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 3074: Function pointer *__cil_tmp10 with type void (*)(struct snd_ac97 *, unsigned short, unsigned short) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function driver_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 3043: Ignoring call via function pointer ucb1400_reg_read::__cil_tmp10 for which no suitable target was found in line: tmp = (*__cil_tmp10)(ac97, __cil_tmp12); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 3043: Ignoring function call through function pointer *__cil_tmp10: tmp = (*__cil_tmp10)(ac97, __cil_tmp12); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function platform_device_alloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_add_data to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_put to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_del to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function driver_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_final_state to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            80 (4% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  66 (83%)
  Because of loop head:            11 (14%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         3 (4%)
  Times precision was empty:       32 (40%)
  Times precision was {false}:     13 (16%)
  Times result was cached:         18 (23%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      17 (21%)
  Times result was 'false':        3 (4%)
Number of strengthen sat checks:   0
Number of coverage checks:         91
  BDD entailment checks:           13
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       58
Number of predicates discovered:          2
Number of abstraction locations:          14
Max number of predicates per location:    1
Avg number of predicates per location:    1
Total predicates per abstraction:         48
Max number of predicates per abstraction: 1
Avg number of predicates per abstraction: 1.60
Number of irrelevant predicates:          15 (31%)
Number of preds handled by boolean abs:   17 (35%)
  Total number of models for allsat:      17
  Max number of models for allsat:        1
  Avg number of models for allsat:        1.00

Time for post operator:                  0.645s
  Time for path formula creation:        0.621s
Time for strengthen operator:            0.019s
Time for prec operator:                  0.192s
  Time for abstraction:                  0.174s (Max:     0.026s, Count: 80)
    Boolean abstraction:                 0.042s
    Solving time:                        0.031s (Max:     0.013s)
    Model enumeration time:              0.003s
    Time for BDD construction:           0.008s (Max:     0.007s)
Time for merge operator:                 0.038s
Time for coverage check:                 0.001s
  Time for BDD entailment checks:        0.001s
Total time for SMT solver (w/o itp):     0.034s

Number of path formula cache hits:   821 (41%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.590s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               202
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                           0 (count: 217, min: 0, max: 0, avg: 0.00)
Time for BDD node cleanup:                             0.000s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.048s
Automaton transfers with branching:                0
Automaton transfer successors:                         1932 (count: 1932, min: 1, max: 1, avg: 1.00) [1 x 1932]

CPA algorithm statistics
------------------------
Number of iterations:            491
Max size of waitlist:            14
Average size of waitlist:        7
Number of computed successors:   568
Max successors for one state:    2
Number of times merged:          39
Number of times stopped:         49
Number of times breaked:         3

Total time for CPA algorithm:         1.345s (Max:     0.637s)
  Time for choose from waitlist:      0.001s
  Time for precision adjustment:      0.294s
  Time for transfer relation:         0.936s
  Time for merge operator:            0.044s
  Time for stop operator:             0.011s
  Time for adding to reached set:     0.010s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   3
Avg. length of target path (in blocks):                  36 (count: 3, min: 8, max: 17, avg: 12.00)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.111s
  Counterexample analysis:                             0.066s (Max:     0.043s, Calls: 3)
    Refinement sat check:                              0.033s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.002s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.009s
  Precision update:                                    0.011s
  ARG update:                                          0.011s

Length of refined path (in blocks):                      33 (count: 3, min: 7, max: 16, avg: 11.00)
Number of affected states:                               30 (count: 3, min: 6, max: 15, avg: 10.00)
Length (states) of path with itp 'true':                  0 (count: 3, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:        30 (count: 3, min: 6, max: 15, avg: 10.00)
Length (states) of path with itp 'false':                 3 (count: 3, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 3, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:              27 (count: 3, min: 5, max: 14, avg: 9.00)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                3
Number of successful refinements:     3
Number of failed refinements:         0
Max. size of reached set before ref.: 168
Max. size of reached set after ref.:  3
Avg. size of reached set before ref.: 130.00
Avg. size of reached set after ref.:  3.00

Total time for CEGAR algorithm:       1.485s
Time for refinements:                 0.139s
Average time for refinement:          0.046s
Max time for refinement:              0.098s

Code Coverage
-----------------------------
  Function coverage:      0.471
  Visited lines:          795
  Total lines:            888
  Line coverage:          0.895
  Visited conditions:     38
  Total conditions:       50
  Condition coverage:     0.760

CPAchecker general statistics
-----------------------------
Number of program locations:     991
Number of CFA edges:             1013
Number of relevant variables:    95
Number of functions:             17
Number of loops:                 2
Size of reached set:             136
  Number of reached locations:   124 (13%)
    Avg states per location:     1
    Max states per location:     3 (at node N387)
  Number of reached functions:   8 (47%)
  Number of partitions:          136
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0

Time for analysis setup:          4.697s
  Time for loading CPAs:          1.118s
  Time for loading parser:        0.803s
  Time for CFA construction:      2.560s
    Time for parsing file(s):     0.873s
    Time for AST to CFA:          0.851s
    Time for CFA sanity check:    0.147s
    Time for post-processing:     0.507s
      Time for var class.:        0.144s
Time for Analysis:                1.485s
CPU time for analysis:            1.480s
Time for analyzing result:        0.000s
Total time for CPAchecker:        6.191s
Total CPU time for CPAchecker:    6.190s
Time for statistics:              0.090s

Time for Garbage Collector:       0.156s (in 5 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 46MB (    44 MiB) max;     30MB (    28 MiB) avg;     63MB (    60 MiB) peak
Used non-heap memory:             32MB (    31 MiB) max;     25MB (    23 MiB) avg;     34MB (    32 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        35MB (    33 MiB) max;     26MB (    25 MiB) avg
Total process virtual memory:   8132MB (  7756 MiB) max;   8070MB (  7697 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
