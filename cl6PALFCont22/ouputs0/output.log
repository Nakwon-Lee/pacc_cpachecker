scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/seq-pthread/cs_queue_true-unreach-call.i


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_khcgntdm/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 1046: Dead code detected: __CS_cs(); (CFACreationUtils.addEdgeToCFA, INFO)

line 1046: Dead code detected: [!(__CS_ret != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 1046: Dead code detected: return 0; (CFACreationUtils.addEdgeToCFA, INFO)

line 1051: Dead code detected: __CS_cs(); (CFACreationUtils.addEdgeToCFA, INFO)

line 1051: Dead code detected: [!(__CS_ret != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 1051: Dead code detected: return 0; (CFACreationUtils.addEdgeToCFA, INFO)

line 1062: Dead code detected: __CS_cs(); (CFACreationUtils.addEdgeToCFA, INFO)

line 1062: Dead code detected: [!(__CS_ret != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 1062: Dead code detected: return 0; (CFACreationUtils.addEdgeToCFA, INFO)

line 1067: Dead code detected: __CS_cs(); (CFACreationUtils.addEdgeToCFA, INFO)

line 1067: Dead code detected: [!(__CS_ret != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 1067: Dead code detected: return 0; (CFACreationUtils.addEdgeToCFA, INFO)

line 1090: Dead code detected: __CS_cs(); (CFACreationUtils.addEdgeToCFA, INFO)

line 1090: Dead code detected: [!(__CS_ret != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 1090: Dead code detected: return 0; (CFACreationUtils.addEdgeToCFA, INFO)

line 1111: Dead code detected: __CS_cs(); (CFACreationUtils.addEdgeToCFA, INFO)

line 1111: Dead code detected: [!(__CS_ret != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 1111: Dead code detected: return 0; (CFACreationUtils.addEdgeToCFA, INFO)

line 1143: Dead code detected: __CS_cs(); (CFACreationUtils.addEdgeToCFA, INFO)

line 1143: Dead code detected: [!(__CS_ret != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 1143: Dead code detected: return 0; (CFACreationUtils.addEdgeToCFA, INFO)

line 1164: Dead code detected: __CS_cs(); (CFACreationUtils.addEdgeToCFA, INFO)

line 1164: Dead code detected: [!(__CS_ret != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 1164: Dead code detected: return 0; (CFACreationUtils.addEdgeToCFA, INFO)

line 1166: Dead code detected: __CS_cs(); (CFACreationUtils.addEdgeToCFA, INFO)

line 1166: Dead code detected: [!(__CS_ret != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 1166: Dead code detected: return 0; (CFACreationUtils.addEdgeToCFA, INFO)

line 1168: Dead code detected: __CS_cs(); (CFACreationUtils.addEdgeToCFA, INFO)

line 1168: Dead code detected: [!(__CS_ret != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 1168: Dead code detected: return 0; (CFACreationUtils.addEdgeToCFA, INFO)

line 1183: Dead code detected: __CS_cs(); (CFACreationUtils.addEdgeToCFA, INFO)

line 1183: Dead code detected: [!(__CS_ret != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 1183: Dead code detected: return 0; (CFACreationUtils.addEdgeToCFA, INFO)

line 1200: Dead code detected: __CS_cs(); (CFACreationUtils.addEdgeToCFA, INFO)

line 1200: Dead code detected: [!(__CS_ret != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 1200: Dead code detected: return 0; (CFACreationUtils.addEdgeToCFA, INFO)

line 1202: Dead code detected: __CS_cs(); (CFACreationUtils.addEdgeToCFA, INFO)

line 1202: Dead code detected: [!(__CS_ret != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 1202: Dead code detected: return 0; (CFACreationUtils.addEdgeToCFA, INFO)

line 1204: Dead code detected: __CS_cs(); (CFACreationUtils.addEdgeToCFA, INFO)

line 1204: Dead code detected: [!(__CS_ret != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 1204: Dead code detected: return 0; (CFACreationUtils.addEdgeToCFA, INFO)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

line 1315: Ignoring function call through function pointer *(__CS_thread[1]): (*(__CS_thread[1]))(0); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 1321: Ignoring function call through function pointer *(__CS_thread[2]): (*(__CS_thread[2]))(0); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            40488 (12% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  39096 (97%)
  Because of loop head:            1286 (3%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         106 (0%)
  Times precision was empty:       24799 (61%)
  Times precision was {false}:     1824 (5%)
  Times result was cached:         7656 (19%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      6209 (15%)
  Times result was 'false':        653 (2%)
Number of strengthen sat checks:   0
Number of coverage checks:         74864
  BDD entailment checks:           17688
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       131
Number of predicates discovered:          22
Number of abstraction locations:          30
Max number of predicates per location:    12
Avg number of predicates per location:    4
Total predicates per abstraction:         48652
Max number of predicates per abstraction: 12
Avg number of predicates per abstraction: 6.06
Number of irrelevant predicates:          16462 (34%)
Number of preds handled by boolean abs:   18629 (38%)
  Total number of models for allsat:      14703
  Max number of models for allsat:        11
  Avg number of models for allsat:        2.37

Time for post operator:                 29.471s
  Time for path formula creation:       29.144s
Time for strengthen operator:            0.583s
Time for prec operator:                798.709s
  Time for abstraction:                797.448s (Max:   137.973s, Count: 40488)
    Boolean abstraction:               677.305s
    Solving time:                      259.251s (Max:     3.273s)
    Model enumeration time:            513.385s
    Time for BDD construction:           0.350s (Max:     0.004s)
Time for merge operator:                 1.415s
Time for coverage check:                 0.088s
  Time for BDD entailment checks:        0.080s
Total time for SMT solver (w/o itp):   772.636s

Number of path formula cache hits:   126853 (35%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    27.312s

Total number of created targets for pointer analysis: 539739
   Number of created targets for uf: *signed_int is 4129
   Number of created targets for uf: *unsigned_char is 529
   Number of created targets for uf: *(unsigned_char)* is 289
   Number of created targets for uf: *_Bool is 1097
   Number of created targets for uf: *(Return_type:_[(void)*],_Parameters:_1,_Parameter_1_type:_[(void)*],_VarArgs:_false)* is 49


Number of BDD nodes:                               2238
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       13612 (count: 89586, min: 0, max: 426, avg: 0.15)
Time for BDD node cleanup:                             0.022s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.988s
  Time for transition matches:                         0.477s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.000s
Automaton transfers with branching:                0
Automaton transfer successors:                       343472 (count: 343472, min: 1, max: 1, avg: 1.00) [1 x 343472]

CPA algorithm statistics
------------------------
Number of iterations:            220405
Max size of waitlist:            480
Average size of waitlist:        51
Number of computed successors:   273492
Max successors for one state:    2
Number of times merged:          28588
Number of times stopped:         39992
Number of times breaked:         106

Total time for CPA algorithm:       845.764s (Max:   155.784s)
  Time for choose from waitlist:      0.306s
  Time for precision adjustment:    802.121s
  Time for transfer relation:        37.304s
  Time for merge operator:            2.252s
  Time for stop operator:             0.774s
  Time for adding to reached set:     0.849s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   106
Avg. length of target path (in blocks):                4919 (count: 106, min: 3, max: 106, avg: 46.41)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  49.651s
  Counterexample analysis:                            48.763s (Max:     0.904s, Calls: 106)
    Refinement sat check:                             44.133s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.002s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.042s
  Precision update:                                    0.056s
  ARG update:                                          0.710s

Length of refined path (in blocks):                    2621 (count: 106, min: 2, max: 98, avg: 24.73)
Number of affected states:                              736 (count: 106, min: 0, max: 61, avg: 6.94)
Length (states) of path with itp 'true':               1779 (count: 106, min: 0, max: 36, avg: 16.78)
Length (states) of path with itp non-trivial itp:       736 (count: 106, min: 0, max: 61, avg: 6.94)
Length (states) of path with itp 'false':               105 (count: 106, min: 0, max: 1, avg: 0.99)
Different non-trivial interpolants along paths:         136 (count: 106, min: 0, max: 9, avg: 1.28)
Equal non-trivial interpolants along paths:             536 (count: 106, min: 0, max: 56, avg: 5.06)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                106
Number of successful refinements:     106
Number of failed refinements:         0
Max. size of reached set before ref.: 9463
Max. size of reached set after ref.:  5286
Avg. size of reached set before ref.: 3707.52
Avg. size of reached set after ref.:  1513.35

Total time for CEGAR algorithm:     896.082s
Time for refinements:                50.185s
Average time for refinement:          0.473s
Max time for refinement:              0.912s

Code Coverage
-----------------------------
  Function coverage:      0.043
  Visited lines:          341
  Total lines:            548
  Line coverage:          0.622
  Visited conditions:     135
  Total conditions:       334
  Condition coverage:     0.404

CPAchecker general statistics
-----------------------------
Number of program locations:     1166
Number of CFA edges:             1348
Number of relevant variables:    79
Number of functions:             23
Number of loops:                 8
Size of reached set:             265
  Number of reached locations:   157 (13%)
    Avg states per location:     1
    Max states per location:     11 (at node N624)
  Number of reached functions:   1 (4%)
  Number of partitions:          243
    Avg size of partitions:      1
    Max size of partitions:      11 (with key [N624 (before line 1236), Function main called from node N601, stack depth 1 [784b990c], stack [main]])
  Number of target states:       0
  Size of final wait list        3

Time for analysis setup:          4.235s
  Time for loading CPAs:          0.816s
  Time for loading parser:        0.783s
  Time for CFA construction:      2.499s
    Time for parsing file(s):     0.686s
    Time for AST to CFA:          0.859s
    Time for CFA sanity check:    0.177s
    Time for post-processing:     0.587s
      Time for var class.:        0.280s
Time for Analysis:              896.083s
CPU time for analysis:          896.050s
Total time for CPAchecker:      900.324s
Total CPU time for CPAchecker:  900.290s
Time for statistics:              0.085s

Time for Garbage Collector:       4.314s (in 230 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                160MB (   153 MiB) max;    104MB (    99 MiB) avg;    178MB (   170 MiB) peak
Used non-heap memory:             39MB (    37 MiB) max;     38MB (    36 MiB) avg;     39MB (    37 MiB) peak
Allocated heap memory:           213MB (   203 MiB) max;    163MB (   155 MiB) avg
Allocated non-heap memory:        41MB (    39 MiB) max;     41MB (    39 MiB) avg
Total process virtual memory:   9383MB (  8949 MiB) max;   8704MB (  8300 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
