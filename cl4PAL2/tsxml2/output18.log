scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/email_spec9_product29_true-unreach-call_true-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_djlr0wla/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 61: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 84: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 189: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 209: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 218: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 233: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 500: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 532: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 541: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 550: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 575: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 678: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 998: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1044: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1292: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1313: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1350: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1387: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1426: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1465: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1502: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1539: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1576: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1613: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1650: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1704: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1733: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1781: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1828: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1873: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1951: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2020: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2154: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2237: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2284: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2331: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2376: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2439: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2546: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2600: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2672: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2719: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 835: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            82 (0% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            19 (23%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         63 (77%)
  Times precision was empty:       3 (4%)
  Times precision was {false}:     62 (76%)
  Times result was cached:         0 (0%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      17 (21%)
  Times result was 'false':        58 (71%)
Number of strengthen sat checks:   0
Number of coverage checks:         15941
  BDD entailment checks:           31
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       889
Number of predicates discovered:          50
Number of abstraction locations:          2
Max number of predicates per location:    49
Avg number of predicates per location:    25
Total predicates per abstraction:         509
Max number of predicates per abstraction: 49
Avg number of predicates per abstraction: 6.44
Number of irrelevant predicates:          62 (12%)
Number of preds handled by boolean abs:   447 (88%)
  Total number of models for allsat:      284
  Max number of models for allsat:        58
  Avg number of models for allsat:        16.71

Time for post operator:                  3.294s
  Time for path formula creation:        3.172s
Time for strengthen operator:            0.159s
Time for prec operator:                  7.930s
  Time for abstraction:                  7.747s (Max:     0.401s, Count: 82)
    Boolean abstraction:                 2.259s
    Solving time:                        4.798s (Max:     0.219s)
    Model enumeration time:              1.475s
    Time for BDD construction:           0.170s (Max:     0.032s)
Time for merge operator:                 0.670s
Time for coverage check:                 0.036s
  Time for BDD entailment checks:        0.014s
Total time for SMT solver (w/o itp):     6.273s

Number of path formula cache hits:   26655 (48%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     3.032s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               13184
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        2964 (count: 1729, min: 0, max: 1018, avg: 1.71)
Time for BDD node cleanup:                             0.005s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.392s
Automaton transfers with branching:                0
Automaton transfer successors:                        52125 (count: 52125, min: 1, max: 1, avg: 1.00) [1 x 52125]

CPA algorithm statistics
------------------------
Number of iterations:            39143
Max size of waitlist:            11
Average size of waitlist:        5
Number of computed successors:   47178
Max successors for one state:    2
Number of times merged:          7955
Number of times stopped:         7958
Number of times breaked:         5

Total time for CPA algorithm:        17.026s (Max:     8.473s)
  Time for choose from waitlist:      0.186s
  Time for precision adjustment:      8.791s
  Time for transfer relation:         5.532s
  Time for merge operator:            1.175s
  Time for stop operator:             0.259s
  Time for adding to reached set:     0.318s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   5
Avg. length of target path (in blocks):                  12 (count: 5, min: 2, max: 4, avg: 2.40)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.927s
  Counterexample analysis:                             0.708s (Max:     0.377s, Calls: 5)
    Refinement sat check:                              0.633s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.028s
  Precision update:                                    0.013s
  ARG update:                                          0.152s

Length of refined path (in blocks):                      12 (count: 5, min: 2, max: 4, avg: 2.40)
Number of affected states:                                7 (count: 5, min: 1, max: 3, avg: 1.40)
Length (states) of path with itp 'true':                  0 (count: 5, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:         7 (count: 5, min: 1, max: 3, avg: 1.40)
Length (states) of path with itp 'false':                 0 (count: 5, min: 0, max: 0, avg: 0.00)
Different non-trivial interpolants along paths:           2 (count: 5, min: 0, max: 2, avg: 0.40)
Equal non-trivial interpolants along paths:               0 (count: 5, min: 0, max: 0, avg: 0.00)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                5
Number of successful refinements:     5
Number of failed refinements:         0
Max. size of reached set before ref.: 8939
Max. size of reached set after ref.:  136
Avg. size of reached set before ref.: 3623.80
Avg. size of reached set after ref.:  136.00

Total time for CEGAR algorithm:      18.098s
Time for refinements:                 1.072s
Average time for refinement:          0.214s
Max time for refinement:              0.496s

Code Coverage
-----------------------------
  Function coverage:      0.664
  Visited lines:          879
  Total lines:            1453
  Line coverage:          0.605
  Visited conditions:     344
  Total conditions:       498
  Condition coverage:     0.691

CPAchecker general statistics
-----------------------------
Number of program locations:     1995
Number of CFA edges:             2265
Number of relevant variables:    361
Number of functions:             113
Number of loops:                 4
Size of reached set:             21724
  Number of reached locations:   917 (46%)
    Avg states per location:     23
    Max states per location:     144 (at node N1037)
  Number of reached functions:   75 (66%)
  Number of partitions:          21719
    Avg size of partitions:      1
    Max size of partitions:      6 (with key [N743 (before lines 1096-1263), Function test called from node N2154, stack depth 2 [1fc0053e], stack [main, test]])
  Number of target states:       0

Time for analysis setup:          4.283s
  Time for loading CPAs:          0.870s
  Time for loading parser:        0.789s
  Time for CFA construction:      2.499s
    Time for parsing file(s):     0.716s
    Time for AST to CFA:          0.756s
    Time for CFA sanity check:    0.191s
    Time for post-processing:     0.646s
      Time for var class.:        0.354s
Time for Analysis:               18.098s
CPU time for analysis:           18.100s
Time for analyzing result:        0.019s
Total time for CPAchecker:       22.386s
Total CPU time for CPAchecker:   22.370s
Time for statistics:              0.492s

Time for Garbage Collector:       0.591s (in 24 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 81MB (    77 MiB) max;     47MB (    45 MiB) avg;     91MB (    87 MiB) peak
Used non-heap memory:             36MB (    34 MiB) max;     32MB (    30 MiB) avg;     36MB (    35 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        38MB (    36 MiB) max;     34MB (    32 MiB) avg
Total process virtual memory:   8134MB (  7757 MiB) max;   8116MB (  7740 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
