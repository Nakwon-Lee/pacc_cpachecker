scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.4-simple/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--mtd--tests--mtd_oobtest.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_c_ehz79j/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 2097: Function pointer *__cil_tmp15 with type int (*)(struct mtd_info *mtd, loff_t from, struct mtd_oob_ops *ops) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 2154: Function pointer *__cil_tmp19 with type int (*)(struct mtd_info *mtd, loff_t to, struct mtd_oob_ops *ops) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function get_mtd_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mtd_block_isbad to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __might_sleep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _cond_resched to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mtd_erase to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 2154: Ignoring call via function pointer mtd_write_oob::__cil_tmp19 for which no suitable target was found in line: tmp___0 = (*__cil_tmp19)(mtd, to, ops); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 2154: Ignoring function call through function pointer *__cil_tmp19: tmp___0 = (*__cil_tmp19)(mtd, to, ops); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 2097: Ignoring call via function pointer mtd_read_oob::__cil_tmp15 for which no suitable target was found in line: tmp___0 = (*__cil_tmp15)(mtd, from, ops); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 2097: Ignoring function call through function pointer *__cil_tmp15: tmp___0 = (*__cil_tmp15)(mtd, from, ops); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function memcmp to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function put_mtd_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            1117 (4% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            1112 (100%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         5 (0%)
  Times precision was empty:       1112 (100%)
  Times precision was {false}:     2 (0%)
  Times result was cached:         0 (0%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      3 (0%)
  Times result was 'false':        4 (0%)
Number of strengthen sat checks:   0
Number of coverage checks:         3213
  BDD entailment checks:           861
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       469
Number of predicates discovered:          2
Number of abstraction locations:          4
Max number of predicates per location:    1
Avg number of predicates per location:    1
Total predicates per abstraction:         5
Max number of predicates per abstraction: 1
Avg number of predicates per abstraction: 1.00
Number of irrelevant predicates:          2 (40%)
Number of preds handled by boolean abs:   3 (60%)
  Total number of models for allsat:      0
  Max number of models for allsat:        0
  Avg number of models for allsat:        0.00

Time for post operator:                  3.348s
  Time for path formula creation:        3.309s
Time for strengthen operator:            0.078s
Time for prec operator:                  0.217s
  Time for abstraction:                  0.080s (Max:     0.021s, Count: 1117)
    Boolean abstraction:                 0.035s
    Solving time:                        0.044s (Max:     0.015s)
    Model enumeration time:              0.000s
    Time for BDD construction:           0.000s (Max:     0.000s)
Time for merge operator:                 0.330s
Time for coverage check:                 0.012s
  Time for BDD entailment checks:        0.011s
Total time for SMT solver (w/o itp):     0.044s

Number of path formula cache hits:   256 (1%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     3.021s

Total number of created targets for pointer analysis: 162
   Number of created targets for uf: *unsigned_char is 4


Number of BDD nodes:                               202
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                           1 (count: 2005, min: 0, max: 1, avg: 0.00)
Time for BDD node cleanup:                             0.004s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.186s
Automaton transfers with branching:                0
Automaton transfer successors:                        31816 (count: 31816, min: 1, max: 1, avg: 1.00) [1 x 31816]

CPA algorithm statistics
------------------------
Number of iterations:            14135
Max size of waitlist:            402
Average size of waitlist:        169
Number of computed successors:   16291
Max successors for one state:    2
Number of times merged:          1176
Number of times stopped:         2037
Number of times breaked:         4

Total time for CPA algorithm:         5.793s (Max:     4.867s)
  Time for choose from waitlist:      0.048s
  Time for precision adjustment:      0.483s
  Time for transfer relation:         4.451s
  Time for merge operator:            0.434s
  Time for stop operator:             0.100s
  Time for adding to reached set:     0.070s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   4
Avg. length of target path (in blocks):                   7 (count: 4, min: 1, max: 2, avg: 1.75)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.179s
  Counterexample analysis:                             0.050s (Max:     0.019s, Calls: 4)
    Refinement sat check:                              0.035s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.008s
  Precision update:                                    0.001s
  ARG update:                                          0.112s

Length of refined path (in blocks):                       7 (count: 4, min: 1, max: 2, avg: 1.75)
Number of affected states:                                3 (count: 4, min: 0, max: 1, avg: 0.75)
Length (states) of path with itp 'true':                  0 (count: 4, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:         3 (count: 4, min: 0, max: 1, avg: 0.75)
Length (states) of path with itp 'false':                 0 (count: 4, min: 0, max: 0, avg: 0.00)
Different non-trivial interpolants along paths:           0 (count: 4, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:               0 (count: 4, min: 0, max: 0, avg: 0.00)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                4
Number of successful refinements:     4
Number of failed refinements:         0
Max. size of reached set before ref.: 11818
Max. size of reached set after ref.:  4728
Avg. size of reached set before ref.: 4790.75
Avg. size of reached set after ref.:  1250.75

Total time for CEGAR algorithm:       6.066s
Time for refinements:                 0.260s
Average time for refinement:          0.065s
Max time for refinement:              0.167s

Code Coverage
-----------------------------
  Function coverage:      0.313
  Visited lines:          901
  Total lines:            2166
  Line coverage:          0.416
  Visited conditions:     20
  Total conditions:       222
  Condition coverage:     0.090

CPAchecker general statistics
-----------------------------
Number of program locations:     2452
Number of CFA edges:             2594
Number of relevant variables:    609
Number of functions:             32
Number of loops:                 12
Size of reached set:             91
  Number of reached locations:   85 (3%)
    Avg states per location:     1
    Max states per location:     3 (at node N100)
  Number of reached functions:   10 (31%)
  Number of partitions:          91
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0

Time for analysis setup:          3.363s
  Time for loading CPAs:          0.625s
  Time for loading parser:        0.579s
  Time for CFA construction:      2.089s
    Time for parsing file(s):     0.680s
    Time for AST to CFA:          0.602s
    Time for CFA sanity check:    0.133s
    Time for post-processing:     0.500s
      Time for var class.:        0.231s
Time for Analysis:                6.066s
CPU time for analysis:            6.060s
Time for analyzing result:        0.000s
Total time for CPAchecker:        9.432s
Total CPU time for CPAchecker:    9.430s
Time for statistics:              0.061s

Time for Garbage Collector:       0.309s (in 15 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 82MB (    78 MiB) max;     44MB (    42 MiB) avg;     85MB (    81 MiB) peak
Used non-heap memory:             36MB (    35 MiB) max;     30MB (    28 MiB) avg;     37MB (    35 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        38MB (    36 MiB) max;     32MB (    30 MiB) avg
Total process virtual memory:   8135MB (  7758 MiB) max;   8103MB (  7728 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
