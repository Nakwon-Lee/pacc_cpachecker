scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.4-simple/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--regulator--gpio-regulator.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_sqbxfxvd/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 3245: Dead code detected: Goto: switch_break (CFACreationUtils.addEdgeToCFA, INFO)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_driver_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function kstrdup to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function kmemdup to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function gpio_request to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function gpio_direction_output to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function gpio_request_array to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function regulator_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function gpio_free_array to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function gpio_free to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_driver_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rdev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __gpio_set_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function gpio_set_value_cansleep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            77 (1% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            66 (86%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         11 (14%)
  Times precision was empty:       21 (27%)
  Times precision was {false}:     11 (14%)
  Times result was cached:         27 (35%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      18 (23%)
  Times result was 'false':        7 (9%)
Number of strengthen sat checks:   0
Number of coverage checks:         482
  BDD entailment checks:           38
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       383
Number of predicates discovered:          2
Number of abstraction locations:          6
Max number of predicates per location:    1
Avg number of predicates per location:    1
Total predicates per abstraction:         56
Max number of predicates per abstraction: 1
Avg number of predicates per abstraction: 1.93
Number of irrelevant predicates:          15 (27%)
Number of preds handled by boolean abs:   18 (32%)
  Total number of models for allsat:      18
  Max number of models for allsat:        1
  Avg number of models for allsat:        1.00

Time for post operator:                  0.752s
  Time for path formula creation:        0.733s
Time for strengthen operator:            0.039s
Time for prec operator:                  0.382s
  Time for abstraction:                  0.370s (Max:     0.101s, Count: 77)
    Boolean abstraction:                 0.143s
    Solving time:                        0.206s (Max:     0.082s)
    Model enumeration time:              0.005s
    Time for BDD construction:           0.002s (Max:     0.001s)
Time for merge operator:                 0.169s
Time for coverage check:                 0.006s
  Time for BDD entailment checks:        0.006s
Total time for SMT solver (w/o itp):     0.211s

Number of path formula cache hits:   4204 (53%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.698s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               202
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                          25 (count: 229, min: 0, max: 16, avg: 0.11)
Time for BDD node cleanup:                             0.000s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.080s
Automaton transfers with branching:                0
Automaton transfer successors:                         7752 (count: 7752, min: 1, max: 1, avg: 1.00) [1 x 7752]

CPA algorithm statistics
------------------------
Number of iterations:            2311
Max size of waitlist:            34
Average size of waitlist:        19
Number of computed successors:   2642
Max successors for one state:    2
Number of times merged:          222
Number of times stopped:         258
Number of times breaked:         4

Total time for CPA algorithm:         2.028s (Max:     0.751s)
  Time for choose from waitlist:      0.020s
  Time for precision adjustment:      0.489s
  Time for transfer relation:         1.190s
  Time for merge operator:            0.183s
  Time for stop operator:             0.040s
  Time for adding to reached set:     0.022s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   4
Avg. length of target path (in blocks):                  15 (count: 4, min: 1, max: 6, avg: 3.75)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.117s
  Counterexample analysis:                             0.068s (Max:     0.025s, Calls: 4)
    Refinement sat check:                              0.045s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.002s
  Precision update:                                    0.002s
  ARG update:                                          0.039s

Length of refined path (in blocks):                      15 (count: 4, min: 1, max: 6, avg: 3.75)
Number of affected states:                               11 (count: 4, min: 0, max: 5, avg: 2.75)
Length (states) of path with itp 'true':                  0 (count: 4, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:        11 (count: 4, min: 0, max: 5, avg: 2.75)
Length (states) of path with itp 'false':                 0 (count: 4, min: 0, max: 0, avg: 0.00)
Different non-trivial interpolants along paths:           0 (count: 4, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:               8 (count: 4, min: 0, max: 4, avg: 2.00)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                4
Number of successful refinements:     4
Number of failed refinements:         0
Max. size of reached set before ref.: 807
Max. size of reached set after ref.:  256
Avg. size of reached set before ref.: 534.50
Avg. size of reached set after ref.:  80.25

Total time for CEGAR algorithm:       2.180s
Time for refinements:                 0.146s
Average time for refinement:          0.036s
Max time for refinement:              0.049s

Code Coverage
-----------------------------
  Function coverage:      0.697
  Visited lines:          1420
  Total lines:            1549
  Line coverage:          0.917
  Visited conditions:     94
  Total conditions:       116
  Condition coverage:     0.810

CPAchecker general statistics
-----------------------------
Number of program locations:     1748
Number of CFA edges:             1814
Number of relevant variables:    338
Number of functions:             33
Number of loops:                 5
Size of reached set:             561
  Number of reached locations:   340 (19%)
    Avg states per location:     1
    Max states per location:     8 (at node N1170)
  Number of reached functions:   23 (70%)
  Number of partitions:          561
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0

Time for analysis setup:          3.105s
  Time for loading CPAs:          0.640s
  Time for loading parser:        0.522s
  Time for CFA construction:      1.835s
    Time for parsing file(s):     0.539s
    Time for AST to CFA:          0.531s
    Time for CFA sanity check:    0.131s
    Time for post-processing:     0.435s
      Time for var class.:        0.210s
Time for Analysis:                2.181s
CPU time for analysis:            2.170s
Time for analyzing result:        0.000s
Total time for CPAchecker:        5.295s
Total CPU time for CPAchecker:    5.280s
Time for statistics:              0.072s

Time for Garbage Collector:       0.142s (in 8 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 63MB (    60 MiB) max;     34MB (    32 MiB) avg;     67MB (    63 MiB) peak
Used non-heap memory:             33MB (    32 MiB) max;     26MB (    25 MiB) avg;     34MB (    33 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        36MB (    34 MiB) max;     28MB (    27 MiB) avg
Total process virtual memory:   8133MB (  7757 MiB) max;   8086MB (  7711 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
