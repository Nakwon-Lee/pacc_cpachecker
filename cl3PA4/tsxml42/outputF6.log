scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-challenges/linux-3.14__complex_emg__linux-usb-dev__drivers-net-ethernet-nvidia-forcedeth_true-unreach-call.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_xn9eo66c/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 5492: Dead code detected: return (1); (CFACreationUtils.addEdgeToCFA, INFO)

line 5648: Dead code detected: Goto: case_1 (CFACreationUtils.addEdgeToCFA, INFO)

line 5653: Dead code detected: Goto: case_2 (CFACreationUtils.addEdgeToCFA, INFO)

line 5663: Dead code detected: Goto: case_8 (CFACreationUtils.addEdgeToCFA, INFO)

line 5667: Dead code detected: Goto: switch_default (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label case_8 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_default is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_1 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_2 is not reachable. (CFAFunctionBuilder.leave, INFO)

line 7024: Dead code detected: Goto: case_1 (CFACreationUtils.addEdgeToCFA, INFO)

line 7047: Dead code detected: Goto: case_1___0 (CFACreationUtils.addEdgeToCFA, INFO)

line 7052: Dead code detected: Goto: case_2 (CFACreationUtils.addEdgeToCFA, INFO)

line 7062: Dead code detected: Goto: case_8 (CFACreationUtils.addEdgeToCFA, INFO)

line 7066: Dead code detected: Goto: switch_default (CFACreationUtils.addEdgeToCFA, INFO)

line 7029: Dead code detected: Goto: case_2___0 (CFACreationUtils.addEdgeToCFA, INFO)

line 7091: Dead code detected: Goto: case_1___1 (CFACreationUtils.addEdgeToCFA, INFO)

line 7096: Dead code detected: Goto: case_2___1 (CFACreationUtils.addEdgeToCFA, INFO)

line 7106: Dead code detected: Goto: case_8___0 (CFACreationUtils.addEdgeToCFA, INFO)

line 7110: Dead code detected: Goto: switch_default___0 (CFACreationUtils.addEdgeToCFA, INFO)

line 7135: Dead code detected: Goto: case_1___2 (CFACreationUtils.addEdgeToCFA, INFO)

line 7140: Dead code detected: Goto: case_2___2 (CFACreationUtils.addEdgeToCFA, INFO)

line 7150: Dead code detected: Goto: case_8___1 (CFACreationUtils.addEdgeToCFA, INFO)

line 7154: Dead code detected: Goto: switch_default___1 (CFACreationUtils.addEdgeToCFA, INFO)

line 7039: Dead code detected: Goto: case_8___2 (CFACreationUtils.addEdgeToCFA, INFO)

line 7179: Dead code detected: Goto: case_1___3 (CFACreationUtils.addEdgeToCFA, INFO)

line 7184: Dead code detected: Goto: case_2___3 (CFACreationUtils.addEdgeToCFA, INFO)

line 7194: Dead code detected: Goto: case_8___3 (CFACreationUtils.addEdgeToCFA, INFO)

line 7198: Dead code detected: Goto: switch_default___2 (CFACreationUtils.addEdgeToCFA, INFO)

line 7043: Dead code detected: Goto: switch_default___3 (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label case_4___0 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_4___3 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_8___3 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_8___2 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_8___1 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_8 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_8___0 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_4 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_1 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_2 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_default is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_2___2 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_2___3 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_2___0 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_2___1 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_1___1 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_1___2 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_1___3 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_1___0 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

line 17436: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 17456: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 17459: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 17461: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 17559: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 18534: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 18547: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 18869: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 19602: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 20527: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 20528: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 20573: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 21178: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 21227: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 21243: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 21259: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 21275: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 21291: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 21307: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 21323: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 21339: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 21358: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 21377: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 21396: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 21415: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 21434: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 21453: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 21517: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 21533: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 21549: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 21565: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 21581: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 21597: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 21613: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 21629: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 21645: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 21662: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 21678: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 21732: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 6307: Function pointer *(ops___0->alloc) with type void *(*)(struct device *, size_t , dma_addr_t *, gfp_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6348: Function pointer *(ops___0->free) with type void (*)(struct device *, size_t , void *, dma_addr_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6159: Function pointer *(ops___0->map_page) with type dma_addr_t (*)(struct device *, struct page *, unsigned long, size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 6079-6080: Function pointer *(ops___0->map_page) with type dma_addr_t (*)(struct device *, struct page *, unsigned long, size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6221: Function pointer *(ops___0->mapping_error) with type int (*)(struct device *, dma_addr_t ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6195: Function pointer *(ops___0->unmap_page) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6119: Function pointer *(ops___0->unmap_page) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 19298: Function pointer *arg0 with type int (*)(struct pci_dev *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 19309: Function pointer *arg0 with type int (*)(struct pci_dev *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 19332: Function pointer *arg0 with type int (*)(struct pci_dev *, struct pm_message ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 19344: Function pointer *arg0 with type int (*)(struct pci_dev *, struct pm_message ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 19611: Function pointer *arg0 with type int (*)(struct platform_device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 19622: Function pointer *arg0 with type int (*)(struct platform_device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 19633: Function pointer *arg0 with type void (*)(struct device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function external_allocated_data to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_switch_to_interrupt_context to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_switch_to_process_context to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 21117: Ignoring call via function pointer ldv_timer_instance_callback_7_2::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 21117: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 19787: Ignoring call via function pointer ldv_pm_ops_instance_runtime_idle_5_27::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 19787: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 19809: Ignoring call via function pointer ldv_pm_ops_instance_runtime_suspend_5_25::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 19809: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 19798: Ignoring call via function pointer ldv_pm_ops_instance_runtime_resume_5_24::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 19798: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 19710: Ignoring call via function pointer ldv_pm_ops_instance_prepare_5_22::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 19710: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 19842: Ignoring call via function pointer ldv_pm_ops_instance_suspend_noirq_5_20::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 19842: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 19776: Ignoring call via function pointer ldv_pm_ops_instance_resume_noirq_5_19::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 19776: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 19831: Ignoring call via function pointer ldv_pm_ops_instance_suspend_late_5_18::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 19831: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 19765: Ignoring call via function pointer ldv_pm_ops_instance_resume_early_5_17::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 19765: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 19655: Ignoring call via function pointer ldv_pm_ops_instance_freeze_late_5_14::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 19655: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 19864: Ignoring call via function pointer ldv_pm_ops_instance_thaw_early_5_13::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 19864: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 19666: Ignoring call via function pointer ldv_pm_ops_instance_freeze_noirq_5_12::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 19666: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 19875: Ignoring call via function pointer ldv_pm_ops_instance_thaw_noirq_5_11::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 19875: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 19688: Ignoring call via function pointer ldv_pm_ops_instance_poweroff_late_5_8::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 19688: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 19732: Ignoring call via function pointer ldv_pm_ops_instance_restore_early_5_7::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 19732: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 19699: Ignoring call via function pointer ldv_pm_ops_instance_poweroff_noirq_5_6::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 19699: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 19743: Ignoring call via function pointer ldv_pm_ops_instance_restore_noirq_5_5::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 19743: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 19633: Ignoring call via function pointer ldv_pm_ops_instance_complete_5_3::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 19633: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 19332: Ignoring call via function pointer ldv_pci_instance_suspend_4_8::arg0 for which no suitable target was found in line: tmp = (*arg0)(arg1, arg2); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 19332: Ignoring function call through function pointer *arg0: tmp = (*arg0)(arg1, arg2); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 19344: Ignoring call via function pointer ldv_pci_instance_suspend_late_4_7::arg0 for which no suitable target was found in line: tmp = (*arg0)(arg1, arg2); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 19344: Ignoring function call through function pointer *arg0: tmp = (*arg0)(arg1, arg2); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 19309: Ignoring call via function pointer ldv_pci_instance_resume_early_4_6::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 19309: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 19298: Ignoring call via function pointer ldv_pci_instance_resume_4_5::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 19298: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function eth_validate_addr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ethtool_op_get_ts_info to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ethtool_op_get_link to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_pre_probe to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 18628: Ignoring call via function pointer ldv_interrupt_instance_thread_2_3::arg0 for which no suitable target was found in line: (*arg0)(arg1, arg2); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 18628: Ignoring function call through function pointer *arg0: (*arg0)(arg1, arg2); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 18616: Ignoring call via function pointer ldv_interrupt_instance_thread_1_3::arg0 for which no suitable target was found in line: (*arg0)(arg1, arg2); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 18616: Ignoring function call through function pointer *arg0: (*arg0)(arg1, arg2); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 18604: Ignoring call via function pointer ldv_interrupt_instance_thread_0_3::arg0 for which no suitable target was found in line: (*arg0)(arg1, arg2); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 18604: Ignoring function call through function pointer *arg0: (*arg0)(arg1, arg2); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function netif_carrier_off to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netdev_info to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strlcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_trylock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __pci_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function round_jiffies to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mod_timer to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 20019: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___2 = ldv_xmalloc(1432UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function _raw_spin_unlock_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 19123: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___0 = ldv_xmalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 19064: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp = ldv_xmalloc(8UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function memcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 19611: Ignoring call via function pointer ldv_platform_instance_probe_6_14::arg0 for which no suitable target was found in line: tmp = (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 19611: Ignoring function call through function pointer *arg0: tmp = (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 19622: Ignoring call via function pointer ldv_platform_instance_release_6_3::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 19622: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function netdev_warn to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __napi_schedule to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function unregister_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_set_wakeup_enable to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __raw_spin_lock_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __local_bh_disable_ip to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock_bh to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_disable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_wake_from_d3 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_set_power_state to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_netdev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function disable_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netif_device_detach to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 5585: Return type of function __builtin_unreachable is void, but result is used as type int: __builtin_unreachable(); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function __builtin_unreachable to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function trace_hardirqs_off to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_fmt to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            3584949 (20% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  3210611 (90%)
  Because of loop head:            373864 (10%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         474 (0%)
  Times precision was empty:       2700872 (75%)
  Times precision was {false}:     8811 (0%)
  Times result was cached:         863871 (24%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      11395 (0%)
  Times result was 'false':        112321 (3%)
Number of strengthen sat checks:   0
Number of coverage checks:         2519796
  BDD entailment checks:           1184672
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       65
Number of predicates discovered:          47
Number of abstraction locations:          110
Max number of predicates per location:    47
Avg number of predicates per location:    8
Total predicates per abstraction:         7925711
Max number of predicates per abstraction: 47
Avg number of predicates per abstraction: 392.25
Number of irrelevant predicates:          6259705 (79%)
Number of preds handled by boolean abs:   88268 (1%)
  Total number of models for allsat:      27217
  Max number of models for allsat:        108
  Avg number of models for allsat:        2.39

Time for post operator:                103.548s
  Time for path formula creation:       95.471s
Time for strengthen operator:           13.948s
Time for prec operator:                313.271s
  Time for abstraction:                279.517s (Max:     0.336s, Count: 3584949)
    Boolean abstraction:                24.001s
    Solving time:                       22.926s (Max:     0.016s)
    Model enumeration time:              4.117s
    Time for BDD construction:           1.521s (Max:     0.084s)
Time for merge operator:                 4.605s
Time for coverage check:                 1.287s
  Time for BDD entailment checks:        0.959s
Total time for SMT solver (w/o itp):    27.043s

Number of path formula cache hits:   20760666 (94%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    53.981s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               202298
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       63643 (count: 4040156, min: 0, max: 1086, avg: 0.02)
Time for BDD node cleanup:                             0.546s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                 23.140s
  Time for transition matches:                        12.894s
  Time for transition assertions:                      0.001s
  Time for transition actions:                         0.005s
Automaton transfers with branching:                0
Automaton transfer successors:                     18128469 (count: 18128469, min: 1, max: 1, avg: 1.00) [1 x 18128469]

CPA algorithm statistics
------------------------
Number of iterations:            12001033
Max size of waitlist:            1710
Average size of waitlist:        647
Number of computed successors:   13461366
Max successors for one state:    2
Number of times merged:          667562
Number of times stopped:         1012830
Number of times breaked:         474

Total time for CPA algorithm:       846.372s (Max:     6.705s)
  Time for choose from waitlist:      7.769s
  Time for precision adjustment:    403.498s
  Time for transfer relation:       336.314s
  Time for merge operator:           16.514s
  Time for stop operator:            22.803s
  Time for adding to reached set:    26.403s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   474
Avg. length of target path (in blocks):               13597 (count: 474, min: 15, max: 34, avg: 28.69)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  33.069s
  Counterexample analysis:                             6.107s (Max:     0.043s, Calls: 474)
    Refinement sat check:                              3.988s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.008s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.128s
  Precision update:                                    0.291s
  ARG update:                                         26.324s

Length of refined path (in blocks):                    8458 (count: 474, min: 11, max: 29, avg: 17.84)
Number of affected states:                             4832 (count: 474, min: 4, max: 22, avg: 10.19)
Length (states) of path with itp 'true':               3152 (count: 474, min: 6, max: 10, avg: 6.65)
Length (states) of path with itp non-trivial itp:      4832 (count: 474, min: 4, max: 22, avg: 10.19)
Length (states) of path with itp 'false':               474 (count: 474, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           5 (count: 474, min: 0, max: 1, avg: 0.01)
Equal non-trivial interpolants along paths:            4353 (count: 474, min: 3, max: 21, avg: 9.18)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                474
Number of successful refinements:     474
Number of failed refinements:         0
Max. size of reached set before ref.: 54853
Max. size of reached set after ref.:  30366
Avg. size of reached set before ref.: 29711.02
Avg. size of reached set after ref.:  3737.05

Total time for CEGAR algorithm:     890.812s
Time for refinements:                42.866s
Average time for refinement:          0.090s
Max time for refinement:              0.365s

Code Coverage
-----------------------------
  Function coverage:      0.401
  Visited lines:          3178
  Total lines:            8722
  Line coverage:          0.364
  Visited conditions:     670
  Total conditions:       2400
  Condition coverage:     0.279

CPAchecker general statistics
-----------------------------
Number of program locations:     12414
Number of CFA edges:             14974
Number of relevant variables:    2016
Number of functions:             459
Number of loops:                 53
Size of reached set:             24553
  Number of reached locations:   2107 (17%)
    Avg states per location:     11
    Max states per location:     465 (at node N705)
  Number of reached functions:   184 (40%)
  Number of partitions:          24463
    Avg size of partitions:      1
    Max size of partitions:      16 (with key [N9106 (before line 18419), Function main called from node N9090, stack depth 1 [17e6b7e4], stack [main]])
  Number of target states:       0
  Size of final wait list        802

Time for analysis setup:          9.534s
  Time for loading CPAs:          1.515s
  Time for loading parser:        0.638s
  Time for CFA construction:      7.224s
    Time for parsing file(s):     1.465s
    Time for AST to CFA:          2.829s
    Time for CFA sanity check:    0.790s
    Time for post-processing:     1.998s
      Time for var class.:        0.949s
Time for Analysis:              890.812s
CPU time for analysis:          890.740s
Total time for CPAchecker:      900.351s
Total CPU time for CPAchecker:  900.250s
Time for statistics:              0.474s

Time for Garbage Collector:      73.188s (in 1005 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:               1048MB (   999 MiB) max;    588MB (   561 MiB) avg;   1135MB (  1082 MiB) peak
Used non-heap memory:             46MB (    44 MiB) max;     40MB (    39 MiB) avg;     47MB (    44 MiB) peak
Allocated heap memory:          1314MB (  1253 MiB) max;    886MB (   845 MiB) avg
Allocated non-heap memory:        48MB (    46 MiB) max;     48MB (    46 MiB) avg
Total process virtual memory:   8221MB (  7840 MiB) max;   8163MB (  7785 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
