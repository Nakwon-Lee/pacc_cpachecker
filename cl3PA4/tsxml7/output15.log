scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-challenges/linux-3.14__complex_emg__linux-alloc-spinlock__drivers-net-ethernet-emulex-benet-be2net_true-unreach-call.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_xx5lbe85/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 7672: Dead code detected: return (1); (CFACreationUtils.addEdgeToCFA, INFO)

line 9274: Dead code detected: Goto: case_1 (CFACreationUtils.addEdgeToCFA, INFO)

line 9297: Dead code detected: Goto: case_1___0 (CFACreationUtils.addEdgeToCFA, INFO)

line 9302: Dead code detected: Goto: case_2 (CFACreationUtils.addEdgeToCFA, INFO)

line 9312: Dead code detected: Goto: case_8 (CFACreationUtils.addEdgeToCFA, INFO)

line 9316: Dead code detected: Goto: switch_default (CFACreationUtils.addEdgeToCFA, INFO)

line 9279: Dead code detected: Goto: case_2___0 (CFACreationUtils.addEdgeToCFA, INFO)

line 9341: Dead code detected: Goto: case_1___1 (CFACreationUtils.addEdgeToCFA, INFO)

line 9346: Dead code detected: Goto: case_2___1 (CFACreationUtils.addEdgeToCFA, INFO)

line 9356: Dead code detected: Goto: case_8___0 (CFACreationUtils.addEdgeToCFA, INFO)

line 9360: Dead code detected: Goto: switch_default___0 (CFACreationUtils.addEdgeToCFA, INFO)

line 9385: Dead code detected: Goto: case_1___2 (CFACreationUtils.addEdgeToCFA, INFO)

line 9390: Dead code detected: Goto: case_2___2 (CFACreationUtils.addEdgeToCFA, INFO)

line 9400: Dead code detected: Goto: case_8___1 (CFACreationUtils.addEdgeToCFA, INFO)

line 9404: Dead code detected: Goto: switch_default___1 (CFACreationUtils.addEdgeToCFA, INFO)

line 9289: Dead code detected: Goto: case_8___2 (CFACreationUtils.addEdgeToCFA, INFO)

line 9429: Dead code detected: Goto: case_1___3 (CFACreationUtils.addEdgeToCFA, INFO)

line 9434: Dead code detected: Goto: case_2___3 (CFACreationUtils.addEdgeToCFA, INFO)

line 9444: Dead code detected: Goto: case_8___3 (CFACreationUtils.addEdgeToCFA, INFO)

line 9448: Dead code detected: Goto: switch_default___2 (CFACreationUtils.addEdgeToCFA, INFO)

line 9293: Dead code detected: Goto: switch_default___3 (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label case_4___0 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_4___3 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_8___3 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_8___2 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_8___1 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_8 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_8___0 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_4 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_1 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_2 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_default is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_2___2 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_2___3 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_2___0 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_2___1 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_1___1 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_1___2 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_1___3 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_1___0 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

line 10578: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 13931: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 14095: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

line 19442: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 19462: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 19465: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 19467: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 20189: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 20202: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 21382: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 21424: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 21425: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 21470: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 22075: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 22275: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 22306: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 22371: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 22387: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 22417: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 31054: Function pointer *(ocrdma_drv->add) with type struct ocrdma_dev *(*)(struct be_dev_info *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 31153: Function pointer *(ocrdma_drv->state_change_handler) with type void (*)(struct ocrdma_dev *, u32 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 31120: Function pointer *(ocrdma_drv->state_change_handler) with type void (*)(struct ocrdma_dev *, u32 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 31085: Function pointer *(ocrdma_drv->remove) with type void (*)(struct ocrdma_dev *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 8394: Function pointer *(ops->alloc) with type void *(*)(struct device *, size_t , dma_addr_t *, gfp_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 8435: Function pointer *(ops->free) with type void (*)(struct device *, size_t , void *, dma_addr_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 8247: Function pointer *(ops->map_page) with type dma_addr_t (*)(struct device *, struct page *, unsigned long, size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 8168-8169: Function pointer *(ops->map_page) with type dma_addr_t (*)(struct device *, struct page *, unsigned long, size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 8308: Function pointer *(ops->mapping_error) with type int (*)(struct device *, dma_addr_t ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 8282: Function pointer *(ops->unmap_page) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 8207: Function pointer *(ops->unmap_page) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 22014: Function pointer *arg0 with type void (*)(unsigned long) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function external_allocated_data to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_switch_to_interrupt_context to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_switch_to_process_context to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 21071: Ignoring call via function pointer ldv_pci_instance_resume_early_3_6::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 21071: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 21106: Ignoring call via function pointer ldv_pci_instance_suspend_late_3_7::arg0 for which no suitable target was found in line: tmp = (*arg0)(arg1, arg2); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 21106: Ignoring function call through function pointer *arg0: tmp = (*arg0)(arg1, arg2); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 20259: Ignoring call via function pointer ldv_interrupt_instance_thread_1_3::arg0 for which no suitable target was found in line: (*arg0)(arg1, arg2); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 20259: Ignoring function call through function pointer *arg0: (*arg0)(arg1, arg2); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function iowrite32 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 20247: Ignoring call via function pointer ldv_interrupt_instance_thread_0_3::arg0 for which no suitable target was found in line: (*arg0)(arg1, arg2); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 20247: Ignoring function call through function pointer *arg0: (*arg0)(arg1, arg2); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function ldv_assert to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_pre_probe to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_enable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_request_regions to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_set_master to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_disable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __pci_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 22014: Ignoring call via function pointer ldv_timer_instance_callback_4_2::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 22014: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function ethtool_op_get_link to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function eth_validate_addr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_warn to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock_interruptible_nested to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock_bh to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 8394: Ignoring function call through function pointer *(ops->alloc): memory = (*(ops->alloc))(dev, size, dma_handle, tmp___1, attrs); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function debug_dma_alloc_coherent to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ioread32 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _dev_info to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function msleep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __bitmap_weight to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 11556: Return type of function __builtin_unreachable is void, but result is used as type int: __builtin_unreachable(); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function __builtin_unreachable to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 10163: Return type of function __builtin_unreachable is void, but result is used as type int: __builtin_unreachable(); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function memcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strlcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memcmp to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snprintf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            14847 (16% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  13325 (90%)
  Because of loop head:            1513 (10%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         9 (0%)
  Times precision was empty:       14095 (95%)
  Times precision was {false}:     86 (1%)
  Times result was cached:         627 (4%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      39 (0%)
  Times result was 'false':        9 (0%)
Number of strengthen sat checks:   0
Number of coverage checks:         11706
  BDD entailment checks:           1140
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       95
Number of predicates discovered:          2
Number of abstraction locations:          20
Max number of predicates per location:    1
Avg number of predicates per location:    1
Total predicates per abstraction:         752
Max number of predicates per abstraction: 1
Avg number of predicates per abstraction: 6.02
Number of irrelevant predicates:          560 (74%)
Number of preds handled by boolean abs:   39 (5%)
  Total number of models for allsat:      43
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.10

Time for post operator:                  7.890s
  Time for path formula creation:        7.701s
Time for strengthen operator:            0.215s
Time for prec operator:                  1.612s
  Time for abstraction:                  0.973s (Max:     0.023s, Count: 14847)
    Boolean abstraction:                 0.047s
    Solving time:                        0.081s (Max:     0.013s)
    Model enumeration time:              0.002s
    Time for BDD construction:           0.010s (Max:     0.006s)
Time for merge operator:                 0.492s
Time for coverage check:                 0.058s
  Time for BDD entailment checks:        0.048s
Total time for SMT solver (w/o itp):     0.083s

Number of path formula cache hits:   62907 (60%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     7.043s

Total number of created targets for pointer analysis: 2180
   Number of created targets for uf: *unsigned_short_int is 181
   Number of created targets for uf: *unsigned_char is 91
   Number of created targets for uf: *(struct_list_head)* is 2
   Number of created targets for uf: *_Bool is 19
   Number of created targets for uf: *unsigned_int is 6


Number of BDD nodes:                               202
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                          76 (count: 15905, min: 0, max: 32, avg: 0.00)
Time for BDD node cleanup:                             0.008s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.593s
  Time for transition matches:                         0.240s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.000s
Automaton transfers with branching:                0
Automaton transfer successors:                        92931 (count: 92931, min: 1, max: 1, avg: 1.00) [1 x 92931]

CPA algorithm statistics
------------------------
Number of iterations:            62156
Max size of waitlist:            352
Average size of waitlist:        222
Number of computed successors:   71373
Max successors for one state:    2
Number of times merged:          5283
Number of times stopped:         6198
Number of times breaked:         9

Total time for CPA algorithm:        18.217s (Max:     3.370s)
  Time for choose from waitlist:      0.168s
  Time for precision adjustment:      3.066s
  Time for transfer relation:        11.883s
  Time for merge operator:            1.061s
  Time for stop operator:             0.505s
  Time for adding to reached set:     0.561s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   9
Avg. length of target path (in blocks):                 291 (count: 9, min: 27, max: 36, avg: 32.33)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.701s
  Counterexample analysis:                             0.301s (Max:     0.041s, Calls: 9)
    Refinement sat check:                              0.224s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.030s
  Precision update:                                    0.030s
  ARG update:                                          0.325s

Length of refined path (in blocks):                     129 (count: 9, min: 9, max: 18, avg: 14.33)
Number of affected states:                               84 (count: 9, min: 4, max: 13, avg: 9.33)
Length (states) of path with itp 'true':                 36 (count: 9, min: 4, max: 4, avg: 4.00)
Length (states) of path with itp non-trivial itp:        84 (count: 9, min: 4, max: 13, avg: 9.33)
Length (states) of path with itp 'false':                 9 (count: 9, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 9, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:              75 (count: 9, min: 3, max: 12, avg: 8.33)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                9
Number of successful refinements:     9
Number of failed refinements:         0
Max. size of reached set before ref.: 7563
Max. size of reached set after ref.:  12
Avg. size of reached set before ref.: 7095.11
Avg. size of reached set after ref.:  12.00

Total time for CEGAR algorithm:      19.073s
Time for refinements:                 0.856s
Average time for refinement:          0.095s
Max time for refinement:              0.150s

Code Coverage
-----------------------------
  Function coverage:      0.106
  Visited lines:          2026
  Total lines:            13294
  Line coverage:          0.152
  Visited conditions:     224
  Total conditions:       3590
  Condition coverage:     0.062

CPAchecker general statistics
-----------------------------
Number of program locations:     19215
Number of CFA edges:             22303
Number of relevant variables:    3846
Number of functions:             805
Number of loops:                 122
Size of reached set:             1418
  Number of reached locations:   699 (4%)
    Avg states per location:     2
    Max states per location:     34 (at node N17677)
  Number of reached functions:   85 (11%)
  Number of partitions:          1415
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N9095 (before line 20094), Function main called from node N9082, stack depth 1 [1c3eeda4], stack [main]])
  Number of target states:       0
  Size of final wait list        183

Time for analysis setup:         11.191s
  Time for loading CPAs:          1.177s
  Time for loading parser:        0.775s
  Time for CFA construction:      9.113s
    Time for parsing file(s):     1.745s
    Time for AST to CFA:          3.605s
    Time for CFA sanity check:    0.812s
    Time for post-processing:     2.639s
      Time for var class.:        1.487s
Time for Analysis:               19.073s
CPU time for analysis:           19.080s
Total time for CPAchecker:       30.268s
Total CPU time for CPAchecker:   30.230s
Time for statistics:              0.172s

Time for Garbage Collector:       1.484s (in 55 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                122MB (   116 MiB) max;     73MB (    70 MiB) avg;    135MB (   129 MiB) peak
Used non-heap memory:             40MB (    38 MiB) max;     33MB (    32 MiB) avg;     40MB (    38 MiB) peak
Allocated heap memory:           153MB (   146 MiB) max;    130MB (   124 MiB) avg
Allocated non-heap memory:        42MB (    40 MiB) max;     35MB (    33 MiB) avg
Total process virtual memory:   8083MB (  7709 MiB) max;   8067MB (  7693 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
