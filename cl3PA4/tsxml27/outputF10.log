scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-challenges/linux-3.14__complex_emg__linux-kernel-locking-mutex__drivers-media-radio-radio-si476x_true-unreach-call.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_9m6hqwnn/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

line 8015: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 10992: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 13892: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 11637: Function pointer *arg0 with type void (*)(struct device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 11648: Function pointer *arg0 with type int (*)(struct device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 11659: Function pointer *arg0 with type int (*)(struct device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 11670: Function pointer *arg0 with type int (*)(struct device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 11681: Function pointer *arg0 with type int (*)(struct device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 11692: Function pointer *arg0 with type int (*)(struct device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 11703: Function pointer *arg0 with type int (*)(struct device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 11714: Function pointer *arg0 with type int (*)(struct device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 11725: Function pointer *arg0 with type int (*)(struct device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 11736: Function pointer *arg0 with type int (*)(struct device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 11747: Function pointer *arg0 with type int (*)(struct device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 11758: Function pointer *arg0 with type int (*)(struct device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 11769: Function pointer *arg0 with type int (*)(struct device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 11780: Function pointer *arg0 with type int (*)(struct device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 11791: Function pointer *arg0 with type int (*)(struct device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 11802: Function pointer *arg0 with type int (*)(struct device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 11813: Function pointer *arg0 with type int (*)(struct device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 11824: Function pointer *arg0 with type int (*)(struct device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 11835: Function pointer *arg0 with type int (*)(struct device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 11846: Function pointer *arg0 with type int (*)(struct device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 11857: Function pointer *arg0 with type int (*)(struct device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 11868: Function pointer *arg0 with type int (*)(struct device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 11879: Function pointer *arg0 with type int (*)(struct device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 14381: Function pointer *function with type void (*)(void *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 14400: Function pointer *function with type void (*)(void *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 5064: Function pointer *(p->_qproc) with type void (*)(struct file *, wait_queue_head_t *, struct poll_table_struct *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 5944: Function pointer *(radio->ops->rsq_status) with type int (*)(struct si476x_core *, struct si476x_rsq_status_args *, struct si476x_rsq_status_report *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 5621: Function pointer *(radio->ops->rsq_status) with type int (*)(struct si476x_core *, struct si476x_rsq_status_args *, struct si476x_rsq_status_report *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6238: Function pointer *(radio->ops->phase_div_status) with type int (*)(struct si476x_core *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 5759: Function pointer *(radio->ops->tune_freq) with type int (*)(struct si476x_core *, struct si476x_tune_freq_args *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 5752: Function pointer *(radio->ops->tune_freq) with type int (*)(struct si476x_core *, struct si476x_tune_freq_args *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6899: Function pointer *(radio->ops->acf_status) with type int (*)(struct si476x_core *, struct si476x_acf_status_report *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6979: Function pointer *(radio->ops->agc_status) with type int (*)(struct si476x_core *, struct si476x_agc_status_report *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6939: Function pointer *(radio->ops->rds_blckcnt) with type int (*)(struct si476x_core *, bool , struct si476x_rds_blockcount_report *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7025: Function pointer *(radio->ops->rsq_status) with type int (*)(struct si476x_core *, struct si476x_rsq_status_args *, struct si476x_rsq_status_report *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7071: Function pointer *(radio->ops->rsq_status) with type int (*)(struct si476x_core *, struct si476x_rsq_status_args *, struct si476x_rsq_status_report *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6469: Function pointer *(radio->ops->phase_diversity) with type int (*)(struct si476x_core *, enum si476x_phase_diversity_mode ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6048: Function pointer *(radio->ops->tune_freq) with type int (*)(struct si476x_core *, struct si476x_tune_freq_args *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 6200-6201: Function pointer *(radio->ops->seek_start) with type int (*)(struct si476x_core *, bool , bool ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function external_allocated_data to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_pre_probe to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __platform_driver_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            347076 (18% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  292316 (84%)
  Because of loop head:            54494 (16%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         266 (0%)
  Times precision was empty:       204844 (59%)
  Times precision was {false}:     4918 (1%)
  Times result was cached:         130305 (38%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      7009 (2%)
  Times result was 'false':        13359 (4%)
Number of strengthen sat checks:   0
Number of coverage checks:         144048
  BDD entailment checks:           45470
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       111
Number of predicates discovered:          58
Number of abstraction locations:          41
Max number of predicates per location:    57
Avg number of predicates per location:    16
Total predicates per abstraction:         2518678
Max number of predicates per abstraction: 57
Avg number of predicates per abstraction: 211.17
Number of irrelevant predicates:          2025072 (80%)
Number of preds handled by boolean abs:   86963 (3%)
  Total number of models for allsat:      3585211
  Max number of models for allsat:        16384
  Avg number of models for allsat:        511.52

Time for post operator:                 22.034s
  Time for path formula creation:       21.044s
Time for strengthen operator:            2.111s
Time for prec operator:                805.450s
  Time for abstraction:                800.718s (Max:     5.035s, Count: 347076)
    Boolean abstraction:               710.380s
    Solving time:                       18.429s (Max:     0.018s)
    Model enumeration time:            402.159s
    Time for BDD construction:         291.206s (Max:     1.706s)
Time for merge operator:                 1.311s
Time for coverage check:                 0.366s
  Time for BDD entailment checks:        0.340s
Total time for SMT solver (w/o itp):   420.589s

Number of path formula cache hits:   1725574 (76%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    15.439s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               198262
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                      109400 (count: 357408, min: 0, max: 2894, avg: 0.31)
Time for BDD node cleanup:                             0.118s
Time for BDD garbage collection:                       4.692s (in 1255 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  2.984s
  Time for transition matches:                         1.534s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.006s
Automaton transfers with branching:                0
Automaton transfer successors:                      1980186 (count: 1980186, min: 1, max: 1, avg: 1.00) [1 x 1980186]

CPA algorithm statistics
------------------------
Number of iterations:            1462811
Max size of waitlist:            738
Average size of waitlist:        338
Number of computed successors:   1715219
Max successors for one state:    2
Number of times merged:          49289
Number of times stopped:         60882
Number of times breaked:         266

Total time for CPA algorithm:       883.585s (Max:    90.101s)
  Time for choose from waitlist:      1.013s
  Time for precision adjustment:    818.084s
  Time for transfer relation:        50.017s
  Time for merge operator:            2.605s
  Time for stop operator:             3.029s
  Time for adding to reached set:     3.853s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   266
Avg. length of target path (in blocks):                7584 (count: 266, min: 15, max: 31, avg: 28.51)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   7.982s
  Counterexample analysis:                             4.577s (Max:     0.038s, Calls: 266)
    Refinement sat check:                              3.043s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.022s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.094s
  Precision update:                                    0.117s
  ARG update:                                          3.041s

Length of refined path (in blocks):                    4036 (count: 266, min: 11, max: 16, avg: 15.17)
Number of affected states:                             2174 (count: 266, min: 4, max: 9, avg: 8.17)
Length (states) of path with itp 'true':               1596 (count: 266, min: 6, max: 6, avg: 6.00)
Length (states) of path with itp non-trivial itp:      2174 (count: 266, min: 4, max: 9, avg: 8.17)
Length (states) of path with itp 'false':               266 (count: 266, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:          14 (count: 266, min: 0, max: 1, avg: 0.05)
Equal non-trivial interpolants along paths:            1894 (count: 266, min: 3, max: 8, avg: 7.12)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                266
Number of successful refinements:     266
Number of failed refinements:         0
Max. size of reached set before ref.: 6701
Max. size of reached set after ref.:  16
Avg. size of reached set before ref.: 6176.49
Avg. size of reached set after ref.:  16.00

Total time for CEGAR algorithm:     892.790s
Time for refinements:                 9.187s
Average time for refinement:          0.034s
Max time for refinement:              0.136s

Code Coverage
-----------------------------
  Function coverage:      0.410
  Visited lines:          2586
  Total lines:            5219
  Line coverage:          0.495
  Visited conditions:     560
  Total conditions:       1244
  Condition coverage:     0.450

CPAchecker general statistics
-----------------------------
Number of program locations:     7150
Number of CFA edges:             8197
Number of relevant variables:    911
Number of functions:             307
Number of loops:                 5
Size of reached set:             2288
  Number of reached locations:   1596 (22%)
    Avg states per location:     1
    Max states per location:     47 (at node N6116)
  Number of reached functions:   126 (41%)
  Number of partitions:          2283
    Avg size of partitions:      1
    Max size of partitions:      5 (with key [N2286 (before line 8790), Function main called from node N2253, stack depth 1 [22d7fd41], stack [main]])
  Number of target states:       0
  Size of final wait list        239

Time for analysis setup:          7.473s
  Time for loading CPAs:          1.055s
  Time for loading parser:        0.757s
  Time for CFA construction:      5.481s
    Time for parsing file(s):     1.266s
    Time for AST to CFA:          2.002s
    Time for CFA sanity check:    0.566s
    Time for post-processing:     1.376s
      Time for var class.:        0.629s
Time for Analysis:              892.792s
CPU time for analysis:          892.680s
Total time for CPAchecker:      900.270s
Total CPU time for CPAchecker:  900.140s
Time for statistics:              0.139s

Time for Garbage Collector:      15.759s (in 1363 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                286MB (   273 MiB) max;    196MB (   187 MiB) avg;    290MB (   277 MiB) peak
Used non-heap memory:             40MB (    38 MiB) max;     39MB (    37 MiB) avg;     40MB (    38 MiB) peak
Allocated heap memory:           338MB (   322 MiB) max;    296MB (   282 MiB) avg
Allocated non-heap memory:        42MB (    40 MiB) max;     42MB (    40 MiB) avg
Total process virtual memory:   8229MB (  7848 MiB) max;   8179MB (  7801 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
