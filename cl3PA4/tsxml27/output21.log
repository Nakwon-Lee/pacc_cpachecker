scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-challenges/linux-3.14__complex_emg__linux-kernel-locking-mutex__drivers-media-radio-radio-si476x_true-unreach-call.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_qzdccjtm/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

line 8015: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 10992: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 13892: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 11637: Function pointer *arg0 with type void (*)(struct device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 11648: Function pointer *arg0 with type int (*)(struct device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 11659: Function pointer *arg0 with type int (*)(struct device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 11670: Function pointer *arg0 with type int (*)(struct device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 11681: Function pointer *arg0 with type int (*)(struct device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 11692: Function pointer *arg0 with type int (*)(struct device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 11703: Function pointer *arg0 with type int (*)(struct device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 11714: Function pointer *arg0 with type int (*)(struct device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 11725: Function pointer *arg0 with type int (*)(struct device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 11736: Function pointer *arg0 with type int (*)(struct device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 11747: Function pointer *arg0 with type int (*)(struct device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 11758: Function pointer *arg0 with type int (*)(struct device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 11769: Function pointer *arg0 with type int (*)(struct device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 11780: Function pointer *arg0 with type int (*)(struct device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 11791: Function pointer *arg0 with type int (*)(struct device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 11802: Function pointer *arg0 with type int (*)(struct device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 11813: Function pointer *arg0 with type int (*)(struct device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 11824: Function pointer *arg0 with type int (*)(struct device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 11835: Function pointer *arg0 with type int (*)(struct device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 11846: Function pointer *arg0 with type int (*)(struct device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 11857: Function pointer *arg0 with type int (*)(struct device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 11868: Function pointer *arg0 with type int (*)(struct device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 11879: Function pointer *arg0 with type int (*)(struct device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 14381: Function pointer *function with type void (*)(void *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 14400: Function pointer *function with type void (*)(void *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 5064: Function pointer *(p->_qproc) with type void (*)(struct file *, wait_queue_head_t *, struct poll_table_struct *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 5944: Function pointer *(radio->ops->rsq_status) with type int (*)(struct si476x_core *, struct si476x_rsq_status_args *, struct si476x_rsq_status_report *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 5621: Function pointer *(radio->ops->rsq_status) with type int (*)(struct si476x_core *, struct si476x_rsq_status_args *, struct si476x_rsq_status_report *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6238: Function pointer *(radio->ops->phase_div_status) with type int (*)(struct si476x_core *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 5759: Function pointer *(radio->ops->tune_freq) with type int (*)(struct si476x_core *, struct si476x_tune_freq_args *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 5752: Function pointer *(radio->ops->tune_freq) with type int (*)(struct si476x_core *, struct si476x_tune_freq_args *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6899: Function pointer *(radio->ops->acf_status) with type int (*)(struct si476x_core *, struct si476x_acf_status_report *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6979: Function pointer *(radio->ops->agc_status) with type int (*)(struct si476x_core *, struct si476x_agc_status_report *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6939: Function pointer *(radio->ops->rds_blckcnt) with type int (*)(struct si476x_core *, bool , struct si476x_rds_blockcount_report *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7025: Function pointer *(radio->ops->rsq_status) with type int (*)(struct si476x_core *, struct si476x_rsq_status_args *, struct si476x_rsq_status_report *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7071: Function pointer *(radio->ops->rsq_status) with type int (*)(struct si476x_core *, struct si476x_rsq_status_args *, struct si476x_rsq_status_report *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6469: Function pointer *(radio->ops->phase_diversity) with type int (*)(struct si476x_core *, enum si476x_phase_diversity_mode ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6048: Function pointer *(radio->ops->tune_freq) with type int (*)(struct si476x_core *, struct si476x_tune_freq_args *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 6200-6201: Function pointer *(radio->ops->seek_start) with type int (*)(struct si476x_core *, bool , bool ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function external_allocated_data to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_driver_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __platform_driver_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function default_llseek to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            17325 (17% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  15012 (87%)
  Because of loop head:            1603 (9%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         710 (4%)
  Times precision was empty:       5856 (34%)
  Times precision was {false}:     187 (1%)
  Times result was cached:         9890 (57%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      1392 (8%)
  Times result was 'false':        2940 (17%)
Number of strengthen sat checks:   0
Number of coverage checks:         13208
  BDD entailment checks:           2402
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       111
Number of predicates discovered:          13
Number of abstraction locations:          77
Max number of predicates per location:    12
Avg number of predicates per location:    5
Total predicates per abstraction:         68898
Max number of predicates per abstraction: 12
Avg number of predicates per abstraction: 43.63
Number of irrelevant predicates:          14166 (21%)
Number of preds handled by boolean abs:   5888 (9%)
  Total number of models for allsat:      1217
  Max number of models for allsat:        6
  Avg number of models for allsat:        0.87

Time for post operator:                  2.280s
  Time for path formula creation:        2.147s
Time for strengthen operator:            0.200s
Time for prec operator:                  9.690s
  Time for abstraction:                  9.052s (Max:     0.029s, Count: 17325)
    Boolean abstraction:                 1.615s
    Solving time:                        1.199s (Max:     0.047s)
    Model enumeration time:              0.119s
    Time for BDD construction:           0.140s (Max:     0.008s)
Time for merge operator:                 0.158s
Time for coverage check:                 0.054s
  Time for BDD entailment checks:        0.049s
Total time for SMT solver (w/o itp):     1.319s

Number of path formula cache hits:   107879 (91%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     1.710s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               1703
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        4196 (count: 18350, min: 0, max: 604, avg: 0.23)
Time for BDD node cleanup:                             0.006s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.619s
  Time for transition matches:                         0.188s
  Time for transition assertions:                      0.010s
  Time for transition actions:                         0.018s
Automaton transfers with branching:                0
Automaton transfer successors:                        99993 (count: 99993, min: 1, max: 1, avg: 1.00) [1 x 99993]

CPA algorithm statistics
------------------------
Number of iterations:            69359
Max size of waitlist:            238
Average size of waitlist:        76
Number of computed successors:   83837
Max successors for one state:    2
Number of times merged:          5403
Number of times stopped:         6228
Number of times breaked:         51

Total time for CPA algorithm:        18.918s (Max:     1.367s)
  Time for choose from waitlist:      0.182s
  Time for precision adjustment:     10.961s
  Time for transfer relation:         5.609s
  Time for merge operator:            0.541s
  Time for stop operator:             0.398s
  Time for adding to reached set:     0.363s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   51
Avg. length of target path (in blocks):                4353 (count: 51, min: 29, max: 124, avg: 85.35)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   2.872s
  Counterexample analysis:                             2.126s (Max:     0.062s, Calls: 51)
    Refinement sat check:                              1.026s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.013s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.142s
  Precision update:                                    0.074s
  ARG update:                                          0.449s

Length of refined path (in blocks):                    4030 (count: 51, min: 11, max: 114, avg: 79.02)
Number of affected states:                             3572 (count: 51, min: 4, max: 112, avg: 70.04)
Length (states) of path with itp 'true':                407 (count: 51, min: 1, max: 49, avg: 7.98)
Length (states) of path with itp non-trivial itp:      3572 (count: 51, min: 4, max: 112, avg: 70.04)
Length (states) of path with itp 'false':                11 (count: 51, min: 0, max: 1, avg: 0.22)
Different non-trivial interpolants along paths:          41 (count: 51, min: 0, max: 1, avg: 0.80)
Equal non-trivial interpolants along paths:            3480 (count: 51, min: 3, max: 110, avg: 68.24)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                51
Number of successful refinements:     51
Number of failed refinements:         0
Max. size of reached set before ref.: 3190
Max. size of reached set after ref.:  722
Avg. size of reached set before ref.: 1502.75
Avg. size of reached set after ref.:  87.22

Total time for CEGAR algorithm:      22.042s
Time for refinements:                 3.112s
Average time for refinement:          0.061s
Max time for refinement:              0.115s

Code Coverage
-----------------------------
  Function coverage:      0.150
  Visited lines:          1651
  Total lines:            5219
  Line coverage:          0.316
  Visited conditions:     144
  Total conditions:       1244
  Condition coverage:     0.116

CPAchecker general statistics
-----------------------------
Number of program locations:     7150
Number of CFA edges:             8197
Number of relevant variables:    911
Number of functions:             307
Number of loops:                 5
Size of reached set:             2477
  Number of reached locations:   442 (6%)
    Avg states per location:     5
    Max states per location:     32 (at node N6117)
  Number of reached functions:   46 (15%)
  Number of partitions:          2461
    Avg size of partitions:      1
    Max size of partitions:      7 (with key [N2286 (before line 8790), Function main called from node N2253, stack depth 1 [22d7fd41], stack [main]])
  Number of target states:       0
  Size of final wait list        152

Time for analysis setup:          8.179s
  Time for loading CPAs:          1.165s
  Time for loading parser:        0.747s
  Time for CFA construction:      6.065s
    Time for parsing file(s):     1.354s
    Time for AST to CFA:          2.175s
    Time for CFA sanity check:    0.561s
    Time for post-processing:     1.692s
      Time for var class.:        0.745s
Time for Analysis:               22.042s
CPU time for analysis:           22.030s
Total time for CPAchecker:       30.236s
Total CPU time for CPAchecker:   30.210s
Time for statistics:              0.199s

Time for Garbage Collector:       0.623s (in 55 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 75MB (    71 MiB) max;     50MB (    48 MiB) avg;     77MB (    74 MiB) peak
Used non-heap memory:             39MB (    38 MiB) max;     34MB (    32 MiB) avg;     40MB (    38 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        41MB (    39 MiB) max;     36MB (    34 MiB) avg
Total process virtual memory:   8085MB (  7710 MiB) max;   8069MB (  7695 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
