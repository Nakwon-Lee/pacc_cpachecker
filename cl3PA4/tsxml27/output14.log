scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-challenges/linux-3.14__complex_emg__linux-kernel-locking-mutex__drivers-media-radio-radio-si476x_true-unreach-call.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_uppnnkqf/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

line 8015: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 10992: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 13892: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 11637: Function pointer *arg0 with type void (*)(struct device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 11648: Function pointer *arg0 with type int (*)(struct device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 11659: Function pointer *arg0 with type int (*)(struct device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 11670: Function pointer *arg0 with type int (*)(struct device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 11681: Function pointer *arg0 with type int (*)(struct device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 11692: Function pointer *arg0 with type int (*)(struct device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 11703: Function pointer *arg0 with type int (*)(struct device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 11714: Function pointer *arg0 with type int (*)(struct device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 11725: Function pointer *arg0 with type int (*)(struct device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 11736: Function pointer *arg0 with type int (*)(struct device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 11747: Function pointer *arg0 with type int (*)(struct device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 11758: Function pointer *arg0 with type int (*)(struct device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 11769: Function pointer *arg0 with type int (*)(struct device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 11780: Function pointer *arg0 with type int (*)(struct device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 11791: Function pointer *arg0 with type int (*)(struct device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 11802: Function pointer *arg0 with type int (*)(struct device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 11813: Function pointer *arg0 with type int (*)(struct device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 11824: Function pointer *arg0 with type int (*)(struct device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 11835: Function pointer *arg0 with type int (*)(struct device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 11846: Function pointer *arg0 with type int (*)(struct device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 11857: Function pointer *arg0 with type int (*)(struct device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 11868: Function pointer *arg0 with type int (*)(struct device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 11879: Function pointer *arg0 with type int (*)(struct device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 14381: Function pointer *function with type void (*)(void *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 14400: Function pointer *function with type void (*)(void *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 5064: Function pointer *(p->_qproc) with type void (*)(struct file *, wait_queue_head_t *, struct poll_table_struct *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 5944: Function pointer *(radio->ops->rsq_status) with type int (*)(struct si476x_core *, struct si476x_rsq_status_args *, struct si476x_rsq_status_report *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 5621: Function pointer *(radio->ops->rsq_status) with type int (*)(struct si476x_core *, struct si476x_rsq_status_args *, struct si476x_rsq_status_report *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6238: Function pointer *(radio->ops->phase_div_status) with type int (*)(struct si476x_core *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 5759: Function pointer *(radio->ops->tune_freq) with type int (*)(struct si476x_core *, struct si476x_tune_freq_args *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 5752: Function pointer *(radio->ops->tune_freq) with type int (*)(struct si476x_core *, struct si476x_tune_freq_args *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6899: Function pointer *(radio->ops->acf_status) with type int (*)(struct si476x_core *, struct si476x_acf_status_report *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6979: Function pointer *(radio->ops->agc_status) with type int (*)(struct si476x_core *, struct si476x_agc_status_report *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6939: Function pointer *(radio->ops->rds_blckcnt) with type int (*)(struct si476x_core *, bool , struct si476x_rds_blockcount_report *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7025: Function pointer *(radio->ops->rsq_status) with type int (*)(struct si476x_core *, struct si476x_rsq_status_args *, struct si476x_rsq_status_report *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7071: Function pointer *(radio->ops->rsq_status) with type int (*)(struct si476x_core *, struct si476x_rsq_status_args *, struct si476x_rsq_status_report *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6469: Function pointer *(radio->ops->phase_diversity) with type int (*)(struct si476x_core *, enum si476x_phase_diversity_mode ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6048: Function pointer *(radio->ops->tune_freq) with type int (*)(struct si476x_core *, struct si476x_tune_freq_args *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 6200-6201: Function pointer *(radio->ops->seek_start) with type int (*)(struct si476x_core *, bool , bool ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function external_allocated_data to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_pre_probe to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function v4l2_ctrl_handler_free to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function video_unregister_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function v4l2_device_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function debugfs_remove_recursive to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function devm_kmalloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function v4l2_device_set_name to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function v4l2_device_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function v4l2_ctrl_handler_init_class to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function si476x_core_has_am to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function v4l2_ctrl_new_std_menu to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function v4l2_ctrl_new_custom to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function v4l2_ctrl_new_std to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function si476x_core_has_diversity to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __video_register_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function debugfs_create_dir to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function debugfs_create_file to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            25802 (21% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  22656 (88%)
  Because of loop head:            3073 (12%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         73 (0%)
  Times precision was empty:       11227 (44%)
  Times precision was {false}:     143 (1%)
  Times result was cached:         13813 (54%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      619 (2%)
  Times result was 'false':        512 (2%)
Number of strengthen sat checks:   0
Number of coverage checks:         12688
  BDD entailment checks:           5378
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       111
Number of predicates discovered:          7
Number of abstraction locations:          118
Max number of predicates per location:    5
Avg number of predicates per location:    3
Total predicates per abstraction:         41357
Max number of predicates per abstraction: 5
Avg number of predicates per abstraction: 54.27
Number of irrelevant predicates:          6527 (16%)
Number of preds handled by boolean abs:   1781 (4%)
  Total number of models for allsat:      803
  Max number of models for allsat:        4
  Avg number of models for allsat:        1.30

Time for post operator:                  3.408s
  Time for path formula creation:        3.179s
Time for strengthen operator:            0.199s
Time for prec operator:                  7.224s
  Time for abstraction:                  6.374s (Max:     0.020s, Count: 25802)
    Boolean abstraction:                 0.936s
    Solving time:                        0.705s (Max:     0.013s)
    Model enumeration time:              0.091s
    Time for BDD construction:           0.103s (Max:     0.008s)
Time for merge operator:                 0.133s
Time for coverage check:                 0.051s
  Time for BDD entailment checks:        0.047s
Total time for SMT solver (w/o itp):     0.796s

Number of path formula cache hits:   130613 (88%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     2.492s

Total number of created targets for pointer analysis: 5
   Number of created targets for uf: *(struct_device_private)* is 3
   Number of created targets for uf: *(void)* is 4


Number of BDD nodes:                               306
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        1355 (count: 21118, min: 0, max: 138, avg: 0.06)
Time for BDD node cleanup:                             0.011s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.673s
  Time for transition matches:                         0.267s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.000s
Automaton transfers with branching:                0
Automaton transfer successors:                       122025 (count: 122025, min: 1, max: 1, avg: 1.00) [1 x 122025]

CPA algorithm statistics
------------------------
Number of iterations:            94648
Max size of waitlist:            70
Average size of waitlist:        38
Number of computed successors:   106580
Max successors for one state:    2
Number of times merged:          3655
Number of times stopped:         7293
Number of times breaked:         73

Total time for CPA algorithm:        18.691s (Max:     1.223s)
  Time for choose from waitlist:      0.271s
  Time for precision adjustment:      8.778s
  Time for transfer relation:         7.300s
  Time for merge operator:            0.341s
  Time for stop operator:             0.521s
  Time for adding to reached set:     0.478s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   73
Avg. length of target path (in blocks):                4992 (count: 73, min: 19, max: 130, avg: 68.38)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   3.708s
  Counterexample analysis:                             2.832s (Max:     0.091s, Calls: 73)
    Refinement sat check:                              1.664s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.010s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.193s
  Precision update:                                    0.092s
  ARG update:                                          0.457s

Length of refined path (in blocks):                    3980 (count: 72, min: 11, max: 113, avg: 55.28)
Number of affected states:                             3415 (count: 72, min: 2, max: 106, avg: 47.43)
Length (states) of path with itp 'true':                493 (count: 72, min: 6, max: 67, avg: 6.85)
Length (states) of path with itp non-trivial itp:      3415 (count: 72, min: 2, max: 106, avg: 47.43)
Length (states) of path with itp 'false':                72 (count: 72, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:          69 (count: 72, min: 0, max: 1, avg: 0.96)
Equal non-trivial interpolants along paths:            3274 (count: 72, min: 1, max: 104, avg: 45.47)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                73
Number of successful refinements:     72
Number of failed refinements:         0
Max. size of reached set before ref.: 1813
Max. size of reached set after ref.:  1143
Avg. size of reached set before ref.: 1384.32
Avg. size of reached set after ref.:  31.65

Total time for CEGAR algorithm:      22.757s
Time for refinements:                 4.061s
Average time for refinement:          0.055s
Max time for refinement:              0.108s

Code Coverage
-----------------------------
  Function coverage:      0.228
  Visited lines:          1858
  Total lines:            5219
  Line coverage:          0.356
  Visited conditions:     158
  Total conditions:       1244
  Condition coverage:     0.127

CPAchecker general statistics
-----------------------------
Number of program locations:     7150
Number of CFA edges:             8197
Number of relevant variables:    911
Number of functions:             307
Number of loops:                 5
Size of reached set:             1467
  Number of reached locations:   628 (9%)
    Avg states per location:     2
    Max states per location:     13 (at node N6265)
  Number of reached functions:   70 (23%)
  Number of partitions:          1459
    Avg size of partitions:      1
    Max size of partitions:      4 (with key [N2286 (before line 8790), Function main called from node N2253, stack depth 1 [19fd43da], stack [main]])
  Number of target states:       1
  Size of final wait list        65

Time for analysis setup:          7.456s
  Time for loading CPAs:          1.033s
  Time for loading parser:        0.780s
  Time for CFA construction:      5.528s
    Time for parsing file(s):     1.183s
    Time for AST to CFA:          2.112s
    Time for CFA sanity check:    0.467s
    Time for post-processing:     1.479s
      Time for var class.:        0.624s
Time for Analysis:               22.757s
CPU time for analysis:           22.750s
Total time for CPAchecker:       30.220s
Total CPU time for CPAchecker:   30.190s
Time for statistics:              0.171s

Time for Garbage Collector:       0.643s (in 57 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 75MB (    71 MiB) max;     51MB (    49 MiB) avg;     78MB (    75 MiB) peak
Used non-heap memory:             40MB (    38 MiB) max;     34MB (    33 MiB) avg;     40MB (    38 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        42MB (    40 MiB) max;     36MB (    34 MiB) avg
Total process virtual memory:   8083MB (  7709 MiB) max;   8070MB (  7696 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
