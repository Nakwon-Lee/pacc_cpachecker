scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-challenges/linux-3.14__complex_emg__linux-alloc-spinlock__drivers-net-wireless-rndis_wlan_true-unreach-call.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_9puir86e/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 6750: Dead code detected: return (1); (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

line 16510: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 16651: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 16953: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 16452: Function pointer *arg0 with type void (*)(unsigned long) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 16564: Function pointer *arg0 with type int (*)(struct usb_interface *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 16575: Function pointer *arg0 with type int (*)(struct usb_interface *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function external_allocated_data to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_deregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_assert to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_pre_usb_register_driver to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usbnet_open to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function eth_mac_addr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usbnet_start_xmit to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usbnet_stop to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usbnet_tx_timeout to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function eth_validate_addr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 6975: Return type of function __builtin_unreachable is void, but result is used as type int: __builtin_unreachable(); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function __builtin_unreachable to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_netdev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock_nested to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rndis_command to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netdev_warn to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_after_alloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ieee80211_frequency_to_channel to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netdev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function get_random_bytes to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 15017: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___9 = ldv_xmalloc(3200UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 15019: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___10 = ldv_xmalloc(144UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 15021: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___11 = ldv_xmalloc(12UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 15025: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___13 = ldv_xmalloc(944UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function cancel_delayed_work_sync to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function cancel_work_sync to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function flush_workqueue to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function cfg80211_scan_done to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function wiphy_new to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 15375: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___3 = ldv_xmalloc(192UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function netdev_info to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usbnet_pause_rx to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rndis_rx_fixup to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rndis_status to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rndis_tx_fixup to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function destroy_workqueue to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rndis_unbind to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function wiphy_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function wiphy_free to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 15605: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___3 = ldv_xmalloc(192UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            1032313 (18% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  924834 (90%)
  Because of loop head:            106544 (10%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         935 (0%)
  Times precision was empty:       323070 (31%)
  Times precision was {false}:     10300 (1%)
  Times result was cached:         627914 (61%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      71029 (7%)
  Times result was 'false':        259551 (25%)
Number of strengthen sat checks:   0
Number of coverage checks:         995913
  BDD entailment checks:           629053
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       88
Number of predicates discovered:          50
Number of abstraction locations:          333
Max number of predicates per location:    49
Avg number of predicates per location:    14
Total predicates per abstraction:         12537980
Max number of predicates per abstraction: 49
Avg number of predicates per abstraction: 154.16
Number of irrelevant predicates:          4410442 (35%)
Number of preds handled by boolean abs:   1034298 (8%)
  Total number of models for allsat:      230775
  Max number of models for allsat:        4235
  Avg number of models for allsat:        3.25

Time for post operator:                 88.156s
  Time for path formula creation:       84.920s
Time for strengthen operator:            5.416s
Time for prec operator:                559.387s
  Time for abstraction:                546.793s (Max:     2.279s, Count: 1032313)
    Boolean abstraction:               110.866s
    Solving time:                       67.023s (Max:     0.053s)
    Model enumeration time:             22.269s
    Time for BDD construction:          11.037s (Max:     0.371s)
Time for merge operator:                 4.247s
Time for coverage check:                 0.926s
  Time for BDD entailment checks:        0.764s
Total time for SMT solver (w/o itp):    89.292s

Number of path formula cache hits:   3611034 (58%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    69.677s

Total number of created targets for pointer analysis: 6874
   Number of created targets for uf: *signed_int is 55
   Number of created targets for uf: *unsigned_char is 21
   Number of created targets for uf: *unsigned_int is 139
   Number of created targets for uf: *char is 65


Number of BDD nodes:                               169851
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                      322476 (count: 1549088, min: 0, max: 6136, avg: 0.21)
Time for BDD node cleanup:                             0.335s
Time for BDD garbage collection:                       0.065s (in 8 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  7.681s
  Time for transition matches:                         3.900s
  Time for transition assertions:                      0.002s
  Time for transition actions:                         0.005s
Automaton transfers with branching:                0
Automaton transfer successors:                      5758734 (count: 5758734, min: 1, max: 1, avg: 1.00) [1 x 5758734]

CPA algorithm statistics
------------------------
Number of iterations:            4428465
Max size of waitlist:            525
Average size of waitlist:        159
Number of computed successors:   5130615
Max successors for one state:    2
Number of times merged:          183430
Number of times stopped:         276865
Number of times breaked:         935

Total time for CPA algorithm:       796.804s (Max:     5.148s)
  Time for choose from waitlist:      2.378s
  Time for precision adjustment:    592.956s
  Time for transfer relation:       160.209s
  Time for merge operator:            8.325s
  Time for stop operator:            11.401s
  Time for adding to reached set:     9.878s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   935
Avg. length of target path (in blocks):              212687 (count: 935, min: 30, max: 597, avg: 227.47)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  88.737s
  Counterexample analysis:                            76.962s (Max:     0.351s, Calls: 935)
    Refinement sat check:                             28.689s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.127s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.664s
  Precision update:                                    2.008s
  ARG update:                                          7.724s

Length of refined path (in blocks):                  136517 (count: 935, min: 9, max: 255, avg: 146.01)
Number of affected states:                            74528 (count: 935, min: 1, max: 194, avg: 79.71)
Length (states) of path with itp 'true':              61054 (count: 935, min: 4, max: 214, avg: 65.30)
Length (states) of path with itp non-trivial itp:     74528 (count: 935, min: 1, max: 194, avg: 79.71)
Length (states) of path with itp 'false':               935 (count: 935, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:         621 (count: 935, min: 0, max: 1, avg: 0.66)
Equal non-trivial interpolants along paths:           72972 (count: 935, min: 0, max: 193, avg: 78.04)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                935
Number of successful refinements:     935
Number of failed refinements:         0
Max. size of reached set before ref.: 12732
Max. size of reached set after ref.:  3584
Avg. size of reached set before ref.: 5693.32
Avg. size of reached set after ref.:  783.30

Total time for CEGAR algorithm:     891.752s
Time for refinements:                94.442s
Average time for refinement:          0.101s
Max time for refinement:              0.388s

Code Coverage
-----------------------------
  Function coverage:      0.137
  Visited lines:          1967
  Total lines:            6592
  Line coverage:          0.298
  Visited conditions:     240
  Total conditions:       1448
  Condition coverage:     0.166

CPAchecker general statistics
-----------------------------
Number of program locations:     8955
Number of CFA edges:             10168
Number of relevant variables:    1259
Number of functions:             365
Number of loops:                 19
Size of reached set:             3334
  Number of reached locations:   793 (9%)
    Avg states per location:     4
    Max states per location:     28 (at node N7230)
  Number of reached functions:   50 (14%)
  Number of partitions:          3304
    Avg size of partitions:      1
    Max size of partitions:      10 (with key [N4968 (before line 13936), Function main called from node N4948, stack depth 1 [3a88f6fb], stack [main]])
  Number of target states:       0
  Size of final wait list        104

Time for analysis setup:          8.493s
  Time for loading CPAs:          1.292s
  Time for loading parser:        0.789s
  Time for CFA construction:      6.250s
    Time for parsing file(s):     1.357s
    Time for AST to CFA:          2.485s
    Time for CFA sanity check:    0.547s
    Time for post-processing:     1.621s
      Time for var class.:        0.795s
Time for Analysis:              891.752s
CPU time for analysis:          891.650s
Total time for CPAchecker:      900.250s
Total CPU time for CPAchecker:  900.130s
Time for statistics:              0.195s

Time for Garbage Collector:      52.993s (in 1039 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                996MB (   949 MiB) max;    495MB (   472 MiB) avg;   1008MB (   961 MiB) peak
Used non-heap memory:             48MB (    46 MiB) max;     41MB (    39 MiB) avg;     48MB (    46 MiB) peak
Allocated heap memory:          1141MB (  1088 MiB) max;    736MB (   702 MiB) avg
Allocated non-heap memory:        50MB (    47 MiB) max;     49MB (    47 MiB) avg
Total process virtual memory:  10044MB (  9578 MiB) max;   8741MB (  8336 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
