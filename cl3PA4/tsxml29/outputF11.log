scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-challenges/linux-3.14__complex_emg__linux-alloc-spinlock__drivers-net-wireless-rndis_wlan_true-unreach-call.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run__edoqtkv/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 6750: Dead code detected: return (1); (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

line 16510: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 16651: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 16953: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 16452: Function pointer *arg0 with type void (*)(unsigned long) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 16564: Function pointer *arg0 with type int (*)(struct usb_interface *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 16575: Function pointer *arg0 with type int (*)(struct usb_interface *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function external_allocated_data to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_deregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_assert to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_pre_usb_register_driver to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usbnet_open to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function eth_mac_addr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usbnet_start_xmit to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usbnet_stop to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usbnet_tx_timeout to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function eth_validate_addr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 6975: Return type of function __builtin_unreachable is void, but result is used as type int: __builtin_unreachable(); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function __builtin_unreachable to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_netdev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock_nested to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rndis_command to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netdev_warn to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_after_alloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ieee80211_frequency_to_channel to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netdev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function get_random_bytes to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 15017: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___9 = ldv_xmalloc(3200UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 15019: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___10 = ldv_xmalloc(144UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 15021: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___11 = ldv_xmalloc(12UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 15025: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___13 = ldv_xmalloc(944UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function cancel_delayed_work_sync to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function cancel_work_sync to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function flush_workqueue to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function cfg80211_scan_done to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function wiphy_new to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 15375: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___3 = ldv_xmalloc(192UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function netdev_info to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usbnet_pause_rx to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rndis_rx_fixup to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rndis_status to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rndis_tx_fixup to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function destroy_workqueue to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rndis_unbind to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function wiphy_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function wiphy_free to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 15605: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___3 = ldv_xmalloc(192UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            1044658 (18% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  935974 (90%)
  Because of loop head:            107740 (10%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         944 (0%)
  Times precision was empty:       326368 (31%)
  Times precision was {false}:     10523 (1%)
  Times result was cached:         634526 (61%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      73241 (7%)
  Times result was 'false':        263265 (25%)
Number of strengthen sat checks:   0
Number of coverage checks:         1008346
  BDD entailment checks:           637246
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       88
Number of predicates discovered:          50
Number of abstraction locations:          333
Max number of predicates per location:    49
Avg number of predicates per location:    14
Total predicates per abstraction:         12785552
Max number of predicates per abstraction: 49
Avg number of predicates per abstraction: 152.64
Number of irrelevant predicates:          4507565 (35%)
Number of preds handled by boolean abs:   1067823 (8%)
  Total number of models for allsat:      251431
  Max number of models for allsat:        4235
  Avg number of models for allsat:        3.43

Time for post operator:                 87.449s
  Time for path formula creation:       84.823s
Time for strengthen operator:            4.827s
Time for prec operator:                561.754s
  Time for abstraction:                549.265s (Max:     2.615s, Count: 1044658)
    Boolean abstraction:               116.501s
    Solving time:                       69.168s (Max:     0.131s)
    Model enumeration time:             24.315s
    Time for BDD construction:          12.973s (Max:     0.371s)
Time for merge operator:                 5.319s
Time for coverage check:                 0.964s
  Time for BDD entailment checks:        0.821s
Total time for SMT solver (w/o itp):    93.484s

Number of path formula cache hits:   3659742 (58%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    67.448s

Total number of created targets for pointer analysis: 6971
   Number of created targets for uf: *signed_int is 57
   Number of created targets for uf: *unsigned_char is 21
   Number of created targets for uf: *unsigned_int is 141
   Number of created targets for uf: *char is 65


Number of BDD nodes:                               148568
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                      332026 (count: 1577727, min: 0, max: 7020, avg: 0.21)
Time for BDD node cleanup:                             0.290s
Time for BDD garbage collection:                       0.120s (in 10 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  7.662s
  Time for transition matches:                         3.895s
  Time for transition assertions:                      0.003s
  Time for transition actions:                         0.003s
Automaton transfers with branching:                0
Automaton transfer successors:                      5828655 (count: 5828655, min: 1, max: 1, avg: 1.00) [1 x 5828655]

CPA algorithm statistics
------------------------
Number of iterations:            4482866
Max size of waitlist:            525
Average size of waitlist:        159
Number of computed successors:   5193746
Max successors for one state:    2
Number of times merged:          185550
Number of times stopped:         280074
Number of times breaked:         944

Total time for CPA algorithm:       798.273s (Max:     3.716s)
  Time for choose from waitlist:      2.310s
  Time for precision adjustment:    595.000s
  Time for transfer relation:       158.799s
  Time for merge operator:            9.640s
  Time for stop operator:            11.151s
  Time for adding to reached set:     8.939s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   944
Avg. length of target path (in blocks):              214707 (count: 944, min: 30, max: 597, avg: 227.44)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  87.621s
  Counterexample analysis:                            76.394s (Max:     0.350s, Calls: 944)
    Refinement sat check:                             28.715s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.107s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.698s
  Precision update:                                    1.780s
  ARG update:                                          7.390s

Length of refined path (in blocks):                  137705 (count: 944, min: 9, max: 255, avg: 145.87)
Number of affected states:                            75161 (count: 944, min: 1, max: 194, avg: 79.62)
Length (states) of path with itp 'true':              61600 (count: 944, min: 4, max: 214, avg: 65.25)
Length (states) of path with itp non-trivial itp:     75161 (count: 944, min: 1, max: 194, avg: 79.62)
Length (states) of path with itp 'false':               944 (count: 944, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:         629 (count: 944, min: 0, max: 1, avg: 0.67)
Equal non-trivial interpolants along paths:           73588 (count: 944, min: 0, max: 193, avg: 77.95)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                944
Number of successful refinements:     944
Number of failed refinements:         0
Max. size of reached set before ref.: 12732
Max. size of reached set after ref.:  3584
Avg. size of reached set before ref.: 5704.74
Avg. size of reached set after ref.:  782.61

Total time for CEGAR algorithm:     891.850s
Time for refinements:                93.084s
Average time for refinement:          0.098s
Max time for refinement:              0.385s

Code Coverage
-----------------------------
  Function coverage:      0.159
  Visited lines:          2019
  Total lines:            6592
  Line coverage:          0.306
  Visited conditions:     258
  Total conditions:       1448
  Condition coverage:     0.178

CPAchecker general statistics
-----------------------------
Number of program locations:     8955
Number of CFA edges:             10168
Number of relevant variables:    1259
Number of functions:             365
Number of loops:                 19
Size of reached set:             3913
  Number of reached locations:   854 (10%)
    Avg states per location:     4
    Max states per location:     32 (at node N7230)
  Number of reached functions:   58 (16%)
  Number of partitions:          3876
    Avg size of partitions:      1
    Max size of partitions:      12 (with key [N4968 (before line 13936), Function main called from node N4948, stack depth 1 [3a88f6fb], stack [main]])
  Number of target states:       0
  Size of final wait list        141

Time for analysis setup:          8.490s
  Time for loading CPAs:          1.347s
  Time for loading parser:        0.681s
  Time for CFA construction:      6.308s
    Time for parsing file(s):     1.446s
    Time for AST to CFA:          2.444s
    Time for CFA sanity check:    0.542s
    Time for post-processing:     1.639s
      Time for var class.:        0.814s
Time for Analysis:              891.850s
CPU time for analysis:          891.640s
Total time for CPAchecker:      900.346s
Total CPU time for CPAchecker:  900.100s
Time for statistics:              0.205s

Time for Garbage Collector:      54.734s (in 1051 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:               1037MB (   989 MiB) max;    505MB (   482 MiB) avg;   1051MB (  1003 MiB) peak
Used non-heap memory:             42MB (    40 MiB) max;     41MB (    39 MiB) avg;     42MB (    40 MiB) peak
Allocated heap memory:          1268MB (  1209 MiB) max;    765MB (   730 MiB) avg
Allocated non-heap memory:        44MB (    42 MiB) max;     44MB (    42 MiB) avg
Total process virtual memory:  10173MB (  9702 MiB) max;   8768MB (  8362 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
