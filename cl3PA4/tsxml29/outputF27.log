scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-challenges/linux-3.14__complex_emg__linux-alloc-spinlock__drivers-net-wireless-rndis_wlan_true-unreach-call.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_ujejvyq8/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 6750: Dead code detected: return (1); (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

line 16510: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 16651: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 16953: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 16452: Function pointer *arg0 with type void (*)(unsigned long) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 16564: Function pointer *arg0 with type int (*)(struct usb_interface *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 16575: Function pointer *arg0 with type int (*)(struct usb_interface *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function external_allocated_data to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_switch_to_interrupt_context to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_switch_to_process_context to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_assert to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_pre_usb_register_driver to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function wiphy_new to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_deregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 16452: Ignoring call via function pointer ldv_timer_instance_callback_5_2::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 16452: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function usbnet_open to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function eth_mac_addr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usbnet_start_xmit to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usbnet_stop to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usbnet_tx_timeout to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function eth_validate_addr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usbnet_disconnect to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usbnet_resume to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 16564: Ignoring call via function pointer ldv_usb_instance_post_7_9::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 16564: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 16575: Ignoring call via function pointer ldv_usb_instance_pre_7_10::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 16575: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function strcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netdev_info to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usbnet_pause_rx to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function cfg80211_michael_mic_failure to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rndis_rx_fixup to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rndis_status to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rndis_tx_fixup to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function cancel_delayed_work_sync to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function cancel_work_sync to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function flush_workqueue to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function destroy_workqueue to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rndis_unbind to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function wiphy_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function wiphy_free to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock_nested to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rndis_command to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_netdev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function cfg80211_pmksa_candidate_notify to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 6975: Return type of function __builtin_unreachable is void, but result is used as type int: __builtin_unreachable(); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function __builtin_unreachable to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ieee80211_frequency_to_channel to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netdev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __mutex_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __init_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function lockdep_init_map to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function init_timer_key to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function generic_rndis_bind to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netdev_warn to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function cfg80211_scan_done to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 16817: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___3 = ldv_xmalloc(4UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function usbnet_suspend to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 16793: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___0 = ldv_xmalloc(1992UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function ldv_pre_probe to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usbnet_probe to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            1339898 (18% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  1184182 (88%)
  Because of loop head:            155116 (12%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         600 (0%)
  Times precision was empty:       556772 (42%)
  Times precision was {false}:     17123 (1%)
  Times result was cached:         707488 (53%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      58515 (4%)
  Times result was 'false':        182114 (14%)
Number of strengthen sat checks:   0
Number of coverage checks:         1235810
  BDD entailment checks:           830192
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       88
Number of predicates discovered:          60
Number of abstraction locations:          262
Max number of predicates per location:    58
Avg number of predicates per location:    8
Total predicates per abstraction:         9373335
Max number of predicates per abstraction: 58
Avg number of predicates per abstraction: 123.92
Number of irrelevant predicates:          4257438 (45%)
Number of preds handled by boolean abs:   806123 (9%)
  Total number of models for allsat:      365698
  Max number of models for allsat:        6272
  Avg number of models for allsat:        6.25

Time for post operator:                116.133s
  Time for path formula creation:      112.334s
Time for strengthen operator:            6.549s
Time for prec operator:                534.444s
  Time for abstraction:                519.044s (Max:     3.545s, Count: 1339898)
    Boolean abstraction:               139.325s
    Solving time:                       62.504s (Max:     0.123s)
    Model enumeration time:             42.785s
    Time for BDD construction:          26.219s (Max:     0.650s)
Time for merge operator:                 4.649s
Time for coverage check:                 1.967s
  Time for BDD entailment checks:        1.770s
Total time for SMT solver (w/o itp):   105.289s

Number of path formula cache hits:   4749111 (58%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    92.938s

Total number of created targets for pointer analysis: 20159
   Number of created targets for uf: *signed_int is 2
   Number of created targets for uf: *unsigned_char is 21
   Number of created targets for uf: *(struct_list_head)* is 10
   Number of created targets for uf: *unsigned_int is 4
   Number of created targets for uf: *char is 541


Number of BDD nodes:                               200309
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                      380833 (count: 1970098, min: 0, max: 10092, avg: 0.19)
Time for BDD node cleanup:                             0.504s
Time for BDD garbage collection:                       0.568s (in 104 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                 11.157s
  Time for transition matches:                         6.213s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.013s
Automaton transfers with branching:                0
Automaton transfer successors:                      7407357 (count: 7407357, min: 1, max: 1, avg: 1.00) [1 x 7407357]

CPA algorithm statistics
------------------------
Number of iterations:            5495049
Max size of waitlist:            1291
Average size of waitlist:        329
Number of computed successors:   6291357
Max successors for one state:    2
Number of times merged:          202809
Number of times stopped:         310194
Number of times breaked:         600

Total time for CPA algorithm:       863.111s (Max:    16.851s)
  Time for choose from waitlist:      3.257s
  Time for precision adjustment:    580.085s
  Time for transfer relation:       223.474s
  Time for merge operator:           10.308s
  Time for stop operator:            15.018s
  Time for adding to reached set:    13.504s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   600
Avg. length of target path (in blocks):               38536 (count: 600, min: 24, max: 210, avg: 64.23)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  24.824s
  Counterexample analysis:                            13.568s (Max:     0.100s, Calls: 600)
    Refinement sat check:                              8.680s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.046s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.184s
  Precision update:                                    0.472s
  ARG update:                                          9.980s

Length of refined path (in blocks):                   16182 (count: 600, min: 9, max: 93, avg: 26.97)
Number of affected states:                            12228 (count: 600, min: 4, max: 88, avg: 20.38)
Length (states) of path with itp 'true':               3354 (count: 600, min: 0, max: 53, avg: 5.59)
Length (states) of path with itp non-trivial itp:     12228 (count: 600, min: 4, max: 88, avg: 20.38)
Length (states) of path with itp 'false':               600 (count: 600, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:         218 (count: 600, min: 0, max: 2, avg: 0.36)
Equal non-trivial interpolants along paths:           11410 (count: 600, min: 3, max: 87, avg: 19.02)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                600
Number of successful refinements:     600
Number of failed refinements:         0
Max. size of reached set before ref.: 56905
Max. size of reached set after ref.:  14452
Avg. size of reached set before ref.: 9920.17
Avg. size of reached set after ref.:  285.63

Total time for CEGAR algorithm:     891.595s
Time for refinements:                28.322s
Average time for refinement:          0.047s
Max time for refinement:              0.230s

Code Coverage
-----------------------------
  Function coverage:      0.337
  Visited lines:          2467
  Total lines:            6592
  Line coverage:          0.374
  Visited conditions:     342
  Total conditions:       1448
  Condition coverage:     0.236

CPAchecker general statistics
-----------------------------
Number of program locations:     8955
Number of CFA edges:             10168
Number of relevant variables:    1259
Number of functions:             365
Number of loops:                 19
Size of reached set:             18323
  Number of reached locations:   1301 (15%)
    Avg states per location:     14
    Max states per location:     383 (at node N7229)
  Number of reached functions:   123 (34%)
  Number of partitions:          18170
    Avg size of partitions:      1
    Max size of partitions:      28 (with key [N4968 (before line 13936), Function main called from node N4948, stack depth 1 [3a88f6fb], stack [main]])
  Number of target states:       0
  Size of final wait list        715

Time for analysis setup:          8.655s
  Time for loading CPAs:          1.356s
  Time for loading parser:        0.722s
  Time for CFA construction:      6.419s
    Time for parsing file(s):     1.296s
    Time for AST to CFA:          2.457s
    Time for CFA sanity check:    0.674s
    Time for post-processing:     1.795s
      Time for var class.:        0.741s
Time for Analysis:              891.595s
CPU time for analysis:          891.520s
Total time for CPAchecker:      900.255s
Total CPU time for CPAchecker:  900.150s
Time for statistics:              0.420s

Time for Garbage Collector:      56.601s (in 805 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:               1539MB (  1468 MiB) max;    737MB (   703 MiB) avg;   1571MB (  1498 MiB) peak
Used non-heap memory:             42MB (    40 MiB) max;     41MB (    39 MiB) avg;     42MB (    40 MiB) peak
Allocated heap memory:          1752MB (  1671 MiB) max;   1091MB (  1041 MiB) avg
Allocated non-heap memory:        44MB (    42 MiB) max;     44MB (    41 MiB) avg
Total process virtual memory:   9770MB (  9317 MiB) max;   8569MB (  8172 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
