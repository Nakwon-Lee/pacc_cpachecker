scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-challenges/linux-3.14__complex_emg__linux-kernel-locking-spinlock__drivers-net-ethernet-dec-tulip-dmfe_true-unreach-call.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_8krsn21r/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 5273: Dead code detected: return (1); (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

line 9174: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 9194: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 9197: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 9199: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 9247: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 9715: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 9728: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 10327: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 10369: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 10370: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 10415: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 10753: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 10803: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 10819: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 10874: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 10914: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 10980: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 5650: Function pointer *(ops->alloc) with type void *(*)(struct device *, size_t , dma_addr_t *, gfp_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 5691: Function pointer *(ops->free) with type void (*)(struct device *, size_t , void *, dma_addr_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 5524-5525: Function pointer *(ops->map_page) with type dma_addr_t (*)(struct device *, struct page *, unsigned long, size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 5563: Function pointer *(ops->unmap_page) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function external_allocated_data to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_switch_to_interrupt_context to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_switch_to_process_context to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 10692: Ignoring call via function pointer ldv_timer_instance_callback_3_2::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 10692: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 9761: Ignoring call via function pointer ldv_interrupt_instance_thread_0_3::arg0 for which no suitable target was found in line: (*arg0)(arg1, arg2); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 9761: Ignoring function call through function pointer *arg0: (*arg0)(arg1, arg2); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function pci_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __pci_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function eth_validate_addr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function eth_mac_addr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function eth_change_mtu to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ethtool_op_get_link to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function disable_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strlcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function consume_skb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 10042: Ignoring call via function pointer ldv_pci_instance_resume_early_2_6::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 10042: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 10053: Ignoring call via function pointer ldv_pci_instance_shutdown_2_3::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 10053: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 10077: Ignoring call via function pointer ldv_pci_instance_suspend_late_2_7::arg0 for which no suitable target was found in line: tmp = (*arg0)(arg1, arg2); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 10077: Ignoring function call through function pointer *arg0: tmp = (*arg0)(arg1, arg2); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function pci_set_power_state to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_restore_state to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function unregister_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iowrite32 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netif_device_detach to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_save_state to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_pre_probe to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iowrite16 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_iounmap to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 5330: Return type of function __builtin_unreachable is void, but result is used as type int: __builtin_unreachable(); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function __builtin_unreachable to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function debug_dma_free_coherent to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 5691: Ignoring function call through function pointer *(ops->free): (*(ops->free))(dev, size, vaddr, bus, attrs); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function pci_release_regions to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            1182258 (24% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  930792 (79%)
  Because of loop head:            190469 (16%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         60997 (5%)
  Times precision was empty:       306510 (26%)
  Times precision was {false}:     3675 (0%)
  Times result was cached:         840124 (71%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      31949 (3%)
  Times result was 'false':        177410 (15%)
Number of strengthen sat checks:   0
Number of coverage checks:         1989184
  BDD entailment checks:           1712692
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       55
Number of predicates discovered:          44
Number of abstraction locations:          156
Max number of predicates per location:    43
Avg number of predicates per location:    15
Total predicates per abstraction:         17495545
Max number of predicates per abstraction: 43
Avg number of predicates per abstraction: 491.12
Number of irrelevant predicates:          5042895 (29%)
Number of preds handled by boolean abs:   638221 (4%)
  Total number of models for allsat:      330130
  Max number of models for allsat:        264
  Avg number of models for allsat:        10.33

Time for post operator:                 18.679s
  Time for path formula creation:       16.371s
Time for strengthen operator:            4.845s
Time for prec operator:                702.145s
  Time for abstraction:                690.853s (Max:     0.453s, Count: 1182258)
    Boolean abstraction:               117.170s
    Solving time:                       55.887s (Max:     0.016s)
    Model enumeration time:             37.018s
    Time for BDD construction:          16.097s (Max:     0.358s)
Time for merge operator:                 0.698s
Time for coverage check:                 1.878s
  Time for BDD entailment checks:        1.529s
Total time for SMT solver (w/o itp):    92.905s

Number of path formula cache hits:   5822744 (97%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     6.949s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               149805
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                      149991 (count: 2281448, min: 0, max: 1793, avg: 0.07)
Time for BDD node cleanup:                             0.401s
Time for BDD garbage collection:                       0.090s (in 1 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  7.980s
  Time for transition matches:                         4.010s
  Time for transition assertions:                      0.012s
  Time for transition actions:                         0.043s
Automaton transfers with branching:                0
Automaton transfer successors:                      4870423 (count: 4870423, min: 1, max: 1, avg: 1.00) [1 x 4870423]

CPA algorithm statistics
------------------------
Number of iterations:            3955411
Max size of waitlist:            148
Average size of waitlist:        54
Number of computed successors:   4463821
Max successors for one state:    2
Number of times merged:          138246
Number of times stopped:         303202
Number of times breaked:         1106

Total time for CPA algorithm:       846.185s (Max:    17.932s)
  Time for choose from waitlist:      1.811s
  Time for precision adjustment:    728.862s
  Time for transfer relation:        83.902s
  Time for merge operator:            4.279s
  Time for stop operator:            10.173s
  Time for adding to reached set:     6.520s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   1106
Avg. length of target path (in blocks):               68343 (count: 1106, min: 13, max: 163, avg: 61.79)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  27.581s
  Counterexample analysis:                            18.722s (Max:     0.088s, Calls: 1106)
    Refinement sat check:                             10.262s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.047s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.358s
  Precision update:                                    1.214s
  ARG update:                                          6.714s

Length of refined path (in blocks):                   56098 (count: 1106, min: 9, max: 128, avg: 50.72)
Number of affected states:                            30749 (count: 1106, min: 4, max: 99, avg: 27.80)
Length (states) of path with itp 'true':              24243 (count: 1106, min: 0, max: 61, avg: 21.92)
Length (states) of path with itp non-trivial itp:     30749 (count: 1106, min: 4, max: 99, avg: 27.80)
Length (states) of path with itp 'false':               924 (count: 1106, min: 0, max: 1, avg: 0.84)
Different non-trivial interpolants along paths:         243 (count: 1106, min: 0, max: 1, avg: 0.22)
Equal non-trivial interpolants along paths:           29400 (count: 1106, min: 3, max: 97, avg: 26.58)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                1106
Number of successful refinements:     1106
Number of failed refinements:         0
Max. size of reached set before ref.: 25886
Max. size of reached set after ref.:  23449
Avg. size of reached set before ref.: 12400.42
Avg. size of reached set after ref.:  8807.20

Total time for CEGAR algorithm:     892.902s
Time for refinements:                39.320s
Average time for refinement:          0.035s
Max time for refinement:              0.136s

Code Coverage
-----------------------------
  Function coverage:      0.115
  Visited lines:          1324
  Total lines:            4174
  Line coverage:          0.317
  Visited conditions:     108
  Total conditions:       920
  Condition coverage:     0.117

CPAchecker general statistics
-----------------------------
Number of program locations:     5992
Number of CFA edges:             6770
Number of relevant variables:    795
Number of functions:             312
Number of loops:                 31
Size of reached set:             9104
  Number of reached locations:   437 (7%)
    Avg states per location:     20
    Max states per location:     221 (at node N5409)
  Number of reached functions:   36 (12%)
  Number of partitions:          8930
    Avg size of partitions:      1
    Max size of partitions:      23 (with key [N3088 (before line 9630), Function main called from node N3076, stack depth 1 [12ad1b2a], stack [main]])
  Number of target states:       0
  Size of final wait list        64

Time for analysis setup:          7.155s
  Time for loading CPAs:          1.104s
  Time for loading parser:        0.732s
  Time for CFA construction:      5.199s
    Time for parsing file(s):     1.285s
    Time for AST to CFA:          2.041s
    Time for CFA sanity check:    0.414s
    Time for post-processing:     1.175s
      Time for var class.:        0.536s
Time for Analysis:              892.903s
CPU time for analysis:          892.780s
Total time for CPAchecker:      900.061s
Total CPU time for CPAchecker:  899.910s
Time for statistics:              0.251s

Time for Garbage Collector:      49.613s (in 4327 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                233MB (   222 MiB) max;    118MB (   113 MiB) avg;    239MB (   227 MiB) peak
Used non-heap memory:             41MB (    39 MiB) max;     40MB (    38 MiB) avg;     41MB (    39 MiB) peak
Allocated heap memory:           241MB (   229 MiB) max;    174MB (   166 MiB) avg
Allocated non-heap memory:        43MB (    41 MiB) max;     43MB (    41 MiB) avg
Total process virtual memory:   8694MB (  8291 MiB) max;   8360MB (  7973 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
