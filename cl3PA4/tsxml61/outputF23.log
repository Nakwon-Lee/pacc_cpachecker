scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-challenges/linux-3.14__complex_emg__linux-kernel-locking-spinlock__drivers-net-ethernet-dec-tulip-dmfe_true-unreach-call.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_tc71mih6/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 5273: Dead code detected: return (1); (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

line 9174: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 9194: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 9197: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 9199: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 9247: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 9715: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 9728: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 10327: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 10369: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 10370: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 10415: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 10753: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 10803: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 10819: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 10874: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 10914: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 10980: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 5650: Function pointer *(ops->alloc) with type void *(*)(struct device *, size_t , dma_addr_t *, gfp_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 5691: Function pointer *(ops->free) with type void (*)(struct device *, size_t , void *, dma_addr_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 5524-5525: Function pointer *(ops->map_page) with type dma_addr_t (*)(struct device *, struct page *, unsigned long, size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 5563: Function pointer *(ops->unmap_page) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function external_allocated_data to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_switch_to_interrupt_context to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_switch_to_process_context to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 10692: Ignoring call via function pointer ldv_timer_instance_callback_3_2::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 10692: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 10077: Ignoring call via function pointer ldv_pci_instance_suspend_late_2_7::arg0 for which no suitable target was found in line: tmp = (*arg0)(arg1, arg2); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 10077: Ignoring function call through function pointer *arg0: tmp = (*arg0)(arg1, arg2); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 10042: Ignoring call via function pointer ldv_pci_instance_resume_early_2_6::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 10042: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 10053: Ignoring call via function pointer ldv_pci_instance_shutdown_2_3::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 10053: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function eth_validate_addr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function eth_mac_addr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function eth_change_mtu to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ethtool_op_get_link to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_pre_probe to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 9761: Ignoring call via function pointer ldv_interrupt_instance_thread_0_3::arg0 for which no suitable target was found in line: (*arg0)(arg1, arg2); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 9761: Ignoring function call through function pointer *arg0: (*arg0)(arg1, arg2); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function consume_skb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function disable_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strlcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __pci_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_set_power_state to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_restore_state to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netif_device_detach to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dma_set_mask to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iowrite32 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function unregister_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_enable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_request_regions to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_disable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ioread16 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __ldv_spin_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ioread32 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_trans_start to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_warn to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ioread8 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iowrite16 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function add_timer to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_save_state to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_release_regions to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netif_carrier_off to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netif_carrier_on to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 5650: Ignoring function call through function pointer *(ops->alloc): memory = (*(ops->alloc))(dev, size, dma_handle, tmp___1, attrs); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function debug_dma_alloc_coherent to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __netdev_alloc_skb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function crc32_le to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 5517: Return type of function __builtin_unreachable is void, but result is used as type int: __builtin_unreachable(); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function __builtin_unreachable to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function debug_dma_map_page to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_iomap to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netif_device_attach to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            2778446 (17% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  2269850 (82%)
  Because of loop head:            505960 (18%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         2636 (0%)
  Times precision was empty:       1948806 (70%)
  Times precision was {false}:     7435 (0%)
  Times result was cached:         792766 (29%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      29439 (1%)
  Times result was 'false':        146546 (5%)
Number of strengthen sat checks:   0
Number of coverage checks:         2780610
  BDD entailment checks:           1681754
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       55
Number of predicates discovered:          42
Number of abstraction locations:          140
Max number of predicates per location:    38
Avg number of predicates per location:    10
Total predicates per abstraction:         9548975
Max number of predicates per abstraction: 37
Avg number of predicates per abstraction: 258.96
Number of irrelevant predicates:          4923769 (52%)
Number of preds handled by boolean abs:   331025 (3%)
  Total number of models for allsat:      120444
  Max number of models for allsat:        110
  Avg number of models for allsat:        4.09

Time for post operator:                 58.578s
  Time for path formula creation:       51.488s
Time for strengthen operator:           14.628s
Time for prec operator:                425.429s
  Time for abstraction:                399.019s (Max:     0.944s, Count: 2778446)
    Boolean abstraction:                64.940s
    Solving time:                       42.318s (Max:     0.015s)
    Model enumeration time:             14.467s
    Time for BDD construction:           5.283s (Max:     0.555s)
Time for merge operator:                 3.378s
Time for coverage check:                 2.289s
  Time for BDD entailment checks:        1.917s
Total time for SMT solver (w/o itp):    56.785s

Number of path formula cache hits:   18566051 (98%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    19.127s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               98687
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                      177405 (count: 3915761, min: 0, max: 3027, avg: 0.05)
Time for BDD node cleanup:                             0.661s
Time for BDD garbage collection:                       0.067s (in 2 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                 23.849s
  Time for transition matches:                        12.147s
  Time for transition assertions:                      0.005s
  Time for transition actions:                         0.020s
Automaton transfers with branching:                0
Automaton transfer successors:                     15906874 (count: 15906874, min: 1, max: 1, avg: 1.00) [1 x 15906874]

CPA algorithm statistics
------------------------
Number of iterations:            10250955
Max size of waitlist:            2008
Average size of waitlist:        659
Number of computed successors:   11495287
Max successors for one state:    2
Number of times merged:          549428
Number of times stopped:         891736
Number of times breaked:         521

Total time for CPA algorithm:       828.007s (Max:     8.023s)
  Time for choose from waitlist:      4.435s
  Time for precision adjustment:    511.157s
  Time for transfer relation:       241.183s
  Time for merge operator:           13.301s
  Time for stop operator:            17.228s
  Time for adding to reached set:    14.767s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   521
Avg. length of target path (in blocks):               19499 (count: 521, min: 13, max: 57, avg: 37.43)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  37.387s
  Counterexample analysis:                             6.526s (Max:     0.038s, Calls: 521)
    Refinement sat check:                              3.838s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.021s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.167s
  Precision update:                                    0.391s
  ARG update:                                         29.963s

Length of refined path (in blocks):                   15329 (count: 521, min: 9, max: 57, avg: 29.42)
Number of affected states:                             8711 (count: 521, min: 4, max: 56, avg: 16.72)
Length (states) of path with itp 'true':               6097 (count: 521, min: 0, max: 39, avg: 11.70)
Length (states) of path with itp non-trivial itp:      8711 (count: 521, min: 4, max: 56, avg: 16.72)
Length (states) of path with itp 'false':               385 (count: 521, min: 0, max: 1, avg: 0.74)
Different non-trivial interpolants along paths:         148 (count: 521, min: 0, max: 1, avg: 0.28)
Equal non-trivial interpolants along paths:            8042 (count: 521, min: 3, max: 54, avg: 15.44)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                521
Number of successful refinements:     521
Number of failed refinements:         0
Max. size of reached set before ref.: 128857
Max. size of reached set after ref.:  88419
Avg. size of reached set before ref.: 37546.57
Avg. size of reached set after ref.:  17606.12

Total time for CEGAR algorithm:     892.638s
Time for refinements:                55.035s
Average time for refinement:          0.105s
Max time for refinement:              1.409s

Code Coverage
-----------------------------
  Function coverage:      0.429
  Visited lines:          2650
  Total lines:            4174
  Line coverage:          0.635
  Visited conditions:     480
  Total conditions:       920
  Condition coverage:     0.522

CPAchecker general statistics
-----------------------------
Number of program locations:     5992
Number of CFA edges:             6770
Number of relevant variables:    795
Number of functions:             312
Number of loops:                 31
Size of reached set:             68032
  Number of reached locations:   1762 (29%)
    Avg states per location:     38
    Max states per location:     2951 (at node N2224)
  Number of reached functions:   134 (43%)
  Number of partitions:          67713
    Avg size of partitions:      1
    Max size of partitions:      43 (with key [N3088 (before line 9630), Function main called from node N3076, stack depth 1 [12ad1b2a], stack [main]])
  Number of target states:       0
  Size of final wait list        1505

Time for analysis setup:          7.622s
  Time for loading CPAs:          1.251s
  Time for loading parser:        0.790s
  Time for CFA construction:      5.460s
    Time for parsing file(s):     1.201s
    Time for AST to CFA:          2.145s
    Time for CFA sanity check:    0.460s
    Time for post-processing:     1.414s
      Time for var class.:        0.593s
Time for Analysis:              892.638s
CPU time for analysis:          892.540s
Total time for CPAchecker:      900.265s
Total CPU time for CPAchecker:  900.150s
Time for statistics:              1.286s

Time for Garbage Collector:     112.979s (in 2027 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                617MB (   588 MiB) max;    269MB (   257 MiB) avg;    633MB (   604 MiB) peak
Used non-heap memory:             41MB (    39 MiB) max;     40MB (    38 MiB) avg;     42MB (    40 MiB) peak
Allocated heap memory:           629MB (   600 MiB) max;    400MB (   381 MiB) avg
Allocated non-heap memory:        43MB (    41 MiB) max;     43MB (    41 MiB) avg
Total process virtual memory:   8626MB (  8227 MiB) max;   8296MB (  7912 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
