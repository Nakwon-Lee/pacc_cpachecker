scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-challenges/linux-3.14__complex_emg__linux-kernel-locking-spinlock__drivers-net-ethernet-dec-tulip-dmfe_true-unreach-call.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_ba_t4xv7/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 5273: Dead code detected: return (1); (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

line 9174: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 9194: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 9197: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 9199: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 9247: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 9715: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 9728: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 10327: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 10369: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 10370: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 10415: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 10753: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 10803: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 10819: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 10874: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 10914: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 10980: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 5650: Function pointer *(ops->alloc) with type void *(*)(struct device *, size_t , dma_addr_t *, gfp_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 5691: Function pointer *(ops->free) with type void (*)(struct device *, size_t , void *, dma_addr_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 5524-5525: Function pointer *(ops->map_page) with type dma_addr_t (*)(struct device *, struct page *, unsigned long, size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 5563: Function pointer *(ops->unmap_page) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function external_allocated_data to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_switch_to_interrupt_context to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_switch_to_process_context to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function eth_validate_addr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function eth_mac_addr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function eth_change_mtu to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ethtool_op_get_link to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 10692: Ignoring call via function pointer ldv_timer_instance_callback_3_2::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 10692: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function ldv_pre_probe to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 10042: Ignoring call via function pointer ldv_pci_instance_resume_early_2_6::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 10042: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 10053: Ignoring call via function pointer ldv_pci_instance_shutdown_2_3::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 10053: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 9761: Ignoring call via function pointer ldv_interrupt_instance_thread_0_3::arg0 for which no suitable target was found in line: (*arg0)(arg1, arg2); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 9761: Ignoring function call through function pointer *arg0: (*arg0)(arg1, arg2); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 10077: Ignoring call via function pointer ldv_pci_instance_suspend_late_2_7::arg0 for which no suitable target was found in line: tmp = (*arg0)(arg1, arg2); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 10077: Ignoring function call through function pointer *arg0: tmp = (*arg0)(arg1, arg2); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            29325 (20% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  23503 (80%)
  Because of loop head:            5783 (20%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         39 (0%)
  Times precision was empty:       19964 (68%)
  Times precision was {false}:     480 (2%)
  Times result was cached:         8329 (28%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      552 (2%)
  Times result was 'false':        950 (3%)
Number of strengthen sat checks:   0
Number of coverage checks:         23928
  BDD entailment checks:           13440
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       55
Number of predicates discovered:          10
Number of abstraction locations:          25
Max number of predicates per location:    10
Avg number of predicates per location:    4
Total predicates per abstraction:         30218
Max number of predicates per abstraction: 10
Avg number of predicates per abstraction: 29.28
Number of irrelevant predicates:          20708 (69%)
Number of preds handled by boolean abs:   2213 (7%)
  Total number of models for allsat:      1364
  Max number of models for allsat:        12
  Avg number of models for allsat:        2.47

Time for post operator:                  5.162s
  Time for path formula creation:        4.897s
Time for strengthen operator:            0.378s
Time for prec operator:                  5.990s
  Time for abstraction:                  5.144s (Max:     0.050s, Count: 29325)
    Boolean abstraction:                 0.848s
    Solving time:                        0.658s (Max:     0.013s)
    Model enumeration time:              0.147s
    Time for BDD construction:           0.094s (Max:     0.009s)
Time for merge operator:                 0.255s
Time for coverage check:                 0.046s
  Time for BDD entailment checks:        0.037s
Total time for SMT solver (w/o itp):     0.805s

Number of path formula cache hits:   124666 (74%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     4.248s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               1074
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        1616 (count: 39393, min: 0, max: 176, avg: 0.04)
Time for BDD node cleanup:                             0.008s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.631s
  Time for transition matches:                         0.277s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.009s
Automaton transfers with branching:                0
Automaton transfer successors:                       144910 (count: 144910, min: 1, max: 1, avg: 1.00) [1 x 144910]

CPA algorithm statistics
------------------------
Number of iterations:            119028
Max size of waitlist:            277
Average size of waitlist:        102
Number of computed successors:   134428
Max successors for one state:    2
Number of times merged:          5244
Number of times stopped:         11248
Number of times breaked:         39

Total time for CPA algorithm:        20.895s (Max:     1.629s)
  Time for choose from waitlist:      0.277s
  Time for precision adjustment:      7.883s
  Time for transfer relation:         9.925s
  Time for merge operator:            0.640s
  Time for stop operator:             0.506s
  Time for adding to reached set:     0.546s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   39
Avg. length of target path (in blocks):                 939 (count: 39, min: 13, max: 41, avg: 24.08)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   1.236s
  Counterexample analysis:                             0.526s (Max:     0.028s, Calls: 39)
    Refinement sat check:                              0.323s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.086s
  Precision update:                                    0.021s
  ARG update:                                          0.549s

Length of refined path (in blocks):                     570 (count: 39, min: 9, max: 30, avg: 14.62)
Number of affected states:                              375 (count: 39, min: 4, max: 25, avg: 9.62)
Length (states) of path with itp 'true':                156 (count: 39, min: 4, max: 4, avg: 4.00)
Length (states) of path with itp non-trivial itp:       375 (count: 39, min: 4, max: 25, avg: 9.62)
Length (states) of path with itp 'false':                39 (count: 39, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           1 (count: 39, min: 0, max: 1, avg: 0.03)
Equal non-trivial interpolants along paths:             335 (count: 39, min: 3, max: 24, avg: 8.59)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                39
Number of successful refinements:     39
Number of failed refinements:         0
Max. size of reached set before ref.: 7118
Max. size of reached set after ref.:  12
Avg. size of reached set before ref.: 3122.08
Avg. size of reached set after ref.:  12.00

Total time for CEGAR algorithm:      22.364s
Time for refinements:                 1.467s
Average time for refinement:          0.037s
Max time for refinement:              0.127s

Code Coverage
-----------------------------
  Function coverage:      0.093
  Visited lines:          1247
  Total lines:            4174
  Line coverage:          0.299
  Visited conditions:     104
  Total conditions:       920
  Condition coverage:     0.113

CPAchecker general statistics
-----------------------------
Number of program locations:     5992
Number of CFA edges:             6770
Number of relevant variables:    795
Number of functions:             312
Number of loops:                 31
Size of reached set:             937
  Number of reached locations:   331 (6%)
    Avg states per location:     2
    Max states per location:     19 (at node N4144)
  Number of reached functions:   29 (9%)
  Number of partitions:          929
    Avg size of partitions:      1
    Max size of partitions:      3 (with key [N3088 (before line 9630), Function main called from node N3076, stack depth 1 [12ad1b2a], stack [main]])
  Number of target states:       0
  Size of final wait list        82

Time for analysis setup:          7.384s
  Time for loading CPAs:          1.126s
  Time for loading parser:        0.692s
  Time for CFA construction:      5.437s
    Time for parsing file(s):     1.180s
    Time for AST to CFA:          2.127s
    Time for CFA sanity check:    0.488s
    Time for post-processing:     1.454s
      Time for var class.:        0.615s
Time for Analysis:               22.364s
CPU time for analysis:           22.360s
Total time for CPAchecker:       29.752s
Total CPU time for CPAchecker:   29.740s
Time for statistics:              0.129s

Time for Garbage Collector:       0.822s (in 57 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 85MB (    81 MiB) max;     52MB (    49 MiB) avg;     86MB (    82 MiB) peak
Used non-heap memory:             40MB (    38 MiB) max;     34MB (    33 MiB) avg;     41MB (    39 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        42MB (    40 MiB) max;     36MB (    34 MiB) avg
Total process virtual memory:   8085MB (  7711 MiB) max;   8070MB (  7697 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
