scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-challenges/linux-3.14__complex_emg__linux-kernel-locking-spinlock__drivers-net-ethernet-dec-tulip-dmfe_true-unreach-call.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_722apj8b/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 5273: Dead code detected: return (1); (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

line 9174: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 9194: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 9197: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 9199: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 9247: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 9715: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 9728: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 10327: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 10369: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 10370: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 10415: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 10753: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 10803: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 10819: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 10874: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 10914: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 10980: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 5650: Function pointer *(ops->alloc) with type void *(*)(struct device *, size_t , dma_addr_t *, gfp_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 5691: Function pointer *(ops->free) with type void (*)(struct device *, size_t , void *, dma_addr_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 5524-5525: Function pointer *(ops->map_page) with type dma_addr_t (*)(struct device *, struct page *, unsigned long, size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 5563: Function pointer *(ops->unmap_page) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function external_allocated_data to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_switch_to_interrupt_context to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_switch_to_process_context to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 10077: Ignoring call via function pointer ldv_pci_instance_suspend_late_2_7::arg0 for which no suitable target was found in line: tmp = (*arg0)(arg1, arg2); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 10077: Ignoring function call through function pointer *arg0: tmp = (*arg0)(arg1, arg2); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function ldv_pre_probe to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 10042: Ignoring call via function pointer ldv_pci_instance_resume_early_2_6::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 10042: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 10053: Ignoring call via function pointer ldv_pci_instance_shutdown_2_3::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 10053: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 10692: Ignoring call via function pointer ldv_timer_instance_callback_3_2::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 10692: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 9761: Ignoring call via function pointer ldv_interrupt_instance_thread_0_3::arg0 for which no suitable target was found in line: (*arg0)(arg1, arg2); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 9761: Ignoring function call through function pointer *arg0: (*arg0)(arg1, arg2); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function __pci_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function eth_validate_addr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function eth_mac_addr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function eth_change_mtu to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ethtool_op_get_link to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function consume_skb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function disable_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strlcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dma_set_mask to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_enable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_request_regions to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_disable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 5650: Ignoring function call through function pointer *(ops->alloc): memory = (*(ops->alloc))(dev, size, dma_handle, tmp___1, attrs); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function debug_dma_alloc_coherent to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __ldv_spin_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ioread32 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_trans_start to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iowrite32 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_warn to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ioread8 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ioread16 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iowrite16 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function add_timer to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netif_device_detach to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_save_state to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_set_power_state to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_release_regions to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_restore_state to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __netdev_alloc_skb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 5517: Return type of function __builtin_unreachable is void, but result is used as type int: __builtin_unreachable(); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function __builtin_unreachable to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function debug_dma_map_page to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function crc32_le to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netif_device_attach to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function unregister_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            1958206 (18% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  1636739 (84%)
  Because of loop head:            314699 (16%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         6768 (0%)
  Times precision was empty:       828287 (42%)
  Times precision was {false}:     2998 (0%)
  Times result was cached:         1101802 (56%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      25119 (1%)
  Times result was 'false':        119266 (6%)
Number of strengthen sat checks:   0
Number of coverage checks:         1581241
  BDD entailment checks:           828423
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       55
Number of predicates discovered:          41
Number of abstraction locations:          185
Max number of predicates per location:    24
Avg number of predicates per location:    8
Total predicates per abstraction:         10810339
Max number of predicates per abstraction: 24
Avg number of predicates per abstraction: 384.48
Number of irrelevant predicates:          5983030 (55%)
Number of preds handled by boolean abs:   216728 (2%)
  Total number of models for allsat:      129988
  Max number of models for allsat:        240
  Avg number of models for allsat:        5.17

Time for post operator:                 47.696s
  Time for path formula creation:       42.887s
Time for strengthen operator:            8.123s
Time for prec operator:                423.227s
  Time for abstraction:                403.717s (Max:     0.982s, Count: 1958206)
    Boolean abstraction:                50.844s
    Solving time:                       30.997s (Max:     0.016s)
    Model enumeration time:             12.460s
    Time for BDD construction:           4.813s (Max:     0.968s)
Time for merge operator:                 1.954s
Time for coverage check:                 1.211s
  Time for BDD entailment checks:        0.940s
Total time for SMT solver (w/o itp):    43.457s

Number of path formula cache hits:   12413879 (96%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    18.650s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               168170
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       95099 (count: 1874473, min: 0, max: 1056, avg: 0.05)
Time for BDD node cleanup:                             0.271s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                 13.268s
  Time for transition matches:                         7.230s
  Time for transition assertions:                      0.004s
  Time for transition actions:                         0.025s
Automaton transfers with branching:                0
Automaton transfer successors:                     10828632 (count: 10828632, min: 1, max: 1, avg: 1.00) [1 x 10828632]

CPA algorithm statistics
------------------------
Number of iterations:            7111375
Max size of waitlist:            1230
Average size of waitlist:        448
Number of computed successors:   8035295
Max successors for one state:    2
Number of times merged:          376409
Number of times stopped:         558721
Number of times breaked:         4490

Total time for CPA algorithm:       702.499s (Max:     6.134s)
  Time for choose from waitlist:      3.961s
  Time for precision adjustment:    475.793s
  Time for transfer relation:       170.717s
  Time for merge operator:            8.652s
  Time for stop operator:            11.212s
  Time for adding to reached set:    14.105s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   4490
Avg. length of target path (in blocks):              319562 (count: 4490, min: 13, max: 215, avg: 71.17)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                 102.469s
  Counterexample analysis:                            82.425s (Max:     0.074s, Calls: 4490)
    Refinement sat check:                             40.379s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.226s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.815s
  Precision update:                                    3.316s
  ARG update:                                         13.520s

Length of refined path (in blocks):                  297505 (count: 4489, min: 9, max: 201, avg: 66.27)
Number of affected states:                            93147 (count: 4489, min: 1, max: 196, avg: 20.75)
Length (states) of path with itp 'true':             199869 (count: 4489, min: 0, max: 95, avg: 44.52)
Length (states) of path with itp non-trivial itp:     93147 (count: 4489, min: 1, max: 196, avg: 20.75)
Length (states) of path with itp 'false':              2016 (count: 4489, min: 0, max: 1, avg: 0.45)
Different non-trivial interpolants along paths:        2527 (count: 4489, min: 0, max: 2, avg: 0.56)
Equal non-trivial interpolants along paths:           86131 (count: 4489, min: 0, max: 195, avg: 19.19)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                4490
Number of successful refinements:     4489
Number of failed refinements:         0
Max. size of reached set before ref.: 37664
Max. size of reached set after ref.:  30058
Avg. size of reached set before ref.: 13097.78
Avg. size of reached set after ref.:  11461.74

Total time for CEGAR algorithm:     893.316s
Time for refinements:               154.069s
Average time for refinement:          0.034s
Max time for refinement:              0.911s

Code Coverage
-----------------------------
  Function coverage:      0.266
  Visited lines:          1785
  Total lines:            4174
  Line coverage:          0.428
  Visited conditions:     288
  Total conditions:       920
  Condition coverage:     0.313

CPAchecker general statistics
-----------------------------
Number of program locations:     5992
Number of CFA edges:             6770
Number of relevant variables:    795
Number of functions:             312
Number of loops:                 31
Size of reached set:             12703
  Number of reached locations:   973 (16%)
    Avg states per location:     13
    Max states per location:     242 (at node N4143)
  Number of reached functions:   83 (27%)
  Number of partitions:          12611
    Avg size of partitions:      1
    Max size of partitions:      14 (with key [N3088 (before line 9630), Function main called from node N3076, stack depth 1 [12ad1b2a], stack [main]])
  Number of target states:       1
  Size of final wait list        529

Time for analysis setup:          6.909s
  Time for loading CPAs:          1.091s
  Time for loading parser:        0.740s
  Time for CFA construction:      4.918s
    Time for parsing file(s):     1.194s
    Time for AST to CFA:          1.959s
    Time for CFA sanity check:    0.347s
    Time for post-processing:     1.140s
      Time for var class.:        0.544s
Time for Analysis:              893.316s
CPU time for analysis:          893.230s
Total time for CPAchecker:      900.238s
Total CPU time for CPAchecker:  900.130s
Time for statistics:              0.350s

Time for Garbage Collector:      65.540s (in 2208 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                495MB (   472 MiB) max;    223MB (   212 MiB) avg;    505MB (   481 MiB) peak
Used non-heap memory:             43MB (    41 MiB) max;     41MB (    39 MiB) avg;     43MB (    41 MiB) peak
Allocated heap memory:           509MB (   485 MiB) max;    326MB (   311 MiB) avg
Allocated non-heap memory:        44MB (    42 MiB) max;     44MB (    42 MiB) avg
Total process virtual memory:   8556MB (  8160 MiB) max;   8305MB (  7920 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
