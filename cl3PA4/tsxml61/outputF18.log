scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-challenges/linux-3.14__complex_emg__linux-kernel-locking-spinlock__drivers-net-ethernet-dec-tulip-dmfe_true-unreach-call.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_d84xv2ib/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 5273: Dead code detected: return (1); (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

line 9174: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 9194: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 9197: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 9199: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 9247: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 9715: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 9728: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 10327: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 10369: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 10370: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 10415: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 10753: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 10803: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 10819: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 10874: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 10914: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 10980: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 5650: Function pointer *(ops->alloc) with type void *(*)(struct device *, size_t , dma_addr_t *, gfp_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 5691: Function pointer *(ops->free) with type void (*)(struct device *, size_t , void *, dma_addr_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 5524-5525: Function pointer *(ops->map_page) with type dma_addr_t (*)(struct device *, struct page *, unsigned long, size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 5563: Function pointer *(ops->unmap_page) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function external_allocated_data to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __pci_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_switch_to_interrupt_context to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strlcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ethtool_op_get_link to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function eth_change_mtu to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function disable_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function eth_mac_addr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function consume_skb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function eth_validate_addr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function unregister_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iowrite32 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iowrite16 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_iounmap to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 5330: Return type of function __builtin_unreachable is void, but result is used as type int: __builtin_unreachable(); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function __builtin_unreachable to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function debug_dma_free_coherent to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 5691: Ignoring function call through function pointer *(ops->free): (*(ops->free))(dev, size, vaddr, bus, attrs); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function pci_release_regions to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 10053: Ignoring call via function pointer ldv_pci_instance_shutdown_2_3::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 10053: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function pci_set_power_state to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_restore_state to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ioread16 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function crc32_le to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netif_device_attach to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __netdev_alloc_skb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 5517: Return type of function __builtin_unreachable is void, but result is used as type int: __builtin_unreachable(); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function debug_dma_map_page to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ioread32 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 10042: Ignoring call via function pointer ldv_pci_instance_resume_early_2_6::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 10042: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            908496 (19% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  721365 (79%)
  Because of loop head:            150070 (17%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         37061 (4%)
  Times precision was empty:       70517 (8%)
  Times precision was {false}:     847 (0%)
  Times result was cached:         805417 (89%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      31715 (3%)
  Times result was 'false':        121638 (13%)
Number of strengthen sat checks:   0
Number of coverage checks:         424983
  BDD entailment checks:           195553
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       55
Number of predicates discovered:          58
Number of abstraction locations:          306
Max number of predicates per location:    33
Avg number of predicates per location:    18
Total predicates per abstraction:         17311714
Max number of predicates per abstraction: 33
Avg number of predicates per abstraction: 531.65
Number of irrelevant predicates:          1840709 (11%)
Number of preds handled by boolean abs:   584598 (3%)
  Total number of models for allsat:      68488
  Max number of models for allsat:        64
  Avg number of models for allsat:        2.16

Time for post operator:                 31.014s
  Time for path formula creation:       29.319s
Time for strengthen operator:            3.930s
Time for prec operator:                694.738s
  Time for abstraction:                685.348s (Max:     0.750s, Count: 908496)
    Boolean abstraction:                60.578s
    Solving time:                       41.561s (Max:     0.027s)
    Model enumeration time:              6.879s
    Time for BDD construction:           2.879s (Max:     0.030s)
Time for merge operator:                 1.033s
Time for coverage check:                 0.344s
  Time for BDD entailment checks:        0.279s
Total time for SMT solver (w/o itp):    48.440s

Number of path formula cache hits:   5055209 (91%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    18.415s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               116650
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                      133013 (count: 503511, min: 0, max: 1745, avg: 0.26)
Time for BDD node cleanup:                             0.129s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  7.514s
  Time for transition matches:                         4.073s
  Time for transition assertions:                      0.010s
  Time for transition actions:                         0.022s
Automaton transfers with branching:                0
Automaton transfer successors:                      4761027 (count: 4761027, min: 1, max: 1, avg: 1.00) [1 x 4761027]

CPA algorithm statistics
------------------------
Number of iterations:            3115593
Max size of waitlist:            121
Average size of waitlist:        59
Number of computed successors:   3504774
Max successors for one state:    2
Number of times merged:          114715
Number of times stopped:         203710
Number of times breaked:         1156

Total time for CPA algorithm:       821.297s (Max:    10.896s)
  Time for choose from waitlist:      1.478s
  Time for precision adjustment:    716.395s
  Time for transfer relation:        81.916s
  Time for merge operator:            3.146s
  Time for stop operator:             4.811s
  Time for adding to reached set:     5.491s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   1156
Avg. length of target path (in blocks):              187601 (count: 1156, min: 27, max: 255, avg: 162.28)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  67.458s
  Counterexample analysis:                            58.340s (Max:     0.175s, Calls: 1156)
    Refinement sat check:                             22.517s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.090s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.887s
  Precision update:                                    2.639s
  ARG update:                                          4.500s

Length of refined path (in blocks):                  169171 (count: 1156, min: 9, max: 255, avg: 146.34)
Number of affected states:                           125003 (count: 1156, min: 1, max: 254, avg: 108.13)
Length (states) of path with itp 'true':              43012 (count: 1156, min: 0, max: 119, avg: 37.21)
Length (states) of path with itp non-trivial itp:    125003 (count: 1156, min: 1, max: 254, avg: 108.13)
Length (states) of path with itp 'false':               700 (count: 1156, min: 0, max: 1, avg: 0.61)
Different non-trivial interpolants along paths:         782 (count: 1156, min: 0, max: 5, avg: 0.68)
Equal non-trivial interpolants along paths:          123065 (count: 1156, min: 0, max: 252, avg: 106.46)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                1156
Number of successful refinements:     1156
Number of failed refinements:         0
Max. size of reached set before ref.: 25430
Max. size of reached set after ref.:  7491
Avg. size of reached set before ref.: 3232.85
Avg. size of reached set after ref.:  487.25

Total time for CEGAR algorithm:     892.954s
Time for refinements:                71.250s
Average time for refinement:          0.061s
Max time for refinement:              0.190s

Code Coverage
-----------------------------
  Function coverage:      0.218
  Visited lines:          1989
  Total lines:            4174
  Line coverage:          0.477
  Visited conditions:     274
  Total conditions:       920
  Condition coverage:     0.298

CPAchecker general statistics
-----------------------------
Number of program locations:     5992
Number of CFA edges:             6770
Number of relevant variables:    795
Number of functions:             312
Number of loops:                 31
Size of reached set:             5512
  Number of reached locations:   1014 (17%)
    Avg states per location:     5
    Max states per location:     236 (at node N2223)
  Number of reached functions:   68 (22%)
  Number of partitions:          5432
    Avg size of partitions:      1
    Max size of partitions:      5 (with key [N3088 (before line 9630), Function main called from node N3076, stack depth 1 [12ad1b2a], stack [main]])
  Number of target states:       0
  Size of final wait list        65

Time for analysis setup:          7.303s
  Time for loading CPAs:          1.063s
  Time for loading parser:        0.656s
  Time for CFA construction:      5.418s
    Time for parsing file(s):     1.209s
    Time for AST to CFA:          2.021s
    Time for CFA sanity check:    0.437s
    Time for post-processing:     1.542s
      Time for var class.:        0.636s
Time for Analysis:              892.955s
CPU time for analysis:          892.870s
Total time for CPAchecker:      900.272s
Total CPU time for CPAchecker:  900.160s
Time for statistics:              0.232s

Time for Garbage Collector:      43.171s (in 4483 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                365MB (   348 MiB) max;    122MB (   116 MiB) avg;    389MB (   371 MiB) peak
Used non-heap memory:             41MB (    39 MiB) max;     40MB (    38 MiB) avg;     41MB (    39 MiB) peak
Allocated heap memory:           426MB (   406 MiB) max;    187MB (   178 MiB) avg
Allocated non-heap memory:        43MB (    41 MiB) max;     42MB (    40 MiB) avg
Total process virtual memory:   8762MB (  8356 MiB) max;   8306MB (  7921 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
