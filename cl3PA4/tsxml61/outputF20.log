scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-challenges/linux-3.14__complex_emg__linux-kernel-locking-spinlock__drivers-net-ethernet-dec-tulip-dmfe_true-unreach-call.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_as7nwjah/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 5273: Dead code detected: return (1); (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

line 9174: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 9194: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 9197: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 9199: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 9247: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 9715: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 9728: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 10327: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 10369: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 10370: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 10415: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 10753: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 10803: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 10819: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 10874: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 10914: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 10980: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 5650: Function pointer *(ops->alloc) with type void *(*)(struct device *, size_t , dma_addr_t *, gfp_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 5691: Function pointer *(ops->free) with type void (*)(struct device *, size_t , void *, dma_addr_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 5524-5525: Function pointer *(ops->map_page) with type dma_addr_t (*)(struct device *, struct page *, unsigned long, size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 5563: Function pointer *(ops->unmap_page) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function external_allocated_data to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __pci_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_switch_to_interrupt_context to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strlcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ethtool_op_get_link to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function eth_change_mtu to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function disable_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function eth_mac_addr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function consume_skb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function eth_validate_addr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function unregister_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iowrite32 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iowrite16 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_iounmap to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 5330: Return type of function __builtin_unreachable is void, but result is used as type int: __builtin_unreachable(); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function __builtin_unreachable to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function debug_dma_free_coherent to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 5691: Ignoring function call through function pointer *(ops->free): (*(ops->free))(dev, size, vaddr, bus, attrs); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function pci_release_regions to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 10053: Ignoring call via function pointer ldv_pci_instance_shutdown_2_3::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 10053: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function pci_set_power_state to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_restore_state to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ioread16 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function crc32_le to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netif_device_attach to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __netdev_alloc_skb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 5517: Return type of function __builtin_unreachable is void, but result is used as type int: __builtin_unreachable(); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function debug_dma_map_page to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ioread32 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 10042: Ignoring call via function pointer ldv_pci_instance_resume_early_2_6::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 10042: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            881678 (19% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  700667 (79%)
  Because of loop head:            144300 (16%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         36711 (4%)
  Times precision was empty:       69956 (8%)
  Times precision was {false}:     846 (0%)
  Times result was cached:         779306 (88%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      31570 (4%)
  Times result was 'false':        119175 (14%)
Number of strengthen sat checks:   0
Number of coverage checks:         410960
  BDD entailment checks:           189458
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       55
Number of predicates discovered:          58
Number of abstraction locations:          306
Max number of predicates per location:    33
Avg number of predicates per location:    18
Total predicates per abstraction:         16646430
Max number of predicates per abstraction: 33
Avg number of predicates per abstraction: 513.53
Number of irrelevant predicates:          1803116 (11%)
Number of preds handled by boolean abs:   582951 (4%)
  Total number of models for allsat:      68330
  Max number of models for allsat:        64
  Avg number of models for allsat:        2.16

Time for post operator:                 31.501s
  Time for path formula creation:       29.511s
Time for strengthen operator:            3.761s
Time for prec operator:                691.714s
  Time for abstraction:                682.393s (Max:     0.737s, Count: 881678)
    Boolean abstraction:                62.697s
    Solving time:                       43.843s (Max:     0.027s)
    Model enumeration time:              6.821s
    Time for BDD construction:           3.056s (Max:     0.023s)
Time for merge operator:                 1.084s
Time for coverage check:                 0.368s
  Time for BDD entailment checks:        0.300s
Total time for SMT solver (w/o itp):    50.664s

Number of path formula cache hits:   4871913 (90%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    18.831s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               116157
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                      132761 (count: 495842, min: 0, max: 1304, avg: 0.27)
Time for BDD node cleanup:                             0.143s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  7.965s
  Time for transition matches:                         4.463s
  Time for transition assertions:                      0.008s
  Time for transition actions:                         0.043s
Automaton transfers with branching:                0
Automaton transfer successors:                      4605733 (count: 4605733, min: 1, max: 1, avg: 1.00) [1 x 4605733]

CPA algorithm statistics
------------------------
Number of iterations:            3024928
Max size of waitlist:            121
Average size of waitlist:        59
Number of computed successors:   3403743
Max successors for one state:    2
Number of times merged:          110751
Number of times stopped:         196267
Number of times breaked:         1149

Total time for CPA algorithm:       820.269s (Max:    11.800s)
  Time for choose from waitlist:      1.708s
  Time for precision adjustment:    712.371s
  Time for transfer relation:        84.150s
  Time for merge operator:            3.358s
  Time for stop operator:             4.790s
  Time for adding to reached set:     5.644s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   1149
Avg. length of target path (in blocks):              186808 (count: 1149, min: 27, max: 255, avg: 162.58)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  68.409s
  Counterexample analysis:                            59.530s (Max:     0.126s, Calls: 1149)
    Refinement sat check:                             22.966s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.106s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.878s
  Precision update:                                    2.287s
  ARG update:                                          4.545s

Length of refined path (in blocks):                  168403 (count: 1149, min: 9, max: 255, avg: 146.56)
Number of affected states:                           124246 (count: 1149, min: 1, max: 254, avg: 108.13)
Length (states) of path with itp 'true':              43008 (count: 1149, min: 0, max: 119, avg: 37.43)
Length (states) of path with itp non-trivial itp:    124246 (count: 1149, min: 1, max: 254, avg: 108.13)
Length (states) of path with itp 'false':               699 (count: 1149, min: 0, max: 1, avg: 0.61)
Different non-trivial interpolants along paths:         776 (count: 1149, min: 0, max: 5, avg: 0.68)
Equal non-trivial interpolants along paths:          122321 (count: 1149, min: 0, max: 252, avg: 106.46)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                1149
Number of successful refinements:     1149
Number of failed refinements:         0
Max. size of reached set before ref.: 25430
Max. size of reached set after ref.:  7491
Avg. size of reached set before ref.: 3171.56
Avg. size of reached set after ref.:  490.19

Total time for CEGAR algorithm:     893.043s
Time for refinements:                72.396s
Average time for refinement:          0.063s
Max time for refinement:              0.172s

Code Coverage
-----------------------------
  Function coverage:      0.218
  Visited lines:          2012
  Total lines:            4174
  Line coverage:          0.482
  Visited conditions:     276
  Total conditions:       920
  Condition coverage:     0.300

CPAchecker general statistics
-----------------------------
Number of program locations:     5992
Number of CFA edges:             6770
Number of relevant variables:    795
Number of functions:             312
Number of loops:                 31
Size of reached set:             7412
  Number of reached locations:   1036 (17%)
    Avg states per location:     7
    Max states per location:     378 (at node N2224)
  Number of reached functions:   68 (22%)
  Number of partitions:          7295
    Avg size of partitions:      1
    Max size of partitions:      5 (with key [N3088 (before line 9630), Function main called from node N3076, stack depth 1 [12ad1b2a], stack [main]])
  Number of target states:       0
  Size of final wait list        66

Time for analysis setup:          7.250s
  Time for loading CPAs:          1.254s
  Time for loading parser:        0.679s
  Time for CFA construction:      5.186s
    Time for parsing file(s):     1.108s
    Time for AST to CFA:          1.961s
    Time for CFA sanity check:    0.440s
    Time for post-processing:     1.414s
      Time for var class.:        0.619s
Time for Analysis:              893.043s
CPU time for analysis:          892.930s
Total time for CPAchecker:      900.297s
Total CPU time for CPAchecker:  900.170s
Time for statistics:              0.234s

Time for Garbage Collector:      42.057s (in 4415 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                354MB (   338 MiB) max;    117MB (   112 MiB) avg;    360MB (   343 MiB) peak
Used non-heap memory:             41MB (    39 MiB) max;     40MB (    38 MiB) avg;     42MB (    40 MiB) peak
Allocated heap memory:           396MB (   377 MiB) max;    180MB (   172 MiB) avg
Allocated non-heap memory:        43MB (    41 MiB) max;     42MB (    40 MiB) avg
Total process virtual memory:   8763MB (  8357 MiB) max;   8290MB (  7906 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
