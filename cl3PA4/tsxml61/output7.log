scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-challenges/linux-3.14__complex_emg__linux-kernel-locking-spinlock__drivers-net-ethernet-dec-tulip-dmfe_true-unreach-call.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_1z3xn07s/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 5273: Dead code detected: return (1); (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

line 9174: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 9194: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 9197: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 9199: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 9247: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 9715: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 9728: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 10327: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 10369: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 10370: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 10415: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 10753: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 10803: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 10819: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 10874: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 10914: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 10980: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 5650: Function pointer *(ops->alloc) with type void *(*)(struct device *, size_t , dma_addr_t *, gfp_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 5691: Function pointer *(ops->free) with type void (*)(struct device *, size_t , void *, dma_addr_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 5524-5525: Function pointer *(ops->map_page) with type dma_addr_t (*)(struct device *, struct page *, unsigned long, size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 5563: Function pointer *(ops->unmap_page) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function external_allocated_data to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_switch_to_interrupt_context to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_switch_to_process_context to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 10077: Ignoring call via function pointer ldv_pci_instance_suspend_late_2_7::arg0 for which no suitable target was found in line: tmp = (*arg0)(arg1, arg2); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 10077: Ignoring function call through function pointer *arg0: tmp = (*arg0)(arg1, arg2); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 10692: Ignoring call via function pointer ldv_timer_instance_callback_3_2::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 10692: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 9761: Ignoring call via function pointer ldv_interrupt_instance_thread_0_3::arg0 for which no suitable target was found in line: (*arg0)(arg1, arg2); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 9761: Ignoring function call through function pointer *arg0: (*arg0)(arg1, arg2); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 10053: Ignoring call via function pointer ldv_pci_instance_shutdown_2_3::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 10053: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 10042: Ignoring call via function pointer ldv_pci_instance_resume_early_2_6::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 10042: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function ldv_pre_probe to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __pci_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            20062 (19% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  17169 (86%)
  Because of loop head:            2842 (14%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         51 (0%)
  Times precision was empty:       12200 (61%)
  Times precision was {false}:     464 (2%)
  Times result was cached:         6527 (33%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      871 (4%)
  Times result was 'false':        550 (3%)
Number of strengthen sat checks:   0
Number of coverage checks:         11458
  BDD entailment checks:           7006
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       55
Number of predicates discovered:          11
Number of abstraction locations:          26
Max number of predicates per location:    10
Avg number of predicates per location:    5
Total predicates per abstraction:         33895
Max number of predicates per abstraction: 10
Avg number of predicates per abstraction: 25.39
Number of irrelevant predicates:          19332 (57%)
Number of preds handled by boolean abs:   3910 (12%)
  Total number of models for allsat:      2087
  Max number of models for allsat:        8
  Avg number of models for allsat:        2.40

Time for post operator:                  4.702s
  Time for path formula creation:        4.515s
Time for strengthen operator:            0.269s
Time for prec operator:                  8.174s
  Time for abstraction:                  7.406s (Max:     0.030s, Count: 20062)
    Boolean abstraction:                 2.017s
    Solving time:                        1.428s (Max:     0.013s)
    Model enumeration time:              0.390s
    Time for BDD construction:           0.249s (Max:     0.027s)
Time for merge operator:                 0.192s
Time for coverage check:                 0.056s
  Time for BDD entailment checks:        0.041s
Total time for SMT solver (w/o itp):     1.818s

Number of path formula cache hits:   86157 (71%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     3.947s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               3101
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        3162 (count: 27440, min: 0, max: 337, avg: 0.12)
Time for BDD node cleanup:                             0.023s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.631s
  Time for transition matches:                         0.315s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.001s
Automaton transfers with branching:                0
Automaton transfer successors:                       106524 (count: 106524, min: 1, max: 1, avg: 1.00) [1 x 106524]

CPA algorithm statistics
------------------------
Number of iterations:            79950
Max size of waitlist:            312
Average size of waitlist:        109
Number of computed successors:   92388
Max successors for one state:    2
Number of times merged:          2226
Number of times stopped:         3316
Number of times breaked:         51

Total time for CPA algorithm:        21.203s (Max:     1.214s)
  Time for choose from waitlist:      0.224s
  Time for precision adjustment:      9.631s
  Time for transfer relation:         8.892s
  Time for merge operator:            0.382s
  Time for stop operator:             0.409s
  Time for adding to reached set:     0.524s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   51
Avg. length of target path (in blocks):                1466 (count: 51, min: 13, max: 48, avg: 28.75)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   1.423s
  Counterexample analysis:                             0.847s (Max:     0.027s, Calls: 51)
    Refinement sat check:                              0.499s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.001s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.069s
  Precision update:                                    0.043s
  ARG update:                                          0.426s

Length of refined path (in blocks):                     921 (count: 51, min: 9, max: 44, avg: 18.06)
Number of affected states:                              612 (count: 51, min: 4, max: 39, avg: 12.00)
Length (states) of path with itp 'true':                258 (count: 51, min: 4, max: 15, avg: 5.06)
Length (states) of path with itp non-trivial itp:       612 (count: 51, min: 4, max: 39, avg: 12.00)
Length (states) of path with itp 'false':                51 (count: 51, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           2 (count: 51, min: 0, max: 1, avg: 0.04)
Equal non-trivial interpolants along paths:             559 (count: 51, min: 3, max: 38, avg: 10.96)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                51
Number of successful refinements:     51
Number of failed refinements:         0
Max. size of reached set before ref.: 3469
Max. size of reached set after ref.:  1115
Avg. size of reached set before ref.: 1855.08
Avg. size of reached set after ref.:  121.98

Total time for CEGAR algorithm:      22.821s
Time for refinements:                 1.605s
Average time for refinement:          0.031s
Max time for refinement:              0.084s

Code Coverage
-----------------------------
  Function coverage:      0.054
  Visited lines:          1092
  Total lines:            4174
  Line coverage:          0.262
  Visited conditions:     46
  Total conditions:       920
  Condition coverage:     0.050

CPAchecker general statistics
-----------------------------
Number of program locations:     5992
Number of CFA edges:             6770
Number of relevant variables:    795
Number of functions:             312
Number of loops:                 31
Size of reached set:             135
  Number of reached locations:   135 (2%)
    Avg states per location:     1
    Max states per location:     1 (at node N2830)
  Number of reached functions:   17 (5%)
  Number of partitions:          135
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0
  Size of final wait list        19

Time for analysis setup:          7.458s
  Time for loading CPAs:          1.016s
  Time for loading parser:        0.733s
  Time for CFA construction:      5.545s
    Time for parsing file(s):     1.305s
    Time for AST to CFA:          2.095s
    Time for CFA sanity check:    0.494s
    Time for post-processing:     1.404s
      Time for var class.:        0.570s
Time for Analysis:               22.821s
CPU time for analysis:           22.820s
Total time for CPAchecker:       30.284s
Total CPU time for CPAchecker:   30.260s
Time for statistics:              0.100s

Time for Garbage Collector:       0.652s (in 49 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 80MB (    77 MiB) max;     51MB (    48 MiB) avg;     83MB (    79 MiB) peak
Used non-heap memory:             40MB (    38 MiB) max;     34MB (    33 MiB) avg;     40MB (    39 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        42MB (    40 MiB) max;     36MB (    34 MiB) avg
Total process virtual memory:   8085MB (  7711 MiB) max;   8070MB (  7696 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
