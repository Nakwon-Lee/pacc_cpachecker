scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-challenges/linux-3.14__complex_emg__linux-kernel-locking-spinlock__drivers-net-ethernet-dec-tulip-dmfe_true-unreach-call.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_0cwnkizv/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 5273: Dead code detected: return (1); (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

line 9174: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 9194: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 9197: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 9199: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 9247: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 9715: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 9728: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 10327: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 10369: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 10370: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 10415: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 10753: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 10803: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 10819: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 10874: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 10914: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 10980: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 5650: Function pointer *(ops->alloc) with type void *(*)(struct device *, size_t , dma_addr_t *, gfp_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 5691: Function pointer *(ops->free) with type void (*)(struct device *, size_t , void *, dma_addr_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 5524-5525: Function pointer *(ops->map_page) with type dma_addr_t (*)(struct device *, struct page *, unsigned long, size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 5563: Function pointer *(ops->unmap_page) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function external_allocated_data to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_switch_to_interrupt_context to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_switch_to_process_context to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function eth_validate_addr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function eth_mac_addr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function eth_change_mtu to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ethtool_op_get_link to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 10692: Ignoring call via function pointer ldv_timer_instance_callback_3_2::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 10692: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function ldv_pre_probe to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 10042: Ignoring call via function pointer ldv_pci_instance_resume_early_2_6::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 10042: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 10053: Ignoring call via function pointer ldv_pci_instance_shutdown_2_3::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 10053: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 9761: Ignoring call via function pointer ldv_interrupt_instance_thread_0_3::arg0 for which no suitable target was found in line: (*arg0)(arg1, arg2); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 9761: Ignoring function call through function pointer *arg0: (*arg0)(arg1, arg2); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 10077: Ignoring call via function pointer ldv_pci_instance_suspend_late_2_7::arg0 for which no suitable target was found in line: tmp = (*arg0)(arg1, arg2); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 10077: Ignoring function call through function pointer *arg0: tmp = (*arg0)(arg1, arg2); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function disable_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strlcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function consume_skb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __pci_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dma_set_mask to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_enable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_request_regions to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_disable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            2000552 (21% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  1635922 (82%)
  Because of loop head:            362597 (18%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         2033 (0%)
  Times precision was empty:       858135 (43%)
  Times precision was {false}:     6766 (0%)
  Times result was cached:         1104391 (55%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      31260 (2%)
  Times result was 'false':        108476 (5%)
Number of strengthen sat checks:   0
Number of coverage checks:         6813049
  BDD entailment checks:           6145705
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       55
Number of predicates discovered:          35
Number of abstraction locations:          114
Max number of predicates per location:    31
Avg number of predicates per location:    8
Total predicates per abstraction:         14000892
Max number of predicates per abstraction: 31
Avg number of predicates per abstraction: 368.19
Number of irrelevant predicates:          8868162 (63%)
Number of preds handled by boolean abs:   300582 (2%)
  Total number of models for allsat:      165432
  Max number of models for allsat:        150
  Avg number of models for allsat:        5.29

Time for post operator:                 45.445s
  Time for path formula creation:       41.196s
Time for strengthen operator:            8.237s
Time for prec operator:                522.112s
  Time for abstraction:                499.721s (Max:     0.906s, Count: 2000552)
    Boolean abstraction:                68.708s
    Solving time:                       42.452s (Max:     0.015s)
    Model enumeration time:             18.673s
    Time for BDD construction:           5.586s (Max:     0.100s)
Time for merge operator:                 1.937s
Time for coverage check:                 5.441s
  Time for BDD entailment checks:        4.388s
Total time for SMT solver (w/o itp):    61.125s

Number of path formula cache hits:   11173879 (95%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    17.728s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               177543
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                      145950 (count: 7288155, min: 0, max: 3758, avg: 0.02)
Time for BDD node cleanup:                             0.839s
Time for BDD garbage collection:                       0.097s (in 1 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                 11.549s
  Time for transition matches:                         5.696s
  Time for transition assertions:                      0.003s
  Time for transition actions:                         0.010s
Automaton transfers with branching:                0
Automaton transfer successors:                      9673522 (count: 9673522, min: 1, max: 1, avg: 1.00) [1 x 9673522]

CPA algorithm statistics
------------------------
Number of iterations:            7906071
Max size of waitlist:            724
Average size of waitlist:        409
Number of computed successors:   8921503
Max successors for one state:    2
Number of times merged:          333672
Number of times stopped:         722933
Number of times breaked:         1467

Total time for CPA algorithm:       816.836s (Max:     8.044s)
  Time for choose from waitlist:      4.239s
  Time for precision adjustment:    576.607s
  Time for transfer relation:       164.553s
  Time for merge operator:           10.614s
  Time for stop operator:            26.726s
  Time for adding to reached set:    15.001s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   1467
Avg. length of target path (in blocks):               72889 (count: 1467, min: 13, max: 86, avg: 49.69)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  40.204s
  Counterexample analysis:                            22.900s (Max:     0.052s, Calls: 1467)
    Refinement sat check:                             12.877s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.053s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.257s
  Precision update:                                    1.102s
  ARG update:                                         15.302s

Length of refined path (in blocks):                   48091 (count: 1466, min: 9, max: 63, avg: 32.80)
Number of affected states:                             8792 (count: 1466, min: 2, max: 62, avg: 6.00)
Length (states) of path with itp 'true':              37833 (count: 1466, min: 0, max: 56, avg: 25.81)
Length (states) of path with itp non-trivial itp:      8792 (count: 1466, min: 2, max: 62, avg: 6.00)
Length (states) of path with itp 'false':              1436 (count: 1466, min: 0, max: 1, avg: 0.98)
Different non-trivial interpolants along paths:         694 (count: 1466, min: 0, max: 1, avg: 0.47)
Equal non-trivial interpolants along paths:            6632 (count: 1466, min: 0, max: 60, avg: 4.52)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                1467
Number of successful refinements:     1466
Number of failed refinements:         0
Max. size of reached set before ref.: 37183
Max. size of reached set after ref.:  25605
Avg. size of reached set before ref.: 17739.07
Avg. size of reached set after ref.:  12232.69

Total time for CEGAR algorithm:     892.360s
Time for refinements:                61.195s
Average time for refinement:          0.041s
Max time for refinement:              0.136s

Code Coverage
-----------------------------
  Function coverage:      0.167
  Visited lines:          1510
  Total lines:            4174
  Line coverage:          0.362
  Visited conditions:     168
  Total conditions:       920
  Condition coverage:     0.183

CPAchecker general statistics
-----------------------------
Number of program locations:     5992
Number of CFA edges:             6770
Number of relevant variables:    795
Number of functions:             312
Number of loops:                 31
Size of reached set:             11525
  Number of reached locations:   599 (10%)
    Avg states per location:     19
    Max states per location:     147 (at node N4144)
  Number of reached functions:   52 (17%)
  Number of partitions:          11431
    Avg size of partitions:      1
    Max size of partitions:      19 (with key [N3088 (before line 9630), Function main called from node N3076, stack depth 1 [12ad1b2a], stack [main]])
  Number of target states:       1
  Size of final wait list        160

Time for analysis setup:          7.873s
  Time for loading CPAs:          1.212s
  Time for loading parser:        0.762s
  Time for CFA construction:      5.747s
    Time for parsing file(s):     1.307s
    Time for AST to CFA:          2.118s
    Time for CFA sanity check:    0.485s
    Time for post-processing:     1.599s
      Time for var class.:        0.637s
Time for Analysis:              892.361s
CPU time for analysis:          892.250s
Total time for CPAchecker:      900.238s
Total CPU time for CPAchecker:  900.110s
Time for statistics:              0.339s

Time for Garbage Collector:      46.994s (in 1994 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                495MB (   472 MiB) max;    260MB (   248 MiB) avg;    502MB (   479 MiB) peak
Used non-heap memory:             46MB (    44 MiB) max;     40MB (    38 MiB) avg;     46MB (    44 MiB) peak
Allocated heap memory:           525MB (   500 MiB) max;    378MB (   360 MiB) avg
Allocated non-heap memory:        48MB (    46 MiB) max;     48MB (    45 MiB) avg
Total process virtual memory:   8695MB (  8292 MiB) max;   8381MB (  7993 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
