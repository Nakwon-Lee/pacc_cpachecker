scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-challenges/linux-3.14__complex_emg__linux-kernel-locking-spinlock__drivers-net-ethernet-dec-tulip-dmfe_true-unreach-call.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_n21d_6d7/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 5273: Dead code detected: return (1); (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

line 9174: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 9194: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 9197: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 9199: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 9247: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 9715: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 9728: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 10327: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 10369: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 10370: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 10415: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 10753: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 10803: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 10819: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 10874: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 10914: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 10980: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 5650: Function pointer *(ops->alloc) with type void *(*)(struct device *, size_t , dma_addr_t *, gfp_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 5691: Function pointer *(ops->free) with type void (*)(struct device *, size_t , void *, dma_addr_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 5524-5525: Function pointer *(ops->map_page) with type dma_addr_t (*)(struct device *, struct page *, unsigned long, size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 5563: Function pointer *(ops->unmap_page) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function external_allocated_data to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_switch_to_interrupt_context to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_switch_to_process_context to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 10692: Ignoring call via function pointer ldv_timer_instance_callback_3_2::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 10692: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 9761: Ignoring call via function pointer ldv_interrupt_instance_thread_0_3::arg0 for which no suitable target was found in line: (*arg0)(arg1, arg2); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 9761: Ignoring function call through function pointer *arg0: (*arg0)(arg1, arg2); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function pci_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __pci_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            23381 (22% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  18193 (78%)
  Because of loop head:            5012 (21%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         176 (1%)
  Times precision was empty:       7709 (33%)
  Times precision was {false}:     272 (1%)
  Times result was cached:         13113 (56%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      2287 (10%)
  Times result was 'false':        1927 (8%)
Number of strengthen sat checks:   0
Number of coverage checks:         15885
  BDD entailment checks:           10023
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       55
Number of predicates discovered:          27
Number of abstraction locations:          90
Max number of predicates per location:    25
Avg number of predicates per location:    9
Total predicates per abstraction:         103009
Max number of predicates per abstraction: 25
Avg number of predicates per abstraction: 40.25
Number of irrelevant predicates:          45502 (44%)
Number of preds handled by boolean abs:   14469 (14%)
  Total number of models for allsat:      3379
  Max number of models for allsat:        14
  Avg number of models for allsat:        1.48

Time for post operator:                  2.432s
  Time for path formula creation:        2.273s
Time for strengthen operator:            0.261s
Time for prec operator:                 11.745s
  Time for abstraction:                 11.240s (Max:     0.017s, Count: 23381)
    Boolean abstraction:                 2.982s
    Solving time:                        2.071s (Max:     0.013s)
    Model enumeration time:              0.300s
    Time for BDD construction:           0.274s (Max:     0.012s)
Time for merge operator:                 0.104s
Time for coverage check:                 0.056s
  Time for BDD entailment checks:        0.035s
Total time for SMT solver (w/o itp):     2.371s

Number of path formula cache hits:   114585 (91%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     1.813s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               4350
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        9224 (count: 35699, min: 0, max: 455, avg: 0.26)
Time for BDD node cleanup:                             0.034s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.413s
Automaton transfers with branching:                0
Automaton transfer successors:                       104167 (count: 104167, min: 1, max: 1, avg: 1.00) [1 x 104167]

CPA algorithm statistics
------------------------
Number of iterations:            83764
Max size of waitlist:            42
Average size of waitlist:        18
Number of computed successors:   94572
Max successors for one state:    2
Number of times merged:          2931
Number of times stopped:         7452
Number of times breaked:         85

Total time for CPA algorithm:        20.737s (Max:     1.072s)
  Time for choose from waitlist:      0.181s
  Time for precision adjustment:     12.920s
  Time for transfer relation:         5.781s
  Time for merge operator:            0.293s
  Time for stop operator:             0.361s
  Time for adding to reached set:     0.371s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   85
Avg. length of target path (in blocks):                3145 (count: 85, min: 13, max: 78, avg: 37.00)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   1.964s
  Counterexample analysis:                             1.352s (Max:     0.038s, Calls: 85)
    Refinement sat check:                              0.755s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.001s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.084s
  Precision update:                                    0.139s
  ARG update:                                          0.335s

Length of refined path (in blocks):                    2262 (count: 85, min: 9, max: 78, avg: 26.61)
Number of affected states:                             1813 (count: 85, min: 4, max: 77, avg: 21.33)
Length (states) of path with itp 'true':                364 (count: 85, min: 0, max: 8, avg: 4.28)
Length (states) of path with itp non-trivial itp:      1813 (count: 85, min: 4, max: 77, avg: 21.33)
Length (states) of path with itp 'false':                71 (count: 85, min: 0, max: 1, avg: 0.84)
Different non-trivial interpolants along paths:          14 (count: 85, min: 0, max: 1, avg: 0.16)
Equal non-trivial interpolants along paths:            1714 (count: 85, min: 3, max: 75, avg: 20.16)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                85
Number of successful refinements:     85
Number of failed refinements:         0
Max. size of reached set before ref.: 2801
Max. size of reached set after ref.:  1184
Avg. size of reached set before ref.: 1210.25
Avg. size of reached set after ref.:  218.00

Total time for CEGAR algorithm:      22.960s
Time for refinements:                 2.208s
Average time for refinement:          0.025s
Max time for refinement:              0.075s

Code Coverage
-----------------------------
  Function coverage:      0.077
  Visited lines:          1208
  Total lines:            4174
  Line coverage:          0.289
  Visited conditions:     74
  Total conditions:       920
  Condition coverage:     0.080

CPAchecker general statistics
-----------------------------
Number of program locations:     5992
Number of CFA edges:             6770
Number of relevant variables:    795
Number of functions:             312
Number of loops:                 31
Size of reached set:             852
  Number of reached locations:   277 (5%)
    Avg states per location:     3
    Max states per location:     11 (at node N3143)
  Number of reached functions:   24 (8%)
  Number of partitions:          831
    Avg size of partitions:      1
    Max size of partitions:      6 (with key [N3088 (before line 9630), Function main called from node N3076, stack depth 1 [12ad1b2a], stack [main]])
  Number of target states:       0
  Size of final wait list        26

Time for analysis setup:          7.306s
  Time for loading CPAs:          1.141s
  Time for loading parser:        0.665s
  Time for CFA construction:      5.320s
    Time for parsing file(s):     1.294s
    Time for AST to CFA:          2.136s
    Time for CFA sanity check:    0.395s
    Time for post-processing:     1.243s
      Time for var class.:        0.600s
Time for Analysis:               22.960s
CPU time for analysis:           22.950s
Total time for CPAchecker:       30.270s
Total CPU time for CPAchecker:   30.230s
Time for statistics:              0.119s

Time for Garbage Collector:       0.574s (in 61 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 73MB (    70 MiB) max;     49MB (    47 MiB) avg;     77MB (    73 MiB) peak
Used non-heap memory:             39MB (    38 MiB) max;     34MB (    33 MiB) avg;     40MB (    38 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        41MB (    39 MiB) max;     36MB (    34 MiB) avg
Total process virtual memory:   8085MB (  7711 MiB) max;   8071MB (  7697 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
