scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-challenges/linux-3.14__complex_emg__linux-kernel-locking-spinlock__drivers-net-ethernet-dec-tulip-dmfe_true-unreach-call.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_kuruiyms/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 5273: Dead code detected: return (1); (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

line 9174: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 9194: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 9197: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 9199: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 9247: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 9715: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 9728: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 10327: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 10369: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 10370: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 10415: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 10753: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 10803: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 10819: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 10874: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 10914: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 10980: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 5650: Function pointer *(ops->alloc) with type void *(*)(struct device *, size_t , dma_addr_t *, gfp_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 5691: Function pointer *(ops->free) with type void (*)(struct device *, size_t , void *, dma_addr_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 5524-5525: Function pointer *(ops->map_page) with type dma_addr_t (*)(struct device *, struct page *, unsigned long, size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 5563: Function pointer *(ops->unmap_page) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function external_allocated_data to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_switch_to_interrupt_context to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_switch_to_process_context to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 10692: Ignoring call via function pointer ldv_timer_instance_callback_3_2::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 10692: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function ldv_pre_probe to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 10077: Ignoring call via function pointer ldv_pci_instance_suspend_late_2_7::arg0 for which no suitable target was found in line: tmp = (*arg0)(arg1, arg2); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 10077: Ignoring function call through function pointer *arg0: tmp = (*arg0)(arg1, arg2); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 10042: Ignoring call via function pointer ldv_pci_instance_resume_early_2_6::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 10042: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 10053: Ignoring call via function pointer ldv_pci_instance_shutdown_2_3::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 10053: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function eth_validate_addr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function eth_mac_addr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function eth_change_mtu to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ethtool_op_get_link to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 9761: Ignoring call via function pointer ldv_interrupt_instance_thread_0_3::arg0 for which no suitable target was found in line: (*arg0)(arg1, arg2); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 9761: Ignoring function call through function pointer *arg0: (*arg0)(arg1, arg2); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function consume_skb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function disable_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strlcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __pci_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netif_device_detach to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iowrite32 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_save_state to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_set_power_state to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_restore_state to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function unregister_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dma_set_mask to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_enable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_request_regions to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_disable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            1476670 (18% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  1283415 (87%)
  Because of loop head:            190114 (13%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         3141 (0%)
  Times precision was empty:       424120 (29%)
  Times precision was {false}:     10225 (1%)
  Times result was cached:         990619 (67%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      51706 (4%)
  Times result was 'false':        162906 (11%)
Number of strengthen sat checks:   0
Number of coverage checks:         5177649
  BDD entailment checks:           4512771
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       55
Number of predicates discovered:          36
Number of abstraction locations:          160
Max number of predicates per location:    33
Avg number of predicates per location:    8
Total predicates per abstraction:         11182038
Max number of predicates per abstraction: 33
Avg number of predicates per abstraction: 180.56
Number of irrelevant predicates:          4299119 (38%)
Number of preds handled by boolean abs:   556687 (5%)
  Total number of models for allsat:      300430
  Max number of models for allsat:        160
  Avg number of models for allsat:        5.81

Time for post operator:                 43.537s
  Time for path formula creation:       39.299s
Time for strengthen operator:            6.638s
Time for prec operator:                569.884s
  Time for abstraction:                554.761s (Max:     1.531s, Count: 1476670)
    Boolean abstraction:               123.936s
    Solving time:                       71.775s (Max:     0.016s)
    Model enumeration time:             35.433s
    Time for BDD construction:          12.125s (Max:     0.068s)
Time for merge operator:                 2.513s
Time for coverage check:                 5.889s
  Time for BDD entailment checks:        5.101s
Total time for SMT solver (w/o itp):   107.208s

Number of path formula cache hits:   8855742 (93%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    22.450s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               207446
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                      229462 (count: 5390065, min: 0, max: 3181, avg: 0.04)
Time for BDD node cleanup:                             0.690s
Time for BDD garbage collection:                       0.136s (in 4 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  9.479s
  Time for transition matches:                         5.288s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.021s
Automaton transfers with branching:                0
Automaton transfer successors:                      8064645 (count: 8064645, min: 1, max: 1, avg: 1.00) [1 x 8064645]

CPA algorithm statistics
------------------------
Number of iterations:            6027924
Max size of waitlist:            2097
Average size of waitlist:        484
Number of computed successors:   6838876
Max successors for one state:    2
Number of times merged:          332439
Number of times stopped:         545710
Number of times breaked:         1228

Total time for CPA algorithm:       815.528s (Max:    18.036s)
  Time for choose from waitlist:      2.524s
  Time for precision adjustment:    617.525s
  Time for transfer relation:       137.781s
  Time for merge operator:            9.844s
  Time for stop operator:            22.401s
  Time for adding to reached set:     9.985s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   1228
Avg. length of target path (in blocks):               47515 (count: 1228, min: 13, max: 70, avg: 38.69)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  26.802s
  Counterexample analysis:                            14.304s (Max:     0.044s, Calls: 1228)
    Refinement sat check:                              8.821s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.036s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.181s
  Precision update:                                    0.948s
  ARG update:                                         10.909s

Length of refined path (in blocks):                   38269 (count: 1228, min: 9, max: 63, avg: 31.16)
Number of affected states:                            11565 (count: 1228, min: 4, max: 62, avg: 9.42)
Length (states) of path with itp 'true':              25476 (count: 1228, min: 0, max: 50, avg: 20.75)
Length (states) of path with itp non-trivial itp:     11565 (count: 1228, min: 4, max: 62, avg: 9.42)
Length (states) of path with itp 'false':              1180 (count: 1228, min: 0, max: 1, avg: 0.96)
Different non-trivial interpolants along paths:          61 (count: 1228, min: 0, max: 1, avg: 0.05)
Equal non-trivial interpolants along paths:           10276 (count: 1228, min: 3, max: 60, avg: 8.37)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                1228
Number of successful refinements:     1228
Number of failed refinements:         0
Max. size of reached set before ref.: 92000
Max. size of reached set after ref.:  80257
Avg. size of reached set before ref.: 25584.72
Avg. size of reached set after ref.:  20654.76

Total time for CEGAR algorithm:     893.215s
Time for refinements:                55.610s
Average time for refinement:          0.045s
Max time for refinement:              0.925s

Code Coverage
-----------------------------
  Function coverage:      0.311
  Visited lines:          1846
  Total lines:            4174
  Line coverage:          0.442
  Visited conditions:     260
  Total conditions:       920
  Condition coverage:     0.283

CPAchecker general statistics
-----------------------------
Number of program locations:     5992
Number of CFA edges:             6770
Number of relevant variables:    795
Number of functions:             312
Number of loops:                 31
Size of reached set:             76265
  Number of reached locations:   982 (16%)
    Avg states per location:     77
    Max states per location:     1132 (at node N4144)
  Number of reached functions:   97 (31%)
  Number of partitions:          75591
    Avg size of partitions:      1
    Max size of partitions:      121 (with key [N3088 (before line 9630), Function main called from node N3076, stack depth 1 [12ad1b2a], stack [main]])
  Number of target states:       0
  Size of final wait list        1820

Time for analysis setup:          7.009s
  Time for loading CPAs:          1.084s
  Time for loading parser:        0.706s
  Time for CFA construction:      5.058s
    Time for parsing file(s):     1.247s
    Time for AST to CFA:          1.908s
    Time for CFA sanity check:    0.387s
    Time for post-processing:     1.269s
      Time for var class.:        0.584s
Time for Analysis:              893.215s
CPU time for analysis:          893.100s
Total time for CPAchecker:      900.236s
Total CPU time for CPAchecker:  900.110s
Time for statistics:              1.043s

Time for Garbage Collector:      65.722s (in 1522 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                730MB (   696 MiB) max;    333MB (   317 MiB) avg;    739MB (   705 MiB) peak
Used non-heap memory:             41MB (    39 MiB) max;     41MB (    39 MiB) avg;     42MB (    40 MiB) peak
Allocated heap memory:           741MB (   706 MiB) max;    492MB (   469 MiB) avg
Allocated non-heap memory:        43MB (    41 MiB) max;     43MB (    41 MiB) avg
Total process virtual memory:   9301MB (  8870 MiB) max;   8642MB (  8241 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
