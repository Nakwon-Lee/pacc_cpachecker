scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-challenges/linux-3.14__complex_emg__linux-kernel-locking-spinlock__drivers-net-ethernet-dec-tulip-dmfe_true-unreach-call.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_7lm6h2u7/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 5273: Dead code detected: return (1); (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

line 9174: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 9194: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 9197: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 9199: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 9247: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 9715: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 9728: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 10327: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 10369: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 10370: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 10415: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 10753: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 10803: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 10819: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 10874: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 10914: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 10980: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 5650: Function pointer *(ops->alloc) with type void *(*)(struct device *, size_t , dma_addr_t *, gfp_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 5691: Function pointer *(ops->free) with type void (*)(struct device *, size_t , void *, dma_addr_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 5524-5525: Function pointer *(ops->map_page) with type dma_addr_t (*)(struct device *, struct page *, unsigned long, size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 5563: Function pointer *(ops->unmap_page) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function external_allocated_data to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_switch_to_interrupt_context to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_switch_to_process_context to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 10692: Ignoring call via function pointer ldv_timer_instance_callback_3_2::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 10692: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 9761: Ignoring call via function pointer ldv_interrupt_instance_thread_0_3::arg0 for which no suitable target was found in line: (*arg0)(arg1, arg2); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 9761: Ignoring function call through function pointer *arg0: (*arg0)(arg1, arg2); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function pci_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __pci_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            15002 (23% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  11500 (77%)
  Because of loop head:            3339 (22%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         163 (1%)
  Times precision was empty:       5074 (34%)
  Times precision was {false}:     218 (1%)
  Times result was cached:         7219 (48%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      2491 (17%)
  Times result was 'false':        1300 (9%)
Number of strengthen sat checks:   0
Number of coverage checks:         9435
  BDD entailment checks:           6945
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       55
Number of predicates discovered:          18
Number of abstraction locations:          70
Max number of predicates per location:    16
Avg number of predicates per location:    9
Total predicates per abstraction:         73582
Max number of predicates per abstraction: 16
Avg number of predicates per abstraction: 27.16
Number of irrelevant predicates:          18768 (26%)
Number of preds handled by boolean abs:   15432 (21%)
  Total number of models for allsat:      2581
  Max number of models for allsat:        3
  Avg number of models for allsat:        1.04

Time for post operator:                  2.440s
  Time for path formula creation:        2.272s
Time for strengthen operator:            0.117s
Time for prec operator:                 12.192s
  Time for abstraction:                 11.648s (Max:     0.020s, Count: 15002)
    Boolean abstraction:                 3.435s
    Solving time:                        2.399s (Max:     0.013s)
    Model enumeration time:              0.372s
    Time for BDD construction:           0.259s (Max:     0.012s)
Time for merge operator:                 0.089s
Time for coverage check:                 0.042s
  Time for BDD entailment checks:        0.038s
Total time for SMT solver (w/o itp):     2.771s

Number of path formula cache hits:   66240 (85%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     1.914s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               1444
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        6470 (count: 29031, min: 0, max: 420, avg: 0.22)
Time for BDD node cleanup:                             0.016s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.497s
Automaton transfers with branching:                0
Automaton transfer successors:                        65064 (count: 65064, min: 1, max: 1, avg: 1.00) [1 x 65064]

CPA algorithm statistics
------------------------
Number of iterations:            51493
Max size of waitlist:            30
Average size of waitlist:        13
Number of computed successors:   57911
Max successors for one state:    2
Number of times merged:          1245
Number of times stopped:         3781
Number of times breaked:         76

Total time for CPA algorithm:        20.453s (Max:     0.955s)
  Time for choose from waitlist:      0.153s
  Time for precision adjustment:     13.112s
  Time for transfer relation:         5.447s
  Time for merge operator:            0.248s
  Time for stop operator:             0.313s
  Time for adding to reached set:     0.277s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   76
Avg. length of target path (in blocks):                4121 (count: 76, min: 18, max: 87, avg: 54.22)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   2.466s
  Counterexample analysis:                             1.869s (Max:     0.047s, Calls: 76)
    Refinement sat check:                              0.991s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.003s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.102s
  Precision update:                                    0.117s
  ARG update:                                          0.284s

Length of refined path (in blocks):                    3448 (count: 76, min: 9, max: 87, avg: 45.37)
Number of affected states:                             3184 (count: 76, min: 4, max: 86, avg: 41.89)
Length (states) of path with itp 'true':                188 (count: 76, min: 0, max: 8, avg: 2.47)
Length (states) of path with itp non-trivial itp:      3184 (count: 76, min: 4, max: 86, avg: 41.89)
Length (states) of path with itp 'false':                44 (count: 76, min: 0, max: 1, avg: 0.58)
Different non-trivial interpolants along paths:          32 (count: 76, min: 0, max: 1, avg: 0.42)
Equal non-trivial interpolants along paths:            3076 (count: 76, min: 3, max: 84, avg: 40.47)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                76
Number of successful refinements:     76
Number of failed refinements:         0
Max. size of reached set before ref.: 1003
Max. size of reached set after ref.:  124
Avg. size of reached set before ref.: 700.91
Avg. size of reached set after ref.:  12.47

Total time for CEGAR algorithm:      23.156s
Time for refinements:                 2.693s
Average time for refinement:          0.035s
Max time for refinement:              0.072s

Code Coverage
-----------------------------
  Function coverage:      0.071
  Visited lines:          1192
  Total lines:            4174
  Line coverage:          0.286
  Visited conditions:     72
  Total conditions:       920
  Condition coverage:     0.078

CPAchecker general statistics
-----------------------------
Number of program locations:     5992
Number of CFA edges:             6770
Number of relevant variables:    795
Number of functions:             312
Number of loops:                 31
Size of reached set:             509
  Number of reached locations:   258 (4%)
    Avg states per location:     1
    Max states per location:     7 (at node N3143)
  Number of reached functions:   22 (7%)
  Number of partitions:          499
    Avg size of partitions:      1
    Max size of partitions:      5 (with key [N3088 (before line 9630), Function main called from node N3076, stack depth 1 [12ad1b2a], stack [main]])
  Number of target states:       0
  Size of final wait list        12

Time for analysis setup:          7.107s
  Time for loading CPAs:          1.073s
  Time for loading parser:        0.754s
  Time for CFA construction:      5.129s
    Time for parsing file(s):     1.174s
    Time for AST to CFA:          1.887s
    Time for CFA sanity check:    0.418s
    Time for post-processing:     1.402s
      Time for var class.:        0.580s
Time for Analysis:               23.156s
CPU time for analysis:           23.150s
Total time for CPAchecker:       30.267s
Total CPU time for CPAchecker:   30.240s
Time for statistics:              0.112s

Time for Garbage Collector:       0.506s (in 48 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 73MB (    69 MiB) max;     49MB (    47 MiB) avg;     76MB (    73 MiB) peak
Used non-heap memory:             40MB (    38 MiB) max;     35MB (    33 MiB) avg;     40MB (    38 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        41MB (    39 MiB) max;     36MB (    34 MiB) avg
Total process virtual memory:   8086MB (  7711 MiB) max;   8070MB (  7696 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
