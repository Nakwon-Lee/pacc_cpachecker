scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-challenges/linux-3.14__complex_emg__linux-kernel-locking-spinlock__drivers-net-ethernet-dec-tulip-dmfe_true-unreach-call.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_qu3cwgf_/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 5273: Dead code detected: return (1); (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

line 9174: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 9194: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 9197: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 9199: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 9247: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 9715: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 9728: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 10327: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 10369: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 10370: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 10415: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 10753: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 10803: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 10819: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 10874: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 10914: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 10980: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 5650: Function pointer *(ops->alloc) with type void *(*)(struct device *, size_t , dma_addr_t *, gfp_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 5691: Function pointer *(ops->free) with type void (*)(struct device *, size_t , void *, dma_addr_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 5524-5525: Function pointer *(ops->map_page) with type dma_addr_t (*)(struct device *, struct page *, unsigned long, size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 5563: Function pointer *(ops->unmap_page) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function external_allocated_data to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_switch_to_interrupt_context to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_switch_to_process_context to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 10692: Ignoring call via function pointer ldv_timer_instance_callback_3_2::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 10692: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function ldv_pre_probe to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 10077: Ignoring call via function pointer ldv_pci_instance_suspend_late_2_7::arg0 for which no suitable target was found in line: tmp = (*arg0)(arg1, arg2); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 10077: Ignoring function call through function pointer *arg0: tmp = (*arg0)(arg1, arg2); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 10042: Ignoring call via function pointer ldv_pci_instance_resume_early_2_6::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 10042: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 10053: Ignoring call via function pointer ldv_pci_instance_shutdown_2_3::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 10053: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function eth_validate_addr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function eth_mac_addr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function eth_change_mtu to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ethtool_op_get_link to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 9761: Ignoring call via function pointer ldv_interrupt_instance_thread_0_3::arg0 for which no suitable target was found in line: (*arg0)(arg1, arg2); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 9761: Ignoring function call through function pointer *arg0: (*arg0)(arg1, arg2); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function consume_skb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function disable_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strlcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __pci_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netif_device_detach to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iowrite32 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_save_state to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_set_power_state to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_restore_state to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function unregister_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dma_set_mask to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_enable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_request_regions to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_disable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            1452788 (18% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  1263002 (87%)
  Because of loop head:            186692 (13%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         3094 (0%)
  Times precision was empty:       418584 (29%)
  Times precision was {false}:     10185 (1%)
  Times result was cached:         972493 (67%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      51526 (4%)
  Times result was 'false':        160434 (11%)
Number of strengthen sat checks:   0
Number of coverage checks:         4996295
  BDD entailment checks:           4339561
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       55
Number of predicates discovered:          36
Number of abstraction locations:          160
Max number of predicates per location:    33
Avg number of predicates per location:    7
Total predicates per abstraction:         10938948
Max number of predicates per abstraction: 33
Avg number of predicates per abstraction: 177.26
Number of irrelevant predicates:          4193555 (38%)
Number of preds handled by boolean abs:   553809 (5%)
  Total number of models for allsat:      298799
  Max number of models for allsat:        160
  Avg number of models for allsat:        5.80

Time for post operator:                 44.913s
  Time for path formula creation:       40.813s
Time for strengthen operator:            6.600s
Time for prec operator:                564.322s
  Time for abstraction:                548.999s (Max:     1.648s, Count: 1452788)
    Boolean abstraction:               125.832s
    Solving time:                       72.531s (Max:     0.016s)
    Model enumeration time:             35.826s
    Time for BDD construction:          12.032s (Max:     0.068s)
Time for merge operator:                 2.375s
Time for coverage check:                 5.749s
  Time for BDD entailment checks:        4.952s
Total time for SMT solver (w/o itp):   108.357s

Number of path formula cache hits:   8710803 (92%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    22.953s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               203820
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                      229040 (count: 5209751, min: 0, max: 2503, avg: 0.04)
Time for BDD node cleanup:                             0.675s
Time for BDD garbage collection:                       0.137s (in 4 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                 10.759s
  Time for transition matches:                         6.128s
  Time for transition assertions:                      0.004s
  Time for transition actions:                         0.010s
Automaton transfers with branching:                0
Automaton transfer successors:                      7943326 (count: 7943326, min: 1, max: 1, avg: 1.00) [1 x 7943326]

CPA algorithm statistics
------------------------
Number of iterations:            5935040
Max size of waitlist:            2097
Average size of waitlist:        474
Number of computed successors:   6733539
Max successors for one state:    2
Number of times merged:          328367
Number of times stopped:         537850
Number of times breaked:         1213

Total time for CPA algorithm:       812.135s (Max:    17.759s)
  Time for choose from waitlist:      2.551s
  Time for precision adjustment:    611.699s
  Time for transfer relation:       138.296s
  Time for merge operator:            9.864s
  Time for stop operator:            22.014s
  Time for adding to reached set:    10.674s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   1213
Avg. length of target path (in blocks):               46926 (count: 1213, min: 13, max: 70, avg: 38.69)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  27.989s
  Counterexample analysis:                            14.158s (Max:     0.041s, Calls: 1213)
    Refinement sat check:                              8.800s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.045s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.242s
  Precision update:                                    0.983s
  ARG update:                                         12.095s

Length of refined path (in blocks):                   37782 (count: 1213, min: 9, max: 63, avg: 31.15)
Number of affected states:                            11474 (count: 1213, min: 4, max: 62, avg: 9.46)
Length (states) of path with itp 'true':              25095 (count: 1213, min: 0, max: 50, avg: 20.69)
Length (states) of path with itp non-trivial itp:     11474 (count: 1213, min: 4, max: 62, avg: 9.46)
Length (states) of path with itp 'false':              1165 (count: 1213, min: 0, max: 1, avg: 0.96)
Different non-trivial interpolants along paths:          61 (count: 1213, min: 0, max: 1, avg: 0.05)
Equal non-trivial interpolants along paths:           10200 (count: 1213, min: 3, max: 60, avg: 8.41)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                1213
Number of successful refinements:     1213
Number of failed refinements:         0
Max. size of reached set before ref.: 92000
Max. size of reached set after ref.:  80257
Avg. size of reached set before ref.: 25548.74
Avg. size of reached set after ref.:  20590.08

Total time for CEGAR algorithm:     893.102s
Time for refinements:                56.854s
Average time for refinement:          0.046s
Max time for refinement:              1.601s

Code Coverage
-----------------------------
  Function coverage:      0.154
  Visited lines:          1474
  Total lines:            4174
  Line coverage:          0.353
  Visited conditions:     158
  Total conditions:       920
  Condition coverage:     0.172

CPAchecker general statistics
-----------------------------
Number of program locations:     5992
Number of CFA edges:             6770
Number of relevant variables:    795
Number of functions:             312
Number of loops:                 31
Size of reached set:             20397
  Number of reached locations:   555 (9%)
    Avg states per location:     36
    Max states per location:     212 (at node N3400)
  Number of reached functions:   48 (15%)
  Number of partitions:          20191
    Avg size of partitions:      1
    Max size of partitions:      44 (with key [N3129 (before line 9683), Function main called from node N3076, stack depth 1 [12ad1b2a], stack [main]])
  Number of target states:       0
  Size of final wait list        311

Time for analysis setup:          7.174s
  Time for loading CPAs:          1.018s
  Time for loading parser:        0.637s
  Time for CFA construction:      5.404s
    Time for parsing file(s):     1.291s
    Time for AST to CFA:          1.963s
    Time for CFA sanity check:    0.445s
    Time for post-processing:     1.488s
      Time for var class.:        0.612s
Time for Analysis:              893.102s
CPU time for analysis:          892.960s
Total time for CPAchecker:      900.281s
Total CPU time for CPAchecker:  900.130s
Time for statistics:              0.475s

Time for Garbage Collector:      67.165s (in 1542 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                718MB (   685 MiB) max;    323MB (   308 MiB) avg;    752MB (   717 MiB) peak
Used non-heap memory:             42MB (    40 MiB) max;     41MB (    39 MiB) avg;     42MB (    40 MiB) peak
Allocated heap memory:           801MB (   763 MiB) max;    471MB (   449 MiB) avg
Allocated non-heap memory:        43MB (    41 MiB) max;     43MB (    41 MiB) avg
Total process virtual memory:   9304MB (  8873 MiB) max;   8626MB (  8226 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
