scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-challenges/linux-3.14__complex_emg__linux-kernel-locking-spinlock__drivers-net-ethernet-natsemi-natsemi_true-unreach-call.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_42m0wj37/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 5268: Dead code detected: return (1); (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

line 11081: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 11101: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 11104: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 11106: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 11175: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 11825: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 11838: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 11969: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 12609: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 12651: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 12652: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 12697: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 13188: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 13262: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 13278: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 13321: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 13373: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 13389: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 13453: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 13469: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 13521: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 13537: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 13555: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 5862: Function pointer *(ops->alloc) with type void *(*)(struct device *, size_t , dma_addr_t *, gfp_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 5903: Function pointer *(ops->free) with type void (*)(struct device *, size_t , void *, dma_addr_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 5657-5658: Function pointer *(ops->map_page) with type dma_addr_t (*)(struct device *, struct page *, unsigned long, size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 5736: Function pointer *(ops->sync_single_for_cpu) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 5776: Function pointer *(ops->sync_single_for_device) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 5696: Function pointer *(ops->unmap_page) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function external_allocated_data to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_switch_to_interrupt_context to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_switch_to_process_context to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 13127: Ignoring call via function pointer ldv_timer_instance_callback_4_2::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 13127: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 11871: Ignoring call via function pointer ldv_interrupt_instance_thread_0_3::arg0 for which no suitable target was found in line: (*arg0)(arg1, arg2); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 11871: Ignoring function call through function pointer *arg0: (*arg0)(arg1, arg2); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function __builtin_prefetch to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __napi_schedule to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 12781: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___1 = ldv_xmalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function pci_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            17487 (23% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  16122 (92%)
  Because of loop head:            1317 (8%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         48 (0%)
  Times precision was empty:       5740 (33%)
  Times precision was {false}:     202 (1%)
  Times result was cached:         10521 (60%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      1024 (6%)
  Times result was 'false':        191 (1%)
Number of strengthen sat checks:   0
Number of coverage checks:         8243
  BDD entailment checks:           5151
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       56
Number of predicates discovered:          7
Number of abstraction locations:          50
Max number of predicates per location:    6
Avg number of predicates per location:    3
Total predicates per abstraction:         23950
Max number of predicates per abstraction: 6
Avg number of predicates per abstraction: 19.54
Number of irrelevant predicates:          2270 (9%)
Number of preds handled by boolean abs:   2585 (11%)
  Total number of models for allsat:      1528
  Max number of models for allsat:        5
  Avg number of models for allsat:        1.49

Time for post operator:                  5.684s
  Time for path formula creation:        5.523s
Time for strengthen operator:            0.215s
Time for prec operator:                  6.975s
  Time for abstraction:                  6.300s (Max:     0.032s, Count: 17487)
    Boolean abstraction:                 1.321s
    Solving time:                        0.907s (Max:     0.013s)
    Model enumeration time:              0.150s
    Time for BDD construction:           0.171s (Max:     0.012s)
Time for merge operator:                 0.224s
Time for coverage check:                 0.085s
  Time for BDD entailment checks:        0.078s
Total time for SMT solver (w/o itp):     1.057s

Number of path formula cache hits:   48314 (57%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     4.944s

Total number of created targets for pointer analysis: 176
   Number of created targets for uf: *unsigned_int is 177


Number of BDD nodes:                               269
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        1951 (count: 18123, min: 0, max: 212, avg: 0.11)
Time for BDD node cleanup:                             0.026s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.402s
Automaton transfers with branching:                0
Automaton transfer successors:                        75075 (count: 75075, min: 1, max: 1, avg: 1.00) [1 x 75075]

CPA algorithm statistics
------------------------
Number of iterations:            56422
Max size of waitlist:            25
Average size of waitlist:        14
Number of computed successors:   61555
Max successors for one state:    2
Number of times merged:          1546
Number of times stopped:         4453
Number of times breaked:         48

Total time for CPA algorithm:        20.003s (Max:     1.679s)
  Time for choose from waitlist:      0.160s
  Time for precision adjustment:      8.344s
  Time for transfer relation:         9.214s
  Time for merge operator:            0.477s
  Time for stop operator:             0.472s
  Time for adding to reached set:     0.389s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   48
Avg. length of target path (in blocks):                2428 (count: 48, min: 24, max: 85, avg: 50.58)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   1.688s
  Counterexample analysis:                             1.142s (Max:     0.044s, Calls: 48)
    Refinement sat check:                              0.736s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.002s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.075s
  Precision update:                                    0.046s
  ARG update:                                          0.349s

Length of refined path (in blocks):                    1670 (count: 48, min: 9, max: 70, avg: 34.79)
Number of affected states:                              965 (count: 48, min: 4, max: 46, avg: 20.10)
Length (states) of path with itp 'true':                657 (count: 48, min: 4, max: 23, avg: 13.69)
Length (states) of path with itp non-trivial itp:       965 (count: 48, min: 4, max: 46, avg: 20.10)
Length (states) of path with itp 'false':                48 (count: 48, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 48, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:             917 (count: 48, min: 3, max: 45, avg: 19.10)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                48
Number of successful refinements:     48
Number of failed refinements:         0
Max. size of reached set before ref.: 2354
Max. size of reached set after ref.:  1061
Avg. size of reached set before ref.: 1674.42
Avg. size of reached set after ref.:  502.00

Total time for CEGAR algorithm:      21.995s
Time for refinements:                 1.963s
Average time for refinement:          0.040s
Max time for refinement:              0.096s

Code Coverage
-----------------------------
  Function coverage:      0.066
  Visited lines:          1226
  Total lines:            5291
  Line coverage:          0.232
  Visited conditions:     48
  Total conditions:       1136
  Condition coverage:     0.042

CPAchecker general statistics
-----------------------------
Number of program locations:     7540
Number of CFA edges:             8773
Number of relevant variables:    1087
Number of functions:             394
Number of loops:                 40
Size of reached set:             635
  Number of reached locations:   214 (3%)
    Avg states per location:     2
    Max states per location:     12 (at node N89)
  Number of reached functions:   26 (7%)
  Number of partitions:          633
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N4318 (before line 11740), Function main called from node N4306, stack depth 1 [1953bc95], stack [main]])
  Number of target states:       0
  Size of final wait list        13

Time for analysis setup:          8.213s
  Time for loading CPAs:          1.258s
  Time for loading parser:        0.709s
  Time for CFA construction:      6.072s
    Time for parsing file(s):     1.370s
    Time for AST to CFA:          2.385s
    Time for CFA sanity check:    0.527s
    Time for post-processing:     1.573s
      Time for var class.:        0.709s
Time for Analysis:               21.995s
CPU time for analysis:           22.000s
Total time for CPAchecker:       30.230s
Total CPU time for CPAchecker:   30.210s
Time for statistics:              0.112s

Time for Garbage Collector:       0.696s (in 44 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 83MB (    79 MiB) max;     53MB (    51 MiB) avg;     86MB (    82 MiB) peak
Used non-heap memory:             40MB (    38 MiB) max;     34MB (    32 MiB) avg;     40MB (    39 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        42MB (    40 MiB) max;     36MB (    34 MiB) avg
Total process virtual memory:   8086MB (  7711 MiB) max;   8070MB (  7696 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
