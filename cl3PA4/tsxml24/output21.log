scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-challenges/linux-3.14__complex_emg__linux-kernel-locking-spinlock__drivers-net-ethernet-natsemi-natsemi_true-unreach-call.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_m0f1fidn/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 5268: Dead code detected: return (1); (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

line 11081: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 11101: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 11104: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 11106: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 11175: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 11825: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 11838: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 11969: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 12609: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 12651: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 12652: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 12697: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 13188: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 13262: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 13278: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 13321: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 13373: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 13389: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 13453: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 13469: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 13521: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 13537: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 13555: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 5862: Function pointer *(ops->alloc) with type void *(*)(struct device *, size_t , dma_addr_t *, gfp_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 5903: Function pointer *(ops->free) with type void (*)(struct device *, size_t , void *, dma_addr_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 5657-5658: Function pointer *(ops->map_page) with type dma_addr_t (*)(struct device *, struct page *, unsigned long, size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 5736: Function pointer *(ops->sync_single_for_cpu) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 5776: Function pointer *(ops->sync_single_for_device) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 5696: Function pointer *(ops->unmap_page) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function external_allocated_data to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_switch_to_interrupt_context to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_switch_to_process_context to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 12357: Ignoring call via function pointer ldv_pci_instance_suspend_late_2_7::arg0 for which no suitable target was found in line: tmp = (*arg0)(arg1, arg2); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 12357: Ignoring function call through function pointer *arg0: tmp = (*arg0)(arg1, arg2); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 13127: Ignoring call via function pointer ldv_timer_instance_callback_4_2::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 13127: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 11871: Ignoring call via function pointer ldv_interrupt_instance_thread_0_3::arg0 for which no suitable target was found in line: (*arg0)(arg1, arg2); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 11871: Ignoring function call through function pointer *arg0: (*arg0)(arg1, arg2); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 12333: Ignoring call via function pointer ldv_pci_instance_shutdown_2_3::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 12333: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 12322: Ignoring call via function pointer ldv_pci_instance_resume_early_2_6::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 12322: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function ldv_pre_probe to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_enable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_set_master to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __pci_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            17052 (18% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  14703 (86%)
  Because of loop head:            2310 (14%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         39 (0%)
  Times precision was empty:       11115 (65%)
  Times precision was {false}:     383 (2%)
  Times result was cached:         5028 (29%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      526 (3%)
  Times result was 'false':        354 (2%)
Number of strengthen sat checks:   0
Number of coverage checks:         7084
  BDD entailment checks:           3984
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       56
Number of predicates discovered:          11
Number of abstraction locations:          21
Max number of predicates per location:    10
Avg number of predicates per location:    5
Total predicates per abstraction:         22167
Max number of predicates per abstraction: 10
Avg number of predicates per abstraction: 24.39
Number of irrelevant predicates:          14768 (67%)
Number of preds handled by boolean abs:   2101 (9%)
  Total number of models for allsat:      1121
  Max number of models for allsat:        8
  Avg number of models for allsat:        2.13

Time for post operator:                  5.406s
  Time for path formula creation:        5.188s
Time for strengthen operator:            0.240s
Time for prec operator:                  6.592s
  Time for abstraction:                  5.899s (Max:     0.037s, Count: 17052)
    Boolean abstraction:                 1.411s
    Solving time:                        1.142s (Max:     0.032s)
    Model enumeration time:              0.211s
    Time for BDD construction:           0.248s (Max:     0.026s)
Time for merge operator:                 0.231s
Time for coverage check:                 0.054s
  Time for BDD entailment checks:        0.052s
Total time for SMT solver (w/o itp):     1.354s

Number of path formula cache hits:   70509 (67%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     4.470s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               2388
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        2120 (count: 20682, min: 0, max: 202, avg: 0.10)
Time for BDD node cleanup:                             0.019s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.593s
  Time for transition matches:                         0.283s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.002s
Automaton transfers with branching:                0
Automaton transfer successors:                        92939 (count: 92939, min: 1, max: 1, avg: 1.00) [1 x 92939]

CPA algorithm statistics
------------------------
Number of iterations:            67279
Max size of waitlist:            365
Average size of waitlist:        131
Number of computed successors:   78077
Max successors for one state:    2
Number of times merged:          1550
Number of times stopped:         2293
Number of times breaked:         39

Total time for CPA algorithm:        20.263s (Max:     1.534s)
  Time for choose from waitlist:      0.171s
  Time for precision adjustment:      8.173s
  Time for transfer relation:         9.630s
  Time for merge operator:            0.383s
  Time for stop operator:             0.379s
  Time for adding to reached set:     0.437s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   39
Avg. length of target path (in blocks):                1008 (count: 39, min: 13, max: 43, avg: 25.85)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   1.351s
  Counterexample analysis:                             0.769s (Max:     0.034s, Calls: 39)
    Refinement sat check:                              0.479s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.009s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.078s
  Precision update:                                    0.054s
  ARG update:                                          0.395s

Length of refined path (in blocks):                     599 (count: 39, min: 9, max: 28, avg: 15.36)
Number of affected states:                              362 (count: 39, min: 4, max: 21, avg: 9.28)
Length (states) of path with itp 'true':                198 (count: 39, min: 4, max: 15, avg: 5.08)
Length (states) of path with itp non-trivial itp:       362 (count: 39, min: 4, max: 21, avg: 9.28)
Length (states) of path with itp 'false':                39 (count: 39, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           1 (count: 39, min: 0, max: 1, avg: 0.03)
Equal non-trivial interpolants along paths:             322 (count: 39, min: 3, max: 20, avg: 8.26)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                39
Number of successful refinements:     39
Number of failed refinements:         0
Max. size of reached set before ref.: 3439
Max. size of reached set after ref.:  1455
Avg. size of reached set before ref.: 2009.82
Avg. size of reached set after ref.:  157.18

Total time for CEGAR algorithm:      21.891s
Time for refinements:                 1.619s
Average time for refinement:          0.041s
Max time for refinement:              0.137s

Code Coverage
-----------------------------
  Function coverage:      0.180
  Visited lines:          1577
  Total lines:            5291
  Line coverage:          0.298
  Visited conditions:     174
  Total conditions:       1136
  Condition coverage:     0.153

CPAchecker general statistics
-----------------------------
Number of program locations:     7540
Number of CFA edges:             8773
Number of relevant variables:    1087
Number of functions:             394
Number of loops:                 40
Size of reached set:             3177
  Number of reached locations:   589 (8%)
    Avg states per location:     5
    Max states per location:     76 (at node N5742)
  Number of reached functions:   71 (18%)
  Number of partitions:          3147
    Avg size of partitions:      1
    Max size of partitions:      10 (with key [N4318 (before line 11740), Function main called from node N4306, stack depth 1 [1953bc95], stack [main]])
  Number of target states:       0
  Size of final wait list        341

Time for analysis setup:          8.338s
  Time for loading CPAs:          1.172s
  Time for loading parser:        0.767s
  Time for CFA construction:      6.236s
    Time for parsing file(s):     1.518s
    Time for AST to CFA:          2.297s
    Time for CFA sanity check:    0.526s
    Time for post-processing:     1.654s
      Time for var class.:        0.658s
Time for Analysis:               21.891s
CPU time for analysis:           21.890s
Total time for CPAchecker:       30.234s
Total CPU time for CPAchecker:   30.210s
Time for statistics:              0.180s

Time for Garbage Collector:       0.630s (in 44 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 81MB (    77 MiB) max;     53MB (    50 MiB) avg;     84MB (    80 MiB) peak
Used non-heap memory:             41MB (    39 MiB) max;     34MB (    32 MiB) avg;     41MB (    39 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        43MB (    41 MiB) max;     36MB (    34 MiB) avg
Total process virtual memory:   8083MB (  7709 MiB) max;   8069MB (  7695 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
