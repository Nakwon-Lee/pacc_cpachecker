scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-challenges/linux-3.14__complex_emg__linux-kernel-locking-spinlock__drivers-net-ethernet-natsemi-natsemi_true-unreach-call.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_9afvdr0r/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 5268: Dead code detected: return (1); (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

line 11081: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 11101: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 11104: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 11106: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 11175: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 11825: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 11838: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 11969: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 12609: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 12651: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 12652: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 12697: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 13188: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 13262: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 13278: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 13321: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 13373: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 13389: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 13453: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 13469: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 13521: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 13537: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 13555: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 5862: Function pointer *(ops->alloc) with type void *(*)(struct device *, size_t , dma_addr_t *, gfp_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 5903: Function pointer *(ops->free) with type void (*)(struct device *, size_t , void *, dma_addr_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 5657-5658: Function pointer *(ops->map_page) with type dma_addr_t (*)(struct device *, struct page *, unsigned long, size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 5736: Function pointer *(ops->sync_single_for_cpu) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 5776: Function pointer *(ops->sync_single_for_device) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 5696: Function pointer *(ops->unmap_page) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function external_allocated_data to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_switch_to_interrupt_context to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_switch_to_process_context to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 13127: Ignoring call via function pointer ldv_timer_instance_callback_4_2::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 13127: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 11871: Ignoring call via function pointer ldv_interrupt_instance_thread_0_3::arg0 for which no suitable target was found in line: (*arg0)(arg1, arg2); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 11871: Ignoring function call through function pointer *arg0: (*arg0)(arg1, arg2); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function __builtin_prefetch to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __napi_schedule to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 12781: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___1 = ldv_xmalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            16118 (23% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  14879 (92%)
  Because of loop head:            1195 (7%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         44 (0%)
  Times precision was empty:       5449 (34%)
  Times precision was {false}:     187 (1%)
  Times result was cached:         9648 (60%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      834 (5%)
  Times result was 'false':        173 (1%)
Number of strengthen sat checks:   0
Number of coverage checks:         7586
  BDD entailment checks:           4714
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       56
Number of predicates discovered:          5
Number of abstraction locations:          48
Max number of predicates per location:    4
Avg number of predicates per location:    3
Total predicates per abstraction:         19692
Max number of predicates per abstraction: 4
Avg number of predicates per abstraction: 19.29
Number of irrelevant predicates:          2091 (11%)
Number of preds handled by boolean abs:   1818 (9%)
  Total number of models for allsat:      1273
  Max number of models for allsat:        3
  Avg number of models for allsat:        1.53

Time for post operator:                  5.647s
  Time for path formula creation:        5.496s
Time for strengthen operator:            0.208s
Time for prec operator:                  6.948s
  Time for abstraction:                  6.236s (Max:     0.032s, Count: 16118)
    Boolean abstraction:                 1.220s
    Solving time:                        0.857s (Max:     0.013s)
    Model enumeration time:              0.171s
    Time for BDD construction:           0.120s (Max:     0.010s)
Time for merge operator:                 0.212s
Time for coverage check:                 0.060s
  Time for BDD entailment checks:        0.058s
Total time for SMT solver (w/o itp):     1.028s

Number of path formula cache hits:   44179 (56%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     4.966s

Total number of created targets for pointer analysis: 164
   Number of created targets for uf: *unsigned_int is 165


Number of BDD nodes:                               247
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        1735 (count: 16150, min: 0, max: 212, avg: 0.11)
Time for BDD node cleanup:                             0.006s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.474s
Automaton transfers with branching:                0
Automaton transfer successors:                        69405 (count: 69405, min: 1, max: 1, avg: 1.00) [1 x 69405]

CPA algorithm statistics
------------------------
Number of iterations:            52053
Max size of waitlist:            25
Average size of waitlist:        14
Number of computed successors:   56781
Max successors for one state:    2
Number of times merged:          1436
Number of times stopped:         4112
Number of times breaked:         44

Total time for CPA algorithm:        19.925s (Max:     1.706s)
  Time for choose from waitlist:      0.184s
  Time for precision adjustment:      8.234s
  Time for transfer relation:         9.391s
  Time for merge operator:            0.399s
  Time for stop operator:             0.393s
  Time for adding to reached set:     0.333s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   44
Avg. length of target path (in blocks):                2206 (count: 44, min: 24, max: 85, avg: 50.14)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   1.706s
  Counterexample analysis:                             1.208s (Max:     0.043s, Calls: 44)
    Refinement sat check:                              0.725s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.007s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.068s
  Precision update:                                    0.072s
  ARG update:                                          0.294s

Length of refined path (in blocks):                    1546 (count: 44, min: 9, max: 70, avg: 35.14)
Number of affected states:                              899 (count: 44, min: 4, max: 46, avg: 20.43)
Length (states) of path with itp 'true':                603 (count: 44, min: 4, max: 23, avg: 13.70)
Length (states) of path with itp non-trivial itp:       899 (count: 44, min: 4, max: 46, avg: 20.43)
Length (states) of path with itp 'false':                44 (count: 44, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 44, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:             855 (count: 44, min: 3, max: 45, avg: 19.43)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                44
Number of successful refinements:     44
Number of failed refinements:         0
Max. size of reached set before ref.: 2354
Max. size of reached set after ref.:  1061
Avg. size of reached set before ref.: 1656.25
Avg. size of reached set after ref.:  498.86

Total time for CEGAR algorithm:      21.918s
Time for refinements:                 1.965s
Average time for refinement:          0.044s
Max time for refinement:              0.098s

Code Coverage
-----------------------------
  Function coverage:      0.074
  Visited lines:          1282
  Total lines:            5291
  Line coverage:          0.242
  Visited conditions:     66
  Total conditions:       1136
  Condition coverage:     0.058

CPAchecker general statistics
-----------------------------
Number of program locations:     7540
Number of CFA edges:             8773
Number of relevant variables:    1087
Number of functions:             394
Number of loops:                 40
Size of reached set:             1571
  Number of reached locations:   281 (4%)
    Avg states per location:     5
    Max states per location:     32 (at node N88)
  Number of reached functions:   29 (7%)
  Number of partitions:          1552
    Avg size of partitions:      1
    Max size of partitions:      4 (with key [N4318 (before line 11740), Function main called from node N4306, stack depth 1 [1953bc95], stack [main]])
  Number of target states:       0
  Size of final wait list        16

Time for analysis setup:          8.313s
  Time for loading CPAs:          1.171s
  Time for loading parser:        0.706s
  Time for CFA construction:      6.310s
    Time for parsing file(s):     1.375s
    Time for AST to CFA:          2.493s
    Time for CFA sanity check:    0.531s
    Time for post-processing:     1.672s
      Time for var class.:        0.833s
Time for Analysis:               21.918s
CPU time for analysis:           21.910s
Total time for CPAchecker:       30.239s
Total CPU time for CPAchecker:   30.210s
Time for statistics:              0.143s

Time for Garbage Collector:       0.674s (in 41 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 80MB (    76 MiB) max;     53MB (    51 MiB) avg;     85MB (    81 MiB) peak
Used non-heap memory:             41MB (    39 MiB) max;     34MB (    33 MiB) avg;     41MB (    39 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        43MB (    41 MiB) max;     36MB (    34 MiB) avg
Total process virtual memory:   8083MB (  7709 MiB) max;   8069MB (  7696 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
