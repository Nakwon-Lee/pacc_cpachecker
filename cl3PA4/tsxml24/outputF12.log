scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-challenges/linux-3.14__complex_emg__linux-kernel-locking-spinlock__drivers-net-ethernet-natsemi-natsemi_true-unreach-call.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_wkf217d3/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 5268: Dead code detected: return (1); (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

line 11081: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 11101: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 11104: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 11106: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 11175: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 11825: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 11838: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 11969: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 12609: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 12651: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 12652: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 12697: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 13188: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 13262: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 13278: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 13321: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 13373: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 13389: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 13453: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 13469: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 13521: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 13537: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 13555: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 5862: Function pointer *(ops->alloc) with type void *(*)(struct device *, size_t , dma_addr_t *, gfp_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 5903: Function pointer *(ops->free) with type void (*)(struct device *, size_t , void *, dma_addr_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 5657-5658: Function pointer *(ops->map_page) with type dma_addr_t (*)(struct device *, struct page *, unsigned long, size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 5736: Function pointer *(ops->sync_single_for_cpu) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 5776: Function pointer *(ops->sync_single_for_device) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 5696: Function pointer *(ops->unmap_page) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function external_allocated_data to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __pci_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_switch_to_interrupt_context to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_switch_to_process_context to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strlcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 12132: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp = ldv_xmalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function disable_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function enable_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function eth_mac_addr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 5650: Return type of function __builtin_unreachable is void, but result is used as type int: __builtin_unreachable(); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function __builtin_unreachable to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function debug_dma_map_page to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function eth_validate_addr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_remove_file to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function unregister_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __might_sleep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function msleep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netif_carrier_off to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 5686: Return type of function __builtin_unreachable is void, but result is used as type int: __builtin_unreachable(); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

line 5696: Ignoring function call through function pointer *(ops->unmap_page): (*(ops->unmap_page))(dev, addr, size, dir, attrs); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function debug_dma_unmap_page to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function consume_skb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 5312: Return type of function __builtin_unreachable is void, but result is used as type int: __builtin_unreachable(); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function debug_dma_free_coherent to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 5903: Ignoring function call through function pointer *(ops->free): (*(ops->free))(dev, size, vaddr, bus, attrs); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function pci_release_regions to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iounmap to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 12333: Ignoring call via function pointer ldv_pci_instance_shutdown_2_3::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 12333: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function rtnl_lock to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rtnl_unlock to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netif_device_attach to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 10735: Return type of function __builtin_unreachable is void, but result is used as type int: __builtin_unreachable(); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function pci_enable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 6052: Return type of function __builtin_unreachable is void, but result is used as type int: __builtin_unreachable(); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function round_jiffies to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mod_timer to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netif_carrier_on to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            969681 (24% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  832953 (86%)
  Because of loop head:            86172 (9%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         50556 (5%)
  Times precision was empty:       112214 (12%)
  Times precision was {false}:     1946 (0%)
  Times result was cached:         832450 (86%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      23071 (2%)
  Times result was 'false':        155511 (16%)
Number of strengthen sat checks:   0
Number of coverage checks:         300864
  BDD entailment checks:           168636
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       56
Number of predicates discovered:          46
Number of abstraction locations:          475
Max number of predicates per location:    30
Avg number of predicates per location:    16
Total predicates per abstraction:         13741870
Max number of predicates per abstraction: 30
Avg number of predicates per abstraction: 549.30
Number of irrelevant predicates:          2699586 (20%)
Number of preds handled by boolean abs:   259371 (2%)
  Total number of models for allsat:      36707
  Max number of models for allsat:        32
  Avg number of models for allsat:        1.59

Time for post operator:                 20.726s
  Time for path formula creation:       19.148s
Time for strengthen operator:            3.245s
Time for prec operator:                526.276s
  Time for abstraction:                515.096s (Max:     0.300s, Count: 969681)
    Boolean abstraction:                27.487s
    Solving time:                       19.908s (Max:     0.016s)
    Model enumeration time:              2.845s
    Time for BDD construction:           1.328s (Max:     0.012s)
Time for merge operator:                 0.585s
Time for coverage check:                 0.307s
  Time for BDD entailment checks:        0.253s
Total time for SMT solver (w/o itp):    22.753s

Number of path formula cache hits:   4714609 (97%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     6.052s

Total number of created targets for pointer analysis: 1078
   Number of created targets for uf: *signed_int is 49
   Number of created targets for uf: *unsigned_int is 31


Number of BDD nodes:                               58984
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       82514 (count: 456253, min: 0, max: 1602, avg: 0.18)
Time for BDD node cleanup:                             0.113s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  6.964s
  Time for transition matches:                         3.393s
  Time for transition assertions:                      0.017s
  Time for transition actions:                         0.048s
Automaton transfers with branching:                0
Automaton transfer successors:                      3996007 (count: 3996007, min: 1, max: 1, avg: 1.00) [1 x 3996007]

CPA algorithm statistics
------------------------
Number of iterations:            3155568
Max size of waitlist:            132
Average size of waitlist:        58
Number of computed successors:   3549050
Max successors for one state:    2
Number of times merged:          66114
Number of times stopped:         124916
Number of times breaked:         2104

Total time for CPA algorithm:       644.708s (Max:     1.615s)
  Time for choose from waitlist:      1.495s
  Time for precision adjustment:    547.860s
  Time for transfer relation:        74.637s
  Time for merge operator:            1.994s
  Time for stop operator:             4.951s
  Time for adding to reached set:     5.642s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   2104
Avg. length of target path (in blocks):              614693 (count: 2104, min: 27, max: 391, avg: 292.15)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                 237.308s
  Counterexample analysis:                           222.135s (Max:     0.285s, Calls: 2104)
    Refinement sat check:                             60.311s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.298s
  Error path post-processing:                          0.000s
  Predicate creation:                                  1.789s
  Precision update:                                    5.865s
  ARG update:                                          4.846s

Length of refined path (in blocks):                  562227 (count: 2104, min: 9, max: 390, avg: 267.22)
Number of affected states:                           259795 (count: 2104, min: 4, max: 389, avg: 123.48)
Length (states) of path with itp 'true':             300328 (count: 2104, min: 0, max: 276, avg: 142.74)
Length (states) of path with itp non-trivial itp:    259795 (count: 2104, min: 4, max: 389, avg: 123.48)
Length (states) of path with itp 'false':              1545 (count: 2104, min: 0, max: 1, avg: 0.73)
Different non-trivial interpolants along paths:         800 (count: 2104, min: 0, max: 5, avg: 0.38)
Equal non-trivial interpolants along paths:          256891 (count: 2104, min: 3, max: 387, avg: 122.10)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                2104
Number of successful refinements:     2104
Number of failed refinements:         0
Max. size of reached set before ref.: 5379
Max. size of reached set after ref.:  2555
Avg. size of reached set before ref.: 2648.14
Avg. size of reached set after ref.:  1095.89

Total time for CEGAR algorithm:     891.687s
Time for refinements:               245.479s
Average time for refinement:          0.116s
Max time for refinement:              0.427s

Code Coverage
-----------------------------
  Function coverage:      0.203
  Visited lines:          1931
  Total lines:            5291
  Line coverage:          0.365
  Visited conditions:     236
  Total conditions:       1136
  Condition coverage:     0.208

CPAchecker general statistics
-----------------------------
Number of program locations:     7540
Number of CFA edges:             8773
Number of relevant variables:    1087
Number of functions:             394
Number of loops:                 40
Size of reached set:             2700
  Number of reached locations:   989 (13%)
    Avg states per location:     2
    Max states per location:     39 (at node N5742)
  Number of reached functions:   80 (20%)
  Number of partitions:          2686
    Avg size of partitions:      1
    Max size of partitions:      5 (with key [N4318 (before line 11740), Function main called from node N4306, stack depth 1 [549ac12c], stack [main]])
  Number of target states:       0
  Size of final wait list        72

Time for analysis setup:          8.540s
  Time for loading CPAs:          1.258s
  Time for loading parser:        0.802s
  Time for CFA construction:      6.356s
    Time for parsing file(s):     1.604s
    Time for AST to CFA:          2.402s
    Time for CFA sanity check:    0.540s
    Time for post-processing:     1.539s
      Time for var class.:        0.762s
Time for Analysis:              891.687s
CPU time for analysis:          891.590s
Total time for CPAchecker:      900.244s
Total CPU time for CPAchecker:  900.120s
Time for statistics:              0.197s

Time for Garbage Collector:      26.776s (in 4359 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                164MB (   157 MiB) max;     87MB (    83 MiB) avg;    171MB (   163 MiB) peak
Used non-heap memory:             41MB (    39 MiB) max;     40MB (    38 MiB) avg;     41MB (    39 MiB) peak
Allocated heap memory:           182MB (   173 MiB) max;    137MB (   131 MiB) avg
Allocated non-heap memory:        43MB (    41 MiB) max;     42MB (    40 MiB) avg
Total process virtual memory:   8356MB (  7969 MiB) max;   8208MB (  7827 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
