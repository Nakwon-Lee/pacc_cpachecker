scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-challenges/linux-3.14__complex_emg__linux-kernel-locking-spinlock__drivers-net-ethernet-natsemi-natsemi_true-unreach-call.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_iufsvb6l/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 5268: Dead code detected: return (1); (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

line 11081: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 11101: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 11104: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 11106: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 11175: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 11825: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 11838: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 11969: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 12609: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 12651: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 12652: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 12697: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 13188: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 13262: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 13278: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 13321: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 13373: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 13389: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 13453: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 13469: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 13521: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 13537: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 13555: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 5862: Function pointer *(ops->alloc) with type void *(*)(struct device *, size_t , dma_addr_t *, gfp_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 5903: Function pointer *(ops->free) with type void (*)(struct device *, size_t , void *, dma_addr_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 5657-5658: Function pointer *(ops->map_page) with type dma_addr_t (*)(struct device *, struct page *, unsigned long, size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 5736: Function pointer *(ops->sync_single_for_cpu) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 5776: Function pointer *(ops->sync_single_for_device) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 5696: Function pointer *(ops->unmap_page) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function external_allocated_data to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __pci_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_switch_to_interrupt_context to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_switch_to_process_context to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            15387 (27% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  12250 (80%)
  Because of loop head:            1739 (11%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         1398 (9%)
  Times precision was empty:       3292 (21%)
  Times precision was {false}:     226 (1%)
  Times result was cached:         10262 (67%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      1607 (10%)
  Times result was 'false':        2162 (14%)
Number of strengthen sat checks:   0
Number of coverage checks:         2145
  BDD entailment checks:           1989
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       56
Number of predicates discovered:          20
Number of abstraction locations:          77
Max number of predicates per location:    18
Avg number of predicates per location:    11
Total predicates per abstraction:         125452
Max number of predicates per abstraction: 18
Avg number of predicates per abstraction: 68.44
Number of irrelevant predicates:          33595 (27%)
Number of preds handled by boolean abs:   12107 (10%)
  Total number of models for allsat:      1578
  Max number of models for allsat:        6
  Avg number of models for allsat:        0.98

Time for post operator:                  1.483s
  Time for path formula creation:        1.406s
Time for strengthen operator:            0.147s
Time for prec operator:                 12.017s
  Time for abstraction:                 11.510s (Max:     0.026s, Count: 15387)
    Boolean abstraction:                 1.902s
    Solving time:                        1.136s (Max:     0.015s)
    Model enumeration time:              0.156s
    Time for BDD construction:           0.193s (Max:     0.012s)
Time for merge operator:                 0.049s
Time for coverage check:                 0.049s
  Time for BDD entailment checks:        0.048s
Total time for SMT solver (w/o itp):     1.292s

Number of path formula cache hits:   65644 (94%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     1.134s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               1861
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        5257 (count: 17096, min: 0, max: 641, avg: 0.31)
Time for BDD node cleanup:                             0.009s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.523s
  Time for transition matches:                         0.150s
  Time for transition assertions:                      0.001s
  Time for transition actions:                         0.010s
Automaton transfers with branching:                0
Automaton transfer successors:                        57392 (count: 57392, min: 1, max: 1, avg: 1.00) [1 x 57392]

CPA algorithm statistics
------------------------
Number of iterations:            44301
Max size of waitlist:            59
Average size of waitlist:        22
Number of computed successors:   49778
Max successors for one state:    2
Number of times merged:          78
Number of times stopped:         961
Number of times breaked:         86

Total time for CPA algorithm:        18.313s (Max:     1.049s)
  Time for choose from waitlist:      0.158s
  Time for precision adjustment:     12.861s
  Time for transfer relation:         4.065s
  Time for merge operator:            0.102s
  Time for stop operator:             0.288s
  Time for adding to reached set:     0.242s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   86
Avg. length of target path (in blocks):                6814 (count: 86, min: 27, max: 100, avg: 79.23)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   3.024s
  Counterexample analysis:                             2.466s (Max:     0.056s, Calls: 86)
    Refinement sat check:                              1.272s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.024s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.118s
  Precision update:                                    0.093s
  ARG update:                                          0.192s

Length of refined path (in blocks):                    5975 (count: 86, min: 9, max: 98, avg: 69.48)
Number of affected states:                             4532 (count: 86, min: 4, max: 97, avg: 52.70)
Length (states) of path with itp 'true':               1357 (count: 86, min: 0, max: 52, avg: 15.78)
Length (states) of path with itp non-trivial itp:      4532 (count: 86, min: 4, max: 97, avg: 52.70)
Length (states) of path with itp 'false':                31 (count: 86, min: 0, max: 1, avg: 0.36)
Different non-trivial interpolants along paths:          55 (count: 86, min: 0, max: 1, avg: 0.64)
Equal non-trivial interpolants along paths:            4391 (count: 86, min: 3, max: 95, avg: 51.06)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                86
Number of successful refinements:     86
Number of failed refinements:         0
Max. size of reached set before ref.: 1171
Max. size of reached set after ref.:  570
Avg. size of reached set before ref.: 694.87
Avg. size of reached set after ref.:  159.97

Total time for CEGAR algorithm:      21.622s
Time for refinements:                 3.290s
Average time for refinement:          0.038s
Max time for refinement:              0.120s

Code Coverage
-----------------------------
  Function coverage:      0.076
  Visited lines:          1239
  Total lines:            5291
  Line coverage:          0.234
  Visited conditions:     40
  Total conditions:       1136
  Condition coverage:     0.035

CPAchecker general statistics
-----------------------------
Number of program locations:     7540
Number of CFA edges:             8773
Number of relevant variables:    1087
Number of functions:             394
Number of loops:                 40
Size of reached set:             654
  Number of reached locations:   231 (3%)
    Avg states per location:     2
    Max states per location:     14 (at node N5742)
  Number of reached functions:   30 (8%)
  Number of partitions:          647
    Avg size of partitions:      1
    Max size of partitions:      4 (with key [N4318 (before line 11740), Function main called from node N4306, stack depth 1 [1953bc95], stack [main]])
  Number of target states:       0
  Size of final wait list        29

Time for analysis setup:          8.636s
  Time for loading CPAs:          1.216s
  Time for loading parser:        0.752s
  Time for CFA construction:      6.511s
    Time for parsing file(s):     1.527s
    Time for AST to CFA:          2.535s
    Time for CFA sanity check:    0.568s
    Time for post-processing:     1.646s
      Time for var class.:        0.767s
Time for Analysis:               21.622s
CPU time for analysis:           21.610s
Total time for CPAchecker:       30.262s
Total CPU time for CPAchecker:   30.240s
Time for statistics:              0.135s

Time for Garbage Collector:       0.565s (in 58 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 74MB (    71 MiB) max;     50MB (    47 MiB) avg;     81MB (    77 MiB) peak
Used non-heap memory:             40MB (    38 MiB) max;     34MB (    32 MiB) avg;     40MB (    38 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        41MB (    39 MiB) max;     36MB (    34 MiB) avg
Total process virtual memory:   8086MB (  7711 MiB) max;   8070MB (  7696 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
