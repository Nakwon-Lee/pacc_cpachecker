scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-challenges/linux-3.14__complex_emg__linux-kernel-locking-spinlock__drivers-net-ethernet-natsemi-natsemi_true-unreach-call.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_qkzjym2x/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 5268: Dead code detected: return (1); (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

line 11081: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 11101: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 11104: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 11106: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 11175: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 11825: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 11838: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 11969: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 12609: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 12651: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 12652: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 12697: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 13188: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 13262: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 13278: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 13321: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 13373: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 13389: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 13453: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 13469: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 13521: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 13537: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 13555: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 5862: Function pointer *(ops->alloc) with type void *(*)(struct device *, size_t , dma_addr_t *, gfp_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 5903: Function pointer *(ops->free) with type void (*)(struct device *, size_t , void *, dma_addr_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 5657-5658: Function pointer *(ops->map_page) with type dma_addr_t (*)(struct device *, struct page *, unsigned long, size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 5736: Function pointer *(ops->sync_single_for_cpu) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 5776: Function pointer *(ops->sync_single_for_device) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 5696: Function pointer *(ops->unmap_page) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function external_allocated_data to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_switch_to_interrupt_context to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_switch_to_process_context to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 13127: Ignoring call via function pointer ldv_timer_instance_callback_4_2::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 13127: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 11871: Ignoring call via function pointer ldv_interrupt_instance_thread_0_3::arg0 for which no suitable target was found in line: (*arg0)(arg1, arg2); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 11871: Ignoring function call through function pointer *arg0: (*arg0)(arg1, arg2); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function __builtin_prefetch to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __napi_schedule to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 12781: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___1 = ldv_xmalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function pci_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __pci_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __ldv_spin_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function disable_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function round_jiffies to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mod_timer to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 5686: Return type of function __builtin_unreachable is void, but result is used as type int: __builtin_unreachable(); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function __builtin_unreachable to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 5696: Ignoring function call through function pointer *(ops->unmap_page): (*(ops->unmap_page))(dev, addr, size, dir, attrs); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function debug_dma_unmap_page to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function consume_skb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __netdev_alloc_skb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function enable_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 5650: Return type of function __builtin_unreachable is void, but result is used as type int: __builtin_unreachable(); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function debug_dma_map_page to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netif_carrier_off to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netif_carrier_on to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            1240510 (28% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  980257 (79%)
  Because of loop head:            191581 (15%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         68672 (6%)
  Times precision was empty:       238992 (19%)
  Times precision was {false}:     1532 (0%)
  Times result was cached:         973494 (78%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      26492 (2%)
  Times result was 'false':        128804 (10%)
Number of strengthen sat checks:   0
Number of coverage checks:         753286
  BDD entailment checks:           610890
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       56
Number of predicates discovered:          37
Number of abstraction locations:          275
Max number of predicates per location:    28
Avg number of predicates per location:    13
Total predicates per abstraction:         15951764
Max number of predicates per abstraction: 28
Avg number of predicates per abstraction: 569.22
Number of irrelevant predicates:          2729445 (17%)
Number of preds handled by boolean abs:   309732 (2%)
  Total number of models for allsat:      44884
  Max number of models for allsat:        30
  Avg number of models for allsat:        1.69

Time for post operator:                 27.052s
  Time for path formula creation:       24.959s
Time for strengthen operator:            4.319s
Time for prec operator:                621.169s
  Time for abstraction:                608.274s (Max:     0.531s, Count: 1240510)
    Boolean abstraction:                37.404s
    Solving time:                       26.921s (Max:     0.022s)
    Model enumeration time:              4.164s
    Time for BDD construction:           1.815s (Max:     0.019s)
Time for merge operator:                 0.768s
Time for coverage check:                 0.908s
  Time for BDD entailment checks:        0.764s
Total time for SMT solver (w/o itp):    31.085s

Number of path formula cache hits:   5383033 (96%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    12.710s

Total number of created targets for pointer analysis: 3892
   Number of created targets for uf: *signed_int is 657
   Number of created targets for uf: *unsigned_int is 23


Number of BDD nodes:                               52930
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       95326 (count: 1039896, min: 0, max: 1288, avg: 0.09)
Time for BDD node cleanup:                             0.197s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  7.899s
  Time for transition matches:                         3.820s
  Time for transition assertions:                      0.012s
  Time for transition actions:                         0.052s
Automaton transfers with branching:                0
Automaton transfer successors:                      4489450 (count: 4489450, min: 1, max: 1, avg: 1.00) [1 x 4489450]

CPA algorithm statistics
------------------------
Number of iterations:            3582842
Max size of waitlist:            80
Average size of waitlist:        38
Number of computed successors:   3967053
Max successors for one state:    2
Number of times merged:          71198
Number of times stopped:         230384
Number of times breaked:         1901

Total time for CPA algorithm:       776.538s (Max:     1.936s)
  Time for choose from waitlist:      1.694s
  Time for precision adjustment:    647.680s
  Time for transfer relation:        97.972s
  Time for merge operator:            3.156s
  Time for stop operator:             8.537s
  Time for adding to reached set:     7.194s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   1901
Avg. length of target path (in blocks):              293585 (count: 1901, min: 18, max: 269, avg: 154.44)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  99.912s
  Counterexample analysis:                            87.061s (Max:     0.137s, Calls: 1901)
    Refinement sat check:                             34.249s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.152s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.771s
  Precision update:                                    4.186s
  ARG update:                                          6.326s

Length of refined path (in blocks):                  257356 (count: 1900, min: 9, max: 231, avg: 135.45)
Number of affected states:                            88180 (count: 1900, min: 4, max: 230, avg: 46.41)
Length (states) of path with itp 'true':             167276 (count: 1900, min: 0, max: 150, avg: 88.04)
Length (states) of path with itp non-trivial itp:     88180 (count: 1900, min: 4, max: 230, avg: 46.41)
Length (states) of path with itp 'false':               810 (count: 1900, min: 0, max: 1, avg: 0.43)
Different non-trivial interpolants along paths:        1108 (count: 1900, min: 0, max: 2, avg: 0.58)
Equal non-trivial interpolants along paths:           85172 (count: 1900, min: 3, max: 228, avg: 44.83)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                1901
Number of successful refinements:     1900
Number of failed refinements:         0
Max. size of reached set before ref.: 15047
Max. size of reached set after ref.:  10631
Avg. size of reached set before ref.: 5386.57
Avg. size of reached set after ref.:  3490.53

Total time for CEGAR algorithm:     891.369s
Time for refinements:               110.120s
Average time for refinement:          0.057s
Max time for refinement:              0.166s

Code Coverage
-----------------------------
  Function coverage:      0.216
  Visited lines:          1732
  Total lines:            5291
  Line coverage:          0.327
  Visited conditions:     150
  Total conditions:       1136
  Condition coverage:     0.132

CPAchecker general statistics
-----------------------------
Number of program locations:     7540
Number of CFA edges:             8773
Number of relevant variables:    1087
Number of functions:             394
Number of loops:                 40
Size of reached set:             7700
  Number of reached locations:   777 (10%)
    Avg states per location:     9
    Max states per location:     157 (at node N5741)
  Number of reached functions:   85 (22%)
  Number of partitions:          7625
    Avg size of partitions:      1
    Max size of partitions:      15 (with key [N4318 (before line 11740), Function main called from node N4306, stack depth 1 [1953bc95], stack [main]])
  Number of target states:       1
  Size of final wait list        48

Time for analysis setup:          8.877s
  Time for loading CPAs:          1.321s
  Time for loading parser:        0.783s
  Time for CFA construction:      6.602s
    Time for parsing file(s):     1.419s
    Time for AST to CFA:          2.479s
    Time for CFA sanity check:    0.612s
    Time for post-processing:     1.859s
      Time for var class.:        0.770s
Time for Analysis:              891.369s
CPU time for analysis:          891.270s
Total time for CPAchecker:      900.253s
Total CPU time for CPAchecker:  900.130s
Time for statistics:              0.288s

Time for Garbage Collector:      32.464s (in 2964 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                284MB (   271 MiB) max;    162MB (   155 MiB) avg;    291MB (   277 MiB) peak
Used non-heap memory:             41MB (    39 MiB) max;     40MB (    39 MiB) avg;     42MB (    40 MiB) peak
Allocated heap memory:           293MB (   280 MiB) max;    237MB (   226 MiB) avg
Allocated non-heap memory:        44MB (    42 MiB) max;     43MB (    41 MiB) avg
Total process virtual memory:   8420MB (  8030 MiB) max;   8327MB (  7941 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
