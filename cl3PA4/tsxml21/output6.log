scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-challenges/linux-3.14__complex_emg__linux-drivers-clk1__drivers-net-ethernet-neterion-vxge-vxge_true-unreach-call.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_0pstk1c0/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 8115: Dead code detected: Goto: case_1 (CFACreationUtils.addEdgeToCFA, INFO)

line 8120: Dead code detected: Goto: case_2 (CFACreationUtils.addEdgeToCFA, INFO)

line 8130: Dead code detected: Goto: case_8 (CFACreationUtils.addEdgeToCFA, INFO)

line 8134: Dead code detected: Goto: switch_default (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label case_8 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_default is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_1 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_2 is not reachable. (CFAFunctionBuilder.leave, INFO)

line 8763: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 8895: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

line 14924: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

line 19797: Dead code detected: return (1); (CFACreationUtils.addEdgeToCFA, INFO)

line 20665: Dead code detected: Goto: case_1 (CFACreationUtils.addEdgeToCFA, INFO)

line 20688: Dead code detected: Goto: case_1___0 (CFACreationUtils.addEdgeToCFA, INFO)

line 20693: Dead code detected: Goto: case_2 (CFACreationUtils.addEdgeToCFA, INFO)

line 20703: Dead code detected: Goto: case_8 (CFACreationUtils.addEdgeToCFA, INFO)

line 20707: Dead code detected: Goto: switch_default (CFACreationUtils.addEdgeToCFA, INFO)

line 20670: Dead code detected: Goto: case_2___0 (CFACreationUtils.addEdgeToCFA, INFO)

line 20732: Dead code detected: Goto: case_1___1 (CFACreationUtils.addEdgeToCFA, INFO)

line 20737: Dead code detected: Goto: case_2___1 (CFACreationUtils.addEdgeToCFA, INFO)

line 20747: Dead code detected: Goto: case_8___0 (CFACreationUtils.addEdgeToCFA, INFO)

line 20751: Dead code detected: Goto: switch_default___0 (CFACreationUtils.addEdgeToCFA, INFO)

line 20776: Dead code detected: Goto: case_1___2 (CFACreationUtils.addEdgeToCFA, INFO)

line 20781: Dead code detected: Goto: case_2___2 (CFACreationUtils.addEdgeToCFA, INFO)

line 20791: Dead code detected: Goto: case_8___1 (CFACreationUtils.addEdgeToCFA, INFO)

line 20795: Dead code detected: Goto: switch_default___1 (CFACreationUtils.addEdgeToCFA, INFO)

line 20680: Dead code detected: Goto: case_8___2 (CFACreationUtils.addEdgeToCFA, INFO)

line 20820: Dead code detected: Goto: case_1___3 (CFACreationUtils.addEdgeToCFA, INFO)

line 20825: Dead code detected: Goto: case_2___3 (CFACreationUtils.addEdgeToCFA, INFO)

line 20835: Dead code detected: Goto: case_8___3 (CFACreationUtils.addEdgeToCFA, INFO)

line 20839: Dead code detected: Goto: switch_default___2 (CFACreationUtils.addEdgeToCFA, INFO)

line 20684: Dead code detected: Goto: switch_default___3 (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label case_4___0 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_4___3 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_8___3 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_8___2 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_8___1 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_8 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_8___0 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_4 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_1 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_2 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_default is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_2___2 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_2___3 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_2___0 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_2___1 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_1___1 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_1___2 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_1___3 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_1___0 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

line 28440: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 28460: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 28463: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 28465: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 28549: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 29463: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 29476: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 30622: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 30664: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 30665: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 30710: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 31331: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 31380: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 31423: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 31442: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 31461: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 31480: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 31496: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 31512: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 31528: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 31544: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 31561: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 31577: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 31631: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 20030: Function pointer *(ops->map_page) with type dma_addr_t (*)(struct device *, struct page *, unsigned long, size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 8313-8314: Function pointer *(ops->map_page) with type dma_addr_t (*)(struct device *, struct page *, unsigned long, size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 8378: Function pointer *(ops->mapping_error) with type int (*)(struct device *, dma_addr_t ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 20105: Function pointer *(ops->sync_single_for_cpu) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 20145: Function pointer *(ops->sync_single_for_device) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 20065: Function pointer *(ops->unmap_page) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 8352: Function pointer *(ops->unmap_page) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 17033: Function pointer *(ring->callback) with type enum vxge_hw_status (*)(struct __vxge_hw_ring *, void *, u8 , void *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function external_allocated_data to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_alloc_flags to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_after_alloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_switch_to_interrupt_context to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 15496: Ignoring function call through function pointer *(hldev->uld_callbacks->crit_err): (*(hldev->uld_callbacks->crit_err))(hldev, type, (u64 )vp_id); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 15540: Ignoring function call through function pointer *(hldev->uld_callbacks->link_up): (*(hldev->uld_callbacks->link_up))(hldev); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function netdev_notice to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netif_carrier_off to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netif_carrier_on to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netpoll_trap to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __netif_schedule to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 15518: Ignoring function call through function pointer *(hldev->uld_callbacks->link_down): (*(hldev->uld_callbacks->link_down))(hldev); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function ldv_switch_to_process_context to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            12519 (22% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  11612 (93%)
  Because of loop head:            844 (7%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         63 (1%)
  Times precision was empty:       9790 (78%)
  Times precision was {false}:     144 (1%)
  Times result was cached:         2087 (17%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      498 (4%)
  Times result was 'false':        349 (3%)
Number of strengthen sat checks:   0
Number of coverage checks:         6413
  BDD entailment checks:           1777
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       66
Number of predicates discovered:          9
Number of abstraction locations:          68
Max number of predicates per location:    7
Avg number of predicates per location:    2
Total predicates per abstraction:         7360
Max number of predicates per abstraction: 7
Avg number of predicates per abstraction: 11.46
Number of irrelevant predicates:          3006 (41%)
Number of preds handled by boolean abs:   1443 (20%)
  Total number of models for allsat:      525
  Max number of models for allsat:        6
  Avg number of models for allsat:        1.05

Time for post operator:                  5.384s
  Time for path formula creation:        5.225s
Time for strengthen operator:            0.167s
Time for prec operator:                  4.164s
  Time for abstraction:                  3.547s (Max:     0.029s, Count: 12519)
    Boolean abstraction:                 0.924s
    Solving time:                        0.576s (Max:     0.017s)
    Model enumeration time:              0.067s
    Time for BDD construction:           0.145s (Max:     0.012s)
Time for merge operator:                 0.489s
Time for coverage check:                 0.036s
  Time for BDD entailment checks:        0.028s
Total time for SMT solver (w/o itp):     0.643s

Number of path formula cache hits:   46289 (68%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     4.649s

Total number of created targets for pointer analysis: 4297
   Number of created targets for uf: *unsigned_long_long_int is 73
   Number of created targets for uf: *unsigned_int is 35


Number of BDD nodes:                               527
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        1254 (count: 15470, min: 0, max: 420, avg: 0.08)
Time for BDD node cleanup:                             0.027s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.418s
Automaton transfers with branching:                0
Automaton transfer successors:                        57887 (count: 57887, min: 1, max: 1, avg: 1.00) [1 x 57887]

CPA algorithm statistics
------------------------
Number of iterations:            42514
Max size of waitlist:            65
Average size of waitlist:        44
Number of computed successors:   47442
Max successors for one state:    2
Number of times merged:          2318
Number of times stopped:         3554
Number of times breaked:         30

Total time for CPA algorithm:        16.109s (Max:     3.959s)
  Time for choose from waitlist:      0.153s
  Time for precision adjustment:      5.270s
  Time for transfer relation:         8.431s
  Time for merge operator:            0.691s
  Time for stop operator:             0.403s
  Time for adding to reached set:     0.371s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   30
Avg. length of target path (in blocks):                2271 (count: 30, min: 27, max: 88, avg: 75.70)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   1.602s
  Counterexample analysis:                             1.114s (Max:     0.061s, Calls: 30)
    Refinement sat check:                              0.659s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.068s
  Precision update:                                    0.043s
  ARG update:                                          0.306s

Length of refined path (in blocks):                    1695 (count: 30, min: 9, max: 82, avg: 56.50)
Number of affected states:                              777 (count: 30, min: 4, max: 81, avg: 25.90)
Length (states) of path with itp 'true':                888 (count: 30, min: 0, max: 52, avg: 29.60)
Length (states) of path with itp non-trivial itp:       777 (count: 30, min: 4, max: 81, avg: 25.90)
Length (states) of path with itp 'false':                23 (count: 30, min: 0, max: 1, avg: 0.77)
Different non-trivial interpolants along paths:           7 (count: 30, min: 0, max: 1, avg: 0.23)
Equal non-trivial interpolants along paths:             740 (count: 30, min: 3, max: 79, avg: 24.67)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                30
Number of successful refinements:     30
Number of failed refinements:         0
Max. size of reached set before ref.: 8168
Max. size of reached set after ref.:  546
Avg. size of reached set before ref.: 1722.80
Avg. size of reached set after ref.:  296.30

Total time for CEGAR algorithm:      17.964s
Time for refinements:                 1.843s
Average time for refinement:          0.061s
Max time for refinement:              0.127s

Code Coverage
-----------------------------
  Function coverage:      0.065
  Visited lines:          1578
  Total lines:            13206
  Line coverage:          0.119
  Visited conditions:     70
  Total conditions:       3066
  Condition coverage:     0.023

CPAchecker general statistics
-----------------------------
Number of program locations:     17540
Number of CFA edges:             20007
Number of relevant variables:    2935
Number of functions:             565
Number of loops:                 178
Size of reached set:             745
  Number of reached locations:   298 (2%)
    Avg states per location:     2
    Max states per location:     13 (at node N17491)
  Number of reached functions:   37 (7%)
  Number of partitions:          735
    Avg size of partitions:      1
    Max size of partitions:      5 (with key [N15667 (before line 29348), Function main called from node N15652, stack depth 1 [5da41d02], stack [main]])
  Number of target states:       0
  Size of final wait list        45

Time for analysis setup:         12.271s
  Time for loading CPAs:          1.436s
  Time for loading parser:        0.811s
  Time for CFA construction:      9.842s
    Time for parsing file(s):     1.846s
    Time for AST to CFA:          3.641s
    Time for CFA sanity check:    1.022s
    Time for post-processing:     3.204s
      Time for var class.:        1.449s
Time for Analysis:               17.964s
CPU time for analysis:           17.970s
Total time for CPAchecker:       30.244s
Total CPU time for CPAchecker:   30.200s
Time for statistics:              0.139s

Time for Garbage Collector:       1.001s (in 45 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                105MB (   100 MiB) max;     65MB (    62 MiB) avg;    111MB (   106 MiB) peak
Used non-heap memory:             41MB (    39 MiB) max;     33MB (    32 MiB) avg;     41MB (    39 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        42MB (    40 MiB) max;     35MB (    33 MiB) avg
Total process virtual memory:   8083MB (  7709 MiB) max;   8066MB (  7692 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
