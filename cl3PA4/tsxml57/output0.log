scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-challenges/linux-3.14__complex_emg__linux-kernel-locking-mutex__drivers-media-usb-dvb-usb-v2-dvb-usb-mxl111sf_true-unreach-call.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_ta_zkreg/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

line 13006: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 13147: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 13364: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

line 17448: Function pointer *function with type void (*)(void *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 17467: Function pointer *function with type void (*)(void *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 13060: Function pointer *arg0 with type int (*)(struct usb_interface *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 13071: Function pointer *arg0 with type int (*)(struct usb_interface *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9027: Function pointer *(fe->ops.tuner_ops.get_rf_strength) with type int (*)(struct dvb_frontend *, u16 *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9030: Function pointer *(fe->ops.tuner_ops.get_rf_strength) with type int (*)(struct dvb_frontend *, u16 *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9033: Function pointer *(fe->ops.tuner_ops.get_rf_strength) with type int (*)(struct dvb_frontend *, u16 *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9036: Function pointer *(fe->ops.tuner_ops.get_rf_strength) with type int (*)(struct dvb_frontend *, u16 *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 8966: Function pointer *__a with type struct dvb_frontend *(*)(struct mxl111sf_state *, struct mxl111sf_demod_config *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9118: Function pointer *__a with type struct dvb_frontend *(*)(struct dvb_frontend *, struct mxl111sf_state *, struct mxl111sf_tuner_config *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 8171-8172: Function pointer *__a with type struct dvb_frontend *(*)(const struct lg2160_config *, struct i2c_adapter *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 8773-8774: Function pointer *__a with type struct dvb_frontend *(*)(const struct lg2160_config *, struct i2c_adapter *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 8472-8473: Function pointer *__a with type struct dvb_frontend *(*)(const struct lg2160_config *, struct i2c_adapter *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 7871-7872: Function pointer *__a with type struct dvb_frontend *(*)(const struct lgdt3305_config *, struct i2c_adapter *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function external_allocated_data to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_pr_debug to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dvb_usbv2_generic_rw to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dvb_usbv2_generic_write to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 9027: Ignoring function call through function pointer *(fe->ops.tuner_ops.get_rf_strength): (*(fe->ops.tuner_ops.get_rf_strength))(fe, &rxPwrA); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function msleep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 9030: Ignoring function call through function pointer *(fe->ops.tuner_ops.get_rf_strength): (*(fe->ops.tuner_ops.get_rf_strength))(fe, &rxPwr0); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 9033: Ignoring function call through function pointer *(fe->ops.tuner_ops.get_rf_strength): (*(fe->ops.tuner_ops.get_rf_strength))(fe, &rxPwr1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 9036: Ignoring function call through function pointer *(fe->ops.tuner_ops.get_rf_strength): (*(fe->ops.tuner_ops.get_rf_strength))(fe, &rxPwr2); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function __symbol_get to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __request_module to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 9118: Ignoring call via function pointer mxl111sf_attach_tuner::__a for which no suitable target was found in line: tmp___4 = (*__a)((adap->fe)[i], state, &mxl_tuner_config); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 9118: Ignoring function call through function pointer *__a: tmp___4 = (*__a)((adap->fe)[i], state, &mxl_tuner_config); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function __symbol_put to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            9595 (11% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  8994 (94%)
  Because of loop head:            589 (6%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         12 (0%)
  Times precision was empty:       8774 (91%)
  Times precision was {false}:     61 (1%)
  Times result was cached:         698 (7%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      62 (1%)
  Times result was 'false':        16 (0%)
Number of strengthen sat checks:   0
Number of coverage checks:         17537
  BDD entailment checks:           1823
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       133
Number of predicates discovered:          3
Number of abstraction locations:          26
Max number of predicates per location:    2
Avg number of predicates per location:    1
Total predicates per abstraction:         1136
Max number of predicates per abstraction: 2
Avg number of predicates per abstraction: 9.24
Number of irrelevant predicates:          710 (63%)
Number of preds handled by boolean abs:   79 (7%)
  Total number of models for allsat:      60
  Max number of models for allsat:        1
  Avg number of models for allsat:        0.97

Time for post operator:                 10.361s
  Time for path formula creation:       10.035s
Time for strengthen operator:            0.243s
Time for prec operator:                  1.498s
  Time for abstraction:                  0.905s (Max:     0.019s, Count: 9595)
    Boolean abstraction:                 0.074s
    Solving time:                        0.065s (Max:     0.008s)
    Model enumeration time:              0.004s
    Time for BDD construction:           0.012s (Max:     0.008s)
Time for merge operator:                 0.971s
Time for coverage check:                 0.046s
  Time for BDD entailment checks:        0.041s
Total time for SMT solver (w/o itp):     0.069s

Number of path formula cache hits:   55715 (57%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     8.706s

Total number of created targets for pointer analysis: 24061
   Number of created targets for uf: *unsigned_char is 806


Number of BDD nodes:                               204
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         133 (count: 11285, min: 0, max: 30, avg: 0.01)
Time for BDD node cleanup:                             0.024s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.732s
  Time for transition matches:                         0.240s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.001s
Automaton transfers with branching:                0
Automaton transfer successors:                        88706 (count: 88706, min: 1, max: 1, avg: 1.00) [1 x 88706]

CPA algorithm statistics
------------------------
Number of iterations:            54445
Max size of waitlist:            38
Average size of waitlist:        22
Number of computed successors:   64150
Max successors for one state:    2
Number of times merged:          7857
Number of times stopped:         9432
Number of times breaked:         12

Total time for CPA algorithm:        21.228s (Max:     3.716s)
  Time for choose from waitlist:      0.175s
  Time for precision adjustment:      3.184s
  Time for transfer relation:        14.135s
  Time for merge operator:            1.594s
  Time for stop operator:             0.427s
  Time for adding to reached set:     0.562s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   12
Avg. length of target path (in blocks):                 406 (count: 12, min: 22, max: 43, avg: 33.83)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.782s
  Counterexample analysis:                             0.376s (Max:     0.041s, Calls: 12)
    Refinement sat check:                              0.254s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.016s
  Precision update:                                    0.012s
  ARG update:                                          0.346s

Length of refined path (in blocks):                     200 (count: 12, min: 11, max: 22, avg: 16.67)
Number of affected states:                              116 (count: 12, min: 4, max: 15, avg: 9.67)
Length (states) of path with itp 'true':                 72 (count: 12, min: 6, max: 6, avg: 6.00)
Length (states) of path with itp non-trivial itp:       116 (count: 12, min: 4, max: 15, avg: 9.67)
Length (states) of path with itp 'false':                12 (count: 12, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 12, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:             104 (count: 12, min: 3, max: 14, avg: 8.67)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                12
Number of successful refinements:     12
Number of failed refinements:         0
Max. size of reached set before ref.: 5932
Max. size of reached set after ref.:  16
Avg. size of reached set before ref.: 4522.83
Avg. size of reached set after ref.:  16.00

Total time for CEGAR algorithm:      22.150s
Time for refinements:                 0.921s
Average time for refinement:          0.076s
Max time for refinement:              0.123s

Code Coverage
-----------------------------
  Function coverage:      0.117
  Visited lines:          1708
  Total lines:            6095
  Line coverage:          0.280
  Visited conditions:     86
  Total conditions:       1902
  Condition coverage:     0.045

CPAchecker general statistics
-----------------------------
Number of program locations:     8392
Number of CFA edges:             9689
Number of relevant variables:    1124
Number of functions:             257
Number of loops:                 28
Size of reached set:             621
  Number of reached locations:   298 (4%)
    Avg states per location:     2
    Max states per location:     13 (at node N7161)
  Number of reached functions:   30 (12%)
  Number of partitions:          618
    Avg size of partitions:      1
    Max size of partitions:      3 (with key [N2929 (before line 11620), Function main called from node N2913, stack depth 1 [7a3643e3], stack [main]])
  Number of target states:       0
  Size of final wait list        14

Time for analysis setup:          8.126s
  Time for loading CPAs:          1.104s
  Time for loading parser:        0.711s
  Time for CFA construction:      6.141s
    Time for parsing file(s):     1.328s
    Time for AST to CFA:          2.166s
    Time for CFA sanity check:    0.617s
    Time for post-processing:     1.840s
      Time for var class.:        0.653s
Time for Analysis:               22.150s
CPU time for analysis:           22.150s
Total time for CPAchecker:       30.281s
Total CPU time for CPAchecker:   30.250s
Time for statistics:              0.136s

Time for Garbage Collector:       0.836s (in 41 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 93MB (    89 MiB) max;     58MB (    55 MiB) avg;     96MB (    91 MiB) peak
Used non-heap memory:             40MB (    38 MiB) max;     34MB (    33 MiB) avg;     40MB (    38 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        42MB (    40 MiB) max;     36MB (    34 MiB) avg
Total process virtual memory:   8087MB (  7712 MiB) max;   8071MB (  7697 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
