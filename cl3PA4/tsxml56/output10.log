scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-challenges/linux-3.14__complex_emg__linux-alloc-spinlock__drivers-net-ethernet-ti-tlan_true-unreach-call.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_xss1fy6c/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 5381: Dead code detected: return (1); (CFACreationUtils.addEdgeToCFA, INFO)

line 5473: Dead code detected: Goto: case_1 (CFACreationUtils.addEdgeToCFA, INFO)

line 5478: Dead code detected: Goto: case_2 (CFACreationUtils.addEdgeToCFA, INFO)

line 5488: Dead code detected: Goto: case_8 (CFACreationUtils.addEdgeToCFA, INFO)

line 5492: Dead code detected: Goto: switch_default (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label case_8 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_default is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_1 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_2 is not reachable. (CFAFunctionBuilder.leave, INFO)

line 7073: Dead code detected: ioaddr = 4096L; (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label out2 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_128 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_16 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_default is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_32 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_64 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label out is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

line 10108: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 10128: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 10131: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 10133: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 10175: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 10543: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 10556: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 10687: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 11190: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 11232: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 11233: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 11278: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 11543: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 11629: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 11669: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 11687: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 11716: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 11732: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 11799: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 5895: Function pointer *(ops->alloc) with type void *(*)(struct device *, size_t , dma_addr_t *, gfp_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 5936: Function pointer *(ops->free) with type void (*)(struct device *, size_t , void *, dma_addr_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 5769-5770: Function pointer *(ops->map_page) with type dma_addr_t (*)(struct device *, struct page *, unsigned long, size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 5808: Function pointer *(ops->unmap_page) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7575: Function pointer *(tlan_int_vector[(int)type]) with type u32 (*)(struct net_device *, u16 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function external_allocated_data to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_switch_to_interrupt_context to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_switch_to_process_context to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 11482: Ignoring call via function pointer ldv_timer_instance_callback_3_2::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 11482: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 10939: Ignoring call via function pointer ldv_pci_instance_suspend_late_2_7::arg0 for which no suitable target was found in line: tmp = (*arg0)(arg1, arg2); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 10939: Ignoring function call through function pointer *arg0: tmp = (*arg0)(arg1, arg2); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 10904: Ignoring call via function pointer ldv_pci_instance_resume_early_2_6::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 10904: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 10915: Ignoring call via function pointer ldv_pci_instance_shutdown_2_3::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 10915: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function eth_validate_addr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function eth_mac_addr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function eth_change_mtu to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_pre_probe to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function disable_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 10589: Ignoring call via function pointer ldv_interrupt_instance_thread_0_3::arg0 for which no suitable target was found in line: (*arg0)(arg1, arg2); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 10589: Ignoring function call through function pointer *arg0: (*arg0)(arg1, arg2); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function ldv_assert to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_enable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_request_regions to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_disable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dev_kfree_skb_any to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __pci_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function skb_pad to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_set_power_state to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_restore_state to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __ldv_spin_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netif_device_attach to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_release_regions to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function unregister_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netif_device_detach to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_save_state to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_wake_from_d3 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 5403: Ignoring function call through function pointer *(pv_cpu_ops.io_delay): (*(pv_cpu_ops.io_delay))(); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function dma_set_mask to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __init_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function lockdep_init_map to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_set_master to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 7575: Ignoring function call through function pointer *(tlan_int_vector[(int)type]): ack = (*(tlan_int_vector[(int)type]))(dev, (int)host_int); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function add_timer to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 5798: Return type of function __builtin_unreachable is void, but result is used as type int: __builtin_unreachable(); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function __builtin_unreachable to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 5808: Ignoring function call through function pointer *(ops->unmap_page): (*(ops->unmap_page))(dev, addr, size, dir, attrs); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function debug_dma_unmap_page to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __raw_spin_lock_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 5762: Return type of function __builtin_unreachable is void, but result is used as type int: __builtin_unreachable(); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function __phys_addr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

lines 5769-5770: Ignoring function call through function pointer *(ops->map_page): addr = (*(ops->map_page))(dev, ((struct page *)0L) + (tmp___2 >> 12), ((unsigned long)ptr) & 4095UL, size, dir, attrs); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function debug_dma_map_page to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __release_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function enable_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            30732 (24% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  26555 (86%)
  Because of loop head:            4166 (14%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         11 (0%)
  Times precision was empty:       29277 (95%)
  Times precision was {false}:     74 (0%)
  Times result was cached:         1286 (4%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      95 (0%)
  Times result was 'false':        64 (0%)
Number of strengthen sat checks:   0
Number of coverage checks:         9604
  BDD entailment checks:           4032
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       51
Number of predicates discovered:          5
Number of abstraction locations:          21
Max number of predicates per location:    4
Avg number of predicates per location:    1
Total predicates per abstraction:         2213
Max number of predicates per abstraction: 4
Avg number of predicates per abstraction: 13.09
Number of irrelevant predicates:          1635 (74%)
Number of preds handled by boolean abs:   126 (6%)
  Total number of models for allsat:      94
  Max number of models for allsat:        2
  Avg number of models for allsat:        0.99

Time for post operator:                  8.930s
  Time for path formula creation:        8.702s
Time for strengthen operator:            0.279s
Time for prec operator:                  2.512s
  Time for abstraction:                  1.537s (Max:     0.021s, Count: 30732)
    Boolean abstraction:                 0.183s
    Solving time:                        0.130s (Max:     0.014s)
    Model enumeration time:              0.015s
    Time for BDD construction:           0.024s (Max:     0.013s)
Time for merge operator:                 0.342s
Time for coverage check:                 0.097s
  Time for BDD entailment checks:        0.056s
Total time for SMT solver (w/o itp):     0.145s

Number of path formula cache hits:   104606 (69%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     7.679s

Total number of created targets for pointer analysis: 6807
   Number of created targets for uf: *unsigned_short_int is 451
   Number of created targets for uf: *(struct_device_private)* is 2
   Number of created targets for uf: *(void)* is 2
   Number of created targets for uf: *signed_int is 241
   Number of created targets for uf: *(struct_list_head)* is 11
   Number of created targets for uf: *unsigned_int is 226


Number of BDD nodes:                               215
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         230 (count: 34280, min: 0, max: 45, avg: 0.01)
Time for BDD node cleanup:                             0.014s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.821s
  Time for transition matches:                         0.367s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.000s
Automaton transfers with branching:                0
Automaton transfer successors:                       127818 (count: 127818, min: 1, max: 1, avg: 1.00) [1 x 127818]

CPA algorithm statistics
------------------------
Number of iterations:            88548
Max size of waitlist:            195
Average size of waitlist:        104
Number of computed successors:   96318
Max successors for one state:    2
Number of times merged:          2786
Number of times stopped:         6049
Number of times breaked:         11

Total time for CPA algorithm:        21.669s (Max:     3.430s)
  Time for choose from waitlist:      0.205s
  Time for precision adjustment:      4.547s
  Time for transfer relation:        13.959s
  Time for merge operator:            0.635s
  Time for stop operator:             0.427s
  Time for adding to reached set:     0.627s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   11
Avg. length of target path (in blocks):                 379 (count: 11, min: 29, max: 36, avg: 34.45)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.941s
  Counterexample analysis:                             0.378s (Max:     0.052s, Calls: 11)
    Refinement sat check:                              0.268s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.001s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.024s
  Precision update:                                    0.009s
  ARG update:                                          0.514s

Length of refined path (in blocks):                     140 (count: 11, min: 9, max: 16, avg: 12.73)
Number of affected states:                               85 (count: 11, min: 4, max: 11, avg: 7.73)
Length (states) of path with itp 'true':                 44 (count: 11, min: 4, max: 4, avg: 4.00)
Length (states) of path with itp non-trivial itp:        85 (count: 11, min: 4, max: 11, avg: 7.73)
Length (states) of path with itp 'false':                11 (count: 11, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 11, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:              74 (count: 11, min: 3, max: 10, avg: 6.73)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                11
Number of successful refinements:     11
Number of failed refinements:         0
Max. size of reached set before ref.: 10128
Max. size of reached set after ref.:  12
Avg. size of reached set before ref.: 7876.18
Avg. size of reached set after ref.:  12.00

Total time for CEGAR algorithm:      22.856s
Time for refinements:                 1.187s
Average time for refinement:          0.107s
Max time for refinement:              0.173s

Code Coverage
-----------------------------
  Function coverage:      0.293
  Visited lines:          1877
  Total lines:            4430
  Line coverage:          0.424
  Visited conditions:     220
  Total conditions:       908
  Condition coverage:     0.242

CPAchecker general statistics
-----------------------------
Number of program locations:     6365
Number of CFA edges:             7310
Number of relevant variables:    819
Number of functions:             341
Number of loops:                 34
Size of reached set:             3699
  Number of reached locations:   891 (14%)
    Avg states per location:     4
    Max states per location:     66 (at node N4650)
  Number of reached functions:   100 (29%)
  Number of partitions:          3686
    Avg size of partitions:      1
    Max size of partitions:      4 (with key [N3553 (before line 10468), Function main called from node N3542, stack depth 1 [1280682], stack [main]])
  Number of target states:       0
  Size of final wait list        135

Time for analysis setup:          7.385s
  Time for loading CPAs:          1.154s
  Time for loading parser:        0.636s
  Time for CFA construction:      5.487s
    Time for parsing file(s):     1.369s
    Time for AST to CFA:          2.126s
    Time for CFA sanity check:    0.414s
    Time for post-processing:     1.314s
      Time for var class.:        0.636s
Time for Analysis:               22.856s
CPU time for analysis:           22.850s
Total time for CPAchecker:       30.248s
Total CPU time for CPAchecker:   30.230s
Time for statistics:              0.210s

Time for Garbage Collector:       1.383s (in 47 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                121MB (   115 MiB) max;     63MB (    60 MiB) avg;    128MB (   122 MiB) peak
Used non-heap memory:             40MB (    38 MiB) max;     34MB (    33 MiB) avg;     40MB (    39 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        42MB (    40 MiB) max;     36MB (    34 MiB) avg
Total process virtual memory:   8085MB (  7711 MiB) max;   8071MB (  7697 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
