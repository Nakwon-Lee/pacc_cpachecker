scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-challenges/linux-3.14__complex_emg__linux-alloc-spinlock__drivers-net-ethernet-ti-tlan_true-unreach-call.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_926myqcr/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 5381: Dead code detected: return (1); (CFACreationUtils.addEdgeToCFA, INFO)

line 5473: Dead code detected: Goto: case_1 (CFACreationUtils.addEdgeToCFA, INFO)

line 5478: Dead code detected: Goto: case_2 (CFACreationUtils.addEdgeToCFA, INFO)

line 5488: Dead code detected: Goto: case_8 (CFACreationUtils.addEdgeToCFA, INFO)

line 5492: Dead code detected: Goto: switch_default (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label case_8 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_default is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_1 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_2 is not reachable. (CFAFunctionBuilder.leave, INFO)

line 7073: Dead code detected: ioaddr = 4096L; (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label out2 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_128 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_16 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_default is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_32 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_64 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label out is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

line 10108: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 10128: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 10131: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 10133: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 10175: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 10543: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 10556: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 10687: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 11190: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 11232: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 11233: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 11278: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 11543: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 11629: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 11669: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 11687: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 11716: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 11732: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 11799: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 5895: Function pointer *(ops->alloc) with type void *(*)(struct device *, size_t , dma_addr_t *, gfp_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 5936: Function pointer *(ops->free) with type void (*)(struct device *, size_t , void *, dma_addr_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 5769-5770: Function pointer *(ops->map_page) with type dma_addr_t (*)(struct device *, struct page *, unsigned long, size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 5808: Function pointer *(ops->unmap_page) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7575: Function pointer *(tlan_int_vector[(int)type]) with type u32 (*)(struct net_device *, u16 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function external_allocated_data to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_switch_to_interrupt_context to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_switch_to_process_context to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 10939: Ignoring call via function pointer ldv_pci_instance_suspend_late_2_7::arg0 for which no suitable target was found in line: tmp = (*arg0)(arg1, arg2); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 10939: Ignoring function call through function pointer *arg0: tmp = (*arg0)(arg1, arg2); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function ldv_pre_probe to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 10904: Ignoring call via function pointer ldv_pci_instance_resume_early_2_6::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 10904: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 10915: Ignoring call via function pointer ldv_pci_instance_shutdown_2_3::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 10915: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function ldv_assert to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 11482: Ignoring call via function pointer ldv_timer_instance_callback_3_2::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 11482: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 10589: Ignoring call via function pointer ldv_interrupt_instance_thread_0_3::arg0 for which no suitable target was found in line: (*arg0)(arg1, arg2); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 10589: Ignoring function call through function pointer *arg0: (*arg0)(arg1, arg2); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function __pci_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_enable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_request_regions to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_disable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function eth_validate_addr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function eth_mac_addr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function disable_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function eth_change_mtu to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dev_kfree_skb_any to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 5403: Ignoring function call through function pointer *(pv_cpu_ops.io_delay): (*(pv_cpu_ops.io_delay))(); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function __ldv_spin_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function skb_pad to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netdev_info to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 5762: Return type of function __builtin_unreachable is void, but result is used as type int: __builtin_unreachable(); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function __builtin_unreachable to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __phys_addr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

lines 5769-5770: Ignoring function call through function pointer *(ops->map_page): addr = (*(ops->map_page))(dev, ((struct page *)0L) + (tmp___2 >> 12), ((unsigned long)ptr) & 4095UL, size, dir, attrs); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function debug_dma_map_page to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 7575: Ignoring function call through function pointer *(tlan_int_vector[(int)type]): ack = (*(tlan_int_vector[(int)type]))(dev, (int)host_int); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function _raw_spin_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function add_timer to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netif_device_detach to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_save_state to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_wake_from_d3 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_set_power_state to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netif_carrier_off to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_restore_state to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netif_device_attach to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function unregister_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_release_regions to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __init_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function lockdep_init_map to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dma_set_mask to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_set_master to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __raw_spin_lock_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 5895: Ignoring function call through function pointer *(ops->alloc): memory = (*(ops->alloc))(dev, size, dma_handle, tmp___1, attrs); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function debug_dma_alloc_coherent to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function enable_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __release_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 5432: Return type of function __builtin_unreachable is void, but result is used as type int: __builtin_unreachable(); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function debug_dma_free_coherent to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 5936: Ignoring function call through function pointer *(ops->free): (*(ops->free))(dev, size, vaddr, bus, attrs); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            2364037 (23% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  2166673 (92%)
  Because of loop head:            196204 (8%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         1160 (0%)
  Times precision was empty:       1066641 (45%)
  Times precision was {false}:     4362 (0%)
  Times result was cached:         1257607 (53%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      35427 (1%)
  Times result was 'false':        56543 (2%)
Number of strengthen sat checks:   0
Number of coverage checks:         1263857
  BDD entailment checks:           866595
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       51
Number of predicates discovered:          29
Number of abstraction locations:          197
Max number of predicates per location:    23
Avg number of predicates per location:    6
Total predicates per abstraction:         8641233
Max number of predicates per abstraction: 23
Avg number of predicates per abstraction: 217.18
Number of irrelevant predicates:          4002961 (46%)
Number of preds handled by boolean abs:   308175 (4%)
  Total number of models for allsat:      135887
  Max number of models for allsat:        55
  Avg number of models for allsat:        3.84

Time for post operator:                103.237s
  Time for path formula creation:       98.142s
Time for strengthen operator:            8.755s
Time for prec operator:                416.716s
  Time for abstraction:                390.257s (Max:     3.481s, Count: 2364037)
    Boolean abstraction:                58.484s
    Solving time:                       35.292s (Max:     0.022s)
    Model enumeration time:             12.456s
    Time for BDD construction:           3.659s (Max:     0.114s)
Time for merge operator:                 3.511s
Time for coverage check:                 1.094s
  Time for BDD entailment checks:        0.901s
Total time for SMT solver (w/o itp):    47.748s

Number of path formula cache hits:   10354025 (84%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    62.198s

Total number of created targets for pointer analysis: 69492
   Number of created targets for uf: *unsigned_short_int is 4546
   Number of created targets for uf: *signed_int is 771
   Number of created targets for uf: *(struct_list_head)* is 33
   Number of created targets for uf: *unsigned_int is 481


Number of BDD nodes:                               234970
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                      167835 (count: 2213857, min: 0, max: 5516, avg: 0.08)
Time for BDD node cleanup:                             0.395s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                 13.677s
  Time for transition matches:                         7.332s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.013s
Automaton transfers with branching:                0
Automaton transfer successors:                     10243457 (count: 10243457, min: 1, max: 1, avg: 1.00) [1 x 10243457]

CPA algorithm statistics
------------------------
Number of iterations:            7153743
Max size of waitlist:            4294
Average size of waitlist:        979
Number of computed successors:   7799553
Max successors for one state:    2
Number of times merged:          198631
Number of times stopped:         307065
Number of times breaked:         1160

Total time for CPA algorithm:       776.243s (Max:    11.330s)
  Time for choose from waitlist:      3.008s
  Time for precision adjustment:    476.071s
  Time for transfer relation:       244.213s
  Time for merge operator:            7.640s
  Time for stop operator:            11.395s
  Time for adding to reached set:    13.344s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   1160
Avg. length of target path (in blocks):               80614 (count: 1160, min: 29, max: 125, avg: 69.49)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  47.476s
  Counterexample analysis:                            31.833s (Max:     0.070s, Calls: 1160)
    Refinement sat check:                             20.420s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.048s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.266s
  Precision update:                                    0.903s
  ARG update:                                         13.644s

Length of refined path (in blocks):                   56488 (count: 1159, min: 9, max: 100, avg: 48.74)
Number of affected states:                            13528 (count: 1159, min: 2, max: 57, avg: 11.67)
Length (states) of path with itp 'true':              41801 (count: 1159, min: 0, max: 96, avg: 36.07)
Length (states) of path with itp non-trivial itp:     13528 (count: 1159, min: 2, max: 57, avg: 11.67)
Length (states) of path with itp 'false':              1159 (count: 1159, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:        1224 (count: 1159, min: 0, max: 2, avg: 1.06)
Equal non-trivial interpolants along paths:           11145 (count: 1159, min: 0, max: 56, avg: 9.62)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                1160
Number of successful refinements:     1159
Number of failed refinements:         0
Max. size of reached set before ref.: 124991
Max. size of reached set after ref.:  123335
Avg. size of reached set before ref.: 36152.13
Avg. size of reached set after ref.:  29767.50

Total time for CEGAR algorithm:     893.061s
Time for refinements:                84.692s
Average time for refinement:          0.073s
Max time for refinement:              0.358s

Code Coverage
-----------------------------
  Function coverage:      0.364
  Visited lines:          2182
  Total lines:            4430
  Line coverage:          0.493
  Visited conditions:     302
  Total conditions:       908
  Condition coverage:     0.333

CPAchecker general statistics
-----------------------------
Number of program locations:     6365
Number of CFA edges:             7310
Number of relevant variables:    819
Number of functions:             341
Number of loops:                 34
Size of reached set:             40278
  Number of reached locations:   1253 (20%)
    Avg states per location:     32
    Max states per location:     1416 (at node N145)
  Number of reached functions:   124 (36%)
  Number of partitions:          40170
    Avg size of partitions:      1
    Max size of partitions:      20 (with key [N3590 (before line 10516), Function main called from node N3542, stack depth 1 [3b353651], stack [main]])
  Number of target states:       1
  Size of final wait list        1083

Time for analysis setup:          7.202s
  Time for loading CPAs:          1.131s
  Time for loading parser:        0.636s
  Time for CFA construction:      5.271s
    Time for parsing file(s):     1.184s
    Time for AST to CFA:          1.962s
    Time for CFA sanity check:    0.474s
    Time for post-processing:     1.477s
      Time for var class.:        0.618s
Time for Analysis:              893.061s
CPU time for analysis:          892.990s
Total time for CPAchecker:      900.276s
Total CPU time for CPAchecker:  900.190s
Time for statistics:              0.772s

Time for Garbage Collector:      65.791s (in 849 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:               1491MB (  1422 MiB) max;    642MB (   612 MiB) avg;   1543MB (  1471 MiB) peak
Used non-heap memory:             42MB (    40 MiB) max;     41MB (    39 MiB) avg;     43MB (    41 MiB) peak
Allocated heap memory:          1615MB (  1540 MiB) max;    939MB (   895 MiB) avg
Allocated non-heap memory:        44MB (    42 MiB) max;     43MB (    41 MiB) avg
Total process virtual memory:   8760MB (  8355 MiB) max;   8303MB (  7918 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
