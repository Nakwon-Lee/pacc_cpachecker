scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-challenges/linux-3.14__complex_emg__linux-alloc-spinlock__drivers-net-ethernet-ti-tlan_true-unreach-call.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_2pc84bqu/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 5381: Dead code detected: return (1); (CFACreationUtils.addEdgeToCFA, INFO)

line 5473: Dead code detected: Goto: case_1 (CFACreationUtils.addEdgeToCFA, INFO)

line 5478: Dead code detected: Goto: case_2 (CFACreationUtils.addEdgeToCFA, INFO)

line 5488: Dead code detected: Goto: case_8 (CFACreationUtils.addEdgeToCFA, INFO)

line 5492: Dead code detected: Goto: switch_default (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label case_8 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_default is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_1 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_2 is not reachable. (CFAFunctionBuilder.leave, INFO)

line 7073: Dead code detected: ioaddr = 4096L; (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label out2 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_128 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_16 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_default is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_32 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_64 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label out is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

line 10108: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 10128: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 10131: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 10133: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 10175: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 10543: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 10556: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 10687: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 11190: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 11232: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 11233: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 11278: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 11543: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 11629: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 11669: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 11687: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 11716: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 11732: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 11799: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 5895: Function pointer *(ops->alloc) with type void *(*)(struct device *, size_t , dma_addr_t *, gfp_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 5936: Function pointer *(ops->free) with type void (*)(struct device *, size_t , void *, dma_addr_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 5769-5770: Function pointer *(ops->map_page) with type dma_addr_t (*)(struct device *, struct page *, unsigned long, size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 5808: Function pointer *(ops->unmap_page) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7575: Function pointer *(tlan_int_vector[(int)type]) with type u32 (*)(struct net_device *, u16 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function external_allocated_data to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_switch_to_interrupt_context to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_switch_to_process_context to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 10939: Ignoring call via function pointer ldv_pci_instance_suspend_late_2_7::arg0 for which no suitable target was found in line: tmp = (*arg0)(arg1, arg2); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 10939: Ignoring function call through function pointer *arg0: tmp = (*arg0)(arg1, arg2); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function ldv_pre_probe to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 10904: Ignoring call via function pointer ldv_pci_instance_resume_early_2_6::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 10904: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 10915: Ignoring call via function pointer ldv_pci_instance_shutdown_2_3::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 10915: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function ldv_assert to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 11482: Ignoring call via function pointer ldv_timer_instance_callback_3_2::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 11482: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 10589: Ignoring call via function pointer ldv_interrupt_instance_thread_0_3::arg0 for which no suitable target was found in line: (*arg0)(arg1, arg2); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 10589: Ignoring function call through function pointer *arg0: (*arg0)(arg1, arg2); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function __pci_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_enable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_request_regions to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_disable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function eth_validate_addr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function eth_mac_addr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function disable_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function eth_change_mtu to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dev_kfree_skb_any to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 5403: Ignoring function call through function pointer *(pv_cpu_ops.io_delay): (*(pv_cpu_ops.io_delay))(); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function skb_pad to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netdev_info to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __ldv_spin_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            24727 (20% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  22063 (89%)
  Because of loop head:            2640 (11%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         24 (0%)
  Times precision was empty:       20626 (83%)
  Times precision was {false}:     201 (1%)
  Times result was cached:         3633 (15%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      267 (1%)
  Times result was 'false':        100 (0%)
Number of strengthen sat checks:   0
Number of coverage checks:         9259
  BDD entailment checks:           2707
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       51
Number of predicates discovered:          3
Number of abstraction locations:          42
Max number of predicates per location:    2
Avg number of predicates per location:    1
Total predicates per abstraction:         4430
Max number of predicates per abstraction: 2
Avg number of predicates per abstraction: 9.47
Number of irrelevant predicates:          2532 (57%)
Number of preds handled by boolean abs:   328 (7%)
  Total number of models for allsat:      309
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.16

Time for post operator:                  8.855s
  Time for path formula creation:        8.610s
Time for strengthen operator:            0.254s
Time for prec operator:                  3.390s
  Time for abstraction:                  2.524s (Max:     0.015s, Count: 24727)
    Boolean abstraction:                 0.419s
    Solving time:                        0.355s (Max:     0.019s)
    Model enumeration time:              0.032s
    Time for BDD construction:           0.071s (Max:     0.008s)
Time for merge operator:                 0.289s
Time for coverage check:                 0.052s
  Time for BDD entailment checks:        0.048s
Total time for SMT solver (w/o itp):     0.387s

Number of path formula cache hits:   75399 (54%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     7.797s

Total number of created targets for pointer analysis: 3990
   Number of created targets for uf: *unsigned_short_int is 31
   Number of created targets for uf: *unsigned_int is 331


Number of BDD nodes:                               208
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         521 (count: 25961, min: 0, max: 106, avg: 0.02)
Time for BDD node cleanup:                             0.008s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.621s
  Time for transition matches:                         0.267s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.003s
Automaton transfers with branching:                0
Automaton transfer successors:                       124858 (count: 124858, min: 1, max: 1, avg: 1.00) [1 x 124858]

CPA algorithm statistics
------------------------
Number of iterations:            82355
Max size of waitlist:            306
Average size of waitlist:        120
Number of computed successors:   91206
Max successors for one state:    2
Number of times merged:          3276
Number of times stopped:         4797
Number of times breaked:         24

Total time for CPA algorithm:        21.634s (Max:     2.496s)
  Time for choose from waitlist:      0.213s
  Time for precision adjustment:      5.010s
  Time for transfer relation:        13.706s
  Time for merge operator:            0.515s
  Time for stop operator:             0.461s
  Time for adding to reached set:     0.502s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   24
Avg. length of target path (in blocks):                 879 (count: 24, min: 29, max: 41, avg: 36.63)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   1.250s
  Counterexample analysis:                             0.737s (Max:     0.040s, Calls: 24)
    Refinement sat check:                              0.553s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.001s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.032s
  Precision update:                                    0.035s
  ARG update:                                          0.403s

Length of refined path (in blocks):                     376 (count: 24, min: 9, max: 21, avg: 15.67)
Number of affected states:                              238 (count: 24, min: 4, max: 15, avg: 9.92)
Length (states) of path with itp 'true':                114 (count: 24, min: 4, max: 10, avg: 4.75)
Length (states) of path with itp non-trivial itp:       238 (count: 24, min: 4, max: 15, avg: 9.92)
Length (states) of path with itp 'false':                24 (count: 24, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 24, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:             214 (count: 24, min: 3, max: 14, avg: 8.92)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                24
Number of successful refinements:     24
Number of failed refinements:         0
Max. size of reached set before ref.: 6334
Max. size of reached set after ref.:  1548
Avg. size of reached set before ref.: 3783.75
Avg. size of reached set after ref.:  203.58

Total time for CEGAR algorithm:      23.155s
Time for refinements:                 1.515s
Average time for refinement:          0.063s
Max time for refinement:              0.126s

Code Coverage
-----------------------------
  Function coverage:      0.097
  Visited lines:          1254
  Total lines:            4430
  Line coverage:          0.283
  Visited conditions:     104
  Total conditions:       908
  Condition coverage:     0.115

CPAchecker general statistics
-----------------------------
Number of program locations:     6365
Number of CFA edges:             7310
Number of relevant variables:    819
Number of functions:             341
Number of loops:                 34
Size of reached set:             385
  Number of reached locations:   334 (5%)
    Avg states per location:     1
    Max states per location:     11 (at node N4650)
  Number of reached functions:   33 (10%)
  Number of partitions:          385
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0
  Size of final wait list        37

Time for analysis setup:          7.055s
  Time for loading CPAs:          1.092s
  Time for loading parser:        0.733s
  Time for CFA construction:      5.067s
    Time for parsing file(s):     1.222s
    Time for AST to CFA:          1.955s
    Time for CFA sanity check:    0.410s
    Time for post-processing:     1.259s
      Time for var class.:        0.564s
Time for Analysis:               23.155s
CPU time for analysis:           23.150s
Total time for CPAchecker:       30.214s
Total CPU time for CPAchecker:   30.200s
Time for statistics:              0.093s

Time for Garbage Collector:       0.838s (in 47 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 94MB (    90 MiB) max;     57MB (    54 MiB) avg;    102MB (    97 MiB) peak
Used non-heap memory:             40MB (    38 MiB) max;     35MB (    33 MiB) avg;     41MB (    39 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        42MB (    40 MiB) max;     36MB (    35 MiB) avg
Total process virtual memory:   8086MB (  7711 MiB) max;   8071MB (  7697 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
