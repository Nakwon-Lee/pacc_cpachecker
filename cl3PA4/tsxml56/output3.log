scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-challenges/linux-3.14__complex_emg__linux-alloc-spinlock__drivers-net-ethernet-ti-tlan_true-unreach-call.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_8dbshj9w/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 5381: Dead code detected: return (1); (CFACreationUtils.addEdgeToCFA, INFO)

line 5473: Dead code detected: Goto: case_1 (CFACreationUtils.addEdgeToCFA, INFO)

line 5478: Dead code detected: Goto: case_2 (CFACreationUtils.addEdgeToCFA, INFO)

line 5488: Dead code detected: Goto: case_8 (CFACreationUtils.addEdgeToCFA, INFO)

line 5492: Dead code detected: Goto: switch_default (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label case_8 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_default is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_1 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_2 is not reachable. (CFAFunctionBuilder.leave, INFO)

line 7073: Dead code detected: ioaddr = 4096L; (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label out2 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_128 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_16 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_default is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_32 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_64 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label out is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

line 10108: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 10128: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 10131: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 10133: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 10175: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 10543: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 10556: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 10687: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 11190: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 11232: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 11233: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 11278: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 11543: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 11629: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 11669: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 11687: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 11716: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 11732: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 11799: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 5895: Function pointer *(ops->alloc) with type void *(*)(struct device *, size_t , dma_addr_t *, gfp_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 5936: Function pointer *(ops->free) with type void (*)(struct device *, size_t , void *, dma_addr_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 5769-5770: Function pointer *(ops->map_page) with type dma_addr_t (*)(struct device *, struct page *, unsigned long, size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 5808: Function pointer *(ops->unmap_page) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7575: Function pointer *(tlan_int_vector[(int)type]) with type u32 (*)(struct net_device *, u16 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function external_allocated_data to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_switch_to_interrupt_context to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_switch_to_process_context to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 10939: Ignoring call via function pointer ldv_pci_instance_suspend_late_2_7::arg0 for which no suitable target was found in line: tmp = (*arg0)(arg1, arg2); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 10939: Ignoring function call through function pointer *arg0: tmp = (*arg0)(arg1, arg2); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function ldv_pre_probe to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 10904: Ignoring call via function pointer ldv_pci_instance_resume_early_2_6::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 10904: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 10915: Ignoring call via function pointer ldv_pci_instance_shutdown_2_3::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 10915: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function ldv_assert to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 11482: Ignoring call via function pointer ldv_timer_instance_callback_3_2::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 11482: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 10589: Ignoring call via function pointer ldv_interrupt_instance_thread_0_3::arg0 for which no suitable target was found in line: (*arg0)(arg1, arg2); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 10589: Ignoring function call through function pointer *arg0: (*arg0)(arg1, arg2); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function __pci_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_enable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_request_regions to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_disable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function eth_validate_addr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function eth_mac_addr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function disable_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function eth_change_mtu to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dev_kfree_skb_any to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 5403: Ignoring function call through function pointer *(pv_cpu_ops.io_delay): (*(pv_cpu_ops.io_delay))(); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function __ldv_spin_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function skb_pad to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netdev_info to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            25305 (20% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  22720 (90%)
  Because of loop head:            2564 (10%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         21 (0%)
  Times precision was empty:       21858 (86%)
  Times precision was {false}:     175 (1%)
  Times result was cached:         3083 (12%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      189 (1%)
  Times result was 'false':        79 (0%)
Number of strengthen sat checks:   0
Number of coverage checks:         8499
  BDD entailment checks:           2341
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       51
Number of predicates discovered:          3
Number of abstraction locations:          39
Max number of predicates per location:    2
Avg number of predicates per location:    1
Total predicates per abstraction:         3555
Max number of predicates per abstraction: 2
Avg number of predicates per abstraction: 9.77
Number of irrelevant predicates:          2097 (59%)
Number of preds handled by boolean abs:   228 (6%)
  Total number of models for allsat:      216
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.14

Time for post operator:                  8.881s
  Time for path formula creation:        8.617s
Time for strengthen operator:            0.254s
Time for prec operator:                  3.182s
  Time for abstraction:                  2.110s (Max:     0.019s, Count: 25305)
    Boolean abstraction:                 0.238s
    Solving time:                        0.261s (Max:     0.038s)
    Model enumeration time:              0.015s
    Time for BDD construction:           0.045s (Max:     0.010s)
Time for merge operator:                 0.315s
Time for coverage check:                 0.124s
  Time for BDD entailment checks:        0.113s
Total time for SMT solver (w/o itp):     0.277s

Number of path formula cache hits:   72807 (52%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     7.663s

Total number of created targets for pointer analysis: 3750
   Number of created targets for uf: *unsigned_short_int is 331
   Number of created targets for uf: *unsigned_int is 286


Number of BDD nodes:                               208
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         343 (count: 26229, min: 0, max: 102, avg: 0.01)
Time for BDD node cleanup:                             0.018s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.532s
  Time for transition matches:                         0.260s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.001s
Automaton transfers with branching:                0
Automaton transfer successors:                       125818 (count: 125818, min: 1, max: 1, avg: 1.00) [1 x 125818]

CPA algorithm statistics
------------------------
Number of iterations:            82461
Max size of waitlist:            278
Average size of waitlist:        118
Number of computed successors:   91041
Max successors for one state:    2
Number of times merged:          3079
Number of times stopped:         4486
Number of times breaked:         21

Total time for CPA algorithm:        21.485s (Max:     2.932s)
  Time for choose from waitlist:      0.230s
  Time for precision adjustment:      4.973s
  Time for transfer relation:        13.712s
  Time for merge operator:            0.527s
  Time for stop operator:             0.438s
  Time for adding to reached set:     0.499s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   21
Avg. length of target path (in blocks):                 759 (count: 21, min: 29, max: 40, avg: 36.14)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   1.153s
  Counterexample analysis:                             0.652s (Max:     0.050s, Calls: 21)
    Refinement sat check:                              0.505s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.004s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.046s
  Precision update:                                    0.021s
  ARG update:                                          0.386s

Length of refined path (in blocks):                     316 (count: 21, min: 9, max: 20, avg: 15.05)
Number of affected states:                              205 (count: 21, min: 4, max: 15, avg: 9.76)
Length (states) of path with itp 'true':                 90 (count: 21, min: 4, max: 10, avg: 4.29)
Length (states) of path with itp non-trivial itp:       205 (count: 21, min: 4, max: 15, avg: 9.76)
Length (states) of path with itp 'false':                21 (count: 21, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 21, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:             184 (count: 21, min: 3, max: 14, avg: 8.76)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                21
Number of successful refinements:     21
Number of failed refinements:         0
Max. size of reached set before ref.: 5712
Max. size of reached set after ref.:  1724
Avg. size of reached set before ref.: 4049.67
Avg. size of reached set after ref.:  93.52

Total time for CEGAR algorithm:      22.888s
Time for refinements:                 1.401s
Average time for refinement:          0.066s
Max time for refinement:              0.171s

Code Coverage
-----------------------------
  Function coverage:      0.199
  Visited lines:          1542
  Total lines:            4430
  Line coverage:          0.348
  Visited conditions:     168
  Total conditions:       908
  Condition coverage:     0.185

CPAchecker general statistics
-----------------------------
Number of program locations:     6365
Number of CFA edges:             7310
Number of relevant variables:    819
Number of functions:             341
Number of loops:                 34
Size of reached set:             3397
  Number of reached locations:   605 (10%)
    Avg states per location:     5
    Max states per location:     67 (at node N4649)
  Number of reached functions:   68 (20%)
  Number of partitions:          3382
    Avg size of partitions:      1
    Max size of partitions:      4 (with key [N3553 (before line 10468), Function main called from node N3542, stack depth 1 [3b353651], stack [main]])
  Number of target states:       0
  Size of final wait list        193

Time for analysis setup:          7.354s
  Time for loading CPAs:          1.131s
  Time for loading parser:        0.733s
  Time for CFA construction:      5.337s
    Time for parsing file(s):     1.298s
    Time for AST to CFA:          1.957s
    Time for CFA sanity check:    0.432s
    Time for post-processing:     1.448s
      Time for var class.:        0.644s
Time for Analysis:               22.888s
CPU time for analysis:           22.900s
Total time for CPAchecker:       30.246s
Total CPU time for CPAchecker:   30.240s
Time for statistics:              0.215s

Time for Garbage Collector:       0.967s (in 48 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                100MB (    96 MiB) max;     61MB (    59 MiB) avg;    106MB (   101 MiB) peak
Used non-heap memory:             47MB (    45 MiB) max;     40MB (    38 MiB) avg;     48MB (    45 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        49MB (    46 MiB) max;     41MB (    39 MiB) avg
Total process virtual memory:   8088MB (  7714 MiB) max;   8072MB (  7698 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
