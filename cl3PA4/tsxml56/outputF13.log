scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-challenges/linux-3.14__complex_emg__linux-alloc-spinlock__drivers-net-ethernet-ti-tlan_true-unreach-call.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_oyifdqm2/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 5381: Dead code detected: return (1); (CFACreationUtils.addEdgeToCFA, INFO)

line 5473: Dead code detected: Goto: case_1 (CFACreationUtils.addEdgeToCFA, INFO)

line 5478: Dead code detected: Goto: case_2 (CFACreationUtils.addEdgeToCFA, INFO)

line 5488: Dead code detected: Goto: case_8 (CFACreationUtils.addEdgeToCFA, INFO)

line 5492: Dead code detected: Goto: switch_default (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label case_8 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_default is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_1 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_2 is not reachable. (CFAFunctionBuilder.leave, INFO)

line 7073: Dead code detected: ioaddr = 4096L; (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label out2 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_128 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_16 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_default is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_32 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_64 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label out is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

line 10108: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 10128: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 10131: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 10133: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 10175: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 10543: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 10556: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 10687: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 11190: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 11232: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 11233: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 11278: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 11543: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 11629: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 11669: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 11687: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 11716: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 11732: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 11799: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 5895: Function pointer *(ops->alloc) with type void *(*)(struct device *, size_t , dma_addr_t *, gfp_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 5936: Function pointer *(ops->free) with type void (*)(struct device *, size_t , void *, dma_addr_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 5769-5770: Function pointer *(ops->map_page) with type dma_addr_t (*)(struct device *, struct page *, unsigned long, size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 5808: Function pointer *(ops->unmap_page) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7575: Function pointer *(tlan_int_vector[(int)type]) with type u32 (*)(struct net_device *, u16 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function external_allocated_data to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_switch_to_interrupt_context to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_switch_to_process_context to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 10939: Ignoring call via function pointer ldv_pci_instance_suspend_late_2_7::arg0 for which no suitable target was found in line: tmp = (*arg0)(arg1, arg2); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 10939: Ignoring function call through function pointer *arg0: tmp = (*arg0)(arg1, arg2); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function ldv_pre_probe to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 10904: Ignoring call via function pointer ldv_pci_instance_resume_early_2_6::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 10904: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 10915: Ignoring call via function pointer ldv_pci_instance_shutdown_2_3::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 10915: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function ldv_assert to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 11482: Ignoring call via function pointer ldv_timer_instance_callback_3_2::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 11482: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 10589: Ignoring call via function pointer ldv_interrupt_instance_thread_0_3::arg0 for which no suitable target was found in line: (*arg0)(arg1, arg2); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 10589: Ignoring function call through function pointer *arg0: (*arg0)(arg1, arg2); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function __pci_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_enable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_request_regions to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_disable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function eth_validate_addr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function eth_mac_addr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function disable_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function eth_change_mtu to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dev_kfree_skb_any to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 5403: Ignoring function call through function pointer *(pv_cpu_ops.io_delay): (*(pv_cpu_ops.io_delay))(); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function skb_pad to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netdev_info to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __ldv_spin_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 5762: Return type of function __builtin_unreachable is void, but result is used as type int: __builtin_unreachable(); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function __builtin_unreachable to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __phys_addr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

lines 5769-5770: Ignoring function call through function pointer *(ops->map_page): addr = (*(ops->map_page))(dev, ((struct page *)0L) + (tmp___2 >> 12), ((unsigned long)ptr) & 4095UL, size, dir, attrs); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function debug_dma_map_page to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_release_regions to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __init_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function lockdep_init_map to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dma_set_mask to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_set_master to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __raw_spin_lock_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 5895: Ignoring function call through function pointer *(ops->alloc): memory = (*(ops->alloc))(dev, size, dma_handle, tmp___1, attrs); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function debug_dma_alloc_coherent to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 7575: Ignoring function call through function pointer *(tlan_int_vector[(int)type]): ack = (*(tlan_int_vector[(int)type]))(dev, (int)host_int); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function _raw_spin_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function add_timer to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_set_power_state to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_restore_state to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netif_device_attach to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function unregister_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netif_carrier_off to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_pre_register_netdev to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netif_device_detach to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_save_state to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_wake_from_d3 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 5432: Return type of function __builtin_unreachable is void, but result is used as type int: __builtin_unreachable(); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function debug_dma_free_coherent to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 5936: Ignoring function call through function pointer *(ops->free): (*(ops->free))(dev, size, vaddr, bus, attrs); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function request_threaded_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __release_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function enable_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function init_timer_key to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netdev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Recursion detected, aborting. To ignore recursion, add -skipRecursion to the command line. (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, INFO)

Error: line 8699: Unsupported feature (recursion): tmp___0 = inb_p((int)addr); (CallstackTransferRelation.getAbstractSuccessorsForEdge, SEVERE)

PredicateCPA statistics
-----------------------
Number of abstractions:            532338 (24% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  492035 (92%)
  Because of loop head:            40041 (8%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         262 (0%)
  Times precision was empty:       375726 (71%)
  Times precision was {false}:     1055 (0%)
  Times result was cached:         151873 (29%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      3684 (1%)
  Times result was 'false':        5648 (1%)
Number of strengthen sat checks:   0
Number of coverage checks:         121581
  BDD entailment checks:           47203
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       51
Number of predicates discovered:          22
Number of abstraction locations:          137
Max number of predicates per location:    18
Avg number of predicates per location:    2
Total predicates per abstraction:         523287
Max number of predicates per abstraction: 18
Avg number of predicates per abstraction: 110.42
Number of irrelevant predicates:          331295 (63%)
Number of preds handled by boolean abs:   17456 (3%)
  Total number of models for allsat:      5990
  Max number of models for allsat:        32
  Avg number of models for allsat:        1.63

Time for post operator:                 35.766s
  Time for path formula creation:       34.148s
Time for strengthen operator:            2.450s
Time for prec operator:                 39.021s
  Time for abstraction:                 31.932s (Max:     1.083s, Count: 532338)
    Boolean abstraction:                 3.812s
    Solving time:                        2.793s (Max:     0.014s)
    Model enumeration time:              0.513s
    Time for BDD construction:           0.283s (Max:     0.012s)
Time for merge operator:                 1.081s
Time for coverage check:                 0.123s
  Time for BDD entailment checks:        0.090s
Total time for SMT solver (w/o itp):     3.306s

Number of path formula cache hits:   2208854 (83%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    23.511s

Total number of created targets for pointer analysis: 28778
   Number of created targets for uf: *unsigned_short_int is 1801
   Number of created targets for uf: *(struct_device_private)* is 20
   Number of created targets for uf: *(void)* is 20
   Number of created targets for uf: *signed_int is 505
   Number of created targets for uf: *(struct_list_head)* is 28
   Number of created targets for uf: *unsigned_int is 406


Number of BDD nodes:                               10591
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       13973 (count: 453955, min: 0, max: 1252, avg: 0.03)
Time for BDD node cleanup:                             0.090s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  3.790s
  Time for transition matches:                         2.095s
  Time for transition assertions:                      0.001s
  Time for transition actions:                         0.016s
Automaton transfers with branching:                0
Automaton transfer successors:                      2208181 (count: 2208181, min: 1, max: 1, avg: 1.00) [1 x 2208181]

CPA algorithm statistics
------------------------
Number of iterations:            1518509
Max size of waitlist:            1981
Average size of waitlist:        545
Number of computed successors:   1638896
Max successors for one state:    2
Number of times merged:          37189
Number of times stopped:         54211
Number of times breaked:         262

Total time for CPA algorithm:       138.864s (Max:     3.314s)
  Time for choose from waitlist:      0.801s
  Time for precision adjustment:     55.111s
  Time for transfer relation:        70.102s
  Time for merge operator:            2.019s
  Time for stop operator:             2.470s
  Time for adding to reached set:     2.852s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   262
Avg. length of target path (in blocks):               12303 (count: 262, min: 29, max: 106, avg: 46.96)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   9.229s
  Counterexample analysis:                             5.959s (Max:     0.073s, Calls: 262)
    Refinement sat check:                              4.283s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.023s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.091s
  Precision update:                                    0.119s
  ARG update:                                          2.862s

Length of refined path (in blocks):                    7484 (count: 262, min: 9, max: 45, avg: 28.56)
Number of affected states:                             2076 (count: 262, min: 3, max: 39, avg: 7.92)
Length (states) of path with itp 'true':               5146 (count: 262, min: 4, max: 41, avg: 19.64)
Length (states) of path with itp non-trivial itp:      2076 (count: 262, min: 3, max: 39, avg: 7.92)
Length (states) of path with itp 'false':               262 (count: 262, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:         213 (count: 262, min: 0, max: 2, avg: 0.81)
Equal non-trivial interpolants along paths:            1601 (count: 262, min: 0, max: 38, avg: 6.11)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                262
Number of successful refinements:     262
Number of failed refinements:         0
Max. size of reached set before ref.: 62798
Max. size of reached set after ref.:  39940
Avg. size of reached set before ref.: 17149.58
Avg. size of reached set after ref.:  11342.28

Total time for CEGAR algorithm:     155.388s
Time for refinements:                14.027s
Average time for refinement:          0.053s
Max time for refinement:              0.852s

Code Coverage
-----------------------------
  Function coverage:      0.390
  Visited lines:          2301
  Total lines:            4430
  Line coverage:          0.519
  Visited conditions:     296
  Total conditions:       908
  Condition coverage:     0.326

CPAchecker general statistics
-----------------------------
Number of program locations:     6365
Number of CFA edges:             7310
Number of relevant variables:    819
Number of functions:             341
Number of loops:                 34
Size of reached set:             57527
  Number of reached locations:   1362 (21%)
    Avg states per location:     42
    Max states per location:     1911 (at node N145)
  Number of reached functions:   133 (39%)
  Number of partitions:          57463
    Avg size of partitions:      1
    Max size of partitions:      11 (with key [N3553 (before line 10468), Function main called from node N3542, stack depth 1 [3b353651], stack [main]])
  Number of target states:       0
  Size of final wait list        1796

Time for analysis setup:          7.266s
  Time for loading CPAs:          1.061s
  Time for loading parser:        0.721s
  Time for CFA construction:      5.334s
    Time for parsing file(s):     1.243s
    Time for AST to CFA:          2.043s
    Time for CFA sanity check:    0.444s
    Time for post-processing:     1.386s
      Time for var class.:        0.588s
Time for Analysis:              155.388s
CPU time for analysis:          155.380s
Total time for CPAchecker:      162.659s
Total CPU time for CPAchecker:  162.630s
Time for statistics:              0.862s

Time for Garbage Collector:      14.290s (in 344 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                434MB (   414 MiB) max;    175MB (   167 MiB) avg;    464MB (   442 MiB) peak
Used non-heap memory:             41MB (    39 MiB) max;     39MB (    37 MiB) avg;     42MB (    40 MiB) peak
Allocated heap memory:           459MB (   438 MiB) max;    267MB (   255 MiB) avg
Allocated non-heap memory:        43MB (    41 MiB) max;     42MB (    40 MiB) avg
Total process virtual memory:   8086MB (  7711 MiB) max;   8081MB (  7706 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
