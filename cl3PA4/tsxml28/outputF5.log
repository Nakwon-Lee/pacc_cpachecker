scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-challenges/linux-3.14__complex_emg__linux-kernel-locking-spinlock__drivers-net-wireless-rndis_wlan_true-unreach-call.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_cu_tnm_9/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 6722: Dead code detected: return (1); (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

line 16520: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 16661: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 16924: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 16462: Function pointer *arg0 with type void (*)(unsigned long) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 16574: Function pointer *arg0 with type int (*)(struct usb_interface *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 16585: Function pointer *arg0 with type int (*)(struct usb_interface *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function external_allocated_data to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_switch_to_interrupt_context to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_switch_to_process_context to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 16462: Ignoring call via function pointer ldv_timer_instance_callback_5_2::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 16462: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function eth_validate_addr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usbnet_tx_timeout to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usbnet_stop to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usbnet_start_xmit to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function eth_mac_addr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usbnet_open to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 16585: Ignoring call via function pointer ldv_usb_instance_pre_7_10::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 16585: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 16574: Ignoring call via function pointer ldv_usb_instance_post_7_9::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 16574: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function usbnet_resume to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usbnet_disconnect to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rndis_tx_fixup to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rndis_status to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rndis_rx_fixup to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 16827: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___3 = ldv_xmalloc(4UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function usbnet_suspend to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 15095: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___18 = ldv_xmalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 15063: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___16 = ldv_xmalloc(4UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 16803: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___0 = ldv_xmalloc(1992UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function ldv_pre_probe to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usbnet_probe to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function wiphy_new to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_netdev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netdev_info to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usbnet_pause_rx to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 6985: Return type of function __builtin_unreachable is void, but result is used as type int: __builtin_unreachable(); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function __builtin_unreachable to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ieee80211_frequency_to_channel to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netdev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock_nested to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rndis_command to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netdev_warn to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function cancel_delayed_work_sync to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function cancel_work_sync to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function flush_workqueue to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function destroy_workqueue to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rndis_unbind to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function wiphy_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function wiphy_free to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function cfg80211_scan_done to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_pre_usb_register_driver to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_alloc_flags to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            2094661 (20% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  1790458 (85%)
  Because of loop head:            303380 (14%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         823 (0%)
  Times precision was empty:       1275705 (61%)
  Times precision was {false}:     19739 (1%)
  Times result was cached:         757950 (36%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      41267 (2%)
  Times result was 'false':        204813 (10%)
Number of strengthen sat checks:   0
Number of coverage checks:         2783090
  BDD entailment checks:           2180494
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       88
Number of predicates discovered:          52
Number of abstraction locations:          112
Max number of predicates per location:    49
Avg number of predicates per location:    12
Total predicates per abstraction:         10020913
Max number of predicates per abstraction: 49
Avg number of predicates per abstraction: 164.26
Number of irrelevant predicates:          5960552 (59%)
Number of preds handled by boolean abs:   537166 (5%)
  Total number of models for allsat:      354651
  Max number of models for allsat:        1260
  Avg number of models for allsat:        8.59

Time for post operator:                 72.129s
  Time for path formula creation:       67.661s
Time for strengthen operator:            8.906s
Time for prec operator:                513.875s
  Time for abstraction:                492.451s (Max:     1.504s, Count: 2094661)
    Boolean abstraction:               132.839s
    Solving time:                       69.996s (Max:     0.036s)
    Model enumeration time:             44.668s
    Time for BDD construction:          20.175s (Max:     0.149s)
Time for merge operator:                 3.422s
Time for coverage check:                 2.696s
  Time for BDD entailment checks:        2.278s
Total time for SMT solver (w/o itp):   114.664s

Number of path formula cache hits:   10171023 (84%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    43.974s

Total number of created targets for pointer analysis: 1189
   Number of created targets for uf: *unsigned_char is 181
   Number of created targets for uf: *char is 117
   Number of created targets for uf: *unsigned_int is 3


Number of BDD nodes:                               255838
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                      255547 (count: 3920003, min: 0, max: 4725, avg: 0.07)
Time for BDD node cleanup:                             0.546s
Time for BDD garbage collection:                       0.120s (in 20 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                 15.189s
  Time for transition matches:                         7.874s
  Time for transition assertions:                      0.003s
  Time for transition actions:                         0.004s
Automaton transfers with branching:                0
Automaton transfer successors:                     10263932 (count: 10263932, min: 1, max: 1, avg: 1.00) [1 x 10263932]

CPA algorithm statistics
------------------------
Number of iterations:            7962575
Max size of waitlist:            5091
Average size of waitlist:        730
Number of computed successors:   8980501
Max successors for one state:    2
Number of times merged:          301298
Number of times stopped:         611965
Number of times breaked:         458

Total time for CPA algorithm:       860.313s (Max:    30.882s)
  Time for choose from waitlist:      3.721s
  Time for precision adjustment:    574.282s
  Time for transfer relation:       209.120s
  Time for merge operator:           11.620s
  Time for stop operator:            27.892s
  Time for adding to reached set:    13.170s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   458
Avg. length of target path (in blocks):               16640 (count: 458, min: 13, max: 81, avg: 36.33)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  24.143s
  Counterexample analysis:                             7.175s (Max:     0.057s, Calls: 458)
    Refinement sat check:                              4.603s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.014s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.123s
  Precision update:                                    0.283s
  ARG update:                                         16.313s

Length of refined path (in blocks):                    9895 (count: 458, min: 9, max: 58, avg: 21.60)
Number of affected states:                             6033 (count: 458, min: 1, max: 57, avg: 13.17)
Length (states) of path with itp 'true':               3404 (count: 458, min: 0, max: 42, avg: 7.43)
Length (states) of path with itp non-trivial itp:      6033 (count: 458, min: 1, max: 57, avg: 13.17)
Length (states) of path with itp 'false':               430 (count: 458, min: 0, max: 1, avg: 0.94)
Different non-trivial interpolants along paths:          66 (count: 458, min: 0, max: 1, avg: 0.14)
Equal non-trivial interpolants along paths:            5509 (count: 458, min: 0, max: 55, avg: 12.03)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                458
Number of successful refinements:     458
Number of failed refinements:         0
Max. size of reached set before ref.: 161666
Max. size of reached set after ref.:  40739
Avg. size of reached set before ref.: 20592.31
Avg. size of reached set after ref.:  2841.69

Total time for CEGAR algorithm:     891.267s
Time for refinements:                29.851s
Average time for refinement:          0.065s
Max time for refinement:              0.449s

Code Coverage
-----------------------------
  Function coverage:      0.314
  Visited lines:          2435
  Total lines:            6579
  Line coverage:          0.370
  Visited conditions:     326
  Total conditions:       1452
  Condition coverage:     0.225

CPAchecker general statistics
-----------------------------
Number of program locations:     8942
Number of CFA edges:             10211
Number of relevant variables:    1255
Number of functions:             363
Number of loops:                 19
Size of reached set:             33938
  Number of reached locations:   1116 (12%)
    Avg states per location:     30
    Max states per location:     355 (at node N7199)
  Number of reached functions:   114 (31%)
  Number of partitions:          33689
    Avg size of partitions:      1
    Max size of partitions:      33 (with key [N4978 (before line 13946), Function main called from node N4958, stack depth 1 [4656fcc5], stack [main]])
  Number of target states:       0
  Size of final wait list        1311

Time for analysis setup:          9.003s
  Time for loading CPAs:          1.414s
  Time for loading parser:        0.703s
  Time for CFA construction:      6.732s
    Time for parsing file(s):     1.513s
    Time for AST to CFA:          2.701s
    Time for CFA sanity check:    0.514s
    Time for post-processing:     1.686s
      Time for var class.:        0.814s
Time for Analysis:              891.267s
CPU time for analysis:          891.200s
Total time for CPAchecker:      900.275s
Total CPU time for CPAchecker:  900.180s
Time for statistics:              0.598s

Time for Garbage Collector:      63.553s (in 1226 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:               1313MB (  1252 MiB) max;    510MB (   487 MiB) avg;   1344MB (  1282 MiB) peak
Used non-heap memory:             43MB (    41 MiB) max;     40MB (    38 MiB) avg;     43MB (    41 MiB) peak
Allocated heap memory:          1367MB (  1303 MiB) max;    748MB (   713 MiB) avg
Allocated non-heap memory:        44MB (    42 MiB) max;     43MB (    41 MiB) avg
Total process virtual memory:   9370MB (  8936 MiB) max;   8520MB (  8126 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
