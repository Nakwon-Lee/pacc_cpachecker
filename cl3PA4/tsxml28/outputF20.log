scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-challenges/linux-3.14__complex_emg__linux-kernel-locking-spinlock__drivers-net-wireless-rndis_wlan_true-unreach-call.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_u76ztooc/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 6722: Dead code detected: return (1); (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

line 16520: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 16661: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 16924: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 16462: Function pointer *arg0 with type void (*)(unsigned long) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 16574: Function pointer *arg0 with type int (*)(struct usb_interface *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 16585: Function pointer *arg0 with type int (*)(struct usb_interface *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function external_allocated_data to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_switch_to_interrupt_context to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_switch_to_process_context to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function wiphy_new to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_pre_usb_register_driver to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rndis_tx_fixup to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rndis_status to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rndis_rx_fixup to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 16585: Ignoring call via function pointer ldv_usb_instance_pre_7_10::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 16585: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 16574: Ignoring call via function pointer ldv_usb_instance_post_7_9::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 16574: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function usbnet_resume to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usbnet_disconnect to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function eth_validate_addr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usbnet_tx_timeout to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usbnet_stop to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usbnet_start_xmit to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function eth_mac_addr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usbnet_open to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 16462: Ignoring call via function pointer ldv_timer_instance_callback_5_2::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 16462: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function netdev_info to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usbnet_pause_rx to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function cfg80211_michael_mic_failure to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_deregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function cancel_delayed_work_sync to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function cancel_work_sync to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function flush_workqueue to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function destroy_workqueue to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rndis_unbind to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function wiphy_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function wiphy_free to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock_nested to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rndis_command to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 6985: Return type of function __builtin_unreachable is void, but result is used as type int: __builtin_unreachable(); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function __builtin_unreachable to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ieee80211_frequency_to_channel to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netdev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __mutex_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __init_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function lockdep_init_map to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function init_timer_key to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function generic_rndis_bind to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function wiphy_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_netdev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netdev_warn to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function cfg80211_pmksa_candidate_notify to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function cfg80211_scan_done to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function msleep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function get_random_bytes to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_alloc_flags to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            1256752 (15% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  1125081 (90%)
  Because of loop head:            131186 (10%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         485 (0%)
  Times precision was empty:       935120 (74%)
  Times precision was {false}:     8797 (1%)
  Times result was cached:         294714 (23%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      18121 (1%)
  Times result was 'false':        74581 (6%)
Number of strengthen sat checks:   0
Number of coverage checks:         890469
  BDD entailment checks:           293449
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       88
Number of predicates discovered:          40
Number of abstraction locations:          63
Max number of predicates per location:    39
Avg number of predicates per location:    16
Total predicates per abstraction:         3736933
Max number of predicates per abstraction: 39
Avg number of predicates per abstraction: 138.83
Number of irrelevant predicates:          1389315 (37%)
Number of preds handled by boolean abs:   297870 (8%)
  Total number of models for allsat:      1969123
  Max number of models for allsat:        9000
  Avg number of models for allsat:        108.67

Time for post operator:                 88.382s
  Time for path formula creation:       80.341s
Time for strengthen operator:            6.756s
Time for prec operator:                576.388s
  Time for abstraction:                562.392s (Max:     1.869s, Count: 1256752)
    Boolean abstraction:               399.926s
    Solving time:                       43.504s (Max:     0.023s)
    Model enumeration time:            235.519s
    Time for BDD construction:         123.770s (Max:     0.696s)
Time for merge operator:                 4.780s
Time for coverage check:                 0.725s
  Time for BDD entailment checks:        0.614s
Total time for SMT solver (w/o itp):   279.023s

Number of path formula cache hits:   7880886 (83%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    59.971s

Total number of created targets for pointer analysis: 13696
   Number of created targets for uf: *signed_int is 25
   Number of created targets for uf: *unsigned_char is 865
   Number of created targets for uf: *(struct_list_head)* is 73
   Number of created targets for uf: *char is 421
   Number of created targets for uf: *unsigned_int is 3201


Number of BDD nodes:                               205497
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                      201847 (count: 1460730, min: 0, max: 2365, avg: 0.14)
Time for BDD node cleanup:                             0.324s
Time for BDD garbage collection:                       1.482s (in 412 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                 17.223s
  Time for transition matches:                         6.474s
  Time for transition assertions:                      0.002s
  Time for transition actions:                         0.003s
Automaton transfers with branching:                0
Automaton transfer successors:                      8312888 (count: 8312888, min: 1, max: 1, avg: 1.00) [1 x 8312888]

CPA algorithm statistics
------------------------
Number of iterations:            5643026
Max size of waitlist:            4222
Average size of waitlist:        1216
Number of computed successors:   6504362
Max successors for one state:    2
Number of times merged:          298510
Number of times stopped:         404735
Number of times breaked:         485

Total time for CPA algorithm:       867.379s (Max:    85.962s)
  Time for choose from waitlist:      2.812s
  Time for precision adjustment:    621.131s
  Time for transfer relation:       197.138s
  Time for merge operator:           10.191s
  Time for stop operator:             9.750s
  Time for adding to reached set:    11.749s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   485
Avg. length of target path (in blocks):               15149 (count: 485, min: 13, max: 59, avg: 31.24)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  18.883s
  Counterexample analysis:                             7.212s (Max:     0.045s, Calls: 485)
    Refinement sat check:                              4.625s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.018s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.150s
  Precision update:                                    0.284s
  ARG update:                                         10.993s

Length of refined path (in blocks):                    8564 (count: 485, min: 9, max: 32, avg: 17.66)
Number of affected states:                             5251 (count: 485, min: 4, max: 26, avg: 10.83)
Length (states) of path with itp 'true':               2828 (count: 485, min: 0, max: 26, avg: 5.83)
Length (states) of path with itp non-trivial itp:      5251 (count: 485, min: 4, max: 26, avg: 10.83)
Length (states) of path with itp 'false':               485 (count: 485, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:          30 (count: 485, min: 0, max: 1, avg: 0.06)
Equal non-trivial interpolants along paths:            4736 (count: 485, min: 3, max: 24, avg: 9.76)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                485
Number of successful refinements:     485
Number of failed refinements:         0
Max. size of reached set before ref.: 799909
Max. size of reached set after ref.:  30753
Avg. size of reached set before ref.: 13924.65
Avg. size of reached set after ref.:  2607.72

Total time for CEGAR algorithm:     892.017s
Time for refinements:                23.395s
Average time for refinement:          0.048s
Max time for refinement:              3.079s

Code Coverage
-----------------------------
  Function coverage:      0.455
  Visited lines:          3990
  Total lines:            6579
  Line coverage:          0.606
  Visited conditions:     758
  Total conditions:       1452
  Condition coverage:     0.522

CPAchecker general statistics
-----------------------------
Number of program locations:     8942
Number of CFA edges:             10211
Number of relevant variables:    1255
Number of functions:             363
Number of loops:                 19
Size of reached set:             536336
  Number of reached locations:   2454 (27%)
    Avg states per location:     218
    Max states per location:     9655 (at node N426)
  Number of reached functions:   165 (45%)
  Number of partitions:          536277
    Avg size of partitions:      1
    Max size of partitions:      8 (with key [N4978 (before line 13946), Function main called from node N4958, stack depth 1 [4656fcc5], stack [main]])
  Number of target states:       0
  Size of final wait list        4169

Time for analysis setup:          8.255s
  Time for loading CPAs:          1.149s
  Time for loading parser:        0.771s
  Time for CFA construction:      6.182s
    Time for parsing file(s):     1.413s
    Time for AST to CFA:          2.433s
    Time for CFA sanity check:    0.485s
    Time for post-processing:     1.569s
      Time for var class.:        0.835s
Time for Analysis:              892.017s
CPU time for analysis:          891.880s
Total time for CPAchecker:      900.276s
Total CPU time for CPAchecker:  900.110s
Time for statistics:              4.519s

Time for Garbage Collector:      64.574s (in 1685 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:               1933MB (  1843 MiB) max;    284MB (   270 MiB) avg;   2013MB (  1920 MiB) peak
Used non-heap memory:             43MB (    41 MiB) max;     40MB (    38 MiB) avg;     43MB (    41 MiB) peak
Allocated heap memory:          1994MB (  1902 MiB) max;    416MB (   397 MiB) avg
Allocated non-heap memory:        44MB (    42 MiB) max;     42MB (    40 MiB) avg
Total process virtual memory:   8559MB (  8162 MiB) max;   8284MB (  7900 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
