scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-challenges/linux-3.14__complex_emg__linux-kernel-locking-spinlock__drivers-net-wireless-rndis_wlan_true-unreach-call.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_iq716vv4/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 6722: Dead code detected: return (1); (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

line 16520: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 16661: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 16924: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 16462: Function pointer *arg0 with type void (*)(unsigned long) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 16574: Function pointer *arg0 with type int (*)(struct usb_interface *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 16585: Function pointer *arg0 with type int (*)(struct usb_interface *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function external_allocated_data to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_switch_to_interrupt_context to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_switch_to_process_context to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usbnet_disconnect to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usbnet_resume to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 16574: Ignoring call via function pointer ldv_usb_instance_post_7_9::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 16574: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 16585: Ignoring call via function pointer ldv_usb_instance_pre_7_10::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 16585: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 16462: Ignoring call via function pointer ldv_timer_instance_callback_5_2::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 16462: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function rndis_rx_fixup to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rndis_status to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rndis_tx_fixup to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usbnet_open to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function eth_mac_addr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usbnet_start_xmit to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usbnet_stop to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usbnet_tx_timeout to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function eth_validate_addr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 15095: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___18 = ldv_xmalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 15063: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___16 = ldv_xmalloc(4UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 15027: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___9 = ldv_xmalloc(3200UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 15029: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___10 = ldv_xmalloc(144UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 15031: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___11 = ldv_xmalloc(12UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 15035: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___13 = ldv_xmalloc(944UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 15385: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___3 = ldv_xmalloc(192UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function wiphy_new to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 15615: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___3 = ldv_xmalloc(192UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 15845: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___3 = ldv_xmalloc(192UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 16827: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___3 = ldv_xmalloc(4UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function usbnet_suspend to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 16803: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___0 = ldv_xmalloc(1992UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function ldv_pre_probe to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usbnet_probe to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_netdev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netdev_info to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usbnet_pause_rx to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_pre_usb_register_driver to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 6985: Return type of function __builtin_unreachable is void, but result is used as type int: __builtin_unreachable(); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function __builtin_unreachable to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ieee80211_frequency_to_channel to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock_nested to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rndis_command to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netdev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function cancel_delayed_work_sync to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function cancel_work_sync to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function flush_workqueue to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function destroy_workqueue to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rndis_unbind to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function wiphy_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function wiphy_free to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netdev_warn to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function cfg80211_scan_done to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_alloc_flags to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            1978544 (22% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  1641336 (83%)
  Because of loop head:            332724 (17%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         4484 (0%)
  Times precision was empty:       1231613 (62%)
  Times precision was {false}:     30897 (2%)
  Times result was cached:         665490 (34%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      50544 (3%)
  Times result was 'false':        101856 (5%)
Number of strengthen sat checks:   0
Number of coverage checks:         1668622
  BDD entailment checks:           1248786
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       88
Number of predicates discovered:          65
Number of abstraction locations:          120
Max number of predicates per location:    62
Avg number of predicates per location:    16
Total predicates per abstraction:         12068481
Max number of predicates per abstraction: 62
Avg number of predicates per abstraction: 148.19
Number of irrelevant predicates:          9087326 (75%)
Number of preds handled by boolean abs:   697595 (6%)
  Total number of models for allsat:      304487
  Max number of models for allsat:        392
  Avg number of models for allsat:        6.02

Time for post operator:                 81.140s
  Time for path formula creation:       77.083s
Time for strengthen operator:            8.222s
Time for prec operator:                534.797s
  Time for abstraction:                513.599s (Max:     3.193s, Count: 1978544)
    Boolean abstraction:               124.414s
    Solving time:                       91.825s (Max:     0.054s)
    Model enumeration time:             31.918s
    Time for BDD construction:          15.291s (Max:     0.090s)
Time for merge operator:                 2.922s
Time for coverage check:                 1.796s
  Time for BDD entailment checks:        1.520s
Total time for SMT solver (w/o itp):   123.744s

Number of path formula cache hits:   8650736 (80%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    50.270s

Total number of created targets for pointer analysis: 925
   Number of created targets for uf: *unsigned_char is 41
   Number of created targets for uf: *char is 21
   Number of created targets for uf: *unsigned_int is 3


Number of BDD nodes:                               145668
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                      341801 (count: 3060523, min: 0, max: 6400, avg: 0.11)
Time for BDD node cleanup:                             0.489s
Time for BDD garbage collection:                       0.315s (in 42 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                 11.016s
  Time for transition matches:                         5.647s
  Time for transition assertions:                      0.002s
  Time for transition actions:                         0.024s
Automaton transfers with branching:                0
Automaton transfer successors:                      9106097 (count: 9106097, min: 1, max: 1, avg: 1.00) [1 x 9106097]

CPA algorithm statistics
------------------------
Number of iterations:            6803468
Max size of waitlist:            3823
Average size of waitlist:        636
Number of computed successors:   7617608
Max successors for one state:    2
Number of times merged:          209918
Number of times stopped:         514645
Number of times breaked:         579

Total time for CPA algorithm:       861.381s (Max:    22.957s)
  Time for choose from waitlist:      3.531s
  Time for precision adjustment:    587.965s
  Time for transfer relation:       209.721s
  Time for merge operator:            8.380s
  Time for stop operator:            17.637s
  Time for adding to reached set:    14.355s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   579
Avg. length of target path (in blocks):               24633 (count: 579, min: 13, max: 103, avg: 42.54)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  26.065s
  Counterexample analysis:                             9.778s (Max:     0.048s, Calls: 579)
    Refinement sat check:                              6.175s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.022s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.202s
  Precision update:                                    0.418s
  ARG update:                                         15.336s

Length of refined path (in blocks):                   18179 (count: 579, min: 9, max: 86, avg: 31.40)
Number of affected states:                            15045 (count: 579, min: 1, max: 81, avg: 25.98)
Length (states) of path with itp 'true':               2555 (count: 579, min: 0, max: 59, avg: 4.41)
Length (states) of path with itp non-trivial itp:     15045 (count: 579, min: 1, max: 81, avg: 25.98)
Length (states) of path with itp 'false':               447 (count: 579, min: 0, max: 1, avg: 0.77)
Different non-trivial interpolants along paths:         210 (count: 579, min: 0, max: 1, avg: 0.36)
Equal non-trivial interpolants along paths:           14256 (count: 579, min: 0, max: 80, avg: 24.62)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                579
Number of successful refinements:     579
Number of failed refinements:         0
Max. size of reached set before ref.: 72516
Max. size of reached set after ref.:  26895
Avg. size of reached set before ref.: 12487.62
Avg. size of reached set after ref.:  409.75

Total time for CEGAR algorithm:     892.096s
Time for refinements:                30.489s
Average time for refinement:          0.052s
Max time for refinement:              2.404s

Code Coverage
-----------------------------
  Function coverage:      0.289
  Visited lines:          2462
  Total lines:            6579
  Line coverage:          0.374
  Visited conditions:     340
  Total conditions:       1452
  Condition coverage:     0.234

CPAchecker general statistics
-----------------------------
Number of program locations:     8942
Number of CFA edges:             10211
Number of relevant variables:    1255
Number of functions:             363
Number of loops:                 19
Size of reached set:             8023
  Number of reached locations:   1139 (13%)
    Avg states per location:     7
    Max states per location:     156 (at node N7199)
  Number of reached functions:   105 (29%)
  Number of partitions:          7979
    Avg size of partitions:      1
    Max size of partitions:      9 (with key [N4978 (before line 13946), Function main called from node N4958, stack depth 1 [2d24cdd9], stack [main]])
  Number of target states:       0
  Size of final wait list        531

Time for analysis setup:          8.178s
  Time for loading CPAs:          1.203s
  Time for loading parser:        0.655s
  Time for CFA construction:      6.199s
    Time for parsing file(s):     1.351s
    Time for AST to CFA:          2.519s
    Time for CFA sanity check:    0.518s
    Time for post-processing:     1.628s
      Time for var class.:        0.770s
Time for Analysis:              892.096s
CPU time for analysis:          892.030s
Total time for CPAchecker:      900.278s
Total CPU time for CPAchecker:  900.190s
Time for statistics:              0.244s

Time for Garbage Collector:      63.346s (in 1220 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:               1208MB (  1152 MiB) max;    489MB (   466 MiB) avg;   1328MB (  1266 MiB) peak
Used non-heap memory:             43MB (    41 MiB) max;     41MB (    39 MiB) avg;     44MB (    42 MiB) peak
Allocated heap memory:          1580MB (  1507 MiB) max;    716MB (   683 MiB) avg
Allocated non-heap memory:        45MB (    43 MiB) max;     43MB (    41 MiB) avg
Total process virtual memory:   9841MB (  9385 MiB) max;   8696MB (  8293 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
