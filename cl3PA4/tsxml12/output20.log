scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-challenges/linux-3.14__complex_emg__linux-usb-dev__drivers-net-wireless-ath-ath10k-ath10k_pci_true-unreach-call.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_4bizqwxv/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 6751: Dead code detected: return (1); (CFACreationUtils.addEdgeToCFA, INFO)

line 7971: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 8026: Dead code detected: __ms___0 = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 8293: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 8348: Dead code detected: __ms___0 = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

line 12070: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 12937: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 13661: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 13695: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 14397: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 14428: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 14447: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 14490: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 14509: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 14539: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 9355: Function pointer *(cb->rx_completion) with type int (*)(struct ath10k *, struct sk_buff *, u8 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9326: Function pointer *(cb->tx_completion) with type int (*)(struct ath10k *, struct sk_buff *, unsigned int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9847: Function pointer *(ar_pci->msg_callbacks_current.tx_completion) with type int (*)(struct ath10k *, struct sk_buff *, unsigned int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7234: Function pointer *(ops->alloc) with type void *(*)(struct device *, size_t , dma_addr_t *, gfp_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7275: Function pointer *(ops->free) with type void (*)(struct device *, size_t , void *, dma_addr_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 7043-7044: Function pointer *(ops->map_page) with type dma_addr_t (*)(struct device *, struct page *, unsigned long, size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7148: Function pointer *(ops->mapping_error) with type int (*)(struct device *, dma_addr_t ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7122: Function pointer *(ops->sync_single_for_device) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7082: Function pointer *(ops->unmap_page) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 13356: Function pointer *arg0 with type int (*)(struct pci_dev *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 13367: Function pointer *arg0 with type int (*)(struct pci_dev *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 13390: Function pointer *arg0 with type int (*)(struct pci_dev *, struct pm_message ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 13402: Function pointer *arg0 with type int (*)(struct pci_dev *, struct pm_message ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function external_allocated_data to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_switch_to_interrupt_context to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ath10k_warn to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __tasklet_schedule to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 13042: Ignoring call via function pointer ldv_interrupt_instance_thread_3_3::arg0 for which no suitable target was found in line: (*arg0)(arg1, arg2); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 13042: Ignoring function call through function pointer *arg0: (*arg0)(arg1, arg2); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function ldv_switch_to_process_context to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ioread32 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iowrite32 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 13030: Ignoring call via function pointer ldv_interrupt_instance_thread_2_3::arg0 for which no suitable target was found in line: (*arg0)(arg1, arg2); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 13030: Ignoring function call through function pointer *arg0: (*arg0)(arg1, arg2); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 13018: Ignoring call via function pointer ldv_interrupt_instance_thread_1_3::arg0 for which no suitable target was found in line: (*arg0)(arg1, arg2); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 13018: Ignoring function call through function pointer *arg0: (*arg0)(arg1, arg2); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 13006: Ignoring call via function pointer ldv_interrupt_instance_thread_0_3::arg0 for which no suitable target was found in line: (*arg0)(arg1, arg2); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 13006: Ignoring function call through function pointer *arg0: (*arg0)(arg1, arg2); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function pci_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __pci_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ath10k_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            41865 (26% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  39284 (94%)
  Because of loop head:            2555 (6%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         26 (0%)
  Times precision was empty:       38632 (92%)
  Times precision was {false}:     194 (0%)
  Times result was cached:         2883 (7%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      156 (0%)
  Times result was 'false':        261 (1%)
Number of strengthen sat checks:   0
Number of coverage checks:         14883
  BDD entailment checks:           6861
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       62
Number of predicates discovered:          15
Number of abstraction locations:          16
Max number of predicates per location:    14
Avg number of predicates per location:    5
Total predicates per abstraction:         10789
Max number of predicates per abstraction: 14
Avg number of predicates per abstraction: 30.83
Number of irrelevant predicates:          8881 (82%)
Number of preds handled by boolean abs:   675 (6%)
  Total number of models for allsat:      185
  Max number of models for allsat:        3
  Avg number of models for allsat:        1.19

Time for post operator:                  6.244s
  Time for path formula creation:        6.017s
Time for strengthen operator:            0.389s
Time for prec operator:                  3.568s
  Time for abstraction:                  2.549s (Max:     0.031s, Count: 41865)
    Boolean abstraction:                 0.340s
    Solving time:                        0.265s (Max:     0.012s)
    Model enumeration time:              0.016s
    Time for BDD construction:           0.056s (Max:     0.012s)
Time for merge operator:                 0.179s
Time for coverage check:                 0.056s
  Time for BDD entailment checks:        0.050s
Total time for SMT solver (w/o itp):     0.281s

Number of path formula cache hits:   170152 (85%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     4.943s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               374
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         921 (count: 47682, min: 0, max: 99, avg: 0.02)
Time for BDD node cleanup:                             0.028s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.608s
  Time for transition matches:                         0.244s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.002s
Automaton transfers with branching:                0
Automaton transfer successors:                       161186 (count: 161186, min: 1, max: 1, avg: 1.00) [1 x 161186]

CPA algorithm statistics
------------------------
Number of iterations:            123386
Max size of waitlist:            22
Average size of waitlist:        11
Number of computed successors:   133782
Max successors for one state:    2
Number of times merged:          4011
Number of times stopped:         9807
Number of times breaked:         26

Total time for CPA algorithm:        21.077s (Max:     2.428s)
  Time for choose from waitlist:      0.263s
  Time for precision adjustment:      5.957s
  Time for transfer relation:        11.847s
  Time for merge operator:            0.473s
  Time for stop operator:             0.584s
  Time for adding to reached set:     0.681s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   26
Avg. length of target path (in blocks):                 847 (count: 26, min: 15, max: 46, avg: 32.58)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   1.185s
  Counterexample analysis:                             0.514s (Max:     0.038s, Calls: 26)
    Refinement sat check:                              0.261s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.007s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.032s
  Precision update:                                    0.049s
  ARG update:                                          0.548s

Length of refined path (in blocks):                     346 (count: 26, min: 11, max: 16, avg: 13.31)
Number of affected states:                              164 (count: 26, min: 4, max: 9, avg: 6.31)
Length (states) of path with itp 'true':                156 (count: 26, min: 6, max: 6, avg: 6.00)
Length (states) of path with itp non-trivial itp:       164 (count: 26, min: 4, max: 9, avg: 6.31)
Length (states) of path with itp 'false':                26 (count: 26, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 26, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:             138 (count: 26, min: 3, max: 8, avg: 5.31)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                26
Number of successful refinements:     26
Number of failed refinements:         0
Max. size of reached set before ref.: 6394
Max. size of reached set after ref.:  16
Avg. size of reached set before ref.: 4648.69
Avg. size of reached set after ref.:  16.00

Total time for CEGAR algorithm:      22.489s
Time for refinements:                 1.411s
Average time for refinement:          0.054s
Max time for refinement:              0.124s

Code Coverage
-----------------------------
  Function coverage:      0.105
  Visited lines:          1459
  Total lines:            5453
  Line coverage:          0.268
  Visited conditions:     106
  Total conditions:       1124
  Condition coverage:     0.094

CPAchecker general statistics
-----------------------------
Number of program locations:     7422
Number of CFA edges:             8480
Number of relevant variables:    1444
Number of functions:             315
Number of loops:                 41
Size of reached set:             3263
  Number of reached locations:   387 (5%)
    Avg states per location:     8
    Max states per location:     121 (at node N456)
  Number of reached functions:   33 (10%)
  Number of partitions:          3255
    Avg size of partitions:      1
    Max size of partitions:      3 (with key [N4050 (before line 12842), Function main called from node N4036, stack depth 1 [6661d8c0], stack [main]])
  Number of target states:       0
  Size of final wait list        10

Time for analysis setup:          7.749s
  Time for loading CPAs:          1.193s
  Time for loading parser:        0.717s
  Time for CFA construction:      5.717s
    Time for parsing file(s):     1.263s
    Time for AST to CFA:          2.222s
    Time for CFA sanity check:    0.512s
    Time for post-processing:     1.499s
      Time for var class.:        0.699s
Time for Analysis:               22.489s
CPU time for analysis:           22.490s
Total time for CPAchecker:       30.244s
Total CPU time for CPAchecker:   30.230s
Time for statistics:              0.186s

Time for Garbage Collector:       1.008s (in 59 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 85MB (    81 MiB) max;     55MB (    52 MiB) avg;     89MB (    85 MiB) peak
Used non-heap memory:             39MB (    37 MiB) max;     34MB (    32 MiB) avg;     39MB (    38 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        41MB (    39 MiB) max;     36MB (    34 MiB) avg
Total process virtual memory:   8083MB (  7709 MiB) max;   8070MB (  7696 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
