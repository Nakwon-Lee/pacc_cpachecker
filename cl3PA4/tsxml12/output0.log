scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-challenges/linux-3.14__complex_emg__linux-usb-dev__drivers-net-wireless-ath-ath10k-ath10k_pci_true-unreach-call.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_6kowb0a_/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 6751: Dead code detected: return (1); (CFACreationUtils.addEdgeToCFA, INFO)

line 7971: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 8026: Dead code detected: __ms___0 = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 8293: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 8348: Dead code detected: __ms___0 = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

line 12070: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 12937: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 13661: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 13695: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 14397: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 14428: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 14447: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 14490: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 14509: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 14539: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 9355: Function pointer *(cb->rx_completion) with type int (*)(struct ath10k *, struct sk_buff *, u8 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9326: Function pointer *(cb->tx_completion) with type int (*)(struct ath10k *, struct sk_buff *, unsigned int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9847: Function pointer *(ar_pci->msg_callbacks_current.tx_completion) with type int (*)(struct ath10k *, struct sk_buff *, unsigned int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7234: Function pointer *(ops->alloc) with type void *(*)(struct device *, size_t , dma_addr_t *, gfp_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7275: Function pointer *(ops->free) with type void (*)(struct device *, size_t , void *, dma_addr_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 7043-7044: Function pointer *(ops->map_page) with type dma_addr_t (*)(struct device *, struct page *, unsigned long, size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7148: Function pointer *(ops->mapping_error) with type int (*)(struct device *, dma_addr_t ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7122: Function pointer *(ops->sync_single_for_device) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7082: Function pointer *(ops->unmap_page) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 13356: Function pointer *arg0 with type int (*)(struct pci_dev *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 13367: Function pointer *arg0 with type int (*)(struct pci_dev *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 13390: Function pointer *arg0 with type int (*)(struct pci_dev *, struct pm_message ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 13402: Function pointer *arg0 with type int (*)(struct pci_dev *, struct pm_message ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function external_allocated_data to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_pre_probe to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_switch_to_interrupt_context to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 13390: Ignoring call via function pointer ldv_pci_instance_suspend_4_8::arg0 for which no suitable target was found in line: tmp = (*arg0)(arg1, arg2); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 13390: Ignoring function call through function pointer *arg0: tmp = (*arg0)(arg1, arg2); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 13402: Ignoring call via function pointer ldv_pci_instance_suspend_late_4_7::arg0 for which no suitable target was found in line: tmp = (*arg0)(arg1, arg2); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 13402: Ignoring function call through function pointer *arg0: tmp = (*arg0)(arg1, arg2); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 13367: Ignoring call via function pointer ldv_pci_instance_resume_early_4_6::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 13367: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 13356: Ignoring call via function pointer ldv_pci_instance_resume_4_5::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 13356: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 13378: Ignoring call via function pointer ldv_pci_instance_shutdown_4_3::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 13378: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 13042: Ignoring call via function pointer ldv_interrupt_instance_thread_3_3::arg0 for which no suitable target was found in line: (*arg0)(arg1, arg2); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 13042: Ignoring function call through function pointer *arg0: (*arg0)(arg1, arg2); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 13030: Ignoring call via function pointer ldv_interrupt_instance_thread_2_3::arg0 for which no suitable target was found in line: (*arg0)(arg1, arg2); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 13030: Ignoring function call through function pointer *arg0: (*arg0)(arg1, arg2); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 13018: Ignoring call via function pointer ldv_interrupt_instance_thread_1_3::arg0 for which no suitable target was found in line: (*arg0)(arg1, arg2); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 13018: Ignoring function call through function pointer *arg0: (*arg0)(arg1, arg2); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 13006: Ignoring call via function pointer ldv_interrupt_instance_thread_0_3::arg0 for which no suitable target was found in line: (*arg0)(arg1, arg2); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 13006: Ignoring function call through function pointer *arg0: (*arg0)(arg1, arg2); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function ath10k_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            30556 (20% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  25686 (84%)
  Because of loop head:            4838 (16%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         32 (0%)
  Times precision was empty:       22244 (73%)
  Times precision was {false}:     372 (1%)
  Times result was cached:         7610 (25%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      330 (1%)
  Times result was 'false':        560 (2%)
Number of strengthen sat checks:   0
Number of coverage checks:         17742
  BDD entailment checks:           8320
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       62
Number of predicates discovered:          17
Number of abstraction locations:          21
Max number of predicates per location:    17
Avg number of predicates per location:    4
Total predicates per abstraction:         22928
Max number of predicates per abstraction: 17
Avg number of predicates per abstraction: 32.66
Number of irrelevant predicates:          19511 (85%)
Number of preds handled by boolean abs:   1284 (6%)
  Total number of models for allsat:      393
  Max number of models for allsat:        8
  Avg number of models for allsat:        1.19

Time for post operator:                  5.954s
  Time for path formula creation:        5.783s
Time for strengthen operator:            0.298s
Time for prec operator:                  5.622s
  Time for abstraction:                  4.670s (Max:     0.028s, Count: 30556)
    Boolean abstraction:                 0.636s
    Solving time:                        0.711s (Max:     0.014s)
    Model enumeration time:              0.037s
    Time for BDD construction:           0.105s (Max:     0.012s)
Time for merge operator:                 0.178s
Time for coverage check:                 0.085s
  Time for BDD entailment checks:        0.059s
Total time for SMT solver (w/o itp):     0.748s

Number of path formula cache hits:   132420 (76%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     4.989s

Total number of created targets for pointer analysis: 28
   Number of created targets for uf: *(struct_list_head)* is 29


Number of BDD nodes:                               610
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        1634 (count: 34883, min: 0, max: 160, avg: 0.05)
Time for BDD node cleanup:                             0.015s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.607s
  Time for transition matches:                         0.271s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.002s
Automaton transfers with branching:                0
Automaton transfer successors:                       149477 (count: 149477, min: 1, max: 1, avg: 1.00) [1 x 149477]

CPA algorithm statistics
------------------------
Number of iterations:            105753
Max size of waitlist:            219
Average size of waitlist:        133
Number of computed successors:   121233
Max successors for one state:    2
Number of times merged:          4711
Number of times stopped:         9605
Number of times breaked:         32

Total time for CPA algorithm:        21.353s (Max:     1.999s)
  Time for choose from waitlist:      0.236s
  Time for precision adjustment:      7.437s
  Time for transfer relation:        10.677s
  Time for merge operator:            0.562s
  Time for stop operator:             0.520s
  Time for adding to reached set:     0.559s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   32
Avg. length of target path (in blocks):                 726 (count: 32, min: 15, max: 27, avg: 22.69)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   1.142s
  Counterexample analysis:                             0.531s (Max:     0.026s, Calls: 32)
    Refinement sat check:                              0.308s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.008s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.038s
  Precision update:                                    0.025s
  ARG update:                                          0.507s

Length of refined path (in blocks):                     437 (count: 32, min: 11, max: 16, avg: 13.66)
Number of affected states:                              213 (count: 32, min: 4, max: 9, avg: 6.66)
Length (states) of path with itp 'true':                192 (count: 32, min: 6, max: 6, avg: 6.00)
Length (states) of path with itp non-trivial itp:       213 (count: 32, min: 4, max: 9, avg: 6.66)
Length (states) of path with itp 'false':                32 (count: 32, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           1 (count: 32, min: 0, max: 1, avg: 0.03)
Equal non-trivial interpolants along paths:             180 (count: 32, min: 3, max: 8, avg: 5.63)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                32
Number of successful refinements:     32
Number of failed refinements:         0
Max. size of reached set before ref.: 4490
Max. size of reached set after ref.:  16
Avg. size of reached set before ref.: 3424.97
Avg. size of reached set after ref.:  16.00

Total time for CEGAR algorithm:      22.703s
Time for refinements:                 1.349s
Average time for refinement:          0.042s
Max time for refinement:              0.113s

Code Coverage
-----------------------------
  Function coverage:      0.178
  Visited lines:          1584
  Total lines:            5453
  Line coverage:          0.290
  Visited conditions:     198
  Total conditions:       1124
  Condition coverage:     0.176

CPAchecker general statistics
-----------------------------
Number of program locations:     7422
Number of CFA edges:             8480
Number of relevant variables:    1444
Number of functions:             315
Number of loops:                 41
Size of reached set:             1980
  Number of reached locations:   534 (7%)
    Avg states per location:     3
    Max states per location:     61 (at node N6483)
  Number of reached functions:   56 (18%)
  Number of partitions:          1971
    Avg size of partitions:      1
    Max size of partitions:      4 (with key [N4050 (before line 12842), Function main called from node N4036, stack depth 1 [6661d8c0], stack [main]])
  Number of target states:       0
  Size of final wait list        186

Time for analysis setup:          7.535s
  Time for loading CPAs:          1.099s
  Time for loading parser:        0.706s
  Time for CFA construction:      5.587s
    Time for parsing file(s):     1.345s
    Time for AST to CFA:          2.127s
    Time for CFA sanity check:    0.458s
    Time for post-processing:     1.335s
      Time for var class.:        0.662s
Time for Analysis:               22.703s
CPU time for analysis:           22.700s
Total time for CPAchecker:       30.249s
Total CPU time for CPAchecker:   30.220s
Time for statistics:              0.144s

Time for Garbage Collector:       0.866s (in 55 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 87MB (    83 MiB) max;     55MB (    52 MiB) avg;     90MB (    86 MiB) peak
Used non-heap memory:             39MB (    38 MiB) max;     34MB (    33 MiB) avg;     40MB (    38 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        41MB (    39 MiB) max;     36MB (    34 MiB) avg
Total process virtual memory:   8085MB (  7711 MiB) max;   8071MB (  7697 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
