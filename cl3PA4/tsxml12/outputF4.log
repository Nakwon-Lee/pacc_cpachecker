scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-challenges/linux-3.14__complex_emg__linux-usb-dev__drivers-net-wireless-ath-ath10k-ath10k_pci_true-unreach-call.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_ai_7zwht/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 6751: Dead code detected: return (1); (CFACreationUtils.addEdgeToCFA, INFO)

line 7971: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 8026: Dead code detected: __ms___0 = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 8293: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 8348: Dead code detected: __ms___0 = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

line 12070: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 12937: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 13661: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 13695: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 14397: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 14428: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 14447: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 14490: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 14509: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 14539: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 9355: Function pointer *(cb->rx_completion) with type int (*)(struct ath10k *, struct sk_buff *, u8 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9326: Function pointer *(cb->tx_completion) with type int (*)(struct ath10k *, struct sk_buff *, unsigned int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9847: Function pointer *(ar_pci->msg_callbacks_current.tx_completion) with type int (*)(struct ath10k *, struct sk_buff *, unsigned int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7234: Function pointer *(ops->alloc) with type void *(*)(struct device *, size_t , dma_addr_t *, gfp_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7275: Function pointer *(ops->free) with type void (*)(struct device *, size_t , void *, dma_addr_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 7043-7044: Function pointer *(ops->map_page) with type dma_addr_t (*)(struct device *, struct page *, unsigned long, size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7148: Function pointer *(ops->mapping_error) with type int (*)(struct device *, dma_addr_t ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7122: Function pointer *(ops->sync_single_for_device) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7082: Function pointer *(ops->unmap_page) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 13356: Function pointer *arg0 with type int (*)(struct pci_dev *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 13367: Function pointer *arg0 with type int (*)(struct pci_dev *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 13390: Function pointer *arg0 with type int (*)(struct pci_dev *, struct pm_message ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 13402: Function pointer *arg0 with type int (*)(struct pci_dev *, struct pm_message ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function external_allocated_data to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __pci_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ath10k_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_switch_to_interrupt_context to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __tasklet_schedule to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_switch_to_process_context to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ath10k_warn to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_pre_probe to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ath10k_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tasklet_kill to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ath10k_core_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_iounmap to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_release_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_clear_master to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_disable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ath10k_core_destroy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 13378: Ignoring call via function pointer ldv_pci_instance_shutdown_4_3::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 13378: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 13356: Ignoring call via function pointer ldv_pci_instance_resume_4_5::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 13356: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 13367: Ignoring call via function pointer ldv_pci_instance_resume_early_4_6::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 13367: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 13402: Ignoring call via function pointer ldv_pci_instance_suspend_late_4_7::arg0 for which no suitable target was found in line: tmp = (*arg0)(arg1, arg2); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 13402: Ignoring function call through function pointer *arg0: tmp = (*arg0)(arg1, arg2); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 13390: Ignoring call via function pointer ldv_pci_instance_suspend_4_8::arg0 for which no suitable target was found in line: tmp = (*arg0)(arg1, arg2); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 13390: Ignoring function call through function pointer *arg0: tmp = (*arg0)(arg1, arg2); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function ldv_check_alloc_flags to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_after_alloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock_bh to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __compiletime_assert_69 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_bh to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function request_threaded_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function list_del to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dev_kfree_skb_any to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 9847: Ignoring function call through function pointer *(ar_pci->msg_callbacks_current.tx_completion): (*(ar_pci->msg_callbacks_current.tx_completion))(ar, netbuf, id); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 7072: Return type of function __builtin_unreachable is void, but result is used as type int: __builtin_unreachable(); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function __builtin_unreachable to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 7082: Ignoring function call through function pointer *(ops->unmap_page): (*(ops->unmap_page))(dev, addr, size, dir, attrs); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function debug_dma_unmap_page to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iowrite32 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_restore_state to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_save_state to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __might_sleep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function kmemdup to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __raw_spin_lock_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ath10k_dbg_dump to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ath10k_core_create to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_assign_resource to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_enable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_request_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dma_set_mask to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dma_supported to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_set_master to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            591122 (21% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  507053 (86%)
  Because of loop head:            77512 (13%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         6557 (1%)
  Times precision was empty:       83476 (14%)
  Times precision was {false}:     6158 (1%)
  Times result was cached:         460670 (78%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      40818 (7%)
  Times result was 'false':        142338 (24%)
Number of strengthen sat checks:   0
Number of coverage checks:         417053
  BDD entailment checks:           293829
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       62
Number of predicates discovered:          78
Number of abstraction locations:          375
Max number of predicates per location:    54
Avg number of predicates per location:    11
Total predicates per abstraction:         12708490
Max number of predicates per abstraction: 54
Avg number of predicates per abstraction: 270.53
Number of irrelevant predicates:          3630520 (29%)
Number of preds handled by boolean abs:   893369 (7%)
  Total number of models for allsat:      708035
  Max number of models for allsat:        2240
  Avg number of models for allsat:        17.35

Time for post operator:                 20.682s
  Time for path formula creation:       19.270s
Time for strengthen operator:            2.562s
Time for prec operator:                747.315s
  Time for abstraction:                740.329s (Max:     0.634s, Count: 591122)
    Boolean abstraction:               239.509s
    Solving time:                       73.113s (Max:     0.040s)
    Model enumeration time:            111.610s
    Time for BDD construction:          44.950s (Max:     0.247s)
Time for merge operator:                 0.641s
Time for coverage check:                 0.566s
  Time for BDD entailment checks:        0.491s
Total time for SMT solver (w/o itp):   184.723s

Number of path formula cache hits:   2934366 (90%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    11.670s

Total number of created targets for pointer analysis: 2394
   Number of created targets for uf: *(void)* is 13
   Number of created targets for uf: *(struct_device_private)* is 3
   Number of created targets for uf: *(struct_ath10k)* is 35
   Number of created targets for uf: *signed_int is 4
   Number of created targets for uf: *(struct_list_head)* is 77
   Number of created targets for uf: *(struct_pci_dev)* is 2
   Number of created targets for uf: *_Bool is 13
   Number of created targets for uf: *unsigned_long_long_int is 3
   Number of created targets for uf: *unsigned_int is 59
   Number of created targets for uf: *(struct_device)* is 2


Number of BDD nodes:                               248475
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                      200047 (count: 735174, min: 0, max: 1684, avg: 0.27)
Time for BDD node cleanup:                             0.216s
Time for BDD garbage collection:                       0.213s (in 34 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  4.648s
  Time for transition matches:                         2.376s
  Time for transition assertions:                      0.002s
  Time for transition actions:                         0.032s
Automaton transfers with branching:                0
Automaton transfer successors:                      2793052 (count: 2793052, min: 1, max: 1, avg: 1.00) [1 x 2793052]

CPA algorithm statistics
------------------------
Number of iterations:            2202153
Max size of waitlist:            191
Average size of waitlist:        57
Number of computed successors:   2533054
Max successors for one state:    2
Number of times merged:          61612
Number of times stopped:         117080
Number of times breaked:         1139

Total time for CPA algorithm:       833.160s (Max:    11.972s)
  Time for choose from waitlist:      1.244s
  Time for precision adjustment:    762.493s
  Time for transfer relation:        52.527s
  Time for merge operator:            2.093s
  Time for stop operator:             4.219s
  Time for adding to reached set:     4.406s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   1139
Avg. length of target path (in blocks):              150044 (count: 1139, min: 29, max: 281, avg: 131.73)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  56.030s
  Counterexample analysis:                            49.135s (Max:     0.218s, Calls: 1139)
    Refinement sat check:                             21.429s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.087s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.636s
  Precision update:                                    1.787s
  ARG update:                                          3.507s

Length of refined path (in blocks):                  105937 (count: 1139, min: 11, max: 221, avg: 93.01)
Number of affected states:                            63401 (count: 1139, min: 4, max: 171, avg: 55.66)
Length (states) of path with itp 'true':              41397 (count: 1139, min: 0, max: 91, avg: 36.35)
Length (states) of path with itp non-trivial itp:     63401 (count: 1139, min: 4, max: 171, avg: 55.66)
Length (states) of path with itp 'false':              1110 (count: 1139, min: 0, max: 1, avg: 0.97)
Different non-trivial interpolants along paths:        1213 (count: 1139, min: 0, max: 5, avg: 1.06)
Equal non-trivial interpolants along paths:           61049 (count: 1139, min: 0, max: 170, avg: 53.60)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                1139
Number of successful refinements:     1139
Number of failed refinements:         0
Max. size of reached set before ref.: 5282
Max. size of reached set after ref.:  2262
Avg. size of reached set before ref.: 2538.12
Avg. size of reached set after ref.:  544.94

Total time for CEGAR algorithm:     892.406s
Time for refinements:                58.754s
Average time for refinement:          0.051s
Max time for refinement:              0.237s

Code Coverage
-----------------------------
  Function coverage:      0.216
  Visited lines:          1835
  Total lines:            5453
  Line coverage:          0.337
  Visited conditions:     258
  Total conditions:       1124
  Condition coverage:     0.230

CPAchecker general statistics
-----------------------------
Number of program locations:     7422
Number of CFA edges:             8480
Number of relevant variables:    1444
Number of functions:             315
Number of loops:                 41
Size of reached set:             3399
  Number of reached locations:   828 (11%)
    Avg states per location:     4
    Max states per location:     42 (at node N6483)
  Number of reached functions:   68 (22%)
  Number of partitions:          3345
    Avg size of partitions:      1
    Max size of partitions:      9 (with key [N4050 (before line 12842), Function main called from node N4036, stack depth 1 [6661d8c0], stack [main]])
  Number of target states:       0
  Size of final wait list        89

Time for analysis setup:          7.862s
  Time for loading CPAs:          1.148s
  Time for loading parser:        0.749s
  Time for CFA construction:      5.781s
    Time for parsing file(s):     1.343s
    Time for AST to CFA:          2.261s
    Time for CFA sanity check:    0.533s
    Time for post-processing:     1.436s
      Time for var class.:        0.668s
Time for Analysis:              892.406s
CPU time for analysis:          892.260s
Total time for CPAchecker:      900.272s
Total CPU time for CPAchecker:  900.110s
Time for statistics:              0.185s

Time for Garbage Collector:      23.029s (in 3059 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                215MB (   205 MiB) max;    127MB (   121 MiB) avg;    217MB (   207 MiB) peak
Used non-heap memory:             42MB (    40 MiB) max;     41MB (    39 MiB) avg;     42MB (    40 MiB) peak
Allocated heap memory:           249MB (   237 MiB) max;    194MB (   185 MiB) avg
Allocated non-heap memory:        44MB (    42 MiB) max;     43MB (    41 MiB) avg
Total process virtual memory:   8963MB (  8547 MiB) max;   8581MB (  8184 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
