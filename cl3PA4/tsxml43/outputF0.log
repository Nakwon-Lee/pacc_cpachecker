scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-challenges/linux-3.14__complex_emg__linux-kernel-locking-mutex__drivers-net-ethernet-realtek-r8169_true-unreach-call.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_1k0dwsgy/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 6060: Dead code detected: return (1); (CFACreationUtils.addEdgeToCFA, INFO)

line 6191: Dead code detected: Goto: case_1 (CFACreationUtils.addEdgeToCFA, INFO)

line 6196: Dead code detected: Goto: case_2 (CFACreationUtils.addEdgeToCFA, INFO)

line 6206: Dead code detected: Goto: case_8 (CFACreationUtils.addEdgeToCFA, INFO)

line 6210: Dead code detected: Goto: switch_default (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label case_8 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_default is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_1 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_2 is not reachable. (CFAFunctionBuilder.leave, INFO)

line 8327: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

line 20153: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 20173: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 20176: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 20178: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 20376: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 22280: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 22293: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 22424: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 23854: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 24765: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 24766: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 24811: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 26722: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 26837: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 26853: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 26869: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 26897: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 26928: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 26957: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 26973: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 27003: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 6779: Function pointer *(ops->alloc) with type void *(*)(struct device *, size_t , dma_addr_t *, gfp_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6820: Function pointer *(ops->free) with type void (*)(struct device *, size_t , void *, dma_addr_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 6549-6550: Function pointer *(ops->map_page) with type dma_addr_t (*)(struct device *, struct page *, unsigned long, size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6694: Function pointer *(ops->mapping_error) with type int (*)(struct device *, dma_addr_t ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6628: Function pointer *(ops->sync_single_for_cpu) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6668: Function pointer *(ops->sync_single_for_device) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6588: Function pointer *(ops->unmap_page) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 23585: Function pointer *arg0 with type int (*)(struct pci_dev *, struct pm_message ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 23597: Function pointer *arg0 with type int (*)(struct pci_dev *, struct pm_message ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 23885: Function pointer *arg0 with type void (*)(struct device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9413: Function pointer *(tp->set_speed) with type int (*)(struct net_device *, u8 , u16 , u8 , u32 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function external_allocated_data to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_switch_to_interrupt_context to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_switch_to_process_context to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 26661: Ignoring call via function pointer ldv_timer_instance_callback_22_2::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 26661: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 23962: Ignoring call via function pointer ldv_pm_ops_instance_prepare_5_22::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 23962: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 24094: Ignoring call via function pointer ldv_pm_ops_instance_suspend_noirq_5_20::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 24094: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 24028: Ignoring call via function pointer ldv_pm_ops_instance_resume_noirq_5_19::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 24028: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 24083: Ignoring call via function pointer ldv_pm_ops_instance_suspend_late_5_18::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 24083: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 24017: Ignoring call via function pointer ldv_pm_ops_instance_resume_early_5_17::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 24017: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 23907: Ignoring call via function pointer ldv_pm_ops_instance_freeze_late_5_14::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 23907: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 24116: Ignoring call via function pointer ldv_pm_ops_instance_thaw_early_5_13::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 24116: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 23918: Ignoring call via function pointer ldv_pm_ops_instance_freeze_noirq_5_12::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 23918: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 24127: Ignoring call via function pointer ldv_pm_ops_instance_thaw_noirq_5_11::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 24127: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 23940: Ignoring call via function pointer ldv_pm_ops_instance_poweroff_late_5_8::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 23940: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 23984: Ignoring call via function pointer ldv_pm_ops_instance_restore_early_5_7::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 23984: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 23951: Ignoring call via function pointer ldv_pm_ops_instance_poweroff_noirq_5_6::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 23951: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 23995: Ignoring call via function pointer ldv_pm_ops_instance_restore_noirq_5_5::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 23995: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 23885: Ignoring call via function pointer ldv_pm_ops_instance_complete_5_3::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 23885: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function ldv_pre_probe to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 23585: Ignoring call via function pointer ldv_pci_instance_suspend_4_8::arg0 for which no suitable target was found in line: tmp = (*arg0)(arg1, arg2); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 23585: Ignoring function call through function pointer *arg0: tmp = (*arg0)(arg1, arg2); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 23597: Ignoring call via function pointer ldv_pci_instance_suspend_late_4_7::arg0 for which no suitable target was found in line: tmp = (*arg0)(arg1, arg2); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 23597: Ignoring function call through function pointer *arg0: tmp = (*arg0)(arg1, arg2); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 23562: Ignoring call via function pointer ldv_pci_instance_resume_early_4_6::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 23562: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 23551: Ignoring call via function pointer ldv_pci_instance_resume_4_5::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 23551: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function eth_validate_addr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ethtool_op_get_ts_info to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ethtool_op_get_link to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 22326: Ignoring call via function pointer ldv_interrupt_instance_thread_0_3::arg0 for which no suitable target was found in line: (*arg0)(arg1, arg2); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 22326: Ignoring function call through function pointer *arg0: (*arg0)(arg1, arg2); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function __udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 12772: Ignoring function call through function pointer *(tp->phy_reset_pending): tmp = (*(tp->phy_reset_pending))(tp); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            2234837 (15% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  2087161 (93%)
  Because of loop head:            147210 (7%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         466 (0%)
  Times precision was empty:       1625588 (73%)
  Times precision was {false}:     1706 (0%)
  Times result was cached:         591703 (26%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      15840 (1%)
  Times result was 'false':        87471 (4%)
Number of strengthen sat checks:   0
Number of coverage checks:         2052110
  BDD entailment checks:           604326
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       113
Number of predicates discovered:          65
Number of abstraction locations:          79
Max number of predicates per location:    65
Avg number of predicates per location:    13
Total predicates per abstraction:         11401589
Max number of predicates per abstraction: 65
Avg number of predicates per abstraction: 649.81
Number of irrelevant predicates:          9536461 (84%)
Number of preds handled by boolean abs:   228959 (2%)
  Total number of models for allsat:      99596
  Max number of models for allsat:        1248
  Avg number of models for allsat:        6.29

Time for post operator:                143.175s
  Time for path formula creation:      136.778s
Time for strengthen operator:           12.093s
Time for prec operator:                358.430s
  Time for abstraction:                329.943s (Max:     3.194s, Count: 2234837)
    Boolean abstraction:                62.295s
    Solving time:                       35.226s (Max:     0.016s)
    Model enumeration time:             16.469s
    Time for BDD construction:           8.162s (Max:     0.181s)
Time for merge operator:                 8.916s
Time for coverage check:                 0.861s
  Time for BDD entailment checks:        0.621s
Total time for SMT solver (w/o itp):    51.695s

Number of path formula cache hits:   13935005 (83%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    86.291s

Total number of created targets for pointer analysis: 6084
   Number of created targets for uf: *unsigned_int is 6085


Number of BDD nodes:                               49409
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                      121823 (count: 2377411, min: 0, max: 1947, avg: 0.05)
Time for BDD node cleanup:                             0.403s
Time for BDD garbage collection:                       0.160s (in 6 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                 17.321s
  Time for transition matches:                         8.136s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.003s
Automaton transfers with branching:                0
Automaton transfer successors:                     14447305 (count: 14447305, min: 1, max: 1, avg: 1.00) [1 x 14447305]

CPA algorithm statistics
------------------------
Number of iterations:            10252455
Max size of waitlist:            3218
Average size of waitlist:        905
Number of computed successors:   11817665
Max successors for one state:    2
Number of times merged:          723892
Number of times stopped:         996762
Number of times breaked:         466

Total time for CPA algorithm:       853.831s (Max:     5.000s)
  Time for choose from waitlist:      4.447s
  Time for precision adjustment:    436.767s
  Time for transfer relation:       300.754s
  Time for merge operator:           30.135s
  Time for stop operator:            32.624s
  Time for adding to reached set:    19.509s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   466
Avg. length of target path (in blocks):               12061 (count: 466, min: 15, max: 32, avg: 25.88)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  29.066s
  Counterexample analysis:                             7.126s (Max:     0.106s, Calls: 466)
    Refinement sat check:                              5.015s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.007s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.134s
  Precision update:                                    0.263s
  ARG update:                                         21.356s

Length of refined path (in blocks):                    7150 (count: 466, min: 11, max: 23, avg: 15.34)
Number of affected states:                             3840 (count: 466, min: 4, max: 16, avg: 8.24)
Length (states) of path with itp 'true':               2844 (count: 466, min: 6, max: 10, avg: 6.10)
Length (states) of path with itp non-trivial itp:      3840 (count: 466, min: 4, max: 16, avg: 8.24)
Length (states) of path with itp 'false':               466 (count: 466, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 466, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:            3374 (count: 466, min: 3, max: 15, avg: 7.24)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                466
Number of successful refinements:     466
Number of failed refinements:         0
Max. size of reached set before ref.: 66784
Max. size of reached set after ref.:  29433
Avg. size of reached set before ref.: 23433.85
Avg. size of reached set after ref.:  406.07

Total time for CEGAR algorithm:     888.861s
Time for refinements:                34.844s
Average time for refinement:          0.074s
Max time for refinement:              0.445s

Code Coverage
-----------------------------
  Function coverage:      0.171
  Visited lines:          2666
  Total lines:            11177
  Line coverage:          0.239
  Visited conditions:     594
  Total conditions:       3074
  Condition coverage:     0.193

CPAchecker general statistics
-----------------------------
Number of program locations:     16548
Number of CFA edges:             19650
Number of relevant variables:    2337
Number of functions:             718
Number of loops:                 33
Size of reached set:             2487
  Number of reached locations:   1581 (10%)
    Avg states per location:     1
    Max states per location:     23 (at node N11496)
  Number of reached functions:   123 (17%)
  Number of partitions:          2475
    Avg size of partitions:      1
    Max size of partitions:      7 (with key [N11297 (before line 22015), Function main called from node N11266, stack depth 1 [560c3758], stack [main]])
  Number of target states:       0
  Size of final wait list        272

Time for analysis setup:         11.375s
  Time for loading CPAs:          1.474s
  Time for loading parser:        0.788s
  Time for CFA construction:      8.962s
    Time for parsing file(s):     1.513s
    Time for AST to CFA:          3.253s
    Time for CFA sanity check:    1.012s
    Time for post-processing:     3.099s
      Time for var class.:        1.209s
Time for Analysis:              888.861s
CPU time for analysis:          888.770s
Total time for CPAchecker:      900.242s
Total CPU time for CPAchecker:  900.130s
Time for statistics:              0.186s

Time for Garbage Collector:      62.741s (in 808 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:               1509MB (  1439 MiB) max;    754MB (   719 MiB) avg;   1533MB (  1462 MiB) peak
Used non-heap memory:             48MB (    46 MiB) max;     40MB (    38 MiB) avg;     48MB (    46 MiB) peak
Allocated heap memory:          1632MB (  1557 MiB) max;   1103MB (  1051 MiB) avg
Allocated non-heap memory:        49MB (    47 MiB) max;     49MB (    47 MiB) avg
Total process virtual memory:   8290MB (  7906 MiB) max;   8165MB (  7786 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
