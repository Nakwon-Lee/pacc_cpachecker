scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-challenges/linux-3.14__complex_emg__linux-kernel-locking-spinlock__drivers-net-ethernet-stmicro-stmmac-stmmac_true-unreach-call.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_djveqs0i/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 6660: Dead code detected: return (1); (CFACreationUtils.addEdgeToCFA, INFO)

line 7839: Dead code detected: Goto: case_1 (CFACreationUtils.addEdgeToCFA, INFO)

line 7862: Dead code detected: Goto: case_1___0 (CFACreationUtils.addEdgeToCFA, INFO)

line 7867: Dead code detected: Goto: case_2 (CFACreationUtils.addEdgeToCFA, INFO)

line 7877: Dead code detected: Goto: case_8 (CFACreationUtils.addEdgeToCFA, INFO)

line 7881: Dead code detected: Goto: switch_default (CFACreationUtils.addEdgeToCFA, INFO)

line 7844: Dead code detected: Goto: case_2___0 (CFACreationUtils.addEdgeToCFA, INFO)

line 7906: Dead code detected: Goto: case_1___1 (CFACreationUtils.addEdgeToCFA, INFO)

line 7911: Dead code detected: Goto: case_2___1 (CFACreationUtils.addEdgeToCFA, INFO)

line 7921: Dead code detected: Goto: case_8___0 (CFACreationUtils.addEdgeToCFA, INFO)

line 7925: Dead code detected: Goto: switch_default___0 (CFACreationUtils.addEdgeToCFA, INFO)

line 7950: Dead code detected: Goto: case_1___2 (CFACreationUtils.addEdgeToCFA, INFO)

line 7955: Dead code detected: Goto: case_2___2 (CFACreationUtils.addEdgeToCFA, INFO)

line 7965: Dead code detected: Goto: case_8___1 (CFACreationUtils.addEdgeToCFA, INFO)

line 7969: Dead code detected: Goto: switch_default___1 (CFACreationUtils.addEdgeToCFA, INFO)

line 7854: Dead code detected: Goto: case_8___2 (CFACreationUtils.addEdgeToCFA, INFO)

line 7994: Dead code detected: Goto: case_1___3 (CFACreationUtils.addEdgeToCFA, INFO)

line 7999: Dead code detected: Goto: case_2___3 (CFACreationUtils.addEdgeToCFA, INFO)

line 8009: Dead code detected: Goto: case_8___3 (CFACreationUtils.addEdgeToCFA, INFO)

line 8013: Dead code detected: Goto: switch_default___2 (CFACreationUtils.addEdgeToCFA, INFO)

line 7858: Dead code detected: Goto: switch_default___3 (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label case_4___0 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_4___3 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_8___3 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_8___2 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_8___1 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_8 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_8___0 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_4 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_1 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_2 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_default is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_2___2 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_2___3 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_2___0 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_2___1 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_1___1 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_1___2 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_1___3 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_1___0 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

line 15766: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 18081: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 18774: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 20566: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 20582: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 20598: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 20650: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 20681: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 20700: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 20719: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 20759: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 20775: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 20827: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 20868: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 20884: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 7279: Function pointer *(ops->alloc) with type void *(*)(struct device *, size_t , dma_addr_t *, gfp_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7320: Function pointer *(ops->free) with type void (*)(struct device *, size_t , void *, dma_addr_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7174: Function pointer *(ops->map_page) with type dma_addr_t (*)(struct device *, struct page *, unsigned long, size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 7095-7096: Function pointer *(ops->map_page) with type dma_addr_t (*)(struct device *, struct page *, unsigned long, size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7195: Function pointer *(ops->mapping_error) with type int (*)(struct device *, dma_addr_t ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7134: Function pointer *(ops->unmap_page) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 15736: Function pointer *arg0 with type long int (*)(struct file *, char *, unsigned long, long long *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 15750: Function pointer *arg0 with type long int (*)(struct file *, char *, unsigned long, long long *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function external_allocated_data to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_driver_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __platform_driver_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __pci_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function single_release to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function single_open to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 15208: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___6 = ldv_xmalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 15253: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___10 = ldv_xmalloc(88UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function seq_lseek to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 15284: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___12 = ldv_xmalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 15516: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___6 = ldv_xmalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 15561: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___10 = ldv_xmalloc(88UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 15592: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___12 = ldv_xmalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function ldv_switch_to_interrupt_context to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pm_wakeup_event to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 11950: Ignoring function call through function pointer *(priv->hw->mac->host_irq_status): tmp___1 = (*(priv->hw->mac->host_irq_status))(__CPAchecker_TMP_0, &(priv->xstats)); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 10492: Ignoring function call through function pointer *(priv->hw->dma->dma_interrupt): status = (*(priv->hw->dma->dma_interrupt))(priv->ioaddr, &(priv->xstats)); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function seq_printf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_pr_debug to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 10432: Ignoring function call through function pointer *(priv->hw->dma->disable_dma_irq): (*(priv->hw->dma->disable_dma_irq))(priv->ioaddr); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 15799: Ignoring call via function pointer ldv_interrupt_instance_thread_2_3::arg0 for which no suitable target was found in line: (*arg0)(arg1, arg2); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 15799: Ignoring function call through function pointer *arg0: (*arg0)(arg1, arg2); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 16552: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___3 = ldv_xmalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 17280: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___3 = ldv_xmalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 18008: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___3 = ldv_xmalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function clk_get_rate to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strlcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ethtool_op_get_link to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netdev_update_features to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netdev_alert to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function might_fault to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _copy_from_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __copy_from_user_overflow to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 9126: Ignoring function call through function pointer *(priv->hw->ptp->config_hw_tstamping): (*(priv->hw->ptp->config_hw_tstamping))(priv->ioaddr, value); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 9127: Ignoring function call through function pointer *(priv->hw->ptp->config_sub_second_increment): (*(priv->hw->ptp->config_sub_second_increment))(priv->ioaddr); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 9121: Ignoring function call through function pointer *(priv->hw->ptp->config_hw_tstamping): (*(priv->hw->ptp->config_hw_tstamping))(priv->ioaddr, 0U); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function _copy_to_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __copy_to_user_overflow to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function eth_mac_addr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            15338 (20% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  14012 (91%)
  Because of loop head:            1312 (9%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         14 (0%)
  Times precision was empty:       14347 (94%)
  Times precision was {false}:     142 (1%)
  Times result was cached:         789 (5%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      60 (0%)
  Times result was 'false':        304 (2%)
Number of strengthen sat checks:   0
Number of coverage checks:         8606
  BDD entailment checks:           2304
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       210
Number of predicates discovered:          11
Number of abstraction locations:          19
Max number of predicates per location:    10
Avg number of predicates per location:    2
Total predicates per abstraction:         2380
Max number of predicates per abstraction: 10
Avg number of predicates per abstraction: 11.78
Number of irrelevant predicates:          1962 (82%)
Number of preds handled by boolean abs:   226 (9%)
  Total number of models for allsat:      58
  Max number of models for allsat:        1
  Avg number of models for allsat:        0.97

Time for post operator:                  4.703s
  Time for path formula creation:        4.576s
Time for strengthen operator:            0.205s
Time for prec operator:                  1.977s
  Time for abstraction:                  1.323s (Max:     0.023s, Count: 15338)
    Boolean abstraction:                 0.126s
    Solving time:                        0.134s (Max:     0.012s)
    Model enumeration time:              0.006s
    Time for BDD construction:           0.012s (Max:     0.004s)
Time for merge operator:                 0.268s
Time for coverage check:                 0.059s
  Time for BDD entailment checks:        0.056s
Total time for SMT solver (w/o itp):     0.140s

Number of path formula cache hits:   73016 (81%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     3.797s

Total number of created targets for pointer analysis: 53
   Number of created targets for uf: *signed_int is 3
   Number of created targets for uf: *unsigned_char is 4
   Number of created targets for uf: *unsigned_int is 4


Number of BDD nodes:                               247
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         373 (count: 17876, min: 0, max: 88, avg: 0.02)
Time for BDD node cleanup:                             0.006s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.507s
  Time for transition matches:                         0.233s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.000s
Automaton transfers with branching:                0
Automaton transfer successors:                        75536 (count: 75536, min: 1, max: 1, avg: 1.00) [1 x 75536]

CPA algorithm statistics
------------------------
Number of iterations:            56717
Max size of waitlist:            126
Average size of waitlist:        58
Number of computed successors:   63127
Max successors for one state:    2
Number of times merged:          3151
Number of times stopped:         5455
Number of times breaked:         14

Total time for CPA algorithm:        16.159s (Max:     3.390s)
  Time for choose from waitlist:      0.158s
  Time for precision adjustment:      3.261s
  Time for transfer relation:         9.935s
  Time for merge operator:            0.721s
  Time for stop operator:             0.751s
  Time for adding to reached set:     0.378s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   14
Avg. length of target path (in blocks):                 299 (count: 14, min: 13, max: 35, avg: 21.36)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.858s
  Counterexample analysis:                             0.440s (Max:     0.049s, Calls: 14)
    Refinement sat check:                              0.351s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.001s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.030s
  Precision update:                                    0.037s
  ARG update:                                          0.326s

Length of refined path (in blocks):                     126 (count: 14, min: 9, max: 9, avg: 9.00)
Number of affected states:                               56 (count: 14, min: 4, max: 4, avg: 4.00)
Length (states) of path with itp 'true':                 56 (count: 14, min: 4, max: 4, avg: 4.00)
Length (states) of path with itp non-trivial itp:        56 (count: 14, min: 4, max: 4, avg: 4.00)
Length (states) of path with itp 'false':                14 (count: 14, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 14, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:              42 (count: 14, min: 3, max: 3, avg: 3.00)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                14
Number of successful refinements:     14
Number of failed refinements:         0
Max. size of reached set before ref.: 10131
Max. size of reached set after ref.:  12
Avg. size of reached set before ref.: 4024.79
Avg. size of reached set after ref.:  12.00

Total time for CEGAR algorithm:      17.195s
Time for refinements:                 1.036s
Average time for refinement:          0.074s
Max time for refinement:              0.123s

Code Coverage
-----------------------------
  Function coverage:      0.088
  Visited lines:          2725
  Total lines:            12522
  Line coverage:          0.218
  Visited conditions:     302
  Total conditions:       6258
  Condition coverage:     0.048

CPAchecker general statistics
-----------------------------
Number of program locations:     22658
Number of CFA edges:             28481
Number of relevant variables:    2542
Number of functions:             906
Number of loops:                 53
Size of reached set:             1190
  Number of reached locations:   952 (4%)
    Avg states per location:     1
    Max states per location:     17 (at node N15992)
  Number of reached functions:   80 (9%)
  Number of partitions:          1190
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0
  Size of final wait list        74

Time for analysis setup:         13.061s
  Time for loading CPAs:          1.310s
  Time for loading parser:        0.710s
  Time for CFA construction:     10.879s
    Time for parsing file(s):     1.768s
    Time for AST to CFA:          3.902s
    Time for CFA sanity check:    1.165s
    Time for post-processing:     3.961s
      Time for var class.:        1.913s
Time for Analysis:               17.195s
CPU time for analysis:           17.200s
Total time for CPAchecker:       30.261s
Total CPU time for CPAchecker:   30.230s
Time for statistics:              0.211s

Time for Garbage Collector:       1.563s (in 59 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                130MB (   124 MiB) max;     79MB (    76 MiB) avg;    135MB (   129 MiB) peak
Used non-heap memory:             46MB (    44 MiB) max;     36MB (    35 MiB) avg;     46MB (    44 MiB) peak
Allocated heap memory:           135MB (   129 MiB) max;    132MB (   126 MiB) avg
Allocated non-heap memory:        48MB (    46 MiB) max;     38MB (    36 MiB) avg
Total process virtual memory:   8087MB (  7712 MiB) max;   8067MB (  7694 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
