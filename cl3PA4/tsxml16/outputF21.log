scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-challenges/linux-3.14__complex_emg__linux-alloc-spinlock__drivers-net-ethernet-sun-sunhme_true-unreach-call.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_zos54pbk/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 5338: Dead code detected: return (1); (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

line 10071: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 10091: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 10094: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 10096: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 10144: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 10624: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 10637: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 11260: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 11302: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 11303: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 11348: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 11693: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 11804: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 11847: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 11875: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 11903: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 11920: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 11936: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 11990: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 5962: Function pointer *(ops->alloc) with type void *(*)(struct device *, size_t , dma_addr_t *, gfp_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6003: Function pointer *(ops->free) with type void (*)(struct device *, size_t , void *, dma_addr_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 5761: Function pointer *(ops->map_page) with type dma_addr_t (*)(struct device *, struct page *, unsigned long, size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 5682-5683: Function pointer *(ops->map_page) with type dma_addr_t (*)(struct device *, struct page *, unsigned long, size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 5836: Function pointer *(ops->sync_single_for_cpu) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 5876: Function pointer *(ops->sync_single_for_device) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 5796: Function pointer *(ops->unmap_page) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 5721: Function pointer *(ops->unmap_page) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 10953: Function pointer *arg0 with type int (*)(struct pci_dev *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 10964: Function pointer *arg0 with type int (*)(struct pci_dev *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 10987: Function pointer *arg0 with type int (*)(struct pci_dev *, struct pm_message ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 10999: Function pointer *arg0 with type int (*)(struct pci_dev *, struct pm_message ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function external_allocated_data to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_switch_to_interrupt_context to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_switch_to_process_context to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 11632: Ignoring call via function pointer ldv_timer_instance_callback_3_2::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 11632: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 10975: Ignoring call via function pointer ldv_pci_instance_shutdown_2_3::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 10975: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 10953: Ignoring call via function pointer ldv_pci_instance_resume_2_5::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 10953: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 10964: Ignoring call via function pointer ldv_pci_instance_resume_early_2_6::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 10964: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 10999: Ignoring call via function pointer ldv_pci_instance_suspend_late_2_7::arg0 for which no suitable target was found in line: tmp = (*arg0)(arg1, arg2); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 10999: Ignoring function call through function pointer *arg0: tmp = (*arg0)(arg1, arg2); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 10987: Ignoring call via function pointer ldv_pci_instance_suspend_2_8::arg0 for which no suitable target was found in line: tmp = (*arg0)(arg1, arg2); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 10987: Ignoring function call through function pointer *arg0: tmp = (*arg0)(arg1, arg2); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function ldv_pre_probe to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function eth_change_mtu to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function eth_mac_addr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function eth_validate_addr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 10670: Ignoring call via function pointer ldv_interrupt_instance_thread_0_3::arg0 for which no suitable target was found in line: (*arg0)(arg1, arg2); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 10670: Ignoring function call through function pointer *arg0: (*arg0)(arg1, arg2); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function ldv_assert to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 11230: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___3 = ldv_xmalloc(32UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function strcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_enable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_set_master to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __raw_spin_lock_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_request_regions to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ioremap_nocache to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_release_regions to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_map_rom to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function get_random_bytes to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_unmap_rom to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function init_timer_key to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iounmap to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 5962: Ignoring function call through function pointer *(ops->alloc): memory = (*(ops->alloc))(dev, size, dma_handle, tmp___1, attrs); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function debug_dma_alloc_coherent to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_pre_register_netdev to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function request_threaded_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 5711: Return type of function __builtin_unreachable is void, but result is used as type int: __builtin_unreachable(); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function __builtin_unreachable to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 5721: Ignoring function call through function pointer *(ops->unmap_page): (*(ops->unmap_page))(dev, addr, size, dir, attrs); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function debug_dma_unmap_page to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dev_kfree_skb_any to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 5786: Return type of function __builtin_unreachable is void, but result is used as type int: __builtin_unreachable(); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

line 5796: Ignoring function call through function pointer *(ops->unmap_page): (*(ops->unmap_page))(dev, addr, size, dir, (struct dma_attrs *)0); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function skb_put to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 5675: Return type of function __builtin_unreachable is void, but result is used as type int: __builtin_unreachable(); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function __phys_addr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

lines 5682-5683: Ignoring function call through function pointer *(ops->map_page): addr = (*(ops->map_page))(dev, ((struct page *)0L) + (tmp___2 >> 12), ((unsigned long)ptr) & 4095UL, size, dir, attrs); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function debug_dma_map_page to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strlcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            3046378 (28% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  2716395 (89%)
  Because of loop head:            329722 (11%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         261 (0%)
  Times precision was empty:       2442671 (80%)
  Times precision was {false}:     7370 (0%)
  Times result was cached:         563750 (19%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      32587 (1%)
  Times result was 'false':        102245 (3%)
Number of strengthen sat checks:   0
Number of coverage checks:         1776108
  BDD entailment checks:           1383576
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       43
Number of predicates discovered:          28
Number of abstraction locations:          186
Max number of predicates per location:    23
Avg number of predicates per location:    4
Total predicates per abstraction:         4300284
Max number of predicates per abstraction: 23
Avg number of predicates per abstraction: 107.62
Number of irrelevant predicates:          2017193 (47%)
Number of preds handled by boolean abs:   250342 (6%)
  Total number of models for allsat:      73214
  Max number of models for allsat:        20
  Avg number of models for allsat:        2.25

Time for post operator:                174.710s
  Time for path formula creation:      168.778s
Time for strengthen operator:           12.884s
Time for prec operator:                278.229s
  Time for abstraction:                242.594s (Max:     3.436s, Count: 3046378)
    Boolean abstraction:                49.037s
    Solving time:                       35.643s (Max:     0.091s)
    Model enumeration time:              9.924s
    Time for BDD construction:           2.338s (Max:     0.081s)
Time for merge operator:                 5.848s
Time for coverage check:                 1.728s
  Time for BDD entailment checks:        1.418s
Total time for SMT solver (w/o itp):    45.567s

Number of path formula cache hits:   9374775 (70%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:   123.204s

Total number of created targets for pointer analysis: 13057
   Number of created targets for uf: *(void)* is 221
   Number of created targets for uf: *(struct_device_private)* is 282
   Number of created targets for uf: *signed_int is 1061
   Number of created targets for uf: *unsigned_int is 93
   Number of created targets for uf: *char is 5093


Number of BDD nodes:                               188166
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                      126000 (count: 4111992, min: 0, max: 8234, avg: 0.03)
Time for BDD node cleanup:                             0.578s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                 17.089s
  Time for transition matches:                         9.122s
  Time for transition assertions:                      0.001s
  Time for transition actions:                         0.005s
Automaton transfers with branching:                0
Automaton transfer successors:                     11025624 (count: 11025624, min: 1, max: 1, avg: 1.00) [1 x 11025624]

CPA algorithm statistics
------------------------
Number of iterations:            8490430
Max size of waitlist:            1034
Average size of waitlist:        324
Number of computed successors:   9128238
Max successors for one state:    2
Number of times merged:          196266
Number of times stopped:         478773
Number of times breaked:         261

Total time for CPA algorithm:       847.881s (Max:    13.201s)
  Time for choose from waitlist:      4.733s
  Time for precision adjustment:    357.408s
  Time for transfer relation:       411.550s
  Time for merge operator:           11.004s
  Time for stop operator:            16.065s
  Time for adding to reached set:    20.055s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   261
Avg. length of target path (in blocks):               49803 (count: 261, min: 126, max: 340, avg: 190.82)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  36.869s
  Counterexample analysis:                            17.282s (Max:     0.188s, Calls: 261)
    Refinement sat check:                              7.772s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.040s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.377s
  Precision update:                                    0.383s
  ARG update:                                         18.439s

Length of refined path (in blocks):                   16810 (count: 261, min: 9, max: 214, avg: 64.41)
Number of affected states:                            13165 (count: 261, min: 0, max: 209, avg: 50.44)
Length (states) of path with itp 'true':               3384 (count: 261, min: 0, max: 57, avg: 12.97)
Length (states) of path with itp non-trivial itp:     13165 (count: 261, min: 0, max: 209, avg: 50.44)
Length (states) of path with itp 'false':               261 (count: 261, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:          53 (count: 261, min: 0, max: 4, avg: 0.20)
Equal non-trivial interpolants along paths:           12852 (count: 261, min: 0, max: 208, avg: 49.24)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                261
Number of successful refinements:     261
Number of failed refinements:         0
Max. size of reached set before ref.: 73790
Max. size of reached set after ref.:  25388
Avg. size of reached set before ref.: 35490.16
Avg. size of reached set after ref.:  2780.28

Total time for CEGAR algorithm:     892.668s
Time for refinements:                44.210s
Average time for refinement:          0.169s
Max time for refinement:              1.662s

Code Coverage
-----------------------------
  Function coverage:      0.142
  Visited lines:          1423
  Total lines:            4626
  Line coverage:          0.308
  Visited conditions:     134
  Total conditions:       984
  Condition coverage:     0.136

CPAchecker general statistics
-----------------------------
Number of program locations:     6584
Number of CFA edges:             7510
Number of relevant variables:    918
Number of functions:             345
Number of loops:                 41
Size of reached set:             9939
  Number of reached locations:   496 (8%)
    Avg states per location:     20
    Max states per location:     106 (at node N4780)
  Number of reached functions:   49 (14%)
  Number of partitions:          9824
    Avg size of partitions:      1
    Max size of partitions:      26 (with key [N3629 (before line 10539), Function main called from node N3617, stack depth 1 [7bdf61ad], stack [main]])
  Number of target states:       0
  Size of final wait list        348

Time for analysis setup:          7.589s
  Time for loading CPAs:          1.212s
  Time for loading parser:        0.675s
  Time for CFA construction:      5.596s
    Time for parsing file(s):     1.252s
    Time for AST to CFA:          2.106s
    Time for CFA sanity check:    0.535s
    Time for post-processing:     1.481s
      Time for var class.:        0.624s
Time for Analysis:              892.669s
CPU time for analysis:          892.590s
Total time for CPAchecker:      900.265s
Total CPU time for CPAchecker:  900.170s
Time for statistics:              0.303s

Time for Garbage Collector:      71.092s (in 664 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:               1768MB (  1686 MiB) max;    819MB (   781 MiB) avg;   1808MB (  1724 MiB) peak
Used non-heap memory:             41MB (    39 MiB) max;     40MB (    38 MiB) avg;     41MB (    39 MiB) peak
Allocated heap memory:          2259MB (  2154 MiB) max;   1240MB (  1182 MiB) avg
Allocated non-heap memory:        43MB (    41 MiB) max;     42MB (    40 MiB) avg
Total process virtual memory:   8562MB (  8165 MiB) max;   8314MB (  7929 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
