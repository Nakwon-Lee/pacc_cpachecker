scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-challenges/linux-3.14__complex_emg__linux-alloc-spinlock__drivers-net-ethernet-sun-sunhme_true-unreach-call.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_4u7igosa/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 5338: Dead code detected: return (1); (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

line 10071: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 10091: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 10094: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 10096: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 10144: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 10624: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 10637: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 11260: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 11302: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 11303: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 11348: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 11693: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 11804: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 11847: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 11875: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 11903: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 11920: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 11936: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 11990: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 5962: Function pointer *(ops->alloc) with type void *(*)(struct device *, size_t , dma_addr_t *, gfp_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6003: Function pointer *(ops->free) with type void (*)(struct device *, size_t , void *, dma_addr_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 5761: Function pointer *(ops->map_page) with type dma_addr_t (*)(struct device *, struct page *, unsigned long, size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 5682-5683: Function pointer *(ops->map_page) with type dma_addr_t (*)(struct device *, struct page *, unsigned long, size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 5836: Function pointer *(ops->sync_single_for_cpu) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 5876: Function pointer *(ops->sync_single_for_device) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 5796: Function pointer *(ops->unmap_page) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 5721: Function pointer *(ops->unmap_page) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 10953: Function pointer *arg0 with type int (*)(struct pci_dev *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 10964: Function pointer *arg0 with type int (*)(struct pci_dev *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 10987: Function pointer *arg0 with type int (*)(struct pci_dev *, struct pm_message ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 10999: Function pointer *arg0 with type int (*)(struct pci_dev *, struct pm_message ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function external_allocated_data to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_assert to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __pci_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 10670: Ignoring call via function pointer ldv_interrupt_instance_thread_0_3::arg0 for which no suitable target was found in line: (*arg0)(arg1, arg2); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 10670: Ignoring function call through function pointer *arg0: (*arg0)(arg1, arg2); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function _raw_spin_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 5711: Return type of function __builtin_unreachable is void, but result is used as type int: __builtin_unreachable(); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function __builtin_unreachable to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 5721: Ignoring function call through function pointer *(ops->unmap_page): (*(ops->unmap_page))(dev, addr, size, dir, attrs); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function debug_dma_unmap_page to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function skb_put to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 5675: Return type of function __builtin_unreachable is void, but result is used as type int: __builtin_unreachable(); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function __phys_addr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

lines 5682-5683: Ignoring function call through function pointer *(ops->map_page): addr = (*(ops->map_page))(dev, ((struct page *)0L) + (tmp___2 >> 12), ((unsigned long)ptr) & 4095UL, size, dir, attrs); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function debug_dma_map_page to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function skb_trim to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netif_rx to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_switch_to_interrupt_context to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_switch_to_process_context to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strlcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            17300 (25% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  13885 (80%)
  Because of loop head:            3379 (20%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         36 (0%)
  Times precision was empty:       11172 (65%)
  Times precision was {false}:     486 (3%)
  Times result was cached:         4629 (27%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      1013 (6%)
  Times result was 'false':        912 (5%)
Number of strengthen sat checks:   0
Number of coverage checks:         9581
  BDD entailment checks:           6679
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       43
Number of predicates discovered:          11
Number of abstraction locations:          63
Max number of predicates per location:    10
Avg number of predicates per location:    3
Total predicates per abstraction:         25853
Max number of predicates per abstraction: 10
Avg number of predicates per abstraction: 17.25
Number of irrelevant predicates:          11644 (45%)
Number of preds handled by boolean abs:   3426 (13%)
  Total number of models for allsat:      1272
  Max number of models for allsat:        6
  Avg number of models for allsat:        1.26

Time for post operator:                  6.185s
  Time for path formula creation:        6.045s
Time for strengthen operator:            0.242s
Time for prec operator:                  6.979s
  Time for abstraction:                  6.269s (Max:     0.025s, Count: 17300)
    Boolean abstraction:                 1.358s
    Solving time:                        1.055s (Max:     0.014s)
    Model enumeration time:              0.144s
    Time for BDD construction:           0.142s (Max:     0.008s)
Time for merge operator:                 0.202s
Time for coverage check:                 0.109s
  Time for BDD entailment checks:        0.100s
Total time for SMT solver (w/o itp):     1.199s

Number of path formula cache hits:   40535 (51%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     5.576s

Total number of created targets for pointer analysis: 180
   Number of created targets for uf: *signed_int is 181


Number of BDD nodes:                               1409
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        2857 (count: 27155, min: 0, max: 480, avg: 0.11)
Time for BDD node cleanup:                             0.028s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.499s
Automaton transfers with branching:                0
Automaton transfer successors:                        70310 (count: 70310, min: 1, max: 1, avg: 1.00) [1 x 70310]

CPA algorithm statistics
------------------------
Number of iterations:            52687
Max size of waitlist:            107
Average size of waitlist:        51
Number of computed successors:   58673
Max successors for one state:    2
Number of times merged:          1451
Number of times stopped:         3628
Number of times breaked:         36

Total time for CPA algorithm:        19.762s (Max:     1.768s)
  Time for choose from waitlist:      0.157s
  Time for precision adjustment:      8.125s
  Time for transfer relation:         9.528s
  Time for merge operator:            0.365s
  Time for stop operator:             0.435s
  Time for adding to reached set:     0.298s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   36
Avg. length of target path (in blocks):                5168 (count: 36, min: 40, max: 221, avg: 143.56)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   2.673s
  Counterexample analysis:                             2.131s (Max:     0.102s, Calls: 36)
    Refinement sat check:                              0.950s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.015s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.064s
  Precision update:                                    0.035s
  ARG update:                                          0.329s

Length of refined path (in blocks):                    2575 (count: 35, min: 9, max: 97, avg: 73.57)
Number of affected states:                              696 (count: 35, min: 0, max: 70, avg: 19.89)
Length (states) of path with itp 'true':               1844 (count: 35, min: 4, max: 74, avg: 52.69)
Length (states) of path with itp non-trivial itp:       696 (count: 35, min: 0, max: 70, avg: 19.89)
Length (states) of path with itp 'false':                35 (count: 35, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 35, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:             662 (count: 35, min: 0, max: 69, avg: 18.91)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                36
Number of successful refinements:     35
Number of failed refinements:         0
Max. size of reached set before ref.: 2820
Max. size of reached set after ref.:  729
Avg. size of reached set before ref.: 1959.83
Avg. size of reached set after ref.:  469.14

Total time for CEGAR algorithm:      22.764s
Time for refinements:                 2.975s
Average time for refinement:          0.082s
Max time for refinement:              0.135s

Code Coverage
-----------------------------
  Function coverage:      0.232
  Visited lines:          1616
  Total lines:            4626
  Line coverage:          0.349
  Visited conditions:     180
  Total conditions:       984
  Condition coverage:     0.183

CPAchecker general statistics
-----------------------------
Number of program locations:     6584
Number of CFA edges:             7510
Number of relevant variables:    918
Number of functions:             345
Number of loops:                 41
Size of reached set:             2820
  Number of reached locations:   730 (11%)
    Avg states per location:     3
    Max states per location:     53 (at node N4780)
  Number of reached functions:   80 (23%)
  Number of partitions:          2777
    Avg size of partitions:      1
    Max size of partitions:      13 (with key [N3658 (before line 10577), Function main called from node N3617, stack depth 1 [7bdf61ad], stack [main]])
  Number of target states:       1
  Size of final wait list        93

Time for analysis setup:          7.507s
  Time for loading CPAs:          1.154s
  Time for loading parser:        0.765s
  Time for CFA construction:      5.461s
    Time for parsing file(s):     1.199s
    Time for AST to CFA:          2.176s
    Time for CFA sanity check:    0.498s
    Time for post-processing:     1.401s
      Time for var class.:        0.600s
Time for Analysis:               22.764s
CPU time for analysis:           22.760s
Total time for CPAchecker:       30.279s
Total CPU time for CPAchecker:   30.250s
Time for statistics:              0.178s

Time for Garbage Collector:       0.648s (in 39 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 81MB (    78 MiB) max;     52MB (    50 MiB) avg;     85MB (    81 MiB) peak
Used non-heap memory:             41MB (    39 MiB) max;     35MB (    33 MiB) avg;     41MB (    39 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        43MB (    41 MiB) max;     36MB (    35 MiB) avg
Total process virtual memory:   8086MB (  7712 MiB) max;   8071MB (  7697 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
