scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-challenges/linux-3.14__complex_emg__linux-drivers-clk1__drivers-net-ethernet-intel-igb-igb_true-unreach-call.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run__v6r6tid/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 7074: Dead code detected: return (1); (CFACreationUtils.addEdgeToCFA, INFO)

line 7244: Dead code detected: Goto: case_1 (CFACreationUtils.addEdgeToCFA, INFO)

line 7249: Dead code detected: Goto: case_2 (CFACreationUtils.addEdgeToCFA, INFO)

line 7259: Dead code detected: Goto: case_8 (CFACreationUtils.addEdgeToCFA, INFO)

line 7263: Dead code detected: Goto: switch_default (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label case_8 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_default is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_1 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_2 is not reachable. (CFAFunctionBuilder.leave, INFO)

line 7354: Dead code detected: Goto: case_1 (CFACreationUtils.addEdgeToCFA, INFO)

line 7359: Dead code detected: Goto: case_2 (CFACreationUtils.addEdgeToCFA, INFO)

line 7369: Dead code detected: Goto: case_8 (CFACreationUtils.addEdgeToCFA, INFO)

line 7373: Dead code detected: Goto: switch_default (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label case_8 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_default is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_1 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_2 is not reachable. (CFAFunctionBuilder.leave, INFO)

line 7404: Dead code detected: Goto: case_1 (CFACreationUtils.addEdgeToCFA, INFO)

line 7409: Dead code detected: Goto: case_2 (CFACreationUtils.addEdgeToCFA, INFO)

line 7419: Dead code detected: Goto: case_8 (CFACreationUtils.addEdgeToCFA, INFO)

line 7423: Dead code detected: Goto: switch_default (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label case_8 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_default is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_1 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_2 is not reachable. (CFAFunctionBuilder.leave, INFO)

line 7482: Dead code detected: Goto: case_1 (CFACreationUtils.addEdgeToCFA, INFO)

line 7487: Dead code detected: Goto: case_2 (CFACreationUtils.addEdgeToCFA, INFO)

line 7497: Dead code detected: Goto: case_8 (CFACreationUtils.addEdgeToCFA, INFO)

line 7501: Dead code detected: Goto: switch_default (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label case_8 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_default is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_1 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_2 is not reachable. (CFAFunctionBuilder.leave, INFO)

line 7799: Dead code detected: Goto: case_1 (CFACreationUtils.addEdgeToCFA, INFO)

line 7822: Dead code detected: Goto: case_1___0 (CFACreationUtils.addEdgeToCFA, INFO)

line 7827: Dead code detected: Goto: case_2 (CFACreationUtils.addEdgeToCFA, INFO)

line 7837: Dead code detected: Goto: case_8 (CFACreationUtils.addEdgeToCFA, INFO)

line 7841: Dead code detected: Goto: switch_default (CFACreationUtils.addEdgeToCFA, INFO)

line 7804: Dead code detected: Goto: case_2___0 (CFACreationUtils.addEdgeToCFA, INFO)

line 7866: Dead code detected: Goto: case_1___1 (CFACreationUtils.addEdgeToCFA, INFO)

line 7871: Dead code detected: Goto: case_2___1 (CFACreationUtils.addEdgeToCFA, INFO)

line 7881: Dead code detected: Goto: case_8___0 (CFACreationUtils.addEdgeToCFA, INFO)

line 7885: Dead code detected: Goto: switch_default___0 (CFACreationUtils.addEdgeToCFA, INFO)

line 7910: Dead code detected: Goto: case_1___2 (CFACreationUtils.addEdgeToCFA, INFO)

line 7915: Dead code detected: Goto: case_2___2 (CFACreationUtils.addEdgeToCFA, INFO)

line 7925: Dead code detected: Goto: case_8___1 (CFACreationUtils.addEdgeToCFA, INFO)

line 7929: Dead code detected: Goto: switch_default___1 (CFACreationUtils.addEdgeToCFA, INFO)

line 7814: Dead code detected: Goto: case_8___2 (CFACreationUtils.addEdgeToCFA, INFO)

line 7954: Dead code detected: Goto: case_1___3 (CFACreationUtils.addEdgeToCFA, INFO)

line 7959: Dead code detected: Goto: case_2___3 (CFACreationUtils.addEdgeToCFA, INFO)

line 7969: Dead code detected: Goto: case_8___3 (CFACreationUtils.addEdgeToCFA, INFO)

line 7973: Dead code detected: Goto: switch_default___2 (CFACreationUtils.addEdgeToCFA, INFO)

line 7818: Dead code detected: Goto: switch_default___3 (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label case_4___0 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_4___3 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_8___3 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_8___2 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_8___1 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_8 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_8___0 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_4 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_1 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_2 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_default is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_2___2 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_2___3 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_2___0 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_2___1 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_1___1 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_1___2 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_1___3 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_1___0 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

line 16800: Dead code detected: f = 0U; (CFACreationUtils.addEdgeToCFA, INFO)

line 17675: Dead code detected: Goto: case_1 (CFACreationUtils.addEdgeToCFA, INFO)

line 17698: Dead code detected: Goto: case_1___0 (CFACreationUtils.addEdgeToCFA, INFO)

line 17703: Dead code detected: Goto: case_2 (CFACreationUtils.addEdgeToCFA, INFO)

line 17713: Dead code detected: Goto: case_8 (CFACreationUtils.addEdgeToCFA, INFO)

line 17717: Dead code detected: Goto: switch_default (CFACreationUtils.addEdgeToCFA, INFO)

line 17680: Dead code detected: Goto: case_2___0 (CFACreationUtils.addEdgeToCFA, INFO)

line 17742: Dead code detected: Goto: case_1___1 (CFACreationUtils.addEdgeToCFA, INFO)

line 17747: Dead code detected: Goto: case_2___1 (CFACreationUtils.addEdgeToCFA, INFO)

line 17757: Dead code detected: Goto: case_8___0 (CFACreationUtils.addEdgeToCFA, INFO)

line 17761: Dead code detected: Goto: switch_default___0 (CFACreationUtils.addEdgeToCFA, INFO)

line 17786: Dead code detected: Goto: case_1___2 (CFACreationUtils.addEdgeToCFA, INFO)

line 17791: Dead code detected: Goto: case_2___2 (CFACreationUtils.addEdgeToCFA, INFO)

line 17801: Dead code detected: Goto: case_8___1 (CFACreationUtils.addEdgeToCFA, INFO)

line 17805: Dead code detected: Goto: switch_default___1 (CFACreationUtils.addEdgeToCFA, INFO)

line 17690: Dead code detected: Goto: case_8___2 (CFACreationUtils.addEdgeToCFA, INFO)

line 17830: Dead code detected: Goto: case_1___3 (CFACreationUtils.addEdgeToCFA, INFO)

line 17835: Dead code detected: Goto: case_2___3 (CFACreationUtils.addEdgeToCFA, INFO)

line 17845: Dead code detected: Goto: case_8___3 (CFACreationUtils.addEdgeToCFA, INFO)

line 17849: Dead code detected: Goto: switch_default___2 (CFACreationUtils.addEdgeToCFA, INFO)

line 17694: Dead code detected: Goto: switch_default___3 (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label case_4___0 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_4___3 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_8___3 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_8___2 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_8___1 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_8 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_8___0 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_4 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_1 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_2 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_default is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_2___2 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_2___3 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_2___0 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_2___1 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_1___1 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_1___2 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_1___3 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_1___0 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

line 20941: Dead code detected: return (0); (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

line 22328: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 22348: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 22351: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 22353: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 22576: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 22590: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 23735: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 24163: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 25367: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 26277: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 26278: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 26323: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 27769: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 27843: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 27886: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 27905: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 27948: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 27967: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 28019: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 28035: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 28052: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 28068: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 28096: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 28112: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 28152: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 28168: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 28184: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 28200: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 28216: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 28243: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 28259: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

line 34232: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 34351: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

line 36175: Dead code detected: __ms = 5UL; (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

line 47748: Dead code detected: __ms = 5UL; (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 38461: Function pointer *(hw->phy.ops.write_reg) with type s32 (*)(struct e1000_hw *, u32 , u16 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 38474: Function pointer *(hw->phy.ops.write_reg) with type s32 (*)(struct e1000_hw *, u32 , u16 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 48778: Function pointer *(hw->phy.ops.write_reg) with type s32 (*)(struct e1000_hw *, u32 , u16 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 48786: Function pointer *(hw->phy.ops.write_reg) with type s32 (*)(struct e1000_hw *, u32 , u16 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 48794: Function pointer *(hw->phy.ops.write_reg) with type s32 (*)(struct e1000_hw *, u32 , u16 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 48816: Function pointer *(hw->phy.ops.write_reg) with type s32 (*)(struct e1000_hw *, u32 , u16 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 48807: Function pointer *(hw->phy.ops.write_reg) with type s32 (*)(struct e1000_hw *, u32 , u16 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 8665: Function pointer *(ops->alloc) with type void *(*)(struct device *, size_t , dma_addr_t *, gfp_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 8706: Function pointer *(ops->free) with type void (*)(struct device *, size_t , void *, dma_addr_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 8435: Function pointer *(ops->map_page) with type dma_addr_t (*)(struct device *, struct page *, unsigned long, size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 8356-8357: Function pointer *(ops->map_page) with type dma_addr_t (*)(struct device *, struct page *, unsigned long, size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 8579: Function pointer *(ops->mapping_error) with type int (*)(struct device *, dma_addr_t ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 28332: Function pointer *(ops->sync_single_for_cpu) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 28372: Function pointer *(ops->sync_single_for_device) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 8511: Function pointer *(ops->sync_single_for_cpu) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 8552-8553: Function pointer *(ops->sync_single_for_device) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 8470: Function pointer *(ops->unmap_page) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 8395: Function pointer *(ops->unmap_page) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 36094: Function pointer *(hw->mac.ops.acquire_swfw_sync) with type s32 (*)(struct e1000_hw *, u16 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 35570: Function pointer *(hw->mac.ops.acquire_swfw_sync) with type s32 (*)(struct e1000_hw *, u16 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 39732: Function pointer *(hw->nvm.ops.read) with type s32 (*)(struct e1000_hw *, u16 , u16 , u16 *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 39781: Function pointer *(hw->nvm.ops.read) with type s32 (*)(struct e1000_hw *, u16 , u16 , u16 *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 47144: Function pointer *(mbx->ops.check_for_ack) with type s32 (*)(struct e1000_hw *, u16 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 34555: Function pointer *(phy->ops.write_reg) with type s32 (*)(struct e1000_hw *, u32 , u16 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 34576: Function pointer *(phy->ops.write_reg) with type s32 (*)(struct e1000_hw *, u32 , u16 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 34592: Function pointer *(phy->ops.write_reg) with type s32 (*)(struct e1000_hw *, u32 , u16 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 47125: Function pointer *(mbx->ops.check_for_msg) with type s32 (*)(struct e1000_hw *, u16 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 47163: Function pointer *(mbx->ops.check_for_rst) with type s32 (*)(struct e1000_hw *, u16 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 44669: Function pointer *(phy->ops.write_reg) with type s32 (*)(struct e1000_hw *, u32 , u16 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 43970: Function pointer *(phy->ops.write_reg) with type s32 (*)(struct e1000_hw *, u32 , u16 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 44016: Function pointer *(hw->phy.ops.write_reg) with type s32 (*)(struct e1000_hw *, u32 , u16 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 44407: Function pointer *(phy->ops.set_d0_lplu_state) with type s32 (*)(struct e1000_hw *, bool ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 44472: Function pointer *(phy->ops.write_reg) with type s32 (*)(struct e1000_hw *, u32 , u16 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 44559: Function pointer *(phy->ops.write_reg) with type s32 (*)(struct e1000_hw *, u32 , u16 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 44491: Function pointer *(phy->ops.write_reg) with type s32 (*)(struct e1000_hw *, u32 , u16 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 44508: Function pointer *(phy->ops.write_reg) with type s32 (*)(struct e1000_hw *, u32 , u16 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 44375: Function pointer *(phy->ops.set_d3_lplu_state) with type s32 (*)(struct e1000_hw *, bool ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 44094: Function pointer *(phy->ops.write_reg) with type s32 (*)(struct e1000_hw *, u32 , u16 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 44119: Function pointer *(phy->ops.write_reg) with type s32 (*)(struct e1000_hw *, u32 , u16 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 44276: Function pointer *(phy->ops.write_reg) with type s32 (*)(struct e1000_hw *, u32 , u16 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 44237: Function pointer *(phy->ops.write_reg) with type s32 (*)(struct e1000_hw *, u32 , u16 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 46157: Function pointer *(phy->ops.write_reg) with type s32 (*)(struct e1000_hw *, u32 , u16 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 46183: Function pointer *(phy->ops.write_reg) with type s32 (*)(struct e1000_hw *, u32 , u16 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 46111: Function pointer *(phy->ops.write_reg) with type s32 (*)(struct e1000_hw *, u32 , u16 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 46139: Function pointer *(phy->ops.write_reg) with type s32 (*)(struct e1000_hw *, u32 , u16 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 29884: Function pointer *(hw->nvm.ops.read) with type s32 (*)(struct e1000_hw *, u16 , u16 , u16 *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 29876-29877: Function pointer *(hw->nvm.ops.read) with type s32 (*)(struct e1000_hw *, u16 , u16 , u16 *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 42914: Function pointer *(hw->nvm.ops.read) with type s32 (*)(struct e1000_hw *, u16 , u16 , u16 *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 42987: Function pointer *(hw->nvm.ops.read) with type s32 (*)(struct e1000_hw *, u16 , u16 , u16 *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 43012: Function pointer *(hw->nvm.ops.read) with type s32 (*)(struct e1000_hw *, u16 , u16 , u16 *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 43028: Function pointer *(hw->nvm.ops.read) with type s32 (*)(struct e1000_hw *, u16 , u16 , u16 *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 43029: Function pointer *(hw->nvm.ops.read) with type s32 (*)(struct e1000_hw *, u16 , u16 , u16 *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 42991: Function pointer *(hw->nvm.ops.read) with type s32 (*)(struct e1000_hw *, u16 , u16 , u16 *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 42992: Function pointer *(hw->nvm.ops.read) with type s32 (*)(struct e1000_hw *, u16 , u16 , u16 *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 42958: Function pointer *(hw->nvm.ops.read) with type s32 (*)(struct e1000_hw *, u16 , u16 , u16 *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 38686: Function pointer *(hw->nvm.ops.read) with type s32 (*)(struct e1000_hw *, u16 , u16 , u16 *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 38694: Function pointer *(hw->nvm.ops.read) with type s32 (*)(struct e1000_hw *, u16 , u16 , u16 *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 38711: Function pointer *(hw->nvm.ops.read) with type s32 (*)(struct e1000_hw *, u16 , u16 , u16 *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 38717-38718: Function pointer *(hw->phy.ops.read_i2c_byte) with type s32 (*)(struct e1000_hw *, u8 , u8 , u8 *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 12973: Function pointer *(hw->nvm.ops.read) with type s32 (*)(struct e1000_hw *, u16 , u16 , u16 *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 34783: Function pointer *(phy->ops.write_reg) with type s32 (*)(struct e1000_hw *, u32 , u16 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 38765: Function pointer *(hw->nvm.ops.read) with type s32 (*)(struct e1000_hw *, u16 , u16 , u16 *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 38773: Function pointer *(hw->nvm.ops.read) with type s32 (*)(struct e1000_hw *, u16 , u16 , u16 *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 38786: Function pointer *(hw->nvm.ops.read) with type s32 (*)(struct e1000_hw *, u16 , u16 , u16 *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 38790-38791: Function pointer *(hw->phy.ops.write_i2c_byte) with type s32 (*)(struct e1000_hw *, u8 , u8 , u8 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 46721: Function pointer *(phy->ops.write_reg) with type s32 (*)(struct e1000_hw *, u32 , u16 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 46738: Function pointer *(phy->ops.write_reg) with type s32 (*)(struct e1000_hw *, u32 , u16 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 45182: Function pointer *(phy->ops.write_reg) with type s32 (*)(struct e1000_hw *, u32 , u16 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 45200: Function pointer *(phy->ops.write_reg) with type s32 (*)(struct e1000_hw *, u32 , u16 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 45360: Function pointer *(phy->ops.write_reg) with type s32 (*)(struct e1000_hw *, u32 , u16 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 45502: Function pointer *(phy->ops.write_reg) with type s32 (*)(struct e1000_hw *, u32 , u16 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 45519: Function pointer *(phy->ops.write_reg) with type s32 (*)(struct e1000_hw *, u32 , u16 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 45457: Function pointer *(phy->ops.write_reg) with type s32 (*)(struct e1000_hw *, u32 , u16 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 45322: Function pointer *(phy->ops.write_reg) with type s32 (*)(struct e1000_hw *, u32 , u16 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 35917: Function pointer *(hw->phy.ops.write_reg) with type s32 (*)(struct e1000_hw *, u32 , u16 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 46583: Function pointer *(hw->phy.ops.write_reg) with type s32 (*)(struct e1000_hw *, u32 , u16 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 46584: Function pointer *(hw->phy.ops.write_reg) with type s32 (*)(struct e1000_hw *, u32 , u16 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 46585: Function pointer *(hw->phy.ops.write_reg) with type s32 (*)(struct e1000_hw *, u32 , u16 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 46586: Function pointer *(hw->phy.ops.write_reg) with type s32 (*)(struct e1000_hw *, u32 , u16 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 46587: Function pointer *(hw->phy.ops.write_reg) with type s32 (*)(struct e1000_hw *, u32 , u16 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 46588: Function pointer *(hw->phy.ops.write_reg) with type s32 (*)(struct e1000_hw *, u32 , u16 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 46589: Function pointer *(hw->phy.ops.write_reg) with type s32 (*)(struct e1000_hw *, u32 , u16 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 46590: Function pointer *(hw->phy.ops.write_reg) with type s32 (*)(struct e1000_hw *, u32 , u16 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 46591: Function pointer *(hw->phy.ops.write_reg) with type s32 (*)(struct e1000_hw *, u32 , u16 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 46592: Function pointer *(hw->phy.ops.write_reg) with type s32 (*)(struct e1000_hw *, u32 , u16 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 46593: Function pointer *(hw->phy.ops.write_reg) with type s32 (*)(struct e1000_hw *, u32 , u16 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 46594: Function pointer *(hw->phy.ops.write_reg) with type s32 (*)(struct e1000_hw *, u32 , u16 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 46595: Function pointer *(hw->phy.ops.write_reg) with type s32 (*)(struct e1000_hw *, u32 , u16 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 46596: Function pointer *(hw->phy.ops.write_reg) with type s32 (*)(struct e1000_hw *, u32 , u16 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 46597: Function pointer *(hw->phy.ops.write_reg) with type s32 (*)(struct e1000_hw *, u32 , u16 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 46598: Function pointer *(hw->phy.ops.write_reg) with type s32 (*)(struct e1000_hw *, u32 , u16 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 46599: Function pointer *(hw->phy.ops.write_reg) with type s32 (*)(struct e1000_hw *, u32 , u16 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 46600: Function pointer *(hw->phy.ops.write_reg) with type s32 (*)(struct e1000_hw *, u32 , u16 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 46601: Function pointer *(hw->phy.ops.write_reg) with type s32 (*)(struct e1000_hw *, u32 , u16 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 46602: Function pointer *(hw->phy.ops.write_reg) with type s32 (*)(struct e1000_hw *, u32 , u16 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 46603: Function pointer *(hw->phy.ops.write_reg) with type s32 (*)(struct e1000_hw *, u32 , u16 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 46604: Function pointer *(hw->phy.ops.write_reg) with type s32 (*)(struct e1000_hw *, u32 , u16 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 46605: Function pointer *(hw->phy.ops.write_reg) with type s32 (*)(struct e1000_hw *, u32 , u16 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 46606: Function pointer *(hw->phy.ops.write_reg) with type s32 (*)(struct e1000_hw *, u32 , u16 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 46607: Function pointer *(hw->phy.ops.write_reg) with type s32 (*)(struct e1000_hw *, u32 , u16 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 46608: Function pointer *(hw->phy.ops.write_reg) with type s32 (*)(struct e1000_hw *, u32 , u16 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 46609: Function pointer *(hw->phy.ops.write_reg) with type s32 (*)(struct e1000_hw *, u32 , u16 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 46610: Function pointer *(hw->phy.ops.write_reg) with type s32 (*)(struct e1000_hw *, u32 , u16 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 46611: Function pointer *(hw->phy.ops.write_reg) with type s32 (*)(struct e1000_hw *, u32 , u16 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 46612: Function pointer *(hw->phy.ops.write_reg) with type s32 (*)(struct e1000_hw *, u32 , u16 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 46613: Function pointer *(hw->phy.ops.write_reg) with type s32 (*)(struct e1000_hw *, u32 , u16 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 46614: Function pointer *(hw->phy.ops.write_reg) with type s32 (*)(struct e1000_hw *, u32 , u16 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 43132: Function pointer *(hw->phy.ops.write_reg) with type s32 (*)(struct e1000_hw *, u32 , u16 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 43140: Function pointer *(hw->phy.ops.write_reg) with type s32 (*)(struct e1000_hw *, u32 , u16 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 44986: Function pointer *(phy->ops.write_reg) with type s32 (*)(struct e1000_hw *, u32 , u16 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 45013: Function pointer *(phy->ops.write_reg) with type s32 (*)(struct e1000_hw *, u32 , u16 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 46504: Function pointer *(hw->phy.ops.write_reg) with type s32 (*)(struct e1000_hw *, u32 , u16 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 47249: Function pointer *(mbx->ops.check_for_ack) with type s32 (*)(struct e1000_hw *, u16 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 47200: Function pointer *(mbx->ops.check_for_msg) with type s32 (*)(struct e1000_hw *, u16 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 46668: Function pointer *(hw->phy.ops.write_reg) with type s32 (*)(struct e1000_hw *, u32 , u16 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 46662: Function pointer *(hw->phy.ops.write_reg) with type s32 (*)(struct e1000_hw *, u32 , u16 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 46641: Function pointer *(hw->phy.ops.write_reg) with type s32 (*)(struct e1000_hw *, u32 , u16 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 46635: Function pointer *(hw->phy.ops.write_reg) with type s32 (*)(struct e1000_hw *, u32 , u16 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 13546: Function pointer *(hw->nvm.ops.read) with type s32 (*)(struct e1000_hw *, u16 , u16 , u16 *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 13409: Function pointer *(hw->nvm.ops.read) with type s32 (*)(struct e1000_hw *, u16 , u16 , u16 *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 13403-13404: Function pointer *(hw->nvm.ops.read) with type s32 (*)(struct e1000_hw *, u16 , u16 , u16 *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 21588: Function pointer *(hw->mac.ops.acquire_swfw_sync) with type s32 (*)(struct e1000_hw *, u16 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 47084: Function pointer *(mbx->ops.read) with type s32 (*)(struct e1000_hw *, u32 *, u16 , u16 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 42439: Function pointer *(hw->nvm.ops.read) with type s32 (*)(struct e1000_hw *, u16 , u16 , u16 *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 42465: Function pointer *(hw->nvm.ops.read) with type s32 (*)(struct e1000_hw *, u16 , u16 , u16 *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 42567: Function pointer *(hw->nvm.ops.read) with type s32 (*)(struct e1000_hw *, u16 , u16 , u16 *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 42646: Function pointer *(hw->nvm.ops.read) with type s32 (*)(struct e1000_hw *, u16 , u16 , u16 *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 47288: Function pointer *(mbx->ops.read) with type s32 (*)(struct e1000_hw *, u32 *, u16 , u16 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 37953: Function pointer *(hw->mac.ops.acquire_swfw_sync) with type s32 (*)(struct e1000_hw *, u16 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 37826-37827: Function pointer *(hw->nvm.ops.read) with type s32 (*)(struct e1000_hw *, u16 , u16 , u16 *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 35950: Function pointer *(phy->ops.write_reg) with type s32 (*)(struct e1000_hw *, u32 , u16 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 35960: Function pointer *(phy->ops.write_reg) with type s32 (*)(struct e1000_hw *, u32 , u16 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 35970: Function pointer *(phy->ops.write_reg) with type s32 (*)(struct e1000_hw *, u32 , u16 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 36002: Function pointer *(phy->ops.write_reg) with type s32 (*)(struct e1000_hw *, u32 , u16 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 35983: Function pointer *(phy->ops.write_reg) with type s32 (*)(struct e1000_hw *, u32 , u16 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 45723: Function pointer *(phy->ops.write_reg) with type s32 (*)(struct e1000_hw *, u32 , u16 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 45740: Function pointer *(phy->ops.write_reg) with type s32 (*)(struct e1000_hw *, u32 , u16 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 45672: Function pointer *(phy->ops.write_reg) with type s32 (*)(struct e1000_hw *, u32 , u16 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 45709: Function pointer *(phy->ops.write_reg) with type s32 (*)(struct e1000_hw *, u32 , u16 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 45690: Function pointer *(phy->ops.write_reg) with type s32 (*)(struct e1000_hw *, u32 , u16 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 40261: Function pointer *(hw->nvm.ops.read) with type s32 (*)(struct e1000_hw *, u16 , u16 , u16 *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 40256-40257: Function pointer *(hw->nvm.ops.read) with type s32 (*)(struct e1000_hw *, u16 , u16 , u16 *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 38571: Function pointer *(phy->ops.write_reg) with type s32 (*)(struct e1000_hw *, u32 , u16 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 38588: Function pointer *(phy->ops.write_reg) with type s32 (*)(struct e1000_hw *, u32 , u16 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 38596: Function pointer *(phy->ops.write_reg) with type s32 (*)(struct e1000_hw *, u32 , u16 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 29984: Function pointer *(hw->nvm.ops.read) with type s32 (*)(struct e1000_hw *, u16 , u16 , u16 *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 30022-30023: Function pointer *(hw->nvm.ops.write) with type s32 (*)(struct e1000_hw *, u16 , u16 , u16 *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 29992: Function pointer *(hw->nvm.ops.read) with type s32 (*)(struct e1000_hw *, u16 , u16 , u16 *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 47063: Function pointer *(hw->phy.ops.write_reg) with type s32 (*)(struct e1000_hw *, u32 , u16 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 37135: Function pointer *(hw->nvm.ops.read) with type s32 (*)(struct e1000_hw *, u16 , u16 , u16 *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 42867: Function pointer *(hw->nvm.ops.write) with type s32 (*)(struct e1000_hw *, u16 , u16 , u16 *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 42833: Function pointer *(hw->nvm.ops.read) with type s32 (*)(struct e1000_hw *, u16 , u16 , u16 *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 38311: Function pointer *(hw->nvm.ops.read) with type s32 (*)(struct e1000_hw *, u16 , u16 , u16 *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 38338: Function pointer *(hw->nvm.ops.write) with type s32 (*)(struct e1000_hw *, u16 , u16 , u16 *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 38200: Function pointer *(hw->nvm.ops.write) with type s32 (*)(struct e1000_hw *, u16 , u16 , u16 *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 38166: Function pointer *(hw->nvm.ops.read) with type s32 (*)(struct e1000_hw *, u16 , u16 , u16 *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 41241: Function pointer *(hw->nvm.ops.read) with type s32 (*)(struct e1000_hw *, u16 , u16 , u16 *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 48716: Function pointer *(hw->nvm.ops.read) with type s32 (*)(struct e1000_hw *, u16 , u16 , u16 *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 42753: Function pointer *(hw->nvm.ops.read) with type s32 (*)(struct e1000_hw *, u16 , u16 , u16 *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 38243: Function pointer *(hw->nvm.ops.read) with type s32 (*)(struct e1000_hw *, u16 , u16 , u16 *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 38086: Function pointer *(hw->nvm.ops.read) with type s32 (*)(struct e1000_hw *, u16 , u16 , u16 *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 21627: Function pointer *(hw->mac.ops.acquire_swfw_sync) with type s32 (*)(struct e1000_hw *, u16 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 47106: Function pointer *(mbx->ops.write) with type s32 (*)(struct e1000_hw *, u32 *, u16 , u16 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 28501: Function pointer *(hw->phy.ops.write_reg) with type s32 (*)(struct e1000_hw *, u32 , u16 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 47312: Function pointer *(mbx->ops.write) with type s32 (*)(struct e1000_hw *, u32 *, u16 , u16 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 25059: Function pointer *arg0 with type int (*)(struct pci_dev *, struct pm_message ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 25071: Function pointer *arg0 with type int (*)(struct pci_dev *, struct pm_message ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 25398: Function pointer *arg0 with type void (*)(struct device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function external_allocated_data to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_switch_to_interrupt_context to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_switch_to_process_context to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 27708: Ignoring call via function pointer ldv_timer_instance_callback_12_2::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 27708: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 23852: Ignoring call via function pointer ldv_interrupt_instance_thread_4_3::arg0 for which no suitable target was found in line: (*arg0)(arg1, arg2); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 23852: Ignoring function call through function pointer *arg0: (*arg0)(arg1, arg2); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function __napi_schedule to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 23840: Ignoring call via function pointer ldv_interrupt_instance_thread_3_3::arg0 for which no suitable target was found in line: (*arg0)(arg1, arg2); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 23840: Ignoring function call through function pointer *arg0: (*arg0)(arg1, arg2); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 23828: Ignoring call via function pointer ldv_interrupt_instance_thread_2_3::arg0 for which no suitable target was found in line: (*arg0)(arg1, arg2); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 23828: Ignoring function call through function pointer *arg0: (*arg0)(arg1, arg2); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 23816: Ignoring call via function pointer ldv_interrupt_instance_thread_1_3::arg0 for which no suitable target was found in line: (*arg0)(arg1, arg2); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 23816: Ignoring function call through function pointer *arg0: (*arg0)(arg1, arg2); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 23804: Ignoring call via function pointer ldv_interrupt_instance_thread_0_3::arg0 for which no suitable target was found in line: (*arg0)(arg1, arg2); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 23804: Ignoring function call through function pointer *arg0: (*arg0)(arg1, arg2); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function mod_timer to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 26623: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: ldv_11_ldv_param_3_2_default = ldv_xmalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function driver_for_each_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 47163: Ignoring function call through function pointer *(mbx->ops.check_for_rst): ret_val = (*(mbx->ops.check_for_rst))(hw, (int)mbx_id); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 47125: Ignoring function call through function pointer *(mbx->ops.check_for_msg): ret_val = (*(mbx->ops.check_for_msg))(hw, (int)mbx_id); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 47144: Ignoring function call through function pointer *(mbx->ops.check_for_ack): ret_val = (*(mbx->ops.check_for_ack))(hw, (int)mbx_id); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function ldv_check_alloc_flags to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_after_alloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 47084: Ignoring function call through function pointer *(mbx->ops.read): ret_val = (*(mbx->ops.read))(hw, msg, (int)size, (int)mbx_id); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_warn to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _dev_info to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 35570: Ignoring function call through function pointer *(hw->mac.ops.acquire_swfw_sync): tmp = (*(hw->mac.ops.acquire_swfw_sync))(hw, (int)mask); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 36094: Ignoring function call through function pointer *(hw->mac.ops.acquire_swfw_sync): ret_val = (*(hw->mac.ops.acquire_swfw_sync))(hw, 1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 45831: Ignoring function call through function pointer *(phy->ops.read_reg): ret_val = (*(phy->ops.read_reg))(hw, 17U, &data); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 35917: Ignoring function call through function pointer *(hw->phy.ops.write_reg): ret_val = (*(hw->phy.ops.write_reg))(hw, 27U, 32900); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function __dynamic_netdev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 46929: Ignoring function call through function pointer *(phy->ops.read_reg): ret_val = (*(phy->ops.read_reg))(hw, 31U, &phy_data); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 46495: Ignoring function call through function pointer *(hw->phy.ops.read_reg): ret_val = (*(hw->phy.ops.read_reg))(hw, 0U, &phy_ctrl); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 46504: Ignoring function call through function pointer *(hw->phy.ops.write_reg): ret_val = (*(hw->phy.ops.write_reg))(hw, 0U, (int)phy_ctrl); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 46023: Ignoring function call through function pointer *(phy->ops.read_reg): ret_val = (*(phy->ops.read_reg))(hw, 17U, &phy_data); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 38686: Ignoring function call through function pointer *(hw->nvm.ops.read): (*(hw->nvm.ops.read))(hw, 62, 1, &ets_offset); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 38694: Ignoring function call through function pointer *(hw->nvm.ops.read): (*(hw->nvm.ops.read))(hw, (int)ets_offset, 1, &ets_cfg); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 38711: Ignoring function call through function pointer *(hw->nvm.ops.read): (*(hw->nvm.ops.read))(hw, ((int)ets_offset) + ((int)((u16 )i)), 1, &ets_sensor); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

lines 38717-38718: Ignoring function call through function pointer *(hw->phy.ops.read_i2c_byte): (*(hw->phy.ops.read_i2c_byte))(hw, (int)(e1000_emc_temp_data[(int)sensor_index]), 248, &(((data->sensor)[(int)i]).temp)); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 38243: Ignoring function call through function pointer *(hw->nvm.ops.read): ret_val = (*(hw->nvm.ops.read))(hw, 3, 1, &nvm_data); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 36106: Ignoring function call through function pointer *(hw->mac.ops.release_swfw_sync): (*(hw->mac.ops.release_swfw_sync))(hw, 1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 42753: Ignoring function call through function pointer *(hw->nvm.ops.read): ret_val = (*(hw->nvm.ops.read))(hw, (int)i, 1, &nvm_data); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 42867: Ignoring function call through function pointer *(hw->nvm.ops.write): ret_val = (*(hw->nvm.ops.write))(hw, 63, 1, &checksum); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 42833: Ignoring function call through function pointer *(hw->nvm.ops.read): ret_val = (*(hw->nvm.ops.read))(hw, (int)i, 1, &nvm_data); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 38200: Ignoring function call through function pointer *(hw->nvm.ops.write): ret_val = (*(hw->nvm.ops.write))(hw, (int)(((unsigned int)offset) + 63U), 1, &checksum); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 38166: Ignoring function call through function pointer *(hw->nvm.ops.read): ret_val = (*(hw->nvm.ops.read))(hw, (int)i, 1, &nvm_data); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 38086: Ignoring function call through function pointer *(hw->nvm.ops.read): ret_val = (*(hw->nvm.ops.read))(hw, (int)i, 1, &nvm_data); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 38765: Ignoring function call through function pointer *(hw->nvm.ops.read): (*(hw->nvm.ops.read))(hw, 62, 1, &ets_offset); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 38773: Ignoring function call through function pointer *(hw->nvm.ops.read): (*(hw->nvm.ops.read))(hw, (int)ets_offset, 1, &ets_cfg); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 38786: Ignoring function call through function pointer *(hw->nvm.ops.read): (*(hw->nvm.ops.read))(hw, ((int)ets_offset) + ((int)((u16 )i)), 1, &ets_sensor); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

lines 38790-38791: Ignoring function call through function pointer *(hw->phy.ops.write_i2c_byte): (*(hw->phy.ops.write_i2c_byte))(hw, (int)(e1000_emc_therm_limit[(int)sensor_index]), 248, (int)therm_limit); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function msleep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 46583: Ignoring function call through function pointer *(hw->phy.ops.write_reg): (*(hw->phy.ops.write_reg))(hw, 12123U, 36888); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 46584: Ignoring function call through function pointer *(hw->phy.ops.write_reg): (*(hw->phy.ops.write_reg))(hw, 12114U, 0); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 46585: Ignoring function call through function pointer *(hw->phy.ops.write_reg): (*(hw->phy.ops.write_reg))(hw, 12209U, 35620); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 46586: Ignoring function call through function pointer *(hw->phy.ops.write_reg): (*(hw->phy.ops.write_reg))(hw, 12210U, 63728); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 46587: Ignoring function call through function pointer *(hw->phy.ops.write_reg): (*(hw->phy.ops.write_reg))(hw, 8208U, 4272); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 46588: Ignoring function call through function pointer *(hw->phy.ops.write_reg): (*(hw->phy.ops.write_reg))(hw, 8209U, 0); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 46589: Ignoring function call through function pointer *(hw->phy.ops.write_reg): (*(hw->phy.ops.write_reg))(hw, 8413U, 9370); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 46590: Ignoring function call through function pointer *(hw->phy.ops.write_reg): (*(hw->phy.ops.write_reg))(hw, 8414U, 211); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 46591: Ignoring function call through function pointer *(hw->phy.ops.write_reg): (*(hw->phy.ops.write_reg))(hw, 10420U, 1230); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 46592: Ignoring function call through function pointer *(hw->phy.ops.write_reg): (*(hw->phy.ops.write_reg))(hw, 12144U, 10724); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 46593: Ignoring function call through function pointer *(hw->phy.ops.write_reg): (*(hw->phy.ops.write_reg))(hw, 0U, 320); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 46594: Ignoring function call through function pointer *(hw->phy.ops.write_reg): (*(hw->phy.ops.write_reg))(hw, 7984U, 5638); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 46595: Ignoring function call through function pointer *(hw->phy.ops.write_reg): (*(hw->phy.ops.write_reg))(hw, 7985U, 47124); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 46596: Ignoring function call through function pointer *(hw->phy.ops.write_reg): (*(hw->phy.ops.write_reg))(hw, 7989U, 42); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 46597: Ignoring function call through function pointer *(hw->phy.ops.write_reg): (*(hw->phy.ops.write_reg))(hw, 7998U, 103); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 46598: Ignoring function call through function pointer *(hw->phy.ops.write_reg): (*(hw->phy.ops.write_reg))(hw, 8020U, 101); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 46599: Ignoring function call through function pointer *(hw->phy.ops.write_reg): (*(hw->phy.ops.write_reg))(hw, 8021U, 42); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 46600: Ignoring function call through function pointer *(hw->phy.ops.write_reg): (*(hw->phy.ops.write_reg))(hw, 8022U, 42); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 46601: Ignoring function call through function pointer *(hw->phy.ops.write_reg): (*(hw->phy.ops.write_reg))(hw, 8050U, 16304); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 46602: Ignoring function call through function pointer *(hw->phy.ops.write_reg): (*(hw->phy.ops.write_reg))(hw, 8054U, 49407); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 46603: Ignoring function call through function pointer *(hw->phy.ops.write_reg): (*(hw->phy.ops.write_reg))(hw, 8055U, 7660); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 46604: Ignoring function call through function pointer *(hw->phy.ops.write_reg): (*(hw->phy.ops.write_reg))(hw, 8056U, 63983); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 46605: Ignoring function call through function pointer *(hw->phy.ops.write_reg): (*(hw->phy.ops.write_reg))(hw, 8057U, 528); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 46606: Ignoring function call through function pointer *(hw->phy.ops.write_reg): (*(hw->phy.ops.write_reg))(hw, 6293U, 3); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 46607: Ignoring function call through function pointer *(hw->phy.ops.write_reg): (*(hw->phy.ops.write_reg))(hw, 6038U, 8); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 46608: Ignoring function call through function pointer *(hw->phy.ops.write_reg): (*(hw->phy.ops.write_reg))(hw, 6040U, 53256); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 46609: Ignoring function call through function pointer *(hw->phy.ops.write_reg): (*(hw->phy.ops.write_reg))(hw, 6296U, 55576); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 46610: Ignoring function call through function pointer *(hw->phy.ops.write_reg): (*(hw->phy.ops.write_reg))(hw, 6266U, 2048); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 46611: Ignoring function call through function pointer *(hw->phy.ops.write_reg): (*(hw->phy.ops.write_reg))(hw, 25U, 141); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 46612: Ignoring function call through function pointer *(hw->phy.ops.write_reg): (*(hw->phy.ops.write_reg))(hw, 27U, 8320); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 46613: Ignoring function call through function pointer *(hw->phy.ops.write_reg): (*(hw->phy.ops.write_reg))(hw, 20U, 69); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 46614: Ignoring function call through function pointer *(hw->phy.ops.write_reg): (*(hw->phy.ops.write_reg))(hw, 0U, 4928); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 38311: Ignoring function call through function pointer *(hw->nvm.ops.read): ret_val = (*(hw->nvm.ops.read))(hw, 3, 1, &nvm_data); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 38338: Ignoring function call through function pointer *(hw->nvm.ops.write): ret_val = (*(hw->nvm.ops.write))(hw, 3, 1, &nvm_data); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 34555: Ignoring function call through function pointer *(phy->ops.write_reg): ret_val = (*(phy->ops.write_reg))(hw, 22U, 0); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 34563: Ignoring function call through function pointer *(phy->ops.read_reg): ret_val = (*(phy->ops.read_reg))(hw, 1U, &data); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 34576: Ignoring function call through function pointer *(phy->ops.write_reg): ret_val = (*(phy->ops.write_reg))(hw, 22U, 1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 34584: Ignoring function call through function pointer *(phy->ops.read_reg): ret_val = (*(phy->ops.read_reg))(hw, 1U, &data); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 34592: Ignoring function call through function pointer *(phy->ops.write_reg): ret_val = (*(phy->ops.write_reg))(hw, 22U, 0); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 46227: Ignoring function call through function pointer *(phy->ops.read_reg): ret_val = (*(phy->ops.read_reg))(hw, (u32 )(agc_reg_array[(int)i]), &phy_data); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 45940: Ignoring function call through function pointer *(hw->phy.ops.read_reg): ret_val = (*(hw->phy.ops.read_reg))(hw, 1U, &phy_status); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function __udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 45968: Ignoring function call through function pointer *(hw->phy.ops.read_reg): ret_val = (*(hw->phy.ops.read_reg))(hw, 1U, &phy_status); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 45811: Ignoring function call through function pointer *(phy->ops.read_reg): ret_val = (*(phy->ops.read_reg))(hw, (u32 )offset, &phy_data); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 39732: Ignoring function call through function pointer *(hw->nvm.ops.read): ret_val = (*(hw->nvm.ops.read))(hw, 55, 1, &nvm_alt_mac_addr_offset); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 39781: Ignoring function call through function pointer *(hw->nvm.ops.read): ret_val = (*(hw->nvm.ops.read))(hw, (int)offset, 1, &nvm_data); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 39842: Ignoring function call through function pointer *(hw->mac.ops.rar_set): (*(hw->mac.ops.rar_set))(hw, (u8 *)(&alt_mac_addr), 0U); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 41241: Ignoring function call through function pointer *(hw->nvm.ops.read): ret_val = (*(hw->nvm.ops.read))(hw, 4, 1, data); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 48716: Ignoring function call through function pointer *(hw->nvm.ops.read): ret_val = (*(hw->nvm.ops.read))(hw, 4, 1, data); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 39635: Ignoring function call through function pointer *(hw->mac.ops.rar_set): (*(hw->mac.ops.rar_set))(hw, (u8 *)(&(hw->mac.addr)), 0U); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 39657: Ignoring function call through function pointer *(hw->mac.ops.rar_set): (*(hw->mac.ops.rar_set))(hw, (u8 *)(&mac_addr), i); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 46712: Ignoring function call through function pointer *(phy->ops.read_reg): ret_val = (*(phy->ops.read_reg))(hw, 0U, &phy_data); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 46721: Ignoring function call through function pointer *(phy->ops.write_reg): ret_val = (*(phy->ops.write_reg))(hw, 0U, (int)phy_data); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 46729: Ignoring function call through function pointer *(phy->ops.read_reg): ret_val = (*(phy->ops.read_reg))(hw, 18U, &phy_data); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 46738: Ignoring function call through function pointer *(phy->ops.write_reg): ret_val = (*(phy->ops.write_reg))(hw, 18U, (int)phy_data); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 45173: Ignoring function call through function pointer *(phy->ops.read_reg): ret_val = (*(phy->ops.read_reg))(hw, 0U, &phy_data); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 45182: Ignoring function call through function pointer *(phy->ops.write_reg): ret_val = (*(phy->ops.write_reg))(hw, 0U, (int)phy_data); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 45190: Ignoring function call through function pointer *(phy->ops.read_reg): ret_val = (*(phy->ops.read_reg))(hw, 18U, &phy_data); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 45200: Ignoring function call through function pointer *(phy->ops.write_reg): ret_val = (*(phy->ops.write_reg))(hw, 18U, (int)phy_data); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function pcie_capability_read_word to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pcie_capability_write_word to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dca_unregister_notify to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dca_register_notify to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __pci_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            996296 (20% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  848771 (85%)
  Because of loop head:            147503 (15%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         22 (0%)
  Times precision was empty:       987454 (99%)
  Times precision was {false}:     101 (0%)
  Times result was cached:         8666 (1%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      75 (0%)
  Times result was 'false':        23 (0%)
Number of strengthen sat checks:   0
Number of coverage checks:         537096
  BDD entailment checks:           200976
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       138
Number of predicates discovered:          6
Number of abstraction locations:          39
Max number of predicates per location:    4
Avg number of predicates per location:    1
Total predicates per abstraction:         16576
Max number of predicates per abstraction: 4
Avg number of predicates per abstraction: 94.18
Number of irrelevant predicates:          15945 (96%)
Number of preds handled by boolean abs:   108 (1%)
  Total number of models for allsat:      72
  Max number of models for allsat:        2
  Avg number of models for allsat:        0.96

Time for post operator:                231.520s
  Time for path formula creation:      226.432s
Time for strengthen operator:            5.257s
Time for prec operator:                 22.702s
  Time for abstraction:                  4.566s (Max:     0.146s, Count: 996296)
    Boolean abstraction:                 0.148s
    Solving time:                        0.157s (Max:     0.075s)
    Model enumeration time:              0.012s
    Time for BDD construction:           0.009s (Max:     0.003s)
Time for merge operator:                13.061s
Time for coverage check:                 0.315s
  Time for BDD entailment checks:        0.213s
Total time for SMT solver (w/o itp):     0.169s

Number of path formula cache hits:   5042523 (83%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:   190.022s

Total number of created targets for pointer analysis: 3247641
   Number of created targets for uf: *unsigned_short_int is 2599
   Number of created targets for uf: *unsigned_char is 19
   Number of created targets for uf: *_Bool is 7
   Number of created targets for uf: *unsigned_int is 1400401


Number of BDD nodes:                               213
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         191 (count: 1189410, min: 0, max: 51, avg: 0.00)
Time for BDD node cleanup:                             0.205s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  8.326s
  Time for transition matches:                         4.977s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.001s
Automaton transfers with branching:                0
Automaton transfer successors:                      5098382 (count: 5098382, min: 1, max: 1, avg: 1.00) [1 x 5098382]

CPA algorithm statistics
------------------------
Number of iterations:            3429497
Max size of waitlist:            684
Average size of waitlist:        235
Number of computed successors:   3802081
Max successors for one state:    2
Number of times merged:          168060
Number of times stopped:         368898
Number of times breaked:         7

Total time for CPA algorithm:       870.964s (Max:   170.760s)
  Time for choose from waitlist:      1.910s
  Time for precision adjustment:     55.473s
  Time for transfer relation:       762.102s
  Time for merge operator:           19.576s
  Time for stop operator:            11.653s
  Time for adding to reached set:     8.186s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   7
Avg. length of target path (in blocks):                 235 (count: 7, min: 13, max: 44, avg: 33.57)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  10.634s
  Counterexample analysis:                             0.744s (Max:     0.199s, Calls: 7)
    Refinement sat check:                              0.649s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.017s
  Precision update:                                    0.010s
  ARG update:                                          9.845s

Length of refined path (in blocks):                     157 (count: 7, min: 9, max: 42, avg: 22.43)
Number of affected states:                              134 (count: 7, min: 4, max: 41, avg: 19.14)
Length (states) of path with itp 'true':                 16 (count: 7, min: 0, max: 4, avg: 2.29)
Length (states) of path with itp non-trivial itp:       134 (count: 7, min: 4, max: 41, avg: 19.14)
Length (states) of path with itp 'false':                 4 (count: 7, min: 0, max: 1, avg: 0.57)
Different non-trivial interpolants along paths:           3 (count: 7, min: 0, max: 1, avg: 0.43)
Equal non-trivial interpolants along paths:             124 (count: 7, min: 3, max: 39, avg: 17.71)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                7
Number of successful refinements:     7
Number of failed refinements:         0
Max. size of reached set before ref.: 605953
Max. size of reached set after ref.:  12
Avg. size of reached set before ref.: 432616.86
Avg. size of reached set after ref.:  8.14

Total time for CEGAR algorithm:     883.649s
Time for refinements:                12.684s
Average time for refinement:          1.812s
Max time for refinement:              2.295s

Code Coverage
-----------------------------
  Function coverage:      0.110
  Visited lines:          2966
  Total lines:            22243
  Line coverage:          0.133
  Visited conditions:     472
  Total conditions:       10666
  Condition coverage:     0.044

CPAchecker general statistics
-----------------------------
Number of program locations:     37866
Number of CFA edges:             47478
Number of relevant variables:    4736
Number of functions:             955
Number of loops:                 266
Size of reached set:             404899
  Number of reached locations:   1553 (4%)
    Avg states per location:     260
    Max states per location:     14424 (at node N487)
  Number of reached functions:   105 (11%)
  Number of partitions:          404894
    Avg size of partitions:      1
    Max size of partitions:      3 (with key [N12166 (before line 23571), Function main called from node N12143, stack depth 1 [7775af39], stack [main]])
  Number of target states:       0
  Size of final wait list        258

Time for analysis setup:         16.572s
  Time for loading CPAs:          1.406s
  Time for loading parser:        0.726s
  Time for CFA construction:     14.259s
    Time for parsing file(s):     2.218s
    Time for AST to CFA:          4.813s
    Time for CFA sanity check:    1.342s
    Time for post-processing:     5.634s
      Time for var class.:        2.775s
Time for Analysis:              883.649s
CPU time for analysis:          883.590s
Total time for CPAchecker:      900.226s
Total CPU time for CPAchecker:  900.110s
Time for statistics:              4.696s

Time for Garbage Collector:      63.559s (in 370 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:               1743MB (  1663 MiB) max;    835MB (   797 MiB) avg;   1807MB (  1723 MiB) peak
Used non-heap memory:             48MB (    45 MiB) max;     41MB (    39 MiB) avg;     48MB (    45 MiB) peak
Allocated heap memory:          1834MB (  1749 MiB) max;   1244MB (  1186 MiB) avg
Allocated non-heap memory:        49MB (    47 MiB) max;     49MB (    47 MiB) avg
Total process virtual memory:   8086MB (  7711 MiB) max;   8085MB (  7710 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
