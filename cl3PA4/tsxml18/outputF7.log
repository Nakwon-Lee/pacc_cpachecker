scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-challenges/linux-3.14__complex_emg__linux-kernel-locking-mutex__drivers-net-wireless-ath-ath10k-ath10k_pci_true-unreach-call.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_2asnw8zc/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 6747: Dead code detected: return (1); (CFACreationUtils.addEdgeToCFA, INFO)

line 6850: Dead code detected: return (1); (CFACreationUtils.addEdgeToCFA, INFO)

line 7985: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 8040: Dead code detected: __ms___0 = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 8307: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 8362: Dead code detected: __ms___0 = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

line 12084: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 12951: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 13675: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 13709: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 14389: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 14420: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 14439: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 14482: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 14501: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 14531: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 9369: Function pointer *(cb->rx_completion) with type int (*)(struct ath10k *, struct sk_buff *, u8 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9340: Function pointer *(cb->tx_completion) with type int (*)(struct ath10k *, struct sk_buff *, unsigned int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9861: Function pointer *(ar_pci->msg_callbacks_current.tx_completion) with type int (*)(struct ath10k *, struct sk_buff *, unsigned int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7248: Function pointer *(ops->alloc) with type void *(*)(struct device *, size_t , dma_addr_t *, gfp_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7289: Function pointer *(ops->free) with type void (*)(struct device *, size_t , void *, dma_addr_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 7057-7058: Function pointer *(ops->map_page) with type dma_addr_t (*)(struct device *, struct page *, unsigned long, size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7162: Function pointer *(ops->mapping_error) with type int (*)(struct device *, dma_addr_t ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7136: Function pointer *(ops->sync_single_for_device) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7096: Function pointer *(ops->unmap_page) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 13370: Function pointer *arg0 with type int (*)(struct pci_dev *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 13381: Function pointer *arg0 with type int (*)(struct pci_dev *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 13404: Function pointer *arg0 with type int (*)(struct pci_dev *, struct pm_message ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 13416: Function pointer *arg0 with type int (*)(struct pci_dev *, struct pm_message ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function external_allocated_data to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __pci_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ath10k_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_switch_to_interrupt_context to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __tasklet_schedule to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_switch_to_process_context to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ath10k_warn to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_pre_probe to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ath10k_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tasklet_kill to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ath10k_core_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_iounmap to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_release_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_clear_master to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_disable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ath10k_core_destroy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 13392: Ignoring call via function pointer ldv_pci_instance_shutdown_4_3::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 13392: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 13370: Ignoring call via function pointer ldv_pci_instance_resume_4_5::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 13370: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 13381: Ignoring call via function pointer ldv_pci_instance_resume_early_4_6::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 13381: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 13416: Ignoring call via function pointer ldv_pci_instance_suspend_late_4_7::arg0 for which no suitable target was found in line: tmp = (*arg0)(arg1, arg2); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 13416: Ignoring function call through function pointer *arg0: tmp = (*arg0)(arg1, arg2); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 13404: Ignoring call via function pointer ldv_pci_instance_suspend_4_8::arg0 for which no suitable target was found in line: tmp = (*arg0)(arg1, arg2); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 13404: Ignoring function call through function pointer *arg0: tmp = (*arg0)(arg1, arg2); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function ldv_check_alloc_flags to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_after_alloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock_bh to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __compiletime_assert_69 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_bh to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function request_threaded_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function list_del to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dev_kfree_skb_any to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 9861: Ignoring function call through function pointer *(ar_pci->msg_callbacks_current.tx_completion): (*(ar_pci->msg_callbacks_current.tx_completion))(ar, netbuf, id); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 7086: Return type of function __builtin_unreachable is void, but result is used as type int: __builtin_unreachable(); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function __builtin_unreachable to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 7096: Ignoring function call through function pointer *(ops->unmap_page): (*(ops->unmap_page))(dev, addr, size, dir, attrs); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function debug_dma_unmap_page to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iowrite32 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_restore_state to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_save_state to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __might_sleep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function kmemdup to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __raw_spin_lock_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ath10k_dbg_dump to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ath10k_core_create to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_assign_resource to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_enable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_request_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            585577 (22% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  497755 (85%)
  Because of loop head:            72293 (12%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         15529 (3%)
  Times precision was empty:       78996 (13%)
  Times precision was {false}:     6628 (1%)
  Times result was cached:         462107 (79%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      37846 (6%)
  Times result was 'false':        151503 (26%)
Number of strengthen sat checks:   0
Number of coverage checks:         448716
  BDD entailment checks:           345312
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       64
Number of predicates discovered:          73
Number of abstraction locations:          305
Max number of predicates per location:    54
Avg number of predicates per location:    12
Total predicates per abstraction:         12141884
Max number of predicates per abstraction: 54
Avg number of predicates per abstraction: 273.01
Number of irrelevant predicates:          3261252 (27%)
Number of preds handled by boolean abs:   864884 (7%)
  Total number of models for allsat:      947496
  Max number of models for allsat:        2240
  Avg number of models for allsat:        25.04

Time for post operator:                 17.365s
  Time for path formula creation:       16.070s
Time for strengthen operator:            2.315s
Time for prec operator:                760.119s
  Time for abstraction:                753.577s (Max:     0.921s, Count: 585577)
    Boolean abstraction:               293.515s
    Solving time:                       68.366s (Max:     0.044s)
    Model enumeration time:            149.313s
    Time for BDD construction:          67.570s (Max:     0.552s)
Time for merge operator:                 0.519s
Time for coverage check:                 0.653s
  Time for BDD entailment checks:        0.577s
Total time for SMT solver (w/o itp):   217.679s

Number of path formula cache hits:   2900761 (92%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     9.637s

Total number of created targets for pointer analysis: 873
   Number of created targets for uf: *(void)* is 3
   Number of created targets for uf: *(struct_device_private)* is 3
   Number of created targets for uf: *(struct_ath10k)* is 35
   Number of created targets for uf: *signed_int is 4
   Number of created targets for uf: *(struct_list_head)* is 23
   Number of created targets for uf: *(struct_pci_dev)* is 2
   Number of created targets for uf: *_Bool is 3
   Number of created targets for uf: *unsigned_int is 7
   Number of created targets for uf: *(struct_device)* is 2


Number of BDD nodes:                               140880
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                      167946 (count: 745836, min: 0, max: 2220, avg: 0.23)
Time for BDD node cleanup:                             0.152s
Time for BDD garbage collection:                       0.314s (in 64 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  4.444s
  Time for transition matches:                         2.224s
  Time for transition assertions:                      0.020s
  Time for transition actions:                         0.031s
Automaton transfers with branching:                0
Automaton transfer successors:                      2718653 (count: 2718653, min: 1, max: 1, avg: 1.00) [1 x 2718653]

CPA algorithm statistics
------------------------
Number of iterations:            2154088
Max size of waitlist:            191
Average size of waitlist:        63
Number of computed successors:   2477446
Max successors for one state:    2
Number of times merged:          51702
Number of times stopped:         102478
Number of times breaked:         987

Total time for CPA algorithm:       840.813s (Max:    12.193s)
  Time for choose from waitlist:      1.124s
  Time for precision adjustment:    775.771s
  Time for transfer relation:        47.670s
  Time for merge operator:            1.828s
  Time for stop operator:             4.294s
  Time for adding to reached set:     4.002s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   987
Avg. length of target path (in blocks):              132974 (count: 987, min: 29, max: 293, avg: 134.73)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  48.216s
  Counterexample analysis:                            41.879s (Max:     0.268s, Calls: 987)
    Refinement sat check:                             17.833s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.078s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.568s
  Precision update:                                    1.421s
  ARG update:                                          3.421s

Length of refined path (in blocks):                  100933 (count: 987, min: 11, max: 219, avg: 102.26)
Number of affected states:                            63511 (count: 987, min: 4, max: 175, avg: 64.35)
Length (states) of path with itp 'true':              36435 (count: 987, min: 0, max: 111, avg: 36.91)
Length (states) of path with itp non-trivial itp:     63511 (count: 987, min: 4, max: 175, avg: 64.35)
Length (states) of path with itp 'false':               914 (count: 987, min: 0, max: 1, avg: 0.93)
Different non-trivial interpolants along paths:         937 (count: 987, min: 0, max: 5, avg: 0.95)
Equal non-trivial interpolants along paths:           61587 (count: 987, min: 0, max: 173, avg: 62.40)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                987
Number of successful refinements:     987
Number of failed refinements:         0
Max. size of reached set before ref.: 5880
Max. size of reached set after ref.:  3225
Avg. size of reached set before ref.: 2790.78
Avg. size of reached set after ref.:  539.28

Total time for CEGAR algorithm:     892.210s
Time for refinements:                50.980s
Average time for refinement:          0.051s
Max time for refinement:              0.288s

Code Coverage
-----------------------------
  Function coverage:      0.135
  Visited lines:          1508
  Total lines:            5511
  Line coverage:          0.274
  Visited conditions:     108
  Total conditions:       1138
  Condition coverage:     0.095

CPAchecker general statistics
-----------------------------
Number of program locations:     7477
Number of CFA edges:             8557
Number of relevant variables:    1435
Number of functions:             319
Number of loops:                 41
Size of reached set:             1236
  Number of reached locations:   426 (6%)
    Avg states per location:     2
    Max states per location:     20 (at node N6370)
  Number of reached functions:   43 (13%)
  Number of partitions:          1220
    Avg size of partitions:      1
    Max size of partitions:      5 (with key [N4061 (before line 12856), Function main called from node N4047, stack depth 1 [79a13920], stack [main]])
  Number of target states:       0
  Size of final wait list        48

Time for analysis setup:          7.980s
  Time for loading CPAs:          1.277s
  Time for loading parser:        0.735s
  Time for CFA construction:      5.836s
    Time for parsing file(s):     1.262s
    Time for AST to CFA:          2.222s
    Time for CFA sanity check:    0.532s
    Time for post-processing:     1.546s
      Time for var class.:        0.697s
Time for Analysis:              892.210s
CPU time for analysis:          892.030s
Total time for CPAchecker:      900.195s
Total CPU time for CPAchecker:  900.000s
Time for statistics:              0.121s

Time for Garbage Collector:      22.878s (in 3109 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                192MB (   183 MiB) max;    122MB (   116 MiB) avg;    194MB (   185 MiB) peak
Used non-heap memory:             41MB (    39 MiB) max;     40MB (    38 MiB) avg;     41MB (    39 MiB) peak
Allocated heap memory:           222MB (   212 MiB) max;    188MB (   179 MiB) avg
Allocated non-heap memory:        43MB (    41 MiB) max;     43MB (    41 MiB) avg
Total process virtual memory:   8828MB (  8419 MiB) max;   8531MB (  8135 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
