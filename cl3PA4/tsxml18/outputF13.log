scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-challenges/linux-3.14__complex_emg__linux-kernel-locking-mutex__drivers-net-wireless-ath-ath10k-ath10k_pci_true-unreach-call.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_tpvkdlhe/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 6747: Dead code detected: return (1); (CFACreationUtils.addEdgeToCFA, INFO)

line 6850: Dead code detected: return (1); (CFACreationUtils.addEdgeToCFA, INFO)

line 7985: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 8040: Dead code detected: __ms___0 = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 8307: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 8362: Dead code detected: __ms___0 = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

line 12084: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 12951: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 13675: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 13709: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 14389: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 14420: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 14439: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 14482: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 14501: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 14531: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 9369: Function pointer *(cb->rx_completion) with type int (*)(struct ath10k *, struct sk_buff *, u8 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9340: Function pointer *(cb->tx_completion) with type int (*)(struct ath10k *, struct sk_buff *, unsigned int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9861: Function pointer *(ar_pci->msg_callbacks_current.tx_completion) with type int (*)(struct ath10k *, struct sk_buff *, unsigned int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7248: Function pointer *(ops->alloc) with type void *(*)(struct device *, size_t , dma_addr_t *, gfp_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7289: Function pointer *(ops->free) with type void (*)(struct device *, size_t , void *, dma_addr_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 7057-7058: Function pointer *(ops->map_page) with type dma_addr_t (*)(struct device *, struct page *, unsigned long, size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7162: Function pointer *(ops->mapping_error) with type int (*)(struct device *, dma_addr_t ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7136: Function pointer *(ops->sync_single_for_device) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7096: Function pointer *(ops->unmap_page) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 13370: Function pointer *arg0 with type int (*)(struct pci_dev *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 13381: Function pointer *arg0 with type int (*)(struct pci_dev *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 13404: Function pointer *arg0 with type int (*)(struct pci_dev *, struct pm_message ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 13416: Function pointer *arg0 with type int (*)(struct pci_dev *, struct pm_message ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function external_allocated_data to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_pre_probe to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_switch_to_interrupt_context to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 13404: Ignoring call via function pointer ldv_pci_instance_suspend_4_8::arg0 for which no suitable target was found in line: tmp = (*arg0)(arg1, arg2); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 13404: Ignoring function call through function pointer *arg0: tmp = (*arg0)(arg1, arg2); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 13416: Ignoring call via function pointer ldv_pci_instance_suspend_late_4_7::arg0 for which no suitable target was found in line: tmp = (*arg0)(arg1, arg2); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 13416: Ignoring function call through function pointer *arg0: tmp = (*arg0)(arg1, arg2); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 13381: Ignoring call via function pointer ldv_pci_instance_resume_early_4_6::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 13381: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 13370: Ignoring call via function pointer ldv_pci_instance_resume_4_5::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 13370: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 13392: Ignoring call via function pointer ldv_pci_instance_shutdown_4_3::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 13392: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function ath10k_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __compiletime_assert_69 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 13056: Ignoring call via function pointer ldv_interrupt_instance_thread_3_3::arg0 for which no suitable target was found in line: (*arg0)(arg1, arg2); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 13056: Ignoring function call through function pointer *arg0: (*arg0)(arg1, arg2); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 13044: Ignoring call via function pointer ldv_interrupt_instance_thread_2_3::arg0 for which no suitable target was found in line: (*arg0)(arg1, arg2); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 13044: Ignoring function call through function pointer *arg0: (*arg0)(arg1, arg2); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 13032: Ignoring call via function pointer ldv_interrupt_instance_thread_1_3::arg0 for which no suitable target was found in line: (*arg0)(arg1, arg2); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 13032: Ignoring function call through function pointer *arg0: (*arg0)(arg1, arg2); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 13020: Ignoring call via function pointer ldv_interrupt_instance_thread_0_3::arg0 for which no suitable target was found in line: (*arg0)(arg1, arg2); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 13020: Ignoring function call through function pointer *arg0: (*arg0)(arg1, arg2); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function memcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __might_sleep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function kmemdup to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_alloc_flags to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ath10k_warn to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __pci_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_save_state to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_disable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_switch_to_process_context to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __tasklet_schedule to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ath10k_dbg_dump to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock_bh to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_restore_state to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ioread32 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_bh to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_after_alloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tasklet_kill to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ath10k_core_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_iounmap to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_release_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_clear_master to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ath10k_core_destroy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iowrite32 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ath10k_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 7050: Return type of function __builtin_unreachable is void, but result is used as type int: __builtin_unreachable(); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function __builtin_unreachable to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __phys_addr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

lines 7057-7058: Ignoring function call through function pointer *(ops->map_page): addr = (*(ops->map_page))(dev, ((struct page *)0L) + (tmp___2 >> 12), ((unsigned long)ptr) & 4095UL, size, dir, attrs); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function debug_dma_map_page to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ath10k_core_create to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 15337: Ignoring function call through function pointer *(ce_state->recv_cb): (*(ce_state->recv_cb))(ce_state); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 15344: Ignoring function call through function pointer *(ce_state->send_cb): (*(ce_state->send_cb))(ce_state); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function debug_dma_mapping_error to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 7162: Ignoring function call through function pointer *(ops->mapping_error): tmp___0 = (*(ops->mapping_error))(dev, dma_addr); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function __udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __init_waitqueue_head to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            2595471 (23% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  2212784 (85%)
  Because of loop head:            382127 (15%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         560 (0%)
  Times precision was empty:       1709898 (66%)
  Times precision was {false}:     8959 (0%)
  Times result was cached:         854208 (33%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      22406 (1%)
  Times result was 'false':        115245 (4%)
Number of strengthen sat checks:   0
Number of coverage checks:         2396478
  BDD entailment checks:           1673724
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       64
Number of predicates discovered:          39
Number of abstraction locations:          71
Max number of predicates per location:    39
Avg number of predicates per location:    13
Total predicates per abstraction:         10899264
Max number of predicates per abstraction: 39
Avg number of predicates per abstraction: 347.50
Number of irrelevant predicates:          6959165 (64%)
Number of preds handled by boolean abs:   274762 (3%)
  Total number of models for allsat:      583807
  Max number of models for allsat:        2400
  Avg number of models for allsat:        26.06

Time for post operator:                 59.013s
  Time for path formula creation:       53.384s
Time for strengthen operator:           10.041s
Time for prec operator:                514.483s
  Time for abstraction:                489.609s (Max:     1.200s, Count: 2595471)
    Boolean abstraction:               139.723s
    Solving time:                       46.152s (Max:     0.026s)
    Model enumeration time:             60.725s
    Time for BDD construction:          36.112s (Max:     0.224s)
Time for merge operator:                 1.924s
Time for coverage check:                 2.973s
  Time for BDD entailment checks:        2.609s
Total time for SMT solver (w/o itp):   106.878s

Number of path formula cache hits:   13475816 (96%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    25.677s

Total number of created targets for pointer analysis: 682
   Number of created targets for uf: *(struct_device_private)* is 2
   Number of created targets for uf: *(void)* is 2
   Number of created targets for uf: *signed_int is 9
   Number of created targets for uf: *unsigned_char is 9
   Number of created targets for uf: *(struct_list_head)* is 307
   Number of created targets for uf: *unsigned_int is 27


Number of BDD nodes:                               218560
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                      216417 (count: 3677827, min: 0, max: 3445, avg: 0.06)
Time for BDD node cleanup:                             0.579s
Time for BDD garbage collection:                       0.289s (in 46 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                 15.899s
  Time for transition matches:                         7.694s
  Time for transition assertions:                      0.002s
  Time for transition actions:                         0.008s
Automaton transfers with branching:                0
Automaton transfer successors:                     11304787 (count: 11304787, min: 1, max: 1, avg: 1.00) [1 x 11304787]

CPA algorithm statistics
------------------------
Number of iterations:            8215386
Max size of waitlist:            1390
Average size of waitlist:        454
Number of computed successors:   9258881
Max successors for one state:    2
Number of times merged:          361377
Number of times stopped:         699686
Number of times breaked:         560

Total time for CPA algorithm:       851.842s (Max:     9.379s)
  Time for choose from waitlist:      4.888s
  Time for precision adjustment:    587.157s
  Time for transfer relation:       195.457s
  Time for merge operator:            8.377s
  Time for stop operator:            15.258s
  Time for adding to reached set:    17.392s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   560
Avg. length of target path (in blocks):               18631 (count: 560, min: 15, max: 43, avg: 33.27)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  25.880s
  Counterexample analysis:                             6.649s (Max:     0.036s, Calls: 560)
    Refinement sat check:                              4.140s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.021s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.130s
  Precision update:                                    0.269s
  ARG update:                                         18.582s

Length of refined path (in blocks):                   10518 (count: 560, min: 11, max: 36, avg: 18.78)
Number of affected states:                             5850 (count: 560, min: 4, max: 29, avg: 10.45)
Length (states) of path with itp 'true':               4108 (count: 560, min: 6, max: 10, avg: 7.34)
Length (states) of path with itp non-trivial itp:      5850 (count: 560, min: 4, max: 29, avg: 10.45)
Length (states) of path with itp 'false':               560 (count: 560, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:          11 (count: 560, min: 0, max: 1, avg: 0.02)
Equal non-trivial interpolants along paths:            5279 (count: 560, min: 3, max: 28, avg: 9.43)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                560
Number of successful refinements:     560
Number of failed refinements:         0
Max. size of reached set before ref.: 37406
Max. size of reached set after ref.:  31420
Avg. size of reached set before ref.: 21556.33
Avg. size of reached set after ref.:  6499.84

Total time for CEGAR algorithm:     891.927s
Time for refinements:                36.824s
Average time for refinement:          0.065s
Max time for refinement:              1.382s

Code Coverage
-----------------------------
  Function coverage:      0.304
  Visited lines:          2051
  Total lines:            5511
  Line coverage:          0.372
  Visited conditions:     276
  Total conditions:       1138
  Condition coverage:     0.243

CPAchecker general statistics
-----------------------------
Number of program locations:     7477
Number of CFA edges:             8557
Number of relevant variables:    1435
Number of functions:             319
Number of loops:                 41
Size of reached set:             12318
  Number of reached locations:   934 (12%)
    Avg states per location:     13
    Max states per location:     143 (at node N6370)
  Number of reached functions:   97 (30%)
  Number of partitions:          12169
    Avg size of partitions:      1
    Max size of partitions:      28 (with key [N4061 (before line 12856), Function main called from node N4047, stack depth 1 [79a13920], stack [main]])
  Number of target states:       0
  Size of final wait list        274

Time for analysis setup:          8.297s
  Time for loading CPAs:          1.194s
  Time for loading parser:        0.779s
  Time for CFA construction:      6.175s
    Time for parsing file(s):     1.396s
    Time for AST to CFA:          2.373s
    Time for CFA sanity check:    0.512s
    Time for post-processing:     1.605s
      Time for var class.:        0.751s
Time for Analysis:              891.927s
CPU time for analysis:          891.820s
Total time for CPAchecker:      900.229s
Total CPU time for CPAchecker:  900.110s
Time for statistics:              0.363s

Time for Garbage Collector:      76.080s (in 1662 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                611MB (   583 MiB) max;    312MB (   297 MiB) avg;    625MB (   596 MiB) peak
Used non-heap memory:             41MB (    39 MiB) max;     40MB (    38 MiB) avg;     41MB (    39 MiB) peak
Allocated heap memory:           624MB (   595 MiB) max;    454MB (   433 MiB) avg
Allocated non-heap memory:        43MB (    41 MiB) max;     43MB (    41 MiB) avg
Total process virtual memory:   8422MB (  8032 MiB) max;   8218MB (  7837 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
