scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-challenges/linux-3.14__complex_emg__linux-kernel-locking-mutex__drivers-net-wireless-ath-ath10k-ath10k_pci_true-unreach-call.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run__1qof7_5/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 6747: Dead code detected: return (1); (CFACreationUtils.addEdgeToCFA, INFO)

line 6850: Dead code detected: return (1); (CFACreationUtils.addEdgeToCFA, INFO)

line 7985: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 8040: Dead code detected: __ms___0 = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 8307: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 8362: Dead code detected: __ms___0 = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

line 12084: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 12951: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 13675: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 13709: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 14389: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 14420: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 14439: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 14482: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 14501: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 14531: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 9369: Function pointer *(cb->rx_completion) with type int (*)(struct ath10k *, struct sk_buff *, u8 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9340: Function pointer *(cb->tx_completion) with type int (*)(struct ath10k *, struct sk_buff *, unsigned int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9861: Function pointer *(ar_pci->msg_callbacks_current.tx_completion) with type int (*)(struct ath10k *, struct sk_buff *, unsigned int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7248: Function pointer *(ops->alloc) with type void *(*)(struct device *, size_t , dma_addr_t *, gfp_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7289: Function pointer *(ops->free) with type void (*)(struct device *, size_t , void *, dma_addr_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 7057-7058: Function pointer *(ops->map_page) with type dma_addr_t (*)(struct device *, struct page *, unsigned long, size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7162: Function pointer *(ops->mapping_error) with type int (*)(struct device *, dma_addr_t ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7136: Function pointer *(ops->sync_single_for_device) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7096: Function pointer *(ops->unmap_page) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 13370: Function pointer *arg0 with type int (*)(struct pci_dev *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 13381: Function pointer *arg0 with type int (*)(struct pci_dev *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 13404: Function pointer *arg0 with type int (*)(struct pci_dev *, struct pm_message ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 13416: Function pointer *arg0 with type int (*)(struct pci_dev *, struct pm_message ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function external_allocated_data to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __pci_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ath10k_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_switch_to_interrupt_context to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __tasklet_schedule to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_switch_to_process_context to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ath10k_warn to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_pre_probe to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ath10k_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tasklet_kill to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ath10k_core_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_iounmap to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_release_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_clear_master to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_disable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ath10k_core_destroy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 13392: Ignoring call via function pointer ldv_pci_instance_shutdown_4_3::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 13392: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 13370: Ignoring call via function pointer ldv_pci_instance_resume_4_5::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 13370: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 13381: Ignoring call via function pointer ldv_pci_instance_resume_early_4_6::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 13381: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 13416: Ignoring call via function pointer ldv_pci_instance_suspend_late_4_7::arg0 for which no suitable target was found in line: tmp = (*arg0)(arg1, arg2); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 13416: Ignoring function call through function pointer *arg0: tmp = (*arg0)(arg1, arg2); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 13404: Ignoring call via function pointer ldv_pci_instance_suspend_4_8::arg0 for which no suitable target was found in line: tmp = (*arg0)(arg1, arg2); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 13404: Ignoring function call through function pointer *arg0: tmp = (*arg0)(arg1, arg2); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function ldv_check_alloc_flags to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_after_alloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock_bh to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __compiletime_assert_69 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_bh to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function request_threaded_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function list_del to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dev_kfree_skb_any to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 9861: Ignoring function call through function pointer *(ar_pci->msg_callbacks_current.tx_completion): (*(ar_pci->msg_callbacks_current.tx_completion))(ar, netbuf, id); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 7086: Return type of function __builtin_unreachable is void, but result is used as type int: __builtin_unreachable(); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function __builtin_unreachable to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 7096: Ignoring function call through function pointer *(ops->unmap_page): (*(ops->unmap_page))(dev, addr, size, dir, attrs); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function debug_dma_unmap_page to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iowrite32 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_restore_state to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_save_state to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __might_sleep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function kmemdup to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __raw_spin_lock_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ath10k_dbg_dump to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ath10k_core_create to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_assign_resource to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_enable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_request_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            567254 (22% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  482298 (85%)
  Because of loop head:            69874 (12%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         15082 (3%)
  Times precision was empty:       76605 (14%)
  Times precision was {false}:     6611 (1%)
  Times result was cached:         446794 (79%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      37244 (7%)
  Times result was 'false':        147104 (26%)
Number of strengthen sat checks:   0
Number of coverage checks:         434694
  BDD entailment checks:           334466
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       64
Number of predicates discovered:          73
Number of abstraction locations:          305
Max number of predicates per location:    54
Avg number of predicates per location:    12
Total predicates per abstraction:         11680150
Max number of predicates per abstraction: 54
Avg number of predicates per abstraction: 266.34
Number of irrelevant predicates:          3126181 (27%)
Number of preds handled by boolean abs:   857874 (7%)
  Total number of models for allsat:      946031
  Max number of models for allsat:        2240
  Avg number of models for allsat:        25.40

Time for post operator:                 17.714s
  Time for path formula creation:       16.484s
Time for strengthen operator:            2.593s
Time for prec operator:                761.614s
  Time for abstraction:                754.994s (Max:     0.590s, Count: 567254)
    Boolean abstraction:               300.096s
    Solving time:                       70.028s (Max:     0.043s)
    Model enumeration time:            152.045s
    Time for BDD construction:          69.350s (Max:     0.209s)
Time for merge operator:                 0.522s
Time for coverage check:                 0.602s
  Time for BDD entailment checks:        0.522s
Total time for SMT solver (w/o itp):   222.073s

Number of path formula cache hits:   2809923 (92%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     9.795s

Total number of created targets for pointer analysis: 843
   Number of created targets for uf: *(void)* is 2
   Number of created targets for uf: *(struct_device_private)* is 3
   Number of created targets for uf: *(struct_ath10k)* is 35
   Number of created targets for uf: *signed_int is 4
   Number of created targets for uf: *(struct_list_head)* is 23
   Number of created targets for uf: *(struct_pci_dev)* is 2
   Number of created targets for uf: *_Bool is 3
   Number of created targets for uf: *unsigned_int is 7
   Number of created targets for uf: *(struct_device)* is 2


Number of BDD nodes:                               130917
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                      166862 (count: 728744, min: 0, max: 2102, avg: 0.23)
Time for BDD node cleanup:                             0.197s
Time for BDD garbage collection:                       0.327s (in 64 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  4.449s
  Time for transition matches:                         2.369s
  Time for transition assertions:                      0.019s
  Time for transition actions:                         0.045s
Automaton transfers with branching:                0
Automaton transfer successors:                      2635685 (count: 2635685, min: 1, max: 1, avg: 1.00) [1 x 2635685]

CPA algorithm statistics
------------------------
Number of iterations:            2088080
Max size of waitlist:            191
Average size of waitlist:        64
Number of computed successors:   2401977
Max successors for one state:    2
Number of times merged:          50114
Number of times stopped:         99176
Number of times breaked:         960

Total time for CPA algorithm:       842.176s (Max:    11.965s)
  Time for choose from waitlist:      1.154s
  Time for precision adjustment:    776.351s
  Time for transfer relation:        48.724s
  Time for merge operator:            1.912s
  Time for stop operator:             4.200s
  Time for adding to reached set:     3.840s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   960
Avg. length of target path (in blocks):              127955 (count: 960, min: 29, max: 283, avg: 133.29)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  46.894s
  Counterexample analysis:                            40.700s (Max:     0.284s, Calls: 960)
    Refinement sat check:                             17.578s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.082s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.581s
  Precision update:                                    1.464s
  ARG update:                                          3.258s

Length of refined path (in blocks):                   97210 (count: 960, min: 11, max: 219, avg: 101.26)
Number of affected states:                            61324 (count: 960, min: 4, max: 175, avg: 63.88)
Length (states) of path with itp 'true':              34926 (count: 960, min: 0, max: 111, avg: 36.38)
Length (states) of path with itp non-trivial itp:     61324 (count: 960, min: 4, max: 175, avg: 63.88)
Length (states) of path with itp 'false':               887 (count: 960, min: 0, max: 1, avg: 0.92)
Different non-trivial interpolants along paths:         898 (count: 960, min: 0, max: 5, avg: 0.94)
Equal non-trivial interpolants along paths:           59466 (count: 960, min: 0, max: 173, avg: 61.94)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                960
Number of successful refinements:     960
Number of failed refinements:         0
Max. size of reached set before ref.: 5880
Max. size of reached set after ref.:  3225
Avg. size of reached set before ref.: 2757.73
Avg. size of reached set after ref.:  512.98

Total time for CEGAR algorithm:     892.209s
Time for refinements:                49.658s
Average time for refinement:          0.051s
Max time for refinement:              0.319s

Code Coverage
-----------------------------
  Function coverage:      0.116
  Visited lines:          1485
  Total lines:            5511
  Line coverage:          0.269
  Visited conditions:     102
  Total conditions:       1138
  Condition coverage:     0.090

CPAchecker general statistics
-----------------------------
Number of program locations:     7477
Number of CFA edges:             8557
Number of relevant variables:    1435
Number of functions:             319
Number of loops:                 41
Size of reached set:             738
  Number of reached locations:   395 (5%)
    Avg states per location:     1
    Max states per location:     14 (at node N6370)
  Number of reached functions:   37 (12%)
  Number of partitions:          731
    Avg size of partitions:      1
    Max size of partitions:      4 (with key [N4061 (before line 12856), Function main called from node N4047, stack depth 1 [79a13920], stack [main]])
  Number of target states:       0
  Size of final wait list        43

Time for analysis setup:          8.003s
  Time for loading CPAs:          1.097s
  Time for loading parser:        0.739s
  Time for CFA construction:      6.014s
    Time for parsing file(s):     1.218s
    Time for AST to CFA:          2.316s
    Time for CFA sanity check:    0.637s
    Time for post-processing:     1.607s
      Time for var class.:        0.743s
Time for Analysis:              892.209s
CPU time for analysis:          892.030s
Total time for CPAchecker:      900.216s
Total CPU time for CPAchecker:  900.020s
Time for statistics:              0.122s

Time for Garbage Collector:      22.572s (in 3025 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                189MB (   180 MiB) max;    120MB (   115 MiB) avg;    192MB (   183 MiB) peak
Used non-heap memory:             41MB (    39 MiB) max;     40MB (    38 MiB) avg;     41MB (    39 MiB) peak
Allocated heap memory:           223MB (   213 MiB) max;    187MB (   179 MiB) avg
Allocated non-heap memory:        43MB (    41 MiB) max;     42MB (    40 MiB) avg
Total process virtual memory:   8827MB (  8418 MiB) max;   8522MB (  8128 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
