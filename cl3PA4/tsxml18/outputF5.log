scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-challenges/linux-3.14__complex_emg__linux-kernel-locking-mutex__drivers-net-wireless-ath-ath10k-ath10k_pci_true-unreach-call.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_1bb6evms/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 6747: Dead code detected: return (1); (CFACreationUtils.addEdgeToCFA, INFO)

line 6850: Dead code detected: return (1); (CFACreationUtils.addEdgeToCFA, INFO)

line 7985: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 8040: Dead code detected: __ms___0 = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 8307: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 8362: Dead code detected: __ms___0 = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

line 12084: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 12951: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 13675: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 13709: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 14389: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 14420: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 14439: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 14482: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 14501: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 14531: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 9369: Function pointer *(cb->rx_completion) with type int (*)(struct ath10k *, struct sk_buff *, u8 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9340: Function pointer *(cb->tx_completion) with type int (*)(struct ath10k *, struct sk_buff *, unsigned int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9861: Function pointer *(ar_pci->msg_callbacks_current.tx_completion) with type int (*)(struct ath10k *, struct sk_buff *, unsigned int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7248: Function pointer *(ops->alloc) with type void *(*)(struct device *, size_t , dma_addr_t *, gfp_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7289: Function pointer *(ops->free) with type void (*)(struct device *, size_t , void *, dma_addr_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 7057-7058: Function pointer *(ops->map_page) with type dma_addr_t (*)(struct device *, struct page *, unsigned long, size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7162: Function pointer *(ops->mapping_error) with type int (*)(struct device *, dma_addr_t ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7136: Function pointer *(ops->sync_single_for_device) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7096: Function pointer *(ops->unmap_page) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 13370: Function pointer *arg0 with type int (*)(struct pci_dev *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 13381: Function pointer *arg0 with type int (*)(struct pci_dev *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 13404: Function pointer *arg0 with type int (*)(struct pci_dev *, struct pm_message ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 13416: Function pointer *arg0 with type int (*)(struct pci_dev *, struct pm_message ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function external_allocated_data to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_switch_to_interrupt_context to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ath10k_warn to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __tasklet_schedule to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 13056: Ignoring call via function pointer ldv_interrupt_instance_thread_3_3::arg0 for which no suitable target was found in line: (*arg0)(arg1, arg2); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 13056: Ignoring function call through function pointer *arg0: (*arg0)(arg1, arg2); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function ldv_switch_to_process_context to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ioread32 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iowrite32 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 13044: Ignoring call via function pointer ldv_interrupt_instance_thread_2_3::arg0 for which no suitable target was found in line: (*arg0)(arg1, arg2); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 13044: Ignoring function call through function pointer *arg0: (*arg0)(arg1, arg2); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 13032: Ignoring call via function pointer ldv_interrupt_instance_thread_1_3::arg0 for which no suitable target was found in line: (*arg0)(arg1, arg2); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 13032: Ignoring function call through function pointer *arg0: (*arg0)(arg1, arg2); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 13020: Ignoring call via function pointer ldv_interrupt_instance_thread_0_3::arg0 for which no suitable target was found in line: (*arg0)(arg1, arg2); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 13020: Ignoring function call through function pointer *arg0: (*arg0)(arg1, arg2); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function pci_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __pci_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ath10k_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_pre_probe to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 13381: Ignoring call via function pointer ldv_pci_instance_resume_early_4_6::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 13381: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 13370: Ignoring call via function pointer ldv_pci_instance_resume_4_5::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 13370: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 13404: Ignoring call via function pointer ldv_pci_instance_suspend_4_8::arg0 for which no suitable target was found in line: tmp = (*arg0)(arg1, arg2); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 13404: Ignoring function call through function pointer *arg0: tmp = (*arg0)(arg1, arg2); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 13416: Ignoring call via function pointer ldv_pci_instance_suspend_late_4_7::arg0 for which no suitable target was found in line: tmp = (*arg0)(arg1, arg2); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 13416: Ignoring function call through function pointer *arg0: tmp = (*arg0)(arg1, arg2); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 13392: Ignoring call via function pointer ldv_pci_instance_shutdown_4_3::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 13392: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function ath10k_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tasklet_kill to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ath10k_core_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_iounmap to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_release_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_clear_master to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_disable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ath10k_core_destroy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_alloc_flags to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_after_alloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ath10k_core_create to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_assign_resource to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_enable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_request_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dma_set_mask to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dma_supported to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_set_master to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_iomap to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __raw_spin_lock_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ath10k_core_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            2659673 (26% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  2448529 (92%)
  Because of loop head:            200452 (8%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         10692 (0%)
  Times precision was empty:       1866280 (70%)
  Times precision was {false}:     3886 (0%)
  Times result was cached:         768184 (29%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      21323 (1%)
  Times result was 'false':        107215 (4%)
Number of strengthen sat checks:   0
Number of coverage checks:         2113718
  BDD entailment checks:           1638424
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       64
Number of predicates discovered:          39
Number of abstraction locations:          113
Max number of predicates per location:    38
Avg number of predicates per location:    17
Total predicates per abstraction:         15885510
Max number of predicates per abstraction: 38
Avg number of predicates per abstraction: 630.15
Number of irrelevant predicates:          8504992 (54%)
Number of preds handled by boolean abs:   333384 (2%)
  Total number of models for allsat:      113598
  Max number of models for allsat:        90
  Avg number of models for allsat:        5.33

Time for post operator:                 82.114s
  Time for path formula creation:       76.497s
Time for strengthen operator:           10.137s
Time for prec operator:                520.030s
  Time for abstraction:                495.366s (Max:     0.981s, Count: 2659673)
    Boolean abstraction:                59.353s
    Solving time:                       34.930s (Max:     0.015s)
    Model enumeration time:             16.880s
    Time for BDD construction:           4.968s (Max:     0.038s)
Time for merge operator:                 2.318s
Time for coverage check:                 1.837s
  Time for BDD entailment checks:        1.497s
Total time for SMT solver (w/o itp):    51.810s

Number of path formula cache hits:   11624395 (91%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    49.697s

Total number of created targets for pointer analysis: 54
   Number of created targets for uf: *(void)* is 10
   Number of created targets for uf: *(struct_device_private)* is 10
   Number of created targets for uf: *unsigned_long_long_int is 10
   Number of created targets for uf: *unsigned_int is 19


Number of BDD nodes:                               77174
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                      116504 (count: 3719229, min: 0, max: 1303, avg: 0.03)
Time for BDD node cleanup:                             0.563s
Time for BDD garbage collection:                       0.107s (in 1 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                 13.246s
  Time for transition matches:                         7.439s
  Time for transition assertions:                      0.006s
  Time for transition actions:                         0.021s
Automaton transfers with branching:                0
Automaton transfer successors:                     10250225 (count: 10250225, min: 1, max: 1, avg: 1.00) [1 x 10250225]

CPA algorithm statistics
------------------------
Number of iterations:            7981671
Max size of waitlist:            78
Average size of waitlist:        40
Number of computed successors:   8711150
Max successors for one state:    2
Number of times merged:          237647
Number of times stopped:         602666
Number of times breaked:         708

Total time for CPA algorithm:       858.310s (Max:     4.631s)
  Time for choose from waitlist:      3.412s
  Time for precision adjustment:    580.390s
  Time for transfer relation:       214.888s
  Time for merge operator:            7.619s
  Time for stop operator:            14.788s
  Time for adding to reached set:    14.797s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   708
Avg. length of target path (in blocks):               42699 (count: 708, min: 15, max: 105, avg: 60.31)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  27.925s
  Counterexample analysis:                            12.264s (Max:     0.048s, Calls: 708)
    Refinement sat check:                              6.727s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.033s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.271s
  Precision update:                                    0.679s
  ARG update:                                         14.340s

Length of refined path (in blocks):                   25525 (count: 708, min: 11, max: 82, avg: 36.05)
Number of affected states:                            16919 (count: 708, min: 4, max: 80, avg: 23.90)
Length (states) of path with itp 'true':               7898 (count: 708, min: 1, max: 43, avg: 11.16)
Length (states) of path with itp non-trivial itp:     16919 (count: 708, min: 4, max: 80, avg: 23.90)
Length (states) of path with itp 'false':               645 (count: 708, min: 0, max: 1, avg: 0.91)
Different non-trivial interpolants along paths:         119 (count: 708, min: 0, max: 1, avg: 0.17)
Equal non-trivial interpolants along paths:           16092 (count: 708, min: 3, max: 78, avg: 22.73)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                708
Number of successful refinements:     708
Number of failed refinements:         0
Max. size of reached set before ref.: 23629
Max. size of reached set after ref.:  13278
Avg. size of reached set before ref.: 12601.50
Avg. size of reached set after ref.:  1307.25

Total time for CEGAR algorithm:     892.244s
Time for refinements:                33.147s
Average time for refinement:          0.046s
Max time for refinement:              0.142s

Code Coverage
-----------------------------
  Function coverage:      0.163
  Visited lines:          1595
  Total lines:            5511
  Line coverage:          0.289
  Visited conditions:     122
  Total conditions:       1138
  Condition coverage:     0.107

CPAchecker general statistics
-----------------------------
Number of program locations:     7477
Number of CFA edges:             8557
Number of relevant variables:    1435
Number of functions:             319
Number of loops:                 41
Size of reached set:             4944
  Number of reached locations:   531 (7%)
    Avg states per location:     9
    Max states per location:     89 (at node N6369)
  Number of reached functions:   52 (16%)
  Number of partitions:          4814
    Avg size of partitions:      1
    Max size of partitions:      13 (with key [N4061 (before line 12856), Function main called from node N4047, stack depth 1 [79a13920], stack [main]])
  Number of target states:       0
  Size of final wait list        35

Time for analysis setup:          7.976s
  Time for loading CPAs:          1.140s
  Time for loading parser:        0.810s
  Time for CFA construction:      5.854s
    Time for parsing file(s):     1.375s
    Time for AST to CFA:          2.153s
    Time for CFA sanity check:    0.534s
    Time for post-processing:     1.535s
      Time for var class.:        0.649s
Time for Analysis:              892.244s
CPU time for analysis:          892.150s
Total time for CPAchecker:      900.224s
Total CPU time for CPAchecker:  900.120s
Time for statistics:              0.240s

Time for Garbage Collector:      56.028s (in 1435 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                806MB (   769 MiB) max;    423MB (   404 MiB) avg;    867MB (   827 MiB) peak
Used non-heap memory:             43MB (    41 MiB) max;     40MB (    39 MiB) avg;     43MB (    41 MiB) peak
Allocated heap memory:           966MB (   921 MiB) max;    625MB (   596 MiB) avg
Allocated non-heap memory:        45MB (    43 MiB) max;     44MB (    42 MiB) avg
Total process virtual memory:   8355MB (  7968 MiB) max;   8255MB (  7873 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
