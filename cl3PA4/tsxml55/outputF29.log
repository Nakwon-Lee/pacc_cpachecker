scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-challenges/linux-3.14__complex_emg__linux-kernel-locking-spinlock__drivers-net-ethernet-qlogic-netxen-netxen_nic_true-unreach-call.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_yj68g9ov/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 6881: Dead code detected: return (1); (CFACreationUtils.addEdgeToCFA, INFO)

line 7147: Dead code detected: Goto: case_1 (CFACreationUtils.addEdgeToCFA, INFO)

line 7170: Dead code detected: Goto: case_1___0 (CFACreationUtils.addEdgeToCFA, INFO)

line 7175: Dead code detected: Goto: case_2 (CFACreationUtils.addEdgeToCFA, INFO)

line 7185: Dead code detected: Goto: case_8 (CFACreationUtils.addEdgeToCFA, INFO)

line 7189: Dead code detected: Goto: switch_default (CFACreationUtils.addEdgeToCFA, INFO)

line 7152: Dead code detected: Goto: case_2___0 (CFACreationUtils.addEdgeToCFA, INFO)

line 7214: Dead code detected: Goto: case_1___1 (CFACreationUtils.addEdgeToCFA, INFO)

line 7219: Dead code detected: Goto: case_2___1 (CFACreationUtils.addEdgeToCFA, INFO)

line 7229: Dead code detected: Goto: case_8___0 (CFACreationUtils.addEdgeToCFA, INFO)

line 7233: Dead code detected: Goto: switch_default___0 (CFACreationUtils.addEdgeToCFA, INFO)

line 7258: Dead code detected: Goto: case_1___2 (CFACreationUtils.addEdgeToCFA, INFO)

line 7263: Dead code detected: Goto: case_2___2 (CFACreationUtils.addEdgeToCFA, INFO)

line 7273: Dead code detected: Goto: case_8___1 (CFACreationUtils.addEdgeToCFA, INFO)

line 7277: Dead code detected: Goto: switch_default___1 (CFACreationUtils.addEdgeToCFA, INFO)

line 7162: Dead code detected: Goto: case_8___2 (CFACreationUtils.addEdgeToCFA, INFO)

line 7302: Dead code detected: Goto: case_1___3 (CFACreationUtils.addEdgeToCFA, INFO)

line 7307: Dead code detected: Goto: case_2___3 (CFACreationUtils.addEdgeToCFA, INFO)

line 7317: Dead code detected: Goto: case_8___3 (CFACreationUtils.addEdgeToCFA, INFO)

line 7321: Dead code detected: Goto: switch_default___2 (CFACreationUtils.addEdgeToCFA, INFO)

line 7166: Dead code detected: Goto: switch_default___3 (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label case_4___0 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_4___3 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_8___3 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_8___2 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_8___1 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_8 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_8___0 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_4 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_1 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_2 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_default is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_2___2 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_2___3 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_2___0 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_2___1 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_1___1 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_1___2 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_1___3 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_1___0 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

line 11429: Dead code detected: return (1); (CFACreationUtils.addEdgeToCFA, INFO)

line 11465: Dead code detected: Goto: case_1 (CFACreationUtils.addEdgeToCFA, INFO)

line 11470: Dead code detected: Goto: case_2 (CFACreationUtils.addEdgeToCFA, INFO)

line 11480: Dead code detected: Goto: case_8 (CFACreationUtils.addEdgeToCFA, INFO)

line 11484: Dead code detected: Goto: switch_default (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label case_8 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_default is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_1 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_2 is not reachable. (CFAFunctionBuilder.leave, INFO)

line 11543: Dead code detected: Goto: case_1 (CFACreationUtils.addEdgeToCFA, INFO)

line 11548: Dead code detected: Goto: case_2 (CFACreationUtils.addEdgeToCFA, INFO)

line 11558: Dead code detected: Goto: case_8 (CFACreationUtils.addEdgeToCFA, INFO)

line 11562: Dead code detected: Goto: switch_default (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label case_8 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_default is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_1 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_2 is not reachable. (CFAFunctionBuilder.leave, INFO)

line 12535: Dead code detected: Goto: case_1 (CFACreationUtils.addEdgeToCFA, INFO)

line 12558: Dead code detected: Goto: case_1___0 (CFACreationUtils.addEdgeToCFA, INFO)

line 12563: Dead code detected: Goto: case_2 (CFACreationUtils.addEdgeToCFA, INFO)

line 12573: Dead code detected: Goto: case_8 (CFACreationUtils.addEdgeToCFA, INFO)

line 12577: Dead code detected: Goto: switch_default (CFACreationUtils.addEdgeToCFA, INFO)

line 12540: Dead code detected: Goto: case_2___0 (CFACreationUtils.addEdgeToCFA, INFO)

line 12602: Dead code detected: Goto: case_1___1 (CFACreationUtils.addEdgeToCFA, INFO)

line 12607: Dead code detected: Goto: case_2___1 (CFACreationUtils.addEdgeToCFA, INFO)

line 12617: Dead code detected: Goto: case_8___0 (CFACreationUtils.addEdgeToCFA, INFO)

line 12621: Dead code detected: Goto: switch_default___0 (CFACreationUtils.addEdgeToCFA, INFO)

line 12646: Dead code detected: Goto: case_1___2 (CFACreationUtils.addEdgeToCFA, INFO)

line 12651: Dead code detected: Goto: case_2___2 (CFACreationUtils.addEdgeToCFA, INFO)

line 12661: Dead code detected: Goto: case_8___1 (CFACreationUtils.addEdgeToCFA, INFO)

line 12665: Dead code detected: Goto: switch_default___1 (CFACreationUtils.addEdgeToCFA, INFO)

line 12550: Dead code detected: Goto: case_8___2 (CFACreationUtils.addEdgeToCFA, INFO)

line 12690: Dead code detected: Goto: case_1___3 (CFACreationUtils.addEdgeToCFA, INFO)

line 12695: Dead code detected: Goto: case_2___3 (CFACreationUtils.addEdgeToCFA, INFO)

line 12705: Dead code detected: Goto: case_8___3 (CFACreationUtils.addEdgeToCFA, INFO)

line 12709: Dead code detected: Goto: switch_default___2 (CFACreationUtils.addEdgeToCFA, INFO)

line 12554: Dead code detected: Goto: switch_default___3 (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label case_4___0 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_4___3 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_8___3 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_8___2 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_8___1 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_8 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_8___0 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_4 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_1 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_2 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_default is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_2___2 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_2___3 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_2___0 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_2___1 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_1___1 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_1___2 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_1___3 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_1___0 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

line 19622: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 19642: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 19645: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 19647: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 20629: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 20642: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 21599: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 21625: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 21667: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 21668: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 21703: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 21737: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 22979: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 22995: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 23016: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 23081: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 23133: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 23150: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 23279: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 23295: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 23313: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 23341: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 23357: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

line 26668: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 26684: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 23603: Function pointer *(ops->alloc) with type void *(*)(struct device *, size_t , dma_addr_t *, gfp_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 23644: Function pointer *(ops->free) with type void (*)(struct device *, size_t , void *, dma_addr_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 12049: Function pointer *(ops->map_page) with type dma_addr_t (*)(struct device *, struct page *, unsigned long, size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 11970-11971: Function pointer *(ops->map_page) with type dma_addr_t (*)(struct device *, struct page *, unsigned long, size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 12110: Function pointer *(ops->mapping_error) with type int (*)(struct device *, dma_addr_t ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 12084: Function pointer *(ops->unmap_page) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 12009: Function pointer *(ops->unmap_page) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 22921: Function pointer *arg0 with type void (*)(unsigned long) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function external_allocated_data to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function register_netdevice_notifier to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function register_inetaddr_notifier to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __pci_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_switch_to_interrupt_context to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_switch_to_process_context to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 20663: Ignoring call via function pointer ldv_interrupt_instance_handler_0_5::arg0 for which no suitable target was found in line: tmp = (*arg0)(arg1, arg2); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 20663: Ignoring function call through function pointer *arg0: tmp = (*arg0)(arg1, arg2); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function strlcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snprintf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netdev_info to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ethtool_op_get_link to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 27637: Ignoring function call through function pointer *(adapter->crb_read): val = (*(adapter->crb_read))(adapter, 106954904UL); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 27586: Ignoring function call through function pointer *(adapter->crb_read): val = (*(adapter->crb_read))(adapter, ((unsigned long)(port * 65536)) + 107151360UL); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 27588: Ignoring function call through function pointer *(adapter->crb_read): val = (*(adapter->crb_read))(adapter, 106955532UL); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 27288: Ignoring function call through function pointer *(adapter->crb_read): *(regs_buff + ((unsigned long)tmp___0)) = (*(adapter->crb_read))(adapter, 136323664UL); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 27291: Ignoring function call through function pointer *(adapter->crb_read): *(regs_buff + ((unsigned long)tmp___1)) = (*(adapter->crb_read))(adapter, 136323900UL); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 27294: Ignoring function call through function pointer *(adapter->crb_read): *(regs_buff + ((unsigned long)tmp___2)) = (*(adapter->crb_read))(adapter, 136323368UL); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 27297: Ignoring function call through function pointer *(adapter->io_read): *(regs_buff + ((unsigned long)tmp___3)) = (*(adapter->io_read))(adapter, adapter->crb_int_state_reg); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 27300: Ignoring function call through function pointer *(adapter->crb_read): *(regs_buff + ((unsigned long)tmp___4)) = (*(adapter->crb_read))(adapter, 136323384UL); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 27303: Ignoring function call through function pointer *(adapter->crb_read): *(regs_buff + ((unsigned long)tmp___5)) = (*(adapter->crb_read))(adapter, 136323392UL); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 27306: Ignoring function call through function pointer *(adapter->crb_read): *(regs_buff + ((unsigned long)tmp___6)) = (*(adapter->crb_read))(adapter, 136323248UL); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 27309: Ignoring function call through function pointer *(adapter->crb_read): *(regs_buff + ((unsigned long)tmp___7)) = (*(adapter->crb_read))(adapter, 136323240UL); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 27312: Ignoring function call through function pointer *(adapter->crb_read): *(regs_buff + ((unsigned long)tmp___8)) = (*(adapter->crb_read))(adapter, 136323244UL); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 27315: Ignoring function call through function pointer *(adapter->crb_read): *(regs_buff + ((unsigned long)tmp___9)) = (*(adapter->crb_read))(adapter, 118489148UL); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 27318: Ignoring function call through function pointer *(adapter->crb_read): *(regs_buff + ((unsigned long)tmp___10)) = (*(adapter->crb_read))(adapter, 119537724UL); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 27321: Ignoring function call through function pointer *(adapter->crb_read): *(regs_buff + ((unsigned long)tmp___11)) = (*(adapter->crb_read))(adapter, 120586300UL); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 27324: Ignoring function call through function pointer *(adapter->crb_read): *(regs_buff + ((unsigned long)tmp___12)) = (*(adapter->crb_read))(adapter, 121634876UL); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 27344: Ignoring function call through function pointer *(adapter->crb_read): *(regs_buff + ((unsigned long)tmp___16)) = (*(adapter->crb_read))(adapter, ((unsigned long)(port * 65536)) + 107413504UL); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 27347: Ignoring function call through function pointer *(adapter->crb_read): *(regs_buff + ((unsigned long)tmp___17)) = (*(adapter->crb_read))(adapter, ((unsigned long)(port * 65536)) + 107413508UL); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 27350: Ignoring function call through function pointer *(adapter->crb_read): *(regs_buff + ((unsigned long)tmp___18)) = (*(adapter->crb_read))(adapter, 136323732UL); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 27353: Ignoring function call through function pointer *(adapter->io_read): *(regs_buff + ((unsigned long)tmp___19)) = (*(adapter->io_read))(adapter, adapter->tx_ring->crb_cmd_consumer); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 27330: Ignoring function call through function pointer *(adapter->crb_read): *(regs_buff + ((unsigned long)tmp___13)) = (*(adapter->crb_read))(adapter, 116391996UL); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 27334: Ignoring function call through function pointer *(adapter->crb_read): *(regs_buff + ((unsigned long)tmp___14)) = (*(adapter->crb_read))(adapter, 136323736UL); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 27359: Ignoring function call through function pointer *(adapter->io_read): *(regs_buff + ((unsigned long)tmp___20)) = (*(adapter->io_read))(adapter, adapter->tx_ring->crb_cmd_producer); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 27362: Ignoring function call through function pointer *(adapter->io_read): *(regs_buff + ((unsigned long)tmp___21)) = (*(adapter->io_read))(adapter, recv_ctx->rds_rings->crb_rcv_producer); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 27365: Ignoring function call through function pointer *(adapter->io_read): *(regs_buff + ((unsigned long)tmp___22)) = (*(adapter->io_read))(adapter, ((recv_ctx->rds_rings) + 1UL)->crb_rcv_producer); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 26876: Ignoring function call through function pointer *(adapter->crb_read): val = (*(adapter->crb_read))(adapter, 136323108UL); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 27969: Ignoring function call through function pointer *(adapter->crb_read): wol_cfg = (*(adapter->crb_read))(adapter, 136323460UL); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 27977: Ignoring function call through function pointer *(adapter->crb_read): wol_cfg = (*(adapter->crb_read))(adapter, 136323464UL); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 8617: Ignoring function call through function pointer *(adapter->set_mtu): rc = (*(adapter->set_mtu))(adapter, mtu); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function disable_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function enable_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __napi_schedule to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 13364: Ignoring function call through function pointer *(adapter->io_write): (*(adapter->io_write))(adapter, sds_ring->crb_intr_mask, 0U); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function _raw_read_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_read_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 14015: Ignoring function call through function pointer *(adapter->set_multi): (*(adapter->set_multi))(dev); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Recursion detected, aborting. To ignore recursion, add -skipRecursion to the command line. (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, INFO)

Error: line 14015: Unsupported feature (recursion): netxen_set_multicast_list(dev); (line was originally pointer call(netxen_set_multicast_list) (*(adapter->set_multi))(dev);) (CallstackTransferRelation.getAbstractSuccessorsForEdge, SEVERE)

PredicateCPA statistics
-----------------------
Number of abstractions:            239777 (27% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  187682 (78%)
  Because of loop head:            28244 (12%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         23851 (10%)
  Times precision was empty:       46122 (19%)
  Times precision was {false}:     536 (0%)
  Times result was cached:         186032 (78%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      7087 (3%)
  Times result was 'false':        27411 (11%)
Number of strengthen sat checks:   0
Number of coverage checks:         76401
  BDD entailment checks:           27087
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       265
Number of predicates discovered:          29
Number of abstraction locations:          163
Max number of predicates per location:    28
Avg number of predicates per location:    17
Total predicates per abstraction:         2855765
Max number of predicates per abstraction: 28
Avg number of predicates per abstraction: 374.62
Number of irrelevant predicates:          557373 (20%)
Number of preds handled by boolean abs:   89970 (3%)
  Total number of models for allsat:      8552
  Max number of models for allsat:        8
  Avg number of models for allsat:        1.21

Time for post operator:                 11.194s
  Time for path formula creation:       10.751s
Time for strengthen operator:            0.805s
Time for prec operator:                122.158s
  Time for abstraction:                118.980s (Max:     0.307s, Count: 239777)
    Boolean abstraction:                10.883s
    Solving time:                        8.173s (Max:     0.242s)
    Model enumeration time:              0.786s
    Time for BDD construction:           0.427s (Max:     0.012s)
Time for merge operator:                 0.530s
Time for coverage check:                 0.076s
  Time for BDD entailment checks:        0.059s
Total time for SMT solver (w/o itp):     8.959s

Number of path formula cache hits:   1027972 (94%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     6.282s

Total number of created targets for pointer analysis: 9174
   Number of created targets for uf: *unsigned_int is 140


Number of BDD nodes:                               5155
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       20623 (count: 121362, min: 0, max: 605, avg: 0.17)
Time for BDD node cleanup:                             0.037s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  1.917s
  Time for transition matches:                         0.815s
  Time for transition assertions:                      0.009s
  Time for transition actions:                         0.031s
Automaton transfers with branching:                0
Automaton transfer successors:                       875482 (count: 875482, min: 1, max: 1, avg: 1.00) [1 x 875482]

CPA algorithm statistics
------------------------
Number of iterations:            663018
Max size of waitlist:            293
Average size of waitlist:        40
Number of computed successors:   756344
Max successors for one state:    2
Number of times merged:          24657
Number of times stopped:         43122
Number of times breaked:         459

Total time for CPA algorithm:       161.197s (Max:     3.229s)
  Time for choose from waitlist:      0.439s
  Time for precision adjustment:    127.474s
  Time for transfer relation:        26.919s
  Time for merge operator:            1.217s
  Time for stop operator:             1.194s
  Time for adding to reached set:     1.554s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   459
Avg. length of target path (in blocks):               59613 (count: 459, min: 43, max: 189, avg: 129.88)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  96.144s
  Counterexample analysis:                            93.480s (Max:     0.552s, Calls: 459)
    Refinement sat check:                             72.832s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.029s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.362s
  Precision update:                                    0.733s
  ARG update:                                          1.200s

Length of refined path (in blocks):                   51081 (count: 459, min: 9, max: 189, avg: 111.29)
Number of affected states:                            40075 (count: 459, min: 4, max: 188, avg: 87.31)
Length (states) of path with itp 'true':              10547 (count: 459, min: 0, max: 122, avg: 22.98)
Length (states) of path with itp non-trivial itp:     40075 (count: 459, min: 4, max: 188, avg: 87.31)
Length (states) of path with itp 'false':               203 (count: 459, min: 0, max: 1, avg: 0.44)
Different non-trivial interpolants along paths:         259 (count: 459, min: 0, max: 1, avg: 0.56)
Equal non-trivial interpolants along paths:           39357 (count: 459, min: 3, max: 186, avg: 85.75)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                459
Number of successful refinements:     459
Number of failed refinements:         0
Max. size of reached set before ref.: 4079
Max. size of reached set after ref.:  2642
Avg. size of reached set before ref.: 1992.12
Avg. size of reached set after ref.:  500.88

Total time for CEGAR algorithm:     258.694s
Time for refinements:                97.337s
Average time for refinement:          0.212s
Max time for refinement:              0.570s

Code Coverage
-----------------------------
  Function coverage:      0.081
  Visited lines:          1968
  Total lines:            12512
  Line coverage:          0.157
  Visited conditions:     186
  Total conditions:       6360
  Condition coverage:     0.029

CPAchecker general statistics
-----------------------------
Number of program locations:     22151
Number of CFA edges:             27810
Number of relevant variables:    3109
Number of functions:             755
Number of loops:                 126
Size of reached set:             1332
  Number of reached locations:   614 (3%)
    Avg states per location:     2
    Max states per location:     34 (at node N18007)
  Number of reached functions:   61 (8%)
  Number of partitions:          1327
    Avg size of partitions:      1
    Max size of partitions:      3 (with key [N9341 (before line 20494), Function main called from node N9324, stack depth 1 [40a360e6], stack [main]])
  Number of target states:       0
  Size of final wait list        56

Time for analysis setup:         12.826s
  Time for loading CPAs:          1.465s
  Time for loading parser:        0.695s
  Time for CFA construction:     10.493s
    Time for parsing file(s):     1.664s
    Time for AST to CFA:          3.334s
    Time for CFA sanity check:    1.557s
    Time for post-processing:     3.874s
      Time for var class.:        1.619s
Time for Analysis:              258.694s
CPU time for analysis:          258.660s
Total time for CPAchecker:      271.524s
Total CPU time for CPAchecker:  271.450s
Time for statistics:              0.187s

Time for Garbage Collector:       6.161s (in 988 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                123MB (   118 MiB) max;     80MB (    77 MiB) avg;    133MB (   127 MiB) peak
Used non-heap memory:             42MB (    40 MiB) max;     39MB (    37 MiB) avg;     42MB (    40 MiB) peak
Allocated heap memory:           148MB (   142 MiB) max;    130MB (   124 MiB) avg
Allocated non-heap memory:        44MB (    42 MiB) max;     42MB (    40 MiB) avg
Total process virtual memory:   8219MB (  7839 MiB) max;   8157MB (  7779 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
