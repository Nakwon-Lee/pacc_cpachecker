scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-challenges/linux-3.14__complex_emg__linux-kernel-locking-spinlock__drivers-net-ethernet-broadcom-b44_true-unreach-call.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_ombbnrbc/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 5776: Dead code detected: return (1); (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

line 11670: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 11690: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 11693: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 11695: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 11810: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 12399: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 12412: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 12543: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 12948: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 12949: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 12994: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 13008: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 13605: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 13689: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 13780: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 13796: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 13825: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 13841: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 13905: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 13936: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 13952: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 13968: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 6368: Function pointer *(ops->alloc) with type void *(*)(struct device *, size_t , dma_addr_t *, gfp_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6409: Function pointer *(ops->free) with type void (*)(struct device *, size_t , void *, dma_addr_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 6137-6138: Function pointer *(ops->map_page) with type dma_addr_t (*)(struct device *, struct page *, unsigned long, size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6282: Function pointer *(ops->mapping_error) with type int (*)(struct device *, dma_addr_t ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6216: Function pointer *(ops->sync_single_for_cpu) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6256: Function pointer *(ops->sync_single_for_device) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6176: Function pointer *(ops->unmap_page) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7234: Function pointer *(dev->ops->read32) with type u32 (*)(struct ssb_device *, u16 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7245: Function pointer *(dev->ops->write32) with type void (*)(struct ssb_device *, u16 , u32 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function external_allocated_data to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ssb_driver_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ssb_pcihost_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __ssb_driver_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_switch_to_interrupt_context to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strlcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ethtool_op_get_link to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 10261: Return type of function __builtin_unreachable is void, but result is used as type int: __builtin_unreachable(); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function __builtin_unreachable to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 10843: Return type of function __builtin_unreachable is void, but result is used as type int: __builtin_unreachable(); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function netdev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function eth_validate_addr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 10355: Return type of function __builtin_unreachable is void, but result is used as type int: __builtin_unreachable(); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function unregister_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function phy_stop to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __might_sleep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function msleep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 7245: Ignoring function call through function pointer *(dev->ops->write32): (*(dev->ops->write32))(dev, (int)offset, value); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 7234: Ignoring function call through function pointer *(dev->ops->read32): tmp = (*(dev->ops->read32))(dev, (int)offset); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function netdev_info to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ssb_device_is_enabled to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ssb_device_enable to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ssb_pcicore_dev_irqvecs_enable to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 6166: Return type of function __builtin_unreachable is void, but result is used as type int: __builtin_unreachable(); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

line 6176: Ignoring function call through function pointer *(ops->unmap_page): (*(ops->unmap_page))(dev, addr, size, dir, attrs); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function debug_dma_unmap_page to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dev_kfree_skb_any to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netif_carrier_off to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ssb_device_disable to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ssb_bus_may_powerdown to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_set_power_state to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function phy_disconnect to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mdiobus_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mdiobus_free to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 5819: Return type of function __builtin_unreachable is void, but result is used as type int: __builtin_unreachable(); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function debug_dma_free_coherent to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 6409: Ignoring function call through function pointer *(ops->free): (*(ops->free))(dev, size, vaddr, bus, attrs); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function dql_reset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_alloc_flags to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_after_alloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function net_ratelimit to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            1048885 (26% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  880129 (84%)
  Because of loop head:            95551 (9%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         73205 (7%)
  Times precision was empty:       101562 (10%)
  Times precision was {false}:     1113 (0%)
  Times result was cached:         930423 (89%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      15787 (2%)
  Times result was 'false':        114545 (11%)
Number of strengthen sat checks:   0
Number of coverage checks:         330220
  BDD entailment checks:           151964
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       48
Number of predicates discovered:          50
Number of abstraction locations:          358
Max number of predicates per location:    28
Avg number of predicates per location:    16
Total predicates per abstraction:         13881804
Max number of predicates per abstraction: 28
Avg number of predicates per abstraction: 821.41
Number of irrelevant predicates:          3025125 (22%)
Number of preds handled by boolean abs:   176408 (1%)
  Total number of models for allsat:      39482
  Max number of models for allsat:        96
  Avg number of models for allsat:        2.50

Time for post operator:                 15.168s
  Time for path formula creation:       13.438s
Time for strengthen operator:            3.645s
Time for prec operator:                579.089s
  Time for abstraction:                569.094s (Max:     0.255s, Count: 1048885)
    Boolean abstraction:                26.992s
    Solving time:                       18.981s (Max:     0.015s)
    Model enumeration time:              3.891s
    Time for BDD construction:           1.232s (Max:     0.012s)
Time for merge operator:                 0.494s
Time for coverage check:                 0.263s
  Time for BDD entailment checks:        0.212s
Total time for SMT solver (w/o itp):    22.872s

Number of path formula cache hits:   4877915 (98%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     5.212s

Total number of created targets for pointer analysis: 398
   Number of created targets for uf: *unsigned_char is 399


Number of BDD nodes:                               78946
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       92546 (count: 381632, min: 0, max: 1597, avg: 0.24)
Time for BDD node cleanup:                             0.080s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  6.233s
  Time for transition matches:                         2.745s
  Time for transition assertions:                      0.012s
  Time for transition actions:                         0.064s
Automaton transfers with branching:                0
Automaton transfer successors:                      3978195 (count: 3978195, min: 1, max: 1, avg: 1.00) [1 x 3978195]

CPA algorithm statistics
------------------------
Number of iterations:            3177672
Max size of waitlist:            103
Average size of waitlist:        48
Number of computed successors:   3537801
Max successors for one state:    2
Number of times merged:          89128
Number of times stopped:         152044
Number of times breaked:         2541

Total time for CPA algorithm:       688.052s (Max:     3.254s)
  Time for choose from waitlist:      1.403s
  Time for precision adjustment:    600.983s
  Time for transfer relation:        65.013s
  Time for merge operator:            2.018s
  Time for stop operator:             4.884s
  Time for adding to reached set:     5.710s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   2541
Avg. length of target path (in blocks):              601354 (count: 2541, min: 33, max: 415, avg: 236.66)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                 194.049s
  Counterexample analysis:                           178.621s (Max:     0.567s, Calls: 2541)
    Refinement sat check:                             46.710s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.288s
  Error path post-processing:                          0.000s
  Predicate creation:                                  1.358s
  Precision update:                                    6.655s
  ARG update:                                          4.908s

Length of refined path (in blocks):                  527405 (count: 2540, min: 9, max: 406, avg: 207.64)
Number of affected states:                           183940 (count: 2540, min: 4, max: 405, avg: 72.42)
Length (states) of path with itp 'true':             340925 (count: 2540, min: 0, max: 253, avg: 134.22)
Length (states) of path with itp non-trivial itp:    183940 (count: 2540, min: 4, max: 405, avg: 72.42)
Length (states) of path with itp 'false':              2089 (count: 2540, min: 0, max: 1, avg: 0.82)
Different non-trivial interpolants along paths:         967 (count: 2540, min: 0, max: 6, avg: 0.38)
Equal non-trivial interpolants along paths:          180433 (count: 2540, min: 0, max: 403, avg: 71.04)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                2541
Number of successful refinements:     2540
Number of failed refinements:         0
Max. size of reached set before ref.: 8349
Max. size of reached set after ref.:  6114
Avg. size of reached set before ref.: 2753.83
Avg. size of reached set after ref.:  1467.03

Total time for CEGAR algorithm:     892.460s
Time for refinements:               202.076s
Average time for refinement:          0.079s
Max time for refinement:              0.586s

Code Coverage
-----------------------------
  Function coverage:      0.284
  Visited lines:          1824
  Total lines:            5040
  Line coverage:          0.362
  Visited conditions:     204
  Total conditions:       1080
  Condition coverage:     0.189

CPAchecker general statistics
-----------------------------
Number of program locations:     7271
Number of CFA edges:             8363
Number of relevant variables:    1071
Number of functions:             408
Number of loops:                 25
Size of reached set:             2583
  Number of reached locations:   908 (12%)
    Avg states per location:     2
    Max states per location:     73 (at node N6573)
  Number of reached functions:   116 (28%)
  Number of partitions:          2563
    Avg size of partitions:      1
    Max size of partitions:      5 (with key [N4066 (before line 12324), Function main called from node N4055, stack depth 1 [38fb50f8], stack [main]])
  Number of target states:       1
  Size of final wait list        84

Time for analysis setup:          7.771s
  Time for loading CPAs:          1.030s
  Time for loading parser:        0.719s
  Time for CFA construction:      5.914s
    Time for parsing file(s):     1.355s
    Time for AST to CFA:          2.293s
    Time for CFA sanity check:    0.545s
    Time for post-processing:     1.482s
      Time for var class.:        0.690s
Time for Analysis:              892.460s
CPU time for analysis:          892.370s
Total time for CPAchecker:      900.239s
Total CPU time for CPAchecker:  900.130s
Time for statistics:              0.182s

Time for Garbage Collector:      32.520s (in 5109 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                147MB (   140 MiB) max;     85MB (    81 MiB) avg;    155MB (   147 MiB) peak
Used non-heap memory:             41MB (    39 MiB) max;     40MB (    38 MiB) avg;     41MB (    40 MiB) peak
Allocated heap memory:           169MB (   161 MiB) max;    132MB (   126 MiB) avg
Allocated non-heap memory:        43MB (    41 MiB) max;     42MB (    40 MiB) avg
Total process virtual memory:   8288MB (  7904 MiB) max;   8180MB (  7801 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
