scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-challenges/linux-3.14__complex_emg__linux-kernel-locking-spinlock__drivers-net-ethernet-broadcom-b44_true-unreach-call.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_uo533tz2/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 5776: Dead code detected: return (1); (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

line 11670: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 11690: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 11693: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 11695: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 11810: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 12399: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 12412: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 12543: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 12948: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 12949: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 12994: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 13008: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 13605: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 13689: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 13780: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 13796: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 13825: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 13841: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 13905: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 13936: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 13952: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 13968: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 6368: Function pointer *(ops->alloc) with type void *(*)(struct device *, size_t , dma_addr_t *, gfp_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6409: Function pointer *(ops->free) with type void (*)(struct device *, size_t , void *, dma_addr_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 6137-6138: Function pointer *(ops->map_page) with type dma_addr_t (*)(struct device *, struct page *, unsigned long, size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6282: Function pointer *(ops->mapping_error) with type int (*)(struct device *, dma_addr_t ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6216: Function pointer *(ops->sync_single_for_cpu) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6256: Function pointer *(ops->sync_single_for_device) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6176: Function pointer *(ops->unmap_page) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7234: Function pointer *(dev->ops->read32) with type u32 (*)(struct ssb_device *, u16 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7245: Function pointer *(dev->ops->write32) with type void (*)(struct ssb_device *, u16 , u32 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function external_allocated_data to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_switch_to_interrupt_context to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_switch_to_process_context to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 13544: Ignoring call via function pointer ldv_timer_instance_callback_3_2::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 13544: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function eth_validate_addr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ethtool_op_get_link to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 12445: Ignoring call via function pointer ldv_interrupt_instance_thread_0_3::arg0 for which no suitable target was found in line: (*arg0)(arg1, arg2); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 12445: Ignoring function call through function pointer *arg0: (*arg0)(arg1, arg2); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 13196: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___3 = ldv_xmalloc(6UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 12778: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___0 = ldv_xmalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function memcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netdev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strlcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 10843: Return type of function __builtin_unreachable is void, but result is used as type int: __builtin_unreachable(); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function __builtin_unreachable to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 10261: Return type of function __builtin_unreachable is void, but result is used as type int: __builtin_unreachable(); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function ssb_pcihost_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ssb_bus_powerup to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function unregister_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __ssb_driver_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            2166627 (20% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  1824744 (84%)
  Because of loop head:            336665 (16%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         5218 (0%)
  Times precision was empty:       931817 (43%)
  Times precision was {false}:     7605 (0%)
  Times result was cached:         1194966 (55%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      32239 (1%)
  Times result was 'false':        246520 (11%)
Number of strengthen sat checks:   0
Number of coverage checks:         3608748
  BDD entailment checks:           2990386
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       48
Number of predicates discovered:          31
Number of abstraction locations:          96
Max number of predicates per location:    30
Avg number of predicates per location:    11
Total predicates per abstraction:         14138450
Max number of predicates per abstraction: 30
Avg number of predicates per abstraction: 354.85
Number of irrelevant predicates:          6825474 (48%)
Number of preds handled by boolean abs:   359815 (3%)
  Total number of models for allsat:      165730
  Max number of models for allsat:        54
  Avg number of models for allsat:        5.14

Time for post operator:                 49.493s
  Time for path formula creation:       44.970s
Time for strengthen operator:            8.199s
Time for prec operator:                548.703s
  Time for abstraction:                526.512s (Max:     0.846s, Count: 2166627)
    Boolean abstraction:                63.766s
    Solving time:                       39.932s (Max:     0.017s)
    Model enumeration time:             15.289s
    Time for BDD construction:           5.386s (Max:     0.034s)
Time for merge operator:                 1.910s
Time for coverage check:                 3.085s
  Time for BDD entailment checks:        2.491s
Total time for SMT solver (w/o itp):    55.221s

Number of path formula cache hits:   12609719 (97%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    15.529s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               211570
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                      118675 (count: 4204783, min: 0, max: 1279, avg: 0.03)
Time for BDD node cleanup:                             0.510s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                 12.655s
  Time for transition matches:                         6.532s
  Time for transition assertions:                      0.008s
  Time for transition actions:                         0.016s
Automaton transfers with branching:                0
Automaton transfer successors:                     10894438 (count: 10894438, min: 1, max: 1, avg: 1.00) [1 x 10894438]

CPA algorithm statistics
------------------------
Number of iterations:            8169509
Max size of waitlist:            828
Average size of waitlist:        347
Number of computed successors:   9282069
Max successors for one state:    2
Number of times merged:          309181
Number of times stopped:         599012
Number of times breaked:         990

Total time for CPA algorithm:       847.041s (Max:     3.785s)
  Time for choose from waitlist:      3.473s
  Time for precision adjustment:    603.926s
  Time for transfer relation:       173.243s
  Time for merge operator:            9.260s
  Time for stop operator:            23.315s
  Time for adding to reached set:    13.438s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   990
Avg. length of target path (in blocks):               55748 (count: 990, min: 13, max: 88, avg: 56.31)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  28.889s
  Counterexample analysis:                            13.458s (Max:     0.044s, Calls: 990)
    Refinement sat check:                              7.928s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.037s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.308s
  Precision update:                                    0.670s
  ARG update:                                         13.982s

Length of refined path (in blocks):                   45715 (count: 990, min: 9, max: 77, avg: 46.18)
Number of affected states:                            24421 (count: 990, min: 4, max: 74, avg: 24.67)
Length (states) of path with itp 'true':              20304 (count: 990, min: 0, max: 54, avg: 20.51)
Length (states) of path with itp non-trivial itp:     24421 (count: 990, min: 4, max: 74, avg: 24.67)
Length (states) of path with itp 'false':               877 (count: 990, min: 0, max: 1, avg: 0.89)
Different non-trivial interpolants along paths:         137 (count: 990, min: 0, max: 1, avg: 0.14)
Equal non-trivial interpolants along paths:           23294 (count: 990, min: 3, max: 72, avg: 23.53)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                990
Number of successful refinements:     990
Number of failed refinements:         0
Max. size of reached set before ref.: 31181
Max. size of reached set after ref.:  16816
Avg. size of reached set before ref.: 15771.47
Avg. size of reached set after ref.:  7266.38

Total time for CEGAR algorithm:     891.927s
Time for refinements:                40.027s
Average time for refinement:          0.040s
Max time for refinement:              0.817s

Code Coverage
-----------------------------
  Function coverage:      0.235
  Visited lines:          1858
  Total lines:            5040
  Line coverage:          0.369
  Visited conditions:     208
  Total conditions:       1080
  Condition coverage:     0.193

CPAchecker general statistics
-----------------------------
Number of program locations:     7271
Number of CFA edges:             8363
Number of relevant variables:    1071
Number of functions:             408
Number of loops:                 25
Size of reached set:             16499
  Number of reached locations:   818 (11%)
    Avg states per location:     20
    Max states per location:     248 (at node N5385)
  Number of reached functions:   96 (24%)
  Number of partitions:          16386
    Avg size of partitions:      1
    Max size of partitions:      25 (with key [N4066 (before line 12324), Function main called from node N4055, stack depth 1 [38fb50f8], stack [main]])
  Number of target states:       0
  Size of final wait list        492

Time for analysis setup:          8.289s
  Time for loading CPAs:          1.145s
  Time for loading parser:        0.791s
  Time for CFA construction:      6.184s
    Time for parsing file(s):     1.337s
    Time for AST to CFA:          2.239s
    Time for CFA sanity check:    0.654s
    Time for post-processing:     1.755s
      Time for var class.:        0.733s
Time for Analysis:              891.927s
CPU time for analysis:          891.800s
Total time for CPAchecker:      900.222s
Total CPU time for CPAchecker:  900.070s
Time for statistics:              0.368s

Time for Garbage Collector:      53.803s (in 1981 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                460MB (   438 MiB) max;    275MB (   262 MiB) avg;    467MB (   445 MiB) peak
Used non-heap memory:             41MB (    39 MiB) max;     40MB (    38 MiB) avg;     41MB (    39 MiB) peak
Allocated heap memory:           469MB (   447 MiB) max;    403MB (   385 MiB) avg
Allocated non-heap memory:        43MB (    41 MiB) max;     42MB (    40 MiB) avg
Total process virtual memory:   8761MB (  8355 MiB) max;   8403MB (  8014 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
