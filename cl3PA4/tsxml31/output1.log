scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-challenges/linux-3.14__complex_emg__linux-kernel-locking-spinlock__drivers-net-ethernet-broadcom-b44_true-unreach-call.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_gwhjg1n4/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 5776: Dead code detected: return (1); (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

line 11670: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 11690: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 11693: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 11695: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 11810: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 12399: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 12412: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 12543: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 12948: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 12949: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 12994: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 13008: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 13605: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 13689: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 13780: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 13796: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 13825: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 13841: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 13905: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 13936: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 13952: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 13968: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 6368: Function pointer *(ops->alloc) with type void *(*)(struct device *, size_t , dma_addr_t *, gfp_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6409: Function pointer *(ops->free) with type void (*)(struct device *, size_t , void *, dma_addr_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 6137-6138: Function pointer *(ops->map_page) with type dma_addr_t (*)(struct device *, struct page *, unsigned long, size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6282: Function pointer *(ops->mapping_error) with type int (*)(struct device *, dma_addr_t ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6216: Function pointer *(ops->sync_single_for_cpu) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6256: Function pointer *(ops->sync_single_for_device) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6176: Function pointer *(ops->unmap_page) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7234: Function pointer *(dev->ops->read32) with type u32 (*)(struct ssb_device *, u16 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7245: Function pointer *(dev->ops->write32) with type void (*)(struct ssb_device *, u16 , u32 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function external_allocated_data to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ssb_driver_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ssb_pcihost_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __ssb_driver_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_switch_to_interrupt_context to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strlcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            24431 (30% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  18368 (75%)
  Because of loop head:            2809 (11%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         3254 (13%)
  Times precision was empty:       5347 (22%)
  Times precision was {false}:     231 (1%)
  Times result was cached:         17537 (72%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      1316 (5%)
  Times result was 'false':        3712 (15%)
Number of strengthen sat checks:   0
Number of coverage checks:         3296
  BDD entailment checks:           2706
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       48
Number of predicates discovered:          25
Number of abstraction locations:          67
Max number of predicates per location:    23
Avg number of predicates per location:    13
Total predicates per abstraction:         186467
Max number of predicates per abstraction: 23
Avg number of predicates per abstraction: 120.53
Number of irrelevant predicates:          54594 (29%)
Number of preds handled by boolean abs:   12473 (7%)
  Total number of models for allsat:      1668
  Max number of models for allsat:        8
  Avg number of models for allsat:        1.27

Time for post operator:                  1.614s
  Time for path formula creation:        1.479s
Time for strengthen operator:            0.146s
Time for prec operator:                 13.407s
  Time for abstraction:                 12.883s (Max:     0.020s, Count: 24431)
    Boolean abstraction:                 1.975s
    Solving time:                        1.307s (Max:     0.014s)
    Model enumeration time:              0.170s
    Time for BDD construction:           0.173s (Max:     0.017s)
Time for merge operator:                 0.052s
Time for coverage check:                 0.030s
  Time for BDD entailment checks:        0.028s
Total time for SMT solver (w/o itp):     1.477s

Number of path formula cache hits:   94035 (93%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     1.127s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               4586
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        7651 (count: 19401, min: 0, max: 1030, avg: 0.39)
Time for BDD node cleanup:                             0.014s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.622s
  Time for transition matches:                         0.213s
  Time for transition assertions:                      0.008s
  Time for transition actions:                         0.026s
Automaton transfers with branching:                0
Automaton transfer successors:                        81979 (count: 81979, min: 1, max: 1, avg: 1.00) [1 x 81979]

CPA algorithm statistics
------------------------
Number of iterations:            65920
Max size of waitlist:            94
Average size of waitlist:        20
Number of computed successors:   73881
Max successors for one state:    2
Number of times merged:          295
Number of times stopped:         1711
Number of times breaked:         126

Total time for CPA algorithm:        19.793s (Max:     0.843s)
  Time for choose from waitlist:      0.111s
  Time for precision adjustment:     14.341s
  Time for transfer relation:         4.153s
  Time for merge operator:            0.090s
  Time for stop operator:             0.258s
  Time for adding to reached set:     0.247s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   126
Avg. length of target path (in blocks):                7945 (count: 126, min: 33, max: 98, avg: 63.06)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   2.897s
  Counterexample analysis:                             2.200s (Max:     0.041s, Calls: 126)
    Refinement sat check:                              1.137s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.005s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.107s
  Precision update:                                    0.152s
  ARG update:                                          0.269s

Length of refined path (in blocks):                    5926 (count: 126, min: 9, max: 83, avg: 47.03)
Number of affected states:                             3787 (count: 126, min: 4, max: 82, avg: 30.06)
Length (states) of path with itp 'true':               2013 (count: 126, min: 0, max: 36, avg: 15.98)
Length (states) of path with itp non-trivial itp:      3787 (count: 126, min: 4, max: 82, avg: 30.06)
Length (states) of path with itp 'false':                78 (count: 126, min: 0, max: 1, avg: 0.62)
Different non-trivial interpolants along paths:          51 (count: 126, min: 0, max: 1, avg: 0.40)
Equal non-trivial interpolants along paths:            3610 (count: 126, min: 3, max: 80, avg: 28.65)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                126
Number of successful refinements:     126
Number of failed refinements:         0
Max. size of reached set before ref.: 1749
Max. size of reached set after ref.:  969
Avg. size of reached set before ref.: 775.95
Avg. size of reached set after ref.:  235.06

Total time for CEGAR algorithm:      22.943s
Time for refinements:                 3.122s
Average time for refinement:          0.024s
Max time for refinement:              0.077s

Code Coverage
-----------------------------
  Function coverage:      0.069
  Visited lines:          1232
  Total lines:            5040
  Line coverage:          0.244
  Visited conditions:     26
  Total conditions:       1080
  Condition coverage:     0.024

CPAchecker general statistics
-----------------------------
Number of program locations:     7271
Number of CFA edges:             8363
Number of relevant variables:    1071
Number of functions:             408
Number of loops:                 25
Size of reached set:             307
  Number of reached locations:   172 (2%)
    Avg states per location:     1
    Max states per location:     8 (at node N6572)
  Number of reached functions:   28 (7%)
  Number of partitions:          305
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N4066 (before line 12324), Function main called from node N4055, stack depth 1 [38fb50f8], stack [main]])
  Number of target states:       0
  Size of final wait list        13

Time for analysis setup:          7.339s
  Time for loading CPAs:          1.119s
  Time for loading parser:        0.645s
  Time for CFA construction:      5.427s
    Time for parsing file(s):     1.222s
    Time for AST to CFA:          2.063s
    Time for CFA sanity check:    0.524s
    Time for post-processing:     1.413s
      Time for var class.:        0.680s
Time for Analysis:               22.943s
CPU time for analysis:           22.930s
Total time for CPAchecker:       30.286s
Total CPU time for CPAchecker:   30.260s
Time for statistics:              0.111s

Time for Garbage Collector:       0.594s (in 80 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 73MB (    69 MiB) max;     51MB (    49 MiB) avg;     79MB (    75 MiB) peak
Used non-heap memory:             39MB (    37 MiB) max;     34MB (    32 MiB) avg;     39MB (    37 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        40MB (    39 MiB) max;     36MB (    34 MiB) avg
Total process virtual memory:   8086MB (  7711 MiB) max;   8072MB (  7698 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
