scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-challenges/linux-3.14__complex_emg__linux-kernel-locking-spinlock__drivers-net-ethernet-broadcom-b44_true-unreach-call.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_3l1suz2d/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 5776: Dead code detected: return (1); (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

line 11670: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 11690: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 11693: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 11695: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 11810: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 12399: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 12412: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 12543: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 12948: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 12949: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 12994: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 13008: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 13605: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 13689: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 13780: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 13796: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 13825: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 13841: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 13905: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 13936: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 13952: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 13968: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 6368: Function pointer *(ops->alloc) with type void *(*)(struct device *, size_t , dma_addr_t *, gfp_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6409: Function pointer *(ops->free) with type void (*)(struct device *, size_t , void *, dma_addr_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 6137-6138: Function pointer *(ops->map_page) with type dma_addr_t (*)(struct device *, struct page *, unsigned long, size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6282: Function pointer *(ops->mapping_error) with type int (*)(struct device *, dma_addr_t ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6216: Function pointer *(ops->sync_single_for_cpu) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6256: Function pointer *(ops->sync_single_for_device) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6176: Function pointer *(ops->unmap_page) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7234: Function pointer *(dev->ops->read32) with type u32 (*)(struct ssb_device *, u16 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7245: Function pointer *(dev->ops->write32) with type void (*)(struct ssb_device *, u16 , u32 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function external_allocated_data to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_switch_to_interrupt_context to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_switch_to_process_context to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 13544: Ignoring call via function pointer ldv_timer_instance_callback_3_2::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 13544: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 12445: Ignoring call via function pointer ldv_interrupt_instance_thread_0_3::arg0 for which no suitable target was found in line: (*arg0)(arg1, arg2); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 12445: Ignoring function call through function pointer *arg0: (*arg0)(arg1, arg2); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            23345 (19% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  20049 (86%)
  Because of loop head:            3236 (14%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         60 (0%)
  Times precision was empty:       14450 (62%)
  Times precision was {false}:     343 (1%)
  Times result was cached:         7430 (32%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      1122 (5%)
  Times result was 'false':        605 (3%)
Number of strengthen sat checks:   0
Number of coverage checks:         9208
  BDD entailment checks:           4718
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       48
Number of predicates discovered:          10
Number of abstraction locations:          34
Max number of predicates per location:    8
Avg number of predicates per location:    4
Total predicates per abstraction:         38646
Max number of predicates per abstraction: 8
Avg number of predicates per abstraction: 26.38
Number of irrelevant predicates:          21260 (55%)
Number of preds handled by boolean abs:   3380 (9%)
  Total number of models for allsat:      1409
  Max number of models for allsat:        4
  Avg number of models for allsat:        1.26

Time for post operator:                  3.866s
  Time for path formula creation:        3.683s
Time for strengthen operator:            0.248s
Time for prec operator:                  7.462s
  Time for abstraction:                  6.843s (Max:     0.023s, Count: 23345)
    Boolean abstraction:                 1.587s
    Solving time:                        1.351s (Max:     0.014s)
    Model enumeration time:              0.160s
    Time for BDD construction:           0.135s (Max:     0.010s)
Time for merge operator:                 0.119s
Time for coverage check:                 0.077s
  Time for BDD entailment checks:        0.073s
Total time for SMT solver (w/o itp):     1.511s

Number of path formula cache hits:   111956 (78%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     3.100s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               849
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        2605 (count: 27954, min: 0, max: 200, avg: 0.09)
Time for BDD node cleanup:                             0.028s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.639s
  Time for transition matches:                         0.318s
  Time for transition assertions:                      0.002s
  Time for transition actions:                         0.001s
Automaton transfers with branching:                0
Automaton transfer successors:                       124277 (count: 124277, min: 1, max: 1, avg: 1.00) [1 x 124277]

CPA algorithm statistics
------------------------
Number of iterations:            93664
Max size of waitlist:            363
Average size of waitlist:        129
Number of computed successors:   109062
Max successors for one state:    2
Number of times merged:          2245
Number of times stopped:         3278
Number of times breaked:         60

Total time for CPA algorithm:        19.506s (Max:     1.327s)
  Time for choose from waitlist:      0.242s
  Time for precision adjustment:      9.075s
  Time for transfer relation:         8.136s
  Time for merge operator:            0.277s
  Time for stop operator:             0.404s
  Time for adding to reached set:     0.475s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   60
Avg. length of target path (in blocks):                1879 (count: 60, min: 13, max: 55, avg: 31.32)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   1.597s
  Counterexample analysis:                             0.934s (Max:     0.029s, Calls: 60)
    Refinement sat check:                              0.555s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.002s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.063s
  Precision update:                                    0.051s
  ARG update:                                          0.476s

Length of refined path (in blocks):                    1351 (count: 60, min: 9, max: 55, avg: 22.52)
Number of affected states:                              993 (count: 60, min: 4, max: 54, avg: 16.55)
Length (states) of path with itp 'true':                298 (count: 60, min: 0, max: 31, avg: 4.97)
Length (states) of path with itp non-trivial itp:       993 (count: 60, min: 4, max: 54, avg: 16.55)
Length (states) of path with itp 'false':                55 (count: 60, min: 0, max: 1, avg: 0.92)
Different non-trivial interpolants along paths:           7 (count: 60, min: 0, max: 1, avg: 0.12)
Equal non-trivial interpolants along paths:             926 (count: 60, min: 3, max: 52, avg: 15.43)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                60
Number of successful refinements:     60
Number of failed refinements:         0
Max. size of reached set before ref.: 3456
Max. size of reached set after ref.:  2217
Avg. size of reached set before ref.: 1875.75
Avg. size of reached set after ref.:  148.45

Total time for CEGAR algorithm:      21.362s
Time for refinements:                 1.847s
Average time for refinement:          0.030s
Max time for refinement:              0.067s

Code Coverage
-----------------------------
  Function coverage:      0.130
  Visited lines:          1456
  Total lines:            5040
  Line coverage:          0.289
  Visited conditions:     136
  Total conditions:       1080
  Condition coverage:     0.126

CPAchecker general statistics
-----------------------------
Number of program locations:     7271
Number of CFA edges:             8363
Number of relevant variables:    1071
Number of functions:             408
Number of loops:                 25
Size of reached set:             1541
  Number of reached locations:   445 (6%)
    Avg states per location:     3
    Max states per location:     41 (at node N5385)
  Number of reached functions:   53 (13%)
  Number of partitions:          1529
    Avg size of partitions:      1
    Max size of partitions:      4 (with key [N4066 (before line 12324), Function main called from node N4055, stack depth 1 [38fb50f8], stack [main]])
  Number of target states:       0
  Size of final wait list        171

Time for analysis setup:          8.410s
  Time for loading CPAs:          1.339s
  Time for loading parser:        0.777s
  Time for CFA construction:      6.114s
    Time for parsing file(s):     1.382s
    Time for AST to CFA:          2.267s
    Time for CFA sanity check:    0.657s
    Time for post-processing:     1.596s
      Time for var class.:        0.681s
Time for Analysis:               21.362s
CPU time for analysis:           21.360s
Total time for CPAchecker:       29.784s
Total CPU time for CPAchecker:   29.770s
Time for statistics:              0.149s

Time for Garbage Collector:       0.842s (in 55 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 88MB (    84 MiB) max;     58MB (    56 MiB) avg;     92MB (    88 MiB) peak
Used non-heap memory:             47MB (    45 MiB) max;     39MB (    37 MiB) avg;     47MB (    45 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        49MB (    46 MiB) max;     40MB (    38 MiB) avg
Total process virtual memory:   8088MB (  7714 MiB) max;   8071MB (  7697 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
