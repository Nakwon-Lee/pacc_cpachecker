scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-challenges/linux-3.14__complex_emg__linux-kernel-locking-spinlock__drivers-net-ethernet-broadcom-b44_true-unreach-call.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_2vs9odve/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 5776: Dead code detected: return (1); (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

line 11670: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 11690: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 11693: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 11695: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 11810: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 12399: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 12412: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 12543: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 12948: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 12949: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 12994: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 13008: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 13605: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 13689: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 13780: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 13796: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 13825: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 13841: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 13905: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 13936: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 13952: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 13968: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 6368: Function pointer *(ops->alloc) with type void *(*)(struct device *, size_t , dma_addr_t *, gfp_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6409: Function pointer *(ops->free) with type void (*)(struct device *, size_t , void *, dma_addr_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 6137-6138: Function pointer *(ops->map_page) with type dma_addr_t (*)(struct device *, struct page *, unsigned long, size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6282: Function pointer *(ops->mapping_error) with type int (*)(struct device *, dma_addr_t ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6216: Function pointer *(ops->sync_single_for_cpu) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6256: Function pointer *(ops->sync_single_for_device) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6176: Function pointer *(ops->unmap_page) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7234: Function pointer *(dev->ops->read32) with type u32 (*)(struct ssb_device *, u16 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7245: Function pointer *(dev->ops->write32) with type void (*)(struct ssb_device *, u16 , u32 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function external_allocated_data to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_switch_to_interrupt_context to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_switch_to_process_context to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 13544: Ignoring call via function pointer ldv_timer_instance_callback_3_2::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 13544: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 12445: Ignoring call via function pointer ldv_interrupt_instance_thread_0_3::arg0 for which no suitable target was found in line: (*arg0)(arg1, arg2); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 12445: Ignoring function call through function pointer *arg0: (*arg0)(arg1, arg2); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            30078 (16% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  26092 (87%)
  Because of loop head:            3878 (13%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         108 (0%)
  Times precision was empty:       18649 (62%)
  Times precision was {false}:     582 (2%)
  Times result was cached:         10102 (34%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      745 (2%)
  Times result was 'false':        835 (3%)
Number of strengthen sat checks:   0
Number of coverage checks:         23595
  BDD entailment checks:           8001
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       48
Number of predicates discovered:          17
Number of abstraction locations:          32
Max number of predicates per location:    16
Avg number of predicates per location:    4
Total predicates per abstraction:         48758
Max number of predicates per abstraction: 16
Avg number of predicates per abstraction: 36.74
Number of irrelevant predicates:          36825 (76%)
Number of preds handled by boolean abs:   3394 (7%)
  Total number of models for allsat:      1215
  Max number of models for allsat:        20
  Avg number of models for allsat:        1.63

Time for post operator:                  3.522s
  Time for path formula creation:        3.228s
Time for strengthen operator:            0.304s
Time for prec operator:                  7.190s
  Time for abstraction:                  6.433s (Max:     0.022s, Count: 30078)
    Boolean abstraction:                 1.511s
    Solving time:                        1.442s (Max:     0.014s)
    Model enumeration time:              0.156s
    Time for BDD construction:           0.182s (Max:     0.013s)
Time for merge operator:                 0.155s
Time for coverage check:                 0.090s
  Time for BDD entailment checks:        0.072s
Total time for SMT solver (w/o itp):     1.598s

Number of path formula cache hits:   198923 (90%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     2.618s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               3218
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        3232 (count: 34961, min: 0, max: 463, avg: 0.09)
Time for BDD node cleanup:                             0.037s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.619s
  Time for transition matches:                         0.238s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.001s
Automaton transfers with branching:                0
Automaton transfer successors:                       186871 (count: 186871, min: 1, max: 1, avg: 1.00) [1 x 186871]

CPA algorithm statistics
------------------------
Number of iterations:            143210
Max size of waitlist:            430
Average size of waitlist:        207
Number of computed successors:   166724
Max successors for one state:    2
Number of times merged:          7797
Number of times stopped:         9809
Number of times breaked:         57

Total time for CPA algorithm:        20.733s (Max:     1.307s)
  Time for choose from waitlist:      0.202s
  Time for precision adjustment:      9.059s
  Time for transfer relation:         8.582s
  Time for merge operator:            0.493s
  Time for stop operator:             0.646s
  Time for adding to reached set:     0.536s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   57
Avg. length of target path (in blocks):                1368 (count: 57, min: 13, max: 29, avg: 24.00)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   1.512s
  Counterexample analysis:                             0.799s (Max:     0.023s, Calls: 57)
    Refinement sat check:                              0.509s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.001s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.056s
  Precision update:                                    0.042s
  ARG update:                                          0.554s

Length of refined path (in blocks):                     891 (count: 57, min: 9, max: 25, avg: 15.63)
Number of affected states:                              496 (count: 57, min: 4, max: 23, avg: 8.70)
Length (states) of path with itp 'true':                338 (count: 57, min: 0, max: 15, avg: 5.93)
Length (states) of path with itp non-trivial itp:       496 (count: 57, min: 4, max: 23, avg: 8.70)
Length (states) of path with itp 'false':                53 (count: 57, min: 0, max: 1, avg: 0.93)
Different non-trivial interpolants along paths:           7 (count: 57, min: 0, max: 1, avg: 0.12)
Equal non-trivial interpolants along paths:             432 (count: 57, min: 3, max: 21, avg: 7.58)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                57
Number of successful refinements:     57
Number of failed refinements:         0
Max. size of reached set before ref.: 5575
Max. size of reached set after ref.:  4573
Avg. size of reached set before ref.: 3561.91
Avg. size of reached set after ref.:  886.00

Total time for CEGAR algorithm:      22.620s
Time for refinements:                 1.833s
Average time for refinement:          0.032s
Max time for refinement:              0.085s

Code Coverage
-----------------------------
  Function coverage:      0.147
  Visited lines:          1466
  Total lines:            5040
  Line coverage:          0.291
  Visited conditions:     132
  Total conditions:       1080
  Condition coverage:     0.122

CPAchecker general statistics
-----------------------------
Number of program locations:     7271
Number of CFA edges:             8363
Number of relevant variables:    1071
Number of functions:             408
Number of loops:                 25
Size of reached set:             3553
  Number of reached locations:   446 (6%)
    Avg states per location:     7
    Max states per location:     95 (at node N5384)
  Number of reached functions:   60 (15%)
  Number of partitions:          3533
    Avg size of partitions:      1
    Max size of partitions:      9 (with key [N4066 (before line 12324), Function main called from node N4055, stack depth 1 [608cd501], stack [main]])
  Number of target states:       0
  Size of final wait list        393

Time for analysis setup:          7.602s
  Time for loading CPAs:          1.079s
  Time for loading parser:        0.784s
  Time for CFA construction:      5.600s
    Time for parsing file(s):     1.345s
    Time for AST to CFA:          2.164s
    Time for CFA sanity check:    0.458s
    Time for post-processing:     1.353s
      Time for var class.:        0.626s
Time for Analysis:               22.620s
CPU time for analysis:           22.620s
Total time for CPAchecker:       30.229s
Total CPU time for CPAchecker:   30.200s
Time for statistics:              0.203s

Time for Garbage Collector:       0.813s (in 68 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 79MB (    75 MiB) max;     52MB (    50 MiB) avg;     81MB (    77 MiB) peak
Used non-heap memory:             39MB (    38 MiB) max;     34MB (    33 MiB) avg;     40MB (    38 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        41MB (    39 MiB) max;     36MB (    34 MiB) avg
Total process virtual memory:   8085MB (  7710 MiB) max;   8070MB (  7696 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
