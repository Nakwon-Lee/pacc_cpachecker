scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-challenges/linux-3.14__complex_emg__linux-kernel-locking-spinlock__drivers-net-ethernet-broadcom-b44_true-unreach-call.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_vhg0v_09/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 5776: Dead code detected: return (1); (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

line 11670: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 11690: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 11693: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 11695: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 11810: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 12399: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 12412: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 12543: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 12948: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 12949: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 12994: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 13008: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 13605: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 13689: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 13780: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 13796: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 13825: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 13841: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 13905: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 13936: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 13952: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 13968: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 6368: Function pointer *(ops->alloc) with type void *(*)(struct device *, size_t , dma_addr_t *, gfp_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6409: Function pointer *(ops->free) with type void (*)(struct device *, size_t , void *, dma_addr_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 6137-6138: Function pointer *(ops->map_page) with type dma_addr_t (*)(struct device *, struct page *, unsigned long, size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6282: Function pointer *(ops->mapping_error) with type int (*)(struct device *, dma_addr_t ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6216: Function pointer *(ops->sync_single_for_cpu) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6256: Function pointer *(ops->sync_single_for_device) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6176: Function pointer *(ops->unmap_page) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7234: Function pointer *(dev->ops->read32) with type u32 (*)(struct ssb_device *, u16 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7245: Function pointer *(dev->ops->write32) with type void (*)(struct ssb_device *, u16 , u32 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function external_allocated_data to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_switch_to_interrupt_context to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_switch_to_process_context to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 13544: Ignoring call via function pointer ldv_timer_instance_callback_3_2::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 13544: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 12445: Ignoring call via function pointer ldv_interrupt_instance_thread_0_3::arg0 for which no suitable target was found in line: (*arg0)(arg1, arg2); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 12445: Ignoring function call through function pointer *arg0: (*arg0)(arg1, arg2); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function _raw_spin_lock_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ssb_driver_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ssb_pcihost_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __ssb_driver_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 13196: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___3 = ldv_xmalloc(6UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function unregister_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function phy_stop to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __might_sleep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function msleep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 7245: Ignoring function call through function pointer *(dev->ops->write32): (*(dev->ops->write32))(dev, (int)offset, value); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 7234: Ignoring function call through function pointer *(dev->ops->read32): tmp = (*(dev->ops->read32))(dev, (int)offset); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function netdev_info to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netdev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function net_ratelimit to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ssb_bus_powerup to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ssb_device_is_enabled to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ssb_device_enable to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ssb_pcicore_dev_irqvecs_enable to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netif_carrier_off to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netif_device_detach to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 6166: Return type of function __builtin_unreachable is void, but result is used as type int: __builtin_unreachable(); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function __builtin_unreachable to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 6176: Ignoring function call through function pointer *(ops->unmap_page): (*(ops->unmap_page))(dev, addr, size, dir, attrs); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function debug_dma_unmap_page to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dev_kfree_skb_any to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_set_power_state to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dql_reset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_alloc_flags to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_after_alloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            1130944 (28% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  944438 (84%)
  Because of loop head:            146449 (13%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         40057 (4%)
  Times precision was empty:       159429 (14%)
  Times precision was {false}:     1110 (0%)
  Times result was cached:         944453 (84%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      25952 (2%)
  Times result was 'false':        74164 (7%)
Number of strengthen sat checks:   0
Number of coverage checks:         448487
  BDD entailment checks:           279195
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       48
Number of predicates discovered:          58
Number of abstraction locations:          315
Max number of predicates per location:    32
Avg number of predicates per location:    17
Total predicates per abstraction:         17519567
Max number of predicates per abstraction: 32
Avg number of predicates per abstraction: 647.39
Number of irrelevant predicates:          4952875 (28%)
Number of preds handled by boolean abs:   292463 (2%)
  Total number of models for allsat:      43561
  Max number of models for allsat:        32
  Avg number of models for allsat:        1.68

Time for post operator:                 18.762s
  Time for path formula creation:       16.938s
Time for strengthen operator:            3.460s
Time for prec operator:                681.438s
  Time for abstraction:                670.603s (Max:     0.396s, Count: 1130944)
    Boolean abstraction:                35.602s
    Solving time:                       25.525s (Max:     0.014s)
    Model enumeration time:              3.681s
    Time for BDD construction:           1.441s (Max:     0.013s)
Time for merge operator:                 0.627s
Time for coverage check:                 0.459s
  Time for BDD entailment checks:        0.372s
Total time for SMT solver (w/o itp):    29.206s

Number of path formula cache hits:   4920823 (96%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     7.676s

Total number of created targets for pointer analysis: 1289
   Number of created targets for uf: *unsigned_char is 1263
   Number of created targets for uf: *unsigned_int is 28


Number of BDD nodes:                               36419
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       93225 (count: 624580, min: 0, max: 1590, avg: 0.15)
Time for BDD node cleanup:                             0.148s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  6.866s
  Time for transition matches:                         3.677s
  Time for transition assertions:                      0.008s
  Time for transition actions:                         0.034s
Automaton transfers with branching:                0
Automaton transfer successors:                      4029279 (count: 4029279, min: 1, max: 1, avg: 1.00) [1 x 4029279]

CPA algorithm statistics
------------------------
Number of iterations:            3197909
Max size of waitlist:            45
Average size of waitlist:        18
Number of computed successors:   3502942
Max successors for one state:    2
Number of times merged:          84646
Number of times stopped:         208474
Number of times breaked:         1892

Total time for CPA algorithm:       805.035s (Max:     2.714s)
  Time for choose from waitlist:      1.445s
  Time for precision adjustment:    704.202s
  Time for transfer relation:        76.531s
  Time for merge operator:            2.606s
  Time for stop operator:             5.972s
  Time for adding to reached set:     5.465s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   1892
Avg. length of target path (in blocks):              234122 (count: 1892, min: 13, max: 366, avg: 123.74)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  81.518s
  Counterexample analysis:                            69.917s (Max:     0.244s, Calls: 1892)
    Refinement sat check:                             21.452s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.131s
  Error path post-processing:                          0.000s
  Predicate creation:                                  1.165s
  Precision update:                                    4.039s
  ARG update:                                          4.705s

Length of refined path (in blocks):                  218224 (count: 1892, min: 9, max: 366, avg: 115.34)
Number of affected states:                           151183 (count: 1892, min: 1, max: 365, avg: 79.91)
Length (states) of path with itp 'true':              65149 (count: 1892, min: 0, max: 210, avg: 34.43)
Length (states) of path with itp non-trivial itp:    151183 (count: 1892, min: 1, max: 365, avg: 79.91)
Length (states) of path with itp 'false':              1396 (count: 1892, min: 0, max: 1, avg: 0.74)
Different non-trivial interpolants along paths:         697 (count: 1892, min: 0, max: 6, avg: 0.37)
Equal non-trivial interpolants along paths:          148594 (count: 1892, min: 0, max: 363, avg: 78.54)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                1892
Number of successful refinements:     1892
Number of failed refinements:         0
Max. size of reached set before ref.: 8767
Max. size of reached set after ref.:  4619
Avg. size of reached set before ref.: 2877.31
Avg. size of reached set after ref.:  1176.13

Total time for CEGAR algorithm:     892.626s
Time for refinements:                86.158s
Average time for refinement:          0.045s
Max time for refinement:              0.642s

Code Coverage
-----------------------------
  Function coverage:      0.164
  Visited lines:          1596
  Total lines:            5040
  Line coverage:          0.317
  Visited conditions:     132
  Total conditions:       1080
  Condition coverage:     0.122

CPAchecker general statistics
-----------------------------
Number of program locations:     7271
Number of CFA edges:             8363
Number of relevant variables:    1071
Number of functions:             408
Number of loops:                 25
Size of reached set:             1659
  Number of reached locations:   611 (8%)
    Avg states per location:     2
    Max states per location:     26 (at node N5384)
  Number of reached functions:   67 (16%)
  Number of partitions:          1644
    Avg size of partitions:      1
    Max size of partitions:      3 (with key [N4066 (before line 12324), Function main called from node N4055, stack depth 1 [38fb50f8], stack [main]])
  Number of target states:       0
  Size of final wait list        15

Time for analysis setup:          7.613s
  Time for loading CPAs:          1.050s
  Time for loading parser:        0.655s
  Time for CFA construction:      5.733s
    Time for parsing file(s):     1.264s
    Time for AST to CFA:          2.178s
    Time for CFA sanity check:    0.562s
    Time for post-processing:     1.521s
      Time for var class.:        0.718s
Time for Analysis:              892.626s
CPU time for analysis:          892.510s
Total time for CPAchecker:      900.251s
Total CPU time for CPAchecker:  900.120s
Time for statistics:              0.148s

Time for Garbage Collector:      37.108s (in 4703 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                230MB (   220 MiB) max;    102MB (    97 MiB) avg;    234MB (   223 MiB) peak
Used non-heap memory:             41MB (    39 MiB) max;     40MB (    39 MiB) avg;     42MB (    40 MiB) peak
Allocated heap memory:           237MB (   226 MiB) max;    157MB (   149 MiB) avg
Allocated non-heap memory:        43MB (    41 MiB) max;     43MB (    41 MiB) avg
Total process virtual memory:   8355MB (  7968 MiB) max;   8235MB (  7854 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
