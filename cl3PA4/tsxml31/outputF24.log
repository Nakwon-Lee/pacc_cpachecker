scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-challenges/linux-3.14__complex_emg__linux-kernel-locking-spinlock__drivers-net-ethernet-broadcom-b44_true-unreach-call.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_96oo81n8/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 5776: Dead code detected: return (1); (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

line 11670: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 11690: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 11693: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 11695: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 11810: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 12399: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 12412: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 12543: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 12948: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 12949: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 12994: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 13008: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 13605: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 13689: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 13780: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 13796: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 13825: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 13841: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 13905: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 13936: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 13952: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 13968: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 6368: Function pointer *(ops->alloc) with type void *(*)(struct device *, size_t , dma_addr_t *, gfp_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6409: Function pointer *(ops->free) with type void (*)(struct device *, size_t , void *, dma_addr_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 6137-6138: Function pointer *(ops->map_page) with type dma_addr_t (*)(struct device *, struct page *, unsigned long, size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6282: Function pointer *(ops->mapping_error) with type int (*)(struct device *, dma_addr_t ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6216: Function pointer *(ops->sync_single_for_cpu) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6256: Function pointer *(ops->sync_single_for_device) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6176: Function pointer *(ops->unmap_page) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7234: Function pointer *(dev->ops->read32) with type u32 (*)(struct ssb_device *, u16 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7245: Function pointer *(dev->ops->write32) with type void (*)(struct ssb_device *, u16 , u32 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function external_allocated_data to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_switch_to_interrupt_context to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_switch_to_process_context to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 13544: Ignoring call via function pointer ldv_timer_instance_callback_3_2::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 13544: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 12445: Ignoring call via function pointer ldv_interrupt_instance_thread_0_3::arg0 for which no suitable target was found in line: (*arg0)(arg1, arg2); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 12445: Ignoring function call through function pointer *arg0: (*arg0)(arg1, arg2); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function eth_validate_addr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ethtool_op_get_link to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 12778: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___0 = ldv_xmalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function memcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 13196: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___3 = ldv_xmalloc(6UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function strlcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ssb_pcihost_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __ssb_driver_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ssb_driver_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netdev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 10261: Return type of function __builtin_unreachable is void, but result is used as type int: __builtin_unreachable(); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function __builtin_unreachable to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 10843: Return type of function __builtin_unreachable is void, but result is used as type int: __builtin_unreachable(); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function ssb_bus_powerup to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function unregister_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            1646408 (21% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  1388085 (84%)
  Because of loop head:            237959 (14%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         20364 (1%)
  Times precision was empty:       886710 (54%)
  Times precision was {false}:     13215 (1%)
  Times result was cached:         692492 (42%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      53991 (3%)
  Times result was 'false':        176192 (11%)
Number of strengthen sat checks:   0
Number of coverage checks:         1889512
  BDD entailment checks:           1617474
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       48
Number of predicates discovered:          34
Number of abstraction locations:          105
Max number of predicates per location:    33
Avg number of predicates per location:    14
Total predicates per abstraction:         12198847
Max number of predicates per abstraction: 33
Avg number of predicates per abstraction: 181.51
Number of irrelevant predicates:          4054192 (33%)
Number of preds handled by boolean abs:   821361 (7%)
  Total number of models for allsat:      357929
  Max number of models for allsat:        132
  Avg number of models for allsat:        6.63

Time for post operator:                 41.102s
  Time for path formula creation:       37.722s
Time for strengthen operator:            6.463s
Time for prec operator:                637.174s
  Time for abstraction:                621.211s (Max:     1.404s, Count: 1646408)
    Boolean abstraction:               147.495s
    Solving time:                       85.414s (Max:     0.034s)
    Model enumeration time:             38.379s
    Time for BDD construction:          15.785s (Max:     0.101s)
Time for merge operator:                 1.013s
Time for coverage check:                 2.030s
  Time for BDD entailment checks:        1.735s
Total time for SMT solver (w/o itp):   123.793s

Number of path formula cache hits:   8484070 (93%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    20.144s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               98314
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                      213630 (count: 2966706, min: 0, max: 1525, avg: 0.07)
Time for BDD node cleanup:                             0.440s
Time for BDD garbage collection:                       0.105s (in 2 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                 10.049s
  Time for transition matches:                         4.853s
  Time for transition assertions:                      0.005s
  Time for transition actions:                         0.036s
Automaton transfers with branching:                0
Automaton transfer successors:                      7679323 (count: 7679323, min: 1, max: 1, avg: 1.00) [1 x 7679323]

CPA algorithm statistics
------------------------
Number of iterations:            5524702
Max size of waitlist:            1217
Average size of waitlist:        428
Number of computed successors:   6245278
Max successors for one state:    2
Number of times merged:          136019
Number of times stopped:         316703
Number of times breaked:         550

Total time for CPA algorithm:       863.788s (Max:     9.052s)
  Time for choose from waitlist:      2.435s
  Time for precision adjustment:    679.546s
  Time for transfer relation:       136.982s
  Time for merge operator:            4.681s
  Time for stop operator:            16.064s
  Time for adding to reached set:     9.677s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   550
Avg. length of target path (in blocks):               29686 (count: 550, min: 13, max: 96, avg: 53.97)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  18.735s
  Counterexample analysis:                             8.530s (Max:     0.049s, Calls: 550)
    Refinement sat check:                              4.929s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.036s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.270s
  Precision update:                                    0.472s
  ARG update:                                          9.063s

Length of refined path (in blocks):                   25102 (count: 550, min: 9, max: 95, avg: 45.64)
Number of affected states:                            18035 (count: 550, min: 4, max: 94, avg: 32.79)
Length (states) of path with itp 'true':               6517 (count: 550, min: 0, max: 62, avg: 11.85)
Length (states) of path with itp non-trivial itp:     18035 (count: 550, min: 4, max: 94, avg: 32.79)
Length (states) of path with itp 'false':               370 (count: 550, min: 0, max: 1, avg: 0.67)
Different non-trivial interpolants along paths:         206 (count: 550, min: 0, max: 1, avg: 0.37)
Equal non-trivial interpolants along paths:           17279 (count: 550, min: 3, max: 92, avg: 31.42)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                550
Number of successful refinements:     550
Number of failed refinements:         0
Max. size of reached set before ref.: 38278
Max. size of reached set after ref.:  28105
Avg. size of reached set before ref.: 17150.50
Avg. size of reached set after ref.:  6729.17

Total time for CEGAR algorithm:     892.306s
Time for refinements:                25.846s
Average time for refinement:          0.046s
Max time for refinement:              0.624s

Code Coverage
-----------------------------
  Function coverage:      0.147
  Visited lines:          1605
  Total lines:            5040
  Line coverage:          0.318
  Visited conditions:     150
  Total conditions:       1080
  Condition coverage:     0.139

CPAchecker general statistics
-----------------------------
Number of program locations:     7271
Number of CFA edges:             8363
Number of relevant variables:    1071
Number of functions:             408
Number of loops:                 25
Size of reached set:             20653
  Number of reached locations:   580 (8%)
    Avg states per location:     35
    Max states per location:     302 (at node N5385)
  Number of reached functions:   60 (15%)
  Number of partitions:          20495
    Avg size of partitions:      1
    Max size of partitions:      34 (with key [N4103 (before line 12372), Function main called from node N4055, stack depth 1 [38fb50f8], stack [main]])
  Number of target states:       0
  Size of final wait list        477

Time for analysis setup:          7.948s
  Time for loading CPAs:          1.210s
  Time for loading parser:        0.703s
  Time for CFA construction:      5.887s
    Time for parsing file(s):     1.338s
    Time for AST to CFA:          2.203s
    Time for CFA sanity check:    0.522s
    Time for post-processing:     1.591s
      Time for var class.:        0.770s
Time for Analysis:              892.306s
CPU time for analysis:          892.160s
Total time for CPAchecker:      900.267s
Total CPU time for CPAchecker:  900.100s
Time for statistics:              0.496s

Time for Garbage Collector:      58.170s (in 1926 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                593MB (   565 MiB) max;    261MB (   249 MiB) avg;    639MB (   609 MiB) peak
Used non-heap memory:             41MB (    39 MiB) max;     40MB (    38 MiB) avg;     41MB (    39 MiB) peak
Allocated heap memory:           734MB (   700 MiB) max;    381MB (   363 MiB) avg
Allocated non-heap memory:        43MB (    41 MiB) max;     43MB (    41 MiB) avg
Total process virtual memory:   9573MB (  9129 MiB) max;   8753MB (  8348 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
