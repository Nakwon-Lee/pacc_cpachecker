scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-challenges/linux-3.14__complex_emg__linux-kernel-locking-spinlock__drivers-net-ethernet-nvidia-forcedeth_true-unreach-call.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_gepwbcr5/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 5472: Dead code detected: return (1); (CFACreationUtils.addEdgeToCFA, INFO)

line 5677: Dead code detected: Goto: case_1 (CFACreationUtils.addEdgeToCFA, INFO)

line 5682: Dead code detected: Goto: case_2 (CFACreationUtils.addEdgeToCFA, INFO)

line 5692: Dead code detected: Goto: case_8 (CFACreationUtils.addEdgeToCFA, INFO)

line 5696: Dead code detected: Goto: switch_default (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label case_8 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_default is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_1 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_2 is not reachable. (CFAFunctionBuilder.leave, INFO)

line 7136: Dead code detected: Goto: case_1 (CFACreationUtils.addEdgeToCFA, INFO)

line 7159: Dead code detected: Goto: case_1___0 (CFACreationUtils.addEdgeToCFA, INFO)

line 7164: Dead code detected: Goto: case_2 (CFACreationUtils.addEdgeToCFA, INFO)

line 7174: Dead code detected: Goto: case_8 (CFACreationUtils.addEdgeToCFA, INFO)

line 7178: Dead code detected: Goto: switch_default (CFACreationUtils.addEdgeToCFA, INFO)

line 7141: Dead code detected: Goto: case_2___0 (CFACreationUtils.addEdgeToCFA, INFO)

line 7203: Dead code detected: Goto: case_1___1 (CFACreationUtils.addEdgeToCFA, INFO)

line 7208: Dead code detected: Goto: case_2___1 (CFACreationUtils.addEdgeToCFA, INFO)

line 7218: Dead code detected: Goto: case_8___0 (CFACreationUtils.addEdgeToCFA, INFO)

line 7222: Dead code detected: Goto: switch_default___0 (CFACreationUtils.addEdgeToCFA, INFO)

line 7247: Dead code detected: Goto: case_1___2 (CFACreationUtils.addEdgeToCFA, INFO)

line 7252: Dead code detected: Goto: case_2___2 (CFACreationUtils.addEdgeToCFA, INFO)

line 7262: Dead code detected: Goto: case_8___1 (CFACreationUtils.addEdgeToCFA, INFO)

line 7266: Dead code detected: Goto: switch_default___1 (CFACreationUtils.addEdgeToCFA, INFO)

line 7151: Dead code detected: Goto: case_8___2 (CFACreationUtils.addEdgeToCFA, INFO)

line 7291: Dead code detected: Goto: case_1___3 (CFACreationUtils.addEdgeToCFA, INFO)

line 7296: Dead code detected: Goto: case_2___3 (CFACreationUtils.addEdgeToCFA, INFO)

line 7306: Dead code detected: Goto: case_8___3 (CFACreationUtils.addEdgeToCFA, INFO)

line 7310: Dead code detected: Goto: switch_default___2 (CFACreationUtils.addEdgeToCFA, INFO)

line 7155: Dead code detected: Goto: switch_default___3 (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label case_4___0 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_4___3 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_8___3 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_8___2 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_8___1 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_8 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_8___0 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_4 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_1 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_2 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_default is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_2___2 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_2___3 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_2___0 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_2___1 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_1___1 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_1___2 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_1___3 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_1___0 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

line 17504: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 17524: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 17527: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 17529: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 17627: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 18602: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 18615: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 18937: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 19670: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 20595: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 20596: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 20641: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 21246: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 21487: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 21539: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 21591: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 21643: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 21671: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 21699: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 21763: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 21791: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 21810: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 21829: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 21848: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 21867: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 21886: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 21905: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 21969: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 21985: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 22013: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 22041: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 22081: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 22097: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 22113: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 22129: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 22145: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 22161: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 22178: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 22194: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 22248: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 6419: Function pointer *(ops___0->alloc) with type void *(*)(struct device *, size_t , dma_addr_t *, gfp_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6460: Function pointer *(ops___0->free) with type void (*)(struct device *, size_t , void *, dma_addr_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6271: Function pointer *(ops___0->map_page) with type dma_addr_t (*)(struct device *, struct page *, unsigned long, size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 6191-6192: Function pointer *(ops___0->map_page) with type dma_addr_t (*)(struct device *, struct page *, unsigned long, size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6333: Function pointer *(ops___0->mapping_error) with type int (*)(struct device *, dma_addr_t ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6307: Function pointer *(ops___0->unmap_page) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6231: Function pointer *(ops___0->unmap_page) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 19366: Function pointer *arg0 with type int (*)(struct pci_dev *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 19377: Function pointer *arg0 with type int (*)(struct pci_dev *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 19400: Function pointer *arg0 with type int (*)(struct pci_dev *, struct pm_message ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 19412: Function pointer *arg0 with type int (*)(struct pci_dev *, struct pm_message ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 19679: Function pointer *arg0 with type int (*)(struct platform_device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 19690: Function pointer *arg0 with type int (*)(struct platform_device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 19701: Function pointer *arg0 with type void (*)(struct device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function external_allocated_data to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __pci_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_switch_to_interrupt_context to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_netdev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_switch_to_process_context to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strlcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 19132: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp = ldv_xmalloc(8UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function ethtool_op_get_link to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ethtool_op_get_ts_info to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netdev_warn to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netdev_info to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function eth_validate_addr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netif_carrier_off to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_set_wakeup_enable to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function unregister_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __might_sleep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function msleep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function synchronize_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_disable_msix to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dev_kfree_skb_any to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 6220: Return type of function __builtin_unreachable is void, but result is used as type int: __builtin_unreachable(); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function __builtin_unreachable to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 6231: Ignoring function call through function pointer *(ops___0->unmap_page): (*(ops___0->unmap_page))(dev, addr, size, dir, attrs); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function debug_dma_unmap_page to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 6296: Return type of function __builtin_unreachable is void, but result is used as type int: __builtin_unreachable(); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

line 6307: Ignoring function call through function pointer *(ops___0->unmap_page): (*(ops___0->unmap_page))(dev, addr, size, dir, (struct dma_attrs *)0); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function consume_skb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iounmap to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_release_regions to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_disable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 5530: Return type of function __builtin_unreachable is void, but result is used as type int: __builtin_unreachable(); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function debug_dma_free_coherent to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 6460: Ignoring function call through function pointer *(ops___0->free): (*(ops___0->free))(dev, size, vaddr, bus, attrs); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            804235 (26% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  700921 (87%)
  Because of loop head:            67933 (8%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         35381 (4%)
  Times precision was empty:       91752 (11%)
  Times precision was {false}:     1143 (0%)
  Times result was cached:         683696 (85%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      27644 (3%)
  Times result was 'false':        101006 (13%)
Number of strengthen sat checks:   0
Number of coverage checks:         249265
  BDD entailment checks:           125355
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       77
Number of predicates discovered:          39
Number of abstraction locations:          376
Max number of predicates per location:    32
Avg number of predicates per location:    21
Total predicates per abstraction:         13851327
Max number of predicates per abstraction: 32
Avg number of predicates per abstraction: 481.17
Number of irrelevant predicates:          2167539 (16%)
Number of preds handled by boolean abs:   404894 (3%)
  Total number of models for allsat:      42855
  Max number of models for allsat:        64
  Avg number of models for allsat:        1.55

Time for post operator:                 15.619s
  Time for path formula creation:       14.252s
Time for strengthen operator:            2.776s
Time for prec operator:                503.812s
  Time for abstraction:                494.656s (Max:     0.295s, Count: 804235)
    Boolean abstraction:                36.233s
    Solving time:                       26.247s (Max:     0.036s)
    Model enumeration time:              3.184s
    Time for BDD construction:           1.631s (Max:     0.017s)
Time for merge operator:                 0.461s
Time for coverage check:                 0.249s
  Time for BDD entailment checks:        0.211s
Total time for SMT solver (w/o itp):    29.431s

Number of path formula cache hits:   3797594 (98%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     5.188s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               70473
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       95314 (count: 419128, min: 0, max: 866, avg: 0.23)
Time for BDD node cleanup:                             0.107s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  5.727s
  Time for transition matches:                         2.902s
  Time for transition assertions:                      0.017s
  Time for transition actions:                         0.048s
Automaton transfers with branching:                0
Automaton transfer successors:                      3140955 (count: 3140955, min: 1, max: 1, avg: 1.00) [1 x 3140955]

CPA algorithm statistics
------------------------
Number of iterations:            2469468
Max size of waitlist:            160
Average size of waitlist:        66
Number of computed successors:   2761332
Max successors for one state:    2
Number of times merged:          61955
Number of times stopped:         105844
Number of times breaked:         1662

Total time for CPA algorithm:       614.897s (Max:     1.320s)
  Time for choose from waitlist:      1.362s
  Time for precision adjustment:    522.563s
  Time for transfer relation:        72.092s
  Time for merge operator:            1.988s
  Time for stop operator:             4.402s
  Time for adding to reached set:     5.482s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   1662
Avg. length of target path (in blocks):              581520 (count: 1662, min: 27, max: 583, avg: 349.89)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                 264.219s
  Counterexample analysis:                           249.910s (Max:     0.418s, Calls: 1662)
    Refinement sat check:                             50.574s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.338s
  Error path post-processing:                          0.000s
  Predicate creation:                                  2.291s
  Precision update:                                    4.971s
  ARG update:                                          4.488s

Length of refined path (in blocks):                  541564 (count: 1662, min: 9, max: 581, avg: 325.85)
Number of affected states:                           292262 (count: 1662, min: 1, max: 580, avg: 175.85)
Length (states) of path with itp 'true':             247640 (count: 1662, min: 0, max: 496, avg: 149.00)
Length (states) of path with itp non-trivial itp:    292262 (count: 1662, min: 1, max: 580, avg: 175.85)
Length (states) of path with itp 'false':              1306 (count: 1662, min: 0, max: 1, avg: 0.79)
Different non-trivial interpolants along paths:         360 (count: 1662, min: 0, max: 1, avg: 0.22)
Equal non-trivial interpolants along paths:          290240 (count: 1662, min: 0, max: 578, avg: 174.63)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                1662
Number of successful refinements:     1662
Number of failed refinements:         0
Max. size of reached set before ref.: 4754
Max. size of reached set after ref.:  3272
Avg. size of reached set before ref.: 2718.85
Avg. size of reached set after ref.:  1184.00

Total time for CEGAR algorithm:     889.081s
Time for refinements:               272.816s
Average time for refinement:          0.164s
Max time for refinement:              0.454s

Code Coverage
-----------------------------
  Function coverage:      0.212
  Visited lines:          2264
  Total lines:            9313
  Line coverage:          0.243
  Visited conditions:     322
  Total conditions:       2540
  Condition coverage:     0.127

CPAchecker general statistics
-----------------------------
Number of program locations:     13408
Number of CFA edges:             16163
Number of relevant variables:    2054
Number of functions:             585
Number of loops:                 53
Size of reached set:             3571
  Number of reached locations:   1326 (10%)
    Avg states per location:     2
    Max states per location:     51 (at node N206)
  Number of reached functions:   124 (21%)
  Number of partitions:          3549
    Avg size of partitions:      1
    Max size of partitions:      4 (with key [N9062 (before line 18487), Function main called from node N9046, stack depth 1 [912747d], stack [main]])
  Number of target states:       0
  Size of final wait list        81

Time for analysis setup:         11.135s
  Time for loading CPAs:          1.497s
  Time for loading parser:        0.813s
  Time for CFA construction:      8.670s
    Time for parsing file(s):     1.713s
    Time for AST to CFA:          3.351s
    Time for CFA sanity check:    0.911s
    Time for post-processing:     2.529s
      Time for var class.:        1.100s
Time for Analysis:              889.081s
CPU time for analysis:          888.940s
Total time for CPAchecker:      900.229s
Total CPU time for CPAchecker:  900.060s
Time for statistics:              0.244s

Time for Garbage Collector:      26.375s (in 3675 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                172MB (   164 MiB) max;    104MB (    99 MiB) avg;    179MB (   171 MiB) peak
Used non-heap memory:             47MB (    45 MiB) max;     42MB (    40 MiB) avg;     48MB (    45 MiB) peak
Allocated heap memory:           186MB (   177 MiB) max;    153MB (   146 MiB) avg
Allocated non-heap memory:        50MB (    48 MiB) max;     49MB (    47 MiB) avg
Total process virtual memory:   8359MB (  7972 MiB) max;   8252MB (  7870 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
