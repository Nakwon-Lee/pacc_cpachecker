scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-challenges/linux-3.14__complex_emg__linux-alloc-spinlock__drivers-net-ethernet-atheros-alx-alx_true-unreach-call.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_c1bre6un/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 6170: Dead code detected: return (1); (CFACreationUtils.addEdgeToCFA, INFO)

line 7319: Dead code detected: Goto: case_1 (CFACreationUtils.addEdgeToCFA, INFO)

line 7342: Dead code detected: Goto: case_1___0 (CFACreationUtils.addEdgeToCFA, INFO)

line 7347: Dead code detected: Goto: case_2 (CFACreationUtils.addEdgeToCFA, INFO)

line 7357: Dead code detected: Goto: case_8 (CFACreationUtils.addEdgeToCFA, INFO)

line 7361: Dead code detected: Goto: switch_default (CFACreationUtils.addEdgeToCFA, INFO)

line 7324: Dead code detected: Goto: case_2___0 (CFACreationUtils.addEdgeToCFA, INFO)

line 7386: Dead code detected: Goto: case_1___1 (CFACreationUtils.addEdgeToCFA, INFO)

line 7391: Dead code detected: Goto: case_2___1 (CFACreationUtils.addEdgeToCFA, INFO)

line 7401: Dead code detected: Goto: case_8___0 (CFACreationUtils.addEdgeToCFA, INFO)

line 7405: Dead code detected: Goto: switch_default___0 (CFACreationUtils.addEdgeToCFA, INFO)

line 7430: Dead code detected: Goto: case_1___2 (CFACreationUtils.addEdgeToCFA, INFO)

line 7435: Dead code detected: Goto: case_2___2 (CFACreationUtils.addEdgeToCFA, INFO)

line 7445: Dead code detected: Goto: case_8___1 (CFACreationUtils.addEdgeToCFA, INFO)

line 7449: Dead code detected: Goto: switch_default___1 (CFACreationUtils.addEdgeToCFA, INFO)

line 7334: Dead code detected: Goto: case_8___2 (CFACreationUtils.addEdgeToCFA, INFO)

line 7474: Dead code detected: Goto: case_1___3 (CFACreationUtils.addEdgeToCFA, INFO)

line 7479: Dead code detected: Goto: case_2___3 (CFACreationUtils.addEdgeToCFA, INFO)

line 7489: Dead code detected: Goto: case_8___3 (CFACreationUtils.addEdgeToCFA, INFO)

line 7493: Dead code detected: Goto: switch_default___2 (CFACreationUtils.addEdgeToCFA, INFO)

line 7338: Dead code detected: Goto: switch_default___3 (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label case_4___0 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_4___3 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_8___3 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_8___2 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_8___1 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_8 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_8___0 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_4 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_1 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_2 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_default is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_2___2 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_2___3 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_2___0 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_2___1 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_1___1 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_1___2 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_1___3 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_1___0 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

line 10569: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 10589: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 10592: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 10594: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 11184: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 11197: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 12129: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 13054: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 13055: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 13100: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 13567: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 13730: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 13749: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 13814: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 13830: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 13884: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

line 15251: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 15302: Dead code detected: Goto: case_1 (CFACreationUtils.addEdgeToCFA, INFO)

line 15307: Dead code detected: Goto: case_2 (CFACreationUtils.addEdgeToCFA, INFO)

line 15317: Dead code detected: Goto: case_8 (CFACreationUtils.addEdgeToCFA, INFO)

line 15321: Dead code detected: Goto: switch_default (CFACreationUtils.addEdgeToCFA, INFO)

line 15357: Dead code detected: Goto: case_1___0 (CFACreationUtils.addEdgeToCFA, INFO)

line 15367: Dead code detected: Goto: case_4___0 (CFACreationUtils.addEdgeToCFA, INFO)

line 15372: Dead code detected: Goto: case_8___0 (CFACreationUtils.addEdgeToCFA, INFO)

line 15376: Dead code detected: Goto: switch_default___0 (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label case_4___0 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_default is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_8 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_8___0 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_1 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_2 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_1___0 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 6655: Function pointer *(ops->free) with type void (*)(struct device *, size_t , void *, dma_addr_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6588: Function pointer *(ops->map_page) with type dma_addr_t (*)(struct device *, struct page *, unsigned long, size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 6509-6510: Function pointer *(ops->map_page) with type dma_addr_t (*)(struct device *, struct page *, unsigned long, size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6609: Function pointer *(ops->mapping_error) with type int (*)(struct device *, dma_addr_t ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6548: Function pointer *(ops->unmap_page) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 11830: Function pointer *arg0 with type int (*)(struct pci_dev *, struct pm_message ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 11842: Function pointer *arg0 with type int (*)(struct pci_dev *, struct pm_message ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 12138: Function pointer *arg0 with type int (*)(struct platform_device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 12149: Function pointer *arg0 with type int (*)(struct platform_device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 12160: Function pointer *arg0 with type void (*)(struct device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function external_allocated_data to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 12546: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___2 = ldv_xmalloc(1432UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 12314: Ignoring call via function pointer ldv_pm_ops_instance_runtime_idle_4_27::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 12314: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_assert to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netif_device_detach to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netif_carrier_off to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __local_bh_disable_ip to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __local_bh_enable_ip to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __might_sleep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function msleep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function synchronize_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dev_kfree_skb_any to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 6538: Return type of function __builtin_unreachable is void, but result is used as type int: __builtin_unreachable(); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function __builtin_unreachable to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 6548: Ignoring function call through function pointer *(ops->unmap_page): (*(ops->unmap_page))(dev, addr, size, dir, attrs); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function debug_dma_unmap_page to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dql_reset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function consume_skb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_disable_msi to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netif_napi_del to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 6215: Return type of function __builtin_unreachable is void, but result is used as type int: __builtin_unreachable(); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function debug_dma_free_coherent to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 6655: Ignoring function call through function pointer *(ops->free): (*(ops->free))(dev, size, vaddr, bus, attrs); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function netif_device_attach to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 12336: Ignoring call via function pointer ldv_pm_ops_instance_runtime_suspend_4_25::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 12336: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 12325: Ignoring call via function pointer ldv_pm_ops_instance_runtime_resume_4_24::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 12325: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 12237: Ignoring call via function pointer ldv_pm_ops_instance_prepare_4_22::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 12237: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 12369: Ignoring call via function pointer ldv_pm_ops_instance_suspend_noirq_4_20::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 12369: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 12303: Ignoring call via function pointer ldv_pm_ops_instance_resume_noirq_4_19::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 12303: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 12358: Ignoring call via function pointer ldv_pm_ops_instance_suspend_late_4_18::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 12358: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 12292: Ignoring call via function pointer ldv_pm_ops_instance_resume_early_4_17::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 12292: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 12182: Ignoring call via function pointer ldv_pm_ops_instance_freeze_late_4_14::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 12182: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 12391: Ignoring call via function pointer ldv_pm_ops_instance_thaw_early_4_13::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 12391: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 12193: Ignoring call via function pointer ldv_pm_ops_instance_freeze_noirq_4_12::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 12193: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            21078 (28% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  18991 (90%)
  Because of loop head:            2077 (10%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         10 (0%)
  Times precision was empty:       20909 (99%)
  Times precision was {false}:     58 (0%)
  Times result was cached:         71 (0%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      40 (0%)
  Times result was 'false':        55 (0%)
Number of strengthen sat checks:   0
Number of coverage checks:         4808
  BDD entailment checks:           2166
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       61
Number of predicates discovered:          11
Number of abstraction locations:          14
Max number of predicates per location:    10
Avg number of predicates per location:    3
Total predicates per abstraction:         696
Max number of predicates per abstraction: 10
Avg number of predicates per abstraction: 7.10
Number of irrelevant predicates:          476 (68%)
Number of preds handled by boolean abs:   220 (32%)
  Total number of models for allsat:      40
  Max number of models for allsat:        1
  Avg number of models for allsat:        1.00

Time for post operator:                  7.680s
  Time for path formula creation:        7.551s
Time for strengthen operator:            0.287s
Time for prec operator:                  1.849s
  Time for abstraction:                  1.057s (Max:     0.027s, Count: 21078)
    Boolean abstraction:                 0.113s
    Solving time:                        0.102s (Max:     0.013s)
    Model enumeration time:              0.011s
    Time for BDD construction:           0.008s (Max:     0.002s)
Time for merge operator:                 0.255s
Time for coverage check:                 0.070s
  Time for BDD entailment checks:        0.069s
Total time for SMT solver (w/o itp):     0.113s

Number of path formula cache hits:   24037 (29%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     6.933s

Total number of created targets for pointer analysis: 88
   Number of created targets for uf: *unsigned_short_int is 45


Number of BDD nodes:                               247
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         335 (count: 23772, min: 0, max: 56, avg: 0.01)
Time for BDD node cleanup:                             0.033s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.670s
  Time for transition matches:                         0.301s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.000s
Automaton transfers with branching:                0
Automaton transfer successors:                        74567 (count: 74567, min: 1, max: 1, avg: 1.00) [1 x 74567]

CPA algorithm statistics
------------------------
Number of iterations:            54817
Max size of waitlist:            66
Average size of waitlist:        43
Number of computed successors:   58857
Max successors for one state:    2
Number of times merged:          1321
Number of times stopped:         3487
Number of times breaked:         10

Total time for CPA algorithm:        18.179s (Max:     4.377s)
  Time for choose from waitlist:      0.245s
  Time for precision adjustment:      3.403s
  Time for transfer relation:        12.091s
  Time for merge operator:            0.406s
  Time for stop operator:             0.470s
  Time for adding to reached set:     0.425s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   10
Avg. length of target path (in blocks):                4450 (count: 10, min: 445, max: 445, avg: 445.00)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   3.021s
  Counterexample analysis:                             2.543s (Max:     0.290s, Calls: 10)
    Refinement sat check:                              0.576s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.005s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.014s
  Precision update:                                    0.012s
  ARG update:                                          0.387s

Length of refined path (in blocks):                      90 (count: 10, min: 9, max: 9, avg: 9.00)
Number of affected states:                               40 (count: 10, min: 4, max: 4, avg: 4.00)
Length (states) of path with itp 'true':                 40 (count: 10, min: 4, max: 4, avg: 4.00)
Length (states) of path with itp non-trivial itp:        40 (count: 10, min: 4, max: 4, avg: 4.00)
Length (states) of path with itp 'false':                10 (count: 10, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 10, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:              30 (count: 10, min: 3, max: 3, avg: 3.00)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                10
Number of successful refinements:     10
Number of failed refinements:         0
Max. size of reached set before ref.: 5158
Max. size of reached set after ref.:  12
Avg. size of reached set before ref.: 5143.50
Avg. size of reached set after ref.:  12.00

Total time for CEGAR algorithm:      21.489s
Time for refinements:                 3.310s
Average time for refinement:          0.331s
Max time for refinement:              0.441s

Code Coverage
-----------------------------
  Function coverage:      0.155
  Visited lines:          1877
  Total lines:            6287
  Line coverage:          0.299
  Visited conditions:     222
  Total conditions:       1488
  Condition coverage:     0.149

CPAchecker general statistics
-----------------------------
Number of program locations:     9245
Number of CFA edges:             10632
Number of relevant variables:    1335
Number of functions:             528
Number of loops:                 22
Size of reached set:             4000
  Number of reached locations:   871 (9%)
    Avg states per location:     4
    Max states per location:     103 (at node N119)
  Number of reached functions:   82 (16%)
  Number of partitions:          4000
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0
  Size of final wait list        44

Time for analysis setup:          8.715s
  Time for loading CPAs:          1.364s
  Time for loading parser:        0.766s
  Time for CFA construction:      6.474s
    Time for parsing file(s):     1.381s
    Time for AST to CFA:          2.601s
    Time for CFA sanity check:    0.567s
    Time for post-processing:     1.685s
      Time for var class.:        0.797s
Time for Analysis:               21.489s
CPU time for analysis:           21.490s
Total time for CPAchecker:       30.210s
Total CPU time for CPAchecker:   30.180s
Time for statistics:              0.219s

Time for Garbage Collector:       0.847s (in 39 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 99MB (    94 MiB) max;     61MB (    58 MiB) avg;    103MB (    98 MiB) peak
Used non-heap memory:             40MB (    38 MiB) max;     34MB (    32 MiB) avg;     40MB (    38 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        41MB (    40 MiB) max;     36MB (    34 MiB) avg
Total process virtual memory:   8085MB (  7711 MiB) max;   8069MB (  7695 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
