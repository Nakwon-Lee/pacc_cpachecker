scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-challenges/linux-3.14__complex_emg__linux-alloc-spinlock__drivers-net-ethernet-atheros-alx-alx_true-unreach-call.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_jof_k5sz/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 6170: Dead code detected: return (1); (CFACreationUtils.addEdgeToCFA, INFO)

line 7319: Dead code detected: Goto: case_1 (CFACreationUtils.addEdgeToCFA, INFO)

line 7342: Dead code detected: Goto: case_1___0 (CFACreationUtils.addEdgeToCFA, INFO)

line 7347: Dead code detected: Goto: case_2 (CFACreationUtils.addEdgeToCFA, INFO)

line 7357: Dead code detected: Goto: case_8 (CFACreationUtils.addEdgeToCFA, INFO)

line 7361: Dead code detected: Goto: switch_default (CFACreationUtils.addEdgeToCFA, INFO)

line 7324: Dead code detected: Goto: case_2___0 (CFACreationUtils.addEdgeToCFA, INFO)

line 7386: Dead code detected: Goto: case_1___1 (CFACreationUtils.addEdgeToCFA, INFO)

line 7391: Dead code detected: Goto: case_2___1 (CFACreationUtils.addEdgeToCFA, INFO)

line 7401: Dead code detected: Goto: case_8___0 (CFACreationUtils.addEdgeToCFA, INFO)

line 7405: Dead code detected: Goto: switch_default___0 (CFACreationUtils.addEdgeToCFA, INFO)

line 7430: Dead code detected: Goto: case_1___2 (CFACreationUtils.addEdgeToCFA, INFO)

line 7435: Dead code detected: Goto: case_2___2 (CFACreationUtils.addEdgeToCFA, INFO)

line 7445: Dead code detected: Goto: case_8___1 (CFACreationUtils.addEdgeToCFA, INFO)

line 7449: Dead code detected: Goto: switch_default___1 (CFACreationUtils.addEdgeToCFA, INFO)

line 7334: Dead code detected: Goto: case_8___2 (CFACreationUtils.addEdgeToCFA, INFO)

line 7474: Dead code detected: Goto: case_1___3 (CFACreationUtils.addEdgeToCFA, INFO)

line 7479: Dead code detected: Goto: case_2___3 (CFACreationUtils.addEdgeToCFA, INFO)

line 7489: Dead code detected: Goto: case_8___3 (CFACreationUtils.addEdgeToCFA, INFO)

line 7493: Dead code detected: Goto: switch_default___2 (CFACreationUtils.addEdgeToCFA, INFO)

line 7338: Dead code detected: Goto: switch_default___3 (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label case_4___0 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_4___3 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_8___3 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_8___2 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_8___1 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_8 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_8___0 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_4 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_1 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_2 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_default is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_2___2 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_2___3 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_2___0 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_2___1 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_1___1 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_1___2 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_1___3 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_1___0 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

line 10569: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 10589: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 10592: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 10594: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 11184: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 11197: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 12129: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 13054: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 13055: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 13100: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 13567: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 13730: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 13749: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 13814: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 13830: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 13884: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

line 15251: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 15302: Dead code detected: Goto: case_1 (CFACreationUtils.addEdgeToCFA, INFO)

line 15307: Dead code detected: Goto: case_2 (CFACreationUtils.addEdgeToCFA, INFO)

line 15317: Dead code detected: Goto: case_8 (CFACreationUtils.addEdgeToCFA, INFO)

line 15321: Dead code detected: Goto: switch_default (CFACreationUtils.addEdgeToCFA, INFO)

line 15357: Dead code detected: Goto: case_1___0 (CFACreationUtils.addEdgeToCFA, INFO)

line 15367: Dead code detected: Goto: case_4___0 (CFACreationUtils.addEdgeToCFA, INFO)

line 15372: Dead code detected: Goto: case_8___0 (CFACreationUtils.addEdgeToCFA, INFO)

line 15376: Dead code detected: Goto: switch_default___0 (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label case_4___0 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_default is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_8 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_8___0 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_1 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_2 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_1___0 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 6655: Function pointer *(ops->free) with type void (*)(struct device *, size_t , void *, dma_addr_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6588: Function pointer *(ops->map_page) with type dma_addr_t (*)(struct device *, struct page *, unsigned long, size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 6509-6510: Function pointer *(ops->map_page) with type dma_addr_t (*)(struct device *, struct page *, unsigned long, size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6609: Function pointer *(ops->mapping_error) with type int (*)(struct device *, dma_addr_t ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6548: Function pointer *(ops->unmap_page) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 11830: Function pointer *arg0 with type int (*)(struct pci_dev *, struct pm_message ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 11842: Function pointer *arg0 with type int (*)(struct pci_dev *, struct pm_message ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 12138: Function pointer *arg0 with type int (*)(struct platform_device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 12149: Function pointer *arg0 with type int (*)(struct platform_device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 12160: Function pointer *arg0 with type void (*)(struct device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function external_allocated_data to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_assert to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __pci_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_switch_to_interrupt_context to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 11242: Ignoring call via function pointer ldv_interrupt_instance_thread_0_3::arg0 for which no suitable target was found in line: (*arg0)(arg1, arg2); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 11242: Ignoring function call through function pointer *arg0: (*arg0)(arg1, arg2); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function _raw_spin_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netdev_warn to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __napi_schedule to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_switch_to_process_context to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 11254: Ignoring call via function pointer ldv_interrupt_instance_thread_1_3::arg0 for which no suitable target was found in line: (*arg0)(arg1, arg2); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 11254: Ignoring function call through function pointer *arg0: (*arg0)(arg1, arg2); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function __compiletime_assert_274 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 11569: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___1 = ldv_xmalloc(8UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function ethtool_op_get_link to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __compiletime_assert_119 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __compiletime_assert_120 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __compiletime_assert_121 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __compiletime_assert_122 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __compiletime_assert_123 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 11614: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___2 = ldv_xmalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netdev_update_features to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rtnl_is_locked to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dump_stack to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netif_carrier_off to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function synchronize_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 14749: Return type of function __builtin_bswap32 is void, but result is used as type int: tmp = __builtin_bswap32(val); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function __builtin_bswap32 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Cannot get declaration of function __builtin_bswap32, ignoring calls to it. (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function pcie_get_readrq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pcie_set_readrq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function crc32_le to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function bitrev32 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 6502: Return type of function __builtin_unreachable is void, but result is used as type int: __builtin_unreachable(); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function __builtin_unreachable to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __phys_addr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

lines 6509-6510: Ignoring function call through function pointer *(ops->map_page): addr = (*(ops->map_page))(dev, ((struct page *)0L) + (tmp___2 >> 12), ((unsigned long)ptr) & 4095UL, size, dir, attrs); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function debug_dma_map_page to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function debug_dma_mapping_error to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 6609: Ignoring function call through function pointer *(ops->mapping_error): tmp___0 = (*(ops->mapping_error))(dev, dma_addr); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function consume_skb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function eth_validate_addr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function cancel_work_sync to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function unregister_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_disable_msi to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netif_napi_del to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 6215: Return type of function __builtin_unreachable is void, but result is used as type int: __builtin_unreachable(); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function debug_dma_free_coherent to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 6655: Ignoring function call through function pointer *(ops->free): (*(ops->free))(dev, size, vaddr, bus, attrs); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function iounmap to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_release_selected_regions to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_disable_pcie_error_reporting to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_disable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 6538: Return type of function __builtin_unreachable is void, but result is used as type int: __builtin_unreachable(); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

line 6548: Ignoring function call through function pointer *(ops->unmap_page): (*(ops->unmap_page))(dev, addr, size, dir, attrs); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function debug_dma_unmap_page to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dev_kfree_skb_any to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dql_reset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __local_bh_disable_ip to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __local_bh_enable_ip to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __might_sleep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function msleep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 11818: Ignoring call via function pointer ldv_pci_instance_shutdown_3_3::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 11818: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function _dev_info to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rtnl_lock to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rtnl_unlock to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netif_device_attach to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 11796: Ignoring call via function pointer ldv_pci_instance_resume_3_5::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 11796: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 11807: Ignoring call via function pointer ldv_pci_instance_resume_early_3_6::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 11807: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 11842: Ignoring call via function pointer ldv_pci_instance_suspend_late_3_7::arg0 for which no suitable target was found in line: tmp = (*arg0)(arg1, arg2); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 11842: Ignoring function call through function pointer *arg0: tmp = (*arg0)(arg1, arg2); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 11830: Ignoring call via function pointer ldv_pci_instance_suspend_3_8::arg0 for which no suitable target was found in line: tmp = (*arg0)(arg1, arg2); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 11830: Ignoring function call through function pointer *arg0: tmp = (*arg0)(arg1, arg2); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function netif_device_detach to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_enable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_set_master to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_cleanup_aer_uncorrect_error_status to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 12160: Ignoring call via function pointer ldv_pm_ops_instance_complete_4_3::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 12160: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function ldv_after_alloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netif_napi_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            1676558 (27% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  1557910 (93%)
  Because of loop head:            118214 (7%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         434 (0%)
  Times precision was empty:       216116 (13%)
  Times precision was {false}:     6955 (0%)
  Times result was cached:         1404787 (84%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      48700 (3%)
  Times result was 'false':        72052 (4%)
Number of strengthen sat checks:   0
Number of coverage checks:         652434
  BDD entailment checks:           381892
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       61
Number of predicates discovered:          29
Number of abstraction locations:          624
Max number of predicates per location:    22
Avg number of predicates per location:    4
Total predicates per abstraction:         8016930
Max number of predicates per abstraction: 22
Avg number of predicates per abstraction: 144.05
Number of irrelevant predicates:          4342109 (54%)
Number of preds handled by boolean abs:   235510 (3%)
  Total number of models for allsat:      88244
  Max number of models for allsat:        32
  Avg number of models for allsat:        1.81

Time for post operator:                134.135s
  Time for path formula creation:      130.488s
Time for strengthen operator:            6.622s
Time for prec operator:                397.181s
  Time for abstraction:                375.493s (Max:     3.946s, Count: 1676558)
    Boolean abstraction:                46.464s
    Solving time:                       36.342s (Max:     0.013s)
    Model enumeration time:              5.737s
    Time for BDD construction:           1.696s (Max:     0.012s)
Time for merge operator:                 4.958s
Time for coverage check:                 0.571s
  Time for BDD entailment checks:        0.480s
Total time for SMT solver (w/o itp):    42.079s

Number of path formula cache hits:   3778554 (52%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:   108.308s

Total number of created targets for pointer analysis: 2832
   Number of created targets for uf: *unsigned_short_int is 5
   Number of created targets for uf: *unsigned_int is 43


Number of BDD nodes:                               18340
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                      105272 (count: 942380, min: 0, max: 2633, avg: 0.11)
Time for BDD node cleanup:                             0.217s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                 10.449s
  Time for transition matches:                         6.312s
  Time for transition assertions:                      0.003s
  Time for transition actions:                         0.006s
Automaton transfers with branching:                0
Automaton transfer successors:                      6243213 (count: 6243213, min: 1, max: 1, avg: 1.00) [1 x 6243213]

CPA algorithm statistics
------------------------
Number of iterations:            4741701
Max size of waitlist:            571
Average size of waitlist:        146
Number of computed successors:   5148051
Max successors for one state:    2
Number of times merged:          135271
Number of times stopped:         290661
Number of times breaked:         434

Total time for CPA algorithm:       735.166s (Max:    14.193s)
  Time for choose from waitlist:      2.706s
  Time for precision adjustment:    440.261s
  Time for transfer relation:       244.923s
  Time for merge operator:            8.632s
  Time for stop operator:            10.093s
  Time for adding to reached set:    11.587s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   434
Avg. length of target path (in blocks):              239171 (count: 434, min: 160, max: 1974, avg: 551.09)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                 149.908s
  Counterexample analysis:                           138.705s (Max:     2.394s, Calls: 434)
    Refinement sat check:                             23.493s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.129s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.446s
  Precision update:                                    0.700s
  ARG update:                                          8.944s

Length of refined path (in blocks):                  117940 (count: 434, min: 9, max: 1693, avg: 271.75)
Number of affected states:                            49062 (count: 434, min: 1, max: 1611, avg: 113.05)
Length (states) of path with itp 'true':              68444 (count: 434, min: 0, max: 1236, avg: 157.71)
Length (states) of path with itp non-trivial itp:     49062 (count: 434, min: 1, max: 1611, avg: 113.05)
Length (states) of path with itp 'false':               434 (count: 434, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:          70 (count: 434, min: 0, max: 5, avg: 0.16)
Equal non-trivial interpolants along paths:           48558 (count: 434, min: 0, max: 1610, avg: 111.88)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                434
Number of successful refinements:     434
Number of failed refinements:         0
Max. size of reached set before ref.: 45209
Max. size of reached set after ref.:  27615
Avg. size of reached set before ref.: 13033.87
Avg. size of reached set after ref.:  2056.45

Total time for CEGAR algorithm:     891.684s
Time for refinements:               155.863s
Average time for refinement:          0.359s
Max time for refinement:              2.549s

Code Coverage
-----------------------------
  Function coverage:      0.277
  Visited lines:          2255
  Total lines:            6287
  Line coverage:          0.359
  Visited conditions:     358
  Total conditions:       1488
  Condition coverage:     0.241

CPAchecker general statistics
-----------------------------
Number of program locations:     9245
Number of CFA edges:             10632
Number of relevant variables:    1335
Number of functions:             528
Number of loops:                 22
Size of reached set:             21141
  Number of reached locations:   1368 (15%)
    Avg states per location:     15
    Max states per location:     235 (at node N7243)
  Number of reached functions:   146 (28%)
  Number of partitions:          20918
    Avg size of partitions:      1
    Max size of partitions:      28 (with key [N3175 (before line 11089), Function main called from node N3161, stack depth 1 [5f409872], stack [main]])
  Number of target states:       0
  Size of final wait list        363

Time for analysis setup:          8.525s
  Time for loading CPAs:          1.338s
  Time for loading parser:        0.750s
  Time for CFA construction:      6.269s
    Time for parsing file(s):     1.373s
    Time for AST to CFA:          2.364s
    Time for CFA sanity check:    0.578s
    Time for post-processing:     1.709s
      Time for var class.:        0.745s
Time for Analysis:              891.684s
CPU time for analysis:          891.550s
Total time for CPAchecker:      900.218s
Total CPU time for CPAchecker:  900.070s
Time for statistics:              0.551s

Time for Garbage Collector:      53.699s (in 652 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:               1484MB (  1415 MiB) max;    704MB (   671 MiB) avg;   1530MB (  1460 MiB) peak
Used non-heap memory:             42MB (    40 MiB) max;     41MB (    39 MiB) avg;     43MB (    41 MiB) peak
Allocated heap memory:          1674MB (  1597 MiB) max;   1045MB (   997 MiB) avg
Allocated non-heap memory:        44MB (    42 MiB) max;     44MB (    42 MiB) avg
Total process virtual memory:   9161MB (  8736 MiB) max;   8387MB (  7999 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
