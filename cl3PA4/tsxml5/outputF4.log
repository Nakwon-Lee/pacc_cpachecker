scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-challenges/linux-3.14__complex_emg__linux-alloc-spinlock__drivers-media-usb-tm6000-tm6000_true-unreach-call.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_yx2_7wy3/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

line 9935: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 10064: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 10288: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

line 12265: Dead code detected: Goto: case_1 (CFACreationUtils.addEdgeToCFA, INFO)

line 12270: Dead code detected: Goto: case_2 (CFACreationUtils.addEdgeToCFA, INFO)

line 12280: Dead code detected: Goto: case_8 (CFACreationUtils.addEdgeToCFA, INFO)

line 12284: Dead code detected: Goto: switch_default (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label case_8 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_default is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_1 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_2 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 14890: Function pointer *(__sd->ops->tuner->s_radio) with type int (*)(struct v4l2_subdev *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9877: Function pointer *arg0 with type void (*)(unsigned long) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9989: Function pointer *arg0 with type int (*)(struct usb_interface *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 10000: Function pointer *arg0 with type int (*)(struct usb_interface *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 10034: Function pointer *arg0 with type int (*)(struct usb_interface *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 12490: Function pointer *(p->_qproc) with type void (*)(struct file *, wait_queue_head_t *, struct poll_table_struct *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 14674: Function pointer *(__sd->ops->tuner->g_tuner) with type int (*)(struct v4l2_subdev *, struct v4l2_tuner *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 14714: Function pointer *(__sd->ops->tuner->s_tuner) with type int (*)(struct v4l2_subdev *, const struct v4l2_tuner *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 11541: Function pointer *(ops->fillbuf) with type int (*)(struct tm6000_core *, char *, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7352: Function pointer *(__sd___1->ops->tuner->s_config) with type int (*)(struct v4l2_subdev *, const struct v4l2_priv_tun_config *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7322: Function pointer *(__sd___0->ops->tuner->s_config) with type int (*)(struct v4l2_subdev *, const struct v4l2_priv_tun_config *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7246: Function pointer *(__sd->ops->tuner->s_type_addr) with type int (*)(struct v4l2_subdev *, struct tuner_setup *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 10789: Function pointer *(__sd->ops->tuner->s_frequency) with type int (*)(struct v4l2_subdev *, const struct v4l2_frequency *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7633: Function pointer *(__sd___0->ops->tuner->s_frequency) with type int (*)(struct v4l2_subdev *, const struct v4l2_frequency *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7609: Function pointer *(__sd->ops->core->s_std) with type int (*)(struct v4l2_subdev *, v4l2_std_id ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 14580: Function pointer *(__sd->ops->tuner->g_frequency) with type int (*)(struct v4l2_subdev *, struct v4l2_frequency *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 14476: Function pointer *(__sd->ops->tuner->g_tuner) with type int (*)(struct v4l2_subdev *, struct v4l2_tuner *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 14626: Function pointer *(__sd->ops->tuner->s_frequency) with type int (*)(struct v4l2_subdev *, const struct v4l2_frequency *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 14240: Function pointer *(__sd->ops->core->s_std) with type int (*)(struct v4l2_subdev *, v4l2_std_id ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 14534: Function pointer *(__sd->ops->tuner->s_tuner) with type int (*)(struct v4l2_subdev *, const struct v4l2_tuner *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function external_allocated_data to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_switch_to_interrupt_context to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_switch_to_process_context to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function v4l2_event_unsubscribe to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function v4l2_ctrl_subscribe_event to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function video_ioctl2 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function video_device_release to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function v4l2_ctrl_poll to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 8991: Ignoring call via function pointer ldv_io_instance_callback_8_17::arg0 for which no suitable target was found in line: (*arg0)(arg1, arg2); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 8991: Ignoring function call through function pointer *arg0: (*arg0)(arg1, arg2); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 10000: Ignoring call via function pointer ldv_usb_instance_pre_6_10::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 10000: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 9989: Ignoring call via function pointer ldv_usb_instance_post_6_9::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 9989: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 10034: Ignoring call via function pointer ldv_usb_instance_resume_6_7::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 10034: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 9877: Ignoring call via function pointer ldv_timer_instance_callback_4_2::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 9877: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function ldv_assert to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function videobuf_streamoff to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function video_devdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strlcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock_nested to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock_interruptible_nested to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 14534: Ignoring function call through function pointer *(__sd->ops->tuner->s_tuner): (*(__sd->ops->tuner->s_tuner))(__sd, t); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 14626: Ignoring function call through function pointer *(__sd->ops->tuner->s_frequency): (*(__sd->ops->tuner->s_frequency))(__sd, f); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 14476: Ignoring function call through function pointer *(__sd->ops->tuner->g_tuner): (*(__sd->ops->tuner->g_tuner))(__sd, t); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 14580: Ignoring function call through function pointer *(__sd->ops->tuner->g_frequency): (*(__sd->ops->tuner->g_frequency))(__sd, f); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 17600: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___17 = ldv_xmalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 17047: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___17 = ldv_xmalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 17602: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___18 = ldv_xmalloc(8UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 17049: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___18 = ldv_xmalloc(8UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 9004: Ignoring call via function pointer ldv_io_instance_callback_8_19::arg0 for which no suitable target was found in line: (*arg0)(arg1, arg2, arg3, arg4); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 9004: Ignoring function call through function pointer *arg0: (*arg0)(arg1, arg2, arg3, arg4); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 17552: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___4 = ldv_xmalloc(88UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 16994: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___4 = ldv_xmalloc(88UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function ldv_pre_probe to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 17556: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___6 = ldv_xmalloc(32UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 16998: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___6 = ldv_xmalloc(32UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 17558: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___7 = ldv_xmalloc(176UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 17000: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___7 = ldv_xmalloc(176UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 17568: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___12 = ldv_xmalloc(20UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 17010: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___12 = ldv_xmalloc(20UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 17572: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___14 = ldv_xmalloc(1808UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 17014: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___14 = ldv_xmalloc(1808UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 17574: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___15 = ldv_xmalloc(184UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 17016: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___15 = ldv_xmalloc(184UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function snprintf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function v4l2_fh_del to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function v4l2_fh_exit to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __list_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 13763: Return type of function __builtin_unreachable is void, but result is used as type int: __builtin_unreachable(); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function __builtin_unreachable to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function videobuf_iolock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_deregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_get_dev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_set_interface to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function find_first_zero_bit to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_put_dev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_kill_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_unlink_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_free_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_reset_configuration to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function videobuf_mmap_free to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function v4l2_event_pending to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 13718: Return type of function __builtin_unreachable is void, but result is used as type int: __builtin_unreachable(); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function ldv_pre_usb_register_driver to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 12490: Ignoring function call through function pointer *(p->_qproc): (*(p->_qproc))(filp, wait_address, p); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function usb_free_coherent to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_control_msg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usleep_range to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __ldv_spin_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_after_alloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __init_waitqueue_head to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            1939227 (13% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  1496177 (77%)
  Because of loop head:            442943 (23%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         107 (0%)
  Times precision was empty:       1776188 (92%)
  Times precision was {false}:     674 (0%)
  Times result was cached:         160716 (8%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      1649 (0%)
  Times result was 'false':        4808 (0%)
Number of strengthen sat checks:   0
Number of coverage checks:         3484223
  BDD entailment checks:           921913
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       120
Number of predicates discovered:          8
Number of abstraction locations:          70
Max number of predicates per location:    7
Avg number of predicates per location:    3
Total predicates per abstraction:         648736
Max number of predicates per abstraction: 7
Avg number of predicates per abstraction: 279.27
Number of irrelevant predicates:          505010 (78%)
Number of preds handled by boolean abs:   4201 (1%)
  Total number of models for allsat:      1949
  Max number of models for allsat:        4
  Avg number of models for allsat:        1.18

Time for post operator:                348.031s
  Time for path formula creation:      340.039s
Time for strengthen operator:           12.480s
Time for prec operator:                 65.636s
  Time for abstraction:                 32.876s (Max:     0.489s, Count: 1939227)
    Boolean abstraction:                 2.031s
    Solving time:                        2.336s (Max:     0.343s)
    Model enumeration time:              0.156s
    Time for BDD construction:           0.079s (Max:     0.006s)
Time for merge operator:                22.880s
Time for coverage check:                 1.029s
  Time for BDD entailment checks:        0.652s
Total time for SMT solver (w/o itp):     2.492s

Number of path formula cache hits:   15607827 (89%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:   255.539s

Total number of created targets for pointer analysis: 2327320
   Number of created targets for uf: *signed_int is 42001
   Number of created targets for uf: *(char)* is 8703
   Number of created targets for uf: *unsigned_char is 688321
   Number of created targets for uf: *(struct_list_head)* is 4
   Number of created targets for uf: *unsigned_long_long_int is 2641
   Number of created targets for uf: *unsigned_int is 14761
   Number of created targets for uf: *(struct_device)* is 481
   Number of created targets for uf: *char is 109201
   Number of created targets for uf: *unsigned_long_int is 2619


Number of BDD nodes:                               513
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        3546 (count: 2712104, min: 0, max: 219, avg: 0.00)
Time for BDD node cleanup:                             0.432s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                 20.673s
  Time for transition matches:                        10.556s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.001s
Automaton transfers with branching:                0
Automaton transfer successors:                     14621952 (count: 14621952, min: 1, max: 1, avg: 1.00) [1 x 14621952]

CPA algorithm statistics
------------------------
Number of iterations:            10513532
Max size of waitlist:            1509
Average size of waitlist:        657
Number of computed successors:   12378816
Max successors for one state:    2
Number of times merged:          1281155
Number of times stopped:         1777933
Number of times breaked:         107

Total time for CPA algorithm:       827.353s (Max:    14.615s)
  Time for choose from waitlist:      5.037s
  Time for precision adjustment:    173.285s
  Time for transfer relation:       522.914s
  Time for merge operator:           46.515s
  Time for stop operator:            30.195s
  Time for adding to reached set:    19.536s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   107
Avg. length of target path (in blocks):                5972 (count: 107, min: 45, max: 64, avg: 55.81)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  57.059s
  Counterexample analysis:                            28.504s (Max:     0.607s, Calls: 107)
    Refinement sat check:                             26.083s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.010s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.051s
  Precision update:                                    0.044s
  ARG update:                                         28.354s

Length of refined path (in blocks):                    1976 (count: 107, min: 9, max: 28, avg: 18.47)
Number of affected states:                             1549 (count: 107, min: 4, max: 27, avg: 14.48)
Length (states) of path with itp 'true':                320 (count: 107, min: 0, max: 4, avg: 2.99)
Length (states) of path with itp non-trivial itp:      1549 (count: 107, min: 4, max: 27, avg: 14.48)
Length (states) of path with itp 'false':               107 (count: 107, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:          25 (count: 107, min: 0, max: 1, avg: 0.23)
Equal non-trivial interpolants along paths:            1417 (count: 107, min: 3, max: 26, avg: 13.24)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                107
Number of successful refinements:     107
Number of failed refinements:         0
Max. size of reached set before ref.: 169300
Max. size of reached set after ref.:  12
Avg. size of reached set before ref.: 97923.99
Avg. size of reached set after ref.:  9.73

Total time for CEGAR algorithm:     890.676s
Time for refinements:                63.308s
Average time for refinement:          0.591s
Max time for refinement:              2.610s

Code Coverage
-----------------------------
  Function coverage:      0.586
  Visited lines:          4100
  Total lines:            7110
  Line coverage:          0.577
  Visited conditions:     818
  Total conditions:       1750
  Condition coverage:     0.467

CPAchecker general statistics
-----------------------------
Number of program locations:     9876
Number of CFA edges:             11305
Number of relevant variables:    1358
Number of functions:             420
Number of loops:                 53
Size of reached set:             119249
  Number of reached locations:   3025 (31%)
    Avg states per location:     39
    Max states per location:     1239 (at node N2713)
  Number of reached functions:   246 (59%)
  Number of partitions:          119173
    Avg size of partitions:      1
    Max size of partitions:      10 (with key [N1574 (before line 8849), Function main called from node N1555, stack depth 1 [669580e2], stack [main]])
  Number of target states:       0
  Size of final wait list        788

Time for analysis setup:          9.597s
  Time for loading CPAs:          1.351s
  Time for loading parser:        0.716s
  Time for CFA construction:      7.350s
    Time for parsing file(s):     1.463s
    Time for AST to CFA:          2.628s
    Time for CFA sanity check:    0.746s
    Time for post-processing:     2.324s
      Time for var class.:        0.966s
Time for Analysis:              890.677s
CPU time for analysis:          890.630s
Total time for CPAchecker:      900.278s
Total CPU time for CPAchecker:  900.200s
Time for statistics:              1.627s

Time for Garbage Collector:     127.471s (in 779 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:               1711MB (  1632 MiB) max;    706MB (   673 MiB) avg;   1794MB (  1711 MiB) peak
Used non-heap memory:             41MB (    39 MiB) max;     40MB (    38 MiB) avg;     42MB (    40 MiB) peak
Allocated heap memory:          1900MB (  1812 MiB) max;   1025MB (   977 MiB) avg
Allocated non-heap memory:        44MB (    42 MiB) max;     44MB (    42 MiB) avg
Total process virtual memory:   8152MB (  7774 MiB) max;   8103MB (  7727 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
