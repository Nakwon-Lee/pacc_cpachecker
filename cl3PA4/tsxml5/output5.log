scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-challenges/linux-3.14__complex_emg__linux-alloc-spinlock__drivers-media-usb-tm6000-tm6000_true-unreach-call.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_k_01jbas/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

line 9935: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 10064: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 10288: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

line 12265: Dead code detected: Goto: case_1 (CFACreationUtils.addEdgeToCFA, INFO)

line 12270: Dead code detected: Goto: case_2 (CFACreationUtils.addEdgeToCFA, INFO)

line 12280: Dead code detected: Goto: case_8 (CFACreationUtils.addEdgeToCFA, INFO)

line 12284: Dead code detected: Goto: switch_default (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label case_8 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_default is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_1 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_2 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 14890: Function pointer *(__sd->ops->tuner->s_radio) with type int (*)(struct v4l2_subdev *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9877: Function pointer *arg0 with type void (*)(unsigned long) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9989: Function pointer *arg0 with type int (*)(struct usb_interface *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 10000: Function pointer *arg0 with type int (*)(struct usb_interface *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 10034: Function pointer *arg0 with type int (*)(struct usb_interface *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 12490: Function pointer *(p->_qproc) with type void (*)(struct file *, wait_queue_head_t *, struct poll_table_struct *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 14674: Function pointer *(__sd->ops->tuner->g_tuner) with type int (*)(struct v4l2_subdev *, struct v4l2_tuner *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 14714: Function pointer *(__sd->ops->tuner->s_tuner) with type int (*)(struct v4l2_subdev *, const struct v4l2_tuner *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 11541: Function pointer *(ops->fillbuf) with type int (*)(struct tm6000_core *, char *, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7352: Function pointer *(__sd___1->ops->tuner->s_config) with type int (*)(struct v4l2_subdev *, const struct v4l2_priv_tun_config *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7322: Function pointer *(__sd___0->ops->tuner->s_config) with type int (*)(struct v4l2_subdev *, const struct v4l2_priv_tun_config *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7246: Function pointer *(__sd->ops->tuner->s_type_addr) with type int (*)(struct v4l2_subdev *, struct tuner_setup *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 10789: Function pointer *(__sd->ops->tuner->s_frequency) with type int (*)(struct v4l2_subdev *, const struct v4l2_frequency *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7633: Function pointer *(__sd___0->ops->tuner->s_frequency) with type int (*)(struct v4l2_subdev *, const struct v4l2_frequency *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7609: Function pointer *(__sd->ops->core->s_std) with type int (*)(struct v4l2_subdev *, v4l2_std_id ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 14580: Function pointer *(__sd->ops->tuner->g_frequency) with type int (*)(struct v4l2_subdev *, struct v4l2_frequency *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 14476: Function pointer *(__sd->ops->tuner->g_tuner) with type int (*)(struct v4l2_subdev *, struct v4l2_tuner *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 14626: Function pointer *(__sd->ops->tuner->s_frequency) with type int (*)(struct v4l2_subdev *, const struct v4l2_frequency *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 14240: Function pointer *(__sd->ops->core->s_std) with type int (*)(struct v4l2_subdev *, v4l2_std_id ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 14534: Function pointer *(__sd->ops->tuner->s_tuner) with type int (*)(struct v4l2_subdev *, const struct v4l2_tuner *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function external_allocated_data to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_deregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_assert to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_pre_usb_register_driver to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock_nested to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_control_msg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usleep_range to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_after_alloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            9288 (22% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  7328 (79%)
  Because of loop head:            1940 (21%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         20 (0%)
  Times precision was empty:       6335 (68%)
  Times precision was {false}:     301 (3%)
  Times result was cached:         2284 (25%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      368 (4%)
  Times result was 'false':        154 (2%)
Number of strengthen sat checks:   0
Number of coverage checks:         6321
  BDD entailment checks:           2693
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       120
Number of predicates discovered:          7
Number of abstraction locations:          64
Max number of predicates per location:    6
Avg number of predicates per location:    1
Total predicates per abstraction:         4774
Max number of predicates per abstraction: 6
Avg number of predicates per abstraction: 7.14
Number of irrelevant predicates:          3336 (70%)
Number of preds handled by boolean abs:   634 (13%)
  Total number of models for allsat:      397
  Max number of models for allsat:        4
  Avg number of models for allsat:        1.08

Time for post operator:                  6.581s
  Time for path formula creation:        6.449s
Time for strengthen operator:            0.095s
Time for prec operator:                  3.389s
  Time for abstraction:                  2.781s (Max:     0.029s, Count: 9288)
    Boolean abstraction:                 0.400s
    Solving time:                        0.465s (Max:     0.013s)
    Model enumeration time:              0.036s
    Time for BDD construction:           0.050s (Max:     0.008s)
Time for merge operator:                 0.304s
Time for coverage check:                 0.056s
  Time for BDD entailment checks:        0.046s
Total time for SMT solver (w/o itp):     0.501s

Number of path formula cache hits:   21705 (46%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     5.783s

Total number of created targets for pointer analysis: 4
   Number of created targets for uf: *(struct_list_head)* is 2


Number of BDD nodes:                               361
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         862 (count: 12830, min: 0, max: 156, avg: 0.07)
Time for BDD node cleanup:                             0.004s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.345s
Automaton transfers with branching:                0
Automaton transfer successors:                        41999 (count: 41999, min: 1, max: 1, avg: 1.00) [1 x 41999]

CPA algorithm statistics
------------------------
Number of iterations:            31700
Max size of waitlist:            123
Average size of waitlist:        60
Number of computed successors:   36067
Max successors for one state:    2
Number of times merged:          1814
Number of times stopped:         3458
Number of times breaked:         20

Total time for CPA algorithm:        14.675s (Max:     3.201s)
  Time for choose from waitlist:      0.115s
  Time for precision adjustment:      4.074s
  Time for transfer relation:         8.692s
  Time for merge operator:            0.561s
  Time for stop operator:             0.407s
  Time for adding to reached set:     0.229s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   20
Avg. length of target path (in blocks):                1362 (count: 20, min: 20, max: 115, avg: 68.10)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   5.936s
  Counterexample analysis:                             5.630s (Max:     0.456s, Calls: 20)
    Refinement sat check:                              5.021s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.009s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.023s
  Precision update:                                    0.024s
  ARG update:                                          0.219s

Length of refined path (in blocks):                    1085 (count: 20, min: 9, max: 104, avg: 54.25)
Number of affected states:                              349 (count: 20, min: 4, max: 50, avg: 17.45)
Length (states) of path with itp 'true':                716 (count: 20, min: 4, max: 91, avg: 35.80)
Length (states) of path with itp non-trivial itp:       349 (count: 20, min: 4, max: 50, avg: 17.45)
Length (states) of path with itp 'false':                20 (count: 20, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 20, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:             329 (count: 20, min: 3, max: 49, avg: 16.45)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                20
Number of successful refinements:     20
Number of failed refinements:         0
Max. size of reached set before ref.: 3274
Max. size of reached set after ref.:  1567
Avg. size of reached set before ref.: 2021.40
Avg. size of reached set after ref.:  519.70

Total time for CEGAR algorithm:      20.799s
Time for refinements:                 6.110s
Average time for refinement:          0.305s
Max time for refinement:              0.477s

Code Coverage
-----------------------------
  Function coverage:      0.140
  Visited lines:          1758
  Total lines:            7110
  Line coverage:          0.247
  Visited conditions:     88
  Total conditions:       1750
  Condition coverage:     0.050

CPAchecker general statistics
-----------------------------
Number of program locations:     9876
Number of CFA edges:             11305
Number of relevant variables:    1358
Number of functions:             420
Number of loops:                 53
Size of reached set:             2421
  Number of reached locations:   439 (4%)
    Avg states per location:     5
    Max states per location:     73 (at node N8667)
  Number of reached functions:   59 (14%)
  Number of partitions:          2402
    Avg size of partitions:      1
    Max size of partitions:      8 (with key [N1574 (before line 8849), Function main called from node N1555, stack depth 1 [669580e2], stack [main]])
  Number of target states:       0
  Size of final wait list        119

Time for analysis setup:          9.408s
  Time for loading CPAs:          1.278s
  Time for loading parser:        0.777s
  Time for CFA construction:      7.174s
    Time for parsing file(s):     1.498s
    Time for AST to CFA:          2.906s
    Time for CFA sanity check:    0.576s
    Time for post-processing:     1.905s
      Time for var class.:        0.940s
Time for Analysis:               20.799s
CPU time for analysis:           20.800s
Total time for CPAchecker:       30.211s
Total CPU time for CPAchecker:   30.190s
Time for statistics:              0.176s

Time for Garbage Collector:       0.662s (in 34 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 88MB (    84 MiB) max;     56MB (    53 MiB) avg;     93MB (    89 MiB) peak
Used non-heap memory:             41MB (    39 MiB) max;     34MB (    32 MiB) avg;     41MB (    39 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        42MB (    40 MiB) max;     36MB (    34 MiB) avg
Total process virtual memory:   8086MB (  7711 MiB) max;   8068MB (  7695 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
