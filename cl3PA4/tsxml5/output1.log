scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-challenges/linux-3.14__complex_emg__linux-alloc-spinlock__drivers-media-usb-tm6000-tm6000_true-unreach-call.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_l3bqdhv8/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

line 9935: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 10064: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 10288: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

line 12265: Dead code detected: Goto: case_1 (CFACreationUtils.addEdgeToCFA, INFO)

line 12270: Dead code detected: Goto: case_2 (CFACreationUtils.addEdgeToCFA, INFO)

line 12280: Dead code detected: Goto: case_8 (CFACreationUtils.addEdgeToCFA, INFO)

line 12284: Dead code detected: Goto: switch_default (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label case_8 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_default is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_1 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_2 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 14890: Function pointer *(__sd->ops->tuner->s_radio) with type int (*)(struct v4l2_subdev *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9877: Function pointer *arg0 with type void (*)(unsigned long) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9989: Function pointer *arg0 with type int (*)(struct usb_interface *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 10000: Function pointer *arg0 with type int (*)(struct usb_interface *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 10034: Function pointer *arg0 with type int (*)(struct usb_interface *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 12490: Function pointer *(p->_qproc) with type void (*)(struct file *, wait_queue_head_t *, struct poll_table_struct *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 14674: Function pointer *(__sd->ops->tuner->g_tuner) with type int (*)(struct v4l2_subdev *, struct v4l2_tuner *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 14714: Function pointer *(__sd->ops->tuner->s_tuner) with type int (*)(struct v4l2_subdev *, const struct v4l2_tuner *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 11541: Function pointer *(ops->fillbuf) with type int (*)(struct tm6000_core *, char *, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7352: Function pointer *(__sd___1->ops->tuner->s_config) with type int (*)(struct v4l2_subdev *, const struct v4l2_priv_tun_config *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7322: Function pointer *(__sd___0->ops->tuner->s_config) with type int (*)(struct v4l2_subdev *, const struct v4l2_priv_tun_config *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7246: Function pointer *(__sd->ops->tuner->s_type_addr) with type int (*)(struct v4l2_subdev *, struct tuner_setup *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 10789: Function pointer *(__sd->ops->tuner->s_frequency) with type int (*)(struct v4l2_subdev *, const struct v4l2_frequency *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7633: Function pointer *(__sd___0->ops->tuner->s_frequency) with type int (*)(struct v4l2_subdev *, const struct v4l2_frequency *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7609: Function pointer *(__sd->ops->core->s_std) with type int (*)(struct v4l2_subdev *, v4l2_std_id ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 14580: Function pointer *(__sd->ops->tuner->g_frequency) with type int (*)(struct v4l2_subdev *, struct v4l2_frequency *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 14476: Function pointer *(__sd->ops->tuner->g_tuner) with type int (*)(struct v4l2_subdev *, struct v4l2_tuner *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 14626: Function pointer *(__sd->ops->tuner->s_frequency) with type int (*)(struct v4l2_subdev *, const struct v4l2_frequency *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 14240: Function pointer *(__sd->ops->core->s_std) with type int (*)(struct v4l2_subdev *, v4l2_std_id ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 14534: Function pointer *(__sd->ops->tuner->s_tuner) with type int (*)(struct v4l2_subdev *, const struct v4l2_tuner *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function external_allocated_data to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_deregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_assert to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_pre_usb_register_driver to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock_nested to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_control_msg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usleep_range to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_after_alloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            9875 (22% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  7788 (79%)
  Because of loop head:            2066 (21%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         21 (0%)
  Times precision was empty:       6716 (68%)
  Times precision was {false}:     321 (3%)
  Times result was cached:         2411 (24%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      427 (4%)
  Times result was 'false':        177 (2%)
Number of strengthen sat checks:   0
Number of coverage checks:         6787
  BDD entailment checks:           2969
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       120
Number of predicates discovered:          8
Number of abstraction locations:          63
Max number of predicates per location:    7
Avg number of predicates per location:    1
Total predicates per abstraction:         5308
Max number of predicates per abstraction: 7
Avg number of predicates per abstraction: 7.10
Number of irrelevant predicates:          3630 (68%)
Number of preds handled by boolean abs:   801 (15%)
  Total number of models for allsat:      458
  Max number of models for allsat:        4
  Avg number of models for allsat:        1.07

Time for post operator:                  6.290s
  Time for path formula creation:        6.174s
Time for strengthen operator:            0.156s
Time for prec operator:                  3.386s
  Time for abstraction:                  2.815s (Max:     0.021s, Count: 9875)
    Boolean abstraction:                 0.490s
    Solving time:                        0.509s (Max:     0.014s)
    Model enumeration time:              0.060s
    Time for BDD construction:           0.074s (Max:     0.009s)
Time for merge operator:                 0.395s
Time for coverage check:                 0.086s
  Time for BDD entailment checks:        0.083s
Total time for SMT solver (w/o itp):     0.569s

Number of path formula cache hits:   22538 (45%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     5.451s

Total number of created targets for pointer analysis: 4
   Number of created targets for uf: *(struct_list_head)* is 2


Number of BDD nodes:                               414
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        1007 (count: 13972, min: 0, max: 161, avg: 0.07)
Time for BDD node cleanup:                             0.008s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.423s
Automaton transfers with branching:                0
Automaton transfer successors:                        44381 (count: 44381, min: 1, max: 1, avg: 1.00) [1 x 44381]

CPA algorithm statistics
------------------------
Number of iterations:            33587
Max size of waitlist:            123
Average size of waitlist:        62
Number of computed successors:   38201
Max successors for one state:    2
Number of times merged:          1909
Number of times stopped:         3652
Number of times breaked:         21

Total time for CPA algorithm:        14.700s (Max:     2.965s)
  Time for choose from waitlist:      0.090s
  Time for precision adjustment:      4.225s
  Time for transfer relation:         8.578s
  Time for merge operator:            0.588s
  Time for stop operator:             0.356s
  Time for adding to reached set:     0.277s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   21
Avg. length of target path (in blocks):                1479 (count: 21, min: 20, max: 117, avg: 70.43)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   6.819s
  Counterexample analysis:                             6.493s (Max:     0.408s, Calls: 21)
    Refinement sat check:                              5.798s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.001s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.046s
  Precision update:                                    0.026s
  ARG update:                                          0.222s

Length of refined path (in blocks):                    1173 (count: 21, min: 9, max: 104, avg: 55.86)
Number of affected states:                              354 (count: 21, min: 4, max: 50, avg: 16.86)
Length (states) of path with itp 'true':                798 (count: 21, min: 4, max: 91, avg: 38.00)
Length (states) of path with itp non-trivial itp:       354 (count: 21, min: 4, max: 50, avg: 16.86)
Length (states) of path with itp 'false':                21 (count: 21, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 21, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:             333 (count: 21, min: 3, max: 49, avg: 15.86)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                21
Number of successful refinements:     21
Number of failed refinements:         0
Max. size of reached set before ref.: 3336
Max. size of reached set after ref.:  1567
Avg. size of reached set before ref.: 2084.00
Avg. size of reached set after ref.:  554.95

Total time for CEGAR algorithm:      21.725s
Time for refinements:                 6.998s
Average time for refinement:          0.333s
Max time for refinement:              0.427s

Code Coverage
-----------------------------
  Function coverage:      0.133
  Visited lines:          1727
  Total lines:            7110
  Line coverage:          0.243
  Visited conditions:     76
  Total conditions:       1750
  Condition coverage:     0.043

CPAchecker general statistics
-----------------------------
Number of program locations:     9876
Number of CFA edges:             11305
Number of relevant variables:    1358
Number of functions:             420
Number of loops:                 53
Size of reached set:             2263
  Number of reached locations:   398 (4%)
    Avg states per location:     5
    Max states per location:     56 (at node N8667)
  Number of reached functions:   56 (13%)
  Number of partitions:          2243
    Avg size of partitions:      1
    Max size of partitions:      8 (with key [N1574 (before line 8849), Function main called from node N1555, stack depth 1 [194e78af], stack [main]])
  Number of target states:       0
  Size of final wait list        104

Time for analysis setup:          8.506s
  Time for loading CPAs:          1.188s
  Time for loading parser:        0.664s
  Time for CFA construction:      6.490s
    Time for parsing file(s):     1.310s
    Time for AST to CFA:          2.511s
    Time for CFA sanity check:    0.631s
    Time for post-processing:     1.842s
      Time for var class.:        0.887s
Time for Analysis:               21.725s
CPU time for analysis:           21.720s
Total time for CPAchecker:       30.235s
Total CPU time for CPAchecker:   30.210s
Time for statistics:              0.159s

Time for Garbage Collector:       0.614s (in 36 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 85MB (    81 MiB) max;     57MB (    54 MiB) avg;     93MB (    89 MiB) peak
Used non-heap memory:             41MB (    39 MiB) max;     35MB (    33 MiB) avg;     41MB (    39 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        43MB (    41 MiB) max;     36MB (    35 MiB) avg
Total process virtual memory:   8083MB (  7709 MiB) max;   8070MB (  7696 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
