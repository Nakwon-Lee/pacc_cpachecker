scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-challenges/linux-3.14__complex_emg__linux-kernel-locking-mutex__drivers-net-ethernet-neterion-s2io_true-unreach-call.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_z_hhexln/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 6720: Dead code detected: return (1); (CFACreationUtils.addEdgeToCFA, INFO)

line 6907: Dead code detected: Goto: case_1 (CFACreationUtils.addEdgeToCFA, INFO)

line 6912: Dead code detected: Goto: case_2 (CFACreationUtils.addEdgeToCFA, INFO)

line 6922: Dead code detected: Goto: case_8 (CFACreationUtils.addEdgeToCFA, INFO)

line 6926: Dead code detected: Goto: switch_default (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label case_8 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_default is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_1 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_2 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

line 14219: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

line 22777: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 22797: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 22800: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 22802: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 22895: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 23881: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 23894: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 24307: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 25103: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 25145: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 25146: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 25191: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 25657: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 25720: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 25772: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 25791: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 25810: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 25829: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 25845: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 25861: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 25878: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 25895: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 25911: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 25977: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 7578: Function pointer *(ops->alloc) with type void *(*)(struct device *, size_t , dma_addr_t *, gfp_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7619: Function pointer *(ops->free) with type void (*)(struct device *, size_t , void *, dma_addr_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7351: Function pointer *(ops->map_page) with type dma_addr_t (*)(struct device *, struct page *, unsigned long, size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 7272-7273: Function pointer *(ops->map_page) with type dma_addr_t (*)(struct device *, struct page *, unsigned long, size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7492: Function pointer *(ops->mapping_error) with type int (*)(struct device *, dma_addr_t ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7426: Function pointer *(ops->sync_single_for_cpu) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7466: Function pointer *(ops->sync_single_for_device) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7386: Function pointer *(ops->unmap_page) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7311: Function pointer *(ops->unmap_page) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 24802: Function pointer *arg0 with type int (*)(struct pci_dev *, struct pm_message ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 24814: Function pointer *arg0 with type int (*)(struct pci_dev *, struct pm_message ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function external_allocated_data to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_EMGentry_exit_s2io_closer_20_2 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_EMGentry_init_s2io_starter_20_7 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_switch_to_interrupt_context to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_switch_to_process_context to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __wake_up to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strlcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 24499: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp = ldv_xmalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function ethtool_op_get_link to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function disable_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dev_kfree_skb_any to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function eth_validate_addr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function cancel_work_sync to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function unregister_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iounmap to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_release_regions to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_disable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 6795: Return type of function __builtin_unreachable is void, but result is used as type int: __builtin_unreachable(); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function __builtin_unreachable to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function debug_dma_free_coherent to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 7619: Ignoring function call through function pointer *(ops->free): (*(ops->free))(dev, size, vaddr, bus, attrs); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function msleep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_disable_msix to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function consume_skb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 7301: Return type of function __builtin_unreachable is void, but result is used as type int: __builtin_unreachable(); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

line 7311: Ignoring function call through function pointer *(ops->unmap_page): (*(ops->unmap_page))(dev, addr, size, dir, attrs); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function debug_dma_unmap_page to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 7376: Return type of function __builtin_unreachable is void, but result is used as type int: __builtin_unreachable(); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

line 7386: Ignoring function call through function pointer *(ops->unmap_page): (*(ops->unmap_page))(dev, addr, size, dir, (struct dma_attrs *)0); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_restore_state to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_save_state to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            1159773 (20% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  917211 (79%)
  Because of loop head:            212156 (18%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         30406 (3%)
  Times precision was empty:       168734 (15%)
  Times precision was {false}:     1352 (0%)
  Times result was cached:         974681 (84%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      15006 (1%)
  Times result was 'false':        109824 (9%)
Number of strengthen sat checks:   0
Number of coverage checks:         845221
  BDD entailment checks:           391761
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       89
Number of predicates discovered:          31
Number of abstraction locations:          328
Max number of predicates per location:    24
Avg number of predicates per location:    9
Total predicates per abstraction:         14611371
Max number of predicates per abstraction: 24
Avg number of predicates per abstraction: 893.22
Number of irrelevant predicates:          2460413 (17%)
Number of preds handled by boolean abs:   130529 (1%)
  Total number of models for allsat:      38207
  Max number of models for allsat:        1280
  Avg number of models for allsat:        2.55

Time for post operator:                 32.586s
  Time for path formula creation:       30.335s
Time for strengthen operator:            4.794s
Time for prec operator:                542.960s
  Time for abstraction:                529.199s (Max:     0.291s, Count: 1159773)
    Boolean abstraction:                31.119s
    Solving time:                       23.386s (Max:     0.070s)
    Model enumeration time:              5.621s
    Time for BDD construction:           1.419s (Max:     0.092s)
Time for merge operator:                 1.850s
Time for coverage check:                 0.572s
  Time for BDD entailment checks:        0.429s
Total time for SMT solver (w/o itp):    29.007s

Number of path formula cache hits:   7047079 (98%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     8.580s

Total number of created targets for pointer analysis: 27352
   Number of created targets for uf: *unsigned_short_int is 9
   Number of created targets for uf: *signed_int is 2661
   Number of created targets for uf: *unsigned_long_long_int is 801
   Number of created targets for uf: *unsigned_int is 25


Number of BDD nodes:                               78098
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       44293 (count: 664183, min: 0, max: 739, avg: 0.07)
Time for BDD node cleanup:                             0.146s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  8.315s
  Time for transition matches:                         4.446s
  Time for transition assertions:                      0.012s
  Time for transition actions:                         0.054s
Automaton transfers with branching:                0
Automaton transfer successors:                      5946410 (count: 5946410, min: 1, max: 1, avg: 1.00) [1 x 5946410]

CPA algorithm statistics
------------------------
Number of iterations:            4357371
Max size of waitlist:            114
Average size of waitlist:        59
Number of computed successors:   5002096
Max successors for one state:    2
Number of times merged:          226730
Number of times stopped:         371827
Number of times breaked:         3627

Total time for CPA algorithm:       702.896s (Max:     1.235s)
  Time for choose from waitlist:      1.938s
  Time for precision adjustment:    572.165s
  Time for transfer relation:        96.200s
  Time for merge operator:            5.855s
  Time for stop operator:             8.306s
  Time for adding to reached set:     7.368s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   3627
Avg. length of target path (in blocks):              374765 (count: 3627, min: 17, max: 247, avg: 103.33)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                 176.357s
  Counterexample analysis:                           161.491s (Max:     0.173s, Calls: 3627)
    Refinement sat check:                            101.280s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.209s
  Error path post-processing:                          0.000s
  Predicate creation:                                  1.044s
  Precision update:                                    4.538s
  ARG update:                                          7.286s

Length of refined path (in blocks):                  307270 (count: 3627, min: 11, max: 247, avg: 84.72)
Number of affected states:                           123750 (count: 3627, min: 0, max: 245, avg: 34.12)
Length (states) of path with itp 'true':             179893 (count: 3627, min: 1, max: 158, avg: 49.60)
Length (states) of path with itp non-trivial itp:    123750 (count: 3627, min: 0, max: 245, avg: 34.12)
Length (states) of path with itp 'false':              3466 (count: 3627, min: 0, max: 1, avg: 0.96)
Different non-trivial interpolants along paths:         164 (count: 3627, min: 0, max: 1, avg: 0.05)
Equal non-trivial interpolants along paths:          119961 (count: 3627, min: 0, max: 243, avg: 33.07)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                3627
Number of successful refinements:     3627
Number of failed refinements:         0
Max. size of reached set before ref.: 4590
Max. size of reached set after ref.:  3374
Avg. size of reached set before ref.: 2393.24
Avg. size of reached set after ref.:  1147.44

Total time for CEGAR algorithm:     889.638s
Time for refinements:               184.153s
Average time for refinement:          0.050s
Max time for refinement:              0.188s

Code Coverage
-----------------------------
  Function coverage:      0.125
  Visited lines:          1917
  Total lines:            10595
  Line coverage:          0.181
  Visited conditions:     276
  Total conditions:       2806
  Condition coverage:     0.098

CPAchecker general statistics
-----------------------------
Number of program locations:     14611
Number of CFA edges:             16989
Number of relevant variables:    2403
Number of functions:             425
Number of loops:                 132
Size of reached set:             1926
  Number of reached locations:   788 (5%)
    Avg states per location:     2
    Max states per location:     27 (at node N13931)
  Number of reached functions:   53 (12%)
  Number of partitions:          1905
    Avg size of partitions:      1
    Max size of partitions:      4 (with key [N12186 (before line 23776), Function main called from node N12172, stack depth 1 [46146832], stack [main]])
  Number of target states:       0
  Size of final wait list        63

Time for analysis setup:         10.627s
  Time for loading CPAs:          1.391s
  Time for loading parser:        0.666s
  Time for CFA construction:      8.395s
    Time for parsing file(s):     1.491s
    Time for AST to CFA:          3.092s
    Time for CFA sanity check:    0.905s
    Time for post-processing:     2.794s
      Time for var class.:        1.177s
Time for Analysis:              889.638s
CPU time for analysis:          889.540s
Total time for CPAchecker:      900.277s
Total CPU time for CPAchecker:  900.150s
Time for statistics:              0.152s

Time for Garbage Collector:      27.636s (in 4518 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                163MB (   156 MiB) max;    104MB (    99 MiB) avg;    172MB (   164 MiB) peak
Used non-heap memory:             41MB (    39 MiB) max;     40MB (    38 MiB) avg;     42MB (    40 MiB) peak
Allocated heap memory:           187MB (   179 MiB) max;    158MB (   150 MiB) avg
Allocated non-heap memory:        43MB (    41 MiB) max;     43MB (    41 MiB) avg
Total process virtual memory:   8288MB (  7904 MiB) max;   8190MB (  7811 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
