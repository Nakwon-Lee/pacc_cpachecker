scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-challenges/linux-3.14__complex_emg__linux-kernel-locking-mutex__drivers-net-ethernet-neterion-s2io_true-unreach-call.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_b3uonnx9/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 6720: Dead code detected: return (1); (CFACreationUtils.addEdgeToCFA, INFO)

line 6907: Dead code detected: Goto: case_1 (CFACreationUtils.addEdgeToCFA, INFO)

line 6912: Dead code detected: Goto: case_2 (CFACreationUtils.addEdgeToCFA, INFO)

line 6922: Dead code detected: Goto: case_8 (CFACreationUtils.addEdgeToCFA, INFO)

line 6926: Dead code detected: Goto: switch_default (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label case_8 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_default is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_1 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_2 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

line 14219: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

line 22777: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 22797: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 22800: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 22802: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 22895: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 23881: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 23894: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 24307: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 25103: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 25145: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 25146: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 25191: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 25657: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 25720: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 25772: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 25791: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 25810: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 25829: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 25845: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 25861: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 25878: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 25895: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 25911: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 25977: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 7578: Function pointer *(ops->alloc) with type void *(*)(struct device *, size_t , dma_addr_t *, gfp_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7619: Function pointer *(ops->free) with type void (*)(struct device *, size_t , void *, dma_addr_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7351: Function pointer *(ops->map_page) with type dma_addr_t (*)(struct device *, struct page *, unsigned long, size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 7272-7273: Function pointer *(ops->map_page) with type dma_addr_t (*)(struct device *, struct page *, unsigned long, size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7492: Function pointer *(ops->mapping_error) with type int (*)(struct device *, dma_addr_t ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7426: Function pointer *(ops->sync_single_for_cpu) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7466: Function pointer *(ops->sync_single_for_device) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7386: Function pointer *(ops->unmap_page) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7311: Function pointer *(ops->unmap_page) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 24802: Function pointer *arg0 with type int (*)(struct pci_dev *, struct pm_message ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 24814: Function pointer *arg0 with type int (*)(struct pci_dev *, struct pm_message ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function external_allocated_data to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_EMGentry_exit_s2io_closer_20_2 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_EMGentry_init_s2io_starter_20_7 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_switch_to_interrupt_context to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_switch_to_process_context to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __wake_up to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strlcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 24499: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp = ldv_xmalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function ethtool_op_get_link to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function disable_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dev_kfree_skb_any to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function eth_validate_addr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function cancel_work_sync to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function unregister_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iounmap to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_release_regions to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_disable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 6795: Return type of function __builtin_unreachable is void, but result is used as type int: __builtin_unreachable(); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function __builtin_unreachable to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function debug_dma_free_coherent to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 7619: Ignoring function call through function pointer *(ops->free): (*(ops->free))(dev, size, vaddr, bus, attrs); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function msleep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_disable_msix to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function consume_skb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 7301: Return type of function __builtin_unreachable is void, but result is used as type int: __builtin_unreachable(); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

line 7311: Ignoring function call through function pointer *(ops->unmap_page): (*(ops->unmap_page))(dev, addr, size, dir, attrs); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function debug_dma_unmap_page to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 7376: Return type of function __builtin_unreachable is void, but result is used as type int: __builtin_unreachable(); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

line 7386: Ignoring function call through function pointer *(ops->unmap_page): (*(ops->unmap_page))(dev, addr, size, dir, (struct dma_attrs *)0); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_restore_state to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_save_state to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            1104379 (20% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  873155 (79%)
  Because of loop head:            202041 (18%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         29183 (3%)
  Times precision was empty:       162133 (15%)
  Times precision was {false}:     1352 (0%)
  Times result was cached:         926246 (84%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      14648 (1%)
  Times result was 'false':        105608 (10%)
Number of strengthen sat checks:   0
Number of coverage checks:         803081
  BDD entailment checks:           373187
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       89
Number of predicates discovered:          31
Number of abstraction locations:          328
Max number of predicates per location:    24
Avg number of predicates per location:    9
Total predicates per abstraction:         13882998
Max number of predicates per abstraction: 24
Avg number of predicates per abstraction: 867.69
Number of irrelevant predicates:          2330106 (17%)
Number of preds handled by boolean abs:   129639 (1%)
  Total number of models for allsat:      37839
  Max number of models for allsat:        1280
  Avg number of models for allsat:        2.58

Time for post operator:                 31.948s
  Time for path formula creation:       29.720s
Time for strengthen operator:            4.549s
Time for prec operator:                554.997s
  Time for abstraction:                541.161s (Max:     0.307s, Count: 1104379)
    Boolean abstraction:                31.365s
    Solving time:                       23.576s (Max:     0.070s)
    Model enumeration time:              5.506s
    Time for BDD construction:           1.428s (Max:     0.098s)
Time for merge operator:                 1.882s
Time for coverage check:                 0.557s
  Time for BDD entailment checks:        0.435s
Total time for SMT solver (w/o itp):    29.082s

Number of path formula cache hits:   6692098 (98%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     8.872s

Total number of created targets for pointer analysis: 27352
   Number of created targets for uf: *unsigned_short_int is 49
   Number of created targets for uf: *signed_int is 1217
   Number of created targets for uf: *unsigned_long_long_int is 51
   Number of created targets for uf: *unsigned_int is 2425


Number of BDD nodes:                               78080
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       43559 (count: 636816, min: 0, max: 827, avg: 0.07)
Time for BDD node cleanup:                             0.156s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  7.377s
  Time for transition matches:                         3.564s
  Time for transition assertions:                      0.007s
  Time for transition actions:                         0.053s
Automaton transfers with branching:                0
Automaton transfer successors:                      5654258 (count: 5654258, min: 1, max: 1, avg: 1.00) [1 x 5654258]

CPA algorithm statistics
------------------------
Number of iterations:            4147355
Max size of waitlist:            114
Average size of waitlist:        58
Number of computed successors:   4761405
Max successors for one state:    2
Number of times merged:          214947
Number of times stopped:         352891
Number of times breaked:         3466

Total time for CPA algorithm:       708.485s (Max:     1.158s)
  Time for choose from waitlist:      1.941s
  Time for precision adjustment:    582.936s
  Time for transfer relation:        91.021s
  Time for merge operator:            5.844s
  Time for stop operator:             8.571s
  Time for adding to reached set:     7.275s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   3466
Avg. length of target path (in blocks):              356400 (count: 3466, min: 17, max: 247, avg: 102.83)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                 171.640s
  Counterexample analysis:                           157.184s (Max:     0.200s, Calls: 3466)
    Refinement sat check:                             98.191s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.192s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.933s
  Precision update:                                    4.375s
  ARG update:                                          6.916s

Length of refined path (in blocks):                  291836 (count: 3466, min: 11, max: 247, avg: 84.20)
Number of affected states:                           117429 (count: 3466, min: 0, max: 245, avg: 33.88)
Length (states) of path with itp 'true':             170941 (count: 3466, min: 1, max: 158, avg: 49.32)
Length (states) of path with itp non-trivial itp:    117429 (count: 3466, min: 0, max: 245, avg: 33.88)
Length (states) of path with itp 'false':              3317 (count: 3466, min: 0, max: 1, avg: 0.96)
Different non-trivial interpolants along paths:         152 (count: 3466, min: 0, max: 1, avg: 0.04)
Equal non-trivial interpolants along paths:          113813 (count: 3466, min: 0, max: 243, avg: 32.84)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                3466
Number of successful refinements:     3466
Number of failed refinements:         0
Max. size of reached set before ref.: 4590
Max. size of reached set after ref.:  3374
Avg. size of reached set before ref.: 2380.67
Avg. size of reached set after ref.:  1139.72

Total time for CEGAR algorithm:     890.236s
Time for refinements:               179.259s
Average time for refinement:          0.051s
Max time for refinement:              0.264s

Code Coverage
-----------------------------
  Function coverage:      0.125
  Visited lines:          1904
  Total lines:            10595
  Line coverage:          0.180
  Visited conditions:     274
  Total conditions:       2806
  Condition coverage:     0.098

CPAchecker general statistics
-----------------------------
Number of program locations:     14611
Number of CFA edges:             16989
Number of relevant variables:    2403
Number of functions:             425
Number of loops:                 132
Size of reached set:             1779
  Number of reached locations:   783 (5%)
    Avg states per location:     2
    Max states per location:     24 (at node N13931)
  Number of reached functions:   53 (12%)
  Number of partitions:          1768
    Avg size of partitions:      1
    Max size of partitions:      3 (with key [N12186 (before line 23776), Function main called from node N12172, stack depth 1 [7575f7e1], stack [main]])
  Number of target states:       0
  Size of final wait list        52

Time for analysis setup:          9.974s
  Time for loading CPAs:          1.305s
  Time for loading parser:        0.674s
  Time for CFA construction:      7.874s
    Time for parsing file(s):     1.566s
    Time for AST to CFA:          3.219s
    Time for CFA sanity check:    0.643s
    Time for post-processing:     2.138s
      Time for var class.:        1.098s
Time for Analysis:              890.236s
CPU time for analysis:          890.140s
Total time for CPAchecker:      900.215s
Total CPU time for CPAchecker:  900.100s
Time for statistics:              0.166s

Time for Garbage Collector:      26.864s (in 4302 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                162MB (   155 MiB) max;    103MB (    98 MiB) avg;    174MB (   166 MiB) peak
Used non-heap memory:             41MB (    39 MiB) max;     40MB (    38 MiB) avg;     41MB (    39 MiB) peak
Allocated heap memory:           193MB (   184 MiB) max;    157MB (   150 MiB) avg
Allocated non-heap memory:        43MB (    41 MiB) max;     43MB (    41 MiB) avg
Total process virtual memory:   8287MB (  7903 MiB) max;   8184MB (  7805 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
