scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-challenges/linux-3.14__complex_emg__linux-usb-dev__drivers-media-usb-em28xx-em28xx_true-unreach-call.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_5zfwpq7k/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 6173: Dead code detected: Goto: case_1 (CFACreationUtils.addEdgeToCFA, INFO)

line 6178: Dead code detected: Goto: case_2 (CFACreationUtils.addEdgeToCFA, INFO)

line 6188: Dead code detected: Goto: case_8 (CFACreationUtils.addEdgeToCFA, INFO)

line 6192: Dead code detected: Goto: switch_default (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label case_8 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_default is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_1 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_2 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

line 9912: Dead code detected: return (1); (CFACreationUtils.addEdgeToCFA, INFO)

line 13305: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 13434: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 13680: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 8631: Function pointer *(dev->em28xx_read_reg_req_len) with type int (*)(struct em28xx *, u8 , u16 , char *, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 8643: Function pointer *(dev->em28xx_read_reg_req) with type int (*)(struct em28xx *, u8 , u16 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 8579: Function pointer *(dev->em28xx_write_regs_req) with type int (*)(struct em28xx *, u8 , u16 , char *, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 8599: Function pointer *(dev->em28xx_read_reg_req) with type int (*)(struct em28xx *, u8 , u16 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 8293: Function pointer *(dev->em28xx_write_regs) with type int (*)(struct em28xx *, u16 , char *, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 8358-8359: Function pointer *(dev->em28xx_read_reg_req_len) with type int (*)(struct em28xx *, u8 , u16 , char *, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 8307: Function pointer *(dev->em28xx_read_reg) with type int (*)(struct em28xx *, u16 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 8208-8209: Function pointer *(dev->em28xx_write_regs) with type int (*)(struct em28xx *, u16 , char *, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 8223: Function pointer *(dev->em28xx_read_reg) with type int (*)(struct em28xx *, u16 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 8504: Function pointer *(dev->em28xx_read_reg_req_len) with type int (*)(struct em28xx *, u8 , u16 , char *, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 8516: Function pointer *(dev->em28xx_read_reg) with type int (*)(struct em28xx *, u16 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 8420-8421: Function pointer *(dev->em28xx_write_regs_req) with type int (*)(struct em28xx *, u8 , u16 , char *, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 8443: Function pointer *(dev->em28xx_read_reg) with type int (*)(struct em28xx *, u16 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 14458: Function pointer *(subdev->ops->video->s_mbus_fmt) with type int (*)(struct v4l2_subdev *, struct v4l2_mbus_framefmt *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7494: Function pointer *(dev->usb_ctl.urb_data_copy) with type int (*)(struct em28xx *, struct urb *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6749: Function pointer *(dev->em28xx_read_reg_req_len) with type int (*)(struct em28xx *, u8 , u16 , char *, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 13359: Function pointer *arg0 with type int (*)(struct usb_interface *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 13370: Function pointer *arg0 with type int (*)(struct usb_interface *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 13404: Function pointer *arg0 with type int (*)(struct usb_interface *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function external_allocated_data to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 13370: Ignoring call via function pointer ldv_usb_instance_pre_1_10::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 13370: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 13359: Ignoring call via function pointer ldv_usb_instance_post_1_9::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 13359: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 13404: Ignoring call via function pointer ldv_usb_instance_resume_1_7::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 13404: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function rt_mutex_trylock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rt_mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_fmt to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 8631: Ignoring function call through function pointer *(dev->em28xx_read_reg_req_len): ret = (*(dev->em28xx_read_reg_req_len))(dev, 6, (int)addr, (char *)buf, (int)len); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 8643: Ignoring function call through function pointer *(dev->em28xx_read_reg_req): ret = (*(dev->em28xx_read_reg_req))(dev, 8, 0); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function msecs_to_jiffies to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 8293: Ignoring function call through function pointer *(dev->em28xx_write_regs): ret = (*(dev->em28xx_write_regs))(dev, 4, (char *)(&buf2), 2); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 8504: Ignoring function call through function pointer *(dev->em28xx_read_reg_req_len): ret = (*(dev->em28xx_read_reg_req_len))(dev, 2, (int)addr, (char *)buf, (int)len); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 8516: Ignoring function call through function pointer *(dev->em28xx_read_reg): ret = (*(dev->em28xx_read_reg))(dev, 5); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 8579: Ignoring function call through function pointer *(dev->em28xx_write_regs_req): ret = (*(dev->em28xx_write_regs_req))(dev, 6, (int)addr, (char *)buf, (int)len); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 8599: Ignoring function call through function pointer *(dev->em28xx_read_reg_req): ret = (*(dev->em28xx_read_reg_req))(dev, 8, 0); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

lines 8420-8421: Ignoring function call through function pointer *(dev->em28xx_write_regs_req): ret = (*(dev->em28xx_write_regs_req))(dev, __CPAchecker_TMP_0, (int)addr, (char *)buf, (int)len); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function usb_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_deregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 8307: Ignoring function call through function pointer *(dev->em28xx_read_reg): ret = (*(dev->em28xx_read_reg))(dev, 5); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function msleep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

lines 8358-8359: Ignoring function call through function pointer *(dev->em28xx_read_reg_req_len): ret = (*(dev->em28xx_read_reg_req_len))(dev, 0, (int)(4U - ((unsigned int)len)), (char *)(&buf2), (int)len); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 8443: Ignoring function call through function pointer *(dev->em28xx_read_reg): ret = (*(dev->em28xx_read_reg))(dev, 5); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function ldv_pre_usb_register_driver to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 8184: Return type of function __builtin_unreachable is void, but result is used as type int: __builtin_unreachable(); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function __builtin_unreachable to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

lines 8208-8209: Ignoring function call through function pointer *(dev->em28xx_write_regs): ret = (*(dev->em28xx_write_regs))(dev, (int)(4U - ((unsigned int)len)), ((char *)(&b2)) + ((unsigned long)(4 - ((int)len))), ((int)len) + 2); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function mutex_lock_nested to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_control_msg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 8223: Ignoring function call through function pointer *(dev->em28xx_read_reg): ret = (*(dev->em28xx_read_reg))(dev, 5); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function flush_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_pre_probe to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function list_del to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 8098: Ignoring function call through function pointer *(ops->fini): (*(ops->fini))(dev); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function i2c_del_adapter to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snprintf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __v4l2_clk_register_fixed to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function find_first_zero_bit to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_alloc_flags to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_after_alloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __mutex_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __raw_spin_lock_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __list_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __init_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function lockdep_init_map to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 8062: Ignoring function call through function pointer *(ops->init): (*(ops->init))(dev); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            844735 (20% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  669155 (79%)
  Because of loop head:            170478 (20%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         5102 (1%)
  Times precision was empty:       350106 (41%)
  Times precision was {false}:     7755 (1%)
  Times result was cached:         434705 (51%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      52169 (6%)
  Times result was 'false':        86597 (10%)
Number of strengthen sat checks:   0
Number of coverage checks:         1741994
  BDD entailment checks:           1356678
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       111
Number of predicates discovered:          109
Number of abstraction locations:          200
Max number of predicates per location:    53
Avg number of predicates per location:    10
Total predicates per abstraction:         7333347
Max number of predicates per abstraction: 53
Avg number of predicates per abstraction: 122.38
Number of irrelevant predicates:          3348102 (46%)
Number of preds handled by boolean abs:   658018 (9%)
  Total number of models for allsat:      270150
  Max number of models for allsat:        192
  Avg number of models for allsat:        5.18

Time for post operator:                 87.872s
  Time for path formula creation:       85.648s
Time for strengthen operator:            3.841s
Time for prec operator:                483.721s
  Time for abstraction:                466.883s (Max:     1.813s, Count: 844735)
    Boolean abstraction:               140.943s
    Solving time:                       90.925s (Max:     0.938s)
    Model enumeration time:             32.380s
    Time for BDD construction:          13.091s (Max:     0.285s)
Time for merge operator:                 5.872s
Time for coverage check:                 3.277s
  Time for BDD entailment checks:        3.022s
Total time for SMT solver (w/o itp):   123.305s

Number of path formula cache hits:   4599445 (90%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    45.923s

Total number of created targets for pointer analysis: 153650
   Number of created targets for uf: *(void)* is 201
   Number of created targets for uf: *(struct_device_private)* is 241
   Number of created targets for uf: *enum_em28xx_chip_id is 7
   Number of created targets for uf: *(struct_usb_device)* is 8
   Number of created targets for uf: *(unsigned_int)* is 7
   Number of created targets for uf: *(struct_em28xx_led)* is 148
   Number of created targets for uf: *(Return_type:_[signed_int],_Parameters:_5,_Parameter_1_type:_[(struct_em28xx)*],_Parameter_2_type:_[unsigned_char],_Parameter_3_type:_[unsigned_short_int],_Parameter_4_type:_[(char)*],_Parameter_5_type:_[signed_int],_VarArgs:_false)* is 15
   Number of created targets for uf: *(Return_type:_[signed_int],_Parameters:_4,_Parameter_1_type:_[(struct_em28xx)*],_Parameter_2_type:_[unsigned_short_int],_Parameter_3_type:_[(char)*],_Parameter_4_type:_[signed_int],_VarArgs:_false)* is 8
   Number of created targets for uf: *signed_int is 7545
   Number of created targets for uf: *(char)* is 302
   Number of created targets for uf: *unsigned_char is 6617
   Number of created targets for uf: *(struct_list_head)* is 566
   Number of created targets for uf: *(struct_em28xx_reg_seq)* is 1324
   Number of created targets for uf: *(Return_type:_[signed_int],_Parameters:_3,_Parameter_1_type:_[(struct_em28xx)*],_Parameter_2_type:_[unsigned_char],_Parameter_3_type:_[unsigned_short_int],_VarArgs:_false)* is 8
   Number of created targets for uf: *(struct_device)* is 293
   Number of created targets for uf: *unsigned_int is 175
   Number of created targets for uf: *(Return_type:_[signed_int],_Parameters:_2,_Parameter_1_type:_[(struct_em28xx)*],_Parameter_2_type:_[unsigned_short_int],_VarArgs:_false)* is 8
   Number of created targets for uf: *char is 22414
   Number of created targets for uf: *(struct_em28xx_button)* is 148


Number of BDD nodes:                               215704
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                      491451 (count: 2235689, min: 0, max: 8304, avg: 0.22)
Time for BDD node cleanup:                             0.423s
Time for BDD garbage collection:                       0.204s (in 12 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  7.018s
  Time for transition matches:                         3.100s
  Time for transition assertions:                      0.004s
  Time for transition actions:                         0.032s
Automaton transfers with branching:                0
Automaton transfer successors:                      4236720 (count: 4236720, min: 1, max: 1, avg: 1.00) [1 x 4236720]

CPA algorithm statistics
------------------------
Number of iterations:            3297426
Max size of waitlist:            418
Average size of waitlist:        105
Number of computed successors:   3770560
Max successors for one state:    2
Number of times merged:          192658
Number of times stopped:         333775
Number of times breaked:         684

Total time for CPA algorithm:       684.161s (Max:     7.317s)
  Time for choose from waitlist:      2.093s
  Time for precision adjustment:    510.027s
  Time for transfer relation:       135.257s
  Time for merge operator:           10.977s
  Time for stop operator:             8.924s
  Time for adding to reached set:     6.675s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   684
Avg. length of target path (in blocks):               59454 (count: 684, min: 15, max: 165, avg: 86.92)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                 197.279s
  Counterexample analysis:                           189.454s (Max:     0.892s, Calls: 684)
    Refinement sat check:                            162.862s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.042s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.289s
  Precision update:                                    0.651s
  ARG update:                                          6.394s

Length of refined path (in blocks):                   51818 (count: 684, min: 11, max: 152, avg: 75.76)
Number of affected states:                            19013 (count: 684, min: 1, max: 145, avg: 27.80)
Length (states) of path with itp 'true':              32121 (count: 684, min: 0, max: 126, avg: 46.96)
Length (states) of path with itp non-trivial itp:     19013 (count: 684, min: 1, max: 145, avg: 27.80)
Length (states) of path with itp 'false':               648 (count: 684, min: 0, max: 1, avg: 0.95)
Different non-trivial interpolants along paths:         509 (count: 684, min: 0, max: 15, avg: 0.74)
Equal non-trivial interpolants along paths:           17820 (count: 684, min: 0, max: 144, avg: 26.05)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                684
Number of successful refinements:     684
Number of failed refinements:         0
Max. size of reached set before ref.: 30412
Max. size of reached set after ref.:  23965
Avg. size of reached set before ref.: 10978.64
Avg. size of reached set after ref.:  6092.79

Total time for CEGAR algorithm:     891.200s
Time for refinements:               203.893s
Average time for refinement:          0.298s
Max time for refinement:              0.909s

Code Coverage
-----------------------------
  Function coverage:      0.364
  Visited lines:          1731
  Total lines:            4484
  Line coverage:          0.386
  Visited conditions:     172
  Total conditions:       1270
  Condition coverage:     0.135

CPAchecker general statistics
-----------------------------
Number of program locations:     6222
Number of CFA edges:             7037
Number of relevant variables:    881
Number of functions:             195
Number of loops:                 53
Size of reached set:             8264
  Number of reached locations:   689 (11%)
    Avg states per location:     11
    Max states per location:     132 (at node N5348)
  Number of reached functions:   71 (36%)
  Number of partitions:          8103
    Avg size of partitions:      1
    Max size of partitions:      26 (with key [N4074 (before line 13105), Function main called from node N4064, stack depth 1 [290807e5], stack [main]])
  Number of target states:       0
  Size of final wait list        42

Time for analysis setup:          9.051s
  Time for loading CPAs:          1.279s
  Time for loading parser:        0.785s
  Time for CFA construction:      6.827s
    Time for parsing file(s):     1.654s
    Time for AST to CFA:          2.710s
    Time for CFA sanity check:    0.389s
    Time for post-processing:     1.721s
      Time for var class.:        0.945s
Time for Analysis:              891.200s
CPU time for analysis:          891.020s
Total time for CPAchecker:      900.258s
Total CPU time for CPAchecker:  900.050s
Time for statistics:              0.284s

Time for Garbage Collector:      33.447s (in 1273 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                510MB (   486 MiB) max;    227MB (   216 MiB) avg;    519MB (   495 MiB) peak
Used non-heap memory:             43MB (    41 MiB) max;     41MB (    39 MiB) avg;     43MB (    41 MiB) peak
Allocated heap memory:           529MB (   504 MiB) max;    335MB (   320 MiB) avg
Allocated non-heap memory:        45MB (    42 MiB) max;     43MB (    41 MiB) avg
Total process virtual memory:  11333MB ( 10808 MiB) max;   9328MB (  8895 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
