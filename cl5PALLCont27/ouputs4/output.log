scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/elevator_spec13_product21_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_9iplh9fd/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 156: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 392: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 703: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 718: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 741: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 784: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 823: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 862: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1217: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1297: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1450: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1459: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1493: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1502: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1542: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1622: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1635: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1987: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2026: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2060: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2116: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2144: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2158: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2733: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3257: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3303: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3094: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            1996 (1% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            1564 (78%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         432 (22%)
  Times precision was empty:       361 (18%)
  Times precision was {false}:     347 (17%)
  Times result was cached:         192 (10%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      1096 (55%)
  Times result was 'false':        1121 (56%)
Number of strengthen sat checks:   0
Number of coverage checks:         129773
  BDD entailment checks:           925
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       3329
Number of predicates discovered:          237
Number of abstraction locations:          5
Max number of predicates per location:    199
Avg number of predicates per location:    63
Total predicates per abstraction:         40227
Max number of predicates per abstraction: 199
Avg number of predicates per abstraction: 27.88
Number of irrelevant predicates:          9013 (22%)
Number of preds handled by boolean abs:   28890 (72%)
  Total number of models for allsat:      76094
  Max number of models for allsat:        15552
  Avg number of models for allsat:        69.43

Time for post operator:                  8.281s
  Time for path formula creation:        8.052s
Time for strengthen operator:            0.458s
Time for prec operator:                767.682s
  Time for abstraction:                767.195s (Max:   520.644s, Count: 1996)
    Boolean abstraction:               748.624s
    Solving time:                       48.014s (Max:     3.350s)
    Model enumeration time:            683.227s
    Time for BDD construction:          19.995s (Max:     2.934s)
Time for merge operator:                 2.202s
Time for coverage check:                 0.072s
  Time for BDD entailment checks:        0.033s
Total time for SMT solver (w/o itp):   731.250s

Number of path formula cache hits:   155167 (44%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     7.720s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               57017
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       53839 (count: 31241, min: 0, max: 4883, avg: 1.72)
Time for BDD node cleanup:                             0.013s
Time for BDD garbage collection:                       0.554s (in 148 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.936s
  Time for transition matches:                         0.445s
  Time for transition assertions:                      0.001s
  Time for transition actions:                         0.003s
Automaton transfers with branching:                0
Automaton transfer successors:                       325681 (count: 325681, min: 1, max: 1, avg: 1.00) [1 x 325681]

CPA algorithm statistics
------------------------
Number of iterations:            241573
Max size of waitlist:            144
Average size of waitlist:        24
Number of computed successors:   308104
Max successors for one state:    2
Number of times merged:          64424
Number of times stopped:         64671
Number of times breaked:         94

Total time for CPA algorithm:       790.873s (Max:   572.242s)
  Time for choose from waitlist:      0.219s
  Time for precision adjustment:    770.212s
  Time for transfer relation:        13.761s
  Time for merge operator:            3.612s
  Time for stop operator:             0.682s
  Time for adding to reached set:     0.871s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   94
Avg. length of target path (in blocks):                 375 (count: 94, min: 1, max: 18, avg: 3.99)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  96.452s
  Counterexample analysis:                            94.887s (Max:    33.046s, Calls: 94)
    Refinement sat check:                             78.284s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.002s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.109s
  Precision update:                                    0.039s
  ARG update:                                          0.522s

Length of refined path (in blocks):                     265 (count: 94, min: 1, max: 15, avg: 2.82)
Number of affected states:                              103 (count: 94, min: 0, max: 14, avg: 1.10)
Length (states) of path with itp 'true':                 68 (count: 94, min: 0, max: 4, avg: 0.72)
Length (states) of path with itp non-trivial itp:       103 (count: 94, min: 0, max: 14, avg: 1.10)
Length (states) of path with itp 'false':                56 (count: 94, min: 0, max: 1, avg: 0.60)
Different non-trivial interpolants along paths:          68 (count: 94, min: 0, max: 10, avg: 0.72)
Equal non-trivial interpolants along paths:              14 (count: 94, min: 0, max: 5, avg: 0.15)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                94
Number of successful refinements:     94
Number of failed refinements:         0
Max. size of reached set before ref.: 100343
Max. size of reached set after ref.:  49127
Avg. size of reached set before ref.: 28244.09
Avg. size of reached set after ref.:  26614.65

Total time for CEGAR algorithm:     896.566s
Time for refinements:               103.549s
Average time for refinement:          1.101s
Max time for refinement:             33.681s

Code Coverage
-----------------------------
  Function coverage:      0.662
  Visited lines:          1086
  Total lines:            1668
  Line coverage:          0.651
  Visited conditions:     626
  Total conditions:       722
  Condition coverage:     0.867

CPAchecker general statistics
-----------------------------
Number of program locations:     2180
Number of CFA edges:             2658
Number of relevant variables:    303
Number of functions:             71
Number of loops:                 9
Size of reached set:             89145
  Number of reached locations:   1227 (56%)
    Avg states per location:     72
    Max states per location:     1016 (at node N39)
  Number of reached functions:   47 (66%)
  Number of partitions:          89111
    Avg size of partitions:      1
    Max size of partitions:      8 (with key [N819 (before lines 1013-1041), Function cleanup called from node N2245, stack depth 4 [73ebe37f], stack [main, runTest, test, cleanup]])
  Number of target states:       0
  Size of final wait list        35

Time for analysis setup:          4.236s
  Time for loading CPAs:          0.835s
  Time for loading parser:        0.777s
  Time for CFA construction:      2.412s
    Time for parsing file(s):     0.679s
    Time for AST to CFA:          0.733s
    Time for CFA sanity check:    0.264s
    Time for post-processing:     0.567s
      Time for var class.:        0.313s
Time for Analysis:              896.566s
CPU time for analysis:          896.530s
Total time for CPAchecker:      900.807s
Total CPU time for CPAchecker:  900.760s
Time for statistics:              1.036s

Time for Garbage Collector:       6.177s (in 214 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                315MB (   301 MiB) max;    237MB (   226 MiB) avg;    325MB (   310 MiB) peak
Used non-heap memory:             36MB (    34 MiB) max;     36MB (    34 MiB) avg;     37MB (    35 MiB) peak
Allocated heap memory:           334MB (   319 MiB) max;    303MB (   289 MiB) avg
Allocated non-heap memory:        38MB (    36 MiB) max;     38MB (    36 MiB) avg
Total process virtual memory:   8961MB (  8546 MiB) max;   8620MB (  8221 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
