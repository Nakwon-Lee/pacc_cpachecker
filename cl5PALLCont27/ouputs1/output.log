scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/elevator_spec1_product17_true-unreach-call_true-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_e52nkkw8/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 156: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 397: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 708: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1028: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1074: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1114: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1137: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1224: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1377: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1386: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1420: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1429: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1469: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1549: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1562: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1914: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1948: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2004: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2018: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2591: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3215: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3255: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3294: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3333: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 865: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            168 (0% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            52 (31%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         116 (69%)
  Times precision was empty:       3 (2%)
  Times precision was {false}:     115 (68%)
  Times result was cached:         0 (0%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      50 (30%)
  Times result was 'false':        111 (66%)
Number of strengthen sat checks:   0
Number of coverage checks:         97456
  BDD entailment checks:           318
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       882
Number of predicates discovered:          48
Number of abstraction locations:          2
Max number of predicates per location:    47
Avg number of predicates per location:    24
Total predicates per abstraction:         1643
Max number of predicates per abstraction: 47
Avg number of predicates per abstraction: 9.96
Number of irrelevant predicates:          115 (7%)
Number of preds handled by boolean abs:   1528 (93%)
  Total number of models for allsat:      58278
  Max number of models for allsat:        6672
  Avg number of models for allsat:        1165.56

Time for post operator:                  5.826s
  Time for path formula creation:        5.579s
Time for strengthen operator:            0.343s
Time for prec operator:                339.443s
  Time for abstraction:                339.019s (Max:    35.548s, Count: 168)
    Boolean abstraction:               335.062s
    Solving time:                       10.094s (Max:     0.472s)
    Model enumeration time:            317.707s
    Time for BDD construction:           7.732s (Max:     0.882s)
Time for merge operator:                 1.457s
Time for coverage check:                 0.050s
  Time for BDD entailment checks:        0.041s
Total time for SMT solver (w/o itp):   327.801s

Number of path formula cache hits:   173327 (66%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     5.158s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               37018
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       17985 (count: 8549, min: 0, max: 2146, avg: 2.10)
Time for BDD node cleanup:                             0.002s
Time for BDD garbage collection:                       0.212s (in 32 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.784s
  Time for transition matches:                         0.343s
  Time for transition assertions:                      0.001s
  Time for transition actions:                         0.002s
Automaton transfers with branching:                0
Automaton transfer successors:                       233324 (count: 233324, min: 1, max: 1, avg: 1.00) [1 x 233324]

CPA algorithm statistics
------------------------
Number of iterations:            174930
Max size of waitlist:            32
Average size of waitlist:        14
Number of computed successors:   223644
Max successors for one state:    2
Number of times merged:          48569
Number of times stopped:         48575
Number of times breaked:         5

Total time for CPA algorithm:       357.558s (Max:   302.751s)
  Time for choose from waitlist:      0.255s
  Time for precision adjustment:    341.516s
  Time for transfer relation:        10.481s
  Time for merge operator:            2.649s
  Time for stop operator:             0.514s
  Time for adding to reached set:     0.666s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   5
Avg. length of target path (in blocks):                  14 (count: 5, min: 2, max: 4, avg: 2.80)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   2.814s
  Counterexample analysis:                             2.153s (Max:     0.890s, Calls: 5)
    Refinement sat check:                              1.911s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.020s
  Precision update:                                    0.004s
  ARG update:                                          0.523s

Length of refined path (in blocks):                      14 (count: 5, min: 2, max: 4, avg: 2.80)
Number of affected states:                                9 (count: 5, min: 1, max: 3, avg: 1.80)
Length (states) of path with itp 'true':                  0 (count: 5, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:         9 (count: 5, min: 1, max: 3, avg: 1.80)
Length (states) of path with itp 'false':                 0 (count: 5, min: 0, max: 0, avg: 0.00)
Different non-trivial interpolants along paths:           4 (count: 5, min: 0, max: 2, avg: 0.80)
Equal non-trivial interpolants along paths:               0 (count: 5, min: 0, max: 0, avg: 0.00)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                5
Number of successful refinements:     5
Number of failed refinements:         0
Max. size of reached set before ref.: 52116
Max. size of reached set after ref.:  3925
Avg. size of reached set before ref.: 25428.80
Avg. size of reached set after ref.:  3925.00

Total time for CEGAR algorithm:     360.695s
Time for refinements:                 3.108s
Average time for refinement:          0.621s
Max time for refinement:              1.166s

Code Coverage
-----------------------------
  Function coverage:      0.606
  Visited lines:          996
  Total lines:            1686
  Line coverage:          0.591
  Visited conditions:     592
  Total conditions:       748
  Condition coverage:     0.791

CPAchecker general statistics
-----------------------------
Number of program locations:     2213
Number of CFA edges:             2699
Number of relevant variables:    282
Number of functions:             71
Number of loops:                 9
Size of reached set:             67440
  Number of reached locations:   1135 (51%)
    Avg states per location:     59
    Max states per location:     463 (at node N39)
  Number of reached functions:   43 (61%)
  Number of partitions:          67424
    Avg size of partitions:      1
    Max size of partitions:      17 (with key [N2391 (before lines 3012-3040), Function cleanup called from node N885, stack depth 4 [4837595f], stack [main, runTest, test, cleanup]])
  Number of target states:       0

Time for analysis setup:          4.419s
  Time for loading CPAs:          0.834s
  Time for loading parser:        0.820s
  Time for CFA construction:      2.575s
    Time for parsing file(s):     0.729s
    Time for AST to CFA:          0.773s
    Time for CFA sanity check:    0.265s
    Time for post-processing:     0.615s
      Time for var class.:        0.350s
Time for Analysis:              360.695s
CPU time for analysis:          360.670s
Time for analyzing result:        0.056s
Total time for CPAchecker:      365.119s
Total CPU time for CPAchecker:  365.090s
Time for statistics:              0.915s

Time for Garbage Collector:       2.320s (in 93 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                147MB (   140 MiB) max;    109MB (   104 MiB) avg;    165MB (   158 MiB) peak
Used non-heap memory:             36MB (    34 MiB) max;     34MB (    33 MiB) avg;     36MB (    35 MiB) peak
Allocated heap memory:           196MB (   187 MiB) max;    165MB (   158 MiB) avg
Allocated non-heap memory:        37MB (    36 MiB) max;     37MB (    35 MiB) avg
Total process virtual memory:   8207MB (  7826 MiB) max;   8189MB (  7810 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
