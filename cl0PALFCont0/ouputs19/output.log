scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/minepump_spec1_product45_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_43e9x3oh/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 91: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 123: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 137: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 275: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 287: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 310: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 630: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 676: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 874: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 883: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 938: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 467: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            7440 (27% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  7332 (99%)
  Because of loop head:            74 (1%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         34 (0%)
  Times precision was empty:       367 (5%)
  Times precision was {false}:     116 (2%)
  Times result was cached:         5827 (78%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      1130 (15%)
  Times result was 'false':        828 (11%)
Number of strengthen sat checks:   0
Number of coverage checks:         2840
  BDD entailment checks:           1548
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       9
Number of predicates discovered:          10
Number of abstraction locations:          52
Max number of predicates per location:    5
Avg number of predicates per location:    3
Total predicates per abstraction:         22715
Max number of predicates per abstraction: 5
Avg number of predicates per abstraction: 18.23
Number of irrelevant predicates:          8271 (36%)
Number of preds handled by boolean abs:   2755 (12%)
  Total number of models for allsat:      1156
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.02

Time for post operator:                  0.863s
  Time for path formula creation:        0.824s
Time for strengthen operator:            0.037s
Time for prec operator:                  3.504s
  Time for abstraction:                  3.299s (Max:     0.021s, Count: 7440)
    Boolean abstraction:                 0.789s
    Solving time:                        0.517s (Max:     0.012s)
    Model enumeration time:              0.067s
    Time for BDD construction:           0.108s (Max:     0.014s)
Time for merge operator:                 0.030s
Time for coverage check:                 0.037s
  Time for BDD entailment checks:        0.028s
Total time for SMT solver (w/o itp):     0.584s

Number of path formula cache hits:   18250 (57%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.772s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               432
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        2817 (count: 9700, min: 0, max: 449, avg: 0.29)
Time for BDD node cleanup:                             0.007s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.170s
Automaton transfers with branching:                0
Automaton transfer successors:                        27923 (count: 27923, min: 1, max: 1, avg: 1.00) [1 x 27923]

CPA algorithm statistics
------------------------
Number of iterations:            21805
Max size of waitlist:            14
Average size of waitlist:        7
Number of computed successors:   24062
Max successors for one state:    2
Number of times merged:          646
Number of times stopped:         1300
Number of times breaked:         34

Total time for CPA algorithm:         6.217s (Max:     0.348s)
  Time for choose from waitlist:      0.079s
  Time for precision adjustment:      3.807s
  Time for transfer relation:         1.742s
  Time for merge operator:            0.102s
  Time for stop operator:             0.118s
  Time for adding to reached set:     0.086s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   34
Avg. length of target path (in blocks):                1940 (count: 34, min: 26, max: 99, avg: 57.06)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.607s
  Counterexample analysis:                             0.389s (Max:     0.021s, Calls: 34)
    Refinement sat check:                              0.167s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.011s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.034s
  Precision update:                                    0.056s
  ARG update:                                          0.098s

Length of refined path (in blocks):                    1425 (count: 34, min: 14, max: 78, avg: 41.91)
Number of affected states:                              775 (count: 34, min: 3, max: 62, avg: 22.79)
Length (states) of path with itp 'true':                616 (count: 34, min: 0, max: 70, avg: 18.12)
Length (states) of path with itp non-trivial itp:       775 (count: 34, min: 3, max: 62, avg: 22.79)
Length (states) of path with itp 'false':                34 (count: 34, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:          22 (count: 34, min: 0, max: 3, avg: 0.65)
Equal non-trivial interpolants along paths:             719 (count: 34, min: 2, max: 59, avg: 21.15)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                34
Number of successful refinements:     34
Number of failed refinements:         0
Max. size of reached set before ref.: 3416
Max. size of reached set after ref.:  2453
Avg. size of reached set before ref.: 1211.59
Avg. size of reached set after ref.:  625.79

Total time for CEGAR algorithm:       6.993s
Time for refinements:                 0.752s
Average time for refinement:          0.022s
Max time for refinement:              0.052s

Code Coverage
-----------------------------
  Function coverage:      0.667
  Visited lines:          139
  Total lines:            431
  Line coverage:          0.323
  Visited conditions:     42
  Total conditions:       72
  Condition coverage:     0.583

CPAchecker general statistics
-----------------------------
Number of program locations:     616
Number of CFA edges:             665
Number of relevant variables:    113
Number of functions:             36
Number of loops:                 5
Size of reached set:             2018
  Number of reached locations:   189 (31%)
    Avg states per location:     10
    Max states per location:     56 (at node N25)
  Number of reached functions:   24 (67%)
  Number of partitions:          1960
    Avg size of partitions:      1
    Max size of partitions:      4 (with key [N482 (before lines 690-735), Function test called from node N130, stack depth 3 [1e66bf2d], stack [main, runTest, test]])
  Number of target states:       0

Time for analysis setup:          2.446s
  Time for loading CPAs:          0.682s
  Time for loading parser:        0.514s
  Time for CFA construction:      1.108s
    Time for parsing file(s):     0.389s
    Time for AST to CFA:          0.266s
    Time for CFA sanity check:    0.064s
    Time for post-processing:     0.251s
      Time for var class.:        0.101s
Time for Analysis:                6.993s
CPU time for analysis:            6.990s
Time for analyzing result:        0.001s
Total time for CPAchecker:        9.443s
Total CPU time for CPAchecker:    9.430s
Time for statistics:              0.096s

Time for Garbage Collector:       0.201s (in 16 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 64MB (    61 MiB) max;     39MB (    37 MiB) avg;     67MB (    64 MiB) peak
Used non-heap memory:             37MB (    35 MiB) max;     31MB (    29 MiB) avg;     38MB (    36 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        39MB (    37 MiB) max;     33MB (    31 MiB) avg
Total process virtual memory:   8134MB (  7757 MiB) max;   8107MB (  7732 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
