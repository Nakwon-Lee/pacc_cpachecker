scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/minepump_spec2_product40_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_72f9iodt/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 132: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 164: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 178: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 368: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 377: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 432: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 775: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 821: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 930: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 942: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 965: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 612: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            15698 (25% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  15449 (98%)
  Because of loop head:            132 (1%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         117 (1%)
  Times precision was empty:       519 (3%)
  Times precision was {false}:     239 (2%)
  Times result was cached:         11794 (75%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      3146 (20%)
  Times result was 'false':        1622 (10%)
Number of strengthen sat checks:   0
Number of coverage checks:         8766
  BDD entailment checks:           5802
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       9
Number of predicates discovered:          11
Number of abstraction locations:          56
Max number of predicates per location:    7
Avg number of predicates per location:    4
Total predicates per abstraction:         64239
Max number of predicates per abstraction: 7
Avg number of predicates per abstraction: 18.98
Number of irrelevant predicates:          23858 (37%)
Number of preds handled by boolean abs:   9480 (15%)
  Total number of models for allsat:      3354
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.07

Time for post operator:                  1.409s
  Time for path formula creation:        1.379s
Time for strengthen operator:            0.094s
Time for prec operator:                  8.449s
  Time for abstraction:                  8.108s (Max:     0.053s, Count: 15698)
    Boolean abstraction:                 2.188s
    Solving time:                        1.570s (Max:     0.013s)
    Model enumeration time:              0.162s
    Time for BDD construction:           0.214s (Max:     0.012s)
Time for merge operator:                 0.072s
Time for coverage check:                 0.021s
  Time for BDD entailment checks:        0.019s
Total time for SMT solver (w/o itp):     1.732s

Number of path formula cache hits:   39971 (56%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     1.266s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               825
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        7112 (count: 27258, min: 0, max: 509, avg: 0.26)
Time for BDD node cleanup:                             0.032s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.250s
Automaton transfers with branching:                0
Automaton transfer successors:                        62059 (count: 62059, min: 1, max: 1, avg: 1.00) [1 x 62059]

CPA algorithm statistics
------------------------
Number of iterations:            48881
Max size of waitlist:            24
Average size of waitlist:        9
Number of computed successors:   54419
Max successors for one state:    2
Number of times merged:          1482
Number of times stopped:         3507
Number of times breaked:         117

Total time for CPA algorithm:        12.664s (Max:     0.740s)
  Time for choose from waitlist:      0.067s
  Time for precision adjustment:      9.064s
  Time for transfer relation:         2.720s
  Time for merge operator:            0.171s
  Time for stop operator:             0.170s
  Time for adding to reached set:     0.143s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   117
Avg. length of target path (in blocks):                6798 (count: 117, min: 27, max: 110, avg: 58.10)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   1.624s
  Counterexample analysis:                             1.192s (Max:     0.029s, Calls: 117)
    Refinement sat check:                              0.537s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.003s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.040s
  Precision update:                                    0.100s
  ARG update:                                          0.178s

Length of refined path (in blocks):                    5244 (count: 117, min: 16, max: 69, avg: 44.82)
Number of affected states:                             1473 (count: 117, min: 2, max: 60, avg: 12.59)
Length (states) of path with itp 'true':               3654 (count: 117, min: 0, max: 65, avg: 31.23)
Length (states) of path with itp non-trivial itp:      1473 (count: 117, min: 2, max: 60, avg: 12.59)
Length (states) of path with itp 'false':               117 (count: 117, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:          17 (count: 117, min: 0, max: 2, avg: 0.15)
Equal non-trivial interpolants along paths:            1339 (count: 117, min: 1, max: 57, avg: 11.44)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                117
Number of successful refinements:     117
Number of failed refinements:         0
Max. size of reached set before ref.: 4548
Max. size of reached set after ref.:  4354
Avg. size of reached set before ref.: 1898.77
Avg. size of reached set after ref.:  1503.12

Total time for CEGAR algorithm:      14.744s
Time for refinements:                 1.930s
Average time for refinement:          0.016s
Max time for refinement:              0.048s

Code Coverage
-----------------------------
  Function coverage:      0.658
  Visited lines:          134
  Total lines:            442
  Line coverage:          0.303
  Visited conditions:     42
  Total conditions:       74
  Condition coverage:     0.568

CPAchecker general statistics
-----------------------------
Number of program locations:     635
Number of CFA edges:             685
Number of relevant variables:    113
Number of functions:             38
Number of loops:                 5
Size of reached set:             3000
  Number of reached locations:   183 (29%)
    Avg states per location:     16
    Max states per location:     85 (at node N5)
  Number of reached functions:   25 (66%)
  Number of partitions:          2916
    Avg size of partitions:      1
    Max size of partitions:      5 (with key [N98 (before lines 196-245), Function test called from node N603, stack depth 3 [7fe1a856], stack [main, runTest, test]])
  Number of target states:       0

Time for analysis setup:          2.372s
  Time for loading CPAs:          0.621s
  Time for loading parser:        0.578s
  Time for CFA construction:      1.021s
    Time for parsing file(s):     0.331s
    Time for AST to CFA:          0.272s
    Time for CFA sanity check:    0.070s
    Time for post-processing:     0.222s
      Time for var class.:        0.083s
Time for Analysis:               14.745s
CPU time for analysis:           14.740s
Time for analyzing result:        0.002s
Total time for CPAchecker:       17.120s
Total CPU time for CPAchecker:   17.110s
Time for statistics:              0.128s

Time for Garbage Collector:       0.404s (in 36 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 69MB (    66 MiB) max;     43MB (    41 MiB) avg;     74MB (    71 MiB) peak
Used non-heap memory:             37MB (    36 MiB) max;     34MB (    32 MiB) avg;     38MB (    36 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        40MB (    38 MiB) max;     36MB (    34 MiB) avg
Total process virtual memory:   8134MB (  7757 MiB) max;   8118MB (  7742 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
