scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/minepump_spec2_product27_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_dx6z77hn/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 356: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 402: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 498: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 530: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 539: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 642: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 722: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 745: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 853: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 862: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 917: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 193: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            1826 (25% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  1759 (96%)
  Because of loop head:            44 (2%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         23 (1%)
  Times precision was empty:       228 (12%)
  Times precision was {false}:     57 (3%)
  Times result was cached:         1293 (71%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      248 (14%)
  Times result was 'false':        239 (13%)
Number of strengthen sat checks:   0
Number of coverage checks:         511
  BDD entailment checks:           239
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       9
Number of predicates discovered:          8
Number of abstraction locations:          39
Max number of predicates per location:    5
Avg number of predicates per location:    2
Total predicates per abstraction:         4415
Max number of predicates per abstraction: 5
Avg number of predicates per abstraction: 14.48
Number of irrelevant predicates:          1369 (31%)
Number of preds handled by boolean abs:   547 (12%)
  Total number of models for allsat:      263
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.06

Time for post operator:                  0.523s
  Time for path formula creation:        0.509s
Time for strengthen operator:            0.018s
Time for prec operator:                  1.141s
  Time for abstraction:                  1.011s (Max:     0.013s, Count: 1826)
    Boolean abstraction:                 0.248s
    Solving time:                        0.141s (Max:     0.011s)
    Model enumeration time:              0.020s
    Time for BDD construction:           0.052s (Max:     0.010s)
Time for merge operator:                 0.016s
Time for coverage check:                 0.023s
  Time for BDD entailment checks:        0.022s
Total time for SMT solver (w/o itp):     0.161s

Number of path formula cache hits:   5388 (65%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.488s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               276
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         638 (count: 2342, min: 0, max: 273, avg: 0.27)
Time for BDD node cleanup:                             0.009s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.062s
Automaton transfers with branching:                0
Automaton transfer successors:                         7223 (count: 7223, min: 1, max: 1, avg: 1.00) [1 x 7223]

CPA algorithm statistics
------------------------
Number of iterations:            5571
Max size of waitlist:            12
Average size of waitlist:        5
Number of computed successors:   6281
Max successors for one state:    2
Number of times merged:          136
Number of times stopped:         345
Number of times breaked:         23

Total time for CPA algorithm:         2.630s (Max:     0.257s)
  Time for choose from waitlist:      0.019s
  Time for precision adjustment:      1.333s
  Time for transfer relation:         1.044s
  Time for merge operator:            0.036s
  Time for stop operator:             0.039s
  Time for adding to reached set:     0.055s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   23
Avg. length of target path (in blocks):                 937 (count: 23, min: 26, max: 61, avg: 40.74)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.304s
  Counterexample analysis:                             0.188s (Max:     0.017s, Calls: 23)
    Refinement sat check:                              0.093s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.002s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.031s
  Precision update:                                    0.017s
  ARG update:                                          0.046s

Length of refined path (in blocks):                     656 (count: 23, min: 16, max: 47, avg: 28.52)
Number of affected states:                              447 (count: 23, min: 2, max: 44, avg: 19.43)
Length (states) of path with itp 'true':                186 (count: 23, min: 0, max: 33, avg: 8.09)
Length (states) of path with itp non-trivial itp:       447 (count: 23, min: 2, max: 44, avg: 19.43)
Length (states) of path with itp 'false':                23 (count: 23, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           5 (count: 23, min: 0, max: 2, avg: 0.22)
Equal non-trivial interpolants along paths:             419 (count: 23, min: 1, max: 42, avg: 18.22)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                23
Number of successful refinements:     23
Number of failed refinements:         0
Max. size of reached set before ref.: 643
Max. size of reached set after ref.:  405
Avg. size of reached set before ref.: 329.22
Avg. size of reached set after ref.:  101.57

Total time for CEGAR algorithm:       2.977s
Time for refinements:                 0.343s
Average time for refinement:          0.014s
Max time for refinement:              0.040s

Code Coverage
-----------------------------
  Function coverage:      0.459
  Visited lines:          92
  Total lines:            433
  Line coverage:          0.212
  Visited conditions:     30
  Total conditions:       70
  Condition coverage:     0.429

CPAchecker general statistics
-----------------------------
Number of program locations:     621
Number of CFA edges:             667
Number of relevant variables:    113
Number of functions:             37
Number of loops:                 5
Size of reached set:             462
  Number of reached locations:   124 (20%)
    Avg states per location:     3
    Max states per location:     16 (at node N305)
  Number of reached functions:   17 (46%)
  Number of partitions:          461
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N459 (before lines 657-704), Function test called from node N431, stack depth 3 [37e69c43], stack [main, runTest, test]])
  Number of target states:       0

Time for analysis setup:          2.371s
  Time for loading CPAs:          0.584s
  Time for loading parser:        0.597s
  Time for CFA construction:      0.999s
    Time for parsing file(s):     0.341s
    Time for AST to CFA:          0.272s
    Time for CFA sanity check:    0.063s
    Time for post-processing:     0.201s
      Time for var class.:        0.077s
Time for Analysis:                2.977s
CPU time for analysis:            2.970s
Time for analyzing result:        0.001s
Total time for CPAchecker:        5.359s
Total CPU time for CPAchecker:    5.350s
Time for statistics:              0.071s

Time for Garbage Collector:       0.113s (in 7 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 57MB (    55 MiB) max;     33MB (    32 MiB) avg;     62MB (    59 MiB) peak
Used non-heap memory:             35MB (    33 MiB) max;     27MB (    26 MiB) avg;     36MB (    34 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        37MB (    35 MiB) max;     29MB (    28 MiB) avg
Total process virtual memory:   8132MB (  7755 MiB) max;   8085MB (  7710 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
