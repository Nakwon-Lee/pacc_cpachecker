scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/minepump_spec1_product30_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_omxmkdsu/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 140: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 460: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 506: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 518: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 541: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 594: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 626: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 635: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 780: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 789: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 844: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 297: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            1545 (28% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  1500 (97%)
  Because of loop head:            30 (2%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         15 (1%)
  Times precision was empty:       344 (22%)
  Times precision was {false}:     38 (2%)
  Times result was cached:         1029 (67%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      134 (9%)
  Times result was 'false':        182 (12%)
Number of strengthen sat checks:   0
Number of coverage checks:         305
  BDD entailment checks:           179
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       9
Number of predicates discovered:          6
Number of abstraction locations:          39
Max number of predicates per location:    4
Avg number of predicates per location:    2
Total predicates per abstraction:         2478
Max number of predicates per abstraction: 4
Avg number of predicates per abstraction: 14.41
Number of irrelevant predicates:          927 (37%)
Number of preds handled by boolean abs:   242 (10%)
  Total number of models for allsat:      145
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.08

Time for post operator:                  0.379s
  Time for path formula creation:        0.369s
Time for strengthen operator:            0.023s
Time for prec operator:                  0.595s
  Time for abstraction:                  0.552s (Max:     0.010s, Count: 1545)
    Boolean abstraction:                 0.120s
    Solving time:                        0.072s (Max:     0.008s)
    Model enumeration time:              0.008s
    Time for BDD construction:           0.025s (Max:     0.006s)
Time for merge operator:                 0.019s
Time for coverage check:                 0.025s
  Time for BDD entailment checks:        0.024s
Total time for SMT solver (w/o itp):     0.080s

Number of path formula cache hits:   3381 (53%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.350s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               229
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         313 (count: 1571, min: 0, max: 195, avg: 0.20)
Time for BDD node cleanup:                             0.002s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.064s
Automaton transfers with branching:                0
Automaton transfer successors:                         5584 (count: 5584, min: 1, max: 1, avg: 1.00) [1 x 5584]

CPA algorithm statistics
------------------------
Number of iterations:            4275
Max size of waitlist:            13
Average size of waitlist:        6
Number of computed successors:   4761
Max successors for one state:    2
Number of times merged:          63
Number of times stopped:         228
Number of times breaked:         15

Total time for CPA algorithm:         1.721s (Max:     0.245s)
  Time for choose from waitlist:      0.023s
  Time for precision adjustment:      0.764s
  Time for transfer relation:         0.727s
  Time for merge operator:            0.028s
  Time for stop operator:             0.041s
  Time for adding to reached set:     0.052s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   15
Avg. length of target path (in blocks):                 610 (count: 15, min: 26, max: 56, avg: 40.67)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.198s
  Counterexample analysis:                             0.126s (Max:     0.016s, Calls: 15)
    Refinement sat check:                              0.038s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.002s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.019s
  Precision update:                                    0.007s
  ARG update:                                          0.023s

Length of refined path (in blocks):                     421 (count: 15, min: 14, max: 49, avg: 28.07)
Number of affected states:                              362 (count: 15, min: 13, max: 48, avg: 24.13)
Length (states) of path with itp 'true':                 44 (count: 15, min: 0, max: 11, avg: 2.93)
Length (states) of path with itp non-trivial itp:       362 (count: 15, min: 13, max: 48, avg: 24.13)
Length (states) of path with itp 'false':                15 (count: 15, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           4 (count: 15, min: 0, max: 1, avg: 0.27)
Equal non-trivial interpolants along paths:             343 (count: 15, min: 12, max: 46, avg: 22.87)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                15
Number of successful refinements:     15
Number of failed refinements:         0
Max. size of reached set before ref.: 684
Max. size of reached set after ref.:  421
Avg. size of reached set before ref.: 351.87
Avg. size of reached set after ref.:  92.67

Total time for CEGAR algorithm:       1.957s
Time for refinements:                 0.233s
Average time for refinement:          0.015s
Max time for refinement:              0.045s

Code Coverage
-----------------------------
  Function coverage:      0.459
  Visited lines:          87
  Total lines:            431
  Line coverage:          0.202
  Visited conditions:     28
  Total conditions:       70
  Condition coverage:     0.400

CPAchecker general statistics
-----------------------------
Number of program locations:     619
Number of CFA edges:             667
Number of relevant variables:    113
Number of functions:             37
Number of loops:                 5
Size of reached set:             464
  Number of reached locations:   117 (19%)
    Avg states per location:     3
    Max states per location:     18 (at node N573)
  Number of reached functions:   17 (46%)
  Number of partitions:          463
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N597 (before lines 892-939), Function test called from node N46, stack depth 3 [3062f9f4], stack [main, runTest, test]])
  Number of target states:       0

Time for analysis setup:          1.923s
  Time for loading CPAs:          0.506s
  Time for loading parser:        0.432s
  Time for CFA construction:      0.869s
    Time for parsing file(s):     0.333s
    Time for AST to CFA:          0.190s
    Time for CFA sanity check:    0.044s
    Time for post-processing:     0.186s
      Time for var class.:        0.078s
Time for Analysis:                1.958s
CPU time for analysis:            1.950s
Time for analyzing result:        0.000s
Total time for CPAchecker:        3.883s
Total CPU time for CPAchecker:    3.880s
Time for statistics:              0.050s

Time for Garbage Collector:       0.084s (in 6 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 56MB (    53 MiB) max;     34MB (    32 MiB) avg;     62MB (    59 MiB) peak
Used non-heap memory:             34MB (    32 MiB) max;     26MB (    25 MiB) avg;     35MB (    34 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        36MB (    35 MiB) max;     28MB (    27 MiB) avg
Total process virtual memory:   8065MB (  7692 MiB) max;   8028MB (  7656 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
