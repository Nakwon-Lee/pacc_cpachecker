scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-drivers--mfd--sm501.ko-main.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_j62_bxl6/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 5817: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 5244: Function pointer *(pd->set_power) with type int (*)(struct device *, unsigned int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 5207: Function pointer *(pd->get_power) with type int (*)(struct device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function dev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_remove_file to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function gpiochip_remove to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iounmap to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function release_resource to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function list_del to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_disable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_enable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __request_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_ioremap_bar to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __mutex_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __raw_spin_lock_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _dev_info to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_create_file to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_dev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __list_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function msleep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ioremap_nocache to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function gpiochip_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __pci_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_driver_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 5207: Ignoring function call through function pointer *(pd->get_power): tmp___0 = (*(pd->get_power))(sm->dev); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5244: Ignoring function call through function pointer *(pd->set_power): (*(pd->set_power))(sm->dev, (unsigned int)on); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function platform_get_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_get_resource to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            71427 (2% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            62967 (88%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         8460 (12%)
  Times precision was empty:       153 (0%)
  Times precision was {false}:     1795 (3%)
  Times result was cached:         65650 (92%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      3829 (5%)
  Times result was 'false':        20339 (28%)
Number of strengthen sat checks:   0
Number of coverage checks:         555209
  BDD entailment checks:           94629
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       386
Number of predicates discovered:          22
Number of abstraction locations:          11
Max number of predicates per location:    12
Avg number of predicates per location:    4
Total predicates per abstraction:         268460
Max number of predicates per abstraction: 12
Avg number of predicates per abstraction: 47.73
Number of irrelevant predicates:          102287 (38%)
Number of preds handled by boolean abs:   11746 (4%)
  Total number of models for allsat:      7309
  Max number of models for allsat:        18
  Avg number of models for allsat:        1.91

Time for post operator:                 91.968s
  Time for path formula creation:       89.420s
Time for strengthen operator:            3.954s
Time for prec operator:                253.037s
  Time for abstraction:                248.179s (Max:     2.585s, Count: 71427)
    Boolean abstraction:               130.195s
    Solving time:                      140.740s (Max:     0.230s)
    Model enumeration time:             15.554s
    Time for BDD construction:           0.437s (Max:     0.019s)
Time for merge operator:                18.778s
Time for coverage check:                 0.254s
  Time for BDD entailment checks:        0.182s
Total time for SMT solver (w/o itp):   156.294s

Number of path formula cache hits:   3773940 (81%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    58.790s

Total number of created targets for pointer analysis: 474192
   Number of created targets for uf: *(void)* is 39
   Number of created targets for uf: *signed_int is 21804
   Number of created targets for uf: *(struct_sm501_platdata)* is 13
   Number of created targets for uf: *signed_long_int is 2000
   Number of created targets for uf: *(struct_list_head)* is 34
   Number of created targets for uf: *(struct_resource)* is 25
   Number of created targets for uf: *unsigned_char_:_1 is 1246
   Number of created targets for uf: *unsigned_long_long_int is 24985
   Number of created targets for uf: *unsigned_int is 36
   Number of created targets for uf: *(struct_device)* is 13
   Number of created targets for uf: *unsigned_long_int is 285


Number of BDD nodes:                               2628
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        8166 (count: 130236, min: 0, max: 461, avg: 0.06)
Time for BDD node cleanup:                             0.052s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  6.721s
  Time for transition matches:                         3.726s
  Time for transition assertions:                      0.010s
  Time for transition actions:                         0.033s
Automaton transfers with branching:                0
Automaton transfer successors:                      4462595 (count: 4462595, min: 1, max: 1, avg: 1.00) [1 x 4462595]

CPA algorithm statistics
------------------------
Number of iterations:            2770180
Max size of waitlist:            3369
Average size of waitlist:        1169
Number of computed successors:   3061410
Max successors for one state:    2
Number of times merged:          230290
Number of times stopped:         251864
Number of times breaked:         735

Total time for CPA algorithm:       469.976s (Max:    25.213s)
  Time for choose from waitlist:      1.508s
  Time for precision adjustment:    281.632s
  Time for transfer relation:       144.056s
  Time for merge operator:           22.567s
  Time for stop operator:             4.164s
  Time for adding to reached set:     6.935s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   735
Avg. length of target path (in blocks):               21901 (count: 735, min: 2, max: 101, avg: 29.80)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                 175.703s
  Counterexample analysis:                           162.876s (Max:     2.732s, Calls: 735)
    Refinement sat check:                            138.972s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.032s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.104s
  Precision update:                                    0.164s
  ARG update:                                         10.947s

Length of refined path (in blocks):                   21835 (count: 735, min: 2, max: 101, avg: 29.71)
Number of affected states:                              919 (count: 735, min: 1, max: 53, avg: 1.25)
Length (states) of path with itp 'true':              20181 (count: 735, min: 0, max: 99, avg: 27.46)
Length (states) of path with itp non-trivial itp:       919 (count: 735, min: 1, max: 53, avg: 1.25)
Length (states) of path with itp 'false':                19 (count: 735, min: 0, max: 1, avg: 0.03)
Different non-trivial interpolants along paths:          34 (count: 735, min: 0, max: 7, avg: 0.05)
Equal non-trivial interpolants along paths:             150 (count: 735, min: 0, max: 51, avg: 0.20)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                735
Number of successful refinements:     735
Number of failed refinements:         0
Max. size of reached set before ref.: 460597
Max. size of reached set after ref.:  400266
Avg. size of reached set before ref.: 141771.75
Avg. size of reached set after ref.:  138128.14

Total time for CEGAR algorithm:     894.125s
Time for refinements:               311.975s
Average time for refinement:          0.424s
Max time for refinement:              2.878s

Code Coverage
-----------------------------
  Function coverage:      0.684
  Visited lines:          1899
  Total lines:            2197
  Line coverage:          0.864
  Visited conditions:     316
  Total conditions:       440
  Condition coverage:     0.718

CPAchecker general statistics
-----------------------------
Number of program locations:     2964
Number of CFA edges:             3321
Number of relevant variables:    321
Number of functions:             114
Number of loops:                 12
Size of reached set:             111156
  Number of reached locations:   1143 (39%)
    Avg states per location:     97
    Max states per location:     1486 (at node N26)
  Number of reached functions:   78 (68%)
  Number of partitions:          110211
    Avg size of partitions:      1
    Max size of partitions:      18 (with key [N325 (before line 4005), Function sm501_calc_clock called from node N410, stack depth 7 [b905e62], stack [main, sm501_pci_probe, sm501_init_dev, sm501_init_regs, sm501_set_clock, sm501_select_clock, sm501_calc_clock]])
  Number of target states:       0
  Size of final wait list        658

Time for analysis setup:          6.206s
  Time for loading CPAs:          1.085s
  Time for loading parser:        0.843s
  Time for CFA construction:      4.115s
    Time for parsing file(s):     1.168s
    Time for AST to CFA:          1.365s
    Time for CFA sanity check:    0.257s
    Time for post-processing:     1.087s
      Time for var class.:        0.562s
Time for Analysis:              894.125s
CPU time for analysis:          894.060s
Total time for CPAchecker:      900.337s
Total CPU time for CPAchecker:  900.260s
Time for statistics:              1.686s

Time for Garbage Collector:      54.644s (in 568 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                851MB (   812 MiB) max;    435MB (   415 MiB) avg;    877MB (   836 MiB) peak
Used non-heap memory:             41MB (    39 MiB) max;     40MB (    38 MiB) avg;     42MB (    40 MiB) peak
Allocated heap memory:           921MB (   878 MiB) max;    627MB (   598 MiB) avg
Allocated non-heap memory:        43MB (    41 MiB) max;     43MB (    41 MiB) avg
Total process virtual memory:   8478MB (  8086 MiB) max;   8304MB (  7919 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
