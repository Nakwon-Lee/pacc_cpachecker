scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-32_7a-drivers--video--smscufx.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_w_za5sf9/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 7471: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_handler_precall to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_pr_debug to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function schedule_delayed_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function down_interruptible to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __list_del_entry to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_free_coherent to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_free_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_dev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __raw_spin_lock_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __init_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function lockdep_init_map to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function init_timer_key to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_alloc_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_alloc_coherent to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __list_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function framebuffer_alloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_alloc_cmap to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_control_msg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function msleep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_destroy_modelist to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_edid_to_monspecs to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_find_best_display to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_find_nearest_mode to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_videomode_to_var to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function vmalloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function vfree to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_add_videomode to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            756 (3% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            697 (92%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         59 (8%)
  Times precision was empty:       574 (76%)
  Times precision was {false}:     50 (7%)
  Times result was cached:         54 (7%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      78 (10%)
  Times result was 'false':        52 (7%)
Number of strengthen sat checks:   0
Number of coverage checks:         3934
  BDD entailment checks:           460
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       1478
Number of predicates discovered:          6
Number of abstraction locations:          10
Max number of predicates per location:    4
Avg number of predicates per location:    2
Total predicates per abstraction:         426
Max number of predicates per abstraction: 4
Avg number of predicates per abstraction: 3.33
Number of irrelevant predicates:          190 (45%)
Number of preds handled by boolean abs:   177 (42%)
  Total number of models for allsat:      124
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.59

Time for post operator:                  5.206s
  Time for path formula creation:        5.118s
Time for strengthen operator:            0.134s
Time for prec operator:                878.891s
  Time for abstraction:                878.693s (Max:   859.021s, Count: 756)
    Boolean abstraction:                 7.465s
    Solving time:                      875.183s (Max:   858.770s)
    Model enumeration time:              0.943s
    Time for BDD construction:           0.021s (Max:     0.001s)
Time for merge operator:                 1.667s
Time for coverage check:                 0.034s
  Time for BDD entailment checks:        0.028s
Total time for SMT solver (w/o itp):   876.126s

Number of path formula cache hits:   17962 (62%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     4.807s

Total number of created targets for pointer analysis: 29286
   Number of created targets for uf: *signed_int is 2
   Number of created targets for uf: *(struct_usb_device)* is 2
   Number of created targets for uf: *(struct_urb)* is 2
   Number of created targets for uf: *(struct_list_head)* is 3
   Number of created targets for uf: *(unsigned_char)* is 19
   Number of created targets for uf: *(struct_ufx_data)* is 2
   Number of created targets for uf: *unsigned_int is 309
   Number of created targets for uf: *(struct_fb_info)* is 2
   Number of created targets for uf: *unsigned_long_int is 3


Number of BDD nodes:                               222
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         203 (count: 1817, min: 0, max: 76, avg: 0.11)
Time for BDD node cleanup:                             0.002s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.364s
Automaton transfers with branching:                0
Automaton transfer successors:                        27476 (count: 27476, min: 1, max: 1, avg: 1.00) [1 x 27476]

CPA algorithm statistics
------------------------
Number of iterations:            17059
Max size of waitlist:            84
Average size of waitlist:        45
Number of computed successors:   19454
Max successors for one state:    2
Number of times merged:          1737
Number of times stopped:         2151
Number of times breaked:         6

Total time for CPA algorithm:       889.160s (Max:   859.687s)
  Time for choose from waitlist:      0.086s
  Time for precision adjustment:    879.374s
  Time for transfer relation:         7.001s
  Time for merge operator:            1.899s
  Time for stop operator:             0.166s
  Time for adding to reached set:     0.238s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   6
Avg. length of target path (in blocks):                  47 (count: 6, min: 4, max: 11, avg: 7.83)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   4.329s
  Counterexample analysis:                             4.126s (Max:     0.834s, Calls: 6)
    Refinement sat check:                              3.788s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.014s
  Precision update:                                    0.004s
  ARG update:                                          0.134s

Length of refined path (in blocks):                      47 (count: 6, min: 4, max: 11, avg: 7.83)
Number of affected states:                               26 (count: 6, min: 1, max: 7, avg: 4.33)
Length (states) of path with itp 'true':                 15 (count: 6, min: 0, max: 3, avg: 2.50)
Length (states) of path with itp non-trivial itp:        26 (count: 6, min: 1, max: 7, avg: 4.33)
Length (states) of path with itp 'false':                 0 (count: 6, min: 0, max: 0, avg: 0.00)
Different non-trivial interpolants along paths:           0 (count: 6, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:              20 (count: 6, min: 0, max: 6, avg: 3.33)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                6
Number of successful refinements:     6
Number of failed refinements:         0
Max. size of reached set before ref.: 5621
Max. size of reached set after ref.:  2587
Avg. size of reached set before ref.: 4381.00
Avg. size of reached set after ref.:  2154.33

Total time for CEGAR algorithm:     893.791s
Time for refinements:                 4.614s
Average time for refinement:          0.769s
Max time for refinement:              0.903s

Code Coverage
-----------------------------
  Function coverage:      0.415
  Visited lines:          1717
  Total lines:            3007
  Line coverage:          0.571
  Visited conditions:     321
  Total conditions:       782
  Condition coverage:     0.410

CPAchecker general statistics
-----------------------------
Number of program locations:     4028
Number of CFA edges:             4596
Number of relevant variables:    609
Number of functions:             118
Number of loops:                 31
Size of reached set:             3891
  Number of reached locations:   950 (24%)
    Avg states per location:     4
    Max states per location:     162 (at node N3229)
  Number of reached functions:   49 (42%)
  Number of partitions:          3891
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0
  Size of final wait list        47

Time for analysis setup:          6.679s
  Time for loading CPAs:          1.135s
  Time for loading parser:        0.782s
  Time for CFA construction:      4.582s
    Time for parsing file(s):     1.160s
    Time for AST to CFA:          1.518s
    Time for CFA sanity check:    0.457s
    Time for post-processing:     1.195s
      Time for var class.:        0.604s
Time for Analysis:              893.791s
CPU time for analysis:          893.740s
Total time for CPAchecker:      900.475s
Total CPU time for CPAchecker:  900.400s
Time for statistics:              0.185s

Time for Garbage Collector:       0.557s (in 31 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 74MB (    71 MiB) max;     50MB (    48 MiB) avg;     77MB (    74 MiB) peak
Used non-heap memory:             40MB (    38 MiB) max;     38MB (    37 MiB) avg;     40MB (    38 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        41MB (    40 MiB) max;     41MB (    39 MiB) avg
Total process virtual memory:   8268MB (  7885 MiB) max;   8249MB (  7867 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
