scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.4-simple/32_1_cilled_true-unreach-call_ok_nondet_linux-3_false-termination.4-32_1-drivers--media--common--tuners--mt20xx.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_hqtn8i57/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function i2c_transfer to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            166 (0% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            154 (93%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         12 (7%)
  Times precision was empty:       30 (18%)
  Times precision was {false}:     11 (7%)
  Times result was cached:         87 (52%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      38 (23%)
  Times result was 'false':        23 (14%)
Number of strengthen sat checks:   0
Number of coverage checks:         2337
  BDD entailment checks:           69
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       553
Number of predicates discovered:          2
Number of abstraction locations:          8
Max number of predicates per location:    1
Avg number of predicates per location:    1
Total predicates per abstraction:         136
Max number of predicates per abstraction: 1
Avg number of predicates per abstraction: 2.78
Number of irrelevant predicates:          20 (15%)
Number of preds handled by boolean abs:   38 (28%)
  Total number of models for allsat:      35
  Max number of models for allsat:        1
  Avg number of models for allsat:        0.92

Time for post operator:                  2.552s
  Time for path formula creation:        2.425s
Time for strengthen operator:            0.110s
Time for prec operator:                  3.797s
  Time for abstraction:                  3.725s (Max:     0.661s, Count: 166)
    Boolean abstraction:                 2.467s
    Solving time:                        2.779s (Max:     0.556s)
    Model enumeration time:              0.151s
    Time for BDD construction:           0.007s (Max:     0.006s)
Time for merge operator:                 0.276s
Time for coverage check:                 0.001s
  Time for BDD entailment checks:        0.000s
Total time for SMT solver (w/o itp):     2.930s

Number of path formula cache hits:   27983 (75%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     2.194s

Total number of created targets for pointer analysis: 2168
   Number of created targets for uf: *signed_int is 5
   Number of created targets for uf: *unsigned_char is 105
   Number of created targets for uf: *unsigned_int is 6


Number of BDD nodes:                               202
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                          70 (count: 392, min: 0, max: 29, avg: 0.18)
Time for BDD node cleanup:                             0.001s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.266s
Automaton transfers with branching:                0
Automaton transfer successors:                        36505 (count: 36505, min: 1, max: 1, avg: 1.00) [1 x 36505]

CPA algorithm statistics
------------------------
Number of iterations:            11480
Max size of waitlist:            16
Average size of waitlist:        7
Number of computed successors:   12744
Max successors for one state:    2
Number of times merged:          1134
Number of times stopped:         1197
Number of times breaked:         6

Total time for CPA algorithm:         9.098s (Max:     2.671s)
  Time for choose from waitlist:      0.050s
  Time for precision adjustment:      4.138s
  Time for transfer relation:         4.082s
  Time for merge operator:            0.402s
  Time for stop operator:             0.062s
  Time for adding to reached set:     0.114s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   6
Avg. length of target path (in blocks):                  32 (count: 6, min: 2, max: 9, avg: 5.33)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.738s
  Counterexample analysis:                             0.580s (Max:     0.196s, Calls: 6)
    Refinement sat check:                              0.525s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.024s
  Precision update:                                    0.018s
  ARG update:                                          0.100s

Length of refined path (in blocks):                      32 (count: 6, min: 2, max: 9, avg: 5.33)
Number of affected states:                               26 (count: 6, min: 1, max: 8, avg: 4.33)
Length (states) of path with itp 'true':                  0 (count: 6, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:        26 (count: 6, min: 1, max: 8, avg: 4.33)
Length (states) of path with itp 'false':                 0 (count: 6, min: 0, max: 0, avg: 0.00)
Different non-trivial interpolants along paths:           0 (count: 6, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:              20 (count: 6, min: 0, max: 7, avg: 3.33)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                6
Number of successful refinements:     6
Number of failed refinements:         0
Max. size of reached set before ref.: 2692
Max. size of reached set after ref.:  3
Avg. size of reached set before ref.: 1463.00
Avg. size of reached set after ref.:  3.00

Total time for CEGAR algorithm:       9.901s
Time for refinements:                 0.801s
Average time for refinement:          0.133s
Max time for refinement:              0.227s

Code Coverage
-----------------------------
  Function coverage:      0.636
  Visited lines:          2879
  Total lines:            3883
  Line coverage:          0.741
  Visited conditions:     226
  Total conditions:       304
  Condition coverage:     0.743

CPAchecker general statistics
-----------------------------
Number of program locations:     4315
Number of CFA edges:             4528
Number of relevant variables:    802
Number of functions:             33
Number of loops:                 10
Size of reached set:             2765
  Number of reached locations:   908 (21%)
    Avg states per location:     3
    Max states per location:     66 (at node N0)
  Number of reached functions:   21 (64%)
  Number of partitions:          2765
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0

Time for analysis setup:          5.854s
  Time for loading CPAs:          1.073s
  Time for loading parser:        0.705s
  Time for CFA construction:      3.908s
    Time for parsing file(s):     1.009s
    Time for AST to CFA:          1.176s
    Time for CFA sanity check:    0.372s
    Time for post-processing:     1.193s
      Time for var class.:        0.565s
Time for Analysis:                9.902s
CPU time for analysis:            9.910s
Time for analyzing result:        0.002s
Total time for CPAchecker:       15.761s
Total CPU time for CPAchecker:   15.750s
Time for statistics:              0.141s

Time for Garbage Collector:       0.296s (in 17 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 69MB (    66 MiB) max;     43MB (    41 MiB) avg;     72MB (    69 MiB) peak
Used non-heap memory:             36MB (    35 MiB) max;     31MB (    29 MiB) avg;     37MB (    35 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        38MB (    36 MiB) max;     32MB (    31 MiB) avg
Total process virtual memory:   8132MB (  7755 MiB) max;   8107MB (  7732 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
