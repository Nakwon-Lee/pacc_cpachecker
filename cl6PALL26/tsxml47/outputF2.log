scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.4-simple/43_1a_cilled_true-unreach-call_ok_nondet_linux-43_1a-drivers--leds--leds-bd2802.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_uj2alslq/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function gpio_request_one to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function i2c_smbus_write_byte_data to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _dev_info to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __gpio_set_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __init_rwsem to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_final_state to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function down_write to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function up_write to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function down_read to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function up_read to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __init_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function lockdep_init_map to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function led_classdev_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function led_classdev_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_create_file to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_remove_file to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            133 (1% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            121 (91%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         12 (9%)
  Times precision was empty:       41 (31%)
  Times precision was {false}:     10 (8%)
  Times result was cached:         62 (47%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      20 (15%)
  Times result was 'false':        6 (5%)
Number of strengthen sat checks:   0
Number of coverage checks:         451
  BDD entailment checks:           79
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       332
Number of predicates discovered:          2
Number of abstraction locations:          8
Max number of predicates per location:    1
Avg number of predicates per location:    1
Total predicates per abstraction:         92
Max number of predicates per abstraction: 1
Avg number of predicates per abstraction: 3.07
Number of irrelevant predicates:          25 (27%)
Number of preds handled by boolean abs:   20 (22%)
  Total number of models for allsat:      20
  Max number of models for allsat:        1
  Avg number of models for allsat:        1.00

Time for post operator:                  1.020s
  Time for path formula creation:        0.977s
Time for strengthen operator:            0.056s
Time for prec operator:                  0.633s
  Time for abstraction:                  0.582s (Max:     0.063s, Count: 133)
    Boolean abstraction:                 0.166s
    Solving time:                        0.207s (Max:     0.043s)
    Model enumeration time:              0.019s
    Time for BDD construction:           0.008s (Max:     0.006s)
Time for merge operator:                 0.093s
Time for coverage check:                 0.008s
  Time for BDD entailment checks:        0.008s
Total time for SMT solver (w/o itp):     0.226s

Number of path formula cache hits:   7797 (74%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.875s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               202
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                          35 (count: 295, min: 0, max: 26, avg: 0.12)
Time for BDD node cleanup:                             0.001s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.111s
Automaton transfers with branching:                0
Automaton transfer successors:                        10264 (count: 10264, min: 1, max: 1, avg: 1.00) [1 x 10264]

CPA algorithm statistics
------------------------
Number of iterations:            2411
Max size of waitlist:            11
Average size of waitlist:        5
Number of computed successors:   2714
Max successors for one state:    2
Number of times merged:          186
Number of times stopped:         253
Number of times breaked:         6

Total time for CPA algorithm:         2.890s (Max:     0.839s)
  Time for choose from waitlist:      0.017s
  Time for precision adjustment:      0.838s
  Time for transfer relation:         1.699s
  Time for merge operator:            0.124s
  Time for stop operator:             0.058s
  Time for adding to reached set:     0.028s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   6
Avg. length of target path (in blocks):                  26 (count: 6, min: 2, max: 5, avg: 4.33)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.204s
  Counterexample analysis:                             0.132s (Max:     0.033s, Calls: 6)
    Refinement sat check:                              0.115s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.018s
  Precision update:                                    0.002s
  ARG update:                                          0.031s

Length of refined path (in blocks):                      26 (count: 6, min: 2, max: 5, avg: 4.33)
Number of affected states:                               20 (count: 6, min: 1, max: 4, avg: 3.33)
Length (states) of path with itp 'true':                  0 (count: 6, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:        20 (count: 6, min: 1, max: 4, avg: 3.33)
Length (states) of path with itp 'false':                 0 (count: 6, min: 0, max: 0, avg: 0.00)
Different non-trivial interpolants along paths:           0 (count: 6, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:              14 (count: 6, min: 0, max: 3, avg: 2.33)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                6
Number of successful refinements:     6
Number of failed refinements:         0
Max. size of reached set before ref.: 435
Max. size of reached set after ref.:  3
Avg. size of reached set before ref.: 346.67
Avg. size of reached set after ref.:  3.00

Total time for CEGAR algorithm:       3.140s
Time for refinements:                 0.245s
Average time for refinement:          0.040s
Max time for refinement:              0.080s

Code Coverage
-----------------------------
  Function coverage:      0.284
  Visited lines:          1654
  Total lines:            3969
  Line coverage:          0.417
  Visited conditions:     78
  Total conditions:       264
  Condition coverage:     0.295

CPAchecker general statistics
-----------------------------
Number of program locations:     4357
Number of CFA edges:             4553
Number of relevant variables:    1243
Number of functions:             74
Number of loops:                 8
Size of reached set:             394
  Number of reached locations:   296 (7%)
    Avg states per location:     1
    Max states per location:     6 (at node N3987)
  Number of reached functions:   21 (28%)
  Number of partitions:          394
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0

Time for analysis setup:          5.752s
  Time for loading CPAs:          0.946s
  Time for loading parser:        0.753s
  Time for CFA construction:      3.886s
    Time for parsing file(s):     1.115s
    Time for AST to CFA:          1.240s
    Time for CFA sanity check:    0.389s
    Time for post-processing:     0.976s
      Time for var class.:        0.523s
Time for Analysis:                3.140s
CPU time for analysis:            3.140s
Time for analyzing result:        0.000s
Total time for CPAchecker:        8.898s
Total CPU time for CPAchecker:    8.880s
Time for statistics:              0.099s

Time for Garbage Collector:       0.226s (in 10 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 66MB (    63 MiB) max;     35MB (    34 MiB) avg;     71MB (    67 MiB) peak
Used non-heap memory:             34MB (    32 MiB) max;     27MB (    26 MiB) avg;     35MB (    33 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        36MB (    34 MiB) max;     29MB (    27 MiB) avg
Total process virtual memory:   8132MB (  7755 MiB) max;   8089MB (  7715 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
