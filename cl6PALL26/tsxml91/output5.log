scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.4-simple/43_1a_cilled_true-unreach-call_ok_nondet_linux-43_1a-drivers--video--backlight--l4f00242t03.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_q99aabcu/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __list_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function msleep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_dev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __gpio_set_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function regulator_disable to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function regulator_set_voltage to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function regulator_enable to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_pr_debug to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function spi_setup to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function gpio_request_one to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function regulator_get to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function lcd_device_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function regulator_put to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function gpio_free to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_final_state to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _dev_info to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Recursion detected, aborting. To ignore recursion, add -skipRecursion to the command line. (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, INFO)

Error: line 4181: Unsupported feature (recursion): l4f00242t03_lcd_power_set(ld, power); (CallstackTransferRelation.getAbstractSuccessorsForEdge, SEVERE)

PredicateCPA statistics
-----------------------
Number of abstractions:            56 (1% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            52 (93%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         4 (7%)
  Times precision was empty:       26 (46%)
  Times precision was {false}:     3 (5%)
  Times result was cached:         12 (21%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      15 (27%)
  Times result was 'false':        5 (9%)
Number of strengthen sat checks:   0
Number of coverage checks:         291
  BDD entailment checks:           19
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       280
Number of predicates discovered:          2
Number of abstraction locations:          5
Max number of predicates per location:    1
Avg number of predicates per location:    1
Total predicates per abstraction:         30
Max number of predicates per abstraction: 1
Avg number of predicates per abstraction: 1.67
Number of irrelevant predicates:          4 (13%)
Number of preds handled by boolean abs:   15 (50%)
  Total number of models for allsat:      12
  Max number of models for allsat:        1
  Avg number of models for allsat:        0.80

Time for post operator:                  1.755s
  Time for path formula creation:        1.682s
Time for strengthen operator:            0.093s
Time for prec operator:                  0.765s
  Time for abstraction:                  0.732s (Max:     0.156s, Count: 56)
    Boolean abstraction:                 0.388s
    Solving time:                        0.437s (Max:     0.092s)
    Model enumeration time:              0.010s
    Time for BDD construction:           0.012s (Max:     0.006s)
Time for merge operator:                 0.181s
Time for coverage check:                 0.001s
  Time for BDD entailment checks:        0.000s
Total time for SMT solver (w/o itp):     0.447s

Number of path formula cache hits:   5170 (47%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     1.604s

Total number of created targets for pointer analysis: 606
   Number of created targets for uf: *unsigned_short_int is 8


Number of BDD nodes:                               202
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                           8 (count: 155, min: 0, max: 5, avg: 0.05)
Time for BDD node cleanup:                             0.000s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.198s
Automaton transfers with branching:                0
Automaton transfer successors:                        10895 (count: 10895, min: 1, max: 1, avg: 1.00) [1 x 10895]

CPA algorithm statistics
------------------------
Number of iterations:            2347
Max size of waitlist:            18
Average size of waitlist:        8
Number of computed successors:   2533
Max successors for one state:    2
Number of times merged:          136
Number of times stopped:         154
Number of times breaked:         2

Total time for CPA algorithm:         4.094s (Max:     1.940s)
  Time for choose from waitlist:      0.018s
  Time for precision adjustment:      0.948s
  Time for transfer relation:         2.744s
  Time for merge operator:            0.219s
  Time for stop operator:             0.036s
  Time for adding to reached set:     0.039s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   2
Avg. length of target path (in blocks):                   8 (count: 2, min: 2, max: 6, avg: 4.00)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.128s
  Counterexample analysis:                             0.069s (Max:     0.057s, Calls: 2)
    Refinement sat check:                              0.057s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.012s
  Precision update:                                    0.002s
  ARG update:                                          0.028s

Length of refined path (in blocks):                       8 (count: 2, min: 2, max: 6, avg: 4.00)
Number of affected states:                                6 (count: 2, min: 1, max: 5, avg: 3.00)
Length (states) of path with itp 'true':                  0 (count: 2, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:         6 (count: 2, min: 1, max: 5, avg: 3.00)
Length (states) of path with itp 'false':                 0 (count: 2, min: 0, max: 0, avg: 0.00)
Different non-trivial interpolants along paths:           0 (count: 2, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:               4 (count: 2, min: 0, max: 4, avg: 2.00)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                2
Number of successful refinements:     2
Number of failed refinements:         0
Max. size of reached set before ref.: 1171
Max. size of reached set after ref.:  3
Avg. size of reached set before ref.: 717.50
Avg. size of reached set after ref.:  3.00

Total time for CEGAR algorithm:       4.262s
Time for refinements:                 0.166s
Average time for refinement:          0.083s
Max time for refinement:              0.103s

Code Coverage
-----------------------------
  Function coverage:      0.769
  Visited lines:          1411
  Total lines:            1441
  Line coverage:          0.979
  Visited conditions:     66
  Total conditions:       74
  Condition coverage:     0.892

CPAchecker general statistics
-----------------------------
Number of program locations:     1594
Number of CFA edges:             1647
Number of relevant variables:    254
Number of functions:             26
Number of loops:                 4
Size of reached set:             946
  Number of reached locations:   276 (17%)
    Avg states per location:     3
    Max states per location:     18 (at node N37)
  Number of reached functions:   20 (77%)
  Number of partitions:          946
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0
  Size of final wait list        3

Time for analysis setup:          4.737s
  Time for loading CPAs:          1.066s
  Time for loading parser:        0.709s
  Time for CFA construction:      2.853s
    Time for parsing file(s):     0.949s
    Time for AST to CFA:          0.894s
    Time for CFA sanity check:    0.167s
    Time for post-processing:     0.627s
      Time for var class.:        0.310s
Time for Analysis:                4.262s
CPU time for analysis:            4.260s
Total time for CPAchecker:        9.004s
Total CPU time for CPAchecker:    8.990s
Time for statistics:              0.118s

Time for Garbage Collector:       0.207s (in 8 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 62MB (    59 MiB) max;     35MB (    33 MiB) avg;     68MB (    65 MiB) peak
Used non-heap memory:             35MB (    33 MiB) max;     28MB (    27 MiB) avg;     35MB (    34 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        37MB (    35 MiB) max;     30MB (    28 MiB) avg
Total process virtual memory:   8132MB (  7756 MiB) max;   8094MB (  7719 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
