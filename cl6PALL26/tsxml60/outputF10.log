scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.4-simple/32_1_cilled_true-unreach-call_ok_nondet_linux-3_true-termination.4-32_1-drivers--firmware--google--memconsole.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_dzczpghl/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dmi_check_system to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sysfs_create_bin_file to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sysfs_remove_bin_file to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            17 (2% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            11 (65%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         6 (35%)
  Times precision was empty:       9 (53%)
  Times precision was {false}:     3 (18%)
  Times result was cached:         0 (0%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      5 (29%)
  Times result was 'false':        4 (24%)
Number of strengthen sat checks:   0
Number of coverage checks:         26
  BDD entailment checks:           6
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       94
Number of predicates discovered:          2
Number of abstraction locations:          3
Max number of predicates per location:    1
Avg number of predicates per location:    1
Total predicates per abstraction:         8
Max number of predicates per abstraction: 1
Avg number of predicates per abstraction: 1.00
Number of irrelevant predicates:          3 (38%)
Number of preds handled by boolean abs:   5 (63%)
  Total number of models for allsat:      4
  Max number of models for allsat:        1
  Avg number of models for allsat:        0.80

Time for post operator:                  0.320s
  Time for path formula creation:        0.315s
Time for strengthen operator:            0.010s
Time for prec operator:                  0.124s
  Time for abstraction:                  0.122s (Max:     0.034s, Count: 17)
    Boolean abstraction:                 0.034s
    Solving time:                        0.030s (Max:     0.017s)
    Model enumeration time:              0.002s
    Time for BDD construction:           0.001s (Max:     0.001s)
Time for merge operator:                 0.040s
Time for coverage check:                 0.000s
  Time for BDD entailment checks:        0.000s
Total time for SMT solver (w/o itp):     0.032s

Number of path formula cache hits:   269 (32%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.294s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               202
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                           0 (count: 67, min: 0, max: 0, avg: 0.00)
Time for BDD node cleanup:                             0.000s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.054s
Automaton transfers with branching:                0
Automaton transfer successors:                          841 (count: 841, min: 1, max: 1, avg: 1.00) [1 x 841]

CPA algorithm statistics
------------------------
Number of iterations:            236
Max size of waitlist:            5
Average size of waitlist:        2
Number of computed successors:   256
Max successors for one state:    2
Number of times merged:          10
Number of times stopped:         16
Number of times breaked:         3

Total time for CPA algorithm:         0.775s (Max:     0.309s)
  Time for choose from waitlist:      0.002s
  Time for precision adjustment:      0.173s
  Time for transfer relation:         0.498s
  Time for merge operator:            0.053s
  Time for stop operator:             0.018s
  Time for adding to reached set:     0.023s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   3
Avg. length of target path (in blocks):                   5 (count: 3, min: 1, max: 2, avg: 1.67)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.082s
  Counterexample analysis:                             0.051s (Max:     0.026s, Calls: 3)
    Refinement sat check:                              0.035s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.002s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.005s
  Precision update:                                    0.014s
  ARG update:                                          0.005s

Length of refined path (in blocks):                       5 (count: 3, min: 1, max: 2, avg: 1.67)
Number of affected states:                                2 (count: 3, min: 0, max: 1, avg: 0.67)
Length (states) of path with itp 'true':                  0 (count: 3, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:         2 (count: 3, min: 0, max: 1, avg: 0.67)
Length (states) of path with itp 'false':                 0 (count: 3, min: 0, max: 0, avg: 0.00)
Different non-trivial interpolants along paths:           0 (count: 3, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:               0 (count: 3, min: 0, max: 0, avg: 0.00)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                3
Number of successful refinements:     3
Number of failed refinements:         0
Max. size of reached set before ref.: 143
Max. size of reached set after ref.:  109
Avg. size of reached set before ref.: 99.67
Avg. size of reached set after ref.:  69.33

Total time for CEGAR algorithm:       0.887s
Time for refinements:                 0.110s
Average time for refinement:          0.036s
Max time for refinement:              0.061s

Code Coverage
-----------------------------
  Function coverage:      0.550
  Visited lines:          387
  Total lines:            433
  Line coverage:          0.894
  Visited conditions:     20
  Total conditions:       40
  Condition coverage:     0.500

CPAchecker general statistics
-----------------------------
Number of program locations:     534
Number of CFA edges:             556
Number of relevant variables:    95
Number of functions:             20
Number of loops:                 2
Size of reached set:             146
  Number of reached locations:   100 (19%)
    Avg states per location:     1
    Max states per location:     5 (at node N0)
  Number of reached functions:   11 (55%)
  Number of partitions:          146
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0

Time for analysis setup:          3.547s
  Time for loading CPAs:          0.880s
  Time for loading parser:        0.741s
  Time for CFA construction:      1.734s
    Time for parsing file(s):     0.611s
    Time for AST to CFA:          0.396s
    Time for CFA sanity check:    0.107s
    Time for post-processing:     0.449s
      Time for var class.:        0.253s
Time for Analysis:                0.887s
CPU time for analysis:            0.890s
Time for analyzing result:        0.000s
Total time for CPAchecker:        4.453s
Total CPU time for CPAchecker:    4.440s
Time for statistics:              0.090s

Time for Garbage Collector:       0.120s (in 5 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 46MB (    44 MiB) max;     28MB (    27 MiB) avg;     61MB (    58 MiB) peak
Used non-heap memory:             32MB (    30 MiB) max;     24MB (    22 MiB) avg;     33MB (    31 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        34MB (    32 MiB) max;     25MB (    24 MiB) avg
Total process virtual memory:   8132MB (  7755 MiB) max;   8058MB (  7685 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
