scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.4-simple/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--scsi--dmx3191d.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_hkq_8lis/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 4087: Dead code detected: Goto: case_1 (CFACreationUtils.addEdgeToCFA, INFO)

line 4090: Dead code detected: Goto: case_2 (CFACreationUtils.addEdgeToCFA, INFO)

line 4093: Dead code detected: Goto: case_4 (CFACreationUtils.addEdgeToCFA, INFO)

line 4099: Dead code detected: Goto: switch_default (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label switch_default is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_4 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_1 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_2 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label while_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 9633: Function pointer *__cil_tmp38 with type void (*)(struct scsi_cmnd *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9747: Function pointer *__cil_tmp74 with type void (*)(struct scsi_cmnd *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9024: Function pointer *__cil_tmp492 with type void (*)(struct scsi_cmnd *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 8502: Function pointer *__cil_tmp238 with type void (*)(struct scsi_cmnd *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 8492: Function pointer *__cil_tmp235 with type void (*)(struct scsi_cmnd *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6850: Function pointer *__cil_tmp165 with type void (*)(struct scsi_cmnd *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __pci_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_enable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __request_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function scsi_host_alloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __release_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_disable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __init_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function init_timer_key to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function request_threaded_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function scsi_add_host_with_dma to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function scsi_scan_host to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __might_sleep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _cond_resched to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function schedule_delayed_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            339 (2% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            319 (94%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         20 (6%)
  Times precision was empty:       70 (21%)
  Times precision was {false}:     38 (11%)
  Times result was cached:         131 (39%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      100 (29%)
  Times result was 'false':        42 (12%)
Number of strengthen sat checks:   0
Number of coverage checks:         1126
  BDD entailment checks:           202
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       196
Number of predicates discovered:          3
Number of abstraction locations:          9
Max number of predicates per location:    2
Avg number of predicates per location:    1
Total predicates per abstraction:         355
Max number of predicates per abstraction: 2
Avg number of predicates per abstraction: 2.57
Number of irrelevant predicates:          95 (27%)
Number of preds handled by boolean abs:   125 (35%)
  Total number of models for allsat:      115
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.15

Time for post operator:                  2.094s
  Time for path formula creation:        2.017s
Time for strengthen operator:            0.054s
Time for prec operator:                  1.145s
  Time for abstraction:                  1.054s (Max:     0.028s, Count: 339)
    Boolean abstraction:                 0.342s
    Solving time:                        0.348s (Max:     0.013s)
    Model enumeration time:              0.028s
    Time for BDD construction:           0.028s (Max:     0.008s)
Time for merge operator:                 0.145s
Time for coverage check:                 0.006s
  Time for BDD entailment checks:        0.006s
Total time for SMT solver (w/o itp):     0.376s

Number of path formula cache hits:   11088 (54%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     1.827s

Total number of created targets for pointer analysis: 188
   Number of created targets for uf: *signed_int is 13
   Number of created targets for uf: *unsigned_char is 3
   Number of created targets for uf: *(unsigned_char)* is 19


Number of BDD nodes:                               205
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         168 (count: 1087, min: 0, max: 77, avg: 0.15)
Time for BDD node cleanup:                             0.001s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.244s
Automaton transfers with branching:                0
Automaton transfer successors:                        20113 (count: 20113, min: 1, max: 1, avg: 1.00) [1 x 20113]

CPA algorithm statistics
------------------------
Number of iterations:            7539
Max size of waitlist:            15
Average size of waitlist:        6
Number of computed successors:   8242
Max successors for one state:    2
Number of times merged:          462
Number of times stopped:         615
Number of times breaked:         7

Total time for CPA algorithm:         5.452s (Max:     1.305s)
  Time for choose from waitlist:      0.037s
  Time for precision adjustment:      1.551s
  Time for transfer relation:         3.231s
  Time for merge operator:            0.225s
  Time for stop operator:             0.071s
  Time for adding to reached set:     0.118s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   7
Avg. length of target path (in blocks):                  47 (count: 7, min: 1, max: 13, avg: 6.71)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.263s
  Counterexample analysis:                             0.139s (Max:     0.030s, Calls: 7)
    Refinement sat check:                              0.119s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.015s
  Precision update:                                    0.002s
  ARG update:                                          0.072s

Length of refined path (in blocks):                      41 (count: 7, min: 1, max: 13, avg: 5.86)
Number of affected states:                               31 (count: 7, min: 0, max: 12, avg: 4.43)
Length (states) of path with itp 'true':                  3 (count: 7, min: 0, max: 3, avg: 0.43)
Length (states) of path with itp non-trivial itp:        31 (count: 7, min: 0, max: 12, avg: 4.43)
Length (states) of path with itp 'false':                 1 (count: 7, min: 0, max: 1, avg: 0.14)
Different non-trivial interpolants along paths:           0 (count: 7, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:              25 (count: 7, min: 0, max: 11, avg: 3.57)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                7
Number of successful refinements:     7
Number of failed refinements:         0
Max. size of reached set before ref.: 1442
Max. size of reached set after ref.:  170
Avg. size of reached set before ref.: 700.29
Avg. size of reached set after ref.:  42.71

Total time for CEGAR algorithm:       5.766s
Time for refinements:                 0.314s
Average time for refinement:          0.044s
Max time for refinement:              0.060s

Code Coverage
-----------------------------
  Function coverage:      0.368
  Visited lines:          1674
  Total lines:            5114
  Line coverage:          0.327
  Visited conditions:     104
  Total conditions:       364
  Condition coverage:     0.286

CPAchecker general statistics
-----------------------------
Number of program locations:     5658
Number of CFA edges:             5963
Number of relevant variables:    1185
Number of functions:             57
Number of loops:                 22
Size of reached set:             2983
  Number of reached locations:   439 (8%)
    Avg states per location:     6
    Max states per location:     98 (at node N110)
  Number of reached functions:   21 (37%)
  Number of partitions:          2982
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N957 (before lines 5277-5359), Function NCR5380_init called from node N5104, stack depth 3 [652e345], stack [main, dmx3191d_probe_one, NCR5380_init]])
  Number of target states:       0

Time for analysis setup:          6.846s
  Time for loading CPAs:          1.172s
  Time for loading parser:        0.839s
  Time for CFA construction:      4.701s
    Time for parsing file(s):     1.166s
    Time for AST to CFA:          1.545s
    Time for CFA sanity check:    0.530s
    Time for post-processing:     1.311s
      Time for var class.:        0.622s
Time for Analysis:                5.766s
CPU time for analysis:            5.760s
Time for analyzing result:        0.008s
Total time for CPAchecker:       12.617s
Total CPU time for CPAchecker:   12.600s
Time for statistics:              0.199s

Time for Garbage Collector:       0.395s (in 15 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 69MB (    66 MiB) max;     41MB (    39 MiB) avg;     74MB (    70 MiB) peak
Used non-heap memory:             36MB (    35 MiB) max;     29MB (    27 MiB) avg;     37MB (    35 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        38MB (    36 MiB) max;     30MB (    29 MiB) avg
Total process virtual memory:   8133MB (  7757 MiB) max;   8098MB (  7723 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
