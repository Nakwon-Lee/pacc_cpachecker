scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.4-simple/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--media--common--tuners--mxl5007t.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_hmy9owwf/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 6752: Function pointer *__cil_tmp123 with type int (*)(struct dvb_frontend *fe, int enable) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6771: Function pointer *__cil_tmp130 with type int (*)(struct dvb_frontend *fe, int enable) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 5433: Function pointer *__cil_tmp19 with type int (*)(struct dvb_frontend *fe, int enable) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 5509: Function pointer *__cil_tmp33 with type int (*)(struct dvb_frontend *fe, int enable) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 5779: Function pointer *__cil_tmp14 with type int (*)(struct dvb_frontend *fe, int enable) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 5808: Function pointer *__cil_tmp23 with type int (*)(struct dvb_frontend *fe, int enable) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 5664: Function pointer *__cil_tmp30 with type int (*)(struct dvb_frontend *fe, int enable) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 5731: Function pointer *__cil_tmp49 with type int (*)(struct dvb_frontend *fe, int enable) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 5859: Function pointer *__cil_tmp15 with type int (*)(struct dvb_frontend *fe, int enable) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 5901: Function pointer *__cil_tmp26 with type int (*)(struct dvb_frontend *fe, int enable) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 5433: Ignoring call via function pointer mxl5007t_get_status::__cil_tmp19 for which no suitable target was found in line: (*__cil_tmp19)(fe, 1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 5433: Ignoring function call through function pointer *__cil_tmp19: (*__cil_tmp19)(fe, 1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function i2c_transfer to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 5509: Ignoring call via function pointer mxl5007t_get_status::__cil_tmp33 for which no suitable target was found in line: (*__cil_tmp33)(fe, 0); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 5509: Ignoring function call through function pointer *__cil_tmp33: (*__cil_tmp33)(fe, 0); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5664: Ignoring call via function pointer mxl5007t_set_params::__cil_tmp30 for which no suitable target was found in line: (*__cil_tmp30)(fe, 1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 5664: Ignoring function call through function pointer *__cil_tmp30: (*__cil_tmp30)(fe, 1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5731: Ignoring call via function pointer mxl5007t_set_params::__cil_tmp49 for which no suitable target was found in line: (*__cil_tmp49)(fe, 0); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 5731: Ignoring function call through function pointer *__cil_tmp49: (*__cil_tmp49)(fe, 0); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5859: Ignoring call via function pointer mxl5007t_sleep::__cil_tmp15 for which no suitable target was found in line: (*__cil_tmp15)(fe, 1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 5859: Ignoring function call through function pointer *__cil_tmp15: (*__cil_tmp15)(fe, 1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5901: Ignoring call via function pointer mxl5007t_sleep::__cil_tmp26 for which no suitable target was found in line: (*__cil_tmp26)(fe, 0); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 5901: Ignoring function call through function pointer *__cil_tmp26: (*__cil_tmp26)(fe, 0); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5779: Ignoring call via function pointer mxl5007t_init::__cil_tmp14 for which no suitable target was found in line: (*__cil_tmp14)(fe, 1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 5779: Ignoring function call through function pointer *__cil_tmp14: (*__cil_tmp14)(fe, 1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5808: Ignoring call via function pointer mxl5007t_init::__cil_tmp23 for which no suitable target was found in line: (*__cil_tmp23)(fe, 0); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 5808: Ignoring function call through function pointer *__cil_tmp23: (*__cil_tmp23)(fe, 0); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function list_del to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function msleep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            18257 (2% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            17317 (95%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         940 (5%)
  Times precision was empty:       4193 (23%)
  Times precision was {false}:     67 (0%)
  Times result was cached:         13783 (75%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      214 (1%)
  Times result was 'false':        927 (5%)
Number of strengthen sat checks:   0
Number of coverage checks:         51968
  BDD entailment checks:           8758
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       587
Number of predicates discovered:          3
Number of abstraction locations:          7
Max number of predicates per location:    1
Avg number of predicates per location:    1
Total predicates per abstraction:         14064
Max number of predicates per abstraction: 1
Avg number of predicates per abstraction: 50.05
Number of irrelevant predicates:          4139 (29%)
Number of preds handled by boolean abs:   214 (2%)
  Total number of models for allsat:      195
  Max number of models for allsat:        1
  Avg number of models for allsat:        0.91

Time for post operator:                 87.205s
  Time for path formula creation:       86.466s
Time for strengthen operator:            0.779s
Time for prec operator:                  9.434s
  Time for abstraction:                  7.093s (Max:     0.753s, Count: 18257)
    Boolean abstraction:                 0.736s
    Solving time:                        0.776s (Max:     0.110s)
    Model enumeration time:              0.045s
    Time for BDD construction:           0.023s (Max:     0.006s)
Time for merge operator:                 3.732s
Time for coverage check:                 0.074s
  Time for BDD entailment checks:        0.052s
Total time for SMT solver (w/o itp):     0.821s

Number of path formula cache hits:   503501 (64%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    38.856s

Total number of created targets for pointer analysis: 7062
   Number of created targets for uf: *signed_int is 3
   Number of created targets for uf: *unsigned_char is 4


Number of BDD nodes:                               202
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         415 (count: 14587, min: 0, max: 142, avg: 0.03)
Time for BDD node cleanup:                             0.014s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  1.793s
  Time for transition matches:                         1.015s
  Time for transition assertions:                      0.001s
  Time for transition actions:                         0.008s
Automaton transfers with branching:                0
Automaton transfer successors:                       764076 (count: 764076, min: 1, max: 1, avg: 1.00) [1 x 764076]

CPA algorithm statistics
------------------------
Number of iterations:            240237
Max size of waitlist:            454
Average size of waitlist:        238
Number of computed successors:   272787
Max successors for one state:    2
Number of times merged:          21605
Number of times stopped:         30273
Number of times breaked:         32

Total time for CPA algorithm:       117.753s (Max:    29.338s)
  Time for choose from waitlist:      0.202s
  Time for precision adjustment:     12.472s
  Time for transfer relation:        97.704s
  Time for merge operator:            4.398s
  Time for stop operator:             0.582s
  Time for adding to reached set:     0.859s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   32
Avg. length of target path (in blocks):                 264 (count: 32, min: 2, max: 13, avg: 8.25)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   1.140s
  Counterexample analysis:                             0.498s (Max:     0.038s, Calls: 32)
    Refinement sat check:                              0.405s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.002s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.018s
  Precision update:                                    0.005s
  ARG update:                                          0.596s

Length of refined path (in blocks):                     264 (count: 32, min: 2, max: 13, avg: 8.25)
Number of affected states:                              201 (count: 32, min: 1, max: 11, avg: 6.28)
Length (states) of path with itp 'true':                 31 (count: 32, min: 0, max: 1, avg: 0.97)
Length (states) of path with itp non-trivial itp:       201 (count: 32, min: 1, max: 11, avg: 6.28)
Length (states) of path with itp 'false':                 0 (count: 32, min: 0, max: 0, avg: 0.00)
Different non-trivial interpolants along paths:           0 (count: 32, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:             169 (count: 32, min: 0, max: 10, avg: 5.28)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                32
Number of successful refinements:     32
Number of failed refinements:         0
Max. size of reached set before ref.: 57454
Max. size of reached set after ref.:  38509
Avg. size of reached set before ref.: 21846.53
Avg. size of reached set after ref.:  16844.41

Total time for CEGAR algorithm:     120.163s
Time for refinements:                 1.964s
Average time for refinement:          0.061s
Max time for refinement:              0.167s

Code Coverage
-----------------------------
  Function coverage:      0.744
  Visited lines:          2750
  Total lines:            3285
  Line coverage:          0.837
  Visited conditions:     252
  Total conditions:       318
  Condition coverage:     0.792

CPAchecker general statistics
-----------------------------
Number of program locations:     3596
Number of CFA edges:             3813
Number of relevant variables:    908
Number of functions:             39
Number of loops:                 7
Size of reached set:             81520
  Number of reached locations:   806 (22%)
    Avg states per location:     101
    Max states per location:     1187 (at node N34)
  Number of reached functions:   29 (74%)
  Number of partitions:          81520
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0

Time for analysis setup:          5.708s
  Time for loading CPAs:          0.977s
  Time for loading parser:        0.850s
  Time for CFA construction:      3.756s
    Time for parsing file(s):     1.068s
    Time for AST to CFA:          1.212s
    Time for CFA sanity check:    0.292s
    Time for post-processing:     0.949s
      Time for var class.:        0.523s
Time for Analysis:              120.163s
CPU time for analysis:          120.160s
Time for analyzing result:        0.072s
Total time for CPAchecker:      125.877s
Total CPU time for CPAchecker:  125.850s
Time for statistics:              1.169s

Time for Garbage Collector:       5.672s (in 129 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                298MB (   284 MiB) max;    160MB (   153 MiB) avg;    311MB (   297 MiB) peak
Used non-heap memory:             39MB (    37 MiB) max;     37MB (    36 MiB) avg;     40MB (    38 MiB) peak
Allocated heap memory:           354MB (   337 MiB) max;    246MB (   235 MiB) avg
Allocated non-heap memory:        41MB (    39 MiB) max;     39MB (    37 MiB) avg
Total process virtual memory:   8134MB (  7757 MiB) max;   8129MB (  7752 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
