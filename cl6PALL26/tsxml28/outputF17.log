scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.4-simple/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--video--backlight--tdo24m.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_rb32v0d2/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function spi_setup to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __list_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function lcd_device_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function lcd_device_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 4315: Ignoring call via function pointer tdo24m_set_mode::__cil_tmp18 for which no suitable target was found in line: tmp___8 = (*__cil_tmp18)(lcd, mode); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Assuming external function spi_sync to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 4143: Ignoring call via function pointer tdo24m_power_on::__cil_tmp11 for which no suitable target was found in line: err = (*__cil_tmp11)(lcd, __cil_tmp14); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 4143: Ignoring function call through function pointer *__cil_tmp11: err = (*__cil_tmp11)(lcd, __cil_tmp14); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            217 (1% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            207 (95%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         10 (5%)
  Times precision was empty:       54 (25%)
  Times precision was {false}:     11 (5%)
  Times result was cached:         75 (35%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      77 (35%)
  Times result was 'false':        13 (6%)
Number of strengthen sat checks:   0
Number of coverage checks:         1286
  BDD entailment checks:           112
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       304
Number of predicates discovered:          2
Number of abstraction locations:          3
Max number of predicates per location:    1
Avg number of predicates per location:    1
Total predicates per abstraction:         163
Max number of predicates per abstraction: 1
Avg number of predicates per abstraction: 1.85
Number of irrelevant predicates:          16 (10%)
Number of preds handled by boolean abs:   77 (47%)
  Total number of models for allsat:      72
  Max number of models for allsat:        1
  Avg number of models for allsat:        0.94

Time for post operator:                  3.198s
  Time for path formula creation:        3.101s
Time for strengthen operator:            0.075s
Time for prec operator:                  7.679s
  Time for abstraction:                  7.622s (Max:     0.168s, Count: 217)
    Boolean abstraction:                 5.958s
    Solving time:                        6.139s (Max:     0.142s)
    Model enumeration time:              0.285s
    Time for BDD construction:           0.042s (Max:     0.007s)
Time for merge operator:                 1.045s
Time for coverage check:                 0.002s
  Time for BDD entailment checks:        0.001s
Total time for SMT solver (w/o itp):     6.424s

Number of path formula cache hits:   7215 (32%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     2.886s

Total number of created targets for pointer analysis: 5172
   Number of created targets for uf: *unsigned_char is 15
   Number of created targets for uf: *unsigned_int is 88


Number of BDD nodes:                               202
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         144 (count: 692, min: 0, max: 56, avg: 0.21)
Time for BDD node cleanup:                             0.000s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.215s
Automaton transfers with branching:                0
Automaton transfer successors:                        21993 (count: 21993, min: 1, max: 1, avg: 1.00) [1 x 21993]

CPA algorithm statistics
------------------------
Number of iterations:            5004
Max size of waitlist:            23
Average size of waitlist:        12
Number of computed successors:   5738
Max successors for one state:    2
Number of times merged:          587
Number of times stopped:         692
Number of times breaked:         2

Total time for CPA algorithm:        13.808s (Max:     9.371s)
  Time for choose from waitlist:      0.033s
  Time for precision adjustment:      7.938s
  Time for transfer relation:         4.333s
  Time for merge operator:            1.166s
  Time for stop operator:             0.065s
  Time for adding to reached set:     0.084s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   2
Avg. length of target path (in blocks):                   5 (count: 2, min: 2, max: 3, avg: 2.50)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.107s
  Counterexample analysis:                             0.067s (Max:     0.035s, Calls: 2)
    Refinement sat check:                              0.056s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.007s
  Precision update:                                    0.002s
  ARG update:                                          0.028s

Length of refined path (in blocks):                       5 (count: 2, min: 2, max: 3, avg: 2.50)
Number of affected states:                                3 (count: 2, min: 1, max: 2, avg: 1.50)
Length (states) of path with itp 'true':                  0 (count: 2, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:         3 (count: 2, min: 1, max: 2, avg: 1.50)
Length (states) of path with itp 'false':                 0 (count: 2, min: 0, max: 0, avg: 0.00)
Different non-trivial interpolants along paths:           0 (count: 2, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:               1 (count: 2, min: 0, max: 1, avg: 0.50)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                2
Number of successful refinements:     2
Number of failed refinements:         0
Max. size of reached set before ref.: 1284
Max. size of reached set after ref.:  3
Avg. size of reached set before ref.: 784.00
Avg. size of reached set after ref.:  3.00

Total time for CEGAR algorithm:      13.940s
Time for refinements:                 0.131s
Average time for refinement:          0.065s
Max time for refinement:              0.077s

Code Coverage
-----------------------------
  Function coverage:      0.684
  Visited lines:          1383
  Total lines:            1471
  Line coverage:          0.940
  Visited conditions:     90
  Total conditions:       112
  Condition coverage:     0.804

CPAchecker general statistics
-----------------------------
Number of program locations:     1678
Number of CFA edges:             1754
Number of relevant variables:    335
Number of functions:             38
Number of loops:                 2
Size of reached set:             3472
  Number of reached locations:   347 (21%)
    Avg states per location:     10
    Max states per location:     61 (at node N107)
  Number of reached functions:   26 (68%)
  Number of partitions:          3472
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0

Time for analysis setup:          4.699s
  Time for loading CPAs:          0.870s
  Time for loading parser:        0.706s
  Time for CFA construction:      3.000s
    Time for parsing file(s):     0.981s
    Time for AST to CFA:          1.016s
    Time for CFA sanity check:    0.145s
    Time for post-processing:     0.636s
      Time for var class.:        0.287s
Time for Analysis:               13.940s
CPU time for analysis:           13.950s
Time for analyzing result:        0.004s
Total time for CPAchecker:       18.644s
Total CPU time for CPAchecker:   18.630s
Time for statistics:              0.157s

Time for Garbage Collector:       0.301s (in 16 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 66MB (    63 MiB) max;     43MB (    41 MiB) avg;     72MB (    69 MiB) peak
Used non-heap memory:             37MB (    35 MiB) max;     32MB (    30 MiB) avg;     37MB (    35 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        39MB (    37 MiB) max;     34MB (    32 MiB) avg
Total process virtual memory:   8134MB (  7757 MiB) max;   8113MB (  7737 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
