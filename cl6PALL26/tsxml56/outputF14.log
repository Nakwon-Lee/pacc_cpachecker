scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.4-simple/32_1_cilled_true-unreach-call_ok_nondet_linux-3_false-termination.4-32_1-drivers--usb--serial--mos7840.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_3q93n88k/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 3692: Dead code detected: Goto: case_1 (CFACreationUtils.addEdgeToCFA, INFO)

line 3695: Dead code detected: Goto: case_2 (CFACreationUtils.addEdgeToCFA, INFO)

line 3698: Dead code detected: Goto: case_4 (CFACreationUtils.addEdgeToCFA, INFO)

line 3704: Dead code detected: Goto: switch_default (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label switch_default is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_4 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_1 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_2 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label while_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_submit_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tty_port_tty_get to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tty_flip_buffer_push to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tty_kref_put to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_control_msg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tty_get_baud_rate to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __wake_up to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __might_sleep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _copy_to_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_clear_halt to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __raw_spin_lock_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_alloc_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __init_waitqueue_head to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_free_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 15919: Destroying the void* pointer mos7840_write::__cil_tmp68 produces garbage or the memory pointed by it is unused: mos7840_write(var_group1, var_group2, var_mos7840_write_24_p2, var_mos7840_write_24_p3); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function usb_kill_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function prepare_to_wait to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function schedule to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function finish_wait to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 10629: Destroying the void* pointer mos7840_write::__cil_tmp68 produces garbage or the memory pointed by it is unused: status = mos7840_write(tty, port, __cil_tmp36, 1); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 10833: Destroying the void* pointer mos7840_write::__cil_tmp68 produces garbage or the memory pointed by it is unused: status = mos7840_write(tty, port, __cil_tmp32, 1); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function interruptible_sleep_on_timeout to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            677 (0% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            640 (95%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         37 (5%)
  Times precision was empty:       200 (30%)
  Times precision was {false}:     88 (13%)
  Times result was cached:         337 (50%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      52 (8%)
  Times result was 'false':        42 (6%)
Number of strengthen sat checks:   0
Number of coverage checks:         30552
  BDD entailment checks:           224
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       2915
Number of predicates discovered:          2
Number of abstraction locations:          16
Max number of predicates per location:    1
Avg number of predicates per location:    1
Total predicates per abstraction:         477
Max number of predicates per abstraction: 1
Avg number of predicates per abstraction: 3.41
Number of irrelevant predicates:          131 (27%)
Number of preds handled by boolean abs:   52 (11%)
  Total number of models for allsat:      50
  Max number of models for allsat:        1
  Avg number of models for allsat:        0.96

Time for post operator:                 12.412s
  Time for path formula creation:       12.015s
Time for strengthen operator:            0.473s
Time for prec operator:                 33.520s
  Time for abstraction:                 33.223s (Max:    14.493s, Count: 677)
    Boolean abstraction:                14.449s
    Solving time:                       27.681s (Max:    14.338s)
    Model enumeration time:              2.060s
    Time for BDD construction:           0.056s (Max:     0.052s)
Time for merge operator:                 4.998s
Time for coverage check:                 0.011s
  Time for BDD entailment checks:        0.003s
Total time for SMT solver (w/o itp):    29.741s

Number of path formula cache hits:   252014 (63%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    10.999s

Total number of created targets for pointer analysis: 1643
   Number of created targets for uf: *unsigned_short_int is 2
   Number of created targets for uf: *signed_int is 7
   Number of created targets for uf: *unsigned_char is 23
   Number of created targets for uf: *_Bool is 15
   Number of created targets for uf: *char is 5
   Number of created targets for uf: *unsigned_int is 13


Number of BDD nodes:                               202
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                          94 (count: 1191, min: 0, max: 9, avg: 0.08)
Time for BDD node cleanup:                             0.001s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  1.002s
  Time for transition matches:                         0.518s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.000s
Automaton transfers with branching:                0
Automaton transfer successors:                       393111 (count: 393111, min: 1, max: 1, avg: 1.00) [1 x 393111]

CPA algorithm statistics
------------------------
Number of iterations:            121121
Max size of waitlist:            48
Average size of waitlist:        24
Number of computed successors:   136858
Max successors for one state:    2
Number of times merged:          15164
Number of times stopped:         15377
Number of times breaked:         13

Total time for CPA algorithm:        62.245s (Max:    17.001s)
  Time for choose from waitlist:      0.221s
  Time for precision adjustment:     35.129s
  Time for transfer relation:        18.979s
  Time for merge operator:            5.519s
  Time for stop operator:             0.379s
  Time for adding to reached set:     0.570s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   13
Avg. length of target path (in blocks):                  52 (count: 13, min: 2, max: 5, avg: 4.00)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   1.492s
  Counterexample analysis:                             0.950s (Max:     0.288s, Calls: 13)
    Refinement sat check:                              0.846s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.008s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.017s
  Precision update:                                    0.008s
  ARG update:                                          0.462s

Length of refined path (in blocks):                      52 (count: 13, min: 2, max: 5, avg: 4.00)
Number of affected states:                               39 (count: 13, min: 1, max: 4, avg: 3.00)
Length (states) of path with itp 'true':                  0 (count: 13, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:        39 (count: 13, min: 1, max: 4, avg: 3.00)
Length (states) of path with itp 'false':                 0 (count: 13, min: 0, max: 0, avg: 0.00)
Different non-trivial interpolants along paths:           0 (count: 13, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:              26 (count: 13, min: 0, max: 3, avg: 2.00)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                13
Number of successful refinements:     13
Number of failed refinements:         0
Max. size of reached set before ref.: 10475
Max. size of reached set after ref.:  3
Avg. size of reached set before ref.: 8803.92
Avg. size of reached set after ref.:  3.00

Total time for CEGAR algorithm:      63.918s
Time for refinements:                 1.672s
Average time for refinement:          0.128s
Max time for refinement:              0.342s

Code Coverage
-----------------------------
  Function coverage:      0.811
  Visited lines:          8160
  Total lines:            8661
  Line coverage:          0.942
  Visited conditions:     912
  Total conditions:       998
  Condition coverage:     0.914

CPAchecker general statistics
-----------------------------
Number of program locations:     9928
Number of CFA edges:             10559
Number of relevant variables:    2363
Number of functions:             74
Number of loops:                 16
Size of reached set:             7028
  Number of reached locations:   3193 (32%)
    Avg states per location:     2
    Max states per location:     77 (at node N333)
  Number of reached functions:   60 (81%)
  Number of partitions:          7028
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0

Time for analysis setup:          7.845s
  Time for loading CPAs:          1.276s
  Time for loading parser:        0.831s
  Time for CFA construction:      5.584s
    Time for parsing file(s):     1.314s
    Time for AST to CFA:          1.856s
    Time for CFA sanity check:    0.600s
    Time for post-processing:     1.626s
      Time for var class.:        0.846s
Time for Analysis:               63.918s
CPU time for analysis:           63.910s
Time for analyzing result:        0.007s
Total time for CPAchecker:       71.769s
Total CPU time for CPAchecker:   71.740s
Time for statistics:              0.269s

Time for Garbage Collector:       2.913s (in 95 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                197MB (   188 MiB) max;     81MB (    77 MiB) avg;    210MB (   200 MiB) peak
Used non-heap memory:             39MB (    38 MiB) max;     36MB (    35 MiB) avg;     40MB (    38 MiB) peak
Allocated heap memory:           227MB (   216 MiB) max;    141MB (   135 MiB) avg
Allocated non-heap memory:        41MB (    39 MiB) max;     38MB (    36 MiB) avg
Total process virtual memory:   8201MB (  7821 MiB) max;   8178MB (  7799 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
