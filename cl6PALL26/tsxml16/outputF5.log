scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.4-simple/43_1a_cilled_true-unreach-call_ok_nondet_linux-43_1a-drivers--usb--serial--metro-usb_false-termination.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_pr7z1aw8/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_dev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_control_msg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_submit_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tty_port_tty_get to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tty_flip_buffer_push to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tty_kref_put to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_unlink_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_kill_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_clear_halt to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_final_state to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __raw_spin_lock_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            52 (0% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            29 (56%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         23 (44%)
  Times precision was empty:       11 (21%)
  Times precision was {false}:     14 (27%)
  Times result was cached:         18 (35%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      9 (17%)
  Times result was 'false':        19 (37%)
Number of strengthen sat checks:   0
Number of coverage checks:         614
  BDD entailment checks:           18
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       336
Number of predicates discovered:          2
Number of abstraction locations:          4
Max number of predicates per location:    1
Avg number of predicates per location:    1
Total predicates per abstraction:         41
Max number of predicates per abstraction: 1
Avg number of predicates per abstraction: 1.78
Number of irrelevant predicates:          25 (61%)
Number of preds handled by boolean abs:   9 (22%)
  Total number of models for allsat:      10
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.11

Time for post operator:                  1.741s
  Time for path formula creation:        1.678s
Time for strengthen operator:            0.079s
Time for prec operator:                  1.050s
  Time for abstraction:                  1.008s (Max:     0.400s, Count: 52)
    Boolean abstraction:                 0.680s
    Solving time:                        0.565s (Max:     0.305s)
    Model enumeration time:              0.150s
    Time for BDD construction:           0.003s (Max:     0.001s)
Time for merge operator:                 0.328s
Time for coverage check:                 0.002s
  Time for BDD entailment checks:        0.000s
Total time for SMT solver (w/o itp):     0.715s

Number of path formula cache hits:   6007 (53%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     1.617s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               202
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                          17 (count: 169, min: 0, max: 8, avg: 0.10)
Time for BDD node cleanup:                             0.001s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.174s
Automaton transfers with branching:                0
Automaton transfer successors:                        11181 (count: 11181, min: 1, max: 1, avg: 1.00) [1 x 11181]

CPA algorithm statistics
------------------------
Number of iterations:            2810
Max size of waitlist:            13
Average size of waitlist:        8
Number of computed successors:   3159
Max successors for one state:    2
Number of times merged:          298
Number of times stopped:         312
Number of times breaked:         4

Total time for CPA algorithm:         4.451s (Max:     1.431s)
  Time for choose from waitlist:      0.015s
  Time for precision adjustment:      1.241s
  Time for transfer relation:         2.582s
  Time for merge operator:            0.375s
  Time for stop operator:             0.060s
  Time for adding to reached set:     0.050s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   4
Avg. length of target path (in blocks):                  12 (count: 4, min: 2, max: 5, avg: 3.00)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.116s
  Counterexample analysis:                             0.052s (Max:     0.027s, Calls: 4)
    Refinement sat check:                              0.022s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.006s
  Precision update:                                    0.003s
  ARG update:                                          0.048s

Length of refined path (in blocks):                      12 (count: 4, min: 2, max: 5, avg: 3.00)
Number of affected states:                                7 (count: 4, min: 0, max: 4, avg: 1.75)
Length (states) of path with itp 'true':                  1 (count: 4, min: 0, max: 1, avg: 0.25)
Length (states) of path with itp non-trivial itp:         7 (count: 4, min: 0, max: 4, avg: 1.75)
Length (states) of path with itp 'false':                 0 (count: 4, min: 0, max: 0, avg: 0.00)
Different non-trivial interpolants along paths:           0 (count: 4, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:               4 (count: 4, min: 0, max: 3, avg: 1.00)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                4
Number of successful refinements:     4
Number of failed refinements:         0
Max. size of reached set before ref.: 1268
Max. size of reached set after ref.:  196
Avg. size of reached set before ref.: 596.50
Avg. size of reached set after ref.:  51.25

Total time for CEGAR algorithm:       4.606s
Time for refinements:                 0.147s
Average time for refinement:          0.036s
Max time for refinement:              0.055s

Code Coverage
-----------------------------
  Function coverage:      0.875
  Visited lines:          2320
  Total lines:            2338
  Line coverage:          0.992
  Visited conditions:     134
  Total conditions:       142
  Condition coverage:     0.944

CPAchecker general statistics
-----------------------------
Number of program locations:     2560
Number of CFA edges:             2654
Number of relevant variables:    570
Number of functions:             32
Number of loops:                 3
Size of reached set:             648
  Number of reached locations:   471 (18%)
    Avg states per location:     1
    Max states per location:     7 (at node N109)
  Number of reached functions:   28 (88%)
  Number of partitions:          648
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0

Time for analysis setup:          5.123s
  Time for loading CPAs:          0.999s
  Time for loading parser:        0.760s
  Time for CFA construction:      3.236s
    Time for parsing file(s):     0.961s
    Time for AST to CFA:          1.077s
    Time for CFA sanity check:    0.289s
    Time for post-processing:     0.754s
      Time for var class.:        0.359s
Time for Analysis:                4.606s
CPU time for analysis:            4.600s
Time for analyzing result:        0.001s
Total time for CPAchecker:        9.737s
Total CPU time for CPAchecker:    9.720s
Time for statistics:              0.123s

Time for Garbage Collector:       0.226s (in 10 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 64MB (    61 MiB) max;     37MB (    35 MiB) avg;     69MB (    66 MiB) peak
Used non-heap memory:             34MB (    33 MiB) max;     28MB (    26 MiB) avg;     35MB (    33 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        36MB (    35 MiB) max;     29MB (    28 MiB) avg
Total process virtual memory:   8066MB (  7692 MiB) max;   8034MB (  7661 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
