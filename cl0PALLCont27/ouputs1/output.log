scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/elevator_spec1_product09_true-unreach-call_true-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_d6kt1eaq/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 364: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 410: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 425: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 448: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 809: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1204: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1444: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1755: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1831: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1980: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1989: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2023: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2032: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2072: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2152: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2165: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2517: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2551: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2607: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2621: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3193: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3247: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3286: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3325: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 201: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            179 (0% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            63 (35%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         116 (65%)
  Times precision was empty:       3 (2%)
  Times precision was {false}:     115 (64%)
  Times result was cached:         0 (0%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      61 (34%)
  Times result was 'false':        110 (61%)
Number of strengthen sat checks:   0
Number of coverage checks:         114719
  BDD entailment checks:           361
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       882
Number of predicates discovered:          51
Number of abstraction locations:          2
Max number of predicates per location:    50
Avg number of predicates per location:    25
Total predicates per abstraction:         2323
Max number of predicates per abstraction: 50
Avg number of predicates per abstraction: 13.20
Number of irrelevant predicates:          115 (5%)
Number of preds handled by boolean abs:   2208 (95%)
  Total number of models for allsat:      222197
  Max number of models for allsat:        18712
  Avg number of models for allsat:        3642.57

Time for post operator:                  3.048s
  Time for path formula creation:        2.884s
Time for strengthen operator:            0.212s
Time for prec operator:                853.923s
  Time for abstraction:                853.704s (Max:    73.584s, Count: 179)
    Boolean abstraction:               850.458s
    Solving time:                        8.791s (Max:     0.310s)
    Model enumeration time:            817.438s
    Time for BDD construction:          24.929s (Max:     2.201s)
Time for merge operator:                 1.135s
Time for coverage check:                 0.081s
  Time for BDD entailment checks:        0.069s
Total time for SMT solver (w/o itp):   826.229s

Number of path formula cache hits:   242999 (77%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     2.638s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               253156
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       70281 (count: 29756, min: 0, max: 8135, avg: 2.36)
Time for BDD node cleanup:                             0.019s
Time for BDD garbage collection:                       0.421s (in 143 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.462s
Automaton transfers with branching:                0
Automaton transfer successors:                       273425 (count: 273425, min: 1, max: 1, avg: 1.00) [1 x 273425]

CPA algorithm statistics
------------------------
Number of iterations:            203354
Max size of waitlist:            29
Average size of waitlist:        14
Number of computed successors:   260692
Max successors for one state:    2
Number of times merged:          57179
Number of times stopped:         57186
Number of times breaked:         6

Total time for CPA algorithm:       865.113s (Max:   509.509s)
  Time for choose from waitlist:      0.167s
  Time for precision adjustment:    855.749s
  Time for transfer relation:         5.725s
  Time for merge operator:            1.920s
  Time for stop operator:             0.344s
  Time for adding to reached set:     0.343s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   6
Avg. length of target path (in blocks):                  19 (count: 6, min: 2, max: 5, avg: 3.17)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   3.723s
  Counterexample analysis:                             2.985s (Max:     0.867s, Calls: 6)
    Refinement sat check:                              2.579s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.001s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.026s
  Precision update:                                    0.005s
  ARG update:                                          0.626s

Length of refined path (in blocks):                      19 (count: 6, min: 2, max: 5, avg: 3.17)
Number of affected states:                               13 (count: 6, min: 1, max: 4, avg: 2.17)
Length (states) of path with itp 'true':                  0 (count: 6, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:        13 (count: 6, min: 1, max: 4, avg: 2.17)
Length (states) of path with itp 'false':                 0 (count: 6, min: 0, max: 0, avg: 0.00)
Different non-trivial interpolants along paths:           7 (count: 6, min: 0, max: 3, avg: 1.17)
Equal non-trivial interpolants along paths:               0 (count: 6, min: 0, max: 0, avg: 0.00)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                6
Number of successful refinements:     6
Number of failed refinements:         0
Max. size of reached set before ref.: 53607
Max. size of reached set after ref.:  3775
Avg. size of reached set before ref.: 29275.17
Avg. size of reached set after ref.:  3775.00

Total time for CEGAR algorithm:     869.214s
Time for refinements:                 4.060s
Average time for refinement:          0.676s
Max time for refinement:              1.003s

Code Coverage
-----------------------------
  Function coverage:      0.600
  Visited lines:          994
  Total lines:            1684
  Line coverage:          0.590
  Visited conditions:     594
  Total conditions:       750
  Condition coverage:     0.792

CPAchecker general statistics
-----------------------------
Number of program locations:     2210
Number of CFA edges:             2696
Number of relevant variables:    284
Number of functions:             70
Number of loops:                 9
Size of reached set:             50396
  Number of reached locations:   1132 (51%)
    Avg states per location:     44
    Max states per location:     359 (at node N822)
  Number of reached functions:   42 (60%)
  Number of partitions:          50384
    Avg size of partitions:      1
    Max size of partitions:      13 (with key [N436 (before lines 601-629), Function cleanup called from node N2525, stack depth 4 [c0b41d6], stack [main, runTest, test, cleanup]])
  Number of target states:       0

Time for analysis setup:          3.011s
  Time for loading CPAs:          0.623s
  Time for loading parser:        0.572s
  Time for CFA construction:      1.655s
    Time for parsing file(s):     0.455s
    Time for AST to CFA:          0.460s
    Time for CFA sanity check:    0.185s
    Time for post-processing:     0.413s
      Time for var class.:        0.196s
Time for Analysis:              869.215s
CPU time for analysis:          869.160s
Time for analyzing result:        0.037s
Total time for CPAchecker:      872.231s
Total CPU time for CPAchecker:  872.160s
Time for statistics:              0.633s

Time for Garbage Collector:       2.649s (in 162 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                159MB (   151 MiB) max;    118MB (   112 MiB) avg;    163MB (   156 MiB) peak
Used non-heap memory:             35MB (    34 MiB) max;     35MB (    33 MiB) avg;     36MB (    34 MiB) peak
Allocated heap memory:           185MB (   177 MiB) max;    168MB (   160 MiB) avg
Allocated non-heap memory:        37MB (    36 MiB) max;     37MB (    36 MiB) avg
Total process virtual memory:   8138MB (  7761 MiB) max;   8128MB (  7751 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
