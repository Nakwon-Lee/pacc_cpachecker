scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.0/module_get_put-drivers-video-aty-aty128fb.ko_true-unreach-call.cil.out.i.pp.i


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_r0d5zc2d/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 6299: Dead code detected: __asm__ volatile ("call __get_user_1": "=a" (__ret_gu), "=d" (__val_gu): "0" ((__u32 *)arg)); (CFACreationUtils.addEdgeToCFA, INFO)

line 6301: Dead code detected: __asm__ volatile ("call __get_user_2": "=a" (__ret_gu), "=d" (__val_gu): "0" ((__u32 *)arg)); (CFACreationUtils.addEdgeToCFA, INFO)

line 6306: Dead code detected: __asm__ volatile ("call __get_user_8": "=a" (__ret_gu), "=d" (__val_gu): "0" ((__u32 *)arg)); (CFACreationUtils.addEdgeToCFA, INFO)

line 6297: Dead code detected: Goto: switch_default (CFACreationUtils.addEdgeToCFA, INFO)

lines 6355-6356: Dead code detected: __asm__ volatile ("call __put_user_1": "=a" (__ret_pu): "0" (__pu_val),
                             "c" ((__u32 *)arg): "ebx"); (CFACreationUtils.addEdgeToCFA, INFO)

lines 6358-6359: Dead code detected: __asm__ volatile ("call __put_user_2": "=a" (__ret_pu): "0" (__pu_val),
                             "c" ((__u32 *)arg): "ebx"); (CFACreationUtils.addEdgeToCFA, INFO)

lines 6365-6366: Dead code detected: __asm__ volatile ("call __put_user_8": "=a" (__ret_pu): "0" (__pu_val),
                             "c" ((__u32 *)arg): "ebx"); (CFACreationUtils.addEdgeToCFA, INFO)

line 6353: Dead code detected: Goto: switch_default___0 (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label switch_default is not reachable. (CFAFunctionBuilder.leave, INFO)

line 6445: Dead code detected: [(state.event) == (pdev->dev.power.power_state.event)] (CFACreationUtils.addEdgeToCFA, INFO)

line 6445: Dead code detected: [!((state.event) == (pdev->dev.power.power_state.event))] (CFACreationUtils.addEdgeToCFA, INFO)

line 6446: Dead code detected: return (0); (CFACreationUtils.addEdgeToCFA, INFO)

line 6451: Dead code detected: printk("<7>aty128fb: suspending...\n"); (CFACreationUtils.addEdgeToCFA, INFO)

line 6461: Dead code detected: [!((state.event) != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 6463: Dead code detected: aty128_set_suspend(par, 1); (CFACreationUtils.addEdgeToCFA, INFO)

line 6469: Dead code detected: console_unlock(); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __pci_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function might_fault to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock_nested to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 3815: Ignoring function call through function pointer *(bd->ops->update_status): (*(bd->ops->update_status))(bd); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function console_lock to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function console_unlock to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_save_state to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_enable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __request_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function framebuffer_alloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_ioremap_bar to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ioremap_nocache to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_map_rom to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_unmap_rom to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iounmap to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function framebuffer_release to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __release_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_set_power_state to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strlcat to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_find_mode to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_alloc_cmap to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_find_capability to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snprintf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function backlight_device_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_bl_default_curve to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function register_framebuffer to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_pan_display to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_set_cmap to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_set_suspend to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            34607 (2% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            34300 (99%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         307 (1%)
  Times precision was empty:       3724 (11%)
  Times precision was {false}:     886 (3%)
  Times result was cached:         28109 (81%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      1888 (5%)
  Times result was 'false':        1211 (3%)
Number of strengthen sat checks:   0
Number of coverage checks:         131770
  BDD entailment checks:           21470
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       346
Number of predicates discovered:          3
Number of abstraction locations:          14
Max number of predicates per location:    2
Avg number of predicates per location:    1
Total predicates per abstraction:         51751
Max number of predicates per abstraction: 2
Avg number of predicates per abstraction: 18.66
Number of irrelevant predicates:          31256 (60%)
Number of preds handled by boolean abs:   2461 (5%)
  Total number of models for allsat:      1836
  Max number of models for allsat:        2
  Avg number of models for allsat:        0.97

Time for post operator:                 36.756s
  Time for path formula creation:       33.843s
Time for strengthen operator:            2.582s
Time for prec operator:                 53.945s
  Time for abstraction:                 51.714s (Max:     1.103s, Count: 34607)
    Boolean abstraction:                22.016s
    Solving time:                       31.038s (Max:     0.991s)
    Model enumeration time:              1.274s
    Time for BDD construction:           0.070s (Max:     0.002s)
Time for merge operator:                 3.155s
Time for coverage check:                 0.127s
  Time for BDD entailment checks:        0.115s
Total time for SMT solver (w/o itp):    32.312s

Number of path formula cache hits:   1939896 (84%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    22.092s

Total number of created targets for pointer analysis: 124884
   Number of created targets for uf: *signed_int is 265
   Number of created targets for uf: *unsigned_char is 325
   Number of created targets for uf: *(struct_pci_dev)* is 34
   Number of created targets for uf: *unsigned_int is 2423


Number of BDD nodes:                               205
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        3723 (count: 41280, min: 0, max: 220, avg: 0.09)
Time for BDD node cleanup:                             0.023s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  3.421s
  Time for transition matches:                         1.687s
  Time for transition assertions:                      0.002s
  Time for transition actions:                         0.005s
Automaton transfers with branching:                0
Automaton transfer successors:                      2231546 (count: 2231546, min: 1, max: 1, avg: 1.00) [1 x 2231546]

CPA algorithm statistics
------------------------
Number of iterations:            1624769
Max size of waitlist:            192
Average size of waitlist:        31
Number of computed successors:   1699517
Max successors for one state:    2
Number of times merged:          55150
Number of times stopped:         73577
Number of times breaked:         12

Total time for CPA algorithm:       160.484s (Max:    37.755s)
  Time for choose from waitlist:      0.819s
  Time for precision adjustment:     68.589s
  Time for transfer relation:        72.589s
  Time for merge operator:            4.223s
  Time for stop operator:             2.400s
  Time for adding to reached set:     5.450s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   12
Avg. length of target path (in blocks):                 109 (count: 12, min: 1, max: 21, avg: 9.08)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   6.279s
  Counterexample analysis:                             2.159s (Max:     0.371s, Calls: 12)
    Refinement sat check:                              1.955s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.006s
  Precision update:                                    0.008s
  ARG update:                                          4.079s

Length of refined path (in blocks):                      99 (count: 12, min: 1, max: 21, avg: 8.25)
Number of affected states:                               86 (count: 12, min: 0, max: 20, avg: 7.17)
Length (states) of path with itp 'true':                  1 (count: 12, min: 0, max: 1, avg: 0.08)
Length (states) of path with itp non-trivial itp:        86 (count: 12, min: 0, max: 20, avg: 7.17)
Length (states) of path with itp 'false':                 3 (count: 12, min: 0, max: 1, avg: 0.25)
Different non-trivial interpolants along paths:           0 (count: 12, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:              76 (count: 12, min: 0, max: 19, avg: 6.33)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                12
Number of successful refinements:     12
Number of failed refinements:         0
Max. size of reached set before ref.: 239908
Max. size of reached set after ref.:  160712
Avg. size of reached set before ref.: 121700.67
Avg. size of reached set after ref.:  13412.67

Total time for CEGAR algorithm:     168.085s
Time for refinements:                 7.456s
Average time for refinement:          0.621s
Max time for refinement:              1.101s

Code Coverage
-----------------------------
  Function coverage:      0.905
  Visited lines:          2128
  Total lines:            2192
  Line coverage:          0.971
  Visited conditions:     364
  Total conditions:       388
  Condition coverage:     0.938

CPAchecker general statistics
-----------------------------
Number of program locations:     2764
Number of CFA edges:             3148
Number of relevant variables:    403
Number of functions:             74
Number of loops:                 12
Size of reached set:             325274
  Number of reached locations:   1287 (47%)
    Avg states per location:     252
    Max states per location:     12870 (at node N23)
  Number of reached functions:   67 (91%)
  Number of partitions:          325273
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N2363 (before line 6706), Function main called from node N2215, stack depth 1 [6d3c232f], stack [main]])
  Number of target states:       0

Time for analysis setup:          5.740s
  Time for loading CPAs:          1.036s
  Time for loading parser:        0.774s
  Time for CFA construction:      3.761s
    Time for parsing file(s):     1.048s
    Time for AST to CFA:          1.299s
    Time for CFA sanity check:    0.271s
    Time for post-processing:     0.964s
      Time for var class.:        0.514s
Time for Analysis:              168.085s
CPU time for analysis:          168.080s
Time for analyzing result:        0.294s
Total time for CPAchecker:      173.841s
Total CPU time for CPAchecker:  173.810s
Time for statistics:              2.952s

Time for Garbage Collector:      19.027s (in 243 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                438MB (   418 MiB) max;    217MB (   207 MiB) avg;    480MB (   458 MiB) peak
Used non-heap memory:             40MB (    38 MiB) max;     39MB (    37 MiB) avg;     41MB (    39 MiB) peak
Allocated heap memory:           536MB (   511 MiB) max;    337MB (   321 MiB) avg
Allocated non-heap memory:        42MB (    40 MiB) max;     41MB (    39 MiB) avg
Total process virtual memory:   8202MB (  7822 MiB) max;   8156MB (  7778 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
