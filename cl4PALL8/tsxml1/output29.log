scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.0/module_get_put-drivers-video-aty-aty128fb.ko_true-unreach-call.cil.out.i.pp.i


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_5hh8hqvq/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 6299: Dead code detected: __asm__ volatile ("call __get_user_1": "=a" (__ret_gu), "=d" (__val_gu): "0" ((__u32 *)arg)); (CFACreationUtils.addEdgeToCFA, INFO)

line 6301: Dead code detected: __asm__ volatile ("call __get_user_2": "=a" (__ret_gu), "=d" (__val_gu): "0" ((__u32 *)arg)); (CFACreationUtils.addEdgeToCFA, INFO)

line 6306: Dead code detected: __asm__ volatile ("call __get_user_8": "=a" (__ret_gu), "=d" (__val_gu): "0" ((__u32 *)arg)); (CFACreationUtils.addEdgeToCFA, INFO)

line 6297: Dead code detected: Goto: switch_default (CFACreationUtils.addEdgeToCFA, INFO)

lines 6355-6356: Dead code detected: __asm__ volatile ("call __put_user_1": "=a" (__ret_pu): "0" (__pu_val),
                             "c" ((__u32 *)arg): "ebx"); (CFACreationUtils.addEdgeToCFA, INFO)

lines 6358-6359: Dead code detected: __asm__ volatile ("call __put_user_2": "=a" (__ret_pu): "0" (__pu_val),
                             "c" ((__u32 *)arg): "ebx"); (CFACreationUtils.addEdgeToCFA, INFO)

lines 6365-6366: Dead code detected: __asm__ volatile ("call __put_user_8": "=a" (__ret_pu): "0" (__pu_val),
                             "c" ((__u32 *)arg): "ebx"); (CFACreationUtils.addEdgeToCFA, INFO)

line 6353: Dead code detected: Goto: switch_default___0 (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label switch_default is not reachable. (CFAFunctionBuilder.leave, INFO)

line 6445: Dead code detected: [(state.event) == (pdev->dev.power.power_state.event)] (CFACreationUtils.addEdgeToCFA, INFO)

line 6445: Dead code detected: [!((state.event) == (pdev->dev.power.power_state.event))] (CFACreationUtils.addEdgeToCFA, INFO)

line 6446: Dead code detected: return (0); (CFACreationUtils.addEdgeToCFA, INFO)

line 6451: Dead code detected: printk("<7>aty128fb: suspending...\n"); (CFACreationUtils.addEdgeToCFA, INFO)

line 6461: Dead code detected: [!((state.event) != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 6463: Dead code detected: aty128_set_suspend(par, 1); (CFACreationUtils.addEdgeToCFA, INFO)

line 6469: Dead code detected: console_unlock(); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __pci_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function might_fault to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock_nested to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 3815: Ignoring function call through function pointer *(bd->ops->update_status): (*(bd->ops->update_status))(bd); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function console_lock to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function console_unlock to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_save_state to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_enable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __request_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function framebuffer_alloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_ioremap_bar to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ioremap_nocache to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_map_rom to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_unmap_rom to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iounmap to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function framebuffer_release to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __release_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strlcat to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_find_mode to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_alloc_cmap to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_find_capability to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snprintf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function backlight_device_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_bl_default_curve to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function register_framebuffer to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            573 (1% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            544 (95%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         29 (5%)
  Times precision was empty:       303 (53%)
  Times precision was {false}:     26 (5%)
  Times result was cached:         134 (23%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      110 (19%)
  Times result was 'false':        53 (9%)
Number of strengthen sat checks:   0
Number of coverage checks:         4411
  BDD entailment checks:           211
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       346
Number of predicates discovered:          3
Number of abstraction locations:          11
Max number of predicates per location:    2
Avg number of predicates per location:    1
Total predicates per abstraction:         276
Max number of predicates per abstraction: 2
Avg number of predicates per abstraction: 2.03
Number of irrelevant predicates:          47 (17%)
Number of preds handled by boolean abs:   116 (42%)
  Total number of models for allsat:      98
  Max number of models for allsat:        1
  Avg number of models for allsat:        0.89

Time for post operator:                  5.203s
  Time for path formula creation:        5.076s
Time for strengthen operator:            0.168s
Time for prec operator:                 11.175s
  Time for abstraction:                 10.966s (Max:     1.876s, Count: 573)
    Boolean abstraction:                 6.784s
    Solving time:                        8.399s (Max:     1.793s)
    Model enumeration time:              0.232s
    Time for BDD construction:           0.017s (Max:     0.004s)
Time for merge operator:                 0.709s
Time for coverage check:                 0.030s
  Time for BDD entailment checks:        0.018s
Total time for SMT solver (w/o itp):     8.632s

Number of path formula cache hits:   37107 (67%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     4.552s

Total number of created targets for pointer analysis: 27580
   Number of created targets for uf: *signed_int is 43
   Number of created targets for uf: *unsigned_char is 53
   Number of created targets for uf: *(struct_pci_dev)* is 3
   Number of created targets for uf: *unsigned_int is 558


Number of BDD nodes:                               203
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         200 (count: 1331, min: 0, max: 88, avg: 0.15)
Time for BDD node cleanup:                             0.009s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.356s
Automaton transfers with branching:                0
Automaton transfer successors:                        53655 (count: 53655, min: 1, max: 1, avg: 1.00) [1 x 53655]

CPA algorithm statistics
------------------------
Number of iterations:            34638
Max size of waitlist:            34
Average size of waitlist:        19
Number of computed successors:   37113
Max successors for one state:    2
Number of times merged:          2100
Number of times stopped:         2299
Number of times breaked:         7

Total time for CPA algorithm:        21.534s (Max:     4.848s)
  Time for choose from waitlist:      0.141s
  Time for precision adjustment:     11.909s
  Time for transfer relation:         7.342s
  Time for merge operator:            0.901s
  Time for stop operator:             0.183s
  Time for adding to reached set:     0.332s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   7
Avg. length of target path (in blocks):                  61 (count: 7, min: 1, max: 24, avg: 8.71)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   2.081s
  Counterexample analysis:                             1.859s (Max:     0.587s, Calls: 7)
    Refinement sat check:                              1.697s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.014s
  Precision update:                                    0.008s
  ARG update:                                          0.181s

Length of refined path (in blocks):                      60 (count: 7, min: 1, max: 23, avg: 8.57)
Number of affected states:                               53 (count: 7, min: 0, max: 22, avg: 7.57)
Length (states) of path with itp 'true':                  0 (count: 7, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:        53 (count: 7, min: 0, max: 22, avg: 7.57)
Length (states) of path with itp 'false':                 1 (count: 7, min: 0, max: 1, avg: 0.14)
Different non-trivial interpolants along paths:           0 (count: 7, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:              47 (count: 7, min: 0, max: 21, avg: 6.71)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                7
Number of successful refinements:     7
Number of failed refinements:         0
Max. size of reached set before ref.: 10633
Max. size of reached set after ref.:  22
Avg. size of reached set before ref.: 4731.57
Avg. size of reached set after ref.:  21.71

Total time for CEGAR algorithm:      23.770s
Time for refinements:                 2.236s
Average time for refinement:          0.319s
Max time for refinement:              0.705s

Code Coverage
-----------------------------
  Function coverage:      0.514
  Visited lines:          1237
  Total lines:            2192
  Line coverage:          0.564
  Visited conditions:     186
  Total conditions:       388
  Condition coverage:     0.479

CPAchecker general statistics
-----------------------------
Number of program locations:     2764
Number of CFA edges:             3148
Number of relevant variables:    403
Number of functions:             74
Number of loops:                 12
Size of reached set:             1792
  Number of reached locations:   575 (21%)
    Avg states per location:     3
    Max states per location:     58 (at node N23)
  Number of reached functions:   38 (51%)
  Number of partitions:          1792
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0
  Size of final wait list        14

Time for analysis setup:          5.959s
  Time for loading CPAs:          1.051s
  Time for loading parser:        0.785s
  Time for CFA construction:      3.946s
    Time for parsing file(s):     1.170s
    Time for AST to CFA:          1.324s
    Time for CFA sanity check:    0.248s
    Time for post-processing:     1.004s
      Time for var class.:        0.528s
Time for Analysis:               23.770s
CPU time for analysis:           23.780s
Total time for CPAchecker:       29.734s
Total CPU time for CPAchecker:   29.730s
Time for statistics:              0.091s

Time for Garbage Collector:       0.578s (in 32 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 77MB (    73 MiB) max;     47MB (    45 MiB) avg;     82MB (    78 MiB) peak
Used non-heap memory:             40MB (    38 MiB) max;     34MB (    33 MiB) avg;     40MB (    39 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        41MB (    39 MiB) max;     36MB (    34 MiB) avg
Total process virtual memory:   8132MB (  7756 MiB) max;   8117MB (  7741 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
