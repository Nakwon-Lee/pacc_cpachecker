scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.0/module_get_put-drivers-video-aty-aty128fb.ko_true-unreach-call.cil.out.i.pp.i


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_e74latsy/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 6299: Dead code detected: __asm__ volatile ("call __get_user_1": "=a" (__ret_gu), "=d" (__val_gu): "0" ((__u32 *)arg)); (CFACreationUtils.addEdgeToCFA, INFO)

line 6301: Dead code detected: __asm__ volatile ("call __get_user_2": "=a" (__ret_gu), "=d" (__val_gu): "0" ((__u32 *)arg)); (CFACreationUtils.addEdgeToCFA, INFO)

line 6306: Dead code detected: __asm__ volatile ("call __get_user_8": "=a" (__ret_gu), "=d" (__val_gu): "0" ((__u32 *)arg)); (CFACreationUtils.addEdgeToCFA, INFO)

line 6297: Dead code detected: Goto: switch_default (CFACreationUtils.addEdgeToCFA, INFO)

lines 6355-6356: Dead code detected: __asm__ volatile ("call __put_user_1": "=a" (__ret_pu): "0" (__pu_val),
                             "c" ((__u32 *)arg): "ebx"); (CFACreationUtils.addEdgeToCFA, INFO)

lines 6358-6359: Dead code detected: __asm__ volatile ("call __put_user_2": "=a" (__ret_pu): "0" (__pu_val),
                             "c" ((__u32 *)arg): "ebx"); (CFACreationUtils.addEdgeToCFA, INFO)

lines 6365-6366: Dead code detected: __asm__ volatile ("call __put_user_8": "=a" (__ret_pu): "0" (__pu_val),
                             "c" ((__u32 *)arg): "ebx"); (CFACreationUtils.addEdgeToCFA, INFO)

line 6353: Dead code detected: Goto: switch_default___0 (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label switch_default is not reachable. (CFAFunctionBuilder.leave, INFO)

line 6445: Dead code detected: [(state.event) == (pdev->dev.power.power_state.event)] (CFACreationUtils.addEdgeToCFA, INFO)

line 6445: Dead code detected: [!((state.event) == (pdev->dev.power.power_state.event))] (CFACreationUtils.addEdgeToCFA, INFO)

line 6446: Dead code detected: return (0); (CFACreationUtils.addEdgeToCFA, INFO)

line 6451: Dead code detected: printk("<7>aty128fb: suspending...\n"); (CFACreationUtils.addEdgeToCFA, INFO)

line 6461: Dead code detected: [!((state.event) != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 6463: Dead code detected: aty128_set_suspend(par, 1); (CFACreationUtils.addEdgeToCFA, INFO)

line 6469: Dead code detected: console_unlock(); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __pci_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function might_fault to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock_nested to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 3815: Ignoring function call through function pointer *(bd->ops->update_status): (*(bd->ops->update_status))(bd); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function console_lock to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function console_unlock to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_save_state to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_enable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __request_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function framebuffer_alloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_ioremap_bar to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ioremap_nocache to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_map_rom to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_unmap_rom to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iounmap to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function framebuffer_release to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __release_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strlcat to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_find_mode to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_alloc_cmap to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            448 (1% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            425 (95%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         23 (5%)
  Times precision was empty:       216 (48%)
  Times precision was {false}:     35 (8%)
  Times result was cached:         156 (35%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      41 (9%)
  Times result was 'false':        38 (8%)
Number of strengthen sat checks:   0
Number of coverage checks:         6002
  BDD entailment checks:           126
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       346
Number of predicates discovered:          2
Number of abstraction locations:          8
Max number of predicates per location:    1
Avg number of predicates per location:    1
Total predicates per abstraction:         232
Max number of predicates per abstraction: 1
Avg number of predicates per abstraction: 3.05
Number of irrelevant predicates:          49 (21%)
Number of preds handled by boolean abs:   41 (18%)
  Total number of models for allsat:      35
  Max number of models for allsat:        1
  Avg number of models for allsat:        0.85

Time for post operator:                  7.171s
  Time for path formula creation:        7.022s
Time for strengthen operator:            0.130s
Time for prec operator:                 10.381s
  Time for abstraction:                 10.210s (Max:     0.819s, Count: 448)
    Boolean abstraction:                 2.994s
    Solving time:                        8.114s (Max:     0.791s)
    Model enumeration time:              0.122s
    Time for BDD construction:           0.009s (Max:     0.004s)
Time for merge operator:                 1.246s
Time for coverage check:                 0.020s
  Time for BDD entailment checks:        0.008s
Total time for SMT solver (w/o itp):     8.236s

Number of path formula cache hits:   42760 (65%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     6.426s

Total number of created targets for pointer analysis: 38360
   Number of created targets for uf: *signed_int is 5
   Number of created targets for uf: *unsigned_char is 209
   Number of created targets for uf: *unsigned_int is 133


Number of BDD nodes:                               202
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                          79 (count: 778, min: 0, max: 10, avg: 0.10)
Time for BDD node cleanup:                             0.010s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.321s
Automaton transfers with branching:                0
Automaton transfer successors:                        64074 (count: 64074, min: 1, max: 1, avg: 1.00) [1 x 64074]

CPA algorithm statistics
------------------------
Number of iterations:            39753
Max size of waitlist:            52
Average size of waitlist:        23
Number of computed successors:   43057
Max successors for one state:    2
Number of times merged:          2938
Number of times stopped:         3056
Number of times breaked:         8

Total time for CPA algorithm:        23.342s (Max:     4.598s)
  Time for choose from waitlist:      0.133s
  Time for precision adjustment:     11.135s
  Time for transfer relation:         9.329s
  Time for merge operator:            1.497s
  Time for stop operator:             0.263s
  Time for adding to reached set:     0.280s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   8
Avg. length of target path (in blocks):                  27 (count: 8, min: 1, max: 5, avg: 3.38)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.993s
  Counterexample analysis:                             0.765s (Max:     0.239s, Calls: 8)
    Refinement sat check:                              0.666s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.015s
  Precision update:                                    0.015s
  ARG update:                                          0.187s

Length of refined path (in blocks):                      27 (count: 8, min: 1, max: 5, avg: 3.38)
Number of affected states:                               19 (count: 8, min: 0, max: 4, avg: 2.38)
Length (states) of path with itp 'true':                  0 (count: 8, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:        19 (count: 8, min: 0, max: 4, avg: 2.38)
Length (states) of path with itp 'false':                 0 (count: 8, min: 0, max: 0, avg: 0.00)
Different non-trivial interpolants along paths:           0 (count: 8, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:              12 (count: 8, min: 0, max: 3, avg: 1.50)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                8
Number of successful refinements:     8
Number of failed refinements:         0
Max. size of reached set before ref.: 6067
Max. size of reached set after ref.:  22
Avg. size of reached set before ref.: 4363.50
Avg. size of reached set after ref.:  21.75

Total time for CEGAR algorithm:      24.484s
Time for refinements:                 1.134s
Average time for refinement:          0.141s
Max time for refinement:              0.269s

Code Coverage
-----------------------------
  Function coverage:      0.851
  Visited lines:          1960
  Total lines:            2192
  Line coverage:          0.894
  Visited conditions:     334
  Total conditions:       388
  Condition coverage:     0.861

CPAchecker general statistics
-----------------------------
Number of program locations:     2764
Number of CFA edges:             3148
Number of relevant variables:    403
Number of functions:             74
Number of loops:                 12
Size of reached set:             5230
  Number of reached locations:   1118 (40%)
    Avg states per location:     4
    Max states per location:     139 (at node N23)
  Number of reached functions:   63 (85%)
  Number of partitions:          5230
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0
  Size of final wait list        21

Time for analysis setup:          5.768s
  Time for loading CPAs:          1.062s
  Time for loading parser:        0.761s
  Time for CFA construction:      3.825s
    Time for parsing file(s):     1.091s
    Time for AST to CFA:          1.274s
    Time for CFA sanity check:    0.308s
    Time for post-processing:     1.004s
      Time for var class.:        0.499s
Time for Analysis:               24.485s
CPU time for analysis:           24.480s
Total time for CPAchecker:       30.258s
Total CPU time for CPAchecker:   30.250s
Time for statistics:              0.191s

Time for Garbage Collector:       0.633s (in 35 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 85MB (    81 MiB) max;     51MB (    48 MiB) avg;     89MB (    85 MiB) peak
Used non-heap memory:             39MB (    37 MiB) max;     34MB (    33 MiB) avg;     39MB (    37 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        41MB (    39 MiB) max;     36MB (    35 MiB) avg
Total process virtual memory:   8066MB (  7692 MiB) max;   8054MB (  7681 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
