scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-32_7a-drivers--staging--bcm--bcm_wimax.ko-ldv_main17_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_h5lp4_9f/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 6851: Dead code detected: __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& kernel_stack)); (CFACreationUtils.addEdgeToCFA, INFO)

line 6854: Dead code detected: __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack)); (CFACreationUtils.addEdgeToCFA, INFO)

line 6857: Dead code detected: __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (8UL) {
  case 1UL:
  __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& kernel_stack));
  goto ldv_6180;
  case 2UL:
  __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack));
  goto ldv_6180;
  case 4UL:
  __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack));
  goto ldv_6180;
  case 8UL:
  __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack));
  goto ldv_6180;
  default:
  __bad_percpu_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 7585: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 8048: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 8099: Dead code detected: __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

line 8102: Dead code detected: __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

line 8105: Dead code detected: __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (8UL) {
  case 1UL:
  __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& current_task));
  goto ldv_2861;
  case 2UL:
  __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_2861;
  case 4UL:
  __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_2861;
  case 8UL:
  __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_2861;
  default:
  __bad_percpu_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 9376: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 9940: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 10262: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 10628: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 10945: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 14474: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 15165: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 16542: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 17168: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 17688: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 18604: Dead code detected: __ms = 3UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 18673: Dead code detected: __ms___0 = 3UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 19070: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 19428: Dead code detected: return (0); (CFACreationUtils.addEdgeToCFA, INFO)

line 19520: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 20082: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 21035: Dereferencing of non-pointer type PUCHAR  in expression *pucBuffer (ASTConverter.convert, WARNING)

line 21095: Dereferencing of non-pointer type PUCHAR  in expression *pucBuffer (ASTConverter.convert, WARNING)

line 23016: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 23160: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 23210: Dead code detected: __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& kernel_stack)); (CFACreationUtils.addEdgeToCFA, INFO)

line 23213: Dead code detected: __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack)); (CFACreationUtils.addEdgeToCFA, INFO)

line 23216: Dead code detected: __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (8UL) {
  case 1UL:
  __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& kernel_stack));
  goto ldv_6149;
  case 2UL:
  __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack));
  goto ldv_6149;
  case 4UL:
  __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack));
  goto ldv_6149;
  case 8UL:
  __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack));
  goto ldv_6149;
  default:
  __bad_percpu_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 24743: Dead code detected: __asm__ volatile ("call __get_user_1": "=a" (__ret_gu), "=d" (__val_gu): "0" ((unsigned long *)arg)); (CFACreationUtils.addEdgeToCFA, INFO)

line 24746: Dead code detected: __asm__ volatile ("call __get_user_2": "=a" (__ret_gu), "=d" (__val_gu): "0" ((unsigned long *)arg)); (CFACreationUtils.addEdgeToCFA, INFO)

line 24749: Dead code detected: __asm__ volatile ("call __get_user_4": "=a" (__ret_gu), "=d" (__val_gu): "0" ((unsigned long *)arg)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (8UL) {
  case 1UL:
  __asm__ volatile ("call __get_user_1": "=a" (__ret_gu), "=d" (__val_gu): "0" ((unsigned long *)arg));
  goto ldv_46947;
  case 2UL:
  __asm__ volatile ("call __get_user_2": "=a" (__ret_gu), "=d" (__val_gu): "0" ((unsigned long *)arg));
  goto ldv_46947;
  case 4UL:
  __asm__ volatile ("call __get_user_4": "=a" (__ret_gu), "=d" (__val_gu): "0" ((unsigned long *)arg));
  goto ldv_46947;
  case 8UL:
  __asm__ volatile ("call __get_user_8": "=a" (__ret_gu), "=d" (__val_gu): "0" ((unsigned long *)arg));
  goto ldv_46947;
  default:
  __asm__ volatile ("call __get_user_X": "=a" (__ret_gu), "=d" (__val_gu): "0" ((unsigned long *)arg));
  goto ldv_46947;
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 24771: Dead code detected: __asm__ volatile ("call __get_user_1": "=a" (__ret_gu___0), "=d" (__val_gu___0): "0" ((unsigned long *)arg)); (CFACreationUtils.addEdgeToCFA, INFO)

line 24774: Dead code detected: __asm__ volatile ("call __get_user_2": "=a" (__ret_gu___0), "=d" (__val_gu___0): "0" ((unsigned long *)arg)); (CFACreationUtils.addEdgeToCFA, INFO)

line 24777: Dead code detected: __asm__ volatile ("call __get_user_4": "=a" (__ret_gu___0), "=d" (__val_gu___0): "0" ((unsigned long *)arg)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (8UL) {
  case 1UL:
  __asm__ volatile ("call __get_user_1": "=a" (__ret_gu___0), "=d" (__val_gu___0): "0" ((unsigned long *)arg));
  goto ldv_46957;
  case 2UL:
  __asm__ volatile ("call __get_user_2": "=a" (__ret_gu___0), "=d" (__val_gu___0): "0" ((unsigned long *)arg));
  goto ldv_46957;
  case 4UL:
  __asm__ volatile ("call __get_user_4": "=a" (__ret_gu___0), "=d" (__val_gu___0): "0" ((unsigned long *)arg));
  goto ldv_46957;
  case 8UL:
  __asm__ volatile ("call __get_user_8": "=a" (__ret_gu___0), "=d" (__val_gu___0): "0" ((unsigned long *)arg));
  goto ldv_46957;
  default:
  __asm__ volatile ("call __get_user_X": "=a" (__ret_gu___0), "=d" (__val_gu___0): "0" ((unsigned long *)arg));
  goto ldv_46957;
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 24819: Dead code detected: __asm__ volatile ("call __get_user_1": "=a" (__ret_gu___1), "=d" (__val_gu___1): "0" ((unsigned long *)arg)); (CFACreationUtils.addEdgeToCFA, INFO)

line 24822: Dead code detected: __asm__ volatile ("call __get_user_2": "=a" (__ret_gu___1), "=d" (__val_gu___1): "0" ((unsigned long *)arg)); (CFACreationUtils.addEdgeToCFA, INFO)

line 24825: Dead code detected: __asm__ volatile ("call __get_user_4": "=a" (__ret_gu___1), "=d" (__val_gu___1): "0" ((unsigned long *)arg)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (8UL) {
  case 1UL:
  __asm__ volatile ("call __get_user_1": "=a" (__ret_gu___1), "=d" (__val_gu___1): "0" ((unsigned long *)arg));
  goto ldv_46970;
  case 2UL:
  __asm__ volatile ("call __get_user_2": "=a" (__ret_gu___1), "=d" (__val_gu___1): "0" ((unsigned long *)arg));
  goto ldv_46970;
  case 4UL:
  __asm__ volatile ("call __get_user_4": "=a" (__ret_gu___1), "=d" (__val_gu___1): "0" ((unsigned long *)arg));
  goto ldv_46970;
  case 8UL:
  __asm__ volatile ("call __get_user_8": "=a" (__ret_gu___1), "=d" (__val_gu___1): "0" ((unsigned long *)arg));
  goto ldv_46970;
  default:
  __asm__ volatile ("call __get_user_X": "=a" (__ret_gu___1), "=d" (__val_gu___1): "0" ((unsigned long *)arg));
  goto ldv_46970;
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 26373: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 26708: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 28613: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 29928: Dead code detected: Adapter->LEDInfo.led_thread_running = 0; (CFACreationUtils.addEdgeToCFA, INFO)

line 30056: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 30483: Dead code detected: __ms = 3UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 30518: Dead code detected: __ms___0 = 3UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 30547: Dead code detected: __ms___1 = 3UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 31860: Dead code detected: __ms = 3UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 31897: Dead code detected: __ms___0 = 3UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 35900: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 36040: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_handler_precall to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 6903: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((const void *)to, 0); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function __builtin_object_size to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function might_fault to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_fmt to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _copy_from_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _copy_to_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function down to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function up to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

lines 22352-22353: Ignoring function call through function pointer *(Adapter->interface_rdm): tmp = (*(Adapter->interface_rdm))(Adapter->pvInterfaceAdapter, uiAddress, (PVOID )pucBuff, (int)sSize); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function usb_control_msg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function print_hex_dump to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memdup_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function do_gettimeofday to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

lines 22363-22364: Ignoring function call through function pointer *(Adapter->interface_wrm): iRetVal = (*(Adapter->interface_wrm))(Adapter->pvInterfaceAdapter, uiAddress, (PVOID )pucBuff, (int)sSize); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function __wake_up to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function down_trylock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_kill_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netif_carrier_off to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock_bh to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_bh to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 26313: Destroying the void* pointer bcm_char_ioctl::temp_buff___1 produces garbage or the memory pointed by it is unused: bcm_char_ioctl(var_group2, var_bcm_char_ioctl_3_p1, var_bcm_char_ioctl_3_p2); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function consume_skb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function nonseekable_open to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Shutdown was requested but CPAchecker is still running after 10s, forcing immediate termination now. (ForceTerminationOnShutdown.run, WARNING)

For your information: CPAchecker is currently hanging at
 org.sosy_lab.java_smt.solvers.mathsat5.Mathsat5NativeApi.msat_destroy_env(Native Method)
org.sosy_lab.java_smt.solvers.mathsat5.Mathsat5AbstractProver.close(Mathsat5AbstractProver.java:99)
org.sosy_lab.cpachecker.util.predicates.smt.ProverEnvironmentView.close(ProverEnvironmentView.java:129)
org.sosy_lab.cpachecker.cpa.predicate.PredicateAbstractionManager.computeAbstraction(PredicateAbstractionManager.java:786)
org.sosy_lab.cpachecker.cpa.predicate.PredicateAbstractionManager.buildAbstraction(PredicateAbstractionManager.java:403)
org.sosy_lab.cpachecker.cpa.predicate.PredicatePrecisionAdjustment.computeAbstraction(PredicatePrecisionAdjustment.java:188)
org.sosy_lab.cpachecker.cpa.predicate.PredicatePrecisionAdjustment.prec(PredicatePrecisionAdjustment.java:107)
org.sosy_lab.cpachecker.cpa.composite.CompositePrecisionAdjustment.prec(CompositePrecisionAdjustment.java:89)
org.sosy_lab.cpachecker.cpa.arg.ARGPrecisionAdjustment.prec(ARGPrecisionAdjustment.java:96)
org.sosy_lab.cpachecker.cpa.arg.ARGPrecisionAdjustment.prec(ARGPrecisionAdjustment.java:70)
org.sosy_lab.cpachecker.core.algorithm.CPAAlgorithm.handleState(CPAAlgorithm.java:312)
org.sosy_lab.cpachecker.core.algorithm.CPAAlgorithm.run0(CPAAlgorithm.java:241)
org.sosy_lab.cpachecker.core.algorithm.CPAAlgorithm.run(CPAAlgorithm.java:207)
org.sosy_lab.cpachecker.core.algorithm.CEGARAlgorithm.run(CEGARAlgorithm.java:198)
org.sosy_lab.cpachecker.core.CPAchecker.runAlgorithm(CPAchecker.java:473)
org.sosy_lab.cpachecker.core.CPAchecker.run(CPAchecker.java:353)
org.sosy_lab.cpachecker.cmdline.CPAMain.main(CPAMain.java:170) 
 (ForceTerminationOnShutdown.run, INFO)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            1589 (0% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            1576 (99%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         13 (1%)
  Times precision was empty:       1562 (98%)
  Times precision was {false}:     11 (1%)
  Times result was cached:         5 (0%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      11 (1%)
  Times result was 'false':        10 (1%)
Number of strengthen sat checks:   0
Number of coverage checks:         197170
  BDD entailment checks:           10
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       4453
Number of predicates discovered:          4
Number of abstraction locations:          3
Max number of predicates per location:    3
Avg number of predicates per location:    1
Total predicates per abstraction:         45
Max number of predicates per abstraction: 3
Avg number of predicates per abstraction: 2.05
Number of irrelevant predicates:          22 (49%)
Number of preds handled by boolean abs:   17 (38%)
  Total number of models for allsat:      9
  Max number of models for allsat:        1
  Avg number of models for allsat:        0.82

Time for post operator:                 45.013s
  Time for path formula creation:       44.723s
Time for strengthen operator:            0.451s
Time for prec operator:                829.559s
  Time for abstraction:                829.136s (Max:   684.317s, Count: 1589)
    Boolean abstraction:               785.252s
    Solving time:                      817.951s (Max:   682.960s)
    Model enumeration time:              3.596s
    Time for BDD construction:           0.005s (Max:     0.002s)
Time for merge operator:                10.759s
Time for coverage check:                 0.022s
  Time for BDD entailment checks:        0.004s
Total time for SMT solver (w/o itp):   821.548s

Number of path formula cache hits:   445036 (75%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    42.216s

Total number of created targets for pointer analysis: 174281
   Number of created targets for uf: *(void)* is 4
   Number of created targets for uf: *(struct_bcm_mini_adapter)* is 3
   Number of created targets for uf: *unsigned_char is 18
   Number of created targets for uf: *unsigned_int is 1075
   Number of created targets for uf: *char is 5
   Number of created targets for uf: *enum_bcm_flash2x_section_val is 3
   Number of created targets for uf: *unsigned_long_int is 9
   Number of created targets for uf: *(struct_bcm_tarang_data)* is 3


Number of BDD nodes:                               206
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                          43 (count: 1709, min: 0, max: 15, avg: 0.03)
Time for BDD node cleanup:                             0.009s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.873s
  Time for transition matches:                         0.458s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.000s
Automaton transfers with branching:                0
Automaton transfer successors:                       524922 (count: 524922, min: 1, max: 1, avg: 1.00) [1 x 524922]

CPA algorithm statistics
------------------------
Number of iterations:            346542
Max size of waitlist:            477
Average size of waitlist:        227
Number of computed successors:   446703
Max successors for one state:    2
Number of times merged:          98580
Number of times stopped:         98587
Number of times breaked:         4

Total time for CPA algorithm:       898.894s (Max:   688.495s)
  Time for choose from waitlist:      0.191s
  Time for precision adjustment:    833.596s
  Time for transfer relation:        50.405s
  Time for merge operator:           12.106s
  Time for stop operator:             0.556s
  Time for adding to reached set:     0.727s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   4
Avg. length of target path (in blocks):                  10 (count: 4, min: 2, max: 4, avg: 2.50)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   1.396s
  Counterexample analysis:                             0.369s (Max:     0.163s, Calls: 4)
    Refinement sat check:                              0.339s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.004s
  Precision update:                                    0.003s
  ARG update:                                          1.014s

Length of refined path (in blocks):                      10 (count: 4, min: 2, max: 4, avg: 2.50)
Number of affected states:                                6 (count: 4, min: 1, max: 3, avg: 1.50)
Length (states) of path with itp 'true':                  0 (count: 4, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:         6 (count: 4, min: 1, max: 3, avg: 1.50)
Length (states) of path with itp 'false':                 0 (count: 4, min: 0, max: 0, avg: 0.00)
Different non-trivial interpolants along paths:           0 (count: 4, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:               2 (count: 4, min: 0, max: 2, avg: 0.50)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                4
Number of successful refinements:     4
Number of failed refinements:         0
Max. size of reached set before ref.: 99566
Max. size of reached set after ref.:  7
Avg. size of reached set before ref.: 62144.00
Avg. size of reached set after ref.:  7.00

Total time for CEGAR algorithm:     900.490s
Time for refinements:                 1.596s
Average time for refinement:          0.399s
Max time for refinement:              0.507s

Code Coverage
-----------------------------
  Function coverage:      0.191
  Visited lines:          4583
  Total lines:            16538
  Line coverage:          0.277
  Visited conditions:     2538
  Total conditions:       13012
  Condition coverage:     0.195

CPAchecker general statistics
-----------------------------
Number of program locations:     27437
Number of CFA edges:             35132
Number of relevant variables:    3454
Number of functions:             535
Number of loops:                 203
Size of reached set:             99558
  Number of reached locations:   4039 (15%)
    Avg states per location:     24
    Max states per location:     898 (at node N27600)
  Number of reached functions:   102 (19%)
  Number of partitions:          99557
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N18582 (before line 26320), Function main called from node N18512, stack depth 1 [30f0c5e], stack [main]])
  Number of target states:       0
  Size of final wait list        449

Time for analysis setup:         10.605s
  Time for loading CPAs:          0.949s
  Time for loading parser:        0.532s
  Time for CFA construction:      8.991s
    Time for parsing file(s):     1.293s
    Time for AST to CFA:          3.261s
    Time for CFA sanity check:    0.895s
    Time for post-processing:     3.337s
      Time for var class.:        1.564s
Time for Analysis:              900.490s
CPU time for analysis:          900.480s
Total time for CPAchecker:      911.108s
Total CPU time for CPAchecker:  911.060s
Time for statistics:              1.036s

Time for Garbage Collector:       9.397s (in 272 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                357MB (   340 MiB) max;    241MB (   230 MiB) avg;    397MB (   379 MiB) peak
Used non-heap memory:             46MB (    44 MiB) max;     39MB (    37 MiB) avg;     46MB (    44 MiB) peak
Allocated heap memory:           590MB (   562 MiB) max;    518MB (   494 MiB) avg
Allocated non-heap memory:        48MB (    46 MiB) max;     48MB (    46 MiB) avg
Total process virtual memory:   9401MB (  8966 MiB) max;   8946MB (  8531 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
