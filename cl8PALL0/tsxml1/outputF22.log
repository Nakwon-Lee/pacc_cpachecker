scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/minepump_spec4_product64_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run__jtjdboe/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 140: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 412: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 421: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 476: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 495: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 838: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 884: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 932: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 964: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 978: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 987: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 999: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1022: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 675: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            35 (0% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            18 (51%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         17 (49%)
  Times precision was empty:       6 (17%)
  Times precision was {false}:     19 (54%)
  Times result was cached:         0 (0%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      10 (29%)
  Times result was 'false':        17 (49%)
Number of strengthen sat checks:   0
Number of coverage checks:         1193
  BDD entailment checks:           13
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       83
Number of predicates discovered:          8
Number of abstraction locations:          3
Max number of predicates per location:    7
Avg number of predicates per location:    3
Total predicates per abstraction:         77
Max number of predicates per abstraction: 7
Avg number of predicates per abstraction: 2.66
Number of irrelevant predicates:          19 (25%)
Number of preds handled by boolean abs:   58 (75%)
  Total number of models for allsat:      84
  Max number of models for allsat:        13
  Avg number of models for allsat:        8.40

Time for post operator:                  0.683s
  Time for path formula creation:        0.651s
Time for strengthen operator:            0.066s
Time for prec operator:                  0.656s
  Time for abstraction:                  0.616s (Max:     0.041s, Count: 35)
    Boolean abstraction:                 0.176s
    Solving time:                        0.209s (Max:     0.018s)
    Model enumeration time:              0.047s
    Time for BDD construction:           0.049s (Max:     0.014s)
Time for merge operator:                 0.132s
Time for coverage check:                 0.009s
  Time for BDD entailment checks:        0.001s
Total time for SMT solver (w/o itp):     0.256s

Number of path formula cache hits:   4999 (60%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.631s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               439
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         189 (count: 274, min: 0, max: 96, avg: 0.69)
Time for BDD node cleanup:                             0.000s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.153s
Automaton transfers with branching:                0
Automaton transfer successors:                         8003 (count: 8003, min: 1, max: 1, avg: 1.00) [1 x 8003]

CPA algorithm statistics
------------------------
Number of iterations:            6171
Max size of waitlist:            12
Average size of waitlist:        6
Number of computed successors:   6791
Max successors for one state:    2
Number of times merged:          590
Number of times stopped:         592
Number of times breaked:         3

Total time for CPA algorithm:         3.007s (Max:     1.085s)
  Time for choose from waitlist:      0.055s
  Time for precision adjustment:      0.884s
  Time for transfer relation:         1.479s
  Time for merge operator:            0.206s
  Time for stop operator:             0.046s
  Time for adding to reached set:     0.129s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   3
Avg. length of target path (in blocks):                   8 (count: 3, min: 2, max: 3, avg: 2.67)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.160s
  Counterexample analysis:                             0.063s (Max:     0.028s, Calls: 3)
    Refinement sat check:                              0.044s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.012s
  Precision update:                                    0.003s
  ARG update:                                          0.053s

Length of refined path (in blocks):                       7 (count: 3, min: 2, max: 3, avg: 2.33)
Number of affected states:                                4 (count: 3, min: 1, max: 2, avg: 1.33)
Length (states) of path with itp 'true':                  0 (count: 3, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:         4 (count: 3, min: 1, max: 2, avg: 1.33)
Length (states) of path with itp 'false':                 1 (count: 3, min: 0, max: 1, avg: 0.33)
Different non-trivial interpolants along paths:           1 (count: 3, min: 0, max: 1, avg: 0.33)
Equal non-trivial interpolants along paths:               0 (count: 3, min: 0, max: 0, avg: 0.00)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                3
Number of successful refinements:     3
Number of failed refinements:         0
Max. size of reached set before ref.: 2570
Max. size of reached set after ref.:  28
Avg. size of reached set before ref.: 1347.67
Avg. size of reached set after ref.:  28.00

Total time for CEGAR algorithm:       3.211s
Time for refinements:                 0.203s
Average time for refinement:          0.067s
Max time for refinement:              0.088s

Code Coverage
-----------------------------
  Function coverage:      0.756
  Visited lines:          161
  Total lines:            459
  Line coverage:          0.351
  Visited conditions:     48
  Total conditions:       80
  Condition coverage:     0.600

CPAchecker general statistics
-----------------------------
Number of program locations:     667
Number of CFA edges:             723
Number of relevant variables:    122
Number of functions:             41
Number of loops:                 5
Size of reached set:             2224
  Number of reached locations:   217 (33%)
    Avg states per location:     10
    Max states per location:     48 (at node N141)
  Number of reached functions:   31 (76%)
  Number of partitions:          2222
    Avg size of partitions:      1
    Max size of partitions:      3 (with key [N95 (before lines 193-242), Function test called from node N46, stack depth 3 [53251a66], stack [main, runTest, test]])
  Number of target states:       0

Time for analysis setup:          3.550s
  Time for loading CPAs:          0.962s
  Time for loading parser:        0.857s
  Time for CFA construction:      1.514s
    Time for parsing file(s):     0.509s
    Time for AST to CFA:          0.345s
    Time for CFA sanity check:    0.136s
    Time for post-processing:     0.345s
      Time for var class.:        0.152s
Time for Analysis:                3.211s
CPU time for analysis:            3.210s
Time for analyzing result:        0.004s
Total time for CPAchecker:        6.769s
Total CPU time for CPAchecker:    6.760s
Time for statistics:              0.152s

Time for Garbage Collector:       0.156s (in 7 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 56MB (    53 MiB) max;     32MB (    30 MiB) avg;     63MB (    60 MiB) peak
Used non-heap memory:             32MB (    31 MiB) max;     26MB (    25 MiB) avg;     34MB (    32 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        35MB (    33 MiB) max;     28MB (    26 MiB) avg
Total process virtual memory:   8132MB (  7756 MiB) max;   8080MB (  7706 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
