scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/minepump_spec2_product18_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_nqjk3ol7/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 135: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 144: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 199: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 378: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 390: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 413: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 462: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 494: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 503: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 823: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 869: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 660: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            33 (2% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            17 (52%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         16 (48%)
  Times precision was empty:       4 (12%)
  Times precision was {false}:     15 (45%)
  Times result was cached:         0 (0%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      14 (42%)
  Times result was 'false':        14 (42%)
Number of strengthen sat checks:   0
Number of coverage checks:         320
  BDD entailment checks:           8
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       47
Number of predicates discovered:          5
Number of abstraction locations:          3
Max number of predicates per location:    4
Avg number of predicates per location:    2
Total predicates per abstraction:         48
Max number of predicates per abstraction: 4
Avg number of predicates per abstraction: 1.66
Number of irrelevant predicates:          17 (35%)
Number of preds handled by boolean abs:   31 (65%)
  Total number of models for allsat:      18
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.29

Time for post operator:                  0.302s
  Time for path formula creation:        0.286s
Time for strengthen operator:            0.023s
Time for prec operator:                  0.331s
  Time for abstraction:                  0.264s (Max:     0.022s, Count: 33)
    Boolean abstraction:                 0.074s
    Solving time:                        0.076s (Max:     0.014s)
    Model enumeration time:              0.003s
    Time for BDD construction:           0.011s (Max:     0.005s)
Time for merge operator:                 0.031s
Time for coverage check:                 0.000s
  Time for BDD entailment checks:        0.000s
Total time for SMT solver (w/o itp):     0.079s

Number of path formula cache hits:   1368 (62%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.276s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               220
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                           0 (count: 208, min: 0, max: 0, avg: 0.00)
Time for BDD node cleanup:                             0.002s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.039s
Automaton transfers with branching:                0
Automaton transfer successors:                         2083 (count: 2083, min: 1, max: 1, avg: 1.00) [1 x 2083]

CPA algorithm statistics
------------------------
Number of iterations:            1592
Max size of waitlist:            6
Average size of waitlist:        3
Number of computed successors:   1782
Max successors for one state:    2
Number of times merged:          156
Number of times stopped:         159
Number of times breaked:         4

Total time for CPA algorithm:         1.360s (Max:     0.343s)
  Time for choose from waitlist:      0.016s
  Time for precision adjustment:      0.470s
  Time for transfer relation:         0.629s
  Time for merge operator:            0.067s
  Time for stop operator:             0.014s
  Time for adding to reached set:     0.067s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   4
Avg. length of target path (in blocks):                  12 (count: 4, min: 2, max: 4, avg: 3.00)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.090s
  Counterexample analysis:                             0.051s (Max:     0.018s, Calls: 4)
    Refinement sat check:                              0.030s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.012s
  Precision update:                                    0.004s
  ARG update:                                          0.015s

Length of refined path (in blocks):                      11 (count: 4, min: 2, max: 3, avg: 2.75)
Number of affected states:                                7 (count: 4, min: 1, max: 2, avg: 1.75)
Length (states) of path with itp 'true':                  0 (count: 4, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:         7 (count: 4, min: 1, max: 2, avg: 1.75)
Length (states) of path with itp 'false':                 1 (count: 4, min: 0, max: 1, avg: 0.25)
Different non-trivial interpolants along paths:           2 (count: 4, min: 0, max: 1, avg: 0.50)
Equal non-trivial interpolants along paths:               1 (count: 4, min: 0, max: 1, avg: 0.25)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                4
Number of successful refinements:     4
Number of failed refinements:         0
Max. size of reached set before ref.: 532
Max. size of reached set after ref.:  32
Avg. size of reached set before ref.: 322.50
Avg. size of reached set after ref.:  32.00

Total time for CEGAR algorithm:       1.475s
Time for refinements:                 0.113s
Average time for refinement:          0.028s
Max time for refinement:              0.051s

Code Coverage
-----------------------------
  Function coverage:      0.639
  Visited lines:          120
  Total lines:            426
  Line coverage:          0.282
  Visited conditions:     34
  Total conditions:       66
  Condition coverage:     0.515

CPAchecker general statistics
-----------------------------
Number of program locations:     607
Number of CFA edges:             649
Number of relevant variables:    110
Number of functions:             36
Number of loops:                 5
Size of reached set:             448
  Number of reached locations:   157 (26%)
    Avg states per location:     2
    Max states per location:     8 (at node N13)
  Number of reached functions:   23 (64%)
  Number of partitions:          447
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N104 (before lines 224-271), Function test called from node N183, stack depth 3 [5117dd67], stack [main, runTest, test]])
  Number of target states:       0

Time for analysis setup:          3.330s
  Time for loading CPAs:          0.813s
  Time for loading parser:        0.797s
  Time for CFA construction:      1.459s
    Time for parsing file(s):     0.551s
    Time for AST to CFA:          0.327s
    Time for CFA sanity check:    0.091s
    Time for post-processing:     0.300s
      Time for var class.:        0.114s
Time for Analysis:                1.475s
CPU time for analysis:            1.480s
Time for analyzing result:        0.001s
Total time for CPAchecker:        4.810s
Total CPU time for CPAchecker:    4.810s
Time for statistics:              0.094s

Time for Garbage Collector:       0.127s (in 4 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 50MB (    47 MiB) max;     30MB (    29 MiB) avg;     62MB (    59 MiB) peak
Used non-heap memory:             32MB (    30 MiB) max;     24MB (    23 MiB) avg;     33MB (    32 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        35MB (    33 MiB) max;     26MB (    24 MiB) avg
Total process virtual memory:   8132MB (  7756 MiB) max;   8062MB (  7688 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
