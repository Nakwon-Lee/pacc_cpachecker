scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/email_spec27_product28_true-unreach-call_true-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_xf8xpsrd/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 475: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 495: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 504: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 519: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 839: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 885: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 913: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 934: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 971: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1008: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1047: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1086: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1123: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1160: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1197: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1234: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1271: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1455: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1487: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1496: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1505: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1530: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1635: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1647: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1670: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1704: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1733: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1781: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1828: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1873: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1951: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2020: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2154: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2237: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2284: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2331: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2376: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2439: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2546: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2600: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2672: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2719: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 676: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            179883 (13% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  177421 (99%)
  Because of loop head:            2400 (1%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         62 (0%)
  Times precision was empty:       4843 (3%)
  Times precision was {false}:     179 (0%)
  Times result was cached:         159404 (89%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      15457 (9%)
  Times result was 'false':        10389 (6%)
Number of strengthen sat checks:   0
Number of coverage checks:         413266
  BDD entailment checks:           49750
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       57
Number of predicates discovered:          243
Number of abstraction locations:          154
Max number of predicates per location:    41
Avg number of predicates per location:    18
Total predicates per abstraction:         2735170
Max number of predicates per abstraction: 41
Avg number of predicates per abstraction: 174.93
Number of irrelevant predicates:          828988 (30%)
Number of preds handled by boolean abs:   195165 (7%)
  Total number of models for allsat:      1706924
  Max number of models for allsat:        24576
  Avg number of models for allsat:        110.43

Time for post operator:                  7.672s
  Time for path formula creation:        6.995s
Time for strengthen operator:            1.221s
Time for prec operator:                414.078s
  Time for abstraction:                411.365s (Max:     5.413s, Count: 179883)
    Boolean abstraction:               292.815s
    Solving time:                       28.477s (Max:     0.043s)
    Model enumeration time:            177.282s
    Time for BDD construction:          83.660s (Max:     1.509s)
Time for merge operator:                 1.240s
Time for coverage check:                 0.241s
  Time for BDD entailment checks:        0.209s
Total time for SMT solver (w/o itp):   205.759s

Number of path formula cache hits:   1564893 (93%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     4.897s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               241378
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                      241198 (count: 232209, min: 0, max: 2662, avg: 1.04)
Time for BDD node cleanup:                             0.124s
Time for BDD garbage collection:                       0.756s (in 143 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  1.816s
  Time for transition matches:                         0.920s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.004s
Automaton transfers with branching:                0
Automaton transfer successors:                      1362495 (count: 1362495, min: 1, max: 1, avg: 1.00) [1 x 1362495]

CPA algorithm statistics
------------------------
Number of iterations:            1022140
Max size of waitlist:            98
Average size of waitlist:        28
Number of computed successors:   1230886
Max successors for one state:    2
Number of times merged:          181758
Number of times stopped:         197687
Number of times breaked:         62

Total time for CPA algorithm:       459.169s (Max:    37.621s)
  Time for choose from waitlist:      0.544s
  Time for precision adjustment:    423.410s
  Time for transfer relation:        22.657s
  Time for merge operator:            3.905s
  Time for stop operator:             2.414s
  Time for adding to reached set:     2.382s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   62
Avg. length of target path (in blocks):                8086 (count: 62, min: 97, max: 211, avg: 130.42)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  11.582s
  Counterexample analysis:                             8.699s (Max:     0.361s, Calls: 62)
    Refinement sat check:                              2.557s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.008s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.267s
  Precision update:                                    0.206s
  ARG update:                                          2.276s

Length of refined path (in blocks):                    5769 (count: 62, min: 39, max: 142, avg: 93.05)
Number of affected states:                             5420 (count: 62, min: 1, max: 141, avg: 87.42)
Length (states) of path with itp 'true':                287 (count: 62, min: 0, max: 86, avg: 4.63)
Length (states) of path with itp non-trivial itp:      5420 (count: 62, min: 1, max: 141, avg: 87.42)
Length (states) of path with itp 'false':                62 (count: 62, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:        1066 (count: 62, min: 0, max: 56, avg: 17.19)
Equal non-trivial interpolants along paths:            4292 (count: 62, min: 0, max: 134, avg: 69.23)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                62
Number of successful refinements:     62
Number of failed refinements:         0
Max. size of reached set before ref.: 44644
Max. size of reached set after ref.:  5297
Avg. size of reached set before ref.: 16142.03
Avg. size of reached set after ref.:  195.39

Total time for CEGAR algorithm:     471.688s
Time for refinements:                12.492s
Average time for refinement:          0.201s
Max time for refinement:              0.509s

Code Coverage
-----------------------------
  Function coverage:      0.587
  Visited lines:          739
  Total lines:            1417
  Line coverage:          0.522
  Visited conditions:     262
  Total conditions:       496
  Condition coverage:     0.528

CPAchecker general statistics
-----------------------------
Number of program locations:     1945
Number of CFA edges:             2203
Number of relevant variables:    353
Number of functions:             109
Number of loops:                 4
Size of reached set:             34119
  Number of reached locations:   735 (38%)
    Avg states per location:     46
    Max states per location:     365 (at node N1061)
  Number of reached functions:   64 (59%)
  Number of partitions:          33900
    Avg size of partitions:      1
    Max size of partitions:      13 (with key [N2059 (before lines 2782-2946), Function test called from node N106, stack depth 2 [6f05854c], stack [main, test]])
  Number of target states:       0

Time for analysis setup:          4.616s
  Time for loading CPAs:          1.059s
  Time for loading parser:        0.828s
  Time for CFA construction:      2.508s
    Time for parsing file(s):     0.759s
    Time for AST to CFA:          0.741s
    Time for CFA sanity check:    0.235s
    Time for post-processing:     0.609s
      Time for var class.:        0.318s
Time for Analysis:              471.689s
CPU time for analysis:          471.660s
Time for analyzing result:        0.032s
Total time for CPAchecker:      476.310s
Total CPU time for CPAchecker:  476.280s
Time for statistics:              0.755s

Time for Garbage Collector:      17.069s (in 1061 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                198MB (   189 MiB) max;    108MB (   103 MiB) avg;    216MB (   206 MiB) peak
Used non-heap memory:             37MB (    35 MiB) max;     36MB (    34 MiB) avg;     38MB (    36 MiB) peak
Allocated heap memory:           242MB (   231 MiB) max;    165MB (   157 MiB) avg
Allocated non-heap memory:        40MB (    38 MiB) max;     39MB (    37 MiB) avg
Total process virtual memory:   8613MB (  8214 MiB) max;   8365MB (  7977 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
