scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/seq-pthread/cs_stack_true-unreach-call.i


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_oc55hu31/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 1017: Dead code detected: __CS_cs(); (CFACreationUtils.addEdgeToCFA, INFO)

line 1017: Dead code detected: [!(__CS_ret != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 1017: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 1019: Dead code detected: __CS_cs(); (CFACreationUtils.addEdgeToCFA, INFO)

line 1019: Dead code detected: [!(__CS_ret != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 1019: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 1020: Dead code detected: goto __CS_ERROR; (CFACreationUtils.addEdgeToCFA, INFO)

line 1021: Dead code detected: __CS_cs(); (CFACreationUtils.addEdgeToCFA, INFO)

line 1021: Dead code detected: [!(__CS_ret != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 1021: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 1022: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 1023: Dead code detected: __CS_cs(); (CFACreationUtils.addEdgeToCFA, INFO)

line 1023: Dead code detected: [!(__CS_ret != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 1023: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 1041: Dead code detected: __CS_cs(); (CFACreationUtils.addEdgeToCFA, INFO)

line 1041: Dead code detected: [!(__CS_ret != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 1041: Dead code detected: return 0; (CFACreationUtils.addEdgeToCFA, INFO)

line 1058: Dead code detected: __CS_cs(); (CFACreationUtils.addEdgeToCFA, INFO)

line 1058: Dead code detected: [!(__CS_ret != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 1058: Dead code detected: return 0; (CFACreationUtils.addEdgeToCFA, INFO)

line 1070: Dead code detected: __CS_cs(); (CFACreationUtils.addEdgeToCFA, INFO)

line 1070: Dead code detected: [!(__CS_ret != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 1070: Dead code detected: return 0; (CFACreationUtils.addEdgeToCFA, INFO)

line 1081: Dead code detected: __CS_cs(); (CFACreationUtils.addEdgeToCFA, INFO)

line 1081: Dead code detected: [!(__CS_ret != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 1081: Dead code detected: return 0; (CFACreationUtils.addEdgeToCFA, INFO)

line 1089: Dead code detected: __CS_cs(); (CFACreationUtils.addEdgeToCFA, INFO)

line 1089: Dead code detected: [!(__CS_ret != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 1089: Dead code detected: return 0; (CFACreationUtils.addEdgeToCFA, INFO)

line 1091: Dead code detected: __CS_cs(); (CFACreationUtils.addEdgeToCFA, INFO)

line 1091: Dead code detected: [!(__CS_ret != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 1091: Dead code detected: return 0; (CFACreationUtils.addEdgeToCFA, INFO)

line 1092: Dead code detected: return 0; (CFACreationUtils.addEdgeToCFA, INFO)

line 1093: Dead code detected: __CS_cs(); (CFACreationUtils.addEdgeToCFA, INFO)

line 1093: Dead code detected: [!(__CS_ret != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 1093: Dead code detected: return 0; (CFACreationUtils.addEdgeToCFA, INFO)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

line 1212: Ignoring function call through function pointer *(__CS_thread[1]): (*(__CS_thread[1]))(0); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 1218: Ignoring function call through function pointer *(__CS_thread[2]): (*(__CS_thread[2]))(0); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            35978 (13% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  34694 (96%)
  Because of loop head:            1196 (3%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         88 (0%)
  Times precision was empty:       15725 (44%)
  Times precision was {false}:     1565 (4%)
  Times result was cached:         15426 (43%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      3262 (9%)
  Times result was 'false':        809 (2%)
Number of strengthen sat checks:   0
Number of coverage checks:         61870
  BDD entailment checks:           12654
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       55
Number of predicates discovered:          59
Number of abstraction locations:          81
Max number of predicates per location:    36
Avg number of predicates per location:    5
Total predicates per abstraction:         189095
Max number of predicates per abstraction: 36
Avg number of predicates per abstraction: 39.17
Number of irrelevant predicates:          159250 (84%)
Number of preds handled by boolean abs:   17687 (9%)
  Total number of models for allsat:      3054325
  Max number of models for allsat:        152370
  Avg number of models for allsat:        936.34

Time for post operator:                  7.060s
  Time for path formula creation:        6.913s
Time for strengthen operator:            0.276s
Time for prec operator:                875.204s
  Time for abstraction:                874.570s (Max:    41.377s, Count: 35978)
    Boolean abstraction:               863.099s
    Solving time:                        8.631s (Max:     0.069s)
    Model enumeration time:            752.754s
    Time for BDD construction:         103.446s (Max:     5.850s)
Time for merge operator:                 0.738s
Time for coverage check:                 0.077s
  Time for BDD entailment checks:        0.062s
Total time for SMT solver (w/o itp):   761.385s

Number of path formula cache hits:   207449 (67%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     6.169s

Total number of created targets for pointer analysis: 34898
   Number of created targets for uf: *signed_int is 329
   Number of created targets for uf: *unsigned_char is 2822
   Number of created targets for uf: *(unsigned_char)* is 85
   Number of created targets for uf: *_Bool is 34
   Number of created targets for uf: *unsigned_int is 221
   Number of created targets for uf: *(Return_type:_[(void)*],_Parameters:_1,_Parameter_1_type:_[(void)*],_VarArgs:_false)* is 23


Number of BDD nodes:                               181382
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       56926 (count: 76583, min: 0, max: 3099, avg: 0.74)
Time for BDD node cleanup:                             0.027s
Time for BDD garbage collection:                       0.760s (in 352 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.518s
  Time for transition matches:                         0.261s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.000s
Automaton transfers with branching:                0
Automaton transfer successors:                       272361 (count: 272361, min: 1, max: 1, avg: 1.00) [1 x 272361]

CPA algorithm statistics
------------------------
Number of iterations:            179457
Max size of waitlist:            196
Average size of waitlist:        55
Number of computed successors:   216467
Max successors for one state:    2
Number of times merged:          24608
Number of times stopped:         33215
Number of times breaked:         81

Total time for CPA algorithm:       890.295s (Max:   199.341s)
  Time for choose from waitlist:      0.150s
  Time for precision adjustment:    876.595s
  Time for transfer relation:        10.791s
  Time for merge operator:            1.201s
  Time for stop operator:             0.388s
  Time for adding to reached set:     0.284s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   81
Avg. length of target path (in blocks):                3420 (count: 81, min: 3, max: 104, avg: 42.22)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   7.081s
  Counterexample analysis:                             6.486s (Max:     0.622s, Calls: 81)
    Refinement sat check:                              5.586s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.031s
  Precision update:                                    0.052s
  ARG update:                                          0.472s

Length of refined path (in blocks):                    2766 (count: 81, min: 2, max: 100, avg: 34.15)
Number of affected states:                             1301 (count: 81, min: 0, max: 71, avg: 16.06)
Length (states) of path with itp 'true':               1384 (count: 81, min: 0, max: 50, avg: 17.09)
Length (states) of path with itp non-trivial itp:      1301 (count: 81, min: 0, max: 71, avg: 16.06)
Length (states) of path with itp 'false':                77 (count: 81, min: 0, max: 1, avg: 0.95)
Different non-trivial interpolants along paths:          99 (count: 81, min: 0, max: 14, avg: 1.22)
Equal non-trivial interpolants along paths:            1142 (count: 81, min: 0, max: 56, avg: 14.10)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                81
Number of successful refinements:     81
Number of failed refinements:         0
Max. size of reached set before ref.: 9639
Max. size of reached set after ref.:  7664
Avg. size of reached set before ref.: 4292.93
Avg. size of reached set after ref.:  2140.31

Total time for CEGAR algorithm:     897.862s
Time for refinements:                 7.443s
Average time for refinement:          0.091s
Max time for refinement:              0.637s

Code Coverage
-----------------------------
  Function coverage:      0.680
  Visited lines:          367
  Total lines:            400
  Line coverage:          0.918
  Visited conditions:     181
  Total conditions:       212
  Condition coverage:     0.854

CPAchecker general statistics
-----------------------------
Number of program locations:     940
Number of CFA edges:             1075
Number of relevant variables:    63
Number of functions:             25
Number of loops:                 7
Size of reached set:             8081
  Number of reached locations:   343 (36%)
    Avg states per location:     23
    Max states per location:     423 (at node N8)
  Number of reached functions:   17 (68%)
  Number of partitions:          7912
    Avg size of partitions:      1
    Max size of partitions:      12 (with key [N506 (before line 1179), Function main called from node N482, stack depth 1 [4748a0f9], stack [main]])
  Number of target states:       0
  Size of final wait list        157

Time for analysis setup:          2.482s
  Time for loading CPAs:          0.563s
  Time for loading parser:        0.474s
  Time for CFA construction:      1.351s
    Time for parsing file(s):     0.396s
    Time for AST to CFA:          0.436s
    Time for CFA sanity check:    0.103s
    Time for post-processing:     0.315s
      Time for var class.:        0.134s
Time for Analysis:              897.863s
CPU time for analysis:          897.840s
Total time for CPAchecker:      900.348s
Total CPU time for CPAchecker:  900.320s
Time for statistics:              0.153s

Time for Garbage Collector:       2.923s (in 1025 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                125MB (   119 MiB) max;     87MB (    83 MiB) avg;    128MB (   122 MiB) peak
Used non-heap memory:             39MB (    37 MiB) max;     37MB (    35 MiB) avg;     40MB (    38 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        41MB (    39 MiB) max;     41MB (    39 MiB) avg
Total process virtual memory:   8267MB (  7884 MiB) max;   8204MB (  7824 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
