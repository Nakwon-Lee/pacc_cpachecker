scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.4-simple/32_1_cilled_true-unreach-call_ok_nondet_linux-3_false-termination.4-32_1-drivers--media--dvb--dvb-usb--dvb-usb-vp7045.ko-ldv_main1_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_m26nr502/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_control_msg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function msleep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            377 (2% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            255 (68%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         122 (32%)
  Times precision was empty:       38 (10%)
  Times precision was {false}:     60 (16%)
  Times result was cached:         151 (40%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      128 (34%)
  Times result was 'false':        109 (29%)
Number of strengthen sat checks:   0
Number of coverage checks:         1687
  BDD entailment checks:           157
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       483
Number of predicates discovered:          3
Number of abstraction locations:          4
Max number of predicates per location:    1
Avg number of predicates per location:    1
Total predicates per abstraction:         339
Max number of predicates per abstraction: 1
Avg number of predicates per abstraction: 1.80
Number of irrelevant predicates:          121 (36%)
Number of preds handled by boolean abs:   128 (38%)
  Total number of models for allsat:      128
  Max number of models for allsat:        1
  Avg number of models for allsat:        1.00

Time for post operator:                  3.575s
  Time for path formula creation:        3.477s
Time for strengthen operator:            0.080s
Time for prec operator:                  3.663s
  Time for abstraction:                  3.574s (Max:     0.571s, Count: 377)
    Boolean abstraction:                 2.136s
    Solving time:                        2.175s (Max:     0.507s)
    Model enumeration time:              0.112s
    Time for BDD construction:           0.062s (Max:     0.014s)
Time for merge operator:                 0.331s
Time for coverage check:                 0.019s
  Time for BDD entailment checks:        0.015s
Total time for SMT solver (w/o itp):     2.287s

Number of path formula cache hits:   4161 (20%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     3.259s

Total number of created targets for pointer analysis: 1015
   Number of created targets for uf: *unsigned_char is 6


Number of BDD nodes:                               202
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         232 (count: 1326, min: 0, max: 94, avg: 0.17)
Time for BDD node cleanup:                             0.002s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.290s
Automaton transfers with branching:                0
Automaton transfer successors:                        20988 (count: 20988, min: 1, max: 1, avg: 1.00) [1 x 20988]

CPA algorithm statistics
------------------------
Number of iterations:            8501
Max size of waitlist:            104
Average size of waitlist:        49
Number of computed successors:   9570
Max successors for one state:    2
Number of times merged:          765
Number of times stopped:         922
Number of times breaked:         13

Total time for CPA algorithm:         9.887s (Max:     1.754s)
  Time for choose from waitlist:      0.058s
  Time for precision adjustment:      4.104s
  Time for transfer relation:         4.813s
  Time for merge operator:            0.446s
  Time for stop operator:             0.133s
  Time for adding to reached set:     0.116s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   13
Avg. length of target path (in blocks):                  50 (count: 13, min: 2, max: 4, avg: 3.85)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.456s
  Counterexample analysis:                             0.377s (Max:     0.041s, Calls: 13)
    Refinement sat check:                              0.298s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.001s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.010s
  Precision update:                                    0.011s
  ARG update:                                          0.018s

Length of refined path (in blocks):                      50 (count: 13, min: 2, max: 4, avg: 3.85)
Number of affected states:                               25 (count: 13, min: 1, max: 2, avg: 1.92)
Length (states) of path with itp 'true':                 12 (count: 13, min: 0, max: 1, avg: 0.92)
Length (states) of path with itp non-trivial itp:        25 (count: 13, min: 1, max: 2, avg: 1.92)
Length (states) of path with itp 'false':                 0 (count: 13, min: 0, max: 0, avg: 0.00)
Different non-trivial interpolants along paths:           0 (count: 13, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:              12 (count: 13, min: 0, max: 1, avg: 0.92)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                13
Number of successful refinements:     13
Number of failed refinements:         0
Max. size of reached set before ref.: 7358
Max. size of reached set after ref.:  7272
Avg. size of reached set before ref.: 2391.00
Avg. size of reached set after ref.:  2310.08

Total time for CEGAR algorithm:      10.573s
Time for refinements:                 0.627s
Average time for refinement:          0.048s
Max time for refinement:              0.064s

Code Coverage
-----------------------------
  Function coverage:      0.474
  Visited lines:          1725
  Total lines:            2193
  Line coverage:          0.787
  Visited conditions:     86
  Total conditions:       144
  Condition coverage:     0.597

CPAchecker general statistics
-----------------------------
Number of program locations:     2443
Number of CFA edges:             2530
Number of relevant variables:    457
Number of functions:             38
Number of loops:                 7
Size of reached set:             7488
  Number of reached locations:   322 (13%)
    Avg states per location:     23
    Max states per location:     109 (at node N858)
  Number of reached functions:   18 (47%)
  Number of partitions:          7488
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0

Time for analysis setup:          5.921s
  Time for loading CPAs:          1.105s
  Time for loading parser:        0.742s
  Time for CFA construction:      3.937s
    Time for parsing file(s):     1.182s
    Time for AST to CFA:          1.435s
    Time for CFA sanity check:    0.249s
    Time for post-processing:     0.857s
      Time for var class.:        0.437s
Time for Analysis:               10.573s
CPU time for analysis:           10.570s
Time for analyzing result:        0.006s
Total time for CPAchecker:       16.499s
Total CPU time for CPAchecker:   16.480s
Time for statistics:              0.263s

Time for Garbage Collector:       0.318s (in 15 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 74MB (    70 MiB) max;     44MB (    42 MiB) avg;     77MB (    73 MiB) peak
Used non-heap memory:             38MB (    36 MiB) max;     31MB (    30 MiB) avg;     39MB (    37 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        40MB (    38 MiB) max;     33MB (    31 MiB) avg
Total process virtual memory:   8132MB (  7755 MiB) max;   8109MB (  7733 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
