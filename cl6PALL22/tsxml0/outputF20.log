scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/seq-pthread/cs_queue_true-unreach-call.i


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_e_2t2y59/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 1046: Dead code detected: __CS_cs(); (CFACreationUtils.addEdgeToCFA, INFO)

line 1046: Dead code detected: [!(__CS_ret != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 1046: Dead code detected: return 0; (CFACreationUtils.addEdgeToCFA, INFO)

line 1051: Dead code detected: __CS_cs(); (CFACreationUtils.addEdgeToCFA, INFO)

line 1051: Dead code detected: [!(__CS_ret != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 1051: Dead code detected: return 0; (CFACreationUtils.addEdgeToCFA, INFO)

line 1062: Dead code detected: __CS_cs(); (CFACreationUtils.addEdgeToCFA, INFO)

line 1062: Dead code detected: [!(__CS_ret != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 1062: Dead code detected: return 0; (CFACreationUtils.addEdgeToCFA, INFO)

line 1067: Dead code detected: __CS_cs(); (CFACreationUtils.addEdgeToCFA, INFO)

line 1067: Dead code detected: [!(__CS_ret != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 1067: Dead code detected: return 0; (CFACreationUtils.addEdgeToCFA, INFO)

line 1090: Dead code detected: __CS_cs(); (CFACreationUtils.addEdgeToCFA, INFO)

line 1090: Dead code detected: [!(__CS_ret != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 1090: Dead code detected: return 0; (CFACreationUtils.addEdgeToCFA, INFO)

line 1111: Dead code detected: __CS_cs(); (CFACreationUtils.addEdgeToCFA, INFO)

line 1111: Dead code detected: [!(__CS_ret != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 1111: Dead code detected: return 0; (CFACreationUtils.addEdgeToCFA, INFO)

line 1143: Dead code detected: __CS_cs(); (CFACreationUtils.addEdgeToCFA, INFO)

line 1143: Dead code detected: [!(__CS_ret != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 1143: Dead code detected: return 0; (CFACreationUtils.addEdgeToCFA, INFO)

line 1164: Dead code detected: __CS_cs(); (CFACreationUtils.addEdgeToCFA, INFO)

line 1164: Dead code detected: [!(__CS_ret != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 1164: Dead code detected: return 0; (CFACreationUtils.addEdgeToCFA, INFO)

line 1166: Dead code detected: __CS_cs(); (CFACreationUtils.addEdgeToCFA, INFO)

line 1166: Dead code detected: [!(__CS_ret != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 1166: Dead code detected: return 0; (CFACreationUtils.addEdgeToCFA, INFO)

line 1168: Dead code detected: __CS_cs(); (CFACreationUtils.addEdgeToCFA, INFO)

line 1168: Dead code detected: [!(__CS_ret != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 1168: Dead code detected: return 0; (CFACreationUtils.addEdgeToCFA, INFO)

line 1183: Dead code detected: __CS_cs(); (CFACreationUtils.addEdgeToCFA, INFO)

line 1183: Dead code detected: [!(__CS_ret != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 1183: Dead code detected: return 0; (CFACreationUtils.addEdgeToCFA, INFO)

line 1200: Dead code detected: __CS_cs(); (CFACreationUtils.addEdgeToCFA, INFO)

line 1200: Dead code detected: [!(__CS_ret != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 1200: Dead code detected: return 0; (CFACreationUtils.addEdgeToCFA, INFO)

line 1202: Dead code detected: __CS_cs(); (CFACreationUtils.addEdgeToCFA, INFO)

line 1202: Dead code detected: [!(__CS_ret != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 1202: Dead code detected: return 0; (CFACreationUtils.addEdgeToCFA, INFO)

line 1204: Dead code detected: __CS_cs(); (CFACreationUtils.addEdgeToCFA, INFO)

line 1204: Dead code detected: [!(__CS_ret != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 1204: Dead code detected: return 0; (CFACreationUtils.addEdgeToCFA, INFO)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

line 1315: Ignoring function call through function pointer *(__CS_thread[1]): (*(__CS_thread[1]))(0); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 1321: Ignoring function call through function pointer *(__CS_thread[2]): (*(__CS_thread[2]))(0); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            215 (1% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            194 (90%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         21 (10%)
  Times precision was empty:       64 (30%)
  Times precision was {false}:     26 (12%)
  Times result was cached:         0 (0%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      125 (58%)
  Times result was 'false':        46 (21%)
Number of strengthen sat checks:   0
Number of coverage checks:         8342
  BDD entailment checks:           138
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       929
Number of predicates discovered:          10
Number of abstraction locations:          5
Max number of predicates per location:    6
Avg number of predicates per location:    3
Total predicates per abstraction:         475
Max number of predicates per abstraction: 6
Avg number of predicates per abstraction: 3.15
Number of irrelevant predicates:          229 (48%)
Number of preds handled by boolean abs:   246 (52%)
  Total number of models for allsat:      203
  Max number of models for allsat:        5
  Avg number of models for allsat:        1.62

Time for post operator:                  8.238s
  Time for path formula creation:        8.161s
Time for strengthen operator:            0.132s
Time for prec operator:                873.524s
  Time for abstraction:                873.400s (Max:   422.277s, Count: 215)
    Boolean abstraction:                 9.324s
    Solving time:                      864.283s (Max:   422.113s)
    Model enumeration time:              5.175s
    Time for BDD construction:           0.043s (Max:     0.006s)
Time for merge operator:                 2.830s
Time for coverage check:                 0.021s
  Time for BDD entailment checks:        0.001s
Total time for SMT solver (w/o itp):   869.458s

Number of path formula cache hits:   5672 (16%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     7.857s

Total number of created targets for pointer analysis: 137026
   Number of created targets for uf: *signed_int is 2065
   Number of created targets for uf: *unsigned_char is 793
   Number of created targets for uf: *(unsigned_char)* is 145
   Number of created targets for uf: *_Bool is 9
   Number of created targets for uf: *(Return_type:_[(void)*],_Parameters:_1,_Parameter_1_type:_[(void)*],_VarArgs:_false)* is 25


Number of BDD nodes:                               281
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         335 (count: 1146, min: 0, max: 80, avg: 0.29)
Time for BDD node cleanup:                             0.012s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.253s
Automaton transfers with branching:                0
Automaton transfer successors:                        34709 (count: 34709, min: 1, max: 1, avg: 1.00) [1 x 34709]

CPA algorithm statistics
------------------------
Number of iterations:            21474
Max size of waitlist:            63
Average size of waitlist:        15
Number of computed successors:   26404
Max successors for one state:    2
Number of times merged:          4102
Number of times stopped:         4126
Number of times breaked:         12

Total time for CPA algorithm:       888.050s (Max:   425.919s)
  Time for choose from waitlist:      0.068s
  Time for precision adjustment:    874.065s
  Time for transfer relation:        10.050s
  Time for merge operator:            3.110s
  Time for stop operator:             0.131s
  Time for adding to reached set:     0.190s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   12
Avg. length of target path (in blocks):                 109 (count: 12, min: 2, max: 15, avg: 9.08)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  10.015s
  Counterexample analysis:                             9.828s (Max:     0.991s, Calls: 12)
    Refinement sat check:                              9.083s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.016s
  Precision update:                                    0.007s
  ARG update:                                          0.117s

Length of refined path (in blocks):                      72 (count: 12, min: 2, max: 13, avg: 6.00)
Number of affected states:                               24 (count: 12, min: 1, max: 4, avg: 2.00)
Length (states) of path with itp 'true':                 36 (count: 12, min: 0, max: 9, avg: 3.00)
Length (states) of path with itp non-trivial itp:        24 (count: 12, min: 1, max: 4, avg: 2.00)
Length (states) of path with itp 'false':                10 (count: 12, min: 0, max: 1, avg: 0.83)
Different non-trivial interpolants along paths:          12 (count: 12, min: 0, max: 3, avg: 1.00)
Equal non-trivial interpolants along paths:               0 (count: 12, min: 0, max: 0, avg: 0.00)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                12
Number of successful refinements:     12
Number of failed refinements:         0
Max. size of reached set before ref.: 3232
Max. size of reached set after ref.:  1650
Avg. size of reached set before ref.: 2936.00
Avg. size of reached set after ref.:  1353.00

Total time for CEGAR algorithm:     898.265s
Time for refinements:                10.192s
Average time for refinement:          0.849s
Max time for refinement:              1.099s

Code Coverage
-----------------------------
  Function coverage:      0.565
  Visited lines:          454
  Total lines:            548
  Line coverage:          0.828
  Visited conditions:     229
  Total conditions:       334
  Condition coverage:     0.686

CPAchecker general statistics
-----------------------------
Number of program locations:     1166
Number of CFA edges:             1348
Number of relevant variables:    79
Number of functions:             23
Number of loops:                 8
Size of reached set:             3236
  Number of reached locations:   368 (32%)
    Avg states per location:     8
    Max states per location:     154 (at node N8)
  Number of reached functions:   13 (57%)
  Number of partitions:          3225
    Avg size of partitions:      1
    Max size of partitions:      5 (with key [N624 (before line 1236), Function main called from node N601, stack depth 1 [784b990c], stack [main]])
  Number of target states:       0
  Size of final wait list        63

Time for analysis setup:          3.992s
  Time for loading CPAs:          0.737s
  Time for loading parser:        0.712s
  Time for CFA construction:      2.449s
    Time for parsing file(s):     0.773s
    Time for AST to CFA:          0.737s
    Time for CFA sanity check:    0.158s
    Time for post-processing:     0.569s
      Time for var class.:        0.272s
Time for Analysis:              898.265s
CPU time for analysis:          898.240s
Total time for CPAchecker:      902.266s
Total CPU time for CPAchecker:  902.230s
Time for statistics:              0.138s

Time for Garbage Collector:       0.561s (in 49 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 72MB (    69 MiB) max;     58MB (    55 MiB) avg;     75MB (    71 MiB) peak
Used non-heap memory:             37MB (    36 MiB) max;     36MB (    35 MiB) avg;     38MB (    36 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        39MB (    37 MiB) max;     38MB (    37 MiB) avg
Total process virtual memory:   8535MB (  8140 MiB) max;   8345MB (  7958 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
