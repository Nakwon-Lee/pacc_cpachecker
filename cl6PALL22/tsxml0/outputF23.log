scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/seq-pthread/cs_queue_true-unreach-call.i


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_uc_ndckt/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 1046: Dead code detected: __CS_cs(); (CFACreationUtils.addEdgeToCFA, INFO)

line 1046: Dead code detected: [!(__CS_ret != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 1046: Dead code detected: return 0; (CFACreationUtils.addEdgeToCFA, INFO)

line 1051: Dead code detected: __CS_cs(); (CFACreationUtils.addEdgeToCFA, INFO)

line 1051: Dead code detected: [!(__CS_ret != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 1051: Dead code detected: return 0; (CFACreationUtils.addEdgeToCFA, INFO)

line 1062: Dead code detected: __CS_cs(); (CFACreationUtils.addEdgeToCFA, INFO)

line 1062: Dead code detected: [!(__CS_ret != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 1062: Dead code detected: return 0; (CFACreationUtils.addEdgeToCFA, INFO)

line 1067: Dead code detected: __CS_cs(); (CFACreationUtils.addEdgeToCFA, INFO)

line 1067: Dead code detected: [!(__CS_ret != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 1067: Dead code detected: return 0; (CFACreationUtils.addEdgeToCFA, INFO)

line 1090: Dead code detected: __CS_cs(); (CFACreationUtils.addEdgeToCFA, INFO)

line 1090: Dead code detected: [!(__CS_ret != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 1090: Dead code detected: return 0; (CFACreationUtils.addEdgeToCFA, INFO)

line 1111: Dead code detected: __CS_cs(); (CFACreationUtils.addEdgeToCFA, INFO)

line 1111: Dead code detected: [!(__CS_ret != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 1111: Dead code detected: return 0; (CFACreationUtils.addEdgeToCFA, INFO)

line 1143: Dead code detected: __CS_cs(); (CFACreationUtils.addEdgeToCFA, INFO)

line 1143: Dead code detected: [!(__CS_ret != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 1143: Dead code detected: return 0; (CFACreationUtils.addEdgeToCFA, INFO)

line 1164: Dead code detected: __CS_cs(); (CFACreationUtils.addEdgeToCFA, INFO)

line 1164: Dead code detected: [!(__CS_ret != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 1164: Dead code detected: return 0; (CFACreationUtils.addEdgeToCFA, INFO)

line 1166: Dead code detected: __CS_cs(); (CFACreationUtils.addEdgeToCFA, INFO)

line 1166: Dead code detected: [!(__CS_ret != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 1166: Dead code detected: return 0; (CFACreationUtils.addEdgeToCFA, INFO)

line 1168: Dead code detected: __CS_cs(); (CFACreationUtils.addEdgeToCFA, INFO)

line 1168: Dead code detected: [!(__CS_ret != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 1168: Dead code detected: return 0; (CFACreationUtils.addEdgeToCFA, INFO)

line 1183: Dead code detected: __CS_cs(); (CFACreationUtils.addEdgeToCFA, INFO)

line 1183: Dead code detected: [!(__CS_ret != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 1183: Dead code detected: return 0; (CFACreationUtils.addEdgeToCFA, INFO)

line 1200: Dead code detected: __CS_cs(); (CFACreationUtils.addEdgeToCFA, INFO)

line 1200: Dead code detected: [!(__CS_ret != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 1200: Dead code detected: return 0; (CFACreationUtils.addEdgeToCFA, INFO)

line 1202: Dead code detected: __CS_cs(); (CFACreationUtils.addEdgeToCFA, INFO)

line 1202: Dead code detected: [!(__CS_ret != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 1202: Dead code detected: return 0; (CFACreationUtils.addEdgeToCFA, INFO)

line 1204: Dead code detected: __CS_cs(); (CFACreationUtils.addEdgeToCFA, INFO)

line 1204: Dead code detected: [!(__CS_ret != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 1204: Dead code detected: return 0; (CFACreationUtils.addEdgeToCFA, INFO)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

line 1315: Ignoring function call through function pointer *(__CS_thread[1]): (*(__CS_thread[1]))(0); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 1321: Ignoring function call through function pointer *(__CS_thread[2]): (*(__CS_thread[2]))(0); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            83 (0% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            56 (67%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         27 (33%)
  Times precision was empty:       39 (47%)
  Times precision was {false}:     21 (25%)
  Times result was cached:         20 (24%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      3 (4%)
  Times result was 'false':        28 (34%)
Number of strengthen sat checks:   0
Number of coverage checks:         4210
  BDD entailment checks:           14
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       929
Number of predicates discovered:          6
Number of abstraction locations:          4
Max number of predicates per location:    5
Avg number of predicates per location:    2
Total predicates per abstraction:         71
Max number of predicates per abstraction: 5
Avg number of predicates per abstraction: 2.96
Number of irrelevant predicates:          49 (69%)
Number of preds handled by boolean abs:   10 (14%)
  Total number of models for allsat:      4
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.33

Time for post operator:                  3.643s
  Time for path formula creation:        3.586s
Time for strengthen operator:            0.129s
Time for prec operator:                887.494s
  Time for abstraction:                887.391s (Max:   848.451s, Count: 83)
    Boolean abstraction:                 0.181s
    Solving time:                      883.977s (Max:   848.252s)
    Model enumeration time:              0.004s
    Time for BDD construction:           0.009s (Max:     0.008s)
Time for merge operator:                 1.003s
Time for coverage check:                 0.012s
  Time for BDD entailment checks:        0.000s
Total time for SMT solver (w/o itp):   883.981s

Number of path formula cache hits:   11006 (57%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     3.437s

Total number of created targets for pointer analysis: 27472
   Number of created targets for uf: *signed_int is 345
   Number of created targets for uf: *unsigned_char is 45
   Number of created targets for uf: *(unsigned_char)* is 25
   Number of created targets for uf: *_Bool is 9
   Number of created targets for uf: *(Return_type:_[(void)*],_Parameters:_1,_Parameter_1_type:_[(void)*],_VarArgs:_false)* is 5


Number of BDD nodes:                               212
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                          47 (count: 208, min: 0, max: 25, avg: 0.23)
Time for BDD node cleanup:                             0.002s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.237s
Automaton transfers with branching:                0
Automaton transfer successors:                        17997 (count: 17997, min: 1, max: 1, avg: 1.00) [1 x 17997]

CPA algorithm statistics
------------------------
Number of iterations:            11181
Max size of waitlist:            60
Average size of waitlist:        12
Number of computed successors:   13608
Max successors for one state:    2
Number of times merged:          2098
Number of times stopped:         2109
Number of times breaked:         4

Total time for CPA algorithm:       894.599s (Max:   868.561s)
  Time for choose from waitlist:      0.069s
  Time for precision adjustment:    887.907s
  Time for transfer relation:         4.943s
  Time for merge operator:            1.201s
  Time for stop operator:             0.098s
  Time for adding to reached set:     0.126s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   4
Avg. length of target path (in blocks):                  10 (count: 4, min: 2, max: 3, avg: 2.50)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   3.791s
  Counterexample analysis:                             3.679s (Max:     1.419s, Calls: 4)
    Refinement sat check:                              3.410s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.009s
  Precision update:                                    0.004s
  ARG update:                                          0.090s

Length of refined path (in blocks):                       8 (count: 4, min: 2, max: 2, avg: 2.00)
Number of affected states:                                4 (count: 4, min: 1, max: 1, avg: 1.00)
Length (states) of path with itp 'true':                  0 (count: 4, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:         4 (count: 4, min: 1, max: 1, avg: 1.00)
Length (states) of path with itp 'false':                 2 (count: 4, min: 0, max: 1, avg: 0.50)
Different non-trivial interpolants along paths:           0 (count: 4, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:               0 (count: 4, min: 0, max: 0, avg: 0.00)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                4
Number of successful refinements:     4
Number of failed refinements:         0
Max. size of reached set before ref.: 2609
Max. size of reached set after ref.:  3
Avg. size of reached set before ref.: 2075.25
Avg. size of reached set after ref.:  3.00

Total time for CEGAR algorithm:     898.465s
Time for refinements:                 3.866s
Average time for refinement:          0.966s
Max time for refinement:              1.449s

Code Coverage
-----------------------------
  Function coverage:      0.565
  Visited lines:          454
  Total lines:            548
  Line coverage:          0.828
  Visited conditions:     229
  Total conditions:       334
  Condition coverage:     0.686

CPAchecker general statistics
-----------------------------
Number of program locations:     1166
Number of CFA edges:             1348
Number of relevant variables:    79
Number of functions:             23
Number of loops:                 8
Size of reached set:             3182
  Number of reached locations:   368 (32%)
    Avg states per location:     8
    Max states per location:     154 (at node N8)
  Number of reached functions:   13 (57%)
  Number of partitions:          3181
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N613 (before line 1229), Function main called from node N601, stack depth 1 [784b990c], stack [main]])
  Number of target states:       0
  Size of final wait list        59

Time for analysis setup:          4.030s
  Time for loading CPAs:          0.820s
  Time for loading parser:        0.653s
  Time for CFA construction:      2.376s
    Time for parsing file(s):     0.690s
    Time for AST to CFA:          0.826s
    Time for CFA sanity check:    0.158s
    Time for post-processing:     0.513s
      Time for var class.:        0.221s
Time for Analysis:              898.465s
CPU time for analysis:          898.430s
Total time for CPAchecker:      902.507s
Total CPU time for CPAchecker:  902.460s
Time for statistics:              0.135s

Time for Garbage Collector:       0.417s (in 37 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 68MB (    64 MiB) max;     56MB (    53 MiB) avg;     71MB (    67 MiB) peak
Used non-heap memory:             36MB (    34 MiB) max;     36MB (    34 MiB) avg;     36MB (    35 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        38MB (    36 MiB) max;     38MB (    36 MiB) avg
Total process virtual memory:   8267MB (  7884 MiB) max;   8259MB (  7876 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
