scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/seq-pthread/cs_queue_true-unreach-call.i


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_qdkckm4d/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 1046: Dead code detected: __CS_cs(); (CFACreationUtils.addEdgeToCFA, INFO)

line 1046: Dead code detected: [!(__CS_ret != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 1046: Dead code detected: return 0; (CFACreationUtils.addEdgeToCFA, INFO)

line 1051: Dead code detected: __CS_cs(); (CFACreationUtils.addEdgeToCFA, INFO)

line 1051: Dead code detected: [!(__CS_ret != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 1051: Dead code detected: return 0; (CFACreationUtils.addEdgeToCFA, INFO)

line 1062: Dead code detected: __CS_cs(); (CFACreationUtils.addEdgeToCFA, INFO)

line 1062: Dead code detected: [!(__CS_ret != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 1062: Dead code detected: return 0; (CFACreationUtils.addEdgeToCFA, INFO)

line 1067: Dead code detected: __CS_cs(); (CFACreationUtils.addEdgeToCFA, INFO)

line 1067: Dead code detected: [!(__CS_ret != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 1067: Dead code detected: return 0; (CFACreationUtils.addEdgeToCFA, INFO)

line 1090: Dead code detected: __CS_cs(); (CFACreationUtils.addEdgeToCFA, INFO)

line 1090: Dead code detected: [!(__CS_ret != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 1090: Dead code detected: return 0; (CFACreationUtils.addEdgeToCFA, INFO)

line 1111: Dead code detected: __CS_cs(); (CFACreationUtils.addEdgeToCFA, INFO)

line 1111: Dead code detected: [!(__CS_ret != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 1111: Dead code detected: return 0; (CFACreationUtils.addEdgeToCFA, INFO)

line 1143: Dead code detected: __CS_cs(); (CFACreationUtils.addEdgeToCFA, INFO)

line 1143: Dead code detected: [!(__CS_ret != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 1143: Dead code detected: return 0; (CFACreationUtils.addEdgeToCFA, INFO)

line 1164: Dead code detected: __CS_cs(); (CFACreationUtils.addEdgeToCFA, INFO)

line 1164: Dead code detected: [!(__CS_ret != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 1164: Dead code detected: return 0; (CFACreationUtils.addEdgeToCFA, INFO)

line 1166: Dead code detected: __CS_cs(); (CFACreationUtils.addEdgeToCFA, INFO)

line 1166: Dead code detected: [!(__CS_ret != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 1166: Dead code detected: return 0; (CFACreationUtils.addEdgeToCFA, INFO)

line 1168: Dead code detected: __CS_cs(); (CFACreationUtils.addEdgeToCFA, INFO)

line 1168: Dead code detected: [!(__CS_ret != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 1168: Dead code detected: return 0; (CFACreationUtils.addEdgeToCFA, INFO)

line 1183: Dead code detected: __CS_cs(); (CFACreationUtils.addEdgeToCFA, INFO)

line 1183: Dead code detected: [!(__CS_ret != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 1183: Dead code detected: return 0; (CFACreationUtils.addEdgeToCFA, INFO)

line 1200: Dead code detected: __CS_cs(); (CFACreationUtils.addEdgeToCFA, INFO)

line 1200: Dead code detected: [!(__CS_ret != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 1200: Dead code detected: return 0; (CFACreationUtils.addEdgeToCFA, INFO)

line 1202: Dead code detected: __CS_cs(); (CFACreationUtils.addEdgeToCFA, INFO)

line 1202: Dead code detected: [!(__CS_ret != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 1202: Dead code detected: return 0; (CFACreationUtils.addEdgeToCFA, INFO)

line 1204: Dead code detected: __CS_cs(); (CFACreationUtils.addEdgeToCFA, INFO)

line 1204: Dead code detected: [!(__CS_ret != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 1204: Dead code detected: return 0; (CFACreationUtils.addEdgeToCFA, INFO)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

line 1315: Ignoring function call through function pointer *(__CS_thread[1]): (*(__CS_thread[1]))(0); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 1321: Ignoring function call through function pointer *(__CS_thread[2]): (*(__CS_thread[2]))(0); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            148 (1% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            116 (78%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         32 (22%)
  Times precision was empty:       26 (18%)
  Times precision was {false}:     51 (34%)
  Times result was cached:         18 (12%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      53 (36%)
  Times result was 'false':        41 (28%)
Number of strengthen sat checks:   0
Number of coverage checks:         6739
  BDD entailment checks:           53
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       929
Number of predicates discovered:          8
Number of abstraction locations:          7
Max number of predicates per location:    6
Avg number of predicates per location:    2
Total predicates per abstraction:         235
Max number of predicates per abstraction: 6
Avg number of predicates per abstraction: 2.26
Number of irrelevant predicates:          153 (65%)
Number of preds handled by boolean abs:   72 (31%)
  Total number of models for allsat:      78
  Max number of models for allsat:        3
  Avg number of models for allsat:        1.47

Time for post operator:                  6.332s
  Time for path formula creation:        6.257s
Time for strengthen operator:            0.129s
Time for prec operator:                876.044s
  Time for abstraction:                875.896s (Max:   182.858s, Count: 148)
    Boolean abstraction:                 2.897s
    Solving time:                      866.565s (Max:   182.605s)
    Model enumeration time:              1.231s
    Time for BDD construction:           0.031s (Max:     0.010s)
Time for merge operator:                 1.933s
Time for coverage check:                 0.013s
  Time for BDD entailment checks:        0.000s
Total time for SMT solver (w/o itp):   867.796s

Number of path formula cache hits:   11045 (37%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     6.029s

Total number of created targets for pointer analysis: 85989
   Number of created targets for uf: *signed_int is 1377
   Number of created targets for uf: *unsigned_char is 177
   Number of created targets for uf: *(unsigned_char)* is 97
   Number of created targets for uf: *_Bool is 9
   Number of created targets for uf: *(Return_type:_[(void)*],_Parameters:_1,_Parameter_1_type:_[(void)*],_VarArgs:_false)* is 15


Number of BDD nodes:                               218
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         138 (count: 696, min: 0, max: 31, avg: 0.20)
Time for BDD node cleanup:                             0.023s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.349s
Automaton transfers with branching:                0
Automaton transfer successors:                        28531 (count: 28531, min: 1, max: 1, avg: 1.00) [1 x 28531]

CPA algorithm statistics
------------------------
Number of iterations:            17709
Max size of waitlist:            59
Average size of waitlist:        12
Number of computed successors:   21686
Max successors for one state:    2
Number of times merged:          3343
Number of times stopped:         3360
Number of times breaked:         10

Total time for CPA algorithm:       887.665s (Max:   246.163s)
  Time for choose from waitlist:      0.084s
  Time for precision adjustment:    876.596s
  Time for transfer relation:         8.080s
  Time for merge operator:            2.176s
  Time for stop operator:             0.116s
  Time for adding to reached set:     0.222s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   10
Avg. length of target path (in blocks):                  61 (count: 10, min: 2, max: 11, avg: 6.10)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   7.968s
  Counterexample analysis:                             7.788s (Max:     1.042s, Calls: 10)
    Refinement sat check:                              7.158s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.015s
  Precision update:                                    0.006s
  ARG update:                                          0.131s

Length of refined path (in blocks):                      43 (count: 10, min: 2, max: 10, avg: 4.30)
Number of affected states:                               13 (count: 10, min: 1, max: 2, avg: 1.30)
Length (states) of path with itp 'true':                 20 (count: 10, min: 0, max: 7, avg: 2.00)
Length (states) of path with itp non-trivial itp:        13 (count: 10, min: 1, max: 2, avg: 1.30)
Length (states) of path with itp 'false':                 8 (count: 10, min: 0, max: 1, avg: 0.80)
Different non-trivial interpolants along paths:           3 (count: 10, min: 0, max: 1, avg: 0.30)
Equal non-trivial interpolants along paths:               0 (count: 10, min: 0, max: 0, avg: 0.00)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                10
Number of successful refinements:     10
Number of failed refinements:         0
Max. size of reached set before ref.: 3208
Max. size of reached set after ref.:  1636
Avg. size of reached set before ref.: 2635.00
Avg. size of reached set after ref.:  971.80

Total time for CEGAR algorithm:     895.788s
Time for refinements:                 8.108s
Average time for refinement:          0.810s
Max time for refinement:              1.146s

Code Coverage
-----------------------------
  Function coverage:      0.565
  Visited lines:          454
  Total lines:            548
  Line coverage:          0.828
  Visited conditions:     229
  Total conditions:       334
  Condition coverage:     0.686

CPAchecker general statistics
-----------------------------
Number of program locations:     1166
Number of CFA edges:             1348
Number of relevant variables:    79
Number of functions:             23
Number of loops:                 8
Size of reached set:             1654
  Number of reached locations:   366 (31%)
    Avg states per location:     4
    Max states per location:     77 (at node N8)
  Number of reached functions:   13 (57%)
  Number of partitions:          1647
    Avg size of partitions:      1
    Max size of partitions:      3 (with key [N624 (before line 1236), Function main called from node N601, stack depth 1 [784b990c], stack [main]])
  Number of target states:       0
  Size of final wait list        2

Time for analysis setup:          4.411s
  Time for loading CPAs:          0.811s
  Time for loading parser:        0.798s
  Time for CFA construction:      2.615s
    Time for parsing file(s):     0.784s
    Time for AST to CFA:          0.840s
    Time for CFA sanity check:    0.185s
    Time for post-processing:     0.587s
      Time for var class.:        0.277s
Time for Analysis:              895.788s
CPU time for analysis:          895.740s
Total time for CPAchecker:      900.207s
Total CPU time for CPAchecker:  900.160s
Time for statistics:              0.099s

Time for Garbage Collector:       0.649s (in 61 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 73MB (    70 MiB) max;     53MB (    50 MiB) avg;     75MB (    72 MiB) peak
Used non-heap memory:             38MB (    36 MiB) max;     37MB (    35 MiB) avg;     38MB (    36 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        39MB (    37 MiB) max;     39MB (    37 MiB) avg
Total process virtual memory:   8341MB (  7954 MiB) max;   8283MB (  7899 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
