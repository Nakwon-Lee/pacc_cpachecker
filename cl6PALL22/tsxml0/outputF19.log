scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/seq-pthread/cs_queue_true-unreach-call.i


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_vjgoae6o/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 1046: Dead code detected: __CS_cs(); (CFACreationUtils.addEdgeToCFA, INFO)

line 1046: Dead code detected: [!(__CS_ret != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 1046: Dead code detected: return 0; (CFACreationUtils.addEdgeToCFA, INFO)

line 1051: Dead code detected: __CS_cs(); (CFACreationUtils.addEdgeToCFA, INFO)

line 1051: Dead code detected: [!(__CS_ret != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 1051: Dead code detected: return 0; (CFACreationUtils.addEdgeToCFA, INFO)

line 1062: Dead code detected: __CS_cs(); (CFACreationUtils.addEdgeToCFA, INFO)

line 1062: Dead code detected: [!(__CS_ret != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 1062: Dead code detected: return 0; (CFACreationUtils.addEdgeToCFA, INFO)

line 1067: Dead code detected: __CS_cs(); (CFACreationUtils.addEdgeToCFA, INFO)

line 1067: Dead code detected: [!(__CS_ret != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 1067: Dead code detected: return 0; (CFACreationUtils.addEdgeToCFA, INFO)

line 1090: Dead code detected: __CS_cs(); (CFACreationUtils.addEdgeToCFA, INFO)

line 1090: Dead code detected: [!(__CS_ret != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 1090: Dead code detected: return 0; (CFACreationUtils.addEdgeToCFA, INFO)

line 1111: Dead code detected: __CS_cs(); (CFACreationUtils.addEdgeToCFA, INFO)

line 1111: Dead code detected: [!(__CS_ret != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 1111: Dead code detected: return 0; (CFACreationUtils.addEdgeToCFA, INFO)

line 1143: Dead code detected: __CS_cs(); (CFACreationUtils.addEdgeToCFA, INFO)

line 1143: Dead code detected: [!(__CS_ret != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 1143: Dead code detected: return 0; (CFACreationUtils.addEdgeToCFA, INFO)

line 1164: Dead code detected: __CS_cs(); (CFACreationUtils.addEdgeToCFA, INFO)

line 1164: Dead code detected: [!(__CS_ret != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 1164: Dead code detected: return 0; (CFACreationUtils.addEdgeToCFA, INFO)

line 1166: Dead code detected: __CS_cs(); (CFACreationUtils.addEdgeToCFA, INFO)

line 1166: Dead code detected: [!(__CS_ret != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 1166: Dead code detected: return 0; (CFACreationUtils.addEdgeToCFA, INFO)

line 1168: Dead code detected: __CS_cs(); (CFACreationUtils.addEdgeToCFA, INFO)

line 1168: Dead code detected: [!(__CS_ret != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 1168: Dead code detected: return 0; (CFACreationUtils.addEdgeToCFA, INFO)

line 1183: Dead code detected: __CS_cs(); (CFACreationUtils.addEdgeToCFA, INFO)

line 1183: Dead code detected: [!(__CS_ret != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 1183: Dead code detected: return 0; (CFACreationUtils.addEdgeToCFA, INFO)

line 1200: Dead code detected: __CS_cs(); (CFACreationUtils.addEdgeToCFA, INFO)

line 1200: Dead code detected: [!(__CS_ret != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 1200: Dead code detected: return 0; (CFACreationUtils.addEdgeToCFA, INFO)

line 1202: Dead code detected: __CS_cs(); (CFACreationUtils.addEdgeToCFA, INFO)

line 1202: Dead code detected: [!(__CS_ret != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 1202: Dead code detected: return 0; (CFACreationUtils.addEdgeToCFA, INFO)

line 1204: Dead code detected: __CS_cs(); (CFACreationUtils.addEdgeToCFA, INFO)

line 1204: Dead code detected: [!(__CS_ret != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 1204: Dead code detected: return 0; (CFACreationUtils.addEdgeToCFA, INFO)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

line 1315: Ignoring function call through function pointer *(__CS_thread[1]): (*(__CS_thread[1]))(0); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 1321: Ignoring function call through function pointer *(__CS_thread[2]): (*(__CS_thread[2]))(0); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            45 (0% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            27 (60%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         18 (40%)
  Times precision was empty:       22 (49%)
  Times precision was {false}:     13 (29%)
  Times result was cached:         8 (18%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      2 (4%)
  Times result was 'false':        17 (38%)
Number of strengthen sat checks:   0
Number of coverage checks:         2820
  BDD entailment checks:           2
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       929
Number of predicates discovered:          6
Number of abstraction locations:          3
Max number of predicates per location:    5
Avg number of predicates per location:    2
Total predicates per abstraction:         34
Max number of predicates per abstraction: 5
Avg number of predicates per abstraction: 2.27
Number of irrelevant predicates:          20 (59%)
Number of preds handled by boolean abs:   9 (26%)
  Total number of models for allsat:      2
  Max number of models for allsat:        1
  Avg number of models for allsat:        1.00

Time for post operator:                  2.658s
  Time for path formula creation:        2.619s
Time for strengthen operator:            0.066s
Time for prec operator:                888.679s
  Time for abstraction:                888.584s (Max:   869.387s, Count: 45)
    Boolean abstraction:                 0.177s
    Solving time:                      885.587s (Max:   868.933s)
    Model enumeration time:              0.004s
    Time for BDD construction:           0.006s (Max:     0.005s)
Time for merge operator:                 0.654s
Time for coverage check:                 0.001s
  Time for BDD entailment checks:        0.000s
Total time for SMT solver (w/o itp):   885.591s

Number of path formula cache hits:   8187 (63%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     2.472s

Total number of created targets for pointer analysis: 14788
   Number of created targets for uf: *signed_int is 173
   Number of created targets for uf: *unsigned_char is 23
   Number of created targets for uf: *(unsigned_char)* is 13
   Number of created targets for uf: *_Bool is 9
   Number of created targets for uf: *(Return_type:_[(void)*],_Parameters:_1,_Parameter_1_type:_[(void)*],_VarArgs:_false)* is 3


Number of BDD nodes:                               212
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                          45 (count: 131, min: 0, max: 25, avg: 0.34)
Time for BDD node cleanup:                             0.001s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.226s
Automaton transfers with branching:                0
Automaton transfer successors:                        12193 (count: 12193, min: 1, max: 1, avg: 1.00) [1 x 12193]

CPA algorithm statistics
------------------------
Number of iterations:            7485
Max size of waitlist:            60
Average size of waitlist:        13
Number of computed successors:   9098
Max successors for one state:    2
Number of times merged:          1409
Number of times stopped:         1411
Number of times breaked:         3

Total time for CPA algorithm:       893.979s (Max:   872.260s)
  Time for choose from waitlist:      0.048s
  Time for precision adjustment:    888.958s
  Time for transfer relation:         3.768s
  Time for merge operator:            0.827s
  Time for stop operator:             0.060s
  Time for adding to reached set:     0.136s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   3
Avg. length of target path (in blocks):                   7 (count: 3, min: 2, max: 3, avg: 2.33)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   2.395s
  Counterexample analysis:                             2.285s (Max:     0.850s, Calls: 3)
    Refinement sat check:                              2.131s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.012s
  Precision update:                                    0.002s
  ARG update:                                          0.083s

Length of refined path (in blocks):                       6 (count: 3, min: 2, max: 2, avg: 2.00)
Number of affected states:                                3 (count: 3, min: 1, max: 1, avg: 1.00)
Length (states) of path with itp 'true':                  0 (count: 3, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:         3 (count: 3, min: 1, max: 1, avg: 1.00)
Length (states) of path with itp 'false':                 1 (count: 3, min: 0, max: 1, avg: 0.33)
Different non-trivial interpolants along paths:           0 (count: 3, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:               0 (count: 3, min: 0, max: 0, avg: 0.00)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                3
Number of successful refinements:     3
Number of failed refinements:         0
Max. size of reached set before ref.: 2596
Max. size of reached set after ref.:  3
Avg. size of reached set before ref.: 1911.00
Avg. size of reached set after ref.:  3.00

Total time for CEGAR algorithm:     896.420s
Time for refinements:                 2.439s
Average time for refinement:          0.813s
Max time for refinement:              0.941s

Code Coverage
-----------------------------
  Function coverage:      0.609
  Visited lines:          474
  Total lines:            548
  Line coverage:          0.865
  Visited conditions:     257
  Total conditions:       334
  Condition coverage:     0.769

CPAchecker general statistics
-----------------------------
Number of program locations:     1166
Number of CFA edges:             1348
Number of relevant variables:    79
Number of functions:             23
Number of loops:                 8
Size of reached set:             1946
  Number of reached locations:   416 (36%)
    Avg states per location:     4
    Max states per location:     97 (at node N8)
  Number of reached functions:   14 (61%)
  Number of partitions:          1946
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0
  Size of final wait list        11

Time for analysis setup:          4.272s
  Time for loading CPAs:          0.775s
  Time for loading parser:        0.818s
  Time for CFA construction:      2.520s
    Time for parsing file(s):     0.786s
    Time for AST to CFA:          0.838s
    Time for CFA sanity check:    0.149s
    Time for post-processing:     0.531s
      Time for var class.:        0.225s
Time for Analysis:              896.420s
CPU time for analysis:          896.360s
Total time for CPAchecker:      900.697s
Total CPU time for CPAchecker:  900.640s
Time for statistics:              0.101s

Time for Garbage Collector:       0.317s (in 23 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 66MB (    63 MiB) max;     48MB (    45 MiB) avg;     68MB (    65 MiB) peak
Used non-heap memory:             36MB (    34 MiB) max;     35MB (    34 MiB) avg;     36MB (    35 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        38MB (    36 MiB) max;     38MB (    36 MiB) avg
Total process virtual memory:   8551MB (  8155 MiB) max;   8403MB (  8014 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
