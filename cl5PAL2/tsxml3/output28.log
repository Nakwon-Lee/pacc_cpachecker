scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/email_spec8_product14_true-unreach-call_true-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_6_l6r1io/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 355: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 401: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 419: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 635: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 667: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 676: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 685: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 710: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 798: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 818: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 827: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 842: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 913: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 934: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 971: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1008: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1047: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1086: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1123: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1160: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1197: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1234: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1271: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1550: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1579: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1627: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1674: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1719: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1797: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1866: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2000: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2083: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2130: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2177: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2222: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2285: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2392: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2446: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2518: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2565: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2878: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2901: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 192: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            81 (0% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            20 (25%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         61 (75%)
  Times precision was empty:       3 (4%)
  Times precision was {false}:     60 (74%)
  Times result was cached:         0 (0%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      18 (22%)
  Times result was 'false':        56 (69%)
Number of strengthen sat checks:   0
Number of coverage checks:         12795
  BDD entailment checks:           29
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       605
Number of predicates discovered:          80
Number of abstraction locations:          2
Max number of predicates per location:    79
Avg number of predicates per location:    40
Total predicates per abstraction:         742
Max number of predicates per abstraction: 79
Avg number of predicates per abstraction: 9.51
Number of irrelevant predicates:          63 (8%)
Number of preds handled by boolean abs:   679 (92%)
  Total number of models for allsat:      4550
  Max number of models for allsat:        2099
  Avg number of models for allsat:        252.78

Time for post operator:                  2.236s
  Time for path formula creation:        2.163s
Time for strengthen operator:            0.114s
Time for prec operator:                 17.287s
  Time for abstraction:                 17.140s (Max:     5.076s, Count: 81)
    Boolean abstraction:                12.652s
    Solving time:                        3.483s (Max:     0.183s)
    Model enumeration time:              9.791s
    Time for BDD construction:           2.198s (Max:     0.727s)
Time for merge operator:                 0.479s
Time for coverage check:                 0.040s
  Time for BDD entailment checks:        0.038s
Total time for SMT solver (w/o itp):    13.274s

Number of path formula cache hits:   28000 (63%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     2.072s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               203131
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       52597 (count: 21755, min: 0, max: 15833, avg: 2.42)
Time for BDD node cleanup:                             0.021s
Time for BDD garbage collection:                       0.159s (in 14 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.388s
Automaton transfers with branching:                0
Automaton transfer successors:                        40947 (count: 40947, min: 1, max: 1, avg: 1.00) [1 x 40947]

CPA algorithm statistics
------------------------
Number of iterations:            30915
Max size of waitlist:            11
Average size of waitlist:        5
Number of computed successors:   37380
Max successors for one state:    2
Number of times merged:          6383
Number of times stopped:         6385
Number of times breaked:         5

Total time for CPA algorithm:        24.213s (Max:    14.064s)
  Time for choose from waitlist:      0.127s
  Time for precision adjustment:     17.995s
  Time for transfer relation:         4.129s
  Time for merge operator:            0.919s
  Time for stop operator:             0.151s
  Time for adding to reached set:     0.241s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   5
Avg. length of target path (in blocks):                  14 (count: 5, min: 2, max: 4, avg: 2.80)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   1.169s
  Counterexample analysis:                             0.937s (Max:     0.450s, Calls: 5)
    Refinement sat check:                              0.835s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.047s
  Precision update:                                    0.003s
  ARG update:                                          0.144s

Length of refined path (in blocks):                      14 (count: 5, min: 2, max: 4, avg: 2.80)
Number of affected states:                                9 (count: 5, min: 1, max: 3, avg: 1.80)
Length (states) of path with itp 'true':                  0 (count: 5, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:         9 (count: 5, min: 1, max: 3, avg: 1.80)
Length (states) of path with itp 'false':                 0 (count: 5, min: 0, max: 0, avg: 0.00)
Different non-trivial interpolants along paths:           3 (count: 5, min: 0, max: 2, avg: 0.60)
Equal non-trivial interpolants along paths:               1 (count: 5, min: 0, max: 1, avg: 0.20)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                5
Number of successful refinements:     5
Number of failed refinements:         0
Max. size of reached set before ref.: 7024
Max. size of reached set after ref.:  136
Avg. size of reached set before ref.: 3811.40
Avg. size of reached set after ref.:  136.00

Total time for CEGAR algorithm:      25.537s
Time for refinements:                 1.316s
Average time for refinement:          0.263s
Max time for refinement:              0.572s

Code Coverage
-----------------------------
  Function coverage:      0.589
  Visited lines:          789
  Total lines:            1397
  Line coverage:          0.565
  Visited conditions:     308
  Total conditions:       488
  Condition coverage:     0.631

CPAchecker general statistics
-----------------------------
Number of program locations:     1914
Number of CFA edges:             2166
Number of relevant variables:    315
Number of functions:             107
Number of loops:                 4
Size of reached set:             12562
  Number of reached locations:   804 (42%)
    Avg states per location:     15
    Max states per location:     78 (at node N765)
  Number of reached functions:   63 (59%)
  Number of partitions:          12557
    Avg size of partitions:      1
    Max size of partitions:      6 (with key [N948 (before lines 1339-1506), Function test called from node N2052, stack depth 2 [5f59185e], stack [main, test]])
  Number of target states:       0
  Size of final wait list        6

Time for analysis setup:          4.198s
  Time for loading CPAs:          0.827s
  Time for loading parser:        0.736s
  Time for CFA construction:      2.458s
    Time for parsing file(s):     0.729s
    Time for AST to CFA:          0.716s
    Time for CFA sanity check:    0.238s
    Time for post-processing:     0.621s
      Time for var class.:        0.335s
Time for Analysis:               25.537s
CPU time for analysis:           25.530s
Total time for CPAchecker:       29.744s
Total CPU time for CPAchecker:   29.740s
Time for statistics:              0.327s

Time for Garbage Collector:       0.473s (in 25 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 75MB (    72 MiB) max;     48MB (    46 MiB) avg;     81MB (    77 MiB) peak
Used non-heap memory:             36MB (    35 MiB) max;     33MB (    32 MiB) avg;     37MB (    35 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        38MB (    37 MiB) max;     35MB (    34 MiB) avg
Total process virtual memory:   8134MB (  7757 MiB) max;   8121MB (  7744 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
