scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/seq-mthreaded/pals_lcr.3_true-unreach-call.ufo.BOUNDED-6.pals_true-termination.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_a6dxy0nr/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            59 (1% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            30 (51%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         29 (49%)
  Times precision was empty:       2 (3%)
  Times precision was {false}:     28 (47%)
  Times result was cached:         0 (0%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      29 (49%)
  Times result was 'false':        23 (39%)
Number of strengthen sat checks:   0
Number of coverage checks:         1436
  BDD entailment checks:           70
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       64
Number of predicates discovered:          137
Number of abstraction locations:          2
Max number of predicates per location:    136
Avg number of predicates per location:    68
Total predicates per abstraction:         2170
Max number of predicates per abstraction: 136
Avg number of predicates per abstraction: 38.07
Number of irrelevant predicates:          28 (1%)
Number of preds handled by boolean abs:   2142 (99%)
  Total number of models for allsat:      1179
  Max number of models for allsat:        210
  Avg number of models for allsat:        40.66

Time for post operator:                  0.379s
  Time for path formula creation:        0.367s
Time for strengthen operator:            0.017s
Time for prec operator:                  2.926s
  Time for abstraction:                  2.882s (Max:     0.259s, Count: 59)
    Boolean abstraction:                 1.964s
    Solving time:                        0.720s (Max:     0.037s)
    Model enumeration time:              0.587s
    Time for BDD construction:           0.822s (Max:     0.167s)
Time for merge operator:                 0.036s
Time for coverage check:                 0.021s
  Time for BDD entailment checks:        0.020s
Total time for SMT solver (w/o itp):     1.307s

Number of path formula cache hits:   3624 (73%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.341s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               81722
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       35312 (count: 18596, min: 0, max: 14763, avg: 1.90)
Time for BDD node cleanup:                             0.013s
Time for BDD garbage collection:                       0.126s (in 6 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.074s
Automaton transfers with branching:                0
Automaton transfer successors:                         4473 (count: 4473, min: 1, max: 1, avg: 1.00) [1 x 4473]

CPA algorithm statistics
------------------------
Number of iterations:            3102
Max size of waitlist:            17
Average size of waitlist:        2
Number of computed successors:   3814
Max successors for one state:    2
Number of times merged:          683
Number of times stopped:         684
Number of times breaked:         6

Total time for CPA algorithm:         4.042s (Max:     1.592s)
  Time for choose from waitlist:      0.024s
  Time for precision adjustment:      3.061s
  Time for transfer relation:         0.676s
  Time for merge operator:            0.107s
  Time for stop operator:             0.050s
  Time for adding to reached set:     0.044s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   6
Avg. length of target path (in blocks):                  27 (count: 6, min: 2, max: 7, avg: 4.50)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.315s
  Counterexample analysis:                             0.262s (Max:     0.102s, Calls: 6)
    Refinement sat check:                              0.168s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.026s
  Precision update:                                    0.009s
  ARG update:                                          0.009s

Length of refined path (in blocks):                      27 (count: 6, min: 2, max: 7, avg: 4.50)
Number of affected states:                               21 (count: 6, min: 1, max: 6, avg: 3.50)
Length (states) of path with itp 'true':                  0 (count: 6, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:        21 (count: 6, min: 1, max: 6, avg: 3.50)
Length (states) of path with itp 'false':                 0 (count: 6, min: 0, max: 0, avg: 0.00)
Different non-trivial interpolants along paths:          15 (count: 6, min: 0, max: 5, avg: 2.50)
Equal non-trivial interpolants along paths:               0 (count: 6, min: 0, max: 0, avg: 0.00)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                6
Number of successful refinements:     6
Number of failed refinements:         0
Max. size of reached set before ref.: 703
Max. size of reached set after ref.:  75
Avg. size of reached set before ref.: 440.50
Avg. size of reached set after ref.:  75.00

Total time for CEGAR algorithm:       4.392s
Time for refinements:                 0.350s
Average time for refinement:          0.058s
Max time for refinement:              0.116s

Code Coverage
-----------------------------
  Function coverage:      1.000
  Visited lines:          159
  Total lines:            159
  Line coverage:          1.000
  Visited conditions:     84
  Total conditions:       84
  Condition coverage:     1.000

CPAchecker general statistics
-----------------------------
Number of program locations:     264
Number of CFA edges:             304
Number of relevant variables:    35
Number of functions:             7
Number of loops:                 1
Size of reached set:             915
  Number of reached locations:   180 (68%)
    Avg states per location:     5
    Max states per location:     8 (at node N0)
  Number of reached functions:   7 (100%)
  Number of partitions:          908
    Avg size of partitions:      1
    Max size of partitions:      8 (with key [N210 (before line 300), Function main called from node N183, stack depth 1 [33ecda92], stack [main]])
  Number of target states:       0

Time for analysis setup:          1.984s
  Time for loading CPAs:          0.567s
  Time for loading parser:        0.492s
  Time for CFA construction:      0.788s
    Time for parsing file(s):     0.326s
    Time for AST to CFA:          0.158s
    Time for CFA sanity check:    0.027s
    Time for post-processing:     0.170s
      Time for var class.:        0.090s
Time for Analysis:                4.392s
CPU time for analysis:            4.380s
Time for analyzing result:        0.000s
Total time for CPAchecker:        6.381s
Total CPU time for CPAchecker:    6.370s
Time for statistics:              0.072s

Time for Garbage Collector:       0.119s (in 8 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 61MB (    58 MiB) max;     37MB (    35 MiB) avg;     65MB (    62 MiB) peak
Used non-heap memory:             33MB (    31 MiB) max;     28MB (    27 MiB) avg;     34MB (    33 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        35MB (    34 MiB) max;     30MB (    29 MiB) avg
Total process virtual memory:   8134MB (  7758 MiB) max;   8099MB (  7724 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
