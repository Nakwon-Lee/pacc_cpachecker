scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/email_spec1_product28_true-unreach-call_true-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_2hdxqeha/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 80: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 109: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 157: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 204: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 249: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 327: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 396: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 530: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 613: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 660: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 707: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 752: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 815: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 922: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 976: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1048: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1095: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1435: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1481: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1499: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1525: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1548: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1682: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1702: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1711: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1726: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2256: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2277: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2314: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2351: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2390: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2429: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2466: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2503: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2540: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2577: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2614: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2796: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2828: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2837: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2846: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2871: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1272: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            24222 (14% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  23853 (98%)
  Because of loop head:            320 (1%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         49 (0%)
  Times precision was empty:       7308 (30%)
  Times precision was {false}:     245 (1%)
  Times result was cached:         16269 (67%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      400 (2%)
  Times result was 'false':        230 (1%)
Number of strengthen sat checks:   0
Number of coverage checks:         47832
  BDD entailment checks:           3728
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       56
Number of predicates discovered:          6
Number of abstraction locations:          150
Max number of predicates per location:    2
Avg number of predicates per location:    1
Total predicates per abstraction:         23316
Max number of predicates per abstraction: 2
Avg number of predicates per abstraction: 36.15
Number of irrelevant predicates:          12799 (55%)
Number of preds handled by boolean abs:   505 (2%)
  Total number of models for allsat:      400
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.00

Time for post operator:                  3.598s
  Time for path formula creation:        3.466s
Time for strengthen operator:            0.264s
Time for prec operator:                  4.995s
  Time for abstraction:                  4.477s (Max:     0.026s, Count: 24222)
    Boolean abstraction:                 0.704s
    Solving time:                        0.713s (Max:     0.015s)
    Model enumeration time:              0.062s
    Time for BDD construction:           0.088s (Max:     0.012s)
Time for merge operator:                 0.497s
Time for coverage check:                 0.060s
  Time for BDD entailment checks:        0.056s
Total time for SMT solver (w/o itp):     0.775s

Number of path formula cache hits:   168778 (81%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     3.171s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               208
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         828 (count: 14716, min: 0, max: 223, avg: 0.06)
Time for BDD node cleanup:                             0.007s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.618s
  Time for transition matches:                         0.313s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.000s
Automaton transfers with branching:                0
Automaton transfer successors:                       173755 (count: 173755, min: 1, max: 1, avg: 1.00) [1 x 173755]

CPA algorithm statistics
------------------------
Number of iterations:            131228
Max size of waitlist:            69
Average size of waitlist:        23
Number of computed successors:   156694
Max successors for one state:    2
Number of times merged:          22052
Number of times stopped:         24893
Number of times breaked:         49

Total time for CPA algorithm:        17.665s (Max:     1.403s)
  Time for choose from waitlist:      0.193s
  Time for precision adjustment:      6.778s
  Time for transfer relation:         7.300s
  Time for merge operator:            1.194s
  Time for stop operator:             0.407s
  Time for adding to reached set:     0.499s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   49
Avg. length of target path (in blocks):                5250 (count: 49, min: 63, max: 129, avg: 107.14)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   3.066s
  Counterexample analysis:                             2.251s (Max:     0.082s, Calls: 49)
    Refinement sat check:                              1.087s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.005s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.074s
  Precision update:                                    0.106s
  ARG update:                                          0.525s

Length of refined path (in blocks):                    4054 (count: 49, min: 60, max: 105, avg: 82.73)
Number of affected states:                             2649 (count: 49, min: 1, max: 104, avg: 54.06)
Length (states) of path with itp 'true':               1356 (count: 49, min: 0, max: 87, avg: 27.67)
Length (states) of path with itp non-trivial itp:      2649 (count: 49, min: 1, max: 104, avg: 54.06)
Length (states) of path with itp 'false':                49 (count: 49, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:          27 (count: 49, min: 0, max: 1, avg: 0.55)
Equal non-trivial interpolants along paths:            2573 (count: 49, min: 0, max: 102, avg: 52.51)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                49
Number of successful refinements:     49
Number of failed refinements:         0
Max. size of reached set before ref.: 6795
Max. size of reached set after ref.:  6405
Avg. size of reached set before ref.: 4282.04
Avg. size of reached set after ref.:  1649.00

Total time for CEGAR algorithm:      21.209s
Time for refinements:                 3.444s
Average time for refinement:          0.070s
Max time for refinement:              0.122s

Code Coverage
-----------------------------
  Function coverage:      0.578
  Visited lines:          724
  Total lines:            1413
  Line coverage:          0.512
  Visited conditions:     256
  Total conditions:       496
  Condition coverage:     0.516

CPAchecker general statistics
-----------------------------
Number of program locations:     1940
Number of CFA edges:             2197
Number of relevant variables:    340
Number of functions:             109
Number of loops:                 4
Size of reached set:             2553
  Number of reached locations:   719 (37%)
    Avg states per location:     3
    Max states per location:     48 (at node N2152)
  Number of reached functions:   63 (58%)
  Number of partitions:          2545
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N2162 (before line 2918), Function verify called from node N2035, stack depth 11 [2cb64f83], stack [main, test, bobToRjh, sendEmail, outgoing, outgoing__wrappee__Encrypt, outgoing__wrappee__Keys, mail, incoming, incoming__wrappee__Verify, verify]])
  Number of target states:       0

Time for analysis setup:          4.021s
  Time for loading CPAs:          0.773s
  Time for loading parser:        0.723s
  Time for CFA construction:      2.351s
    Time for parsing file(s):     0.740s
    Time for AST to CFA:          0.673s
    Time for CFA sanity check:    0.201s
    Time for post-processing:     0.588s
      Time for var class.:        0.312s
Time for Analysis:               21.209s
CPU time for analysis:           21.210s
Time for analyzing result:        0.001s
Total time for CPAchecker:       25.234s
Total CPU time for CPAchecker:   25.230s
Time for statistics:              0.145s

Time for Garbage Collector:       0.724s (in 53 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 83MB (    79 MiB) max;     48MB (    46 MiB) avg;     87MB (    83 MiB) peak
Used non-heap memory:             37MB (    35 MiB) max;     33MB (    31 MiB) avg;     38MB (    36 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        39MB (    37 MiB) max;     35MB (    33 MiB) avg
Total process virtual memory:   8087MB (  7712 MiB) max;   8072MB (  7698 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
