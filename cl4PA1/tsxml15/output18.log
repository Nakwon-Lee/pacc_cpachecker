scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/email_spec1_product28_true-unreach-call_true-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_8pl7o8sq/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 80: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 109: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 157: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 204: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 249: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 327: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 396: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 530: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 613: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 660: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 707: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 752: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 815: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 922: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 976: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1048: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1095: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1435: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1481: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1499: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1525: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1548: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1682: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1702: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1711: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1726: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2256: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2277: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2314: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2351: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2390: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2429: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2466: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2503: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2540: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2577: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2614: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2796: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2828: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2837: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2846: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2871: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1272: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            14003 (13% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  13599 (97%)
  Because of loop head:            375 (3%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         29 (0%)
  Times precision was empty:       1509 (11%)
  Times precision was {false}:     231 (2%)
  Times result was cached:         11865 (85%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      398 (3%)
  Times result was 'false':        224 (2%)
Number of strengthen sat checks:   0
Number of coverage checks:         30191
  BDD entailment checks:           1487
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       56
Number of predicates discovered:          6
Number of abstraction locations:          150
Max number of predicates per location:    2
Avg number of predicates per location:    1
Total predicates per abstraction:         17417
Max number of predicates per abstraction: 2
Avg number of predicates per abstraction: 27.69
Number of irrelevant predicates:          7168 (41%)
Number of preds handled by boolean abs:   503 (3%)
  Total number of models for allsat:      397
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.00

Time for post operator:                  3.037s
  Time for path formula creation:        2.825s
Time for strengthen operator:            0.207s
Time for prec operator:                  5.145s
  Time for abstraction:                  4.680s (Max:     0.034s, Count: 14003)
    Boolean abstraction:                 0.766s
    Solving time:                        0.850s (Max:     0.015s)
    Model enumeration time:              0.051s
    Time for BDD construction:           0.055s (Max:     0.010s)
Time for merge operator:                 0.476s
Time for coverage check:                 0.034s
  Time for BDD entailment checks:        0.028s
Total time for SMT solver (w/o itp):     0.901s

Number of path formula cache hits:   103609 (80%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     2.547s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               208
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         820 (count: 6611, min: 0, max: 189, avg: 0.12)
Time for BDD node cleanup:                             0.012s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.540s
  Time for transition matches:                         0.170s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.008s
Automaton transfers with branching:                0
Automaton transfer successors:                       107700 (count: 107700, min: 1, max: 1, avg: 1.00) [1 x 107700]

CPA algorithm statistics
------------------------
Number of iterations:            80256
Max size of waitlist:            31
Average size of waitlist:        10
Number of computed successors:   96261
Max successors for one state:    2
Number of times merged:          14352
Number of times stopped:         15402
Number of times breaked:         29

Total time for CPA algorithm:        15.775s (Max:     1.309s)
  Time for choose from waitlist:      0.177s
  Time for precision adjustment:      6.670s
  Time for transfer relation:         5.945s
  Time for merge operator:            1.134s
  Time for stop operator:             0.367s
  Time for adding to reached set:     0.411s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   29
Avg. length of target path (in blocks):                3241 (count: 29, min: 67, max: 141, avg: 111.76)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   2.480s
  Counterexample analysis:                             1.896s (Max:     0.099s, Calls: 29)
    Refinement sat check:                              0.926s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.005s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.079s
  Precision update:                                    0.110s
  ARG update:                                          0.322s

Length of refined path (in blocks):                    2674 (count: 29, min: 64, max: 113, avg: 92.21)
Number of affected states:                             2480 (count: 29, min: 1, max: 112, avg: 85.52)
Length (states) of path with itp 'true':                165 (count: 29, min: 0, max: 83, avg: 5.69)
Length (states) of path with itp non-trivial itp:      2480 (count: 29, min: 1, max: 112, avg: 85.52)
Length (states) of path with itp 'false':                29 (count: 29, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:          17 (count: 29, min: 0, max: 1, avg: 0.59)
Equal non-trivial interpolants along paths:            2434 (count: 29, min: 0, max: 110, avg: 83.93)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                29
Number of successful refinements:     29
Number of failed refinements:         0
Max. size of reached set before ref.: 3941
Max. size of reached set after ref.:  3108
Avg. size of reached set before ref.: 2908.21
Avg. size of reached set after ref.:  215.69

Total time for CEGAR algorithm:      18.533s
Time for refinements:                 2.736s
Average time for refinement:          0.094s
Max time for refinement:              0.138s

Code Coverage
-----------------------------
  Function coverage:      0.578
  Visited lines:          724
  Total lines:            1413
  Line coverage:          0.512
  Visited conditions:     256
  Total conditions:       496
  Condition coverage:     0.516

CPAchecker general statistics
-----------------------------
Number of program locations:     1940
Number of CFA edges:             2197
Number of relevant variables:    340
Number of functions:             109
Number of loops:                 4
Size of reached set:             2553
  Number of reached locations:   719 (37%)
    Avg states per location:     3
    Max states per location:     48 (at node N2152)
  Number of reached functions:   63 (58%)
  Number of partitions:          2545
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N2162 (before line 2918), Function verify called from node N2035, stack depth 11 [8953002], stack [main, test, bobToRjh, sendEmail, outgoing, outgoing__wrappee__Encrypt, outgoing__wrappee__Keys, mail, incoming, incoming__wrappee__Verify, verify]])
  Number of target states:       0

Time for analysis setup:          3.990s
  Time for loading CPAs:          0.728s
  Time for loading parser:        0.791s
  Time for CFA construction:      2.274s
    Time for parsing file(s):     0.718s
    Time for AST to CFA:          0.674s
    Time for CFA sanity check:    0.188s
    Time for post-processing:     0.553s
      Time for var class.:        0.312s
Time for Analysis:               18.542s
CPU time for analysis:           18.540s
Time for analyzing result:        0.002s
Total time for CPAchecker:       22.538s
Total CPU time for CPAchecker:   22.520s
Time for statistics:              0.134s

Time for Garbage Collector:       0.471s (in 38 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 70MB (    66 MiB) max;     44MB (    42 MiB) avg;     73MB (    69 MiB) peak
Used non-heap memory:             37MB (    35 MiB) max;     32MB (    31 MiB) avg;     38MB (    36 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        39MB (    37 MiB) max;     34MB (    33 MiB) avg
Total process virtual memory:   8085MB (  7711 MiB) max;   8069MB (  7695 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
