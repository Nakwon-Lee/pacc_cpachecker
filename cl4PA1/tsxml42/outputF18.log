scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/email_spec0_product11_true-unreach-call_true-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_i9wr21ak/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 73: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 94: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 131: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 168: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 207: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 246: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 283: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 320: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 357: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 394: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 431: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 473: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 496: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 539: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 548: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 563: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1203: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1249: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1559: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1591: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1600: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1609: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1634: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1692: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1721: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1769: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1816: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1861: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1939: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2008: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2142: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2225: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2272: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2319: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2364: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2427: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2534: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2588: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2660: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2707: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2753: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1040: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            4059 (12% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  3861 (95%)
  Because of loop head:            185 (5%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         13 (0%)
  Times precision was empty:       1495 (37%)
  Times precision was {false}:     160 (4%)
  Times result was cached:         2307 (57%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      97 (2%)
  Times result was 'false':        12 (0%)
Number of strengthen sat checks:   0
Number of coverage checks:         10131
  BDD entailment checks:           583
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       36
Number of predicates discovered:          4
Number of abstraction locations:          108
Max number of predicates per location:    1
Avg number of predicates per location:    1
Total predicates per abstraction:         2564
Max number of predicates per abstraction: 1
Avg number of predicates per abstraction: 9.98
Number of irrelevant predicates:          1324 (52%)
Number of preds handled by boolean abs:   97 (4%)
  Total number of models for allsat:      99
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.02

Time for post operator:                  2.076s
  Time for path formula creation:        1.963s
Time for strengthen operator:            0.080s
Time for prec operator:                  1.929s
  Time for abstraction:                  1.588s (Max:     0.024s, Count: 4059)
    Boolean abstraction:                 0.179s
    Solving time:                        0.332s (Max:     0.014s)
    Model enumeration time:              0.011s
    Time for BDD construction:           0.028s (Max:     0.007s)
Time for merge operator:                 0.278s
Time for coverage check:                 0.058s
  Time for BDD entailment checks:        0.042s
Total time for SMT solver (w/o itp):     0.343s

Number of path formula cache hits:   21072 (56%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     1.844s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               202
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         188 (count: 3469, min: 0, max: 57, avg: 0.05)
Time for BDD node cleanup:                             0.007s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.335s
Automaton transfers with branching:                0
Automaton transfer successors:                        33106 (count: 33106, min: 1, max: 1, avg: 1.00) [1 x 33106]

CPA algorithm statistics
------------------------
Number of iterations:            25124
Max size of waitlist:            22
Average size of waitlist:        10
Number of computed successors:   30287
Max successors for one state:    2
Number of times merged:          4774
Number of times stopped:         5131
Number of times breaked:         13

Total time for CPA algorithm:         8.166s (Max:     1.349s)
  Time for choose from waitlist:      0.141s
  Time for precision adjustment:      2.659s
  Time for transfer relation:         3.664s
  Time for merge operator:            0.643s
  Time for stop operator:             0.234s
  Time for adding to reached set:     0.244s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   13
Avg. length of target path (in blocks):                1261 (count: 13, min: 65, max: 110, avg: 97.00)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.956s
  Counterexample analysis:                             0.659s (Max:     0.060s, Calls: 13)
    Refinement sat check:                              0.289s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.074s
  Precision update:                                    0.013s
  ARG update:                                          0.162s

Length of refined path (in blocks):                     973 (count: 13, min: 64, max: 109, avg: 74.85)
Number of affected states:                              791 (count: 13, min: 1, max: 78, avg: 60.85)
Length (states) of path with itp 'true':                169 (count: 13, min: 0, max: 107, avg: 13.00)
Length (states) of path with itp non-trivial itp:       791 (count: 13, min: 1, max: 78, avg: 60.85)
Length (states) of path with itp 'false':                13 (count: 13, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:          11 (count: 13, min: 0, max: 1, avg: 0.85)
Equal non-trivial interpolants along paths:             767 (count: 13, min: 0, max: 76, avg: 59.00)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                13
Number of successful refinements:     13
Number of failed refinements:         0
Max. size of reached set before ref.: 2514
Max. size of reached set after ref.:  1229
Avg. size of reached set before ref.: 2013.08
Avg. size of reached set after ref.:  177.92

Total time for CEGAR algorithm:       9.266s
Time for refinements:                 1.097s
Average time for refinement:          0.084s
Max time for refinement:              0.164s

Code Coverage
-----------------------------
  Function coverage:      0.529
  Visited lines:          609
  Total lines:            1318
  Line coverage:          0.462
  Visited conditions:     190
  Total conditions:       476
  Condition coverage:     0.399

CPAchecker general statistics
-----------------------------
Number of program locations:     1810
Number of CFA edges:             2035
Number of relevant variables:    261
Number of functions:             102
Number of loops:                 4
Size of reached set:             1288
  Number of reached locations:   572 (32%)
    Avg states per location:     2
    Max states per location:     10 (at node N900)
  Number of reached functions:   54 (53%)
  Number of partitions:          1283
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N1029 (before line 1491), Function mail called from node N1036, stack depth 6 [62cad0e8], stack [main, test, bobToRjh, sendEmail, outgoing, mail]])
  Number of target states:       0

Time for analysis setup:          3.943s
  Time for loading CPAs:          0.884s
  Time for loading parser:        0.629s
  Time for CFA construction:      2.232s
    Time for parsing file(s):     0.640s
    Time for AST to CFA:          0.695s
    Time for CFA sanity check:    0.217s
    Time for post-processing:     0.563s
      Time for var class.:        0.306s
Time for Analysis:                9.267s
CPU time for analysis:            9.250s
Time for analyzing result:        0.001s
Total time for CPAchecker:       13.214s
Total CPU time for CPAchecker:   13.190s
Time for statistics:              0.126s

Time for Garbage Collector:       0.234s (in 15 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 62MB (    60 MiB) max;     39MB (    37 MiB) avg;     68MB (    64 MiB) peak
Used non-heap memory:             35MB (    34 MiB) max;     30MB (    29 MiB) avg;     36MB (    34 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        37MB (    35 MiB) max;     32MB (    31 MiB) avg
Total process virtual memory:   8089MB (  7715 MiB) max;   8062MB (  7689 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
