scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/email_spec7_product23_true-unreach-call_true-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_6_js259v/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 223: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 255: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 264: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 273: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 298: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 420: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 514: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 523: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 538: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 565: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 586: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 623: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 660: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 699: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 738: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 775: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 812: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 849: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 886: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 923: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 963: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 986: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1023: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1052: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1100: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1147: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1192: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1270: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1339: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1473: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1556: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1603: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1650: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1695: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1758: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1865: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1919: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1991: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2038: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2378: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2424: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2215: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            11111 (13% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  10823 (97%)
  Because of loop head:            264 (2%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         24 (0%)
  Times precision was empty:       3117 (28%)
  Times precision was {false}:     369 (3%)
  Times result was cached:         7431 (67%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      194 (2%)
  Times result was 'false':        103 (1%)
Number of strengthen sat checks:   0
Number of coverage checks:         24228
  BDD entailment checks:           1072
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       63
Number of predicates discovered:          5
Number of abstraction locations:          160
Max number of predicates per location:    2
Avg number of predicates per location:    1
Total predicates per abstraction:         8508
Max number of predicates per abstraction: 2
Avg number of predicates per abstraction: 15.11
Number of irrelevant predicates:          5727 (67%)
Number of preds handled by boolean abs:   198 (2%)
  Total number of models for allsat:      194
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.00

Time for post operator:                  3.885s
  Time for path formula creation:        3.731s
Time for strengthen operator:            0.214s
Time for prec operator:                  3.542s
  Time for abstraction:                  3.157s (Max:     0.029s, Count: 11111)
    Boolean abstraction:                 0.261s
    Solving time:                        0.584s (Max:     0.015s)
    Model enumeration time:              0.013s
    Time for BDD construction:           0.032s (Max:     0.006s)
Time for merge operator:                 0.559s
Time for coverage check:                 0.034s
  Time for BDD entailment checks:        0.029s
Total time for SMT solver (w/o itp):     0.597s

Number of path formula cache hits:   47414 (50%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     3.524s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               204
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         401 (count: 7212, min: 0, max: 68, avg: 0.06)
Time for BDD node cleanup:                             0.013s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.413s
Automaton transfers with branching:                0
Automaton transfer successors:                        84126 (count: 84126, min: 1, max: 1, avg: 1.00) [1 x 84126]

CPA algorithm statistics
------------------------
Number of iterations:            63540
Max size of waitlist:            25
Average size of waitlist:        9
Number of computed successors:   76219
Max successors for one state:    2
Number of times merged:          11578
Number of times stopped:         12428
Number of times breaked:         24

Total time for CPA algorithm:        14.375s (Max:     1.957s)
  Time for choose from waitlist:      0.186s
  Time for precision adjustment:      4.655s
  Time for transfer relation:         6.533s
  Time for merge operator:            1.166s
  Time for stop operator:             0.306s
  Time for adding to reached set:     0.504s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   24
Avg. length of target path (in blocks):                4355 (count: 24, min: 65, max: 211, avg: 181.46)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   3.093s
  Counterexample analysis:                             2.569s (Max:     0.185s, Calls: 24)
    Refinement sat check:                              1.021s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.012s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.091s
  Precision update:                                    0.065s
  ARG update:                                          0.297s

Length of refined path (in blocks):                    3145 (count: 24, min: 64, max: 203, avg: 131.04)
Number of affected states:                             2173 (count: 24, min: 1, max: 142, avg: 90.54)
Length (states) of path with itp 'true':                948 (count: 24, min: 0, max: 201, avg: 39.50)
Length (states) of path with itp non-trivial itp:      2173 (count: 24, min: 1, max: 142, avg: 90.54)
Length (states) of path with itp 'false':                24 (count: 24, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:          16 (count: 24, min: 0, max: 1, avg: 0.67)
Equal non-trivial interpolants along paths:            2133 (count: 24, min: 0, max: 140, avg: 88.88)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                24
Number of successful refinements:     24
Number of failed refinements:         0
Max. size of reached set before ref.: 3984
Max. size of reached set after ref.:  3022
Avg. size of reached set before ref.: 3245.08
Avg. size of reached set after ref.:  725.38

Total time for CEGAR algorithm:      17.774s
Time for refinements:                 3.376s
Average time for refinement:          0.140s
Max time for refinement:              0.219s

Code Coverage
-----------------------------
  Function coverage:      0.649
  Visited lines:          836
  Total lines:            1405
  Line coverage:          0.595
  Visited conditions:     330
  Total conditions:       488
  Condition coverage:     0.676

CPAchecker general statistics
-----------------------------
Number of program locations:     1933
Number of CFA edges:             2189
Number of relevant variables:    341
Number of functions:             111
Number of loops:                 4
Size of reached set:             3216
  Number of reached locations:   873 (45%)
    Avg states per location:     3
    Max states per location:     35 (at node N180)
  Number of reached functions:   72 (65%)
  Number of partitions:          3204
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N76 (before line 208), Function incoming called from node N5, stack depth 9 [137cbf04], stack [main, test, bobToRjh, sendEmail, outgoing, outgoing__wrappee__AddressBook, outgoing__wrappee__AutoResponder, mail, incoming]])
  Number of target states:       0

Time for analysis setup:          3.953s
  Time for loading CPAs:          0.888s
  Time for loading parser:        0.629s
  Time for CFA construction:      2.215s
    Time for parsing file(s):     0.646s
    Time for AST to CFA:          0.643s
    Time for CFA sanity check:    0.217s
    Time for post-processing:     0.563s
      Time for var class.:        0.318s
Time for Analysis:               17.774s
CPU time for analysis:           17.770s
Time for analyzing result:        0.001s
Total time for CPAchecker:       21.731s
Total CPU time for CPAchecker:   21.720s
Time for statistics:              0.138s

Time for Garbage Collector:       0.483s (in 32 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 74MB (    71 MiB) max;     46MB (    43 MiB) avg;     79MB (    76 MiB) peak
Used non-heap memory:             37MB (    35 MiB) max;     33MB (    31 MiB) avg;     38MB (    36 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        39MB (    37 MiB) max;     35MB (    33 MiB) avg
Total process virtual memory:   8089MB (  7715 MiB) max;   8071MB (  7697 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
