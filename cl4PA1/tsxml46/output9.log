scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/email_spec7_product23_true-unreach-call_true-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_obvzwlid/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 223: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 255: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 264: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 273: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 298: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 420: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 514: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 523: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 538: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 565: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 586: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 623: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 660: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 699: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 738: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 775: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 812: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 849: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 886: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 923: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 963: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 986: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1023: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1052: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1100: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1147: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1192: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1270: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1339: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1473: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1556: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1603: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1650: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1695: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1758: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1865: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1919: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1991: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2038: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2378: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2424: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2215: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            552 (14% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  538 (97%)
  Because of loop head:            12 (2%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         2 (0%)
  Times precision was empty:       540 (98%)
  Times precision was {false}:     1 (0%)
  Times result was cached:         8 (1%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      3 (1%)
  Times result was 'false':        6 (1%)
Number of strengthen sat checks:   0
Number of coverage checks:         1053
  BDD entailment checks:           51
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       63
Number of predicates discovered:          2
Number of abstraction locations:          2
Max number of predicates per location:    1
Avg number of predicates per location:    1
Total predicates per abstraction:         12
Max number of predicates per abstraction: 1
Avg number of predicates per abstraction: 3.00
Number of irrelevant predicates:          6 (50%)
Number of preds handled by boolean abs:   3 (25%)
  Total number of models for allsat:      3
  Max number of models for allsat:        1
  Avg number of models for allsat:        1.00

Time for post operator:                  0.878s
  Time for path formula creation:        0.851s
Time for strengthen operator:            0.058s
Time for prec operator:                  0.107s
  Time for abstraction:                  0.050s (Max:     0.013s, Count: 552)
    Boolean abstraction:                 0.003s
    Solving time:                        0.001s (Max:     0.001s)
    Model enumeration time:              0.000s
    Time for BDD construction:           0.001s (Max:     0.001s)
Time for merge operator:                 0.136s
Time for coverage check:                 0.008s
  Time for BDD entailment checks:        0.006s
Total time for SMT solver (w/o itp):     0.001s

Number of path formula cache hits:   68 (2%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.812s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               202
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                           5 (count: 619, min: 0, max: 5, avg: 0.01)
Time for BDD node cleanup:                             0.002s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.106s
Automaton transfers with branching:                0
Automaton transfer successors:                         4088 (count: 4088, min: 1, max: 1, avg: 1.00) [1 x 4088]

CPA algorithm statistics
------------------------
Number of iterations:            2931
Max size of waitlist:            22
Average size of waitlist:        13
Number of computed successors:   3490
Max successors for one state:    2
Number of times merged:          501
Number of times stopped:         552
Number of times breaked:         2

Total time for CPA algorithm:         2.196s (Max:     1.234s)
  Time for choose from waitlist:      0.022s
  Time for precision adjustment:      0.313s
  Time for transfer relation:         1.442s
  Time for merge operator:            0.230s
  Time for stop operator:             0.043s
  Time for adding to reached set:     0.057s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   2
Avg. length of target path (in blocks):                 138 (count: 2, min: 65, max: 73, avg: 69.00)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.098s
  Counterexample analysis:                             0.076s (Max:     0.038s, Calls: 2)
    Refinement sat check:                              0.042s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.006s
  Precision update:                                    0.001s
  ARG update:                                          0.002s

Length of refined path (in blocks):                     136 (count: 2, min: 64, max: 72, avg: 68.00)
Number of affected states:                                2 (count: 2, min: 1, max: 1, avg: 1.00)
Length (states) of path with itp 'true':                132 (count: 2, min: 62, max: 70, avg: 66.00)
Length (states) of path with itp non-trivial itp:         2 (count: 2, min: 1, max: 1, avg: 1.00)
Length (states) of path with itp 'false':                 2 (count: 2, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 2, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:               0 (count: 2, min: 0, max: 0, avg: 0.00)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                2
Number of successful refinements:     2
Number of failed refinements:         0
Max. size of reached set before ref.: 1238
Max. size of reached set after ref.:  1227
Avg. size of reached set before ref.: 1164.00
Avg. size of reached set after ref.:  1153.00

Total time for CEGAR algorithm:       2.343s
Time for refinements:                 0.143s
Average time for refinement:          0.071s
Max time for refinement:              0.079s

Code Coverage
-----------------------------
  Function coverage:      0.649
  Visited lines:          836
  Total lines:            1405
  Line coverage:          0.595
  Visited conditions:     330
  Total conditions:       488
  Condition coverage:     0.676

CPAchecker general statistics
-----------------------------
Number of program locations:     1933
Number of CFA edges:             2189
Number of relevant variables:    341
Number of functions:             111
Number of loops:                 4
Size of reached set:             2911
  Number of reached locations:   873 (45%)
    Avg states per location:     3
    Max states per location:     30 (at node N180)
  Number of reached functions:   72 (65%)
  Number of partitions:          2911
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0

Time for analysis setup:          3.938s
  Time for loading CPAs:          0.872s
  Time for loading parser:        0.687s
  Time for CFA construction:      2.181s
    Time for parsing file(s):     0.634s
    Time for AST to CFA:          0.648s
    Time for CFA sanity check:    0.202s
    Time for post-processing:     0.551s
      Time for var class.:        0.303s
Time for Analysis:                2.344s
CPU time for analysis:            2.340s
Time for analyzing result:        0.002s
Total time for CPAchecker:        6.286s
Total CPU time for CPAchecker:    6.280s
Time for statistics:              0.160s

Time for Garbage Collector:       0.140s (in 7 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 57MB (    54 MiB) max;     32MB (    30 MiB) avg;     64MB (    61 MiB) peak
Used non-heap memory:             35MB (    34 MiB) max;     27MB (    25 MiB) avg;     36MB (    35 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        37MB (    36 MiB) max;     28MB (    27 MiB) avg
Total process virtual memory:   8085MB (  7711 MiB) max;   8037MB (  7664 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
