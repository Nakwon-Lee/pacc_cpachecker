scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/email_spec7_product23_true-unreach-call_true-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_t_t_d6tq/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 223: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 255: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 264: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 273: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 298: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 420: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 514: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 523: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 538: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 565: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 586: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 623: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 660: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 699: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 738: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 775: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 812: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 849: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 886: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 923: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 963: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 986: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1023: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1052: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1100: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1147: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1192: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1270: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1339: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1473: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1556: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1603: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1650: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1695: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1758: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1865: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1919: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1991: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2038: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2378: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2424: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2215: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            19865 (16% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  19640 (99%)
  Because of loop head:            104 (1%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         121 (1%)
  Times precision was empty:       7168 (36%)
  Times precision was {false}:     218 (1%)
  Times result was cached:         12349 (62%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      130 (1%)
  Times result was 'false':        516 (3%)
Number of strengthen sat checks:   0
Number of coverage checks:         29689
  BDD entailment checks:           2011
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       63
Number of predicates discovered:          5
Number of abstraction locations:          137
Max number of predicates per location:    2
Avg number of predicates per location:    1
Total predicates per abstraction:         14704
Max number of predicates per abstraction: 2
Avg number of predicates per abstraction: 42.25
Number of irrelevant predicates:          12219 (83%)
Number of preds handled by boolean abs:   132 (1%)
  Total number of models for allsat:      131
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.01

Time for post operator:                  2.099s
  Time for path formula creation:        1.893s
Time for strengthen operator:            0.211s
Time for prec operator:                  3.488s
  Time for abstraction:                  2.965s (Max:     0.021s, Count: 19865)
    Boolean abstraction:                 0.222s
    Solving time:                        0.455s (Max:     0.014s)
    Model enumeration time:              0.024s
    Time for BDD construction:           0.026s (Max:     0.008s)
Time for merge operator:                 0.315s
Time for coverage check:                 0.062s
  Time for BDD entailment checks:        0.052s
Total time for SMT solver (w/o itp):     0.479s

Number of path formula cache hits:   136113 (90%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     1.676s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               204
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         261 (count: 11063, min: 0, max: 141, avg: 0.02)
Time for BDD node cleanup:                             0.013s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.524s
  Time for transition matches:                         0.200s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.010s
Automaton transfers with branching:                0
Automaton transfer successors:                       121419 (count: 121419, min: 1, max: 1, avg: 1.00) [1 x 121419]

CPA algorithm statistics
------------------------
Number of iterations:            92191
Max size of waitlist:            34
Average size of waitlist:        15
Number of computed successors:   108377
Max successors for one state:    2
Number of times merged:          13839
Number of times stopped:         15404
Number of times breaked:         121

Total time for CPA algorithm:        12.353s (Max:     0.940s)
  Time for choose from waitlist:      0.174s
  Time for precision adjustment:      4.799s
  Time for transfer relation:         5.008s
  Time for merge operator:            0.696s
  Time for stop operator:             0.321s
  Time for adding to reached set:     0.347s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   121
Avg. length of target path (in blocks):               12505 (count: 121, min: 65, max: 162, avg: 103.35)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   6.893s
  Counterexample analysis:                             6.137s (Max:     0.099s, Calls: 121)
    Refinement sat check:                              2.887s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.007s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.086s
  Precision update:                                    0.114s
  ARG update:                                          0.349s

Length of refined path (in blocks):                   12042 (count: 121, min: 64, max: 161, avg: 99.52)
Number of affected states:                             1236 (count: 121, min: 1, max: 100, avg: 10.21)
Length (states) of path with itp 'true':              10685 (count: 121, min: 0, max: 159, avg: 88.31)
Length (states) of path with itp non-trivial itp:      1236 (count: 121, min: 1, max: 100, avg: 10.21)
Length (states) of path with itp 'false':               121 (count: 121, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:          12 (count: 121, min: 0, max: 1, avg: 0.10)
Equal non-trivial interpolants along paths:            1103 (count: 121, min: 0, max: 98, avg: 9.12)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                121
Number of successful refinements:     121
Number of failed refinements:         0
Max. size of reached set before ref.: 4423
Max. size of reached set after ref.:  2706
Avg. size of reached set before ref.: 2112.21
Avg. size of reached set after ref.:  1379.88

Total time for CEGAR algorithm:      20.160s
Time for refinements:                 7.563s
Average time for refinement:          0.062s
Max time for refinement:              0.129s

Code Coverage
-----------------------------
  Function coverage:      0.649
  Visited lines:          836
  Total lines:            1405
  Line coverage:          0.595
  Visited conditions:     330
  Total conditions:       488
  Condition coverage:     0.676

CPAchecker general statistics
-----------------------------
Number of program locations:     1933
Number of CFA edges:             2189
Number of relevant variables:    341
Number of functions:             111
Number of loops:                 4
Size of reached set:             3846
  Number of reached locations:   873 (45%)
    Avg states per location:     4
    Max states per location:     45 (at node N180)
  Number of reached functions:   72 (65%)
  Number of partitions:          3836
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N48 (before line 157), Function outgoing called from node N95, stack depth 5 [2b6aac92], stack [main, test, bobToRjh, sendEmail, outgoing]])
  Number of target states:       0

Time for analysis setup:          3.827s
  Time for loading CPAs:          0.798s
  Time for loading parser:        0.635s
  Time for CFA construction:      2.228s
    Time for parsing file(s):     0.678s
    Time for AST to CFA:          0.645s
    Time for CFA sanity check:    0.195s
    Time for post-processing:     0.552s
      Time for var class.:        0.310s
Time for Analysis:               20.160s
CPU time for analysis:           20.150s
Time for analyzing result:        0.006s
Total time for CPAchecker:       23.991s
Total CPU time for CPAchecker:   23.970s
Time for statistics:              0.177s

Time for Garbage Collector:       0.385s (in 38 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 67MB (    64 MiB) max;     43MB (    41 MiB) avg;     70MB (    67 MiB) peak
Used non-heap memory:             37MB (    35 MiB) max;     33MB (    32 MiB) avg;     38MB (    36 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        39MB (    37 MiB) max;     35MB (    33 MiB) avg
Total process virtual memory:   8087MB (  7712 MiB) max;   8072MB (  7698 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
