scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/email_spec8_product29_true-unreach-call_true-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_60r_9ogb/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 73: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 94: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 131: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 168: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 207: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 246: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 283: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 320: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 357: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 394: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 431: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 473: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 496: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 591: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 611: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 620: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 635: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 999: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1045: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1062: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1514: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1546: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1555: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1564: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1589: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1991: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2020: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2068: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2115: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2160: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2238: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2307: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2441: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2524: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2571: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2618: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2663: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2726: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2833: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2887: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2959: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3006: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 836: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            26088 (16% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  25990 (100%)
  Because of loop head:            66 (0%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         32 (0%)
  Times precision was empty:       1247 (5%)
  Times precision was {false}:     277 (1%)
  Times result was cached:         23189 (89%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      1375 (5%)
  Times result was 'false':        1146 (4%)
Number of strengthen sat checks:   0
Number of coverage checks:         38668
  BDD entailment checks:           3988
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       65
Number of predicates discovered:          27
Number of abstraction locations:          135
Max number of predicates per location:    9
Avg number of predicates per location:    4
Total predicates per abstraction:         68022
Max number of predicates per abstraction: 9
Avg number of predicates per abstraction: 41.18
Number of irrelevant predicates:          28840 (42%)
Number of preds handled by boolean abs:   3858 (6%)
  Total number of models for allsat:      2508
  Max number of models for allsat:        14
  Avg number of models for allsat:        1.82

Time for post operator:                  4.459s
  Time for path formula creation:        4.178s
Time for strengthen operator:            0.308s
Time for prec operator:                  9.454s
  Time for abstraction:                  8.748s (Max:     0.032s, Count: 26088)
    Boolean abstraction:                 1.800s
    Solving time:                        1.368s (Max:     0.015s)
    Model enumeration time:              0.231s
    Time for BDD construction:           0.157s (Max:     0.012s)
Time for merge operator:                 0.496s
Time for coverage check:                 0.052s
  Time for BDD entailment checks:        0.034s
Total time for SMT solver (w/o itp):     1.599s

Number of path formula cache hits:   137763 (72%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     3.853s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               1301
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        4035 (count: 15737, min: 0, max: 499, avg: 0.26)
Time for BDD node cleanup:                             0.016s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.740s
  Time for transition matches:                         0.370s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.002s
Automaton transfers with branching:                0
Automaton transfer successors:                       162141 (count: 162141, min: 1, max: 1, avg: 1.00) [1 x 162141]

CPA algorithm statistics
------------------------
Number of iterations:            120628
Max size of waitlist:            35
Average size of waitlist:        15
Number of computed successors:   142231
Max successors for one state:    2
Number of times merged:          17340
Number of times stopped:         19942
Number of times breaked:         32

Total time for CPA algorithm:        22.713s (Max:     1.644s)
  Time for choose from waitlist:      0.253s
  Time for precision adjustment:     11.128s
  Time for transfer relation:         8.119s
  Time for merge operator:            1.052s
  Time for stop operator:             0.432s
  Time for adding to reached set:     0.499s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   32
Avg. length of target path (in blocks):                3987 (count: 32, min: 70, max: 173, avg: 124.59)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   3.365s
  Counterexample analysis:                             2.623s (Max:     0.143s, Calls: 32)
    Refinement sat check:                              1.161s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.002s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.111s
  Precision update:                                    0.099s
  ARG update:                                          0.453s

Length of refined path (in blocks):                    3203 (count: 32, min: 51, max: 146, avg: 100.09)
Number of affected states:                             2979 (count: 32, min: 1, max: 145, avg: 93.09)
Length (states) of path with itp 'true':                192 (count: 32, min: 0, max: 78, avg: 6.00)
Length (states) of path with itp non-trivial itp:      2979 (count: 32, min: 1, max: 145, avg: 93.09)
Length (states) of path with itp 'false':                32 (count: 32, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:         141 (count: 32, min: 0, max: 16, avg: 4.41)
Equal non-trivial interpolants along paths:            2806 (count: 32, min: 0, max: 143, avg: 87.69)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                32
Number of successful refinements:     32
Number of failed refinements:         0
Max. size of reached set before ref.: 11075
Max. size of reached set after ref.:  502
Avg. size of reached set before ref.: 3712.69
Avg. size of reached set after ref.:  39.78

Total time for CEGAR algorithm:      26.398s
Time for refinements:                 3.671s
Average time for refinement:          0.114s
Max time for refinement:              0.216s

Code Coverage
-----------------------------
  Function coverage:      0.575
  Visited lines:          651
  Total lines:            1453
  Line coverage:          0.448
  Visited conditions:     222
  Total conditions:       498
  Condition coverage:     0.446

CPAchecker general statistics
-----------------------------
Number of program locations:     1995
Number of CFA edges:             2265
Number of relevant variables:    361
Number of functions:             113
Number of loops:                 4
Size of reached set:             3611
  Number of reached locations:   624 (31%)
    Avg states per location:     5
    Max states per location:     87 (at node N1155)
  Number of reached functions:   65 (58%)
  Number of partitions:          3571
    Avg size of partitions:      1
    Max size of partitions:      4 (with key [N982 (before line 1376), Function outgoing__wrappee__Encrypt called from node N998, stack depth 7 [79cc5362], stack [main, test, bobToRjh, sendEmail, outgoing, outgoing__wrappee__AddressBook, outgoing__wrappee__Encrypt]])
  Number of target states:       0
  Size of final wait list        22

Time for analysis setup:          3.876s
  Time for loading CPAs:          0.813s
  Time for loading parser:        0.634s
  Time for CFA construction:      2.255s
    Time for parsing file(s):     0.669s
    Time for AST to CFA:          0.658s
    Time for CFA sanity check:    0.211s
    Time for post-processing:     0.579s
      Time for var class.:        0.328s
Time for Analysis:               26.398s
CPU time for analysis:           26.400s
Total time for CPAchecker:       30.278s
Total CPU time for CPAchecker:   30.270s
Time for statistics:              0.158s

Time for Garbage Collector:       0.869s (in 62 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 92MB (    87 MiB) max;     50MB (    47 MiB) avg;     94MB (    90 MiB) peak
Used non-heap memory:             37MB (    35 MiB) max;     34MB (    32 MiB) avg;     38MB (    36 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        39MB (    37 MiB) max;     36MB (    34 MiB) avg
Total process virtual memory:   8087MB (  7713 MiB) max;   8075MB (  7701 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
