scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/email_spec8_product29_true-unreach-call_true-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_2ueebcj7/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 73: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 94: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 131: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 168: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 207: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 246: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 283: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 320: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 357: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 394: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 431: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 473: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 496: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 591: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 611: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 620: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 635: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 999: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1045: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1062: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1514: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1546: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1555: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1564: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1589: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1991: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2020: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2068: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2115: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2160: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2238: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2307: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2441: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2524: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2571: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2618: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2663: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2726: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2833: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2887: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2959: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3006: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 836: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            580435 (17% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  577894 (100%)
  Because of loop head:            2389 (0%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         152 (0%)
  Times precision was empty:       3412 (1%)
  Times precision was {false}:     324 (0%)
  Times result was cached:         554697 (96%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      22002 (4%)
  Times result was 'false':        42398 (7%)
Number of strengthen sat checks:   0
Number of coverage checks:         886844
  BDD entailment checks:           129536
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       65
Number of predicates discovered:          225
Number of abstraction locations:          177
Max number of predicates per location:    48
Avg number of predicates per location:    21
Total predicates per abstraction:         7675839
Max number of predicates per abstraction: 48
Avg number of predicates per abstraction: 343.81
Number of irrelevant predicates:          2806652 (37%)
Number of preds handled by boolean abs:   301040 (4%)
  Total number of models for allsat:      2361162
  Max number of models for allsat:        119808
  Avg number of models for allsat:        107.32

Time for post operator:                 32.315s
  Time for path formula creation:       30.686s
Time for strengthen operator:            2.996s
Time for prec operator:                749.144s
  Time for abstraction:                742.596s (Max:    44.031s, Count: 580435)
    Boolean abstraction:               486.067s
    Solving time:                       40.556s (Max:     0.340s)
    Model enumeration time:            318.732s
    Time for BDD construction:         122.903s (Max:     7.256s)
Time for merge operator:                 4.461s
Time for coverage check:                 0.422s
  Time for BDD entailment checks:        0.335s
Total time for SMT solver (w/o itp):   359.289s

Number of path formula cache hits:   3107061 (74%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    25.625s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               224472
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                      360961 (count: 396627, min: 0, max: 5714, avg: 0.91)
Time for BDD node cleanup:                             0.120s
Time for BDD garbage collection:                       1.886s (in 426 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  5.260s
  Time for transition matches:                         3.053s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.002s
Automaton transfers with branching:                0
Automaton transfer successors:                      3512719 (count: 3512719, min: 1, max: 1, avg: 1.00) [1 x 3512719]

CPA algorithm statistics
------------------------
Number of iterations:            2638378
Max size of waitlist:            78
Average size of waitlist:        38
Number of computed successors:   3106453
Max successors for one state:    2
Number of times merged:          378654
Number of times stopped:         420880
Number of times breaked:         152

Total time for CPA algorithm:       859.784s (Max:   120.960s)
  Time for choose from waitlist:      1.270s
  Time for precision adjustment:    767.093s
  Time for transfer relation:        65.412s
  Time for merge operator:            8.750s
  Time for stop operator:             4.237s
  Time for adding to reached set:     5.300s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   152
Avg. length of target path (in blocks):               24631 (count: 152, min: 70, max: 241, avg: 162.05)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  34.314s
  Counterexample analysis:                            28.947s (Max:     0.763s, Calls: 152)
    Refinement sat check:                              7.158s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.012s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.397s
  Precision update:                                    0.364s
  ARG update:                                          4.368s

Length of refined path (in blocks):                   16787 (count: 152, min: 39, max: 231, avg: 110.44)
Number of affected states:                            14813 (count: 152, min: 1, max: 223, avg: 97.45)
Length (states) of path with itp 'true':               1822 (count: 152, min: 0, max: 89, avg: 11.99)
Length (states) of path with itp non-trivial itp:     14813 (count: 152, min: 1, max: 223, avg: 97.45)
Length (states) of path with itp 'false':               152 (count: 152, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:        1888 (count: 152, min: 0, max: 64, avg: 12.42)
Equal non-trivial interpolants along paths:           12773 (count: 152, min: 0, max: 186, avg: 84.03)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                152
Number of successful refinements:     152
Number of failed refinements:         0
Max. size of reached set before ref.: 126597
Max. size of reached set after ref.:  15533
Avg. size of reached set before ref.: 17040.51
Avg. size of reached set after ref.:  442.82

Total time for CEGAR algorithm:     896.067s
Time for refinements:                36.221s
Average time for refinement:          0.238s
Max time for refinement:              1.014s

Code Coverage
-----------------------------
  Function coverage:      0.637
  Visited lines:          868
  Total lines:            1453
  Line coverage:          0.597
  Visited conditions:     344
  Total conditions:       498
  Condition coverage:     0.691

CPAchecker general statistics
-----------------------------
Number of program locations:     1995
Number of CFA edges:             2265
Number of relevant variables:    361
Number of functions:             113
Number of loops:                 4
Size of reached set:             120326
  Number of reached locations:   905 (45%)
    Avg states per location:     132
    Max states per location:     2406 (at node N1155)
  Number of reached functions:   72 (64%)
  Number of partitions:          118367
    Avg size of partitions:      1
    Max size of partitions:      36 (with key [N809 (before lines 1114-1281), Function test called from node N1274, stack depth 2 [1f914559], stack [main, test]])
  Number of target states:       0
  Size of final wait list        40

Time for analysis setup:          4.190s
  Time for loading CPAs:          0.940s
  Time for loading parser:        0.751s
  Time for CFA construction:      2.285s
    Time for parsing file(s):     0.674s
    Time for AST to CFA:          0.702s
    Time for CFA sanity check:    0.223s
    Time for post-processing:     0.570s
      Time for var class.:        0.312s
Time for Analysis:              896.067s
CPU time for analysis:          895.940s
Total time for CPAchecker:      900.269s
Total CPU time for CPAchecker:  900.140s
Time for statistics:              1.521s

Time for Garbage Collector:      37.480s (in 869 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                986MB (   941 MiB) max;    423MB (   403 MiB) avg;    997MB (   951 MiB) peak
Used non-heap memory:             37MB (    35 MiB) max;     36MB (    34 MiB) avg;     38MB (    36 MiB) peak
Allocated heap memory:          1014MB (   967 MiB) max;    618MB (   589 MiB) avg
Allocated non-heap memory:        39MB (    37 MiB) max;     39MB (    37 MiB) avg
Total process virtual memory:   9252MB (  8823 MiB) max;   8622MB (  8222 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
