scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/email_spec8_product29_true-unreach-call_true-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_uvfw06u8/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 73: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 94: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 131: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 168: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 207: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 246: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 283: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 320: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 357: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 394: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 431: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 473: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 496: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 591: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 611: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 620: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 635: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 999: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1045: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1062: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1514: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1546: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1555: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1564: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1589: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1991: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2020: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2068: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2115: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2160: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2238: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2307: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2441: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2524: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2571: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2618: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2663: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2726: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2833: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2887: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2959: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3006: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 836: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            775514 (14% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  768450 (99%)
  Because of loop head:            6900 (1%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         164 (0%)
  Times precision was empty:       5022 (1%)
  Times precision was {false}:     334 (0%)
  Times result was cached:         742629 (96%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      27529 (4%)
  Times result was 'false':        38274 (5%)
Number of strengthen sat checks:   0
Number of coverage checks:         1821200
  BDD entailment checks:           349264
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       65
Number of predicates discovered:          185
Number of abstraction locations:          177
Max number of predicates per location:    32
Avg number of predicates per location:    15
Total predicates per abstraction:         9039619
Max number of predicates per abstraction: 32
Avg number of predicates per abstraction: 324.43
Number of irrelevant predicates:          3125507 (35%)
Number of preds handled by boolean abs:   301533 (3%)
  Total number of models for allsat:      2020942
  Max number of models for allsat:        9040
  Avg number of models for allsat:        73.41

Time for post operator:                 27.720s
  Time for path formula creation:       24.736s
Time for strengthen operator:            4.627s
Time for prec operator:                709.557s
  Time for abstraction:                700.600s (Max:     1.913s, Count: 775514)
    Boolean abstraction:               358.803s
    Solving time:                       58.016s (Max:     0.016s)
    Model enumeration time:            212.024s
    Time for BDD construction:          84.417s (Max:     0.980s)
Time for merge operator:                 4.417s
Time for coverage check:                 1.241s
  Time for BDD entailment checks:        1.050s
Total time for SMT solver (w/o itp):   270.041s

Number of path formula cache hits:   6194950 (89%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    18.884s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               182721
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                      361845 (count: 645724, min: 0, max: 5790, avg: 0.56)
Time for BDD node cleanup:                             0.167s
Time for BDD garbage collection:                       0.865s (in 163 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  7.600s
  Time for transition matches:                         4.363s
  Time for transition assertions:                      0.001s
  Time for transition actions:                         0.009s
Automaton transfers with branching:                0
Automaton transfer successors:                      5685438 (count: 5685438, min: 1, max: 1, avg: 1.00) [1 x 5685438]

CPA algorithm statistics
------------------------
Number of iterations:            4240962
Max size of waitlist:            789
Average size of waitlist:        165
Number of computed successors:   5077302
Max successors for one state:    2
Number of times merged:          735968
Number of times stopped:         786715
Number of times breaked:         164

Total time for CPA algorithm:       863.735s (Max:   123.788s)
  Time for choose from waitlist:      1.929s
  Time for precision adjustment:    741.301s
  Time for transfer relation:        79.823s
  Time for merge operator:           12.286s
  Time for stop operator:             7.885s
  Time for adding to reached set:     9.191s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   164
Avg. length of target path (in blocks):               23045 (count: 164, min: 66, max: 194, avg: 140.52)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  29.078s
  Counterexample analysis:                            18.855s (Max:     0.493s, Calls: 164)
    Refinement sat check:                              5.850s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.013s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.260s
  Precision update:                                    0.244s
  ARG update:                                          9.460s

Length of refined path (in blocks):                   16241 (count: 164, min: 39, max: 167, avg: 99.03)
Number of affected states:                            13383 (count: 164, min: 1, max: 166, avg: 81.60)
Length (states) of path with itp 'true':               2694 (count: 164, min: 0, max: 78, avg: 16.43)
Length (states) of path with itp non-trivial itp:     13383 (count: 164, min: 1, max: 166, avg: 81.60)
Length (states) of path with itp 'false':               164 (count: 164, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:        1682 (count: 164, min: 0, max: 58, avg: 10.26)
Equal non-trivial interpolants along paths:           11537 (count: 164, min: 0, max: 164, avg: 70.35)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                164
Number of successful refinements:     164
Number of failed refinements:         0
Max. size of reached set before ref.: 227058
Max. size of reached set after ref.:  34199
Avg. size of reached set before ref.: 29224.16
Avg. size of reached set after ref.:  3450.15

Total time for CEGAR algorithm:     896.180s
Time for refinements:                32.034s
Average time for refinement:          0.195s
Max time for refinement:              0.973s

Code Coverage
-----------------------------
  Function coverage:      0.327
  Visited lines:          511
  Total lines:            1453
  Line coverage:          0.352
  Visited conditions:     200
  Total conditions:       498
  Condition coverage:     0.402

CPAchecker general statistics
-----------------------------
Number of program locations:     1995
Number of CFA edges:             2265
Number of relevant variables:    361
Number of functions:             113
Number of loops:                 4
Size of reached set:             25376
  Number of reached locations:   491 (25%)
    Avg states per location:     51
    Max states per location:     455 (at node N1915)
  Number of reached functions:   37 (33%)
  Number of partitions:          25134
    Avg size of partitions:      1
    Max size of partitions:      91 (with key [N809 (before lines 1114-1281), Function test called from node N1274, stack depth 2 [37e56c78], stack [main, test]])
  Number of target states:       0
  Size of final wait list        523

Time for analysis setup:          4.063s
  Time for loading CPAs:          0.876s
  Time for loading parser:        0.681s
  Time for CFA construction:      2.275s
    Time for parsing file(s):     0.716s
    Time for AST to CFA:          0.649s
    Time for CFA sanity check:    0.211s
    Time for post-processing:     0.547s
      Time for var class.:        0.295s
Time for Analysis:              896.180s
CPU time for analysis:          896.030s
Total time for CPAchecker:      900.247s
Total CPU time for CPAchecker:  900.100s
Time for statistics:              0.449s

Time for Garbage Collector:      57.395s (in 1116 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                854MB (   814 MiB) max;    422MB (   403 MiB) avg;    871MB (   831 MiB) peak
Used non-heap memory:             37MB (    35 MiB) max;     36MB (    35 MiB) avg;     38MB (    36 MiB) peak
Allocated heap memory:           877MB (   837 MiB) max;    625MB (   596 MiB) avg
Allocated non-heap memory:        39MB (    37 MiB) max;     39MB (    37 MiB) avg
Total process virtual memory:   9105MB (  8683 MiB) max;   8589MB (  8192 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
