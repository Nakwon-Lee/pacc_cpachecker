scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/email_spec8_product29_true-unreach-call_true-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_tbasdws8/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 73: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 94: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 131: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 168: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 207: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 246: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 283: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 320: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 357: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 394: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 431: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 473: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 496: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 591: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 611: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 620: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 635: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 999: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1045: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1062: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1514: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1546: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1555: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1564: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1589: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1991: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2020: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2068: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2115: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2160: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2238: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2307: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2441: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2524: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2571: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2618: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2663: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2726: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2833: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2887: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2959: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3006: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 836: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            30228 (14% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  29703 (98%)
  Because of loop head:            443 (1%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         82 (0%)
  Times precision was empty:       4195 (14%)
  Times precision was {false}:     280 (1%)
  Times result was cached:         25322 (84%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      431 (1%)
  Times result was 'false':        268 (1%)
Number of strengthen sat checks:   0
Number of coverage checks:         59114
  BDD entailment checks:           2598
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       65
Number of predicates discovered:          5
Number of abstraction locations:          160
Max number of predicates per location:    2
Avg number of predicates per location:    1
Total predicates per abstraction:         36683
Max number of predicates per abstraction: 2
Avg number of predicates per abstraction: 51.59
Number of irrelevant predicates:          25101 (68%)
Number of preds handled by boolean abs:   543 (1%)
  Total number of models for allsat:      431
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.00

Time for post operator:                  3.940s
  Time for path formula creation:        3.728s
Time for strengthen operator:            0.351s
Time for prec operator:                  5.828s
  Time for abstraction:                  5.057s (Max:     0.030s, Count: 30228)
    Boolean abstraction:                 0.746s
    Solving time:                        0.805s (Max:     0.015s)
    Model enumeration time:              0.071s
    Time for BDD construction:           0.080s (Max:     0.028s)
Time for merge operator:                 0.647s
Time for coverage check:                 0.063s
  Time for BDD entailment checks:        0.049s
Total time for SMT solver (w/o itp):     0.876s

Number of path formula cache hits:   222146 (82%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     3.316s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               205
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         883 (count: 10796, min: 0, max: 130, avg: 0.08)
Time for BDD node cleanup:                             0.004s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.588s
  Time for transition matches:                         0.235s
  Time for transition assertions:                      0.013s
  Time for transition actions:                         0.007s
Automaton transfers with branching:                0
Automaton transfer successors:                       223670 (count: 223670, min: 1, max: 1, avg: 1.00) [1 x 223670]

CPA algorithm statistics
------------------------
Number of iterations:            163216
Max size of waitlist:            59
Average size of waitlist:        25
Number of computed successors:   194649
Max successors for one state:    2
Number of times merged:          28258
Number of times stopped:         29681
Number of times breaked:         82

Total time for CPA algorithm:        19.857s (Max:     1.647s)
  Time for choose from waitlist:      0.169s
  Time for precision adjustment:      8.141s
  Time for transfer relation:         7.881s
  Time for merge operator:            1.363s
  Time for stop operator:             0.469s
  Time for adding to reached set:     0.442s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   82
Avg. length of target path (in blocks):                9724 (count: 82, min: 66, max: 138, avg: 118.59)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   4.690s
  Counterexample analysis:                             3.782s (Max:     0.083s, Calls: 82)
    Refinement sat check:                              1.850s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.005s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.110s
  Precision update:                                    0.095s
  ARG update:                                          0.556s

Length of refined path (in blocks):                    6860 (count: 81, min: 63, max: 111, avg: 84.69)
Number of affected states:                             2565 (count: 81, min: 1, max: 110, avg: 31.67)
Length (states) of path with itp 'true':               4214 (count: 81, min: 0, max: 87, avg: 52.02)
Length (states) of path with itp non-trivial itp:      2565 (count: 81, min: 1, max: 110, avg: 31.67)
Length (states) of path with itp 'false':                81 (count: 81, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:          15 (count: 81, min: 0, max: 1, avg: 0.19)
Equal non-trivial interpolants along paths:            2469 (count: 81, min: 0, max: 108, avg: 30.48)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                82
Number of successful refinements:     81
Number of failed refinements:         0
Max. size of reached set before ref.: 6130
Max. size of reached set after ref.:  5474
Avg. size of reached set before ref.: 5121.02
Avg. size of reached set after ref.:  3150.90

Total time for CEGAR algorithm:      25.419s
Time for refinements:                 5.357s
Average time for refinement:          0.065s
Max time for refinement:              0.168s

Code Coverage
-----------------------------
  Function coverage:      0.646
  Visited lines:          851
  Total lines:            1453
  Line coverage:          0.586
  Visited conditions:     332
  Total conditions:       498
  Condition coverage:     0.667

CPAchecker general statistics
-----------------------------
Number of program locations:     1995
Number of CFA edges:             2265
Number of relevant variables:    361
Number of functions:             113
Number of loops:                 4
Size of reached set:             2815
  Number of reached locations:   879 (44%)
    Avg states per location:     3
    Max states per location:     32 (at node N163)
  Number of reached functions:   73 (65%)
  Number of partitions:          2804
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N1062 (before line 1499), Function incoming called from node N955, stack depth 10 [1879ba15], stack [main, test, bobToRjh, sendEmail, outgoing, outgoing__wrappee__AddressBook, outgoing__wrappee__Encrypt, outgoing__wrappee__Keys, mail, incoming]])
  Number of target states:       1
  Size of final wait list        25

Time for analysis setup:          4.294s
  Time for loading CPAs:          0.968s
  Time for loading parser:        0.729s
  Time for CFA construction:      2.390s
    Time for parsing file(s):     0.762s
    Time for AST to CFA:          0.649s
    Time for CFA sanity check:    0.221s
    Time for post-processing:     0.609s
      Time for var class.:        0.322s
Time for Analysis:               25.419s
CPU time for analysis:           25.410s
Total time for CPAchecker:       29.720s
Total CPU time for CPAchecker:   29.700s
Time for statistics:              0.163s

Time for Garbage Collector:       0.968s (in 69 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                102MB (    97 MiB) max;     53MB (    50 MiB) avg;    108MB (   103 MiB) peak
Used non-heap memory:             37MB (    35 MiB) max;     33MB (    31 MiB) avg;     37MB (    35 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        38MB (    37 MiB) max;     35MB (    34 MiB) avg
Total process virtual memory:   8087MB (  7712 MiB) max;   8074MB (  7700 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
