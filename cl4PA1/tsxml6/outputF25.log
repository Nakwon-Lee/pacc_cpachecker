scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/email_spec8_product29_true-unreach-call_true-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_3r85040h/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 73: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 94: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 131: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 168: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 207: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 246: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 283: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 320: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 357: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 394: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 431: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 473: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 496: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 591: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 611: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 620: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 635: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 999: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1045: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1062: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1514: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1546: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1555: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1564: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1589: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1991: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2020: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2068: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2115: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2160: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2238: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2307: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2441: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2524: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2571: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2618: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2663: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2726: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2833: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2887: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2959: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3006: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 836: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            565706 (13% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  561540 (99%)
  Because of loop head:            4053 (1%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         113 (0%)
  Times precision was empty:       2839 (1%)
  Times precision was {false}:     321 (0%)
  Times result was cached:         521493 (92%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      41053 (7%)
  Times result was 'false':        22005 (4%)
Number of strengthen sat checks:   0
Number of coverage checks:         1380789
  BDD entailment checks:           275527
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       65
Number of predicates discovered:          192
Number of abstraction locations:          177
Max number of predicates per location:    42
Avg number of predicates per location:    14
Total predicates per abstraction:         6823927
Max number of predicates per abstraction: 42
Avg number of predicates per abstraction: 164.93
Number of irrelevant predicates:          2373483 (35%)
Number of preds handled by boolean abs:   633576 (9%)
  Total number of models for allsat:      1995669
  Max number of models for allsat:        29952
  Avg number of models for allsat:        48.61

Time for post operator:                 35.054s
  Time for path formula creation:       32.739s
Time for strengthen operator:            4.115s
Time for prec operator:                727.240s
  Time for abstraction:                719.668s (Max:     6.738s, Count: 565706)
    Boolean abstraction:               425.365s
    Solving time:                       96.201s (Max:     0.094s)
    Model enumeration time:            206.656s
    Time for BDD construction:         113.461s (Max:     2.028s)
Time for merge operator:                 5.780s
Time for coverage check:                 0.996s
  Time for BDD entailment checks:        0.844s
Total time for SMT solver (w/o itp):   302.857s

Number of path formula cache hits:   3896274 (77%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    26.858s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               182487
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                      539744 (count: 711129, min: 0, max: 15148, avg: 0.76)
Time for BDD node cleanup:                             0.201s
Time for BDD garbage collection:                       2.600s (in 482 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  6.012s
  Time for transition matches:                         3.363s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.004s
Automaton transfers with branching:                0
Automaton transfer successors:                      4258543 (count: 4258543, min: 1, max: 1, avg: 1.00) [1 x 4258543]

CPA algorithm statistics
------------------------
Number of iterations:            3153131
Max size of waitlist:            1856
Average size of waitlist:        421
Number of computed successors:   3780211
Max successors for one state:    2
Number of times merged:          552631
Number of times stopped:         591824
Number of times breaked:         113

Total time for CPA algorithm:       871.555s (Max:   179.874s)
  Time for choose from waitlist:      1.542s
  Time for precision adjustment:    755.197s
  Time for transfer relation:        79.193s
  Time for merge operator:           14.693s
  Time for stop operator:             5.127s
  Time for adding to reached set:     6.306s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   113
Avg. length of target path (in blocks):               18025 (count: 113, min: 70, max: 210, avg: 159.51)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  20.960s
  Counterexample analysis:                            13.301s (Max:     0.510s, Calls: 113)
    Refinement sat check:                              4.580s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.011s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.256s
  Precision update:                                    0.197s
  ARG update:                                          6.975s

Length of refined path (in blocks):                   11654 (count: 113, min: 39, max: 180, avg: 103.13)
Number of affected states:                             9514 (count: 113, min: 1, max: 178, avg: 84.19)
Length (states) of path with itp 'true':               2027 (count: 113, min: 0, max: 148, avg: 17.94)
Length (states) of path with itp non-trivial itp:      9514 (count: 113, min: 1, max: 178, avg: 84.19)
Length (states) of path with itp 'false':               113 (count: 113, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:         791 (count: 113, min: 0, max: 60, avg: 7.00)
Equal non-trivial interpolants along paths:            8610 (count: 113, min: 0, max: 176, avg: 76.19)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                113
Number of successful refinements:     113
Number of failed refinements:         0
Max. size of reached set before ref.: 326447
Max. size of reached set after ref.:  62012
Avg. size of reached set before ref.: 35647.98
Avg. size of reached set after ref.:  7972.26

Total time for CEGAR algorithm:     895.972s
Time for refinements:                23.718s
Average time for refinement:          0.209s
Max time for refinement:              1.282s

Code Coverage
-----------------------------
  Function coverage:      0.327
  Visited lines:          511
  Total lines:            1453
  Line coverage:          0.352
  Visited conditions:     200
  Total conditions:       498
  Condition coverage:     0.402

CPAchecker general statistics
-----------------------------
Number of program locations:     1995
Number of CFA edges:             2265
Number of relevant variables:    361
Number of functions:             113
Number of loops:                 4
Size of reached set:             39026
  Number of reached locations:   491 (25%)
    Avg states per location:     79
    Max states per location:     329 (at node N1914)
  Number of reached functions:   37 (33%)
  Number of partitions:          38724
    Avg size of partitions:      1
    Max size of partitions:      73 (with key [N809 (before lines 1114-1281), Function test called from node N1274, stack depth 2 [46cfe0d2], stack [main, test]])
  Number of target states:       0
  Size of final wait list        289

Time for analysis setup:          4.278s
  Time for loading CPAs:          0.859s
  Time for loading parser:        0.773s
  Time for CFA construction:      2.461s
    Time for parsing file(s):     0.748s
    Time for AST to CFA:          0.720s
    Time for CFA sanity check:    0.196s
    Time for post-processing:     0.620s
      Time for var class.:        0.346s
Time for Analysis:              895.972s
CPU time for analysis:          895.840s
Total time for CPAchecker:      900.255s
Total CPU time for CPAchecker:  900.120s
Time for statistics:              0.588s

Time for Garbage Collector:      51.802s (in 788 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:               1132MB (  1079 MiB) max;    568MB (   541 MiB) avg;   1251MB (  1193 MiB) peak
Used non-heap memory:             37MB (    35 MiB) max;     36MB (    34 MiB) avg;     38MB (    36 MiB) peak
Allocated heap memory:          1572MB (  1499 MiB) max;    838MB (   799 MiB) avg
Allocated non-heap memory:        39MB (    38 MiB) max;     39MB (    37 MiB) avg
Total process virtual memory:  11140MB ( 10624 MiB) max;   9097MB (  8676 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
