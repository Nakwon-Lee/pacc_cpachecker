scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/email_spec8_product29_true-unreach-call_true-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_eupmuulz/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 73: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 94: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 131: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 168: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 207: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 246: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 283: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 320: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 357: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 394: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 431: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 473: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 496: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 591: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 611: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 620: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 635: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 999: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1045: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1062: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1514: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1546: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1555: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1564: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1589: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1991: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2020: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2068: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2115: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2160: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2238: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2307: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2441: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2524: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2571: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2618: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2663: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2726: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2833: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2887: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2959: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3006: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 836: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            921922 (15% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  915331 (99%)
  Because of loop head:            6416 (1%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         175 (0%)
  Times precision was empty:       10165 (1%)
  Times precision was {false}:     344 (0%)
  Times result was cached:         881681 (96%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      29732 (3%)
  Times result was 'false':        52670 (6%)
Number of strengthen sat checks:   0
Number of coverage checks:         1833923
  BDD entailment checks:           321835
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       65
Number of predicates discovered:          210
Number of abstraction locations:          177
Max number of predicates per location:    36
Avg number of predicates per location:    19
Total predicates per abstraction:         13196098
Max number of predicates per abstraction: 36
Avg number of predicates per abstraction: 438.76
Number of irrelevant predicates:          5644056 (43%)
Number of preds handled by boolean abs:   360430 (3%)
  Total number of models for allsat:      1443186
  Max number of models for allsat:        16384
  Avg number of models for allsat:        48.54

Time for post operator:                 30.065s
  Time for path formula creation:       26.936s
Time for strengthen operator:            4.745s
Time for prec operator:                696.848s
  Time for abstraction:                686.931s (Max:     3.664s, Count: 921922)
    Boolean abstraction:               256.498s
    Solving time:                       54.403s (Max:     0.032s)
    Model enumeration time:            137.750s
    Time for BDD construction:          59.275s (Max:     0.672s)
Time for merge operator:                 4.071s
Time for coverage check:                 1.017s
  Time for BDD entailment checks:        0.794s
Total time for SMT solver (w/o itp):   192.153s

Number of path formula cache hits:   6826277 (90%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    19.748s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               115422
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                      421704 (count: 657728, min: 0, max: 6434, avg: 0.64)
Time for BDD node cleanup:                             0.188s
Time for BDD garbage collection:                       0.986s (in 175 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  8.935s
  Time for transition matches:                         4.363s
  Time for transition assertions:                      0.003s
  Time for transition actions:                         0.003s
Automaton transfers with branching:                0
Automaton transfer successors:                      6172890 (count: 6172890, min: 1, max: 1, avg: 1.00) [1 x 6172890]

CPA algorithm statistics
------------------------
Number of iterations:            4669088
Max size of waitlist:            113
Average size of waitlist:        36
Number of computed successors:   5554639
Max successors for one state:    2
Number of times merged:          756044
Number of times stopped:         829634
Number of times breaked:         175

Total time for CPA algorithm:       857.253s (Max:    43.807s)
  Time for choose from waitlist:      1.780s
  Time for precision adjustment:    731.341s
  Time for transfer relation:        85.180s
  Time for merge operator:           12.126s
  Time for stop operator:             6.529s
  Time for adding to reached set:     7.574s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   175
Avg. length of target path (in blocks):               26158 (count: 175, min: 66, max: 209, avg: 149.47)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  33.023s
  Counterexample analysis:                            23.571s (Max:     0.507s, Calls: 175)
    Refinement sat check:                              6.941s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.019s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.314s
  Precision update:                                    0.247s
  ARG update:                                          8.637s

Length of refined path (in blocks):                   16057 (count: 175, min: 39, max: 182, avg: 91.75)
Number of affected states:                            13677 (count: 175, min: 1, max: 181, avg: 78.15)
Length (states) of path with itp 'true':               2205 (count: 175, min: 0, max: 86, avg: 12.60)
Length (states) of path with itp non-trivial itp:     13677 (count: 175, min: 1, max: 181, avg: 78.15)
Length (states) of path with itp 'false':               175 (count: 175, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:        1753 (count: 175, min: 0, max: 59, avg: 10.02)
Equal non-trivial interpolants along paths:           11749 (count: 175, min: 0, max: 179, avg: 67.14)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                175
Number of successful refinements:     175
Number of failed refinements:         0
Max. size of reached set before ref.: 101901
Max. size of reached set after ref.:  69875
Avg. size of reached set before ref.: 36627.72
Avg. size of reached set after ref.:  9941.05

Total time for CEGAR algorithm:     896.111s
Time for refinements:                37.367s
Average time for refinement:          0.213s
Max time for refinement:              0.694s

Code Coverage
-----------------------------
  Function coverage:      0.593
  Visited lines:          788
  Total lines:            1453
  Line coverage:          0.542
  Visited conditions:     304
  Total conditions:       498
  Condition coverage:     0.610

CPAchecker general statistics
-----------------------------
Number of program locations:     1995
Number of CFA edges:             2265
Number of relevant variables:    361
Number of functions:             113
Number of loops:                 4
Size of reached set:             2168
  Number of reached locations:   808 (41%)
    Avg states per location:     2
    Max states per location:     20 (at node N1914)
  Number of reached functions:   67 (59%)
  Number of partitions:          2163
    Avg size of partitions:      1
    Max size of partitions:      6 (with key [N809 (before lines 1114-1281), Function test called from node N1274, stack depth 2 [51115347], stack [main, test]])
  Number of target states:       0
  Size of final wait list        15

Time for analysis setup:          4.147s
  Time for loading CPAs:          0.839s
  Time for loading parser:        0.741s
  Time for CFA construction:      2.405s
    Time for parsing file(s):     0.677s
    Time for AST to CFA:          0.750s
    Time for CFA sanity check:    0.223s
    Time for post-processing:     0.608s
      Time for var class.:        0.328s
Time for Analysis:              896.111s
CPU time for analysis:          895.990s
Total time for CPAchecker:      900.262s
Total CPU time for CPAchecker:  900.140s
Time for statistics:              0.201s

Time for Garbage Collector:      60.723s (in 1254 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                746MB (   712 MiB) max;    398MB (   380 MiB) avg;    770MB (   734 MiB) peak
Used non-heap memory:             37MB (    35 MiB) max;     36MB (    34 MiB) avg;     37MB (    35 MiB) peak
Allocated heap memory:           804MB (   767 MiB) max;    581MB (   554 MiB) avg
Allocated non-heap memory:        39MB (    37 MiB) max;     39MB (    37 MiB) avg
Total process virtual memory:   9376MB (  8942 MiB) max;   8594MB (  8196 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
