scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/email_spec8_product29_true-unreach-call_true-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_r2ntlreh/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 73: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 94: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 131: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 168: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 207: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 246: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 283: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 320: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 357: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 394: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 431: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 473: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 496: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 591: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 611: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 620: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 635: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 999: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1045: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1062: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1514: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1546: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1555: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1564: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1589: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1991: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2020: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2068: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2115: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2160: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2238: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2307: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2441: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2524: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2571: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2618: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2663: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2726: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2833: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2887: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2959: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3006: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 836: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            1243315 (16% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  1236314 (99%)
  Because of loop head:            5751 (0%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         1250 (0%)
  Times precision was empty:       65993 (5%)
  Times precision was {false}:     390 (0%)
  Times result was cached:         1141867 (92%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      35065 (3%)
  Times result was 'false':        62242 (5%)
Number of strengthen sat checks:   0
Number of coverage checks:         2111747
  BDD entailment checks:           260843
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       65
Number of predicates discovered:          185
Number of abstraction locations:          177
Max number of predicates per location:    33
Avg number of predicates per location:    16
Total predicates per abstraction:         11253101
Max number of predicates per abstraction: 33
Avg number of predicates per abstraction: 317.39
Number of irrelevant predicates:          4486928 (40%)
Number of preds handled by boolean abs:   367152 (3%)
  Total number of models for allsat:      931155
  Max number of models for allsat:        5952
  Avg number of models for allsat:        26.56

Time for post operator:                 33.906s
  Time for path formula creation:       30.547s
Time for strengthen operator:            6.133s
Time for prec operator:                587.502s
  Time for abstraction:                575.007s (Max:     1.713s, Count: 1243315)
    Boolean abstraction:               182.214s
    Solving time:                       58.350s (Max:     0.015s)
    Model enumeration time:             81.238s
    Time for BDD construction:          37.664s (Max:     0.262s)
Time for merge operator:                 4.767s
Time for coverage check:                 0.654s
  Time for BDD entailment checks:        0.429s
Total time for SMT solver (w/o itp):   139.589s

Number of path formula cache hits:   8927936 (90%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    21.455s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               214279
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                      372237 (count: 661250, min: 0, max: 11790, avg: 0.56)
Time for BDD node cleanup:                             0.169s
Time for BDD garbage collection:                       0.531s (in 106 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                 11.053s
  Time for transition matches:                         5.622s
  Time for transition assertions:                      0.003s
  Time for transition actions:                         0.020s
Automaton transfers with branching:                0
Automaton transfer successors:                      7984540 (count: 7984540, min: 1, max: 1, avg: 1.00) [1 x 7984540]

CPA algorithm statistics
------------------------
Number of iterations:            5964274
Max size of waitlist:            1652
Average size of waitlist:        246
Number of computed successors:   7050878
Max successors for one state:    2
Number of times merged:          925452
Number of times stopped:         991850
Number of times breaked:         1250

Total time for CPA algorithm:       777.639s (Max:    83.233s)
  Time for choose from waitlist:      2.534s
  Time for precision adjustment:    627.997s
  Time for transfer relation:       101.197s
  Time for merge operator:           13.804s
  Time for stop operator:             7.171s
  Time for adding to reached set:    10.159s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   1250
Avg. length of target path (in blocks):              172413 (count: 1250, min: 66, max: 214, avg: 137.93)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  83.638s
  Counterexample analysis:                            70.535s (Max:     0.480s, Calls: 1250)
    Refinement sat check:                             28.278s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.100s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.352s
  Precision update:                                    0.706s
  ARG update:                                         11.012s

Length of refined path (in blocks):                  119920 (count: 1250, min: 39, max: 173, avg: 95.94)
Number of affected states:                            20322 (count: 1250, min: 1, max: 165, avg: 16.26)
Length (states) of path with itp 'true':              98348 (count: 1250, min: 0, max: 169, avg: 78.68)
Length (states) of path with itp non-trivial itp:     20322 (count: 1250, min: 1, max: 165, avg: 16.26)
Length (states) of path with itp 'false':              1250 (count: 1250, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:        2716 (count: 1250, min: 0, max: 58, avg: 2.17)
Equal non-trivial interpolants along paths:           16356 (count: 1250, min: 0, max: 158, avg: 13.08)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                1250
Number of successful refinements:     1250
Number of failed refinements:         0
Max. size of reached set before ref.: 235485
Max. size of reached set after ref.:  55809
Avg. size of reached set before ref.: 19596.80
Avg. size of reached set after ref.:  14907.86

Total time for CEGAR algorithm:     896.174s
Time for refinements:               105.126s
Average time for refinement:          0.084s
Max time for refinement:              1.005s

Code Coverage
-----------------------------
  Function coverage:      0.593
  Visited lines:          797
  Total lines:            1453
  Line coverage:          0.549
  Visited conditions:     318
  Total conditions:       498
  Condition coverage:     0.639

CPAchecker general statistics
-----------------------------
Number of program locations:     1995
Number of CFA edges:             2265
Number of relevant variables:    361
Number of functions:             113
Number of loops:                 4
Size of reached set:             135606
  Number of reached locations:   802 (40%)
    Avg states per location:     169
    Max states per location:     1007 (at node N162)
  Number of reached functions:   67 (59%)
  Number of partitions:          134982
    Avg size of partitions:      1
    Max size of partitions:      72 (with key [N809 (before lines 1114-1281), Function test called from node N1274, stack depth 2 [7e8d0870], stack [main, test]])
  Number of target states:       0
  Size of final wait list        1089

Time for analysis setup:          4.052s
  Time for loading CPAs:          0.760s
  Time for loading parser:        0.721s
  Time for CFA construction:      2.415s
    Time for parsing file(s):     0.738s
    Time for AST to CFA:          0.690s
    Time for CFA sanity check:    0.213s
    Time for post-processing:     0.632s
      Time for var class.:        0.349s
Time for Analysis:              896.174s
CPU time for analysis:          896.050s
Total time for CPAchecker:      900.231s
Total CPU time for CPAchecker:  900.100s
Time for statistics:              1.283s

Time for Garbage Collector:      66.867s (in 1282 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                903MB (   861 MiB) max;    442MB (   422 MiB) avg;    949MB (   905 MiB) peak
Used non-heap memory:             37MB (    36 MiB) max;     37MB (    35 MiB) avg;     38MB (    37 MiB) peak
Allocated heap memory:          1049MB (  1000 MiB) max;    642MB (   612 MiB) avg
Allocated non-heap memory:        39MB (    38 MiB) max;     39MB (    37 MiB) avg
Total process virtual memory:   9773MB (  9320 MiB) max;   8559MB (  8162 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
