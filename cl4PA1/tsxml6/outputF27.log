scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/email_spec8_product29_true-unreach-call_true-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_rf8p2p3n/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 73: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 94: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 131: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 168: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 207: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 246: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 283: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 320: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 357: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 394: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 431: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 473: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 496: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 591: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 611: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 620: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 635: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 999: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1045: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1062: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1514: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1546: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1555: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1564: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1589: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1991: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2020: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2068: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2115: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2160: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2238: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2307: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2441: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2524: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2571: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2618: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2663: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2726: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2833: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2887: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2959: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3006: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 836: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            1110192 (15% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  1105403 (100%)
  Because of loop head:            4675 (0%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         114 (0%)
  Times precision was empty:       34438 (3%)
  Times precision was {false}:     256 (0%)
  Times result was cached:         1044904 (94%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      30594 (3%)
  Times result was 'false':        87908 (8%)
Number of strengthen sat checks:   0
Number of coverage checks:         2094735
  BDD entailment checks:           392811
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       65
Number of predicates discovered:          123
Number of abstraction locations:          168
Max number of predicates per location:    39
Avg number of predicates per location:    15
Total predicates per abstraction:         10772590
Max number of predicates per abstraction: 39
Avg number of predicates per abstraction: 349.19
Number of irrelevant predicates:          3043381 (28%)
Number of preds handled by boolean abs:   546675 (5%)
  Total number of models for allsat:      1052827
  Max number of models for allsat:        2904
  Avg number of models for allsat:        34.41

Time for post operator:                 40.399s
  Time for path formula creation:       35.945s
Time for strengthen operator:            7.087s
Time for prec operator:                663.760s
  Time for abstraction:                651.532s (Max:     3.043s, Count: 1110192)
    Boolean abstraction:               262.753s
    Solving time:                       68.075s (Max:     0.016s)
    Model enumeration time:            118.804s
    Time for BDD construction:          68.635s (Max:     2.998s)
Time for merge operator:                 5.126s
Time for coverage check:                 1.664s
  Time for BDD entailment checks:        1.430s
Total time for SMT solver (w/o itp):   186.880s

Number of path formula cache hits:   8070621 (90%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    24.348s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               154650
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                      735438 (count: 884739, min: 0, max: 12080, avg: 0.83)
Time for BDD node cleanup:                             0.332s
Time for BDD garbage collection:                       1.910s (in 265 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                 10.098s
  Time for transition matches:                         5.516s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.001s
Automaton transfers with branching:                0
Automaton transfer successors:                      7293049 (count: 7293049, min: 1, max: 1, avg: 1.00) [1 x 7293049]

CPA algorithm statistics
------------------------
Number of iterations:            5466107
Max size of waitlist:            42
Average size of waitlist:        25
Number of computed successors:   6488204
Max successors for one state:    2
Number of times merged:          850962
Number of times stopped:         931949
Number of times breaked:         114

Total time for CPA algorithm:       862.449s (Max:   115.955s)
  Time for choose from waitlist:      2.273s
  Time for precision adjustment:    706.167s
  Time for transfer relation:       108.009s
  Time for merge operator:           14.374s
  Time for stop operator:             8.737s
  Time for adding to reached set:     9.002s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   114
Avg. length of target path (in blocks):               18210 (count: 114, min: 66, max: 235, avg: 159.74)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  28.805s
  Counterexample analysis:                            16.114s (Max:     0.415s, Calls: 114)
    Refinement sat check:                              5.097s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.014s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.245s
  Precision update:                                    0.181s
  ARG update:                                         12.049s

Length of refined path (in blocks):                   12266 (count: 114, min: 39, max: 208, avg: 107.60)
Number of affected states:                            10198 (count: 114, min: 1, max: 207, avg: 89.46)
Length (states) of path with itp 'true':               1954 (count: 114, min: 0, max: 90, avg: 17.14)
Length (states) of path with itp non-trivial itp:     10198 (count: 114, min: 1, max: 207, avg: 89.46)
Length (states) of path with itp 'false':               114 (count: 114, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:         969 (count: 114, min: 0, max: 28, avg: 8.50)
Equal non-trivial interpolants along paths:            9115 (count: 114, min: 0, max: 205, avg: 79.96)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                114
Number of successful refinements:     114
Number of failed refinements:         0
Max. size of reached set before ref.: 565300
Max. size of reached set after ref.:  147532
Avg. size of reached set before ref.: 53781.82
Avg. size of reached set after ref.:  10174.04

Total time for CEGAR algorithm:     896.306s
Time for refinements:                32.877s
Average time for refinement:          0.288s
Max time for refinement:              2.149s

Code Coverage
-----------------------------
  Function coverage:      0.637
  Visited lines:          864
  Total lines:            1453
  Line coverage:          0.595
  Visited conditions:     344
  Total conditions:       498
  Condition coverage:     0.691

CPAchecker general statistics
-----------------------------
Number of program locations:     1995
Number of CFA edges:             2265
Number of relevant variables:    361
Number of functions:             113
Number of loops:                 4
Size of reached set:             497060
  Number of reached locations:   900 (45%)
    Avg states per location:     552
    Max states per location:     8812 (at node N1155)
  Number of reached functions:   72 (64%)
  Number of partitions:          494761
    Avg size of partitions:      1
    Max size of partitions:      166 (with key [N809 (before lines 1114-1281), Function test called from node N1274, stack depth 2 [7d682d0e], stack [main, test]])
  Number of target states:       0
  Size of final wait list        25

Time for analysis setup:          3.977s
  Time for loading CPAs:          0.850s
  Time for loading parser:        0.641s
  Time for CFA construction:      2.323s
    Time for parsing file(s):     0.684s
    Time for AST to CFA:          0.676s
    Time for CFA sanity check:    0.210s
    Time for post-processing:     0.607s
      Time for var class.:        0.333s
Time for Analysis:              896.306s
CPU time for analysis:          896.200s
Total time for CPAchecker:      900.287s
Total CPU time for CPAchecker:  900.170s
Time for statistics:              3.627s

Time for Garbage Collector:      75.575s (in 936 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:               1436MB (  1369 MiB) max;    676MB (   645 MiB) avg;   1489MB (  1420 MiB) peak
Used non-heap memory:             37MB (    35 MiB) max;     36MB (    34 MiB) avg;     38MB (    36 MiB) peak
Allocated heap memory:          1576MB (  1503 MiB) max;   1047MB (   999 MiB) avg
Allocated non-heap memory:        39MB (    38 MiB) max;     39MB (    37 MiB) avg
Total process virtual memory:  10183MB (  9711 MiB) max;   8827MB (  8418 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
