scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/email_spec8_product29_true-unreach-call_true-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_colgkpur/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 73: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 94: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 131: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 168: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 207: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 246: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 283: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 320: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 357: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 394: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 431: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 473: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 496: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 591: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 611: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 620: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 635: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 999: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1045: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1062: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1514: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1546: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1555: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1564: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1589: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1991: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2020: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2068: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2115: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2160: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2238: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2307: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2441: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2524: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2571: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2618: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2663: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2726: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2833: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2887: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2959: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3006: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 836: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            1002236 (14% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  995936 (99%)
  Because of loop head:            6069 (1%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         231 (0%)
  Times precision was empty:       30511 (3%)
  Times precision was {false}:     360 (0%)
  Times result was cached:         941762 (94%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      29603 (3%)
  Times result was 'false':        49880 (5%)
Number of strengthen sat checks:   0
Number of coverage checks:         2278181
  BDD entailment checks:           397561
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       65
Number of predicates discovered:          186
Number of abstraction locations:          177
Max number of predicates per location:    33
Avg number of predicates per location:    15
Total predicates per abstraction:         10712690
Max number of predicates per abstraction: 33
Avg number of predicates per abstraction: 357.53
Number of irrelevant predicates:          4271682 (40%)
Number of preds handled by boolean abs:   301834 (3%)
  Total number of models for allsat:      1341722
  Max number of models for allsat:        7376
  Avg number of models for allsat:        45.32

Time for post operator:                 30.048s
  Time for path formula creation:       26.670s
Time for strengthen operator:            6.403s
Time for prec operator:                672.964s
  Time for abstraction:                661.535s (Max:     2.243s, Count: 1002236)
    Boolean abstraction:               262.260s
    Solving time:                       58.583s (Max:     0.047s)
    Model enumeration time:            139.681s
    Time for BDD construction:          59.873s (Max:     0.925s)
Time for merge operator:                 4.598s
Time for coverage check:                 1.118s
  Time for BDD entailment checks:        0.842s
Total time for SMT solver (w/o itp):   198.265s

Number of path formula cache hits:   8168693 (92%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    19.283s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               126217
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                      265050 (count: 691017, min: 0, max: 4077, avg: 0.38)
Time for BDD node cleanup:                             0.221s
Time for BDD garbage collection:                       0.695s (in 171 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  8.954s
  Time for transition matches:                         5.172s
  Time for transition assertions:                      0.001s
  Time for transition actions:                         0.002s
Automaton transfers with branching:                0
Automaton transfer successors:                      7210710 (count: 7210710, min: 1, max: 1, avg: 1.00) [1 x 7210710]

CPA algorithm statistics
------------------------
Number of iterations:            5427720
Max size of waitlist:            1028
Average size of waitlist:        236
Number of computed successors:   6496672
Max successors for one state:    2
Number of times merged:          940310
Number of times stopped:         1003114
Number of times breaked:         231

Total time for CPA algorithm:       857.510s (Max:   115.958s)
  Time for choose from waitlist:      2.840s
  Time for precision adjustment:    714.152s
  Time for transfer relation:        93.832s
  Time for merge operator:           14.670s
  Time for stop operator:             7.959s
  Time for adding to reached set:     9.657s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   231
Avg. length of target path (in blocks):               30900 (count: 231, min: 66, max: 194, avg: 133.77)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  31.200s
  Counterexample analysis:                            18.174s (Max:     0.473s, Calls: 231)
    Refinement sat check:                              6.575s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.041s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.253s
  Precision update:                                    0.241s
  ARG update:                                         12.196s

Length of refined path (in blocks):                   20655 (count: 231, min: 39, max: 167, avg: 89.42)
Number of affected states:                            11349 (count: 231, min: 1, max: 166, avg: 49.13)
Length (states) of path with itp 'true':               9075 (count: 231, min: 0, max: 101, avg: 39.29)
Length (states) of path with itp non-trivial itp:     11349 (count: 231, min: 1, max: 166, avg: 49.13)
Length (states) of path with itp 'false':               231 (count: 231, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:        1288 (count: 231, min: 0, max: 58, avg: 5.58)
Equal non-trivial interpolants along paths:            9830 (count: 231, min: 0, max: 164, avg: 42.55)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                231
Number of successful refinements:     231
Number of failed refinements:         0
Max. size of reached set before ref.: 340433
Max. size of reached set after ref.:  87114
Avg. size of reached set before ref.: 33414.64
Avg. size of reached set after ref.:  10051.96

Total time for CEGAR algorithm:     896.318s
Time for refinements:                36.756s
Average time for refinement:          0.159s
Max time for refinement:              1.549s

Code Coverage
-----------------------------
  Function coverage:      0.513
  Visited lines:          730
  Total lines:            1453
  Line coverage:          0.502
  Visited conditions:     292
  Total conditions:       498
  Condition coverage:     0.586

CPAchecker general statistics
-----------------------------
Number of program locations:     1995
Number of CFA edges:             2265
Number of relevant variables:    361
Number of functions:             113
Number of loops:                 4
Size of reached set:             46899
  Number of reached locations:   725 (36%)
    Avg states per location:     64
    Max states per location:     480 (at node N1914)
  Number of reached functions:   58 (51%)
  Number of partitions:          46578
    Avg size of partitions:      1
    Max size of partitions:      60 (with key [N809 (before lines 1114-1281), Function test called from node N1274, stack depth 2 [14272a97], stack [main, test]])
  Number of target states:       0
  Size of final wait list        268

Time for analysis setup:          3.960s
  Time for loading CPAs:          0.827s
  Time for loading parser:        0.665s
  Time for CFA construction:      2.281s
    Time for parsing file(s):     0.679s
    Time for AST to CFA:          0.672s
    Time for CFA sanity check:    0.214s
    Time for post-processing:     0.575s
      Time for var class.:        0.308s
Time for Analysis:              896.318s
CPU time for analysis:          896.200s
Total time for CPAchecker:      900.282s
Total CPU time for CPAchecker:  900.160s
Time for statistics:              0.629s

Time for Garbage Collector:      73.678s (in 1232 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:               1089MB (  1038 MiB) max;    446MB (   425 MiB) avg;   1110MB (  1059 MiB) peak
Used non-heap memory:             37MB (    35 MiB) max;     36MB (    34 MiB) avg;     38MB (    36 MiB) peak
Allocated heap memory:          1121MB (  1069 MiB) max;    670MB (   639 MiB) avg
Allocated non-heap memory:        39MB (    37 MiB) max;     39MB (    37 MiB) avg
Total process virtual memory:   9309MB (  8878 MiB) max;   8573MB (  8175 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
