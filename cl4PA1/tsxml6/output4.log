scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/email_spec8_product29_true-unreach-call_true-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_bce1r7tn/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 73: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 94: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 131: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 168: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 207: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 246: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 283: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 320: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 357: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 394: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 431: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 473: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 496: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 591: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 611: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 620: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 635: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 999: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1045: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1062: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1514: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1546: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1555: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1564: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1589: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1991: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2020: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2068: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2115: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2160: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2238: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2307: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2441: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2524: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2571: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2618: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2663: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2726: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2833: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2887: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2959: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3006: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 836: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            32235 (14% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  31844 (99%)
  Because of loop head:            352 (1%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         39 (0%)
  Times precision was empty:       9809 (30%)
  Times precision was {false}:     272 (1%)
  Times result was cached:         21591 (67%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      563 (2%)
  Times result was 'false':        215 (1%)
Number of strengthen sat checks:   0
Number of coverage checks:         67127
  BDD entailment checks:           5165
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       65
Number of predicates discovered:          17
Number of abstraction locations:          156
Max number of predicates per location:    6
Avg number of predicates per location:    2
Total predicates per abstraction:         45655
Max number of predicates per abstraction: 6
Avg number of predicates per abstraction: 54.68
Number of irrelevant predicates:          30994 (68%)
Number of preds handled by boolean abs:   957 (2%)
  Total number of models for allsat:      623
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.11

Time for post operator:                  4.682s
  Time for path formula creation:        4.366s
Time for strengthen operator:            0.387s
Time for prec operator:                  6.463s
  Time for abstraction:                  5.658s (Max:     0.036s, Count: 32235)
    Boolean abstraction:                 0.743s
    Solving time:                        0.902s (Max:     0.015s)
    Model enumeration time:              0.049s
    Time for BDD construction:           0.080s (Max:     0.010s)
Time for merge operator:                 0.726s
Time for coverage check:                 0.059s
  Time for BDD entailment checks:        0.046s
Total time for SMT solver (w/o itp):     0.951s

Number of path formula cache hits:   236582 (82%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     3.950s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               281
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        1412 (count: 19913, min: 0, max: 315, avg: 0.07)
Time for BDD node cleanup:                             0.015s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.651s
  Time for transition matches:                         0.309s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.001s
Automaton transfers with branching:                0
Automaton transfer successors:                       238045 (count: 238045, min: 1, max: 1, avg: 1.00) [1 x 238045]

CPA algorithm statistics
------------------------
Number of iterations:            179038
Max size of waitlist:            111
Average size of waitlist:        38
Number of computed successors:   214269
Max successors for one state:    2
Number of times merged:          30981
Number of times stopped:         34725
Number of times breaked:         39

Total time for CPA algorithm:        22.741s (Max:     3.254s)
  Time for choose from waitlist:      0.315s
  Time for precision adjustment:      8.895s
  Time for transfer relation:         9.281s
  Time for merge operator:            1.757s
  Time for stop operator:             0.578s
  Time for adding to reached set:     0.646s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   39
Avg. length of target path (in blocks):                4062 (count: 39, min: 66, max: 126, avg: 104.15)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   2.801s
  Counterexample analysis:                             2.000s (Max:     0.130s, Calls: 39)
    Refinement sat check:                              0.983s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.002s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.076s
  Precision update:                                    0.062s
  ARG update:                                          0.593s

Length of refined path (in blocks):                    3444 (count: 39, min: 63, max: 120, avg: 88.31)
Number of affected states:                             2001 (count: 39, min: 2, max: 119, avg: 51.31)
Length (states) of path with itp 'true':               1404 (count: 39, min: 0, max: 91, avg: 36.00)
Length (states) of path with itp non-trivial itp:      2001 (count: 39, min: 2, max: 119, avg: 51.31)
Length (states) of path with itp 'false':                39 (count: 39, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:          85 (count: 39, min: 0, max: 11, avg: 2.18)
Equal non-trivial interpolants along paths:            1877 (count: 39, min: 0, max: 107, avg: 48.13)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                39
Number of successful refinements:     39
Number of failed refinements:         0
Max. size of reached set before ref.: 18365
Max. size of reached set after ref.:  18107
Avg. size of reached set before ref.: 11274.44
Avg. size of reached set after ref.:  6838.10

Total time for CEGAR algorithm:      26.361s
Time for refinements:                 3.395s
Average time for refinement:          0.087s
Max time for refinement:              0.205s

Code Coverage
-----------------------------
  Function coverage:      0.619
  Visited lines:          843
  Total lines:            1453
  Line coverage:          0.580
  Visited conditions:     334
  Total conditions:       498
  Condition coverage:     0.671

CPAchecker general statistics
-----------------------------
Number of program locations:     1995
Number of CFA edges:             2265
Number of relevant variables:    361
Number of functions:             113
Number of loops:                 4
Size of reached set:             6313
  Number of reached locations:   860 (43%)
    Avg states per location:     7
    Max states per location:     43 (at node N163)
  Number of reached functions:   70 (62%)
  Number of partitions:          6296
    Avg size of partitions:      1
    Max size of partitions:      3 (with key [N809 (before lines 1114-1281), Function test called from node N1274, stack depth 2 [1c8bf54c], stack [main, test]])
  Number of target states:       0
  Size of final wait list        55

Time for analysis setup:          3.946s
  Time for loading CPAs:          0.770s
  Time for loading parser:        0.665s
  Time for CFA construction:      2.321s
    Time for parsing file(s):     0.678s
    Time for AST to CFA:          0.650s
    Time for CFA sanity check:    0.216s
    Time for post-processing:     0.628s
      Time for var class.:        0.326s
Time for Analysis:               26.361s
CPU time for analysis:           26.360s
Total time for CPAchecker:       30.311s
Total CPU time for CPAchecker:   30.300s
Time for statistics:              0.213s

Time for Garbage Collector:       1.423s (in 74 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                115MB (   110 MiB) max;     57MB (    54 MiB) avg;    127MB (   122 MiB) peak
Used non-heap memory:             37MB (    35 MiB) max;     33MB (    32 MiB) avg;     37MB (    36 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        39MB (    37 MiB) max;     35MB (    34 MiB) avg
Total process virtual memory:   8088MB (  7713 MiB) max;   8075MB (  7701 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
