scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/email_spec8_product29_true-unreach-call_true-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_6b28enkn/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 73: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 94: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 131: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 168: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 207: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 246: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 283: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 320: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 357: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 394: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 431: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 473: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 496: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 591: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 611: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 620: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 635: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 999: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1045: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1062: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1514: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1546: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1555: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1564: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1589: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1991: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2020: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2068: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2115: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2160: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2238: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2307: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2441: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2524: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2571: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2618: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2663: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2726: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2833: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2887: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2959: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3006: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 836: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            896975 (15% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  889579 (99%)
  Because of loop head:            7255 (1%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         141 (0%)
  Times precision was empty:       8657 (1%)
  Times precision was {false}:     341 (0%)
  Times result was cached:         860466 (96%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      27511 (3%)
  Times result was 'false':        51531 (6%)
Number of strengthen sat checks:   0
Number of coverage checks:         1903678
  BDD entailment checks:           360008
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       65
Number of predicates discovered:          221
Number of abstraction locations:          177
Max number of predicates per location:    38
Avg number of predicates per location:    19
Total predicates per abstraction:         11780188
Max number of predicates per abstraction: 38
Avg number of predicates per abstraction: 422.96
Number of irrelevant predicates:          4214796 (36%)
Number of preds handled by boolean abs:   336709 (3%)
  Total number of models for allsat:      1622951
  Max number of models for allsat:        7720
  Avg number of models for allsat:        58.99

Time for post operator:                 25.397s
  Time for path formula creation:       23.045s
Time for strengthen operator:            4.980s
Time for prec operator:                707.893s
  Time for abstraction:                698.579s (Max:     1.499s, Count: 896975)
    Boolean abstraction:               275.063s
    Solving time:                       51.196s (Max:     0.016s)
    Model enumeration time:            145.437s
    Time for BDD construction:          73.823s (Max:     0.480s)
Time for merge operator:                 3.619s
Time for coverage check:                 1.150s
  Time for BDD entailment checks:        0.938s
Total time for SMT solver (w/o itp):   196.633s

Number of path formula cache hits:   6919229 (91%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    16.149s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               231775
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                      379318 (count: 666509, min: 0, max: 5730, avg: 0.57)
Time for BDD node cleanup:                             0.180s
Time for BDD garbage collection:                       1.032s (in 206 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  7.475s
  Time for transition matches:                         4.191s
  Time for transition assertions:                      0.002s
  Time for transition actions:                         0.001s
Automaton transfers with branching:                0
Automaton transfer successors:                      6144930 (count: 6144930, min: 1, max: 1, avg: 1.00) [1 x 6144930]

CPA algorithm statistics
------------------------
Number of iterations:            4655099
Max size of waitlist:            53
Average size of waitlist:        21
Number of computed successors:   5551111
Max successors for one state:    2
Number of times merged:          771835
Number of times stopped:         843036
Number of times breaked:         141

Total time for CPA algorithm:       861.353s (Max:    65.113s)
  Time for choose from waitlist:      1.643s
  Time for precision adjustment:    741.717s
  Time for transfer relation:        79.519s
  Time for merge operator:           12.065s
  Time for stop operator:             6.606s
  Time for adding to reached set:     7.294s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   141
Avg. length of target path (in blocks):               20285 (count: 141, min: 66, max: 188, avg: 143.87)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  31.755s
  Counterexample analysis:                            21.892s (Max:     0.540s, Calls: 141)
    Refinement sat check:                              5.727s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.010s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.306s
  Precision update:                                    0.210s
  ARG update:                                          9.117s

Length of refined path (in blocks):                   14761 (count: 141, min: 39, max: 171, avg: 104.69)
Number of affected states:                            13833 (count: 141, min: 1, max: 163, avg: 98.11)
Length (states) of path with itp 'true':                787 (count: 141, min: 0, max: 78, avg: 5.58)
Length (states) of path with itp non-trivial itp:     13833 (count: 141, min: 1, max: 163, avg: 98.11)
Length (states) of path with itp 'false':               141 (count: 141, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:        1862 (count: 141, min: 0, max: 61, avg: 13.21)
Equal non-trivial interpolants along paths:           11830 (count: 141, min: 0, max: 158, avg: 83.90)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                141
Number of successful refinements:     141
Number of failed refinements:         0
Max. size of reached set before ref.: 127249
Max. size of reached set after ref.:  4861
Avg. size of reached set before ref.: 33219.09
Avg. size of reached set after ref.:  242.21

Total time for CEGAR algorithm:     895.816s
Time for refinements:                34.423s
Average time for refinement:          0.244s
Max time for refinement:              0.874s

Code Coverage
-----------------------------
  Function coverage:      0.619
  Visited lines:          814
  Total lines:            1453
  Line coverage:          0.560
  Visited conditions:     318
  Total conditions:       498
  Condition coverage:     0.639

CPAchecker general statistics
-----------------------------
Number of program locations:     1995
Number of CFA edges:             2265
Number of relevant variables:    361
Number of functions:             113
Number of loops:                 4
Size of reached set:             6803
  Number of reached locations:   847 (42%)
    Avg states per location:     8
    Max states per location:     56 (at node N1155)
  Number of reached functions:   70 (62%)
  Number of partitions:          6745
    Avg size of partitions:      1
    Max size of partitions:      20 (with key [N809 (before lines 1114-1281), Function test called from node N1274, stack depth 2 [76808626], stack [main, test]])
  Number of target states:       0
  Size of final wait list        18

Time for analysis setup:          4.424s
  Time for loading CPAs:          0.827s
  Time for loading parser:        0.829s
  Time for CFA construction:      2.587s
    Time for parsing file(s):     0.844s
    Time for AST to CFA:          0.698s
    Time for CFA sanity check:    0.203s
    Time for post-processing:     0.625s
      Time for var class.:        0.349s
Time for Analysis:              895.816s
CPU time for analysis:          895.670s
Total time for CPAchecker:      900.248s
Total CPU time for CPAchecker:  900.090s
Time for statistics:              0.217s

Time for Garbage Collector:      62.563s (in 1376 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                684MB (   652 MiB) max;    368MB (   351 MiB) avg;    706MB (   674 MiB) peak
Used non-heap memory:             37MB (    35 MiB) max;     36MB (    34 MiB) avg;     37MB (    36 MiB) peak
Allocated heap memory:           747MB (   712 MiB) max;    534MB (   509 MiB) avg
Allocated non-heap memory:        39MB (    37 MiB) max;     39MB (    37 MiB) avg
Total process virtual memory:   9315MB (  8884 MiB) max;   8546MB (  8150 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
