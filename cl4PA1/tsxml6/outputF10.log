scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/email_spec8_product29_true-unreach-call_true-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_hxotdpb8/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 73: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 94: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 131: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 168: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 207: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 246: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 283: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 320: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 357: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 394: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 431: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 473: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 496: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 591: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 611: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 620: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 635: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 999: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1045: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1062: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1514: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1546: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1555: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1564: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1589: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1991: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2020: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2068: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2115: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2160: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2238: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2307: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2441: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2524: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2571: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2618: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2663: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2726: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2833: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2887: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2959: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3006: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 836: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            1003049 (14% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  996738 (99%)
  Because of loop head:            6080 (1%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         231 (0%)
  Times precision was empty:       30511 (3%)
  Times precision was {false}:     360 (0%)
  Times result was cached:         942217 (94%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      29961 (3%)
  Times result was 'false':        49898 (5%)
Number of strengthen sat checks:   0
Number of coverage checks:         2283164
  BDD entailment checks:           398862
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       65
Number of predicates discovered:          186
Number of abstraction locations:          177
Max number of predicates per location:    33
Avg number of predicates per location:    15
Total predicates per abstraction:         10729057
Max number of predicates per abstraction: 33
Avg number of predicates per abstraction: 353.85
Number of irrelevant predicates:          4277540 (40%)
Number of preds handled by boolean abs:   306955 (3%)
  Total number of models for allsat:      1402892
  Max number of models for allsat:        7392
  Avg number of models for allsat:        46.82

Time for post operator:                 30.751s
  Time for path formula creation:       27.820s
Time for strengthen operator:            5.857s
Time for prec operator:                681.192s
  Time for abstraction:                669.559s (Max:     2.199s, Count: 1003049)
    Boolean abstraction:               272.176s
    Solving time:                       59.458s (Max:     0.032s)
    Model enumeration time:            146.041s
    Time for BDD construction:          62.043s (Max:     0.429s)
Time for merge operator:                 4.653s
Time for coverage check:                 1.091s
  Time for BDD entailment checks:        0.842s
Total time for SMT solver (w/o itp):   205.499s

Number of path formula cache hits:   8181434 (92%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    20.920s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               73228
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                      270067 (count: 696531, min: 0, max: 5692, avg: 0.39)
Time for BDD node cleanup:                             0.168s
Time for BDD garbage collection:                       0.741s (in 179 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  9.411s
  Time for transition matches:                         5.035s
  Time for transition assertions:                      0.003s
  Time for transition actions:                         0.004s
Automaton transfers with branching:                0
Automaton transfer successors:                      7220815 (count: 7220815, min: 1, max: 1, avg: 1.00) [1 x 7220815]

CPA algorithm statistics
------------------------
Number of iterations:            5435463
Max size of waitlist:            1028
Average size of waitlist:        236
Number of computed successors:   6506337
Max successors for one state:    2
Number of times merged:          942151
Number of times stopped:         1005022
Number of times breaked:         231

Total time for CPA algorithm:       857.038s (Max:   114.045s)
  Time for choose from waitlist:      2.210s
  Time for precision adjustment:    717.338s
  Time for transfer relation:        91.400s
  Time for merge operator:           14.129s
  Time for stop operator:             7.550s
  Time for adding to reached set:     7.738s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   231
Avg. length of target path (in blocks):               30900 (count: 231, min: 66, max: 194, avg: 133.77)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  31.590s
  Counterexample analysis:                            18.171s (Max:     0.476s, Calls: 231)
    Refinement sat check:                              6.469s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.032s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.190s
  Precision update:                                    0.251s
  ARG update:                                         12.691s

Length of refined path (in blocks):                   20655 (count: 231, min: 39, max: 167, avg: 89.42)
Number of affected states:                            11349 (count: 231, min: 1, max: 166, avg: 49.13)
Length (states) of path with itp 'true':               9075 (count: 231, min: 0, max: 101, avg: 39.29)
Length (states) of path with itp non-trivial itp:     11349 (count: 231, min: 1, max: 166, avg: 49.13)
Length (states) of path with itp 'false':               231 (count: 231, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:        1288 (count: 231, min: 0, max: 58, avg: 5.58)
Equal non-trivial interpolants along paths:            9830 (count: 231, min: 0, max: 164, avg: 42.55)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                231
Number of successful refinements:     231
Number of failed refinements:         0
Max. size of reached set before ref.: 340433
Max. size of reached set after ref.:  87114
Avg. size of reached set before ref.: 33414.64
Avg. size of reached set after ref.:  10051.96

Total time for CEGAR algorithm:     896.169s
Time for refinements:                37.382s
Average time for refinement:          0.161s
Max time for refinement:              1.620s

Code Coverage
-----------------------------
  Function coverage:      0.522
  Visited lines:          746
  Total lines:            1453
  Line coverage:          0.513
  Visited conditions:     300
  Total conditions:       498
  Condition coverage:     0.602

CPAchecker general statistics
-----------------------------
Number of program locations:     1995
Number of CFA edges:             2265
Number of relevant variables:    361
Number of functions:             113
Number of loops:                 4
Size of reached set:             54638
  Number of reached locations:   750 (38%)
    Avg states per location:     72
    Max states per location:     515 (at node N1914)
  Number of reached functions:   59 (52%)
  Number of partitions:          54257
    Avg size of partitions:      1
    Max size of partitions:      62 (with key [N809 (before lines 1114-1281), Function test called from node N1274, stack depth 2 [6798b649], stack [main, test]])
  Number of target states:       0
  Size of final wait list        264

Time for analysis setup:          4.112s
  Time for loading CPAs:          0.860s
  Time for loading parser:        0.733s
  Time for CFA construction:      2.273s
    Time for parsing file(s):     0.689s
    Time for AST to CFA:          0.669s
    Time for CFA sanity check:    0.201s
    Time for post-processing:     0.557s
      Time for var class.:        0.296s
Time for Analysis:              896.169s
CPU time for analysis:          896.090s
Total time for CPAchecker:      900.285s
Total CPU time for CPAchecker:  900.200s
Time for statistics:              0.813s

Time for Garbage Collector:      72.832s (in 1226 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:               1061MB (  1012 MiB) max;    446MB (   426 MiB) avg;   1082MB (  1031 MiB) peak
Used non-heap memory:             37MB (    35 MiB) max;     36MB (    34 MiB) avg;     38MB (    36 MiB) peak
Allocated heap memory:          1090MB (  1039 MiB) max;    675MB (   643 MiB) avg
Allocated non-heap memory:        39MB (    37 MiB) max;     39MB (    37 MiB) avg
Total process virtual memory:   9308MB (  8877 MiB) max;   8585MB (  8187 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
