scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/email_spec8_product29_true-unreach-call_true-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_u0lgkcyj/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 73: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 94: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 131: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 168: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 207: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 246: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 283: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 320: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 357: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 394: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 431: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 473: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 496: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 591: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 611: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 620: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 635: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 999: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1045: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1062: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1514: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1546: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1555: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1564: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1589: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1991: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2020: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2068: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2115: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2160: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2238: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2307: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2441: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2524: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2571: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2618: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2663: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2726: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2833: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2887: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2959: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3006: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 836: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            545656 (17% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  543253 (100%)
  Because of loop head:            2252 (0%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         151 (0%)
  Times precision was empty:       3367 (1%)
  Times precision was {false}:     324 (0%)
  Times result was cached:         520278 (95%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      21687 (4%)
  Times result was 'false':        39840 (7%)
Number of strengthen sat checks:   0
Number of coverage checks:         829983
  BDD entailment checks:           118919
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       65
Number of predicates discovered:          225
Number of abstraction locations:          177
Max number of predicates per location:    48
Avg number of predicates per location:    21
Total predicates per abstraction:         7101236
Max number of predicates per abstraction: 48
Avg number of predicates per abstraction: 322.62
Number of irrelevant predicates:          2562082 (36%)
Number of preds handled by boolean abs:   294951 (4%)
  Total number of models for allsat:      2291876
  Max number of models for allsat:        119808
  Avg number of models for allsat:        105.68

Time for post operator:                 31.324s
  Time for path formula creation:       29.899s
Time for strengthen operator:            2.818s
Time for prec operator:                752.483s
  Time for abstraction:                746.645s (Max:    45.843s, Count: 545656)
    Boolean abstraction:               488.768s
    Solving time:                       40.386s (Max:     0.016s)
    Model enumeration time:            319.057s
    Time for BDD construction:         124.964s (Max:     7.898s)
Time for merge operator:                 4.098s
Time for coverage check:                 0.406s
  Time for BDD entailment checks:        0.313s
Total time for SMT solver (w/o itp):   359.443s

Number of path formula cache hits:   2856383 (73%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    25.613s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               260288
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                      353198 (count: 380125, min: 0, max: 5200, avg: 0.93)
Time for BDD node cleanup:                             0.127s
Time for BDD garbage collection:                       1.794s (in 409 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  4.703s
  Time for transition matches:                         2.636s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.002s
Automaton transfers with branching:                0
Automaton transfer successors:                      3301729 (count: 3301729, min: 1, max: 1, avg: 1.00) [1 x 3301729]

CPA algorithm statistics
------------------------
Number of iterations:            2479347
Max size of waitlist:            78
Average size of waitlist:        37
Number of computed successors:   2919201
Max successors for one state:    2
Number of times merged:          355532
Number of times stopped:         395253
Number of times breaked:         151

Total time for CPA algorithm:       860.488s (Max:   127.104s)
  Time for choose from waitlist:      1.282s
  Time for precision adjustment:    769.859s
  Time for transfer relation:        64.845s
  Time for merge operator:            8.407s
  Time for stop operator:             3.744s
  Time for adding to reached set:     5.494s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   151
Avg. length of target path (in blocks):               24402 (count: 151, min: 70, max: 241, avg: 161.60)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  33.826s
  Counterexample analysis:                            28.502s (Max:     0.758s, Calls: 151)
    Refinement sat check:                              7.387s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.014s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.465s
  Precision update:                                    0.316s
  ARG update:                                          4.316s

Length of refined path (in blocks):                   16568 (count: 151, min: 39, max: 231, avg: 109.72)
Number of affected states:                            14602 (count: 151, min: 1, max: 223, avg: 96.70)
Length (states) of path with itp 'true':               1815 (count: 151, min: 0, max: 89, avg: 12.02)
Length (states) of path with itp non-trivial itp:     14602 (count: 151, min: 1, max: 223, avg: 96.70)
Length (states) of path with itp 'false':               151 (count: 151, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:        1852 (count: 151, min: 0, max: 64, avg: 12.26)
Equal non-trivial interpolants along paths:           12599 (count: 151, min: 0, max: 186, avg: 83.44)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                151
Number of successful refinements:     151
Number of failed refinements:         0
Max. size of reached set before ref.: 125261
Max. size of reached set after ref.:  15533
Avg. size of reached set before ref.: 16314.97
Avg. size of reached set after ref.:  445.62

Total time for CEGAR algorithm:     896.335s
Time for refinements:                35.802s
Average time for refinement:          0.237s
Max time for refinement:              0.968s

Code Coverage
-----------------------------
  Function coverage:      0.637
  Visited lines:          868
  Total lines:            1453
  Line coverage:          0.597
  Visited conditions:     344
  Total conditions:       498
  Condition coverage:     0.691

CPAchecker general statistics
-----------------------------
Number of program locations:     1995
Number of CFA edges:             2265
Number of relevant variables:    361
Number of functions:             113
Number of loops:                 4
Size of reached set:             87836
  Number of reached locations:   905 (45%)
    Avg states per location:     97
    Max states per location:     1765 (at node N1155)
  Number of reached functions:   72 (64%)
  Number of partitions:          86425
    Avg size of partitions:      1
    Max size of partitions:      27 (with key [N809 (before lines 1114-1281), Function test called from node N1274, stack depth 2 [7ed9a5fa], stack [main, test]])
  Number of target states:       0
  Size of final wait list        47

Time for analysis setup:          3.937s
  Time for loading CPAs:          0.799s
  Time for loading parser:        0.653s
  Time for CFA construction:      2.320s
    Time for parsing file(s):     0.662s
    Time for AST to CFA:          0.698s
    Time for CFA sanity check:    0.223s
    Time for post-processing:     0.598s
      Time for var class.:        0.329s
Time for Analysis:              896.336s
CPU time for analysis:          896.220s
Total time for CPAchecker:      900.277s
Total CPU time for CPAchecker:  900.150s
Time for statistics:              1.060s

Time for Garbage Collector:      35.255s (in 845 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                885MB (   844 MiB) max;    411MB (   392 MiB) avg;    910MB (   868 MiB) peak
Used non-heap memory:             38MB (    36 MiB) max;     36MB (    34 MiB) avg;     38MB (    36 MiB) peak
Allocated heap memory:          1072MB (  1023 MiB) max;    608MB (   579 MiB) avg
Allocated non-heap memory:        39MB (    38 MiB) max;     39MB (    37 MiB) avg
Total process virtual memory:   9242MB (  8814 MiB) max;   8597MB (  8199 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
