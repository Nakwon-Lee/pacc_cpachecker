scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/email_spec8_product29_true-unreach-call_true-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_kiavjgk1/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 73: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 94: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 131: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 168: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 207: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 246: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 283: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 320: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 357: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 394: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 431: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 473: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 496: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 591: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 611: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 620: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 635: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 999: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1045: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1062: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1514: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1546: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1555: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1564: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1589: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1991: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2020: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2068: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2115: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2160: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2238: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2307: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2441: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2524: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2571: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2618: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2663: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2726: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2833: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2887: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2959: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3006: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 836: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            28363 (13% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  27816 (98%)
  Because of loop head:            510 (2%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         37 (0%)
  Times precision was empty:       3164 (11%)
  Times precision was {false}:     282 (1%)
  Times result was cached:         24267 (86%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      650 (2%)
  Times result was 'false':        489 (2%)
Number of strengthen sat checks:   0
Number of coverage checks:         59114
  BDD entailment checks:           2280
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       65
Number of predicates discovered:          17
Number of abstraction locations:          174
Max number of predicates per location:    6
Avg number of predicates per location:    2
Total predicates per abstraction:         35760
Max number of predicates per abstraction: 6
Avg number of predicates per abstraction: 38.37
Number of irrelevant predicates:          18015 (50%)
Number of preds handled by boolean abs:   1084 (3%)
  Total number of models for allsat:      667
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.03

Time for post operator:                  4.297s
  Time for path formula creation:        4.038s
Time for strengthen operator:            0.392s
Time for prec operator:                  7.312s
  Time for abstraction:                  6.561s (Max:     0.031s, Count: 28363)
    Boolean abstraction:                 0.933s
    Solving time:                        1.077s (Max:     0.015s)
    Model enumeration time:              0.081s
    Time for BDD construction:           0.062s (Max:     0.008s)
Time for merge operator:                 0.744s
Time for coverage check:                 0.071s
  Time for BDD entailment checks:        0.042s
Total time for SMT solver (w/o itp):     1.158s

Number of path formula cache hits:   212571 (81%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     3.658s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               276
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        1452 (count: 10994, min: 0, max: 370, avg: 0.13)
Time for BDD node cleanup:                             0.013s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.744s
  Time for transition matches:                         0.329s
  Time for transition assertions:                      0.001s
  Time for transition actions:                         0.000s
Automaton transfers with branching:                0
Automaton transfer successors:                       218352 (count: 218352, min: 1, max: 1, avg: 1.00) [1 x 218352]

CPA algorithm statistics
------------------------
Number of iterations:            159865
Max size of waitlist:            59
Average size of waitlist:        16
Number of computed successors:   191451
Max successors for one state:    2
Number of times merged:          28417
Number of times stopped:         30060
Number of times breaked:         37

Total time for CPA algorithm:        22.402s (Max:     1.717s)
  Time for choose from waitlist:      0.287s
  Time for precision adjustment:      9.156s
  Time for transfer relation:         8.785s
  Time for merge operator:            1.527s
  Time for stop operator:             0.566s
  Time for adding to reached set:     0.582s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   37
Avg. length of target path (in blocks):                3990 (count: 37, min: 66, max: 136, avg: 107.84)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   2.955s
  Counterexample analysis:                             2.117s (Max:     0.100s, Calls: 37)
    Refinement sat check:                              1.063s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.010s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.113s
  Precision update:                                    0.070s
  ARG update:                                          0.549s

Length of refined path (in blocks):                    3319 (count: 37, min: 63, max: 113, avg: 89.70)
Number of affected states:                             3127 (count: 37, min: 1, max: 112, avg: 84.51)
Length (states) of path with itp 'true':                155 (count: 37, min: 0, max: 78, avg: 4.19)
Length (states) of path with itp non-trivial itp:      3127 (count: 37, min: 1, max: 112, avg: 84.51)
Length (states) of path with itp 'false':                37 (count: 37, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:          32 (count: 37, min: 0, max: 11, avg: 0.86)
Equal non-trivial interpolants along paths:            3058 (count: 37, min: 0, max: 106, avg: 82.65)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                37
Number of successful refinements:     37
Number of failed refinements:         0
Max. size of reached set before ref.: 6660
Max. size of reached set after ref.:  4979
Avg. size of reached set before ref.: 4519.62
Avg. size of reached set after ref.:  270.76

Total time for CEGAR algorithm:      25.739s
Time for refinements:                 3.321s
Average time for refinement:          0.089s
Max time for refinement:              0.135s

Code Coverage
-----------------------------
  Function coverage:      0.504
  Visited lines:          722
  Total lines:            1453
  Line coverage:          0.497
  Visited conditions:     296
  Total conditions:       498
  Condition coverage:     0.594

CPAchecker general statistics
-----------------------------
Number of program locations:     1995
Number of CFA edges:             2265
Number of relevant variables:    361
Number of functions:             113
Number of loops:                 4
Size of reached set:             3695
  Number of reached locations:   732 (37%)
    Avg states per location:     5
    Max states per location:     23 (at node N71)
  Number of reached functions:   57 (50%)
  Number of partitions:          3692
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N809 (before lines 1114-1281), Function test called from node N1274, stack depth 2 [1faf9662], stack [main, test]])
  Number of target states:       0
  Size of final wait list        16

Time for analysis setup:          4.506s
  Time for loading CPAs:          0.975s
  Time for loading parser:        0.730s
  Time for CFA construction:      2.589s
    Time for parsing file(s):     0.754s
    Time for AST to CFA:          0.745s
    Time for CFA sanity check:    0.229s
    Time for post-processing:     0.679s
      Time for var class.:        0.385s
Time for Analysis:               25.739s
CPU time for analysis:           25.740s
Total time for CPAchecker:       30.250s
Total CPU time for CPAchecker:   30.240s
Time for statistics:              0.150s

Time for Garbage Collector:       0.882s (in 67 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 81MB (    77 MiB) max;     48MB (    46 MiB) avg;     84MB (    80 MiB) peak
Used non-heap memory:             37MB (    35 MiB) max;     34MB (    32 MiB) avg;     38MB (    36 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        39MB (    37 MiB) max;     36MB (    34 MiB) avg
Total process virtual memory:   8087MB (  7712 MiB) max;   8073MB (  7699 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
