scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/email_spec8_product29_true-unreach-call_true-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_lqgl6k_3/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 73: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 94: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 131: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 168: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 207: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 246: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 283: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 320: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 357: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 394: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 431: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 473: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 496: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 591: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 611: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 620: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 635: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 999: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1045: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1062: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1514: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1546: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1555: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1564: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1589: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1991: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2020: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2068: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2115: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2160: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2238: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2307: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2441: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2524: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2571: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2618: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2663: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2726: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2833: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2887: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2959: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3006: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 836: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            892185 (15% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  885068 (99%)
  Because of loop head:            6978 (1%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         139 (0%)
  Times precision was empty:       10260 (1%)
  Times precision was {false}:     346 (0%)
  Times result was cached:         852631 (96%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      28948 (3%)
  Times result was 'false':        51479 (6%)
Number of strengthen sat checks:   0
Number of coverage checks:         1876657
  BDD entailment checks:           355681
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       65
Number of predicates discovered:          221
Number of abstraction locations:          177
Max number of predicates per location:    38
Avg number of predicates per location:    19
Total predicates per abstraction:         11814530
Max number of predicates per abstraction: 38
Avg number of predicates per abstraction: 403.31
Number of irrelevant predicates:          4345677 (37%)
Number of preds handled by boolean abs:   352419 (3%)
  Total number of models for allsat:      1680287
  Max number of models for allsat:        7720
  Avg number of models for allsat:        58.05

Time for post operator:                 27.486s
  Time for path formula creation:       24.708s
Time for strengthen operator:            4.805s
Time for prec operator:                707.193s
  Time for abstraction:                697.308s (Max:     1.320s, Count: 892185)
    Boolean abstraction:               288.626s
    Solving time:                       55.590s (Max:     0.019s)
    Model enumeration time:            154.636s
    Time for BDD construction:          73.449s (Max:     0.382s)
Time for merge operator:                 3.751s
Time for coverage check:                 1.134s
  Time for BDD entailment checks:        0.908s
Total time for SMT solver (w/o itp):   210.226s

Number of path formula cache hits:   6855737 (91%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    17.718s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               172381
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                      378453 (count: 670655, min: 0, max: 5612, avg: 0.56)
Time for BDD node cleanup:                             0.192s
Time for BDD garbage collection:                       1.096s (in 216 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  8.223s
  Time for transition matches:                         4.333s
  Time for transition assertions:                      0.001s
  Time for transition actions:                         0.001s
Automaton transfers with branching:                0
Automaton transfer successors:                      6086223 (count: 6086223, min: 1, max: 1, avg: 1.00) [1 x 6086223]

CPA algorithm statistics
------------------------
Number of iterations:            4607967
Max size of waitlist:            59
Average size of waitlist:        24
Number of computed successors:   5492875
Max successors for one state:    2
Number of times merged:          760488
Number of times stopped:         831570
Number of times breaked:         139

Total time for CPA algorithm:       860.948s (Max:    64.445s)
  Time for choose from waitlist:      1.809s
  Time for precision adjustment:    740.251s
  Time for transfer relation:        80.588s
  Time for merge operator:           12.027s
  Time for stop operator:             6.841s
  Time for adding to reached set:     7.483s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   139
Avg. length of target path (in blocks):               19982 (count: 139, min: 66, max: 209, avg: 143.76)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  32.509s
  Counterexample analysis:                            22.385s (Max:     0.710s, Calls: 139)
    Refinement sat check:                              5.773s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.012s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.293s
  Precision update:                                    0.325s
  ARG update:                                          9.251s

Length of refined path (in blocks):                   14683 (count: 139, min: 39, max: 182, avg: 105.63)
Number of affected states:                            13741 (count: 139, min: 1, max: 181, avg: 98.86)
Length (states) of path with itp 'true':                803 (count: 139, min: 0, max: 86, avg: 5.78)
Length (states) of path with itp non-trivial itp:     13741 (count: 139, min: 1, max: 181, avg: 98.86)
Length (states) of path with itp 'false':               139 (count: 139, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:        1838 (count: 139, min: 0, max: 61, avg: 13.22)
Equal non-trivial interpolants along paths:           11764 (count: 139, min: 0, max: 179, avg: 84.63)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                139
Number of successful refinements:     139
Number of failed refinements:         0
Max. size of reached set before ref.: 126989
Max. size of reached set after ref.:  5766
Avg. size of reached set before ref.: 32766.96
Avg. size of reached set after ref.:  267.04

Total time for CEGAR algorithm:     896.083s
Time for refinements:                35.090s
Average time for refinement:          0.252s
Max time for refinement:              0.991s

Code Coverage
-----------------------------
  Function coverage:      0.637
  Visited lines:          868
  Total lines:            1453
  Line coverage:          0.597
  Visited conditions:     344
  Total conditions:       498
  Condition coverage:     0.691

CPAchecker general statistics
-----------------------------
Number of program locations:     1995
Number of CFA edges:             2265
Number of relevant variables:    361
Number of functions:             113
Number of loops:                 4
Size of reached set:             92339
  Number of reached locations:   905 (45%)
    Avg states per location:     102
    Max states per location:     1165 (at node N1155)
  Number of reached functions:   72 (64%)
  Number of partitions:          91317
    Avg size of partitions:      1
    Max size of partitions:      62 (with key [N809 (before lines 1114-1281), Function test called from node N1274, stack depth 2 [787d7e85], stack [main, test]])
  Number of target states:       0
  Size of final wait list        34

Time for analysis setup:          4.161s
  Time for loading CPAs:          0.836s
  Time for loading parser:        0.684s
  Time for CFA construction:      2.419s
    Time for parsing file(s):     0.694s
    Time for AST to CFA:          0.746s
    Time for CFA sanity check:    0.217s
    Time for post-processing:     0.590s
      Time for var class.:        0.319s
Time for Analysis:              896.083s
CPU time for analysis:          895.920s
Total time for CPAchecker:      900.248s
Total CPU time for CPAchecker:  900.090s
Time for statistics:              1.037s

Time for Garbage Collector:      61.627s (in 1391 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                716MB (   682 MiB) max;    357MB (   340 MiB) avg;    728MB (   694 MiB) peak
Used non-heap memory:             37MB (    35 MiB) max;     36MB (    34 MiB) avg;     37MB (    36 MiB) peak
Allocated heap memory:           731MB (   697 MiB) max;    515MB (   491 MiB) avg
Allocated non-heap memory:        40MB (    38 MiB) max;     40MB (    38 MiB) avg
Total process virtual memory:   9444MB (  9007 MiB) max;   8576MB (  8178 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
