scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/email_spec4_product13_true-unreach-call_true-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_3kjhm2zs/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 397: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 443: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 461: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 476: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 499: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 543: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 572: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 620: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 667: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 712: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 790: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 859: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 993: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1076: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1123: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1170: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1215: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1278: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1385: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1439: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1511: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1558: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2117: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2138: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2175: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2212: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2251: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2290: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2327: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2364: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2401: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2438: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2475: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2591: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2623: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2632: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2641: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2666: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2818: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2827: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2842: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 234: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            10878 (13% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  10626 (98%)
  Because of loop head:            216 (2%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         36 (0%)
  Times precision was empty:       1445 (13%)
  Times precision was {false}:     132 (1%)
  Times result was cached:         8660 (80%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      641 (6%)
  Times result was 'false':        223 (2%)
Number of strengthen sat checks:   0
Number of coverage checks:         22225
  BDD entailment checks:           953
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       51
Number of predicates discovered:          24
Number of abstraction locations:          131
Max number of predicates per location:    7
Avg number of predicates per location:    2
Total predicates per abstraction:         26212
Max number of predicates per abstraction: 7
Avg number of predicates per abstraction: 33.91
Number of irrelevant predicates:          8072 (31%)
Number of preds handled by boolean abs:   1346 (5%)
  Total number of models for allsat:      926
  Max number of models for allsat:        6
  Avg number of models for allsat:        1.44

Time for post operator:                  2.274s
  Time for path formula creation:        2.119s
Time for strengthen operator:            0.256s
Time for prec operator:                  6.458s
  Time for abstraction:                  6.080s (Max:     0.025s, Count: 10878)
    Boolean abstraction:                 1.307s
    Solving time:                        1.155s (Max:     0.015s)
    Model enumeration time:              0.138s
    Time for BDD construction:           0.094s (Max:     0.013s)
Time for merge operator:                 0.345s
Time for coverage check:                 0.066s
  Time for BDD entailment checks:        0.045s
Total time for SMT solver (w/o itp):     1.293s

Number of path formula cache hits:   82479 (84%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     1.900s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               423
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        1800 (count: 7128, min: 0, max: 488, avg: 0.25)
Time for BDD node cleanup:                             0.005s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.433s
Automaton transfers with branching:                0
Automaton transfer successors:                        81415 (count: 81415, min: 1, max: 1, avg: 1.00) [1 x 81415]

CPA algorithm statistics
------------------------
Number of iterations:            61150
Max size of waitlist:            24
Average size of waitlist:        11
Number of computed successors:   73291
Max successors for one state:    2
Number of times merged:          10636
Number of times stopped:         11439
Number of times breaked:         36

Total time for CPA algorithm:        14.876s (Max:     1.004s)
  Time for choose from waitlist:      0.153s
  Time for precision adjustment:      7.510s
  Time for transfer relation:         4.863s
  Time for merge operator:            0.851s
  Time for stop operator:             0.390s
  Time for adding to reached set:     0.344s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   36
Avg. length of target path (in blocks):                3253 (count: 36, min: 60, max: 124, avg: 90.36)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   3.120s
  Counterexample analysis:                             2.485s (Max:     0.094s, Calls: 36)
    Refinement sat check:                              1.081s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.009s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.137s
  Precision update:                                    0.074s
  ARG update:                                          0.288s

Length of refined path (in blocks):                    2789 (count: 36, min: 57, max: 99, avg: 77.47)
Number of affected states:                             2555 (count: 36, min: 1, max: 98, avg: 70.97)
Length (states) of path with itp 'true':                198 (count: 36, min: 0, max: 66, avg: 5.50)
Length (states) of path with itp non-trivial itp:      2555 (count: 36, min: 1, max: 98, avg: 70.97)
Length (states) of path with itp 'false':                36 (count: 36, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:         204 (count: 36, min: 0, max: 11, avg: 5.67)
Equal non-trivial interpolants along paths:            2315 (count: 36, min: 0, max: 96, avg: 64.31)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                36
Number of successful refinements:     36
Number of failed refinements:         0
Max. size of reached set before ref.: 2429
Max. size of reached set after ref.:  904
Avg. size of reached set before ref.: 1731.50
Avg. size of reached set after ref.:  58.06

Total time for CEGAR algorithm:      18.258s
Time for refinements:                 3.374s
Average time for refinement:          0.093s
Max time for refinement:              0.143s

Code Coverage
-----------------------------
  Function coverage:      0.533
  Visited lines:          660
  Total lines:            1363
  Line coverage:          0.484
  Visited conditions:     232
  Total conditions:       486
  Condition coverage:     0.477

CPAchecker general statistics
-----------------------------
Number of program locations:     1871
Number of CFA edges:             2110
Number of relevant variables:    315
Number of functions:             105
Number of loops:                 4
Size of reached set:             1386
  Number of reached locations:   642 (34%)
    Avg states per location:     2
    Max states per location:     10 (at node N912)
  Number of reached functions:   56 (53%)
  Number of partitions:          1385
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N1900 (before line 2543), Function outgoing called from node N1936, stack depth 5 [3c6aae8], stack [main, test, bobToRjh, sendEmail, outgoing]])
  Number of target states:       0

Time for analysis setup:          4.070s
  Time for loading CPAs:          0.780s
  Time for loading parser:        0.812s
  Time for CFA construction:      2.267s
    Time for parsing file(s):     0.718s
    Time for AST to CFA:          0.671s
    Time for CFA sanity check:    0.199s
    Time for post-processing:     0.560s
      Time for var class.:        0.316s
Time for Analysis:               18.258s
CPU time for analysis:           18.250s
Time for analyzing result:        0.010s
Total time for CPAchecker:       22.334s
Total CPU time for CPAchecker:   22.330s
Time for statistics:              0.145s

Time for Garbage Collector:       0.380s (in 32 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 65MB (    62 MiB) max;     42MB (    40 MiB) avg;     69MB (    66 MiB) peak
Used non-heap memory:             37MB (    35 MiB) max;     33MB (    31 MiB) avg;     37MB (    36 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        39MB (    37 MiB) max;     34MB (    33 MiB) avg
Total process virtual memory:   8086MB (  7712 MiB) max;   8069MB (  7695 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
