scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/email_spec4_product13_true-unreach-call_true-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_tb5c8quq/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 397: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 443: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 461: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 476: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 499: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 543: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 572: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 620: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 667: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 712: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 790: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 859: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 993: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1076: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1123: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1170: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1215: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1278: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1385: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1439: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1511: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1558: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2117: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2138: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2175: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2212: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2251: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2290: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2327: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2364: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2401: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2438: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2475: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2591: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2623: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2632: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2641: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2666: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2818: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2827: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2842: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 234: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            13684 (12% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  13149 (96%)
  Because of loop head:            498 (4%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         37 (0%)
  Times precision was empty:       1825 (13%)
  Times precision was {false}:     164 (1%)
  Times result was cached:         10912 (80%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      783 (6%)
  Times result was 'false':        165 (1%)
Number of strengthen sat checks:   0
Number of coverage checks:         35717
  BDD entailment checks:           2045
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       51
Number of predicates discovered:          24
Number of abstraction locations:          131
Max number of predicates per location:    7
Avg number of predicates per location:    2
Total predicates per abstraction:         27239
Max number of predicates per abstraction: 7
Avg number of predicates per abstraction: 28.76
Number of irrelevant predicates:          7858 (29%)
Number of preds handled by boolean abs:   1602 (6%)
  Total number of models for allsat:      1212
  Max number of models for allsat:        6
  Avg number of models for allsat:        1.55

Time for post operator:                  2.846s
  Time for path formula creation:        2.695s
Time for strengthen operator:            0.243s
Time for prec operator:                  7.104s
  Time for abstraction:                  6.620s (Max:     0.027s, Count: 13684)
    Boolean abstraction:                 1.688s
    Solving time:                        1.472s (Max:     0.016s)
    Model enumeration time:              0.130s
    Time for BDD construction:           0.191s (Max:     0.013s)
Time for merge operator:                 0.386s
Time for coverage check:                 0.041s
  Time for BDD entailment checks:        0.030s
Total time for SMT solver (w/o itp):     1.602s

Number of path formula cache hits:   117223 (84%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     2.426s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               468
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        2187 (count: 9656, min: 0, max: 533, avg: 0.23)
Time for BDD node cleanup:                             0.014s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.616s
  Time for transition matches:                         0.236s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.000s
Automaton transfers with branching:                0
Automaton transfer successors:                       115275 (count: 115275, min: 1, max: 1, avg: 1.00) [1 x 115275]

CPA algorithm statistics
------------------------
Number of iterations:            87203
Max size of waitlist:            22
Average size of waitlist:        10
Number of computed successors:   105570
Max successors for one state:    2
Number of times merged:          16836
Number of times stopped:         18031
Number of times breaked:         37

Total time for CPA algorithm:        17.605s (Max:     1.311s)
  Time for choose from waitlist:      0.144s
  Time for precision adjustment:      8.401s
  Time for transfer relation:         6.136s
  Time for merge operator:            1.095s
  Time for stop operator:             0.404s
  Time for adding to reached set:     0.437s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   37
Avg. length of target path (in blocks):                3240 (count: 37, min: 60, max: 116, avg: 87.57)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   3.039s
  Counterexample analysis:                             2.327s (Max:     0.101s, Calls: 37)
    Refinement sat check:                              1.071s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.003s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.125s
  Precision update:                                    0.097s
  ARG update:                                          0.375s

Length of refined path (in blocks):                    2819 (count: 37, min: 57, max: 95, avg: 76.19)
Number of affected states:                             2584 (count: 37, min: 1, max: 94, avg: 69.84)
Length (states) of path with itp 'true':                198 (count: 37, min: 0, max: 66, avg: 5.35)
Length (states) of path with itp non-trivial itp:      2584 (count: 37, min: 1, max: 94, avg: 69.84)
Length (states) of path with itp 'false':                37 (count: 37, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:         205 (count: 37, min: 0, max: 11, avg: 5.54)
Equal non-trivial interpolants along paths:            2342 (count: 37, min: 0, max: 92, avg: 63.30)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                37
Number of successful refinements:     37
Number of failed refinements:         0
Max. size of reached set before ref.: 3235
Max. size of reached set after ref.:  1236
Avg. size of reached set before ref.: 2398.54
Avg. size of reached set after ref.:  74.51

Total time for CEGAR algorithm:      20.876s
Time for refinements:                 3.265s
Average time for refinement:          0.088s
Max time for refinement:              0.159s

Code Coverage
-----------------------------
  Function coverage:      0.533
  Visited lines:          660
  Total lines:            1363
  Line coverage:          0.484
  Visited conditions:     232
  Total conditions:       486
  Condition coverage:     0.477

CPAchecker general statistics
-----------------------------
Number of program locations:     1871
Number of CFA edges:             2110
Number of relevant variables:    315
Number of functions:             105
Number of loops:                 4
Size of reached set:             1386
  Number of reached locations:   642 (34%)
    Avg states per location:     2
    Max states per location:     10 (at node N912)
  Number of reached functions:   56 (53%)
  Number of partitions:          1385
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N1900 (before line 2543), Function outgoing called from node N1936, stack depth 5 [36dc1381], stack [main, test, bobToRjh, sendEmail, outgoing]])
  Number of target states:       0

Time for analysis setup:          4.128s
  Time for loading CPAs:          0.828s
  Time for loading parser:        0.754s
  Time for CFA construction:      2.329s
    Time for parsing file(s):     0.738s
    Time for AST to CFA:          0.681s
    Time for CFA sanity check:    0.199s
    Time for post-processing:     0.587s
      Time for var class.:        0.308s
Time for Analysis:               20.876s
CPU time for analysis:           20.870s
Time for analyzing result:        0.002s
Total time for CPAchecker:       25.011s
Total CPU time for CPAchecker:   25.000s
Time for statistics:              0.135s

Time for Garbage Collector:       0.486s (in 41 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 69MB (    66 MiB) max;     44MB (    42 MiB) avg;     72MB (    68 MiB) peak
Used non-heap memory:             37MB (    35 MiB) max;     33MB (    31 MiB) avg;     37MB (    36 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        39MB (    37 MiB) max;     35MB (    33 MiB) avg
Total process virtual memory:   8087MB (  7712 MiB) max;   8071MB (  7697 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
