scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/email_spec7_product18_true-unreach-call_true-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_yqrdan_l/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 53: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 373: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 419: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 445: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 468: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 513: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 542: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 590: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 637: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 682: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 760: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 829: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 963: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1046: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1093: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1140: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1185: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1248: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1355: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1409: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1481: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1528: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1586: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1607: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1644: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1681: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1720: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1759: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1796: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1833: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1870: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1907: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1944: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2336: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2345: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2360: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2472: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2504: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2513: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2522: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2547: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 210: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            10117 (15% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  9852 (97%)
  Because of loop head:            217 (2%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         48 (0%)
  Times precision was empty:       2952 (29%)
  Times precision was {false}:     225 (2%)
  Times result was cached:         6813 (67%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      127 (1%)
  Times result was 'false':        171 (2%)
Number of strengthen sat checks:   0
Number of coverage checks:         18746
  BDD entailment checks:           1322
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       54
Number of predicates discovered:          5
Number of abstraction locations:          134
Max number of predicates per location:    2
Avg number of predicates per location:    1
Total predicates per abstraction:         7827
Max number of predicates per abstraction: 2
Avg number of predicates per abstraction: 22.24
Number of irrelevant predicates:          5498 (70%)
Number of preds handled by boolean abs:   129 (2%)
  Total number of models for allsat:      128
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.01

Time for post operator:                  2.491s
  Time for path formula creation:        2.353s
Time for strengthen operator:            0.123s
Time for prec operator:                  3.069s
  Time for abstraction:                  2.588s (Max:     0.023s, Count: 10117)
    Boolean abstraction:                 0.185s
    Solving time:                        0.376s (Max:     0.015s)
    Model enumeration time:              0.007s
    Time for BDD construction:           0.017s (Max:     0.005s)
Time for merge operator:                 0.455s
Time for coverage check:                 0.040s
  Time for BDD entailment checks:        0.034s
Total time for SMT solver (w/o itp):     0.383s

Number of path formula cache hits:   58968 (72%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     2.192s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               204
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         271 (count: 6175, min: 0, max: 119, avg: 0.04)
Time for BDD node cleanup:                             0.005s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.499s
Automaton transfers with branching:                0
Automaton transfer successors:                        68771 (count: 68771, min: 1, max: 1, avg: 1.00) [1 x 68771]

CPA algorithm statistics
------------------------
Number of iterations:            52510
Max size of waitlist:            22
Average size of waitlist:        6
Number of computed successors:   62380
Max successors for one state:    2
Number of times merged:          8712
Number of times stopped:         9662
Number of times breaked:         48

Total time for CPA algorithm:        11.363s (Max:     1.484s)
  Time for choose from waitlist:      0.118s
  Time for precision adjustment:      3.949s
  Time for transfer relation:         4.979s
  Time for merge operator:            0.924s
  Time for stop operator:             0.308s
  Time for adding to reached set:     0.290s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   48
Avg. length of target path (in blocks):                4342 (count: 48, min: 62, max: 120, avg: 90.46)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   2.817s
  Counterexample analysis:                             2.282s (Max:     0.078s, Calls: 48)
    Refinement sat check:                              1.107s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.004s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.082s
  Precision update:                                    0.096s
  ARG update:                                          0.243s

Length of refined path (in blocks):                    3948 (count: 48, min: 61, max: 112, avg: 82.25)
Number of affected states:                             1286 (count: 48, min: 1, max: 96, avg: 26.79)
Length (states) of path with itp 'true':               2614 (count: 48, min: 0, max: 110, avg: 54.46)
Length (states) of path with itp non-trivial itp:      1286 (count: 48, min: 1, max: 96, avg: 26.79)
Length (states) of path with itp 'false':                48 (count: 48, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:          14 (count: 48, min: 0, max: 1, avg: 0.29)
Equal non-trivial interpolants along paths:            1224 (count: 48, min: 0, max: 94, avg: 25.50)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                48
Number of successful refinements:     48
Number of failed refinements:         0
Max. size of reached set before ref.: 3274
Max. size of reached set after ref.:  2622
Avg. size of reached set before ref.: 2584.27
Avg. size of reached set after ref.:  1526.83

Total time for CEGAR algorithm:      14.633s
Time for refinements:                 3.188s
Average time for refinement:          0.066s
Max time for refinement:              0.125s

Code Coverage
-----------------------------
  Function coverage:      0.593
  Visited lines:          703
  Total lines:            1374
  Line coverage:          0.512
  Visited conditions:     244
  Total conditions:       486
  Condition coverage:     0.502

CPAchecker general statistics
-----------------------------
Number of program locations:     1891
Number of CFA edges:             2134
Number of relevant variables:    322
Number of functions:             108
Number of loops:                 4
Size of reached set:             1791
  Number of reached locations:   696 (37%)
    Avg states per location:     2
    Max states per location:     15 (at node N1917)
  Number of reached functions:   64 (59%)
  Number of partitions:          1783
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N1789 (before line 2406), Function outgoing called from node N1836, stack depth 5 [57b5b4b0], stack [main, test, bobToRjh, sendEmail, outgoing]])
  Number of target states:       0

Time for analysis setup:          3.910s
  Time for loading CPAs:          0.745s
  Time for loading parser:        0.703s
  Time for CFA construction:      2.217s
    Time for parsing file(s):     0.618s
    Time for AST to CFA:          0.737s
    Time for CFA sanity check:    0.195s
    Time for post-processing:     0.532s
      Time for var class.:        0.290s
Time for Analysis:               14.633s
CPU time for analysis:           14.640s
Time for analyzing result:        0.001s
Total time for CPAchecker:       18.548s
Total CPU time for CPAchecker:   18.540s
Time for statistics:              0.129s

Time for Garbage Collector:       0.351s (in 25 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 68MB (    65 MiB) max;     43MB (    41 MiB) avg;     71MB (    68 MiB) peak
Used non-heap memory:             37MB (    35 MiB) max;     32MB (    30 MiB) avg;     37MB (    36 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        38MB (    37 MiB) max;     34MB (    32 MiB) avg
Total process virtual memory:   8086MB (  7712 MiB) max;   8067MB (  7694 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
