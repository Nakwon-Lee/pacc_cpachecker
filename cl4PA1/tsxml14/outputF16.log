scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/email_spec9_product28_true-unreach-call_true-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_s3zz9av2/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 109: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 124: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 147: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 338: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 370: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 379: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 388: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 413: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 753: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 782: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 830: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 877: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 922: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1000: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1069: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1203: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1286: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1333: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1380: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1425: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1488: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1595: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1649: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1721: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1768: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2108: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2154: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2514: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2534: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2543: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2558: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2581: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2602: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2639: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2676: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2715: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2754: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2791: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2828: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2865: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2902: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2939: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1945: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            23715 (14% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  23262 (98%)
  Because of loop head:            411 (2%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         42 (0%)
  Times precision was empty:       6487 (27%)
  Times precision was {false}:     232 (1%)
  Times result was cached:         16596 (70%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      400 (2%)
  Times result was 'false':        252 (1%)
Number of strengthen sat checks:   0
Number of coverage checks:         46850
  BDD entailment checks:           4008
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       56
Number of predicates discovered:          6
Number of abstraction locations:          152
Max number of predicates per location:    2
Avg number of predicates per location:    1
Total predicates per abstraction:         23484
Max number of predicates per abstraction: 2
Avg number of predicates per abstraction: 37.16
Number of irrelevant predicates:          12758 (54%)
Number of preds handled by boolean abs:   505 (2%)
  Total number of models for allsat:      399
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.00

Time for post operator:                  3.806s
  Time for path formula creation:        3.583s
Time for strengthen operator:            0.313s
Time for prec operator:                  5.595s
  Time for abstraction:                  4.953s (Max:     0.027s, Count: 23715)
    Boolean abstraction:                 0.782s
    Solving time:                        0.895s (Max:     0.016s)
    Model enumeration time:              0.053s
    Time for BDD construction:           0.059s (Max:     0.008s)
Time for merge operator:                 0.559s
Time for coverage check:                 0.083s
  Time for BDD entailment checks:        0.076s
Total time for SMT solver (w/o itp):     0.948s

Number of path formula cache hits:   163934 (80%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     3.321s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               210
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         828 (count: 14118, min: 0, max: 136, avg: 0.06)
Time for BDD node cleanup:                             0.016s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.650s
  Time for transition matches:                         0.312s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.001s
Automaton transfers with branching:                0
Automaton transfer successors:                       169205 (count: 169205, min: 1, max: 1, avg: 1.00) [1 x 169205]

CPA algorithm statistics
------------------------
Number of iterations:            127639
Max size of waitlist:            50
Average size of waitlist:        15
Number of computed successors:   152215
Max successors for one state:    2
Number of times merged:          21421
Number of times stopped:         24274
Number of times breaked:         42

Total time for CPA algorithm:        18.526s (Max:     1.392s)
  Time for choose from waitlist:      0.237s
  Time for precision adjustment:      7.360s
  Time for transfer relation:         7.533s
  Time for merge operator:            1.232s
  Time for stop operator:             0.524s
  Time for adding to reached set:     0.469s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   42
Avg. length of target path (in blocks):                4452 (count: 42, min: 63, max: 129, avg: 106.00)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   2.981s
  Counterexample analysis:                             2.153s (Max:     0.084s, Calls: 42)
    Refinement sat check:                              1.077s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.011s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.099s
  Precision update:                                    0.077s
  ARG update:                                          0.534s

Length of refined path (in blocks):                    3540 (count: 42, min: 60, max: 105, avg: 84.29)
Number of affected states:                             2674 (count: 42, min: 1, max: 104, avg: 63.67)
Length (states) of path with itp 'true':                824 (count: 42, min: 0, max: 75, avg: 19.62)
Length (states) of path with itp non-trivial itp:      2674 (count: 42, min: 1, max: 104, avg: 63.67)
Length (states) of path with itp 'false':                42 (count: 42, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:          29 (count: 42, min: 0, max: 1, avg: 0.69)
Equal non-trivial interpolants along paths:            2603 (count: 42, min: 0, max: 102, avg: 61.98)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                42
Number of successful refinements:     42
Number of failed refinements:         0
Max. size of reached set before ref.: 7135
Max. size of reached set after ref.:  6862
Avg. size of reached set before ref.: 4570.12
Avg. size of reached set after ref.:  1590.90

Total time for CEGAR algorithm:      21.930s
Time for refinements:                 3.334s
Average time for refinement:          0.079s
Max time for refinement:              0.127s

Code Coverage
-----------------------------
  Function coverage:      0.582
  Visited lines:          733
  Total lines:            1422
  Line coverage:          0.515
  Visited conditions:     256
  Total conditions:       496
  Condition coverage:     0.516

CPAchecker general statistics
-----------------------------
Number of program locations:     1953
Number of CFA edges:             2210
Number of relevant variables:    342
Number of functions:             110
Number of loops:                 4
Size of reached set:             2563
  Number of reached locations:   724 (37%)
    Avg states per location:     3
    Max states per location:     48 (at node N236)
  Number of reached functions:   64 (58%)
  Number of partitions:          2555
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N246 (before line 460), Function verify called from node N116, stack depth 11 [54666685], stack [main, test, bobToRjh, sendEmail, outgoing, outgoing__wrappee__Encrypt, outgoing__wrappee__Keys, mail, incoming, incoming__wrappee__Verify, verify]])
  Number of target states:       0

Time for analysis setup:          4.162s
  Time for loading CPAs:          0.809s
  Time for loading parser:        0.773s
  Time for CFA construction:      2.383s
    Time for parsing file(s):     0.762s
    Time for AST to CFA:          0.697s
    Time for CFA sanity check:    0.205s
    Time for post-processing:     0.575s
      Time for var class.:        0.314s
Time for Analysis:               21.930s
CPU time for analysis:           21.930s
Time for analyzing result:        0.002s
Total time for CPAchecker:       26.098s
Total CPU time for CPAchecker:   26.090s
Time for statistics:              0.141s

Time for Garbage Collector:       0.686s (in 53 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 81MB (    78 MiB) max;     48MB (    45 MiB) avg;     84MB (    80 MiB) peak
Used non-heap memory:             37MB (    36 MiB) max;     33MB (    31 MiB) avg;     38MB (    36 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        39MB (    37 MiB) max;     35MB (    33 MiB) avg
Total process virtual memory:   8087MB (  7712 MiB) max;   8071MB (  7697 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
