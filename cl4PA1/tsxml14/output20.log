scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/email_spec9_product28_true-unreach-call_true-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_n9pa92b5/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 109: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 124: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 147: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 338: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 370: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 379: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 388: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 413: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 753: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 782: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 830: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 877: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 922: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1000: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1069: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1203: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1286: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1333: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1380: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1425: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1488: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1595: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1649: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1721: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1768: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2108: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2154: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2514: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2534: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2543: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2558: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2581: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2602: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2639: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2676: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2715: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2754: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2791: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2828: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2865: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2902: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2939: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1945: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            21711 (14% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  21208 (98%)
  Because of loop head:            413 (2%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         90 (0%)
  Times precision was empty:       3252 (15%)
  Times precision was {false}:     244 (1%)
  Times result was cached:         17815 (82%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      400 (2%)
  Times result was 'false':        237 (1%)
Number of strengthen sat checks:   0
Number of coverage checks:         41887
  BDD entailment checks:           2887
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       56
Number of predicates discovered:          6
Number of abstraction locations:          152
Max number of predicates per location:    2
Avg number of predicates per location:    1
Total predicates per abstraction:         26163
Max number of predicates per abstraction: 2
Avg number of predicates per abstraction: 40.63
Number of irrelevant predicates:          14583 (56%)
Number of preds handled by boolean abs:   505 (2%)
  Total number of models for allsat:      399
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.00

Time for post operator:                  3.459s
  Time for path formula creation:        3.292s
Time for strengthen operator:            0.265s
Time for prec operator:                  5.661s
  Time for abstraction:                  5.051s (Max:     0.028s, Count: 21711)
    Boolean abstraction:                 0.795s
    Solving time:                        0.874s (Max:     0.015s)
    Model enumeration time:              0.069s
    Time for BDD construction:           0.076s (Max:     0.012s)
Time for merge operator:                 0.496s
Time for coverage check:                 0.104s
  Time for BDD entailment checks:        0.082s
Total time for SMT solver (w/o itp):     0.943s

Number of path formula cache hits:   154871 (82%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     2.998s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               208
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         824 (count: 9813, min: 0, max: 114, avg: 0.08)
Time for BDD node cleanup:                             0.006s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.593s
  Time for transition matches:                         0.263s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.005s
Automaton transfers with branching:                0
Automaton transfer successors:                       155095 (count: 155095, min: 1, max: 1, avg: 1.00) [1 x 155095]

CPA algorithm statistics
------------------------
Number of iterations:            115070
Max size of waitlist:            32
Average size of waitlist:        14
Number of computed successors:   136998
Max successors for one state:    2
Number of times merged:          19500
Number of times stopped:         21009
Number of times breaked:         90

Total time for CPA algorithm:        17.687s (Max:     1.548s)
  Time for choose from waitlist:      0.223s
  Time for precision adjustment:      7.173s
  Time for transfer relation:         6.909s
  Time for merge operator:            1.169s
  Time for stop operator:             0.532s
  Time for adding to reached set:     0.510s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   90
Avg. length of target path (in blocks):               10288 (count: 90, min: 63, max: 131, avg: 114.31)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   5.325s
  Counterexample analysis:                             4.443s (Max:     0.088s, Calls: 90)
    Refinement sat check:                              2.151s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.005s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.074s
  Precision update:                                    0.148s
  ARG update:                                          0.470s

Length of refined path (in blocks):                    7438 (count: 90, min: 60, max: 107, avg: 82.64)
Number of affected states:                             2721 (count: 90, min: 1, max: 106, avg: 30.23)
Length (states) of path with itp 'true':               4627 (count: 90, min: 0, max: 88, avg: 51.41)
Length (states) of path with itp non-trivial itp:      2721 (count: 90, min: 1, max: 106, avg: 30.23)
Length (states) of path with itp 'false':                90 (count: 90, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:          20 (count: 90, min: 0, max: 1, avg: 0.22)
Equal non-trivial interpolants along paths:            2611 (count: 90, min: 0, max: 104, avg: 29.01)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                90
Number of successful refinements:     90
Number of failed refinements:         0
Max. size of reached set before ref.: 4066
Max. size of reached set after ref.:  3627
Avg. size of reached set before ref.: 3138.04
Avg. size of reached set after ref.:  1880.38

Total time for CEGAR algorithm:      23.727s
Time for refinements:                 5.876s
Average time for refinement:          0.065s
Max time for refinement:              0.112s

Code Coverage
-----------------------------
  Function coverage:      0.582
  Visited lines:          733
  Total lines:            1422
  Line coverage:          0.515
  Visited conditions:     256
  Total conditions:       496
  Condition coverage:     0.516

CPAchecker general statistics
-----------------------------
Number of program locations:     1953
Number of CFA edges:             2210
Number of relevant variables:    342
Number of functions:             110
Number of loops:                 4
Size of reached set:             2563
  Number of reached locations:   724 (37%)
    Avg states per location:     3
    Max states per location:     48 (at node N236)
  Number of reached functions:   64 (58%)
  Number of partitions:          2555
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N246 (before line 460), Function verify called from node N116, stack depth 11 [59e14144], stack [main, test, bobToRjh, sendEmail, outgoing, outgoing__wrappee__Encrypt, outgoing__wrappee__Keys, mail, incoming, incoming__wrappee__Verify, verify]])
  Number of target states:       0

Time for analysis setup:          4.321s
  Time for loading CPAs:          0.892s
  Time for loading parser:        0.709s
  Time for CFA construction:      2.542s
    Time for parsing file(s):     0.729s
    Time for AST to CFA:          0.794s
    Time for CFA sanity check:    0.215s
    Time for post-processing:     0.642s
      Time for var class.:        0.346s
Time for Analysis:               23.727s
CPU time for analysis:           23.720s
Time for analyzing result:        0.002s
Total time for CPAchecker:       28.052s
Total CPU time for CPAchecker:   28.040s
Time for statistics:              0.167s

Time for Garbage Collector:       0.614s (in 51 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 72MB (    69 MiB) max;     46MB (    43 MiB) avg;     76MB (    72 MiB) peak
Used non-heap memory:             37MB (    35 MiB) max;     33MB (    32 MiB) avg;     38MB (    36 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        39MB (    37 MiB) max;     35MB (    34 MiB) avg
Total process virtual memory:   8087MB (  7713 MiB) max;   8073MB (  7699 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
