scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/email_spec0_product38_true-unreach-call_true-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_5n3kpd4u/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 73: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 94: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 131: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 168: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 207: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 246: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 283: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 320: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 357: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 394: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 431: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1108: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1154: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1407: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1436: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1484: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1531: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1576: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1654: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1723: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1857: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1940: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1987: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2034: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2079: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2142: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2249: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2303: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2375: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2422: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2474: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2497: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2628: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2660: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2669: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2678: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2703: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2773: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2782: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2797: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2814: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 945: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            8480 (13% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  8230 (97%)
  Because of loop head:            234 (3%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         16 (0%)
  Times precision was empty:       2972 (35%)
  Times precision was {false}:     267 (3%)
  Times result was cached:         5103 (60%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      138 (2%)
  Times result was 'false':        20 (0%)
Number of strengthen sat checks:   0
Number of coverage checks:         19724
  BDD entailment checks:           818
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       45
Number of predicates discovered:          4
Number of abstraction locations:          131
Max number of predicates per location:    1
Avg number of predicates per location:    1
Total predicates per abstraction:         5508
Max number of predicates per abstraction: 1
Avg number of predicates per abstraction: 13.60
Number of irrelevant predicates:          3798 (69%)
Number of preds handled by boolean abs:   138 (3%)
  Total number of models for allsat:      140
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.01

Time for post operator:                  3.521s
  Time for path formula creation:        3.357s
Time for strengthen operator:            0.176s
Time for prec operator:                  3.427s
  Time for abstraction:                  2.940s (Max:     0.047s, Count: 8480)
    Boolean abstraction:                 0.256s
    Solving time:                        0.534s (Max:     0.020s)
    Model enumeration time:              0.014s
    Time for BDD construction:           0.019s (Max:     0.008s)
Time for merge operator:                 0.444s
Time for coverage check:                 0.046s
  Time for BDD entailment checks:        0.034s
Total time for SMT solver (w/o itp):     0.548s

Number of path formula cache hits:   44020 (58%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     3.156s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               202
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         283 (count: 5962, min: 0, max: 106, avg: 0.05)
Time for BDD node cleanup:                             0.005s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.436s
Automaton transfers with branching:                0
Automaton transfer successors:                        65557 (count: 65557, min: 1, max: 1, avg: 1.00) [1 x 65557]

CPA algorithm statistics
------------------------
Number of iterations:            49979
Max size of waitlist:            24
Average size of waitlist:        10
Number of computed successors:   60106
Max successors for one state:    2
Number of times merged:          9453
Number of times stopped:         9935
Number of times breaked:         16

Total time for CPA algorithm:        13.323s (Max:     2.076s)
  Time for choose from waitlist:      0.164s
  Time for precision adjustment:      4.507s
  Time for transfer relation:         6.103s
  Time for merge operator:            0.965s
  Time for stop operator:             0.346s
  Time for adding to reached set:     0.405s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   16
Avg. length of target path (in blocks):                1644 (count: 16, min: 68, max: 127, avg: 102.75)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   1.446s
  Counterexample analysis:                             0.961s (Max:     0.087s, Calls: 16)
    Refinement sat check:                              0.417s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.001s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.068s
  Precision update:                                    0.021s
  ARG update:                                          0.324s

Length of refined path (in blocks):                    1264 (count: 16, min: 67, max: 98, avg: 79.00)
Number of affected states:                             1015 (count: 16, min: 1, max: 97, avg: 63.44)
Length (states) of path with itp 'true':                233 (count: 16, min: 0, max: 95, avg: 14.56)
Length (states) of path with itp non-trivial itp:      1015 (count: 16, min: 1, max: 97, avg: 63.44)
Length (states) of path with itp 'false':                16 (count: 16, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:          13 (count: 16, min: 0, max: 1, avg: 0.81)
Equal non-trivial interpolants along paths:             986 (count: 16, min: 0, max: 95, avg: 61.63)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                16
Number of successful refinements:     16
Number of failed refinements:         0
Max. size of reached set before ref.: 4191
Max. size of reached set after ref.:  1545
Avg. size of reached set before ref.: 3267.19
Avg. size of reached set after ref.:  291.94

Total time for CEGAR algorithm:      14.967s
Time for refinements:                 1.639s
Average time for refinement:          0.102s
Max time for refinement:              0.167s

Code Coverage
-----------------------------
  Function coverage:      0.590
  Visited lines:          742
  Total lines:            1349
  Line coverage:          0.550
  Visited conditions:     276
  Total conditions:       478
  Condition coverage:     0.577

CPAchecker general statistics
-----------------------------
Number of program locations:     1852
Number of CFA edges:             2090
Number of relevant variables:    280
Number of functions:             105
Number of loops:                 4
Size of reached set:             2548
  Number of reached locations:   749 (40%)
    Avg states per location:     3
    Max states per location:     16 (at node N71)
  Number of reached functions:   62 (59%)
  Number of partitions:          2534
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N1881 (before line 2523), Function mail called from node N1888, stack depth 7 [770644a3], stack [main, test, bobToRjh, sendEmail, outgoing, outgoing__wrappee__Keys, mail]])
  Number of target states:       0

Time for analysis setup:          4.365s
  Time for loading CPAs:          0.967s
  Time for loading parser:        0.709s
  Time for CFA construction:      2.472s
    Time for parsing file(s):     0.658s
    Time for AST to CFA:          0.799s
    Time for CFA sanity check:    0.235s
    Time for post-processing:     0.606s
      Time for var class.:        0.316s
Time for Analysis:               14.967s
CPU time for analysis:           14.970s
Time for analyzing result:        0.003s
Total time for CPAchecker:       19.338s
Total CPU time for CPAchecker:   19.340s
Time for statistics:              0.135s

Time for Garbage Collector:       0.448s (in 24 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 70MB (    67 MiB) max;     43MB (    41 MiB) avg;     73MB (    69 MiB) peak
Used non-heap memory:             36MB (    34 MiB) max;     32MB (    30 MiB) avg;     37MB (    35 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        38MB (    36 MiB) max;     34MB (    32 MiB) avg
Total process virtual memory:   8087MB (  7713 MiB) max;   8067MB (  7694 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
