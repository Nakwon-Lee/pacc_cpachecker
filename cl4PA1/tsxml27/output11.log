scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/email_spec9_product14_true-unreach-call_true-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_pj0qhahb/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 602: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 634: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 643: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 652: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 677: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 706: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 729: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 962: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1282: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1328: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1390: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1410: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1419: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1434: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1463: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1492: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1540: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1587: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1632: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1710: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1779: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1913: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1996: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2043: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2090: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2135: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2198: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2305: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2359: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2431: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2478: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2527: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2548: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2585: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2622: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2661: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2700: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2737: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2774: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2811: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2848: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2885: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1119: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            19497 (17% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  19294 (99%)
  Because of loop head:            162 (1%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         41 (0%)
  Times precision was empty:       936 (5%)
  Times precision was {false}:     185 (1%)
  Times result was cached:         16750 (86%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      1626 (8%)
  Times result was 'false':        349 (2%)
Number of strengthen sat checks:   0
Number of coverage checks:         27918
  BDD entailment checks:           2668
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       56
Number of predicates discovered:          58
Number of abstraction locations:          124
Max number of predicates per location:    14
Avg number of predicates per location:    7
Total predicates per abstraction:         74342
Max number of predicates per abstraction: 14
Avg number of predicates per abstraction: 41.05
Number of irrelevant predicates:          20582 (28%)
Number of preds handled by boolean abs:   6411 (9%)
  Total number of models for allsat:      2482
  Max number of models for allsat:        12
  Avg number of models for allsat:        1.53

Time for post operator:                  3.703s
  Time for path formula creation:        3.529s
Time for strengthen operator:            0.223s
Time for prec operator:                 11.011s
  Time for abstraction:                 10.385s (Max:     0.030s, Count: 19497)
    Boolean abstraction:                 2.714s
    Solving time:                        2.132s (Max:     0.016s)
    Model enumeration time:              0.306s
    Time for BDD construction:           0.236s (Max:     0.012s)
Time for merge operator:                 0.358s
Time for coverage check:                 0.036s
  Time for BDD entailment checks:        0.024s
Total time for SMT solver (w/o itp):     2.439s

Number of path formula cache hits:   97675 (70%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     3.196s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               3167
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        7255 (count: 16023, min: 0, max: 1133, avg: 0.45)
Time for BDD node cleanup:                             0.013s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.557s
  Time for transition matches:                         0.231s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.001s
Automaton transfers with branching:                0
Automaton transfer successors:                       117422 (count: 117422, min: 1, max: 1, avg: 1.00) [1 x 117422]

CPA algorithm statistics
------------------------
Number of iterations:            88326
Max size of waitlist:            39
Average size of waitlist:        15
Number of computed successors:   103068
Max successors for one state:    2
Number of times merged:          12625
Number of times stopped:         13718
Number of times breaked:         41

Total time for CPA algorithm:        21.791s (Max:     1.190s)
  Time for choose from waitlist:      0.124s
  Time for precision adjustment:     12.286s
  Time for transfer relation:         6.773s
  Time for merge operator:            0.797s
  Time for stop operator:             0.391s
  Time for adding to reached set:     0.334s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   41
Avg. length of target path (in blocks):                4556 (count: 41, min: 68, max: 146, avg: 111.12)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   4.172s
  Counterexample analysis:                             3.436s (Max:     0.194s, Calls: 41)
    Refinement sat check:                              1.507s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.001s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.161s
  Precision update:                                    0.081s
  ARG update:                                          0.381s

Length of refined path (in blocks):                    3572 (count: 41, min: 39, max: 124, avg: 87.12)
Number of affected states:                             3350 (count: 41, min: 38, max: 123, avg: 81.71)
Length (states) of path with itp 'true':                181 (count: 41, min: 0, max: 48, avg: 4.41)
Length (states) of path with itp non-trivial itp:      3350 (count: 41, min: 38, max: 123, avg: 81.71)
Length (states) of path with itp 'false':                41 (count: 41, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:         210 (count: 41, min: 0, max: 21, avg: 5.12)
Equal non-trivial interpolants along paths:            3099 (count: 41, min: 33, max: 121, avg: 75.59)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                41
Number of successful refinements:     41
Number of failed refinements:         0
Max. size of reached set before ref.: 4088
Max. size of reached set after ref.:  1226
Avg. size of reached set before ref.: 2210.46
Avg. size of reached set after ref.:  97.95

Total time for CEGAR algorithm:      26.313s
Time for refinements:                 4.518s
Average time for refinement:          0.110s
Max time for refinement:              0.212s

Code Coverage
-----------------------------
  Function coverage:      0.495
  Visited lines:          574
  Total lines:            1397
  Line coverage:          0.411
  Visited conditions:     192
  Total conditions:       488
  Condition coverage:     0.393

CPAchecker general statistics
-----------------------------
Number of program locations:     1914
Number of CFA edges:             2166
Number of relevant variables:    315
Number of functions:             107
Number of loops:                 4
Size of reached set:             2388
  Number of reached locations:   533 (28%)
    Avg states per location:     4
    Max states per location:     20 (at node N286)
  Number of reached functions:   53 (50%)
  Number of partitions:          2369
    Avg size of partitions:      1
    Max size of partitions:      4 (with key [N441 (before lines 772-939), Function test called from node N86, stack depth 2 [2861fb5d], stack [main, test]])
  Number of target states:       0
  Size of final wait list        33

Time for analysis setup:          3.932s
  Time for loading CPAs:          0.772s
  Time for loading parser:        0.654s
  Time for CFA construction:      2.298s
    Time for parsing file(s):     0.706s
    Time for AST to CFA:          0.658s
    Time for CFA sanity check:    0.221s
    Time for post-processing:     0.574s
      Time for var class.:        0.310s
Time for Analysis:               26.313s
CPU time for analysis:           26.310s
Total time for CPAchecker:       30.250s
Total CPU time for CPAchecker:   30.240s
Time for statistics:              0.117s

Time for Garbage Collector:       0.665s (in 54 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 76MB (    72 MiB) max;     45MB (    43 MiB) avg;     78MB (    74 MiB) peak
Used non-heap memory:             37MB (    36 MiB) max;     34MB (    32 MiB) avg;     38MB (    36 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        39MB (    37 MiB) max;     36MB (    34 MiB) avg
Total process virtual memory:   8087MB (  7712 MiB) max;   8075MB (  7701 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
