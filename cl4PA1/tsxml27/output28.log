scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/email_spec9_product14_true-unreach-call_true-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_dlazm75j/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 602: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 634: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 643: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 652: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 677: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 706: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 729: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 962: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1282: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1328: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1390: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1410: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1419: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1434: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1463: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1492: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1540: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1587: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1632: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1710: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1779: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1913: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1996: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2043: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2090: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2135: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2198: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2305: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2359: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2431: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2478: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2527: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2548: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2585: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2622: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2661: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2700: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2737: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2774: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2811: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2848: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2885: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1119: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            23137 (14% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  22675 (98%)
  Because of loop head:            421 (2%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         41 (0%)
  Times precision was empty:       3972 (17%)
  Times precision was {false}:     216 (1%)
  Times result was cached:         17235 (74%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      1714 (7%)
  Times result was 'false':        365 (2%)
Number of strengthen sat checks:   0
Number of coverage checks:         48718
  BDD entailment checks:           3590
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       56
Number of predicates discovered:          31
Number of abstraction locations:          127
Max number of predicates per location:    11
Avg number of predicates per location:    5
Total predicates per abstraction:         79602
Max number of predicates per abstraction: 11
Avg number of predicates per abstraction: 41.24
Number of irrelevant predicates:          26258 (33%)
Number of preds handled by boolean abs:   5727 (7%)
  Total number of models for allsat:      2658
  Max number of models for allsat:        12
  Avg number of models for allsat:        1.55

Time for post operator:                  2.744s
  Time for path formula creation:        2.565s
Time for strengthen operator:            0.252s
Time for prec operator:                 10.435s
  Time for abstraction:                  9.877s (Max:     0.033s, Count: 23137)
    Boolean abstraction:                 2.511s
    Solving time:                        1.935s (Max:     0.014s)
    Model enumeration time:              0.208s
    Time for BDD construction:           0.247s (Max:     0.013s)
Time for merge operator:                 0.469s
Time for coverage check:                 0.045s
  Time for BDD entailment checks:        0.018s
Total time for SMT solver (w/o itp):     2.143s

Number of path formula cache hits:   173647 (84%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     2.198s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               1697
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        5902 (count: 19983, min: 0, max: 757, avg: 0.30)
Time for BDD node cleanup:                             0.011s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.518s
  Time for transition matches:                         0.253s
  Time for transition assertions:                      0.001s
  Time for transition actions:                         0.003s
Automaton transfers with branching:                0
Automaton transfer successors:                       168727 (count: 168727, min: 1, max: 1, avg: 1.00) [1 x 168727]

CPA algorithm statistics
------------------------
Number of iterations:            128553
Max size of waitlist:            16
Average size of waitlist:        8
Number of computed successors:   153364
Max successors for one state:    2
Number of times merged:          22564
Number of times stopped:         24146
Number of times breaked:         41

Total time for CPA algorithm:        21.488s (Max:     1.290s)
  Time for choose from waitlist:      0.153s
  Time for precision adjustment:     12.130s
  Time for transfer relation:         6.152s
  Time for merge operator:            1.111s
  Time for stop operator:             0.444s
  Time for adding to reached set:     0.445s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   41
Avg. length of target path (in blocks):                4346 (count: 41, min: 61, max: 161, avg: 106.00)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   3.550s
  Counterexample analysis:                             2.736s (Max:     0.122s, Calls: 41)
    Refinement sat check:                              1.234s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.003s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.104s
  Precision update:                                    0.064s
  ARG update:                                          0.549s

Length of refined path (in blocks):                    3617 (count: 41, min: 46, max: 139, avg: 88.22)
Number of affected states:                             3395 (count: 41, min: 45, max: 138, avg: 82.80)
Length (states) of path with itp 'true':                181 (count: 41, min: 0, max: 48, avg: 4.41)
Length (states) of path with itp non-trivial itp:      3395 (count: 41, min: 45, max: 138, avg: 82.80)
Length (states) of path with itp 'false':                41 (count: 41, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:         186 (count: 41, min: 0, max: 15, avg: 4.54)
Equal non-trivial interpolants along paths:            3168 (count: 41, min: 39, max: 136, avg: 77.27)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                41
Number of successful refinements:     41
Number of failed refinements:         0
Max. size of reached set before ref.: 5862
Max. size of reached set after ref.:  2456
Avg. size of reached set before ref.: 3286.98
Avg. size of reached set after ref.:  207.59

Total time for CEGAR algorithm:      25.372s
Time for refinements:                 3.877s
Average time for refinement:          0.094s
Max time for refinement:              0.157s

Code Coverage
-----------------------------
  Function coverage:      0.542
  Visited lines:          724
  Total lines:            1397
  Line coverage:          0.518
  Visited conditions:     282
  Total conditions:       488
  Condition coverage:     0.578

CPAchecker general statistics
-----------------------------
Number of program locations:     1914
Number of CFA edges:             2166
Number of relevant variables:    315
Number of functions:             107
Number of loops:                 4
Size of reached set:             2598
  Number of reached locations:   734 (38%)
    Avg states per location:     3
    Max states per location:     20 (at node N1523)
  Number of reached functions:   58 (54%)
  Number of partitions:          2589
    Avg size of partitions:      1
    Max size of partitions:      5 (with key [N441 (before lines 772-939), Function test called from node N86, stack depth 2 [446c9c4c], stack [main, test]])
  Number of target states:       0
  Size of final wait list        4

Time for analysis setup:          4.392s
  Time for loading CPAs:          0.868s
  Time for loading parser:        0.769s
  Time for CFA construction:      2.575s
    Time for parsing file(s):     0.722s
    Time for AST to CFA:          0.870s
    Time for CFA sanity check:    0.227s
    Time for post-processing:     0.607s
      Time for var class.:        0.338s
Time for Analysis:               25.372s
CPU time for analysis:           25.370s
Total time for CPAchecker:       29.768s
Total CPU time for CPAchecker:   29.760s
Time for statistics:              0.153s

Time for Garbage Collector:       0.701s (in 65 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 76MB (    72 MiB) max;     45MB (    43 MiB) avg;     80MB (    76 MiB) peak
Used non-heap memory:             37MB (    35 MiB) max;     33MB (    32 MiB) avg;     38MB (    36 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        39MB (    37 MiB) max;     35MB (    34 MiB) avg
Total process virtual memory:   8087MB (  7712 MiB) max;   8073MB (  7699 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
