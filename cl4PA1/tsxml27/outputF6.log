scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/email_spec9_product14_true-unreach-call_true-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_7cuoofgp/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 602: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 634: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 643: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 652: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 677: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 706: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 729: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 962: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1282: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1328: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1390: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1410: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1419: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1434: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1463: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1492: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1540: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1587: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1632: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1710: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1779: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1913: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1996: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2043: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2090: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2135: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2198: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2305: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2359: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2431: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2478: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2527: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2548: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2585: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2622: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2661: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2700: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2737: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2774: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2811: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2848: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2885: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1119: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            589424 (13% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  581053 (99%)
  Because of loop head:            8215 (1%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         156 (0%)
  Times precision was empty:       3137 (1%)
  Times precision was {false}:     285 (0%)
  Times result was cached:         551831 (94%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      34171 (6%)
  Times result was 'false':        19155 (3%)
Number of strengthen sat checks:   0
Number of coverage checks:         1710297
  BDD entailment checks:           383547
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       56
Number of predicates discovered:          95
Number of abstraction locations:          148
Max number of predicates per location:    31
Avg number of predicates per location:    13
Total predicates per abstraction:         6426053
Max number of predicates per abstraction: 31
Avg number of predicates per abstraction: 186.50
Number of irrelevant predicates:          1979599 (31%)
Number of preds handled by boolean abs:   394511 (6%)
  Total number of models for allsat:      2309932
  Max number of models for allsat:        3184
  Avg number of models for allsat:        67.60

Time for post operator:                 19.754s
  Time for path formula creation:       17.869s
Time for strengthen operator:            4.726s
Time for prec operator:                743.671s
  Time for abstraction:                735.856s (Max:     1.771s, Count: 589424)
    Boolean abstraction:               454.285s
    Solving time:                       81.353s (Max:     0.044s)
    Model enumeration time:            262.644s
    Time for BDD construction:         104.758s (Max:     1.708s)
Time for merge operator:                 3.369s
Time for coverage check:                 1.221s
  Time for BDD entailment checks:        1.022s
Total time for SMT solver (w/o itp):   343.998s

Number of path formula cache hits:   5234647 (91%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    12.933s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               230182
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                      418515 (count: 733451, min: 0, max: 5001, avg: 0.57)
Time for BDD node cleanup:                             0.259s
Time for BDD garbage collection:                       1.584s (in 312 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  6.374s
  Time for transition matches:                         3.455s
  Time for transition assertions:                      0.001s
  Time for transition actions:                         0.005s
Automaton transfers with branching:                0
Automaton transfer successors:                      4679243 (count: 4679243, min: 1, max: 1, avg: 1.00) [1 x 4679243]

CPA algorithm statistics
------------------------
Number of iterations:            3564467
Max size of waitlist:            808
Average size of waitlist:        242
Number of computed successors:   4293646
Max successors for one state:    2
Number of times merged:          663375
Number of times stopped:         698489
Number of times breaked:         156

Total time for CPA algorithm:       866.215s (Max:   116.547s)
  Time for choose from waitlist:      1.727s
  Time for precision adjustment:    769.137s
  Time for transfer relation:        62.485s
  Time for merge operator:           10.717s
  Time for stop operator:             5.830s
  Time for adding to reached set:     6.688s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   156
Avg. length of target path (in blocks):               20233 (count: 156, min: 61, max: 167, avg: 129.70)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  26.759s
  Counterexample analysis:                            17.336s (Max:     0.318s, Calls: 156)
    Refinement sat check:                              5.283s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.025s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.270s
  Precision update:                                    0.193s
  ARG update:                                          8.692s

Length of refined path (in blocks):                   14435 (count: 156, min: 39, max: 148, avg: 92.53)
Number of affected states:                            11485 (count: 156, min: 1, max: 140, avg: 73.62)
Length (states) of path with itp 'true':               2794 (count: 156, min: 0, max: 68, avg: 17.91)
Length (states) of path with itp non-trivial itp:     11485 (count: 156, min: 1, max: 140, avg: 73.62)
Length (states) of path with itp 'false':               156 (count: 156, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:        1408 (count: 156, min: 0, max: 27, avg: 9.03)
Equal non-trivial interpolants along paths:            9921 (count: 156, min: 0, max: 115, avg: 63.60)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                156
Number of successful refinements:     156
Number of failed refinements:         0
Max. size of reached set before ref.: 149668
Max. size of reached set after ref.:  53611
Avg. size of reached set before ref.: 25229.81
Avg. size of reached set after ref.:  3318.97

Total time for CEGAR algorithm:     896.116s
Time for refinements:                29.490s
Average time for refinement:          0.189s
Max time for refinement:              0.984s

Code Coverage
-----------------------------
  Function coverage:      0.551
  Visited lines:          765
  Total lines:            1397
  Line coverage:          0.548
  Visited conditions:     304
  Total conditions:       488
  Condition coverage:     0.623

CPAchecker general statistics
-----------------------------
Number of program locations:     1914
Number of CFA edges:             2166
Number of relevant variables:    315
Number of functions:             107
Number of loops:                 4
Size of reached set:             157912
  Number of reached locations:   771 (40%)
    Avg states per location:     204
    Max states per location:     1051 (at node N1523)
  Number of reached functions:   59 (55%)
  Number of partitions:          157345
    Avg size of partitions:      1
    Max size of partitions:      107 (with key [N441 (before lines 772-939), Function test called from node N86, stack depth 2 [16682a37], stack [main, test]])
  Number of target states:       0
  Size of final wait list        773

Time for analysis setup:          4.124s
  Time for loading CPAs:          0.790s
  Time for loading parser:        0.717s
  Time for CFA construction:      2.461s
    Time for parsing file(s):     0.779s
    Time for AST to CFA:          0.712s
    Time for CFA sanity check:    0.205s
    Time for post-processing:     0.593s
      Time for var class.:        0.332s
Time for Analysis:              896.116s
CPU time for analysis:          895.930s
Total time for CPAchecker:      900.249s
Total CPU time for CPAchecker:  900.050s
Time for statistics:              1.467s

Time for Garbage Collector:      49.912s (in 1357 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                538MB (   513 MiB) max;    269MB (   257 MiB) avg;    598MB (   570 MiB) peak
Used non-heap memory:             37MB (    35 MiB) max;     36MB (    34 MiB) avg;     37MB (    36 MiB) peak
Allocated heap memory:           742MB (   708 MiB) max;    391MB (   373 MiB) avg
Allocated non-heap memory:        39MB (    37 MiB) max;     39MB (    37 MiB) avg
Total process virtual memory:   9190MB (  8765 MiB) max;   8534MB (  8138 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
