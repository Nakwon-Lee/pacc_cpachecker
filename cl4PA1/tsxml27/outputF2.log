scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/email_spec9_product14_true-unreach-call_true-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_5h2iju0q/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 602: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 634: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 643: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 652: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 677: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 706: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 729: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 962: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1282: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1328: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1390: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1410: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1419: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1434: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1463: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1492: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1540: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1587: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1632: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1710: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1779: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1913: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1996: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2043: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2090: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2135: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2198: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2305: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2359: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2431: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2478: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2527: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2548: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2585: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2622: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2661: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2700: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2737: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2774: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2811: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2848: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2885: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1119: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            237684 (11% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  232568 (98%)
  Because of loop head:            5048 (2%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         68 (0%)
  Times precision was empty:       2100 (1%)
  Times precision was {false}:     208 (0%)
  Times result was cached:         193959 (82%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      41417 (17%)
  Times result was 'false':        8492 (4%)
Number of strengthen sat checks:   0
Number of coverage checks:         1214669
  BDD entailment checks:           551063
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       56
Number of predicates discovered:          94
Number of abstraction locations:          148
Max number of predicates per location:    37
Avg number of predicates per location:    12
Total predicates per abstraction:         3089538
Max number of predicates per abstraction: 37
Avg number of predicates per abstraction: 74.22
Number of irrelevant predicates:          1265770 (41%)
Number of preds handled by boolean abs:   657234 (21%)
  Total number of models for allsat:      3513848
  Max number of models for allsat:        24960
  Avg number of models for allsat:        84.84

Time for post operator:                 23.269s
  Time for path formula creation:       22.084s
Time for strengthen operator:            1.891s
Time for prec operator:                795.966s
  Time for abstraction:                792.072s (Max:     4.998s, Count: 237684)
    Boolean abstraction:               631.952s
    Solving time:                      102.117s (Max:     0.121s)
    Model enumeration time:            343.065s
    Time for BDD construction:         175.249s (Max:     1.972s)
Time for merge operator:                 4.348s
Time for coverage check:                 2.493s
  Time for BDD entailment checks:        2.349s
Total time for SMT solver (w/o itp):   445.182s

Number of path formula cache hits:   1769712 (70%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    19.296s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               260037
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                      958170 (count: 1158254, min: 0, max: 16891, avg: 0.83)
Time for BDD node cleanup:                             0.382s
Time for BDD garbage collection:                       5.566s (in 645 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  4.053s
  Time for transition matches:                         1.987s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.003s
Automaton transfers with branching:                0
Automaton transfer successors:                      2169346 (count: 2169346, min: 1, max: 1, avg: 1.00) [1 x 2169346]

CPA algorithm statistics
------------------------
Number of iterations:            1634859
Max size of waitlist:            762
Average size of waitlist:        236
Number of computed successors:   1995884
Max successors for one state:    2
Number of times merged:          331803
Number of times stopped:         350359
Number of times breaked:         68

Total time for CPA algorithm:       880.832s (Max:   202.479s)
  Time for choose from waitlist:      0.952s
  Time for precision adjustment:    811.376s
  Time for transfer relation:        45.773s
  Time for merge operator:            8.700s
  Time for stop operator:             5.237s
  Time for adding to reached set:     3.560s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   68
Avg. length of target path (in blocks):                9837 (count: 68, min: 73, max: 222, avg: 144.66)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  11.948s
  Counterexample analysis:                             7.541s (Max:     0.411s, Calls: 68)
    Refinement sat check:                              3.064s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.010s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.154s
  Precision update:                                    0.085s
  ARG update:                                          3.986s

Length of refined path (in blocks):                    5897 (count: 68, min: 46, max: 188, avg: 86.72)
Number of affected states:                             4988 (count: 68, min: 1, max: 187, avg: 73.35)
Length (states) of path with itp 'true':                841 (count: 68, min: 0, max: 75, avg: 12.37)
Length (states) of path with itp non-trivial itp:      4988 (count: 68, min: 1, max: 187, avg: 73.35)
Length (states) of path with itp 'false':                68 (count: 68, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:         346 (count: 68, min: 0, max: 19, avg: 5.09)
Equal non-trivial interpolants along paths:            4574 (count: 68, min: 0, max: 185, avg: 67.26)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                68
Number of successful refinements:     68
Number of failed refinements:         0
Max. size of reached set before ref.: 269368
Max. size of reached set after ref.:  176911
Avg. size of reached set before ref.: 30427.79
Avg. size of reached set after ref.:  9065.40

Total time for CEGAR algorithm:     895.910s
Time for refinements:                14.482s
Average time for refinement:          0.212s
Max time for refinement:              1.065s

Code Coverage
-----------------------------
  Function coverage:      0.411
  Visited lines:          565
  Total lines:            1397
  Line coverage:          0.404
  Visited conditions:     220
  Total conditions:       488
  Condition coverage:     0.451

CPAchecker general statistics
-----------------------------
Number of program locations:     1914
Number of CFA edges:             2166
Number of relevant variables:    315
Number of functions:             107
Number of loops:                 4
Size of reached set:             184391
  Number of reached locations:   554 (29%)
    Avg states per location:     332
    Max states per location:     1938 (at node N1523)
  Number of reached functions:   44 (41%)
  Number of partitions:          183116
    Avg size of partitions:      1
    Max size of partitions:      247 (with key [N441 (before lines 772-939), Function test called from node N86, stack depth 2 [361dc8a1], stack [main, test]])
  Number of target states:       0
  Size of final wait list        328

Time for analysis setup:          4.358s
  Time for loading CPAs:          1.018s
  Time for loading parser:        0.624s
  Time for CFA construction:      2.541s
    Time for parsing file(s):     0.759s
    Time for AST to CFA:          0.755s
    Time for CFA sanity check:    0.230s
    Time for post-processing:     0.660s
      Time for var class.:        0.356s
Time for Analysis:              895.910s
CPU time for analysis:          895.760s
Total time for CPAchecker:      900.274s
Total CPU time for CPAchecker:  900.120s
Time for statistics:              1.781s

Time for Garbage Collector:      33.906s (in 685 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:               1011MB (   964 MiB) max;    412MB (   392 MiB) avg;   1025MB (   978 MiB) peak
Used non-heap memory:             37MB (    36 MiB) max;     36MB (    34 MiB) avg;     38MB (    36 MiB) peak
Allocated heap memory:          1033MB (   985 MiB) max;    609MB (   581 MiB) avg
Allocated non-heap memory:        40MB (    38 MiB) max;     40MB (    38 MiB) avg
Total process virtual memory:   9816MB (  9361 MiB) max;   8810MB (  8402 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
