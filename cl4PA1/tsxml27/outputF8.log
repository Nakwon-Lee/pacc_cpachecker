scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/email_spec9_product14_true-unreach-call_true-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_l4_pezqy/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 602: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 634: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 643: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 652: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 677: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 706: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 729: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 962: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1282: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1328: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1390: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1410: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1419: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1434: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1463: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1492: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1540: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1587: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1632: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1710: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1779: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1913: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1996: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2043: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2090: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2135: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2198: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2305: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2359: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2431: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2478: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2527: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2548: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2585: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2622: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2661: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2700: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2737: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2774: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2811: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2848: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2885: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1119: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            688987 (14% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  683711 (99%)
  Because of loop head:            5204 (1%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         72 (0%)
  Times precision was empty:       4803 (1%)
  Times precision was {false}:     284 (0%)
  Times result was cached:         638085 (93%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      45815 (7%)
  Times result was 'false':        31777 (5%)
Number of strengthen sat checks:   0
Number of coverage checks:         1931334
  BDD entailment checks:           622520
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       56
Number of predicates discovered:          107
Number of abstraction locations:          149
Max number of predicates per location:    42
Avg number of predicates per location:    14
Total predicates per abstraction:         7369064
Max number of predicates per abstraction: 42
Avg number of predicates per abstraction: 159.85
Number of irrelevant predicates:          2386265 (32%)
Number of preds handled by boolean abs:   684761 (9%)
  Total number of models for allsat:      1261865
  Max number of models for allsat:        55296
  Avg number of models for allsat:        27.54

Time for post operator:                 31.348s
  Time for path formula creation:       29.273s
Time for strengthen operator:            4.347s
Time for prec operator:                720.302s
  Time for abstraction:                710.812s (Max:    16.322s, Count: 688987)
    Boolean abstraction:               360.044s
    Solving time:                      110.481s (Max:     0.132s)
    Model enumeration time:            160.859s
    Time for BDD construction:          78.345s (Max:     3.271s)
Time for merge operator:                 5.518s
Time for coverage check:                 2.699s
  Time for BDD entailment checks:        2.435s
Total time for SMT solver (w/o itp):   271.340s

Number of path formula cache hits:   5211291 (86%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    22.498s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               190492
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                      652583 (count: 1132120, min: 0, max: 16612, avg: 0.58)
Time for BDD node cleanup:                             0.343s
Time for BDD garbage collection:                       1.855s (in 256 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  7.122s
  Time for transition matches:                         3.390s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.001s
Automaton transfers with branching:                0
Automaton transfer successors:                      4961476 (count: 4961476, min: 1, max: 1, avg: 1.00) [1 x 4961476]

CPA algorithm statistics
------------------------
Number of iterations:            3770751
Max size of waitlist:            2895
Average size of waitlist:        906
Number of computed successors:   4502282
Max successors for one state:    2
Number of times merged:          654407
Number of times stopped:         693246
Number of times breaked:         72

Total time for CPA algorithm:       873.756s (Max:   144.613s)
  Time for choose from waitlist:      1.878s
  Time for precision adjustment:    749.671s
  Time for transfer relation:        80.254s
  Time for merge operator:           14.124s
  Time for stop operator:             8.009s
  Time for adding to reached set:     8.440s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   72
Avg. length of target path (in blocks):                9443 (count: 72, min: 65, max: 214, avg: 131.15)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  18.197s
  Counterexample analysis:                             6.454s (Max:     0.291s, Calls: 72)
    Refinement sat check:                              2.686s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.027s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.243s
  Precision update:                                    0.094s
  ARG update:                                         11.210s

Length of refined path (in blocks):                    6892 (count: 72, min: 46, max: 150, avg: 95.72)
Number of affected states:                             6192 (count: 72, min: 2, max: 142, avg: 86.00)
Length (states) of path with itp 'true':                628 (count: 72, min: 0, max: 75, avg: 8.72)
Length (states) of path with itp non-trivial itp:      6192 (count: 72, min: 2, max: 142, avg: 86.00)
Length (states) of path with itp 'false':                72 (count: 72, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:         370 (count: 72, min: 0, max: 22, avg: 5.14)
Equal non-trivial interpolants along paths:            5750 (count: 72, min: 1, max: 136, avg: 79.86)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                72
Number of successful refinements:     72
Number of failed refinements:         0
Max. size of reached set before ref.: 568577
Max. size of reached set after ref.:  367865
Avg. size of reached set before ref.: 63068.07
Avg. size of reached set after ref.:  11082.71

Total time for CEGAR algorithm:     895.947s
Time for refinements:                21.520s
Average time for refinement:          0.298s
Max time for refinement:              2.582s

Code Coverage
-----------------------------
  Function coverage:      0.336
  Visited lines:          507
  Total lines:            1397
  Line coverage:          0.363
  Visited conditions:     200
  Total conditions:       488
  Condition coverage:     0.410

CPAchecker general statistics
-----------------------------
Number of program locations:     1914
Number of CFA edges:             2166
Number of relevant variables:    315
Number of functions:             107
Number of loops:                 4
Size of reached set:             34313
  Number of reached locations:   489 (26%)
    Avg states per location:     70
    Max states per location:     345 (at node N1523)
  Number of reached functions:   36 (34%)
  Number of partitions:          34089
    Avg size of partitions:      1
    Max size of partitions:      123 (with key [N441 (before lines 772-939), Function test called from node N86, stack depth 2 [100df719], stack [main, test]])
  Number of target states:       0
  Size of final wait list        588

Time for analysis setup:          4.322s
  Time for loading CPAs:          0.902s
  Time for loading parser:        0.684s
  Time for CFA construction:      2.563s
    Time for parsing file(s):     0.747s
    Time for AST to CFA:          0.746s
    Time for CFA sanity check:    0.242s
    Time for post-processing:     0.681s
      Time for var class.:        0.364s
Time for Analysis:              895.947s
CPU time for analysis:          895.830s
Total time for CPAchecker:      900.273s
Total CPU time for CPAchecker:  900.150s
Time for statistics:              0.527s

Time for Garbage Collector:      65.448s (in 657 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:               1100MB (  1049 MiB) max;    632MB (   603 MiB) avg;   1166MB (  1112 MiB) peak
Used non-heap memory:             37MB (    35 MiB) max;     36MB (    34 MiB) avg;     38MB (    36 MiB) peak
Allocated heap memory:          1284MB (  1225 MiB) max;    887MB (   846 MiB) avg
Allocated non-heap memory:        39MB (    37 MiB) max;     39MB (    37 MiB) avg
Total process virtual memory:  10959MB ( 10451 MiB) max;   9202MB (  8776 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
