scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/email_spec9_product14_true-unreach-call_true-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_hmu9r4g2/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 602: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 634: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 643: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 652: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 677: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 706: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 729: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 962: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1282: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1328: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1390: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1410: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1419: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1434: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1463: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1492: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1540: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1587: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1632: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1710: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1779: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1913: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1996: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2043: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2090: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2135: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2198: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2305: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2359: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2431: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2478: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2527: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2548: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2585: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2622: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2661: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2700: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2737: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2774: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2811: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2848: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2885: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1119: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            30122 (13% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  29479 (98%)
  Because of loop head:            594 (2%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         49 (0%)
  Times precision was empty:       3985 (13%)
  Times precision was {false}:     243 (1%)
  Times result was cached:         25107 (83%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      787 (3%)
  Times result was 'false':        329 (1%)
Number of strengthen sat checks:   0
Number of coverage checks:         71601
  BDD entailment checks:           3757
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       56
Number of predicates discovered:          17
Number of abstraction locations:          140
Max number of predicates per location:    6
Avg number of predicates per location:    2
Total predicates per abstraction:         64830
Max number of predicates per abstraction: 7
Avg number of predicates per abstraction: 62.94
Number of irrelevant predicates:          38153 (59%)
Number of preds handled by boolean abs:   1371 (2%)
  Total number of models for allsat:      841
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.07

Time for post operator:                  3.512s
  Time for path formula creation:        3.288s
Time for strengthen operator:            0.297s
Time for prec operator:                  7.828s
  Time for abstraction:                  7.204s (Max:     0.050s, Count: 30122)
    Boolean abstraction:                 1.293s
    Solving time:                        1.262s (Max:     0.015s)
    Model enumeration time:              0.090s
    Time for BDD construction:           0.120s (Max:     0.012s)
Time for merge operator:                 0.566s
Time for coverage check:                 0.087s
  Time for BDD entailment checks:        0.059s
Total time for SMT solver (w/o itp):     1.352s

Number of path formula cache hits:   251925 (86%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     2.916s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               282
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        1853 (count: 14029, min: 0, max: 392, avg: 0.13)
Time for BDD node cleanup:                             0.015s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.823s
  Time for transition matches:                         0.404s
  Time for transition assertions:                      0.001s
  Time for transition actions:                         0.001s
Automaton transfers with branching:                0
Automaton transfer successors:                       238942 (count: 238942, min: 1, max: 1, avg: 1.00) [1 x 238942]

CPA algorithm statistics
------------------------
Number of iterations:            181634
Max size of waitlist:            36
Average size of waitlist:        15
Number of computed successors:   218431
Max successors for one state:    2
Number of times merged:          33922
Number of times stopped:         35963
Number of times breaked:         49

Total time for CPA algorithm:        21.523s (Max:     1.464s)
  Time for choose from waitlist:      0.334s
  Time for precision adjustment:      9.751s
  Time for transfer relation:         7.587s
  Time for merge operator:            1.405s
  Time for stop operator:             0.566s
  Time for adding to reached set:     0.603s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   49
Avg. length of target path (in blocks):                4820 (count: 49, min: 61, max: 114, avg: 98.37)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   3.548s
  Counterexample analysis:                             2.704s (Max:     0.097s, Calls: 49)
    Refinement sat check:                              1.111s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.006s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.136s
  Precision update:                                    0.056s
  ARG update:                                          0.563s

Length of refined path (in blocks):                    4494 (count: 49, min: 58, max: 111, avg: 91.71)
Number of affected states:                             3890 (count: 49, min: 57, max: 110, avg: 79.39)
Length (states) of path with itp 'true':                555 (count: 49, min: 0, max: 37, avg: 11.33)
Length (states) of path with itp non-trivial itp:      3890 (count: 49, min: 57, max: 110, avg: 79.39)
Length (states) of path with itp 'false':                49 (count: 49, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:         336 (count: 49, min: 0, max: 15, avg: 6.86)
Equal non-trivial interpolants along paths:            3505 (count: 49, min: 52, max: 99, avg: 71.53)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                49
Number of successful refinements:     49
Number of failed refinements:         0
Max. size of reached set before ref.: 7785
Max. size of reached set after ref.:  5964
Avg. size of reached set before ref.: 5324.61
Avg. size of reached set after ref.:  1672.02

Total time for CEGAR algorithm:      25.525s
Time for refinements:                 3.955s
Average time for refinement:          0.080s
Max time for refinement:              0.142s

Code Coverage
-----------------------------
  Function coverage:      0.551
  Visited lines:          759
  Total lines:            1397
  Line coverage:          0.543
  Visited conditions:     302
  Total conditions:       488
  Condition coverage:     0.619

CPAchecker general statistics
-----------------------------
Number of program locations:     1914
Number of CFA edges:             2166
Number of relevant variables:    315
Number of functions:             107
Number of loops:                 4
Size of reached set:             3163
  Number of reached locations:   759 (40%)
    Avg states per location:     4
    Max states per location:     20 (at node N1523)
  Number of reached functions:   59 (55%)
  Number of partitions:          3142
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N441 (before lines 772-939), Function test called from node N86, stack depth 2 [6ca90ddc], stack [main, test]])
  Number of target states:       0
  Size of final wait list        10

Time for analysis setup:          4.221s
  Time for loading CPAs:          0.830s
  Time for loading parser:        0.829s
  Time for CFA construction:      2.358s
    Time for parsing file(s):     0.764s
    Time for AST to CFA:          0.726s
    Time for CFA sanity check:    0.190s
    Time for post-processing:     0.546s
      Time for var class.:        0.300s
Time for Analysis:               25.525s
CPU time for analysis:           25.520s
Total time for CPAchecker:       29.759s
Total CPU time for CPAchecker:   29.740s
Time for statistics:              0.139s

Time for Garbage Collector:       0.898s (in 77 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 90MB (    86 MiB) max;     49MB (    47 MiB) avg;     94MB (    89 MiB) peak
Used non-heap memory:             37MB (    35 MiB) max;     33MB (    32 MiB) avg;     38MB (    36 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        39MB (    37 MiB) max;     35MB (    34 MiB) avg
Total process virtual memory:   8086MB (  7711 MiB) max;   8072MB (  7698 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
