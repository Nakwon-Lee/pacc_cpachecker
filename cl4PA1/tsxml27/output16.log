scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/email_spec9_product14_true-unreach-call_true-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_0lxk6_og/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 602: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 634: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 643: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 652: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 677: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 706: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 729: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 962: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1282: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1328: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1390: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1410: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1419: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1434: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1463: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1492: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1540: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1587: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1632: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1710: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1779: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1913: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1996: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2043: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2090: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2135: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2198: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2305: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2359: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2431: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2478: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2527: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2548: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2585: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2622: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2661: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2700: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2737: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2774: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2811: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2848: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2885: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1119: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            21895 (13% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  21297 (97%)
  Because of loop head:            553 (3%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         45 (0%)
  Times precision was empty:       1942 (9%)
  Times precision was {false}:     226 (1%)
  Times result was cached:         18090 (83%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      1637 (7%)
  Times result was 'false':        298 (1%)
Number of strengthen sat checks:   0
Number of coverage checks:         49489
  BDD entailment checks:           3217
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       56
Number of predicates discovered:          36
Number of abstraction locations:          149
Max number of predicates per location:    11
Avg number of predicates per location:    6
Total predicates per abstraction:         74122
Max number of predicates per abstraction: 11
Avg number of predicates per abstraction: 39.79
Number of irrelevant predicates:          20949 (28%)
Number of preds handled by boolean abs:   5451 (7%)
  Total number of models for allsat:      2068
  Max number of models for allsat:        8
  Avg number of models for allsat:        1.26

Time for post operator:                  3.282s
  Time for path formula creation:        3.136s
Time for strengthen operator:            0.229s
Time for prec operator:                 10.499s
  Time for abstraction:                 10.001s (Max:     0.023s, Count: 21895)
    Boolean abstraction:                 2.510s
    Solving time:                        2.182s (Max:     0.015s)
    Model enumeration time:              0.211s
    Time for BDD construction:           0.217s (Max:     0.011s)
Time for merge operator:                 0.493s
Time for coverage check:                 0.072s
  Time for BDD entailment checks:        0.062s
Total time for SMT solver (w/o itp):     2.393s

Number of path formula cache hits:   157883 (78%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     2.837s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               1448
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        4852 (count: 17028, min: 0, max: 732, avg: 0.28)
Time for BDD node cleanup:                             0.011s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.566s
  Time for transition matches:                         0.291s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.000s
Automaton transfers with branching:                0
Automaton transfer successors:                       167350 (count: 167350, min: 1, max: 1, avg: 1.00) [1 x 167350]

CPA algorithm statistics
------------------------
Number of iterations:            127471
Max size of waitlist:            18
Average size of waitlist:        9
Number of computed successors:   152807
Max successors for one state:    2
Number of times merged:          23136
Number of times stopped:         24699
Number of times breaked:         45

Total time for CPA algorithm:        22.341s (Max:     1.301s)
  Time for choose from waitlist:      0.215s
  Time for precision adjustment:     12.059s
  Time for transfer relation:         6.820s
  Time for merge operator:            1.140s
  Time for stop operator:             0.521s
  Time for adding to reached set:     0.553s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   45
Avg. length of target path (in blocks):                4786 (count: 45, min: 61, max: 159, avg: 106.36)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   3.586s
  Counterexample analysis:                             2.792s (Max:     0.138s, Calls: 45)
    Refinement sat check:                              1.308s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.014s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.121s
  Precision update:                                    0.091s
  ARG update:                                          0.464s

Length of refined path (in blocks):                    3494 (count: 45, min: 46, max: 137, avg: 77.64)
Number of affected states:                             3338 (count: 45, min: 45, max: 136, avg: 74.18)
Length (states) of path with itp 'true':                111 (count: 45, min: 0, max: 37, avg: 2.47)
Length (states) of path with itp non-trivial itp:      3338 (count: 45, min: 45, max: 136, avg: 74.18)
Length (states) of path with itp 'false':                45 (count: 45, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:         133 (count: 45, min: 0, max: 15, avg: 2.96)
Equal non-trivial interpolants along paths:            3160 (count: 45, min: 39, max: 134, avg: 70.22)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                45
Number of successful refinements:     45
Number of failed refinements:         0
Max. size of reached set before ref.: 5242
Max. size of reached set after ref.:  1032
Avg. size of reached set before ref.: 2884.67
Avg. size of reached set after ref.:  71.60

Total time for CEGAR algorithm:      26.265s
Time for refinements:                 3.920s
Average time for refinement:          0.087s
Max time for refinement:              0.178s

Code Coverage
-----------------------------
  Function coverage:      0.505
  Visited lines:          678
  Total lines:            1397
  Line coverage:          0.485
  Visited conditions:     264
  Total conditions:       488
  Condition coverage:     0.541

CPAchecker general statistics
-----------------------------
Number of program locations:     1914
Number of CFA edges:             2166
Number of relevant variables:    315
Number of functions:             107
Number of loops:                 4
Size of reached set:             1223
  Number of reached locations:   676 (35%)
    Avg states per location:     1
    Max states per location:     10 (at node N1523)
  Number of reached functions:   54 (50%)
  Number of partitions:          1221
    Avg size of partitions:      1
    Max size of partitions:      3 (with key [N441 (before lines 772-939), Function test called from node N86, stack depth 2 [549a5b0c], stack [main, test]])
  Number of target states:       0
  Size of final wait list        8

Time for analysis setup:          3.994s
  Time for loading CPAs:          0.819s
  Time for loading parser:        0.704s
  Time for CFA construction:      2.307s
    Time for parsing file(s):     0.678s
    Time for AST to CFA:          0.698s
    Time for CFA sanity check:    0.194s
    Time for post-processing:     0.586s
      Time for var class.:        0.319s
Time for Analysis:               26.265s
CPU time for analysis:           26.260s
Total time for CPAchecker:       30.263s
Total CPU time for CPAchecker:   30.250s
Time for statistics:              0.115s

Time for Garbage Collector:       0.690s (in 66 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 74MB (    71 MiB) max;     46MB (    44 MiB) avg;     78MB (    74 MiB) peak
Used non-heap memory:             37MB (    35 MiB) max;     33MB (    32 MiB) avg;     38MB (    36 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        39MB (    37 MiB) max;     36MB (    34 MiB) avg
Total process virtual memory:   8087MB (  7712 MiB) max;   8074MB (  7700 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
