scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/email_spec9_product14_true-unreach-call_true-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_lo71uajf/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 602: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 634: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 643: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 652: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 677: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 706: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 729: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 962: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1282: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1328: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1390: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1410: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1419: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1434: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1463: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1492: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1540: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1587: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1632: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1710: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1779: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1913: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1996: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2043: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2090: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2135: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2198: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2305: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2359: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2431: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2478: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2527: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2548: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2585: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2622: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2661: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2700: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2737: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2774: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2811: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2848: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2885: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1119: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            20276 (12% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  19970 (98%)
  Because of loop head:            274 (1%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         32 (0%)
  Times precision was empty:       3186 (16%)
  Times precision was {false}:     172 (1%)
  Times result was cached:         15509 (76%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      1409 (7%)
  Times result was 'false':        279 (1%)
Number of strengthen sat checks:   0
Number of coverage checks:         47570
  BDD entailment checks:           1180
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       56
Number of predicates discovered:          45
Number of abstraction locations:          137
Max number of predicates per location:    13
Avg number of predicates per location:    6
Total predicates per abstraction:         62469
Max number of predicates per abstraction: 13
Avg number of predicates per abstraction: 39.51
Number of irrelevant predicates:          21712 (35%)
Number of preds handled by boolean abs:   4999 (8%)
  Total number of models for allsat:      2150
  Max number of models for allsat:        12
  Avg number of models for allsat:        1.53

Time for post operator:                  3.556s
  Time for path formula creation:        3.403s
Time for strengthen operator:            0.282s
Time for prec operator:                  9.246s
  Time for abstraction:                  8.727s (Max:     0.045s, Count: 20276)
    Boolean abstraction:                 2.184s
    Solving time:                        1.656s (Max:     0.015s)
    Model enumeration time:              0.256s
    Time for BDD construction:           0.202s (Max:     0.012s)
Time for merge operator:                 0.630s
Time for coverage check:                 0.042s
  Time for BDD entailment checks:        0.025s
Total time for SMT solver (w/o itp):     1.912s

Number of path formula cache hits:   149092 (76%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     3.090s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               1879
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        5321 (count: 14747, min: 0, max: 491, avg: 0.36)
Time for BDD node cleanup:                             0.009s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.594s
  Time for transition matches:                         0.302s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.000s
Automaton transfers with branching:                0
Automaton transfer successors:                       165532 (count: 165532, min: 1, max: 1, avg: 1.00) [1 x 165532]

CPA algorithm statistics
------------------------
Number of iterations:            125020
Max size of waitlist:            100
Average size of waitlist:        35
Number of computed successors:   150525
Max successors for one state:    2
Number of times merged:          23195
Number of times stopped:         23839
Number of times breaked:         32

Total time for CPA algorithm:        21.643s (Max:     1.290s)
  Time for choose from waitlist:      0.186s
  Time for precision adjustment:     10.998s
  Time for transfer relation:         7.010s
  Time for merge operator:            1.302s
  Time for stop operator:             0.440s
  Time for adding to reached set:     0.457s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   32
Avg. length of target path (in blocks):                3957 (count: 32, min: 61, max: 182, avg: 123.66)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   3.487s
  Counterexample analysis:                             2.692s (Max:     0.182s, Calls: 32)
    Refinement sat check:                              1.144s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.008s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.140s
  Precision update:                                    0.030s
  ARG update:                                          0.542s

Length of refined path (in blocks):                    3069 (count: 31, min: 46, max: 160, avg: 99.00)
Number of affected states:                             2857 (count: 31, min: 45, max: 159, avg: 92.16)
Length (states) of path with itp 'true':                181 (count: 31, min: 0, max: 48, avg: 5.84)
Length (states) of path with itp non-trivial itp:      2857 (count: 31, min: 45, max: 159, avg: 92.16)
Length (states) of path with itp 'false':                31 (count: 31, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:          96 (count: 31, min: 0, max: 15, avg: 3.10)
Equal non-trivial interpolants along paths:            2730 (count: 31, min: 39, max: 157, avg: 88.06)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                32
Number of successful refinements:     31
Number of failed refinements:         0
Max. size of reached set before ref.: 8549
Max. size of reached set after ref.:  2363
Avg. size of reached set before ref.: 4206.34
Avg. size of reached set after ref.:  264.35

Total time for CEGAR algorithm:      25.448s
Time for refinements:                 3.801s
Average time for refinement:          0.118s
Max time for refinement:              0.214s

Code Coverage
-----------------------------
  Function coverage:      0.570
  Visited lines:          773
  Total lines:            1397
  Line coverage:          0.553
  Visited conditions:     308
  Total conditions:       488
  Condition coverage:     0.631

CPAchecker general statistics
-----------------------------
Number of program locations:     1914
Number of CFA edges:             2166
Number of relevant variables:    315
Number of functions:             107
Number of loops:                 4
Size of reached set:             5275
  Number of reached locations:   783 (41%)
    Avg states per location:     6
    Max states per location:     36 (at node N263)
  Number of reached functions:   61 (57%)
  Number of partitions:          5262
    Avg size of partitions:      1
    Max size of partitions:      3 (with key [N441 (before lines 772-939), Function test called from node N86, stack depth 2 [a58abd5], stack [main, test]])
  Number of target states:       1
  Size of final wait list        46

Time for analysis setup:          4.319s
  Time for loading CPAs:          0.920s
  Time for loading parser:        0.697s
  Time for CFA construction:      2.510s
    Time for parsing file(s):     0.772s
    Time for AST to CFA:          0.731s
    Time for CFA sanity check:    0.220s
    Time for post-processing:     0.627s
      Time for var class.:        0.333s
Time for Analysis:               25.448s
CPU time for analysis:           25.450s
Total time for CPAchecker:       29.771s
Total CPU time for CPAchecker:   29.770s
Time for statistics:              0.205s

Time for Garbage Collector:       0.883s (in 63 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 87MB (    83 MiB) max;     49MB (    47 MiB) avg;     90MB (    86 MiB) peak
Used non-heap memory:             38MB (    36 MiB) max;     34MB (    32 MiB) avg;     38MB (    36 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        40MB (    38 MiB) max;     36MB (    34 MiB) avg
Total process virtual memory:   8087MB (  7712 MiB) max;   8073MB (  7699 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
