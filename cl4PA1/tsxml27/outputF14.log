scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/email_spec9_product14_true-unreach-call_true-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_tlkhe6cc/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 602: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 634: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 643: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 652: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 677: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 706: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 729: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 962: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1282: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1328: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1390: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1410: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1419: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1434: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1463: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1492: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1540: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1587: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1632: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1710: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1779: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1913: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1996: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2043: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2090: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2135: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2198: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2305: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2359: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2431: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2478: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2527: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2548: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2585: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2622: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2661: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2700: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2737: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2774: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2811: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2848: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2885: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1119: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            536642 (15% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  531057 (99%)
  Because of loop head:            5457 (1%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         128 (0%)
  Times precision was empty:       3587 (1%)
  Times precision was {false}:     206 (0%)
  Times result was cached:         512519 (96%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      20330 (4%)
  Times result was 'false':        32496 (6%)
Number of strengthen sat checks:   0
Number of coverage checks:         1184024
  BDD entailment checks:           355322
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       56
Number of predicates discovered:          100
Number of abstraction locations:          149
Max number of predicates per location:    44
Avg number of predicates per location:    16
Total predicates per abstraction:         5408841
Max number of predicates per abstraction: 44
Avg number of predicates per abstraction: 263.38
Number of irrelevant predicates:          1311462 (24%)
Number of preds handled by boolean abs:   344661 (6%)
  Total number of models for allsat:      2628242
  Max number of models for allsat:        125280
  Avg number of models for allsat:        129.28

Time for post operator:                 22.581s
  Time for path formula creation:       19.610s
Time for strengthen operator:            2.685s
Time for prec operator:                768.301s
  Time for abstraction:                762.550s (Max:    51.153s, Count: 536642)
    Boolean abstraction:               550.973s
    Solving time:                       44.271s (Max:     0.035s)
    Model enumeration time:            338.493s
    Time for BDD construction:         163.510s (Max:     8.864s)
Time for merge operator:                 3.033s
Time for coverage check:                 2.407s
  Time for BDD entailment checks:        2.258s
Total time for SMT solver (w/o itp):   382.766s

Number of path formula cache hits:   3588778 (85%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    15.596s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               247085
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                      616203 (count: 719697, min: 0, max: 7192, avg: 0.86)
Time for BDD node cleanup:                             0.269s
Time for BDD garbage collection:                       4.059s (in 706 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  4.691s
  Time for transition matches:                         2.499s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.001s
Automaton transfers with branching:                0
Automaton transfer successors:                      3477372 (count: 3477372, min: 1, max: 1, avg: 1.00) [1 x 3477372]

CPA algorithm statistics
------------------------
Number of iterations:            2639486
Max size of waitlist:            78
Average size of waitlist:        41
Number of computed successors:   3116740
Max successors for one state:    2
Number of times merged:          414351
Number of times stopped:         440700
Number of times breaked:         128

Total time for CPA algorithm:       867.378s (Max:   165.478s)
  Time for choose from waitlist:      1.134s
  Time for precision adjustment:    787.224s
  Time for transfer relation:        54.439s
  Time for merge operator:            7.434s
  Time for stop operator:             5.533s
  Time for adding to reached set:     4.319s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   128
Avg. length of target path (in blocks):               19281 (count: 128, min: 68, max: 225, avg: 150.63)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  26.733s
  Counterexample analysis:                            20.969s (Max:     0.760s, Calls: 128)
    Refinement sat check:                              5.849s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.014s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.310s
  Precision update:                                    0.228s
  ARG update:                                          4.963s

Length of refined path (in blocks):                   13106 (count: 128, min: 39, max: 204, avg: 102.39)
Number of affected states:                            11125 (count: 128, min: 1, max: 196, avg: 86.91)
Length (states) of path with itp 'true':               1853 (count: 128, min: 0, max: 94, avg: 14.48)
Length (states) of path with itp non-trivial itp:     11125 (count: 128, min: 1, max: 196, avg: 86.91)
Length (states) of path with itp 'false':               128 (count: 128, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:        1157 (count: 128, min: 0, max: 35, avg: 9.04)
Equal non-trivial interpolants along paths:            9840 (count: 128, min: 0, max: 160, avg: 76.88)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                128
Number of successful refinements:     128
Number of failed refinements:         0
Max. size of reached set before ref.: 211201
Max. size of reached set after ref.:  8657
Avg. size of reached set before ref.: 18488.76
Avg. size of reached set after ref.:  411.44

Total time for CEGAR algorithm:     895.848s
Time for refinements:                28.427s
Average time for refinement:          0.222s
Max time for refinement:              0.998s

Code Coverage
-----------------------------
  Function coverage:      0.561
  Visited lines:          778
  Total lines:            1397
  Line coverage:          0.557
  Visited conditions:     308
  Total conditions:       488
  Condition coverage:     0.631

CPAchecker general statistics
-----------------------------
Number of program locations:     1914
Number of CFA edges:             2166
Number of relevant variables:    315
Number of functions:             107
Number of loops:                 4
Size of reached set:             329647
  Number of reached locations:   792 (41%)
    Avg states per location:     416
    Max states per location:     3350 (at node N286)
  Number of reached functions:   60 (56%)
  Number of partitions:          325834
    Avg size of partitions:      1
    Max size of partitions:      182 (with key [N441 (before lines 772-939), Function test called from node N86, stack depth 2 [417d8114], stack [main, test]])
  Number of target states:       0
  Size of final wait list        44

Time for analysis setup:          4.416s
  Time for loading CPAs:          1.005s
  Time for loading parser:        0.693s
  Time for CFA construction:      2.494s
    Time for parsing file(s):     0.701s
    Time for AST to CFA:          0.779s
    Time for CFA sanity check:    0.219s
    Time for post-processing:     0.639s
      Time for var class.:        0.336s
Time for Analysis:              895.848s
CPU time for analysis:          895.710s
Total time for CPAchecker:      900.271s
Total CPU time for CPAchecker:  900.130s
Time for statistics:              2.599s

Time for Garbage Collector:      41.252s (in 987 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                803MB (   765 MiB) max;    362MB (   345 MiB) avg;    896MB (   855 MiB) peak
Used non-heap memory:             38MB (    36 MiB) max;     36MB (    34 MiB) avg;     38MB (    36 MiB) peak
Allocated heap memory:          1134MB (  1082 MiB) max;    525MB (   500 MiB) avg
Allocated non-heap memory:        40MB (    38 MiB) max;     40MB (    38 MiB) avg
Total process virtual memory:   8853MB (  8443 MiB) max;   8406MB (  8017 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
