scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/email_spec9_product14_true-unreach-call_true-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_ehk1ata_/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 602: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 634: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 643: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 652: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 677: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 706: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 729: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 962: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1282: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1328: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1390: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1410: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1419: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1434: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1463: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1492: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1540: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1587: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1632: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1710: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1779: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1913: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1996: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2043: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2090: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2135: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2198: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2305: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2359: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2431: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2478: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2527: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2548: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2585: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2622: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2661: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2700: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2737: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2774: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2811: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2848: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2885: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1119: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            26958 (14% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  26420 (98%)
  Because of loop head:            494 (2%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         44 (0%)
  Times precision was empty:       4360 (16%)
  Times precision was {false}:     226 (1%)
  Times result was cached:         20525 (76%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      1847 (7%)
  Times result was 'false':        472 (2%)
Number of strengthen sat checks:   0
Number of coverage checks:         58110
  BDD entailment checks:           4202
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       56
Number of predicates discovered:          31
Number of abstraction locations:          132
Max number of predicates per location:    11
Avg number of predicates per location:    5
Total predicates per abstraction:         98235
Max number of predicates per abstraction: 11
Avg number of predicates per abstraction: 47.39
Number of irrelevant predicates:          31207 (32%)
Number of preds handled by boolean abs:   6243 (6%)
  Total number of models for allsat:      2939
  Max number of models for allsat:        12
  Avg number of models for allsat:        1.59

Time for post operator:                  2.969s
  Time for path formula creation:        2.790s
Time for strengthen operator:            0.252s
Time for prec operator:                 10.729s
  Time for abstraction:                 10.187s (Max:     0.027s, Count: 26958)
    Boolean abstraction:                 2.410s
    Solving time:                        1.954s (Max:     0.032s)
    Model enumeration time:              0.212s
    Time for BDD construction:           0.176s (Max:     0.012s)
Time for merge operator:                 0.451s
Time for coverage check:                 0.057s
  Time for BDD entailment checks:        0.042s
Total time for SMT solver (w/o itp):     2.166s

Number of path formula cache hits:   206717 (85%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     2.512s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               1877
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        6188 (count: 21873, min: 0, max: 634, avg: 0.28)
Time for BDD node cleanup:                             0.010s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.539s
  Time for transition matches:                         0.266s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.001s
Automaton transfers with branching:                0
Automaton transfer successors:                       199266 (count: 199266, min: 1, max: 1, avg: 1.00) [1 x 199266]

CPA algorithm statistics
------------------------
Number of iterations:            151860
Max size of waitlist:            16
Average size of waitlist:        8
Number of computed successors:   181466
Max successors for one state:    2
Number of times merged:          26954
Number of times stopped:         28827
Number of times breaked:         44

Total time for CPA algorithm:        21.796s (Max:     1.262s)
  Time for choose from waitlist:      0.208s
  Time for precision adjustment:     12.370s
  Time for transfer relation:         6.325s
  Time for merge operator:            1.032s
  Time for stop operator:             0.404s
  Time for adding to reached set:     0.465s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   44
Avg. length of target path (in blocks):                4662 (count: 44, min: 61, max: 161, avg: 105.95)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   3.579s
  Counterexample analysis:                             2.806s (Max:     0.129s, Calls: 44)
    Refinement sat check:                              1.282s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.003s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.136s
  Precision update:                                    0.080s
  ARG update:                                          0.472s

Length of refined path (in blocks):                    3856 (count: 44, min: 46, max: 139, avg: 87.64)
Number of affected states:                             3631 (count: 44, min: 45, max: 138, avg: 82.52)
Length (states) of path with itp 'true':                181 (count: 44, min: 0, max: 48, avg: 4.11)
Length (states) of path with itp non-trivial itp:      3631 (count: 44, min: 45, max: 138, avg: 82.52)
Length (states) of path with itp 'false':                44 (count: 44, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:         201 (count: 44, min: 0, max: 15, avg: 4.57)
Equal non-trivial interpolants along paths:            3386 (count: 44, min: 39, max: 136, avg: 76.95)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                44
Number of successful refinements:     44
Number of failed refinements:         0
Max. size of reached set before ref.: 7360
Max. size of reached set after ref.:  2456
Avg. size of reached set before ref.: 3550.09
Avg. size of reached set after ref.:  193.64

Total time for CEGAR algorithm:      25.740s
Time for refinements:                 3.937s
Average time for refinement:          0.089s
Max time for refinement:              0.156s

Code Coverage
-----------------------------
  Function coverage:      0.561
  Visited lines:          776
  Total lines:            1397
  Line coverage:          0.555
  Visited conditions:     306
  Total conditions:       488
  Condition coverage:     0.627

CPAchecker general statistics
-----------------------------
Number of program locations:     1914
Number of CFA edges:             2166
Number of relevant variables:    315
Number of functions:             107
Number of loops:                 4
Size of reached set:             4483
  Number of reached locations:   788 (41%)
    Avg states per location:     5
    Max states per location:     30 (at node N1523)
  Number of reached functions:   60 (56%)
  Number of partitions:          4464
    Avg size of partitions:      1
    Max size of partitions:      5 (with key [N441 (before lines 772-939), Function test called from node N86, stack depth 2 [78ec8f89], stack [main, test]])
  Number of target states:       0
  Size of final wait list        11

Time for analysis setup:          4.008s
  Time for loading CPAs:          0.830s
  Time for loading parser:        0.621s
  Time for CFA construction:      2.381s
    Time for parsing file(s):     0.773s
    Time for AST to CFA:          0.700s
    Time for CFA sanity check:    0.193s
    Time for post-processing:     0.575s
      Time for var class.:        0.299s
Time for Analysis:               25.740s
CPU time for analysis:           25.730s
Total time for CPAchecker:       29.752s
Total CPU time for CPAchecker:   29.740s
Time for statistics:              0.148s

Time for Garbage Collector:       0.817s (in 76 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 79MB (    75 MiB) max;     47MB (    45 MiB) avg;     87MB (    83 MiB) peak
Used non-heap memory:             37MB (    36 MiB) max;     34MB (    32 MiB) avg;     38MB (    36 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        39MB (    37 MiB) max;     36MB (    34 MiB) avg
Total process virtual memory:   8087MB (  7712 MiB) max;   8075MB (  7701 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
