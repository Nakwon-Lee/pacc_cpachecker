scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/email_spec9_product14_true-unreach-call_true-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_j7i_74xs/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 602: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 634: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 643: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 652: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 677: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 706: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 729: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 962: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1282: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1328: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1390: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1410: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1419: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1434: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1463: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1492: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1540: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1587: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1632: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1710: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1779: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1913: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1996: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2043: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2090: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2135: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2198: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2305: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2359: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2431: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2478: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2527: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2548: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2585: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2622: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2661: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2700: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2737: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2774: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2811: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2848: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2885: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1119: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            521660 (13% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  513934 (99%)
  Because of loop head:            7575 (1%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         151 (0%)
  Times precision was empty:       7639 (1%)
  Times precision was {false}:     283 (0%)
  Times result was cached:         483745 (93%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      29993 (6%)
  Times result was 'false':        18001 (3%)
Number of strengthen sat checks:   0
Number of coverage checks:         1496922
  BDD entailment checks:           330624
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       56
Number of predicates discovered:          99
Number of abstraction locations:          149
Max number of predicates per location:    32
Avg number of predicates per location:    13
Total predicates per abstraction:         5524202
Max number of predicates per abstraction: 33
Avg number of predicates per abstraction: 182.46
Number of irrelevant predicates:          1810987 (33%)
Number of preds handled by boolean abs:   372566 (7%)
  Total number of models for allsat:      2837227
  Max number of models for allsat:        6744
  Avg number of models for allsat:        94.60

Time for post operator:                 22.347s
  Time for path formula creation:       20.303s
Time for strengthen operator:            3.421s
Time for prec operator:                750.731s
  Time for abstraction:                743.634s (Max:     1.738s, Count: 521660)
    Boolean abstraction:               490.102s
    Solving time:                       73.127s (Max:     0.115s)
    Model enumeration time:            296.188s
    Time for BDD construction:         115.371s (Max:     0.303s)
Time for merge operator:                 3.814s
Time for coverage check:                 1.801s
  Time for BDD entailment checks:        1.603s
Total time for SMT solver (w/o itp):   369.315s

Number of path formula cache hits:   4419713 (88%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    15.116s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               159126
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                      468373 (count: 685550, min: 0, max: 4310, avg: 0.68)
Time for BDD node cleanup:                             0.191s
Time for BDD garbage collection:                       1.754s (in 302 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  6.818s
  Time for transition matches:                         2.821s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.001s
Automaton transfers with branching:                0
Automaton transfer successors:                      4099211 (count: 4099211, min: 1, max: 1, avg: 1.00) [1 x 4099211]

CPA algorithm statistics
------------------------
Number of iterations:            3117664
Max size of waitlist:            434
Average size of waitlist:        118
Number of computed successors:   3755564
Max successors for one state:    2
Number of times merged:          583149
Number of times stopped:         613394
Number of times breaked:         151

Total time for CPA algorithm:       867.800s (Max:   129.571s)
  Time for choose from waitlist:      1.402s
  Time for precision adjustment:    775.944s
  Time for transfer relation:        60.550s
  Time for merge operator:           10.390s
  Time for stop operator:             6.035s
  Time for adding to reached set:     4.611s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   151
Avg. length of target path (in blocks):               19239 (count: 151, min: 61, max: 182, avg: 127.41)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  23.235s
  Counterexample analysis:                            14.499s (Max:     0.316s, Calls: 151)
    Refinement sat check:                              4.790s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.014s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.266s
  Precision update:                                    0.203s
  ARG update:                                          8.039s

Length of refined path (in blocks):                   12569 (count: 151, min: 39, max: 160, avg: 83.24)
Number of affected states:                            10274 (count: 151, min: 1, max: 159, avg: 68.04)
Length (states) of path with itp 'true':               2144 (count: 151, min: 0, max: 57, avg: 14.20)
Length (states) of path with itp non-trivial itp:     10274 (count: 151, min: 1, max: 159, avg: 68.04)
Length (states) of path with itp 'false':               151 (count: 151, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:        1239 (count: 151, min: 0, max: 27, avg: 8.21)
Equal non-trivial interpolants along paths:            8884 (count: 151, min: 0, max: 157, avg: 58.83)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                151
Number of successful refinements:     151
Number of failed refinements:         0
Max. size of reached set before ref.: 176799
Max. size of reached set after ref.:  109113
Avg. size of reached set before ref.: 29079.69
Avg. size of reached set after ref.:  8523.28

Total time for CEGAR algorithm:     896.152s
Time for refinements:                27.054s
Average time for refinement:          0.179s
Max time for refinement:              0.914s

Code Coverage
-----------------------------
  Function coverage:      0.495
  Visited lines:          706
  Total lines:            1397
  Line coverage:          0.505
  Visited conditions:     280
  Total conditions:       488
  Condition coverage:     0.574

CPAchecker general statistics
-----------------------------
Number of program locations:     1914
Number of CFA edges:             2166
Number of relevant variables:    315
Number of functions:             107
Number of loops:                 4
Size of reached set:             20152
  Number of reached locations:   692 (36%)
    Avg states per location:     29
    Max states per location:     222 (at node N1523)
  Number of reached functions:   53 (50%)
  Number of partitions:          19996
    Avg size of partitions:      1
    Max size of partitions:      39 (with key [N441 (before lines 772-939), Function test called from node N86, stack depth 2 [52ad7e90], stack [main, test]])
  Number of target states:       0
  Size of final wait list        285

Time for analysis setup:          4.129s
  Time for loading CPAs:          0.904s
  Time for loading parser:        0.684s
  Time for CFA construction:      2.351s
    Time for parsing file(s):     0.670s
    Time for AST to CFA:          0.729s
    Time for CFA sanity check:    0.208s
    Time for post-processing:     0.559s
      Time for var class.:        0.296s
Time for Analysis:              896.152s
CPU time for analysis:          895.970s
Total time for CPAchecker:      900.285s
Total CPU time for CPAchecker:  900.090s
Time for statistics:              0.415s

Time for Garbage Collector:      46.194s (in 1261 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                673MB (   642 MiB) max;    290MB (   276 MiB) avg;    731MB (   697 MiB) peak
Used non-heap memory:             37MB (    36 MiB) max;     36MB (    34 MiB) avg;     38MB (    36 MiB) peak
Allocated heap memory:           817MB (   779 MiB) max;    428MB (   408 MiB) avg
Allocated non-heap memory:        39MB (    37 MiB) max;     39MB (    37 MiB) avg
Total process virtual memory:   9384MB (  8950 MiB) max;   8609MB (  8210 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
