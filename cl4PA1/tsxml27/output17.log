scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/email_spec9_product14_true-unreach-call_true-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_54uv0cv4/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 602: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 634: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 643: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 652: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 677: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 706: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 729: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 962: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1282: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1328: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1390: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1410: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1419: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1434: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1463: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1492: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1540: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1587: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1632: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1710: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1779: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1913: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1996: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2043: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2090: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2135: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2198: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2305: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2359: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2431: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2478: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2527: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2548: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2585: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2622: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2661: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2700: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2737: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2774: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2811: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2848: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2885: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1119: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            22878 (16% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  22634 (99%)
  Because of loop head:            199 (1%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         45 (0%)
  Times precision was empty:       1025 (4%)
  Times precision was {false}:     185 (1%)
  Times result was cached:         19847 (87%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      1821 (8%)
  Times result was 'false':        485 (2%)
Number of strengthen sat checks:   0
Number of coverage checks:         33380
  BDD entailment checks:           3122
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       56
Number of predicates discovered:          59
Number of abstraction locations:          124
Max number of predicates per location:    15
Avg number of predicates per location:    7
Total predicates per abstraction:         94084
Max number of predicates per abstraction: 15
Avg number of predicates per abstraction: 46.90
Number of irrelevant predicates:          25264 (27%)
Number of preds handled by boolean abs:   7606 (8%)
  Total number of models for allsat:      2907
  Max number of models for allsat:        16
  Avg number of models for allsat:        1.60

Time for post operator:                  3.394s
  Time for path formula creation:        3.275s
Time for strengthen operator:            0.207s
Time for prec operator:                 11.719s
  Time for abstraction:                 11.215s (Max:     0.032s, Count: 22878)
    Boolean abstraction:                 2.787s
    Solving time:                        2.149s (Max:     0.021s)
    Model enumeration time:              0.317s
    Time for BDD construction:           0.207s (Max:     0.012s)
Time for merge operator:                 0.416s
Time for coverage check:                 0.047s
  Time for BDD entailment checks:        0.041s
Total time for SMT solver (w/o itp):     2.466s

Number of path formula cache hits:   104387 (64%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     3.030s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               4461
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        8508 (count: 18073, min: 0, max: 1059, avg: 0.47)
Time for BDD node cleanup:                             0.037s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.515s
  Time for transition matches:                         0.185s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.000s
Automaton transfers with branching:                0
Automaton transfer successors:                       138979 (count: 138979, min: 1, max: 1, avg: 1.00) [1 x 138979]

CPA algorithm statistics
------------------------
Number of iterations:            104631
Max size of waitlist:            61
Average size of waitlist:        18
Number of computed successors:   122297
Max successors for one state:    2
Number of times merged:          15129
Number of times stopped:         16402
Number of times breaked:         45

Total time for CPA algorithm:        21.990s (Max:     1.503s)
  Time for choose from waitlist:      0.159s
  Time for precision adjustment:     13.072s
  Time for transfer relation:         6.246s
  Time for merge operator:            0.860s
  Time for stop operator:             0.327s
  Time for adding to reached set:     0.413s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   45
Avg. length of target path (in blocks):                5192 (count: 45, min: 68, max: 177, avg: 115.38)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   4.011s
  Counterexample analysis:                             3.292s (Max:     0.200s, Calls: 45)
    Refinement sat check:                              1.374s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.012s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.131s
  Precision update:                                    0.098s
  ARG update:                                          0.337s

Length of refined path (in blocks):                    3765 (count: 44, min: 39, max: 124, avg: 85.57)
Number of affected states:                             3448 (count: 44, min: 1, max: 123, avg: 78.36)
Length (states) of path with itp 'true':                273 (count: 44, min: 0, max: 48, avg: 6.20)
Length (states) of path with itp non-trivial itp:      3448 (count: 44, min: 1, max: 123, avg: 78.36)
Length (states) of path with itp 'false':                44 (count: 44, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:         231 (count: 44, min: 0, max: 21, avg: 5.25)
Equal non-trivial interpolants along paths:            3173 (count: 44, min: 0, max: 121, avg: 72.11)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                45
Number of successful refinements:     44
Number of failed refinements:         0
Max. size of reached set before ref.: 6226
Max. size of reached set after ref.:  1226
Avg. size of reached set before ref.: 2457.11
Avg. size of reached set after ref.:  117.25

Total time for CEGAR algorithm:      26.312s
Time for refinements:                 4.306s
Average time for refinement:          0.095s
Max time for refinement:              0.214s

Code Coverage
-----------------------------
  Function coverage:      0.551
  Visited lines:          688
  Total lines:            1397
  Line coverage:          0.492
  Visited conditions:     272
  Total conditions:       488
  Condition coverage:     0.557

CPAchecker general statistics
-----------------------------
Number of program locations:     1914
Number of CFA edges:             2166
Number of relevant variables:    315
Number of functions:             107
Number of loops:                 4
Size of reached set:             4390
  Number of reached locations:   698 (36%)
    Avg states per location:     6
    Max states per location:     44 (at node N286)
  Number of reached functions:   59 (55%)
  Number of partitions:          4354
    Avg size of partitions:      1
    Max size of partitions:      4 (with key [N441 (before lines 772-939), Function test called from node N86, stack depth 2 [1eba524d], stack [main, test]])
  Number of target states:       1
  Size of final wait list        31

Time for analysis setup:          3.947s
  Time for loading CPAs:          0.870s
  Time for loading parser:        0.732s
  Time for CFA construction:      2.172s
    Time for parsing file(s):     0.679s
    Time for AST to CFA:          0.619s
    Time for CFA sanity check:    0.193s
    Time for post-processing:     0.534s
      Time for var class.:        0.296s
Time for Analysis:               26.312s
CPU time for analysis:           26.310s
Total time for CPAchecker:       30.263s
Total CPU time for CPAchecker:   30.260s
Time for statistics:              0.164s

Time for Garbage Collector:       0.710s (in 65 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 81MB (    77 MiB) max;     47MB (    44 MiB) avg;     88MB (    84 MiB) peak
Used non-heap memory:             38MB (    36 MiB) max;     34MB (    32 MiB) avg;     38MB (    36 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        39MB (    37 MiB) max;     36MB (    34 MiB) avg
Total process virtual memory:   8086MB (  7712 MiB) max;   8074MB (  7700 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
