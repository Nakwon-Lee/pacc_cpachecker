scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/email_spec9_product14_true-unreach-call_true-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_izagqnmh/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 602: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 634: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 643: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 652: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 677: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 706: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 729: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 962: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1282: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1328: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1390: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1410: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1419: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1434: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1463: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1492: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1540: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1587: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1632: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1710: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1779: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1913: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1996: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2043: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2090: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2135: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2198: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2305: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2359: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2431: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2478: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2527: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2548: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2585: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2622: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2661: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2700: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2737: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2774: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2811: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2848: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2885: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1119: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            446449 (13% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  438589 (98%)
  Because of loop head:            7696 (2%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         164 (0%)
  Times precision was empty:       6127 (1%)
  Times precision was {false}:     240 (0%)
  Times result was cached:         410590 (92%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      29492 (7%)
  Times result was 'false':        16246 (4%)
Number of strengthen sat checks:   0
Number of coverage checks:         1282666
  BDD entailment checks:           304520
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       56
Number of predicates discovered:          90
Number of abstraction locations:          149
Max number of predicates per location:    31
Avg number of predicates per location:    13
Total predicates per abstraction:         4955479
Max number of predicates per abstraction: 31
Avg number of predicates per abstraction: 166.67
Number of irrelevant predicates:          1203099 (24%)
Number of preds handled by boolean abs:   391193 (8%)
  Total number of models for allsat:      851488
  Max number of models for allsat:        2520
  Avg number of models for allsat:        28.87

Time for post operator:                 15.811s
  Time for path formula creation:       14.318s
Time for strengthen operator:            2.710s
Time for prec operator:                407.270s
  Time for abstraction:                401.635s (Max:     1.063s, Count: 446449)
    Boolean abstraction:               189.478s
    Solving time:                       63.222s (Max:     0.035s)
    Model enumeration time:             82.034s
    Time for BDD construction:          38.570s (Max:     1.037s)
Time for merge operator:                 2.799s
Time for coverage check:                 1.085s
  Time for BDD entailment checks:        0.938s
Total time for SMT solver (w/o itp):   145.256s

Number of path formula cache hits:   3831988 (90%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    10.302s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               236995
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                      501339 (count: 666761, min: 0, max: 3989, avg: 0.75)
Time for BDD node cleanup:                             0.234s
Time for BDD garbage collection:                       0.797s (in 123 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  4.710s
  Time for transition matches:                         2.462s
  Time for transition assertions:                      0.001s
  Time for transition actions:                         0.002s
Automaton transfers with branching:                0
Automaton transfer successors:                      3466306 (count: 3466306, min: 1, max: 1, avg: 1.00) [1 x 3466306]

CPA algorithm statistics
------------------------
Number of iterations:            2646420
Max size of waitlist:            190
Average size of waitlist:        52
Number of computed successors:   3184796
Max successors for one state:    2
Number of times merged:          489073
Number of times stopped:         518678
Number of times breaked:         164

Total time for CPA algorithm:       499.403s (Max:    34.090s)
  Time for choose from waitlist:      1.177s
  Time for precision adjustment:    426.011s
  Time for transfer relation:        47.362s
  Time for merge operator:            8.150s
  Time for stop operator:             4.616s
  Time for adding to reached set:     4.415s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   164
Avg. length of target path (in blocks):               22154 (count: 164, min: 61, max: 182, avg: 135.09)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  23.509s
  Counterexample analysis:                            17.812s (Max:     0.352s, Calls: 164)
    Refinement sat check:                              5.784s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.012s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.274s
  Precision update:                                    0.231s
  ARG update:                                          4.936s

Length of refined path (in blocks):                   13369 (count: 164, min: 39, max: 160, avg: 81.52)
Number of affected states:                            10495 (count: 164, min: 1, max: 159, avg: 63.99)
Length (states) of path with itp 'true':               2710 (count: 164, min: 0, max: 70, avg: 16.52)
Length (states) of path with itp non-trivial itp:     10495 (count: 164, min: 1, max: 159, avg: 63.99)
Length (states) of path with itp 'false':               164 (count: 164, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:        1192 (count: 164, min: 0, max: 31, avg: 7.27)
Equal non-trivial interpolants along paths:            9139 (count: 164, min: 0, max: 157, avg: 55.73)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                164
Number of successful refinements:     164
Number of failed refinements:         0
Max. size of reached set before ref.: 102676
Max. size of reached set after ref.:  69260
Avg. size of reached set before ref.: 25464.53
Avg. size of reached set after ref.:  9854.52

Total time for CEGAR algorithm:     527.526s
Time for refinements:                26.815s
Average time for refinement:          0.163s
Max time for refinement:              0.521s

Code Coverage
-----------------------------
  Function coverage:      0.561
  Visited lines:          778
  Total lines:            1397
  Line coverage:          0.557
  Visited conditions:     308
  Total conditions:       488
  Condition coverage:     0.631

CPAchecker general statistics
-----------------------------
Number of program locations:     1914
Number of CFA edges:             2166
Number of relevant variables:    315
Number of functions:             107
Number of loops:                 4
Size of reached set:             89832
  Number of reached locations:   792 (41%)
    Avg states per location:     113
    Max states per location:     506 (at node N1523)
  Number of reached functions:   60 (56%)
  Number of partitions:          89150
    Avg size of partitions:      1
    Max size of partitions:      53 (with key [N441 (before lines 772-939), Function test called from node N86, stack depth 2 [1a1e6a3b], stack [main, test]])
  Number of target states:       0

Time for analysis setup:          4.053s
  Time for loading CPAs:          0.833s
  Time for loading parser:        0.741s
  Time for CFA construction:      2.280s
    Time for parsing file(s):     0.659s
    Time for AST to CFA:          0.709s
    Time for CFA sanity check:    0.216s
    Time for post-processing:     0.550s
      Time for var class.:        0.293s
Time for Analysis:              527.526s
CPU time for analysis:          527.460s
Time for analyzing result:        0.071s
Total time for CPAchecker:      531.584s
Total CPU time for CPAchecker:  531.520s
Time for statistics:              0.999s

Time for Garbage Collector:      31.170s (in 1078 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                498MB (   475 MiB) max;    222MB (   212 MiB) avg;    515MB (   491 MiB) peak
Used non-heap memory:             37MB (    36 MiB) max;     36MB (    34 MiB) avg;     38MB (    36 MiB) peak
Allocated heap memory:           541MB (   516 MiB) max;    328MB (   313 MiB) avg
Allocated non-heap memory:        39MB (    37 MiB) max;     39MB (    37 MiB) avg
Total process virtual memory:   9114MB (  8692 MiB) max;   8475MB (  8083 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
