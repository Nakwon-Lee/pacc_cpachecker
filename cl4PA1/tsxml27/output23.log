scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/email_spec9_product14_true-unreach-call_true-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_bdyomjal/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 602: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 634: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 643: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 652: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 677: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 706: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 729: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 962: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1282: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1328: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1390: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1410: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1419: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1434: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1463: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1492: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1540: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1587: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1632: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1710: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1779: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1913: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1996: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2043: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2090: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2135: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2198: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2305: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2359: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2431: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2478: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2527: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2548: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2585: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2622: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2661: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2700: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2737: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2774: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2811: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2848: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2885: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1119: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            27786 (15% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  27283 (98%)
  Because of loop head:            453 (2%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         50 (0%)
  Times precision was empty:       4468 (16%)
  Times precision was {false}:     212 (1%)
  Times result was cached:         21808 (78%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      1298 (5%)
  Times result was 'false':        373 (1%)
Number of strengthen sat checks:   0
Number of coverage checks:         52596
  BDD entailment checks:           4542
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       56
Number of predicates discovered:          26
Number of abstraction locations:          139
Max number of predicates per location:    9
Avg number of predicates per location:    4
Total predicates per abstraction:         97325
Max number of predicates per abstraction: 9
Avg number of predicates per abstraction: 64.45
Number of irrelevant predicates:          39365 (40%)
Number of preds handled by boolean abs:   3677 (4%)
  Total number of models for allsat:      1799
  Max number of models for allsat:        12
  Avg number of models for allsat:        1.39

Time for post operator:                  3.243s
  Time for path formula creation:        3.049s
Time for strengthen operator:            0.260s
Time for prec operator:                  9.875s
  Time for abstraction:                  9.280s (Max:     0.027s, Count: 27786)
    Boolean abstraction:                 1.760s
    Solving time:                        1.415s (Max:     0.037s)
    Model enumeration time:              0.213s
    Time for BDD construction:           0.149s (Max:     0.012s)
Time for merge operator:                 0.461s
Time for coverage check:                 0.061s
  Time for BDD entailment checks:        0.048s
Total time for SMT solver (w/o itp):     1.628s

Number of path formula cache hits:   182272 (79%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     2.773s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               833
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        3978 (count: 18455, min: 0, max: 550, avg: 0.22)
Time for BDD node cleanup:                             0.031s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.566s
  Time for transition matches:                         0.263s
  Time for transition assertions:                      0.001s
  Time for transition actions:                         0.001s
Automaton transfers with branching:                0
Automaton transfer successors:                       191264 (count: 191264, min: 1, max: 1, avg: 1.00) [1 x 191264]

CPA algorithm statistics
------------------------
Number of iterations:            145423
Max size of waitlist:            23
Average size of waitlist:        13
Number of computed successors:   172309
Max successors for one state:    2
Number of times merged:          24027
Number of times stopped:         25833
Number of times breaked:         50

Total time for CPA algorithm:        21.544s (Max:     1.428s)
  Time for choose from waitlist:      0.171s
  Time for precision adjustment:     11.613s
  Time for transfer relation:         6.730s
  Time for merge operator:            0.988s
  Time for stop operator:             0.503s
  Time for adding to reached set:     0.387s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   50
Avg. length of target path (in blocks):                5159 (count: 50, min: 61, max: 124, avg: 103.18)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   3.881s
  Counterexample analysis:                             3.026s (Max:     0.132s, Calls: 50)
    Refinement sat check:                              1.392s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.005s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.155s
  Precision update:                                    0.106s
  ARG update:                                          0.504s

Length of refined path (in blocks):                    4208 (count: 50, min: 46, max: 121, avg: 84.16)
Number of affected states:                             4025 (count: 50, min: 45, max: 116, avg: 80.50)
Length (states) of path with itp 'true':                133 (count: 50, min: 0, max: 48, avg: 2.66)
Length (states) of path with itp non-trivial itp:      4025 (count: 50, min: 45, max: 116, avg: 80.50)
Length (states) of path with itp 'false':                50 (count: 50, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:         225 (count: 50, min: 0, max: 15, avg: 4.50)
Equal non-trivial interpolants along paths:            3750 (count: 50, min: 39, max: 105, avg: 75.00)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                50
Number of successful refinements:     50
Number of failed refinements:         0
Max. size of reached set before ref.: 4700
Max. size of reached set after ref.:  1926
Avg. size of reached set before ref.: 2945.78
Avg. size of reached set after ref.:  89.76

Total time for CEGAR algorithm:      25.756s
Time for refinements:                 4.209s
Average time for refinement:          0.084s
Max time for refinement:              0.172s

Code Coverage
-----------------------------
  Function coverage:      0.561
  Visited lines:          776
  Total lines:            1397
  Line coverage:          0.555
  Visited conditions:     306
  Total conditions:       488
  Condition coverage:     0.627

CPAchecker general statistics
-----------------------------
Number of program locations:     1914
Number of CFA edges:             2166
Number of relevant variables:    315
Number of functions:             107
Number of loops:                 4
Size of reached set:             3302
  Number of reached locations:   788 (41%)
    Avg states per location:     4
    Max states per location:     22 (at node N286)
  Number of reached functions:   60 (56%)
  Number of partitions:          3260
    Avg size of partitions:      1
    Max size of partitions:      4 (with key [N232 (before line 486), Function outgoing__wrappee__Encrypt called from node N248, stack depth 6 [6fe1a369], stack [main, test, bobToRjh, sendEmail, outgoing, outgoing__wrappee__Encrypt]])
  Number of target states:       0
  Size of final wait list        17

Time for analysis setup:          4.014s
  Time for loading CPAs:          0.823s
  Time for loading parser:        0.706s
  Time for CFA construction:      2.324s
    Time for parsing file(s):     0.652s
    Time for AST to CFA:          0.676s
    Time for CFA sanity check:    0.193s
    Time for post-processing:     0.564s
      Time for var class.:        0.316s
Time for Analysis:               25.756s
CPU time for analysis:           25.760s
Total time for CPAchecker:       29.777s
Total CPU time for CPAchecker:   29.780s
Time for statistics:              0.115s

Time for Garbage Collector:       0.805s (in 73 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 76MB (    73 MiB) max;     46MB (    44 MiB) avg;     81MB (    77 MiB) peak
Used non-heap memory:             37MB (    35 MiB) max;     33MB (    32 MiB) avg;     38MB (    36 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        39MB (    37 MiB) max;     36MB (    34 MiB) avg
Total process virtual memory:   8087MB (  7712 MiB) max;   8074MB (  7700 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
