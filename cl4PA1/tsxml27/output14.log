scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/email_spec9_product14_true-unreach-call_true-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_cz9dhu3o/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 602: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 634: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 643: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 652: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 677: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 706: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 729: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 962: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1282: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1328: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1390: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1410: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1419: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1434: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1463: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1492: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1540: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1587: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1632: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1710: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1779: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1913: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1996: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2043: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2090: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2135: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2198: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2305: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2359: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2431: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2478: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2527: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2548: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2585: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2622: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2661: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2700: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2737: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2774: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2811: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2848: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2885: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1119: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            20801 (17% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  20584 (99%)
  Because of loop head:            174 (1%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         43 (0%)
  Times precision was empty:       962 (5%)
  Times precision was {false}:     185 (1%)
  Times result was cached:         17929 (86%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      1725 (8%)
  Times result was 'false':        398 (2%)
Number of strengthen sat checks:   0
Number of coverage checks:         30055
  BDD entailment checks:           2839
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       56
Number of predicates discovered:          59
Number of abstraction locations:          124
Max number of predicates per location:    15
Avg number of predicates per location:    7
Total predicates per abstraction:         81772
Max number of predicates per abstraction: 15
Avg number of predicates per abstraction: 42.81
Number of irrelevant predicates:          22539 (28%)
Number of preds handled by boolean abs:   6996 (9%)
  Total number of models for allsat:      2733
  Max number of models for allsat:        16
  Avg number of models for allsat:        1.58

Time for post operator:                  3.437s
  Time for path formula creation:        3.254s
Time for strengthen operator:            0.253s
Time for prec operator:                 10.840s
  Time for abstraction:                 10.273s (Max:     0.021s, Count: 20801)
    Boolean abstraction:                 2.600s
    Solving time:                        2.029s (Max:     0.015s)
    Model enumeration time:              0.270s
    Time for BDD construction:           0.188s (Max:     0.013s)
Time for merge operator:                 0.400s
Time for coverage check:                 0.055s
  Time for BDD entailment checks:        0.053s
Total time for SMT solver (w/o itp):     2.299s

Number of path formula cache hits:   99008 (67%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     3.011s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               4170
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        8122 (count: 17047, min: 0, max: 1147, avg: 0.48)
Time for BDD node cleanup:                             0.017s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.514s
  Time for transition matches:                         0.234s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.000s
Automaton transfers with branching:                0
Automaton transfer successors:                       125773 (count: 125773, min: 1, max: 1, avg: 1.00) [1 x 125773]

CPA algorithm statistics
------------------------
Number of iterations:            94663
Max size of waitlist:            47
Average size of waitlist:        17
Number of computed successors:   110538
Max successors for one state:    2
Number of times merged:          13608
Number of times stopped:         14773
Number of times breaked:         43

Total time for CPA algorithm:        21.492s (Max:     1.399s)
  Time for choose from waitlist:      0.192s
  Time for precision adjustment:     12.210s
  Time for transfer relation:         6.528s
  Time for merge operator:            0.791s
  Time for stop operator:             0.317s
  Time for adding to reached set:     0.437s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   43
Avg. length of target path (in blocks):                4863 (count: 43, min: 68, max: 159, avg: 113.09)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   3.910s
  Counterexample analysis:                             3.264s (Max:     0.188s, Calls: 43)
    Refinement sat check:                              1.413s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.007s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.133s
  Precision update:                                    0.090s
  ARG update:                                          0.323s

Length of refined path (in blocks):                    3620 (count: 42, min: 39, max: 124, avg: 86.19)
Number of affected states:                             3351 (count: 42, min: 1, max: 123, avg: 79.79)
Length (states) of path with itp 'true':                227 (count: 42, min: 0, max: 48, avg: 5.40)
Length (states) of path with itp non-trivial itp:      3351 (count: 42, min: 1, max: 123, avg: 79.79)
Length (states) of path with itp 'false':                42 (count: 42, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:         210 (count: 42, min: 0, max: 21, avg: 5.00)
Equal non-trivial interpolants along paths:            3099 (count: 42, min: 0, max: 121, avg: 73.79)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                43
Number of successful refinements:     42
Number of failed refinements:         0
Max. size of reached set before ref.: 5028
Max. size of reached set after ref.:  1226
Avg. size of reached set before ref.: 2324.51
Avg. size of reached set after ref.:  109.19

Total time for CEGAR algorithm:      25.715s
Time for refinements:                 4.209s
Average time for refinement:          0.097s
Max time for refinement:              0.204s

Code Coverage
-----------------------------
  Function coverage:      0.551
  Visited lines:          688
  Total lines:            1397
  Line coverage:          0.492
  Visited conditions:     272
  Total conditions:       488
  Condition coverage:     0.557

CPAchecker general statistics
-----------------------------
Number of program locations:     1914
Number of CFA edges:             2166
Number of relevant variables:    315
Number of functions:             107
Number of loops:                 4
Size of reached set:             4297
  Number of reached locations:   698 (36%)
    Avg states per location:     6
    Max states per location:     44 (at node N286)
  Number of reached functions:   59 (55%)
  Number of partitions:          4262
    Avg size of partitions:      1
    Max size of partitions:      4 (with key [N441 (before lines 772-939), Function test called from node N86, stack depth 2 [1479be22], stack [main, test]])
  Number of target states:       1
  Size of final wait list        31

Time for analysis setup:          4.054s
  Time for loading CPAs:          0.867s
  Time for loading parser:        0.699s
  Time for CFA construction:      2.298s
    Time for parsing file(s):     0.684s
    Time for AST to CFA:          0.665s
    Time for CFA sanity check:    0.234s
    Time for post-processing:     0.574s
      Time for var class.:        0.316s
Time for Analysis:               25.715s
CPU time for analysis:           25.720s
Total time for CPAchecker:       29.773s
Total CPU time for CPAchecker:   29.770s
Time for statistics:              0.145s

Time for Garbage Collector:       0.624s (in 58 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 78MB (    74 MiB) max;     46MB (    44 MiB) avg;     81MB (    78 MiB) peak
Used non-heap memory:             37MB (    36 MiB) max;     34MB (    32 MiB) avg;     38MB (    36 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        39MB (    37 MiB) max;     36MB (    34 MiB) avg
Total process virtual memory:   8087MB (  7712 MiB) max;   8074MB (  7700 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
