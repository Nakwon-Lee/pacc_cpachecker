scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/email_spec9_product14_true-unreach-call_true-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_oamcu7i6/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 602: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 634: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 643: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 652: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 677: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 706: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 729: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 962: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1282: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1328: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1390: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1410: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1419: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1434: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1463: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1492: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1540: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1587: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1632: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1710: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1779: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1913: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1996: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2043: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2090: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2135: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2198: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2305: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2359: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2431: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2478: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2527: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2548: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2585: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2622: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2661: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2700: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2737: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2774: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2811: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2848: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2885: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1119: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            504570 (13% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  495099 (98%)
  Because of loop head:            9332 (2%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         139 (0%)
  Times precision was empty:       6745 (1%)
  Times precision was {false}:     251 (0%)
  Times result was cached:         467811 (93%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      29763 (6%)
  Times result was 'false':        18992 (4%)
Number of strengthen sat checks:   0
Number of coverage checks:         1541905
  BDD entailment checks:           417407
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       56
Number of predicates discovered:          100
Number of abstraction locations:          149
Max number of predicates per location:    34
Avg number of predicates per location:    14
Total predicates per abstraction:         5951550
Max number of predicates per abstraction: 34
Avg number of predicates per abstraction: 198.29
Number of irrelevant predicates:          1535637 (26%)
Number of preds handled by boolean abs:   421675 (7%)
  Total number of models for allsat:      2826968
  Max number of models for allsat:        5324
  Avg number of models for allsat:        94.98

Time for post operator:                 16.533s
  Time for path formula creation:       14.792s
Time for strengthen operator:            3.669s
Time for prec operator:                763.971s
  Time for abstraction:                757.898s (Max:     1.641s, Count: 504570)
    Boolean abstraction:               502.478s
    Solving time:                       72.236s (Max:     0.033s)
    Model enumeration time:            285.421s
    Time for BDD construction:         138.440s (Max:     0.921s)
Time for merge operator:                 2.929s
Time for coverage check:                 2.420s
  Time for BDD entailment checks:        2.194s
Total time for SMT solver (w/o itp):   357.657s

Number of path formula cache hits:   4463539 (91%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    10.303s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               138480
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                      644719 (count: 840385, min: 0, max: 4277, avg: 0.77)
Time for BDD node cleanup:                             0.293s
Time for BDD garbage collection:                       3.363s (in 497 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  5.898s
  Time for transition matches:                         3.562s
  Time for transition assertions:                      0.001s
  Time for transition actions:                         0.002s
Automaton transfers with branching:                0
Automaton transfer successors:                      3952904 (count: 3952904, min: 1, max: 1, avg: 1.00) [1 x 3952904]

CPA algorithm statistics
------------------------
Number of iterations:            3019881
Max size of waitlist:            90
Average size of waitlist:        27
Number of computed successors:   3637335
Max successors for one state:    2
Number of times merged:          562249
Number of times stopped:         597291
Number of times breaked:         139

Total time for CPA algorithm:       868.193s (Max:    56.175s)
  Time for choose from waitlist:      1.306s
  Time for precision adjustment:    786.373s
  Time for transfer relation:        52.262s
  Time for merge operator:            8.961s
  Time for stop operator:             6.256s
  Time for adding to reached set:     4.982s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   139
Avg. length of target path (in blocks):               18351 (count: 139, min: 61, max: 165, avg: 132.02)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  23.284s
  Counterexample analysis:                            15.691s (Max:     0.333s, Calls: 139)
    Refinement sat check:                              5.101s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.016s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.197s
  Precision update:                                    0.204s
  ARG update:                                          6.909s

Length of refined path (in blocks):                   11764 (count: 139, min: 39, max: 148, avg: 84.63)
Number of affected states:                            10054 (count: 139, min: 1, max: 140, avg: 72.33)
Length (states) of path with itp 'true':               1571 (count: 139, min: 0, max: 70, avg: 11.30)
Length (states) of path with itp non-trivial itp:     10054 (count: 139, min: 1, max: 140, avg: 72.33)
Length (states) of path with itp 'false':               139 (count: 139, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:        1138 (count: 139, min: 0, max: 27, avg: 8.19)
Equal non-trivial interpolants along paths:            8777 (count: 139, min: 0, max: 136, avg: 63.14)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                139
Number of successful refinements:     139
Number of failed refinements:         0
Max. size of reached set before ref.: 106308
Max. size of reached set after ref.:  79838
Avg. size of reached set before ref.: 32085.71
Avg. size of reached set after ref.:  10449.65

Total time for CEGAR algorithm:     896.181s
Time for refinements:                26.688s
Average time for refinement:          0.192s
Max time for refinement:              0.593s

Code Coverage
-----------------------------
  Function coverage:      0.561
  Visited lines:          776
  Total lines:            1397
  Line coverage:          0.555
  Visited conditions:     306
  Total conditions:       488
  Condition coverage:     0.627

CPAchecker general statistics
-----------------------------
Number of program locations:     1914
Number of CFA edges:             2166
Number of relevant variables:    315
Number of functions:             107
Number of loops:                 4
Size of reached set:             13640
  Number of reached locations:   788 (41%)
    Avg states per location:     17
    Max states per location:     116 (at node N1523)
  Number of reached functions:   60 (56%)
  Number of partitions:          13553
    Avg size of partitions:      1
    Max size of partitions:      27 (with key [N441 (before lines 772-939), Function test called from node N86, stack depth 2 [32d37d0e], stack [main, test]])
  Number of target states:       0
  Size of final wait list        24

Time for analysis setup:          4.045s
  Time for loading CPAs:          0.898s
  Time for loading parser:        0.745s
  Time for CFA construction:      2.218s
    Time for parsing file(s):     0.671s
    Time for AST to CFA:          0.669s
    Time for CFA sanity check:    0.211s
    Time for post-processing:     0.509s
      Time for var class.:        0.257s
Time for Analysis:              896.181s
CPU time for analysis:          896.020s
Total time for CPAchecker:      900.236s
Total CPU time for CPAchecker:  900.060s
Time for statistics:              0.303s

Time for Garbage Collector:      42.493s (in 1359 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                443MB (   422 MiB) max;    253MB (   241 MiB) avg;    454MB (   433 MiB) peak
Used non-heap memory:             37MB (    35 MiB) max;     36MB (    34 MiB) avg;     37MB (    36 MiB) peak
Allocated heap memory:           457MB (   436 MiB) max;    365MB (   348 MiB) avg
Allocated non-heap memory:        39MB (    37 MiB) max;     39MB (    37 MiB) avg
Total process virtual memory:   9323MB (  8891 MiB) max;   8628MB (  8229 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
