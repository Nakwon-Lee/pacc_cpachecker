scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/email_spec9_product14_true-unreach-call_true-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_z7z53_mo/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 602: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 634: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 643: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 652: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 677: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 706: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 729: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 962: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1282: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1328: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1390: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1410: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1419: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1434: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1463: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1492: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1540: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1587: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1632: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1710: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1779: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1913: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1996: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2043: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2090: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2135: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2198: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2305: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2359: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2431: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2478: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2527: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2548: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2585: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2622: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2661: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2700: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2737: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2774: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2811: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2848: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2885: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1119: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            25783 (13% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  25318 (98%)
  Because of loop head:            419 (2%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         46 (0%)
  Times precision was empty:       2547 (10%)
  Times precision was {false}:     246 (1%)
  Times result was cached:         22069 (86%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      921 (4%)
  Times result was 'false':        315 (1%)
Number of strengthen sat checks:   0
Number of coverage checks:         56477
  BDD entailment checks:           2307
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       56
Number of predicates discovered:          21
Number of abstraction locations:          142
Max number of predicates per location:    8
Avg number of predicates per location:    3
Total predicates per abstraction:         53291
Max number of predicates per abstraction: 8
Avg number of predicates per abstraction: 45.66
Number of irrelevant predicates:          19458 (37%)
Number of preds handled by boolean abs:   2009 (4%)
  Total number of models for allsat:      1172
  Max number of models for allsat:        12
  Avg number of models for allsat:        1.27

Time for post operator:                  3.608s
  Time for path formula creation:        3.362s
Time for strengthen operator:            0.310s
Time for prec operator:                  8.080s
  Time for abstraction:                  7.389s (Max:     0.027s, Count: 25783)
    Boolean abstraction:                 1.443s
    Solving time:                        1.304s (Max:     0.039s)
    Model enumeration time:              0.132s
    Time for BDD construction:           0.129s (Max:     0.010s)
Time for merge operator:                 0.618s
Time for coverage check:                 0.059s
  Time for BDD entailment checks:        0.041s
Total time for SMT solver (w/o itp):     1.437s

Number of path formula cache hits:   198434 (83%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     3.002s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               501
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        2455 (count: 12001, min: 0, max: 503, avg: 0.20)
Time for BDD node cleanup:                             0.001s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.685s
  Time for transition matches:                         0.324s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.002s
Automaton transfers with branching:                0
Automaton transfer successors:                       198263 (count: 198263, min: 1, max: 1, avg: 1.00) [1 x 198263]

CPA algorithm statistics
------------------------
Number of iterations:            150420
Max size of waitlist:            50
Average size of waitlist:        19
Number of computed successors:   180088
Max successors for one state:    2
Number of times merged:          27085
Number of times stopped:         28493
Number of times breaked:         46

Total time for CPA algorithm:        21.569s (Max:     1.452s)
  Time for choose from waitlist:      0.241s
  Time for precision adjustment:     10.119s
  Time for transfer relation:         7.630s
  Time for merge operator:            1.293s
  Time for stop operator:             0.503s
  Time for adding to reached set:     0.579s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   46
Avg. length of target path (in blocks):                4623 (count: 46, min: 61, max: 128, avg: 100.50)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   4.182s
  Counterexample analysis:                             3.303s (Max:     0.144s, Calls: 46)
    Refinement sat check:                              1.399s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.007s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.122s
  Precision update:                                    0.066s
  ARG update:                                          0.556s

Length of refined path (in blocks):                    4011 (count: 46, min: 46, max: 117, avg: 87.20)
Number of affected states:                             3558 (count: 46, min: 45, max: 116, avg: 77.35)
Length (states) of path with itp 'true':                407 (count: 46, min: 0, max: 37, avg: 8.85)
Length (states) of path with itp non-trivial itp:      3558 (count: 46, min: 45, max: 116, avg: 77.35)
Length (states) of path with itp 'false':                46 (count: 46, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:         345 (count: 46, min: 0, max: 15, avg: 7.50)
Equal non-trivial interpolants along paths:            3167 (count: 46, min: 39, max: 105, avg: 68.85)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                46
Number of successful refinements:     46
Number of failed refinements:         0
Max. size of reached set before ref.: 4835
Max. size of reached set after ref.:  3063
Avg. size of reached set before ref.: 3920.54
Avg. size of reached set after ref.:  665.39

Total time for CEGAR algorithm:      26.230s
Time for refinements:                 4.637s
Average time for refinement:          0.100s
Max time for refinement:              0.172s

Code Coverage
-----------------------------
  Function coverage:      0.533
  Visited lines:          706
  Total lines:            1397
  Line coverage:          0.505
  Visited conditions:     280
  Total conditions:       488
  Condition coverage:     0.574

CPAchecker general statistics
-----------------------------
Number of program locations:     1914
Number of CFA edges:             2166
Number of relevant variables:    315
Number of functions:             107
Number of loops:                 4
Size of reached set:             1543
  Number of reached locations:   702 (37%)
    Avg states per location:     2
    Max states per location:     10 (at node N1523)
  Number of reached functions:   57 (53%)
  Number of partitions:          1542
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N441 (before lines 772-939), Function test called from node N86, stack depth 2 [36dc0b99], stack [main, test]])
  Number of target states:       0
  Size of final wait list        18

Time for analysis setup:          4.015s
  Time for loading CPAs:          0.754s
  Time for loading parser:        0.694s
  Time for CFA construction:      2.373s
    Time for parsing file(s):     0.676s
    Time for AST to CFA:          0.694s
    Time for CFA sanity check:    0.199s
    Time for post-processing:     0.600s
      Time for var class.:        0.331s
Time for Analysis:               26.230s
CPU time for analysis:           26.230s
Total time for CPAchecker:       30.249s
Total CPU time for CPAchecker:   30.250s
Time for statistics:              0.116s

Time for Garbage Collector:       0.776s (in 67 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 75MB (    72 MiB) max;     47MB (    45 MiB) avg;     79MB (    75 MiB) peak
Used non-heap memory:             37MB (    36 MiB) max;     33MB (    32 MiB) avg;     38MB (    36 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        39MB (    37 MiB) max;     36MB (    34 MiB) avg
Total process virtual memory:   8087MB (  7712 MiB) max;   8074MB (  7700 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
