scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/email_spec7_product27_true-unreach-call_true-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_2mkmgxzl/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 480: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 512: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 521: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 530: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 555: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 689: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 727: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 748: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 785: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 822: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 861: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 900: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 937: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 974: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1011: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1048: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1085: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1425: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1448: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1473: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1502: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1550: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1597: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1642: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1720: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1789: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1923: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2006: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2053: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2100: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2145: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2208: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2315: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2369: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2441: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2488: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2828: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2874: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2964: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2973: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2988: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2665: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            32643 (16% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  32419 (99%)
  Because of loop head:            93 (0%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         131 (0%)
  Times precision was empty:       15557 (48%)
  Times precision was {false}:     253 (1%)
  Times result was cached:         16693 (51%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      140 (0%)
  Times result was 'false':        559 (2%)
Number of strengthen sat checks:   0
Number of coverage checks:         44910
  BDD entailment checks:           2602
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       66
Number of predicates discovered:          5
Number of abstraction locations:          145
Max number of predicates per location:    2
Avg number of predicates per location:    1
Total predicates per abstraction:         19261
Max number of predicates per abstraction: 2
Avg number of predicates per abstraction: 49.01
Number of irrelevant predicates:          16421 (85%)
Number of preds handled by boolean abs:   142 (1%)
  Total number of models for allsat:      141
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.01

Time for post operator:                  2.630s
  Time for path formula creation:        2.429s
Time for strengthen operator:            0.292s
Time for prec operator:                  3.635s
  Time for abstraction:                  2.972s (Max:     0.022s, Count: 32643)
    Boolean abstraction:                 0.198s
    Solving time:                        0.413s (Max:     0.011s)
    Model enumeration time:              0.013s
    Time for BDD construction:           0.017s (Max:     0.005s)
Time for merge operator:                 0.434s
Time for coverage check:                 0.038s
  Time for BDD entailment checks:        0.032s
Total time for SMT solver (w/o itp):     0.426s

Number of path formula cache hits:   225986 (92%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     2.171s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               204
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         281 (count: 20278, min: 0, max: 88, avg: 0.01)
Time for BDD node cleanup:                             0.013s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.650s
  Time for transition matches:                         0.304s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.003s
Automaton transfers with branching:                0
Automaton transfer successors:                       198327 (count: 198327, min: 1, max: 1, avg: 1.00) [1 x 198327]

CPA algorithm statistics
------------------------
Number of iterations:            147421
Max size of waitlist:            37
Average size of waitlist:        18
Number of computed successors:   171508
Max successors for one state:    2
Number of times merged:          21154
Number of times stopped:         23207
Number of times breaked:         131

Total time for CPA algorithm:        14.863s (Max:     1.190s)
  Time for choose from waitlist:      0.203s
  Time for precision adjustment:      5.213s
  Time for transfer relation:         6.588s
  Time for merge operator:            0.884s
  Time for stop operator:             0.393s
  Time for adding to reached set:     0.447s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   131
Avg. length of target path (in blocks):               14604 (count: 131, min: 65, max: 188, avg: 111.48)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   7.022s
  Counterexample analysis:                             6.092s (Max:     0.125s, Calls: 131)
    Refinement sat check:                              2.806s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.012s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.069s
  Precision update:                                    0.122s
  ARG update:                                          0.514s

Length of refined path (in blocks):                   14102 (count: 131, min: 64, max: 187, avg: 107.65)
Number of affected states:                             1387 (count: 131, min: 1, max: 104, avg: 10.59)
Length (states) of path with itp 'true':              12584 (count: 131, min: 0, max: 185, avg: 96.06)
Length (states) of path with itp non-trivial itp:      1387 (count: 131, min: 1, max: 104, avg: 10.59)
Length (states) of path with itp 'false':               131 (count: 131, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:          13 (count: 131, min: 0, max: 1, avg: 0.10)
Equal non-trivial interpolants along paths:            1243 (count: 131, min: 0, max: 102, avg: 9.49)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                131
Number of successful refinements:     131
Number of failed refinements:         0
Max. size of reached set before ref.: 5945
Max. size of reached set after ref.:  3814
Avg. size of reached set before ref.: 2977.61
Avg. size of reached set after ref.:  1889.60

Total time for CEGAR algorithm:      22.942s
Time for refinements:                 7.780s
Average time for refinement:          0.059s
Max time for refinement:              0.154s

Code Coverage
-----------------------------
  Function coverage:      0.719
  Visited lines:          929
  Total lines:            1421
  Line coverage:          0.654
  Visited conditions:     352
  Total conditions:       490
  Condition coverage:     0.718

CPAchecker general statistics
-----------------------------
Number of program locations:     1960
Number of CFA edges:             2222
Number of relevant variables:    353
Number of functions:             114
Number of loops:                 4
Size of reached set:             5214
  Number of reached locations:   965 (49%)
    Avg states per location:     5
    Max states per location:     45 (at node N373)
  Number of reached functions:   82 (72%)
  Number of partitions:          5202
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N220 (before line 393), Function outgoing called from node N281, stack depth 5 [4ebeeb5a], stack [main, test, bobToRjh, sendEmail, outgoing]])
  Number of target states:       0

Time for analysis setup:          4.099s
  Time for loading CPAs:          0.815s
  Time for loading parser:        0.737s
  Time for CFA construction:      2.360s
    Time for parsing file(s):     0.673s
    Time for AST to CFA:          0.682s
    Time for CFA sanity check:    0.222s
    Time for post-processing:     0.626s
      Time for var class.:        0.340s
Time for Analysis:               22.942s
CPU time for analysis:           22.940s
Time for analyzing result:        0.005s
Total time for CPAchecker:       27.045s
Total CPU time for CPAchecker:   27.030s
Time for statistics:              0.205s

Time for Garbage Collector:       0.683s (in 54 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 72MB (    69 MiB) max;     45MB (    43 MiB) avg;     77MB (    74 MiB) peak
Used non-heap memory:             37MB (    35 MiB) max;     33MB (    31 MiB) avg;     37MB (    35 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        38MB (    37 MiB) max;     35MB (    33 MiB) avg
Total process virtual memory:   8087MB (  7713 MiB) max;   8072MB (  7698 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
