scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/email_spec7_product27_true-unreach-call_true-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_ebx4cvky/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 480: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 512: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 521: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 530: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 555: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 689: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 727: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 748: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 785: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 822: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 861: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 900: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 937: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 974: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1011: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1048: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1085: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1425: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1448: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1473: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1502: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1550: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1597: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1642: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1720: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1789: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1923: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2006: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2053: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2100: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2145: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2208: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2315: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2369: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2441: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2488: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2828: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2874: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2964: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2973: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2988: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2665: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            30752 (17% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  30546 (99%)
  Because of loop head:            82 (0%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         124 (0%)
  Times precision was empty:       14625 (48%)
  Times precision was {false}:     253 (1%)
  Times result was cached:         15742 (51%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      132 (0%)
  Times result was 'false':        527 (2%)
Number of strengthen sat checks:   0
Number of coverage checks:         42035
  BDD entailment checks:           2429
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       66
Number of predicates discovered:          5
Number of abstraction locations:          145
Max number of predicates per location:    2
Avg number of predicates per location:    1
Total predicates per abstraction:         18172
Max number of predicates per abstraction: 2
Avg number of predicates per abstraction: 47.20
Number of irrelevant predicates:          15496 (85%)
Number of preds handled by boolean abs:   134 (1%)
  Total number of models for allsat:      133
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.01

Time for post operator:                  2.769s
  Time for path formula creation:        2.594s
Time for strengthen operator:            0.262s
Time for prec operator:                  4.312s
  Time for abstraction:                  3.539s (Max:     0.041s, Count: 30752)
    Boolean abstraction:                 0.210s
    Solving time:                        0.510s (Max:     0.015s)
    Model enumeration time:              0.015s
    Time for BDD construction:           0.025s (Max:     0.007s)
Time for merge operator:                 0.360s
Time for coverage check:                 0.067s
  Time for BDD entailment checks:        0.057s
Total time for SMT solver (w/o itp):     0.525s

Number of path formula cache hits:   210809 (91%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     2.176s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               204
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         279 (count: 19125, min: 0, max: 86, avg: 0.01)
Time for BDD node cleanup:                             0.009s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.757s
  Time for transition matches:                         0.298s
  Time for transition assertions:                      0.001s
  Time for transition actions:                         0.009s
Automaton transfers with branching:                0
Automaton transfer successors:                       186336 (count: 186336, min: 1, max: 1, avg: 1.00) [1 x 186336]

CPA algorithm statistics
------------------------
Number of iterations:            138454
Max size of waitlist:            37
Average size of waitlist:        18
Number of computed successors:   161041
Max successors for one state:    2
Number of times merged:          19803
Number of times stopped:         21716
Number of times breaked:         124

Total time for CPA algorithm:        16.603s (Max:     1.202s)
  Time for choose from waitlist:      0.197s
  Time for precision adjustment:      6.193s
  Time for transfer relation:         7.077s
  Time for merge operator:            0.979s
  Time for stop operator:             0.437s
  Time for adding to reached set:     0.499s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   124
Avg. length of target path (in blocks):               13944 (count: 124, min: 65, max: 188, avg: 112.45)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   8.005s
  Counterexample analysis:                             6.924s (Max:     0.141s, Calls: 124)
    Refinement sat check:                              3.203s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.016s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.082s
  Precision update:                                    0.116s
  ARG update:                                          0.635s

Length of refined path (in blocks):                   13449 (count: 124, min: 64, max: 187, avg: 108.46)
Number of affected states:                             1380 (count: 124, min: 1, max: 104, avg: 11.13)
Length (states) of path with itp 'true':              11945 (count: 124, min: 0, max: 185, avg: 96.33)
Length (states) of path with itp non-trivial itp:      1380 (count: 124, min: 1, max: 104, avg: 11.13)
Length (states) of path with itp 'false':               124 (count: 124, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:          13 (count: 124, min: 0, max: 1, avg: 0.10)
Equal non-trivial interpolants along paths:            1243 (count: 124, min: 0, max: 102, avg: 10.02)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                124
Number of successful refinements:     124
Number of failed refinements:         0
Max. size of reached set before ref.: 5945
Max. size of reached set after ref.:  3814
Avg. size of reached set before ref.: 2967.52
Avg. size of reached set after ref.:  1859.19

Total time for CEGAR algorithm:      25.832s
Time for refinements:                 8.942s
Average time for refinement:          0.072s
Max time for refinement:              0.162s

Code Coverage
-----------------------------
  Function coverage:      0.605
  Visited lines:          674
  Total lines:            1421
  Line coverage:          0.474
  Visited conditions:     192
  Total conditions:       490
  Condition coverage:     0.392

CPAchecker general statistics
-----------------------------
Number of program locations:     1960
Number of CFA edges:             2222
Number of relevant variables:    353
Number of functions:             114
Number of loops:                 4
Size of reached set:             1365
  Number of reached locations:   591 (30%)
    Avg states per location:     2
    Max states per location:     11 (at node N373)
  Number of reached functions:   69 (61%)
  Number of partitions:          1357
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N262 (before line 465), Function incoming called from node N177, stack depth 9 [3021b80f], stack [main, test, bobToRjh, sendEmail, outgoing, outgoing__wrappee__AddressBook, outgoing__wrappee__AutoResponder, mail, incoming]])
  Number of target states:       0
  Size of final wait list        23

Time for analysis setup:          4.408s
  Time for loading CPAs:          0.874s
  Time for loading parser:        0.699s
  Time for CFA construction:      2.683s
    Time for parsing file(s):     0.815s
    Time for AST to CFA:          0.813s
    Time for CFA sanity check:    0.226s
    Time for post-processing:     0.673s
      Time for var class.:        0.356s
Time for Analysis:               25.832s
CPU time for analysis:           25.840s
Total time for CPAchecker:       30.244s
Total CPU time for CPAchecker:   30.240s
Time for statistics:              0.135s

Time for Garbage Collector:       0.703s (in 52 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 74MB (    70 MiB) max;     47MB (    44 MiB) avg;     76MB (    72 MiB) peak
Used non-heap memory:             37MB (    35 MiB) max;     33MB (    32 MiB) avg;     38MB (    36 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        39MB (    37 MiB) max;     35MB (    34 MiB) avg
Total process virtual memory:   8087MB (  7712 MiB) max;   8074MB (  7700 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
